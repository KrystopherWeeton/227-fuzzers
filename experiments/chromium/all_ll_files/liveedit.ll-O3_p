; ModuleID = '../../v8/src/debug/liveedit.cc'
source_filename = "../../v8/src/debug/liveedit.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.865", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.878", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.888", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.899", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.974", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1023"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1034", i32, i8, i8, i32, i32, %"class.std::__1::vector.1040", %"class.std::__1::vector.1040", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1047", i64, %"class.std::__1::unordered_map.1048", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1104", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1142", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1176", %"class.std::__1::vector.1180", %"class.std::__1::vector.1180", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1366" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type { %"class.v8::internal::ThreadId", i8*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadManager"* }
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheRegExp", [4 x %"class.v8::internal::CompilationSubCache"*], i8, [7 x i8] }>
%"class.v8::internal::CompilationCacheScript" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationSubCache" = type { i32 (...)**, %"class.v8::internal::Isolate"*, i32, [2 x %"class.v8::internal::Object"] }
%"class.v8::internal::CompilationCacheEval" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationCacheRegExp" = type { %"class.v8::internal::CompilationSubCache" }
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.738", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.762", %"class.v8::internal::Handle.774", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.757" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.740", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.752", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.740" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.748" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.743" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.741", %union.anon.742 }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%union.anon.742 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::Optional.752" = type { %"class.v8::base::internal::OptionalBase.753" }
%"class.v8::base::internal::OptionalBase.753" = type { %"struct.v8::base::internal::OptionalStorage.754" }
%"struct.v8::base::internal::OptionalStorage.754" = type { %"struct.v8::base::internal::OptionalStorageBase.755" }
%"struct.v8::base::internal::OptionalStorageBase.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { i8 }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.762" = type { %"class.std::__1::__deque_base.763" }
%"class.std::__1::__deque_base.763" = type { %"struct.std::__1::__split_buffer.764", i64, %"class.std::__1::__compressed_pair.770" }
%"struct.std::__1::__split_buffer.764" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.765" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Handle.774" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.777" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.794", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.800", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.800", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.800" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.788", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::vector.808", %"class.std::__1::unique_ptr.815", %"class.std::__1::vector.822", %"class.std::__1::unique_ptr.829", i64, %"class.std::__1::vector.835", %"class.std::__1::vector.843", %"class.std::__1::vector.851", i8, i8, i32 }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::GlobalHandles::NodeSpace.818"* }
%"class.v8::internal::GlobalHandles::NodeSpace.818" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.std::__1::pair.837"*, %"struct.std::__1::pair.837"*, %"class.std::__1::__compressed_pair.838" }
%"struct.std::__1::pair.837" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::pair.837"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.std::__1::pair.845"*, %"struct.std::__1::pair.845"*, %"class.std::__1::__compressed_pair.846" }
%"struct.std::__1::pair.845" = type opaque
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::pair.845"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.853" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.858", %"class.std::__1::vector.865" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i64**, i64**, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i64** }
%"class.v8::internal::ThreadManager" = type { %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"class.v8::internal::ThreadId", %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::ThreadState"*, %"class.v8::internal::Isolate"* }
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.872" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.878" = type { %"struct.std::__1::__atomic_base.879" }
%"struct.std::__1::__atomic_base.879" = type { %"struct.std::__1::__cxx_atomic_impl.880" }
%"struct.std::__1::__cxx_atomic_impl.880" = type { %"struct.std::__1::__cxx_atomic_base_impl.881" }
%"struct.std::__1::__cxx_atomic_base_impl.881" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.888" = type { %"struct.std::__1::__atomic_base.889" }
%"struct.std::__1::__atomic_base.889" = type { %"struct.std::__1::__cxx_atomic_impl.890" }
%"struct.std::__1::__cxx_atomic_impl.890" = type { %"struct.std::__1::__cxx_atomic_base_impl.891" }
%"struct.std::__1::__cxx_atomic_base_impl.891" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.895 }
%union.anon.895 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.899" = type { %"class.std::__1::__hash_table.900" }
%"class.std::__1::__hash_table.900" = type <{ %"class.std::__1::unique_ptr.901", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.919", [4 x i8] }>
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903", %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.904"** }
%"struct.std::__1::__hash_node_base.904" = type { %"struct.std::__1::__hash_node_base.904"* }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.std::__1::__bucket_list_deallocator.906" }
%"class.std::__1::__bucket_list_deallocator.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"struct.std::__1::__hash_node_base.904" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::Handle.931", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.932", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.931" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.953", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.959", %"class.std::__1::vector.965", %"struct.std::__1::pair.973" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"class.std::__1::unique_ptr.941"*, %"class.std::__1::unique_ptr.941"*, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::unique_ptr.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.std::__1::unique_ptr.941"* }
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"struct.std::__1::pair.973" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.977", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.977" = type { %"class.std::__1::__hash_table.978" }
%"class.std::__1::__hash_table.978" = type <{ %"class.std::__1::unique_ptr.979", %"class.std::__1::__compressed_pair.989", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.998", [4 x i8] }>
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981", %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.982"** }
%"struct.std::__1::__hash_node_base.982" = type { %"struct.std::__1::__hash_node_base.982"* }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.std::__1::__bucket_list_deallocator.984" }
%"class.std::__1::__bucket_list_deallocator.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.982" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1371, i32, [4 x i8] }>
%union.anon.1371 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.1006, %"class.v8::internal::Vector.1008", i32, i8, [3 x i8] }>
%union.anon.1006 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector.1008" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1009" }
%"class.std::__1::deque.1009" = type { %"class.std::__1::__deque_base.1010" }
%"class.std::__1::__deque_base.1010" = type { %"struct.std::__1::__split_buffer.1011", i64, %"class.std::__1::__compressed_pair.1018" }
%"struct.std::__1::__split_buffer.1011" = type { %"struct.std::__1::pair.1012"**, %"struct.std::__1::pair.1012"**, %"struct.std::__1::pair.1012"**, %"class.std::__1::__compressed_pair.1013" }
%"struct.std::__1::pair.1012" = type opaque
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"struct.std::__1::pair.1012"** }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1023" = type { %"class.std::__1::__vector_base.1024" }
%"class.std::__1::__vector_base.1024" = type { %"class.v8::internal::Handle.741"*, %"class.v8::internal::Handle.741"*, %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.v8::internal::Handle.741"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1030" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1030" = type { %"class.std::__1::__vector_base.1031" }
%"class.std::__1::__vector_base.1031" = type { %"struct.std::__1::pair.1012"*, %"struct.std::__1::pair.1012"*, %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::pair.1012"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.883", i32, %"class.v8::Local.0" }
%"class.v8::Local.883" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.858", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1040" = type { %"class.std::__1::__vector_base.1041" }
%"class.std::__1::__vector_base.1041" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1047" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1048" = type { %"class.std::__1::__hash_table.1049" }
%"class.std::__1::__hash_table.1049" = type <{ %"class.std::__1::unique_ptr.1050", %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1065", %"class.std::__1::__compressed_pair.1068", [4 x i8] }>
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052", %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"struct.std::__1::__hash_node_base.1053"** }
%"struct.std::__1::__hash_node_base.1053" = type { %"struct.std::__1::__hash_node_base.1053"* }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.std::__1::__bucket_list_deallocator.1055" }
%"class.std::__1::__bucket_list_deallocator.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"struct.std::__1::__hash_node_base.1053" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1072", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1101", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1102", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1072" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1097, %union.anon.1099, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1097 = type { i64 }
%union.anon.1099 = type { i64 }
%"class.std::__1::weak_ptr.1101" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1102" = type { %"class.v8::PersistentBase.1103" }
%"class.v8::PersistentBase.1103" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1073", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1073" = type { %"class.std::__1::__hash_table.1074" }
%"class.std::__1::__hash_table.1074" = type <{ %"class.std::__1::unique_ptr.1075", %"class.std::__1::__compressed_pair.1085", %"class.std::__1::__compressed_pair.1090", %"class.std::__1::__compressed_pair.1093", [4 x i8] }>
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077", %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::__hash_node_base.1078"** }
%"struct.std::__1::__hash_node_base.1078" = type { %"struct.std::__1::__hash_node_base.1078"* }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.std::__1::__bucket_list_deallocator.1080" }
%"class.std::__1::__bucket_list_deallocator.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::__hash_node_base.1078" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1133", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1109", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1113", %"class.std::__1::unique_ptr.1119", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1125", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1109" = type { %"struct.std::__1::__atomic_base.1110" }
%"struct.std::__1::__atomic_base.1110" = type { %"struct.std::__1::__cxx_atomic_impl.1111" }
%"struct.std::__1::__cxx_atomic_impl.1111" = type { %"struct.std::__1::__cxx_atomic_base_impl.1112" }
%"struct.std::__1::__cxx_atomic_base_impl.1112" = type { i32 }
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.858" }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.std::__1::pair.1127"*, %"struct.std::__1::pair.1127"*, %"class.std::__1::__compressed_pair.1128" }
%"struct.std::__1::pair.1127" = type opaque
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"struct.std::__1::pair.1127"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.884", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.884" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1150" }
%"class.std::__1::unordered_map.1150" = type { %"class.std::__1::__hash_table.1151" }
%"class.std::__1::__hash_table.1151" = type <{ %"class.std::__1::unique_ptr.1152", %"class.std::__1::__compressed_pair.1162", %"class.std::__1::__compressed_pair.1167", %"class.std::__1::__compressed_pair.1170", [4 x i8] }>
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154", %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"struct.std::__1::__hash_node_base.1155"** }
%"struct.std::__1::__hash_node_base.1155" = type { %"struct.std::__1::__hash_node_base.1155"* }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.std::__1::__bucket_list_deallocator.1157" }
%"class.std::__1::__bucket_list_deallocator.1157" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"struct.std::__1::__hash_node_base.1155" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1176" = type { %"struct.std::__1::__atomic_base.1177" }
%"struct.std::__1::__atomic_base.1177" = type { %"struct.std::__1::__cxx_atomic_impl.1178" }
%"struct.std::__1::__cxx_atomic_impl.1178" = type { %"struct.std::__1::__cxx_atomic_base_impl.1179" }
%"struct.std::__1::__cxx_atomic_base_impl.1179" = type { %"class.std::__1::vector.1180"* }
%"class.std::__1::vector.1180" = type { %"class.std::__1::__vector_base.1181" }
%"class.std::__1::__vector_base.1181" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1182" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.v8::debug::LiveEditResult" = type { i32, i8, %"class.v8::Local.1188", %"class.v8::Local.886", i32, i32 }
%"class.v8::Local.1188" = type { %"class.v8::debug::Script"* }
%"class.v8::debug::Script" = type { i8 }
%"class.v8::Local.886" = type { %"class.v8::String"* }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::SourcePositionTableBuilder" = type { i32, %"class.v8::internal::ZoneVector.1616", %"struct.v8::internal::PositionTableEntry" }
%"class.v8::internal::ZoneVector.1616" = type { %"class.std::__1::vector.1617" }
%"class.std::__1::vector.1617" = type { %"class.std::__1::__vector_base.1618" }
%"class.std::__1::__vector_base.1618" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1235", %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.v8::internal::ZoneAllocator.1621" }
%"class.v8::internal::ZoneAllocator.1621" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.v8::internal::SourcePositionTableIterator" = type { %"class.v8::internal::Vector.1008", %"class.v8::internal::Handle.1622", i32, [4 x i8], %"struct.v8::internal::PositionTableEntry", i32, i32 }
%"class.v8::internal::Handle.1622" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef" = type { %"class.v8::internal::SharedFunctionInfo" }
%"class.v8::internal::HeapObjectIterator" = type { %"class.v8::internal::Heap"*, %"class.std::__1::unique_ptr.1585", i32, %"class.v8::internal::HeapObjectsFilter"*, %"class.v8::internal::SpaceIterator"*, %"class.std::__1::unique_ptr.1591" }
%"class.std::__1::unique_ptr.1585" = type { %"class.std::__1::__compressed_pair.1586" }
%"class.std::__1::__compressed_pair.1586" = type { %"struct.std::__1::__compressed_pair_elem.1587" }
%"struct.std::__1::__compressed_pair_elem.1587" = type { %"class.v8::internal::SafepointScope"* }
%"class.v8::internal::SafepointScope" = type opaque
%"class.v8::internal::HeapObjectsFilter" = type opaque
%"class.v8::internal::SpaceIterator" = type <{ i32 (...)**, %"class.v8::internal::Heap"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1591" = type { %"class.std::__1::__compressed_pair.1592" }
%"class.std::__1::__compressed_pair.1592" = type { %"struct.std::__1::__compressed_pair_elem.1593" }
%"struct.std::__1::__compressed_pair_elem.1593" = type { %"class.v8::internal::ObjectIterator"* }
%"class.v8::internal::ObjectIterator" = type { i32 (...)** }
%"struct.v8::internal::(anonymous namespace)::FunctionData" = type <{ %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::MaybeHandle", %"class.std::__1::vector.1340", %"class.std::__1::vector.1348", i32, [4 x i8] }>
%"class.v8::internal::FunctionLiteral" = type { %"class.v8::internal::Expression", i32, i32, i32, i32, i32, i32, %"class.v8::internal::AstConsString"*, %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::ZoneList.1261", %"class.v8::internal::AstConsString"*, %"class.v8::internal::Handle.1007", %"class.v8::internal::ProducedPreparseData"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%"class.v8::internal::DeclarationScope" = type <{ %"class.v8::internal::Scope.base", i16, i8, [2 x i8], i32, [4 x i8], %"class.v8::internal::ZoneList", %"class.v8::base::ThreadedListBase.1229", %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, %"class.v8::internal::PreparseDataBuilder"*, %"struct.v8::internal::DeclarationScope::RareData"* }>
%"class.v8::internal::Scope.base" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1225", %"class.v8::base::ThreadedListBase.1227", %"class.v8::internal::Handle.1228", i32, i32, i32, i32, i8, i16 }>
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.1225", %"class.v8::base::ThreadedListBase.1227", %"class.v8::internal::Handle.1228", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1223" }
%"class.v8::base::TemplateHashMapImpl.1223" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1224"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry.1224" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::base::ThreadedListBase.1225" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.1226, %"class.v8::internal::VariableProxy"* }
%union.anon.1226 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.1227" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.1228" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ZoneList" = type { %"class.v8::internal::Variable"**, i32, i32 }
%"class.v8::base::ThreadedListBase.1229" = type { %"class.v8::internal::SloppyBlockFunctionStatement"*, %"class.v8::internal::SloppyBlockFunctionStatement"** }
%"class.v8::internal::SloppyBlockFunctionStatement" = type { %"class.v8::internal::Statement", %"class.v8::internal::Variable"*, %"class.v8::internal::Statement"*, %"class.v8::internal::SloppyBlockFunctionStatement"* }
%"class.v8::internal::Statement" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::internal::PreparseDataBuilder" = type <{ %"class.v8::internal::PreparseDataBuilder"*, %"class.v8::internal::PreparseDataBuilder::ByteData", %union.anon.1240, %"class.v8::internal::DeclarationScope"*, i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::PreparseDataBuilder::ByteData" = type <{ %union.anon.1230, i8, [7 x i8] }>
%union.anon.1230 = type { %struct.anon.1231 }
%struct.anon.1231 = type { %"class.std::__1::vector.1232"*, i32 }
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%union.anon.1240 = type { %"class.v8::internal::ScopedList" }
%"class.v8::internal::ScopedList" = type { %"class.std::__1::vector.1241"*, i64, i64 }
%"class.std::__1::vector.1241" = type { %"class.std::__1::__vector_base.1373" }
%"class.std::__1::__vector_base.1373" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { i8** }
%"struct.v8::internal::DeclarationScope::RareData" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"* }
%"class.v8::internal::ZoneList.1261" = type { %"class.v8::internal::Statement"**, i32, i32 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle.1007", %"struct.v8::internal::AstConsString::Segment" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }
%"class.v8::internal::Handle.1007" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::ProducedPreparseData" = type { i32 (...)** }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.std::__1::vector.1340" = type { %"class.std::__1::__vector_base.1341" }
%"class.std::__1::__vector_base.1341" = type { %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"*, %"class.std::__1::__compressed_pair.1343" }
%"class.v8::internal::Handle.1342" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"class.v8::internal::Handle.1342"* }
%"class.std::__1::vector.1348" = type { %"class.std::__1::__vector_base.1349" }
%"class.std::__1::__vector_base.1349" = type { %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"*, %"class.std::__1::__compressed_pair.1351" }
%"class.v8::internal::Handle.1350" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.v8::internal::Handle.1350"* }
%"class.v8::internal::JSGeneratorObject" = type { %"class.v8::internal::TorqueGeneratedJSGeneratorObject" }
%"class.v8::internal::TorqueGeneratedJSGeneratorObject" = type { %"class.v8::internal::JSObject" }
%"class.std::__1::tuple.1524" = type { %"struct.std::__1::__tuple_impl.1525" }
%"struct.std::__1::__tuple_impl.1525" = type { %"class.std::__1::__tuple_leaf.1526" }
%"class.std::__1::__tuple_leaf.1526" = type { i32* }
%"class.std::__1::tuple.1488" = type { i8 }
%"class.std::__1::unordered_map.1495" = type { %"class.std::__1::__hash_table.1496" }
%"class.std::__1::__hash_table.1496" = type <{ %"class.std::__1::unique_ptr.1497", %"class.std::__1::__compressed_pair.1507", %"class.std::__1::__compressed_pair.1512", %"class.std::__1::__compressed_pair.1515", [4 x i8] }>
%"class.std::__1::unique_ptr.1497" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499", %"struct.std::__1::__compressed_pair_elem.1501" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"struct.std::__1::__hash_node_base.1500"** }
%"struct.std::__1::__hash_node_base.1500" = type { %"struct.std::__1::__hash_node_base.1500"* }
%"struct.std::__1::__compressed_pair_elem.1501" = type { %"class.std::__1::__bucket_list_deallocator.1502" }
%"class.std::__1::__bucket_list_deallocator.1502" = type { %"class.std::__1::__compressed_pair.1503" }
%"class.std::__1::__compressed_pair.1503" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1507" = type { %"struct.std::__1::__compressed_pair_elem.1508" }
%"struct.std::__1::__compressed_pair_elem.1508" = type { %"struct.std::__1::__hash_node_base.1500" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::tuple.1538" = type { %"struct.std::__1::__tuple_impl.1539" }
%"struct.std::__1::__tuple_impl.1539" = type { %"class.std::__1::__tuple_leaf.1540" }
%"class.std::__1::__tuple_leaf.1540" = type { %"class.v8::internal::FunctionLiteral"** }
%"class.std::__1::map.1448" = type { %"class.std::__1::__tree.1449" }
%"class.std::__1::__tree.1449" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1450", %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unordered_map.1297" = type { %"class.std::__1::__hash_table.1298" }
%"class.std::__1::__hash_table.1298" = type <{ %"class.std::__1::unique_ptr.1299", %"class.std::__1::__compressed_pair.1309", %"class.std::__1::__compressed_pair.1314", %"class.std::__1::__compressed_pair.1317", [4 x i8] }>
%"class.std::__1::unique_ptr.1299" = type { %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301", %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"struct.std::__1::__hash_node_base.1302"** }
%"struct.std::__1::__hash_node_base.1302" = type { %"struct.std::__1::__hash_node_base.1302"* }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.std::__1::__bucket_list_deallocator.1304" }
%"class.std::__1::__bucket_list_deallocator.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"struct.std::__1::__hash_node_base.1302" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.1457" = type { %"class.std::__1::__hash_table.1458" }
%"class.std::__1::__hash_table.1458" = type <{ %"class.std::__1::unique_ptr.1459", %"class.std::__1::__compressed_pair.1469", %"class.std::__1::__compressed_pair.1474", %"class.std::__1::__compressed_pair.1477", [4 x i8] }>
%"class.std::__1::unique_ptr.1459" = type { %"class.std::__1::__compressed_pair.1460" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.1461", %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1461" = type { %"struct.std::__1::__hash_node_base.1462"** }
%"struct.std::__1::__hash_node_base.1462" = type { %"struct.std::__1::__hash_node_base.1462"* }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.std::__1::__bucket_list_deallocator.1464" }
%"class.std::__1::__bucket_list_deallocator.1464" = type { %"class.std::__1::__compressed_pair.1465" }
%"class.std::__1::__compressed_pair.1465" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"struct.std::__1::__hash_node_base.1462" }
%"class.std::__1::__compressed_pair.1474" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent" = type { i32, i32, %union.anon.1402 }
%union.anon.1402 = type { %"class.v8::internal::FunctionLiteral"* }
%"class.std::__1::vector.1400" = type { %"class.std::__1::__vector_base.1401" }
%"class.std::__1::__vector_base.1401" = type { %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* }
%"class.std::__1::stack" = type { %"class.std::__1::deque.1410" }
%"class.std::__1::deque.1410" = type { %"class.std::__1::__deque_base.1411" }
%"class.std::__1::__deque_base.1411" = type { %"struct.std::__1::__split_buffer.1412", i64, %"class.std::__1::__compressed_pair.1419" }
%"struct.std::__1::__split_buffer.1412" = type { %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"**, %"class.std::__1::__compressed_pair.1414" }
%"struct.std::__1::pair.1413" = type { %"class.v8::internal::FunctionLiteral"*, %"struct.v8::internal::(anonymous namespace)::FunctionLiteralChange" }
%"struct.v8::internal::(anonymous namespace)::FunctionLiteralChange" = type { i32, i32, i8, %"class.v8::internal::FunctionLiteral"* }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"struct.std::__1::pair.1413"** }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"*, %"class.std::__1::__compressed_pair.1191" }
%"struct.v8::internal::SourceChangeRange" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.1191" = type { %"struct.std::__1::__compressed_pair_elem.1192" }
%"struct.std::__1::__compressed_pair_elem.1192" = type { %"struct.v8::internal::SourceChangeRange"* }
%"class.v8::internal::UnoptimizedCompileState" = type { i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::PendingCompilationErrorHandler", %"class.v8::internal::Logger"*, %"class.std::__1::unique_ptr.1202" }
%"class.v8::internal::PendingCompilationErrorHandler" = type { i8, i8, i8, [5 x i8], %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails", %"class.std::__1::forward_list" }
%"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" = type <{ i32, i32, i32, [4 x i8], %union.anon.1196, i32, [4 x i8] }>
%union.anon.1196 = type { %"class.v8::internal::AstRawString"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.v8::internal::PendingCompilationErrorHandler::MessageDetails" }
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* }
%"class.v8::internal::UnoptimizedCompileState::ParallelTasks" = type { %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::forward_list.1205" }
%"class.std::__1::forward_list.1205" = type { %"class.std::__1::__forward_list_base.1206" }
%"class.std::__1::__forward_list_base.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"struct.std::__1::__forward_begin_node.1209" }
%"struct.std::__1::__forward_begin_node.1209" = type { %"struct.std::__1::__forward_list_node.1210"* }
%"struct.std::__1::__forward_list_node.1210" = type { %"struct.std::__1::__forward_begin_node.1209", %"struct.std::__1::pair.1365" }
%"struct.std::__1::pair.1365" = type { %"class.v8::internal::FunctionLiteral"*, i64 }
%"class.v8::internal::ParseInfo" = type <{ %"class.v8::internal::UnoptimizedCompileFlags", [4 x i8], %"class.v8::internal::UnoptimizedCompileState"*, %"class.std::__1::unique_ptr.1217", %"class.v8::Extension"*, %"class.v8::internal::DeclarationScope"*, i64, i32, i32, %"class.std::__1::unique_ptr.1243", %"class.std::__1::unique_ptr.1249", %"class.std::__1::unique_ptr.1255", %"class.v8::internal::AstRawString"*, %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::SourceRangeMap"*, %"class.v8::internal::FunctionLiteral"*, i8, [7 x i8] }>
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.v8::internal::Zone"* }
%"class.v8::Extension" = type <{ i32 (...)**, i8*, i64, %"class.v8::String::ExternalOneByteStringResource"*, i32, [4 x i8], i8**, i8, [7 x i8] }>
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1243" = type { %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.v8::internal::Utf16CharacterStream"* }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.v8::internal::ConsumedPreparseData"* }
%"class.v8::internal::ConsumedPreparseData" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1255" = type { %"class.std::__1::__compressed_pair.1256" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"class.v8::internal::AstValueFactory"* }
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::internal::SourceRangeMap" = type opaque
%"class.std::__1::vector.1262" = type { %"class.std::__1::__vector_base.1263" }
%"class.std::__1::__vector_base.1263" = type { %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"**, %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.v8::internal::FunctionLiteral"** }
%"class.std::__1::unordered_map.1269" = type { %"class.std::__1::__hash_table.1270" }
%"class.std::__1::__hash_table.1270" = type <{ %"class.std::__1::unique_ptr.1271", %"class.std::__1::__compressed_pair.1281", %"class.std::__1::__compressed_pair.1286", %"class.std::__1::__compressed_pair.1291", [4 x i8] }>
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273", %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"struct.std::__1::__hash_node_base.1274"** }
%"struct.std::__1::__hash_node_base.1274" = type { %"struct.std::__1::__hash_node_base.1274"* }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.std::__1::__bucket_list_deallocator.1276" }
%"class.std::__1::__bucket_list_deallocator.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"struct.std::__1::__hash_node_base.1274" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::(anonymous namespace)::FunctionDataMap" = type { %"class.v8::internal::ThreadVisitor", %"class.std::__1::map" }
%"class.v8::internal::ThreadVisitor" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1321" }
%"class.std::__1::__tree.1321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1322", %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.1331" = type { %"class.std::__1::__tree.1332" }
%"class.std::__1::__tree.1332" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1333", %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::IsCompiledScope" = type <{ %"class.v8::internal::MaybeHandle.1359", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle.1359" = type { i64* }
%"class.v8::internal::SharedFunctionInfo::ScriptIterator" = type <{ %"class.v8::internal::Handle.1360", i32, [4 x i8] }>
%"class.v8::internal::Handle.1360" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Factory" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1483" }
%"struct.std::__1::pair.1483" = type { %"struct.std::__1::pair.1447", %"class.v8::internal::FunctionLiteral"* }
%"struct.std::__1::pair.1447" = type { i32, i32 }
%"struct.std::__1::pair.1431" = type { %"class.v8::internal::FunctionLiteral"*, %"struct.v8::internal::(anonymous namespace)::FunctionLiteralChange" }
%"struct.std::__1::__hash_node.1555" = type { %"struct.std::__1::__hash_node_base.1302", i64, %"struct.std::__1::__hash_value_type.1554" }
%"struct.std::__1::__hash_value_type.1554" = type { %"struct.std::__1::pair.1330" }
%"struct.std::__1::pair.1330" = type { %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"* }
%"class.std::__1::__tree_node.1576" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1577" }
%"struct.std::__1::__value_type.1577" = type { %"struct.std::__1::pair.1578" }
%"struct.std::__1::pair.1578" = type { %"struct.std::__1::pair.1447", %"struct.v8::internal::(anonymous namespace)::FunctionData" }
%"class.std::__1::__tree_node.1666" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1667", [4 x i8] }
%"struct.std::__1::__value_type.1667" = type { %"struct.std::__1::pair.1361" }
%"struct.std::__1::pair.1361" = type { i32, i32 }
%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput" = type { %"class.v8::internal::(anonymous namespace)::SubrangableInput", %"class.v8::internal::Handle.1007", %"class.v8::internal::Handle.1007", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", i32, i32, i32, i32 }
%"class.v8::internal::(anonymous namespace)::SubrangableInput" = type { %"class.v8::internal::(anonymous namespace)::Comparator::Input" }
%"class.v8::internal::(anonymous namespace)::Comparator::Input" = type { i32 (...)** }
%"class.v8::internal::(anonymous namespace)::LineEndsWrapper" = type <{ %"class.v8::internal::Handle.1363", i32, [4 x i8] }>
%"class.v8::internal::Handle.1363" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput" = type { %"class.v8::internal::(anonymous namespace)::SubrangableOutput", %"class.v8::internal::Isolate"*, %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::Handle.1007", %"class.v8::internal::Handle.1007", i32, i32, %"class.std::__1::vector.1189"* }
%"class.v8::internal::(anonymous namespace)::SubrangableOutput" = type { %"class.v8::internal::(anonymous namespace)::Comparator::Output" }
%"class.v8::internal::(anonymous namespace)::Comparator::Output" = type { i32 (...)** }
%"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef" = type { %"class.v8::internal::JSMessageObject" }
%"class.v8::internal::JSMessageObject" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals" = type { %"class.v8::internal::AstTraversalVisitor.base", %"class.std::__1::vector.1262"* }
%"class.v8::internal::AstTraversalVisitor.base" = type <{ i64, i8, [7 x i8], %"class.v8::internal::AstNode"*, i32 }>
%"class.v8::Message" = type { i8 }
%"class.v8::internal::AstTraversalVisitor" = type <{ i64, i8, [7 x i8], %"class.v8::internal::AstNode"*, i32, [4 x i8] }>
%"class.v8::internal::(anonymous namespace)::Differencer" = type <{ %"class.v8::internal::(anonymous namespace)::Comparator::Input"*, %"class.std::__1::map.1640", i32, i32, i32, [4 x i8] }>
%"class.std::__1::map.1640" = type { %"class.std::__1::__tree.1641" }
%"class.std::__1::__tree.1641" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1642", %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__tree_node.1657" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1658" }
%"struct.std::__1::__value_type.1658" = type { %"struct.std::__1::pair.1659" }
%"struct.std::__1::pair.1659" = type { %"struct.std::__1::pair.1447", i32 }
%"class.v8::internal::CaseClause" = type { %"class.v8::internal::Expression"*, %"class.v8::internal::ZoneList.1261" }
%"class.v8::internal::Block" = type { %"class.v8::internal::BreakableStatement", %"class.v8::internal::ZoneList.1261", %"class.v8::internal::Scope"* }
%"class.v8::internal::BreakableStatement" = type { %"class.v8::internal::Statement" }
%"class.v8::internal::ZoneList.1382" = type { %"class.v8::internal::ClassLiteralProperty"**, i32, i32 }
%"class.v8::internal::ClassLiteralProperty" = type { %"class.v8::internal::LiteralProperty", i8, i8, i8, %"class.v8::internal::Variable"* }
%"class.v8::internal::LiteralProperty" = type { %"class.v8::internal::PointerWithPayload", %"class.v8::internal::Expression"* }
%"class.v8::internal::PointerWithPayload" = type { i64 }
%"class.v8::internal::ZoneList.1383" = type { %"class.v8::internal::ClassLiteralStaticElement"**, i32, i32 }
%"class.v8::internal::ClassLiteralStaticElement" = type { i8, %union.anon.1384 }
%union.anon.1384 = type { %"class.v8::internal::ClassLiteralProperty"* }
%"class.v8::internal::ObjectLiteralProperty" = type <{ %"class.v8::internal::LiteralProperty", i8, i8, [6 x i8] }>
%"struct.v8::internal::NaryOperation::NaryOperationEntry" = type <{ %"class.v8::internal::Expression"*, i32, [4 x i8] }>
%"class.v8::internal::Assignment" = type { %"class.v8::internal::Expression", %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::ZoneList.1388" = type { %"class.v8::internal::Expression"**, i32, i32 }
%"class.v8::internal::JavaScriptFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"class.std::__1::vector.1562" = type { %"class.std::__1::__vector_base.1563" }
%"class.std::__1::__vector_base.1563" = type { %"class.v8::internal::Handle.740"*, %"class.v8::internal::Handle.740"*, %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.v8::internal::Handle.740"* }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::StringShape" = type { i32 }
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SlicedString" = type { %"class.v8::internal::TorqueGeneratedSlicedString" }
%"class.v8::internal::TorqueGeneratedSlicedString" = type { %"class.v8::internal::String" }
%"class.v8::internal::ThinString" = type { %"class.v8::internal::TorqueGeneratedThinString" }
%"class.v8::internal::TorqueGeneratedThinString" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::(anonymous namespace)::TokensCompareInput" = type { %"class.v8::internal::(anonymous namespace)::Comparator::Input", %"class.v8::internal::Handle.1007", i32, i32, %"class.v8::internal::Handle.1007", i32, i32 }
%"class.v8::internal::(anonymous namespace)::TokensCompareOutput" = type { %"class.v8::internal::(anonymous namespace)::Comparator::Output", %"class.std::__1::vector.1189"*, i32, i32 }

$_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_ = comdat any

$_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIN2v88internal6HandleINS2_10JSFunctionEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal6HandleINS2_17JSGeneratorObjectEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_ = comdat any

$_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN2v88internal12_GLOBAL__N_115FunctionDataMapE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)* @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*)* @_ZN2v88internal12_GLOBAL__N_115FunctionDataMapD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*)* @_ZN2v88internal12_GLOBAL__N_115FunctionDataMapD0Ev to i8*)] }, align 8
@__func__._ZN2v88internal12_GLOBAL__N_128TranslateSourcePositionTableEPNS0_7IsolateENS0_6HandleINS0_13BytecodeArrayEEERKNSt3__16vectorINS0_17SourceChangeRangeENS7_9allocatorIS9_EEEE = private unnamed_addr constant [29 x i8] c"TranslateSourcePositionTable\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal12_GLOBAL__N_121LineArrayCompareInputE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*)* @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput10GetLength1Ev to i8*), i8* bitcast (i32 (%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*)* @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput10GetLength2Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput6EqualsEii to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)* @_ZN2v88internal12_GLOBAL__N_110Comparator5InputD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*)* @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInputD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput12SetSubrange1Eii to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput12SetSubrange2Eii to i8*)] }, align 8
@_ZTVN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutputE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"*, i32, i32, i32, i32)* @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutput8AddChunkEiiii to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*)* @_ZN2v88internal12_GLOBAL__N_110Comparator6OutputD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"*)* @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutputD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutput12SetSubrange1Eii to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutput12SetSubrange2Eii to i8*)] }, align 8
@_ZTVN2v88internal12_GLOBAL__N_118TokensCompareInputE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.v8::internal::(anonymous namespace)::TokensCompareInput"*)* @_ZN2v88internal12_GLOBAL__N_118TokensCompareInput10GetLength1Ev to i8*), i8* bitcast (i32 (%"class.v8::internal::(anonymous namespace)::TokensCompareInput"*)* @_ZN2v88internal12_GLOBAL__N_118TokensCompareInput10GetLength2Ev to i8*), i8* bitcast (i1 (%"class.v8::internal::(anonymous namespace)::TokensCompareInput"*, i32, i32)* @_ZN2v88internal12_GLOBAL__N_118TokensCompareInput6EqualsEii to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)* @_ZN2v88internal12_GLOBAL__N_110Comparator5InputD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokensCompareInput"*)* @_ZN2v88internal12_GLOBAL__N_118TokensCompareInputD0Ev to i8*)] }, align 8
@_ZTVN2v88internal12_GLOBAL__N_119TokensCompareOutputE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokensCompareOutput"*, i32, i32, i32, i32)* @_ZN2v88internal12_GLOBAL__N_119TokensCompareOutput8AddChunkEiiii to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*)* @_ZN2v88internal12_GLOBAL__N_110Comparator6OutputD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::TokensCompareOutput"*)* @_ZN2v88internal12_GLOBAL__N_119TokensCompareOutputD0Ev to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8LiveEdit11PatchScriptEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEENS4_INS0_6StringEEEbPNS_5debug14LiveEditResultE(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext, %"struct.v8::debug::LiveEditResult"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64*, i8 }, align 8
  %7 = alloca { i64*, i8 }, align 8
  %8 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %9 = alloca %"class.v8::internal::Zone", align 8
  %10 = alloca %"class.v8::internal::SourcePositionTableBuilder", align 8
  %11 = alloca %"class.v8::internal::SourcePositionTableIterator", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %15 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %16 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %17 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %18 = alloca %"class.v8::internal::Isolate"*, align 8
  %19 = alloca %"class.v8::internal::HeapObjectIterator", align 8
  %20 = alloca %"struct.v8::internal::(anonymous namespace)::FunctionData"*, align 8
  %21 = alloca %"class.v8::internal::JSFunction", align 8
  %22 = alloca %"struct.v8::internal::(anonymous namespace)::FunctionData"*, align 8
  %23 = alloca %"class.v8::internal::JSGeneratorObject", align 8
  %24 = alloca %"struct.v8::internal::(anonymous namespace)::FunctionData"*, align 8
  %25 = alloca %"class.std::__1::tuple.1524", align 8
  %26 = alloca %"class.std::__1::tuple.1488", align 1
  %27 = alloca %"class.std::__1::unordered_map.1495", align 8
  %28 = alloca i32, align 4
  %29 = alloca %"class.std::__1::tuple.1538", align 8
  %30 = alloca %"class.std::__1::tuple.1488", align 1
  %31 = alloca %"class.std::__1::tuple.1538", align 8
  %32 = alloca %"class.std::__1::tuple.1488", align 1
  %33 = alloca %"class.std::__1::tuple.1538", align 8
  %34 = alloca %"class.std::__1::tuple.1488", align 1
  %35 = alloca %"class.std::__1::map.1448", align 8
  %36 = alloca %"class.std::__1::unordered_map.1297", align 8
  %37 = alloca %"class.std::__1::unordered_map.1457", align 8
  %38 = alloca %"class.v8::internal::FunctionLiteral"*, align 8
  %39 = alloca i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, align 8
  %40 = alloca %"class.std::__1::vector.1400", align 8
  %41 = alloca %"class.std::__1::stack", align 8
  %42 = alloca [7 x i8], align 1
  %43 = alloca [7 x i8], align 1
  %44 = alloca %"class.std::__1::vector.1189", align 8
  %45 = alloca %"class.v8::internal::UnoptimizedCompileState", align 8
  %46 = alloca %"class.v8::internal::ParseInfo", align 8
  %47 = alloca %"class.std::__1::vector.1262", align 8
  %48 = alloca %"class.v8::internal::UnoptimizedCompileState", align 8
  %49 = alloca %"class.v8::internal::ParseInfo", align 8
  %50 = alloca %"class.std::__1::vector.1262", align 8
  %51 = alloca %"class.std::__1::unordered_map.1269", align 8
  %52 = alloca %"class.std::__1::unordered_map.1297", align 8
  %53 = alloca %"class.std::__1::unordered_map.1297", align 8
  %54 = alloca %"class.v8::internal::(anonymous namespace)::FunctionDataMap", align 8
  %55 = alloca %"class.std::__1::map.1331", align 8
  %56 = alloca { i64*, i8 }, align 8
  %57 = bitcast { i64*, i8 }* %56 to %"class.v8::internal::IsCompiledScope"*
  %58 = alloca %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", align 8
  %59 = alloca %"struct.v8::internal::(anonymous namespace)::FunctionData"*, align 8
  %60 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %61 = alloca { i64*, i8 }, align 8
  %62 = bitcast { i64*, i8 }* %61 to %"class.v8::internal::IsCompiledScope"*
  %63 = alloca %"class.v8::internal::SharedFunctionInfo::ScriptIterator", align 8
  %64 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %65 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %66 = bitcast %"class.std::__1::vector.1189"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #14
  %67 = load i64, i64* %1, align 8
  %68 = and i64 %67, -4294967296
  %69 = add i64 %67, 3
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i64
  %73 = or i64 %68, %72
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %75 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %74, align 8
  %76 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %5
  %78 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %75, i64 %73) #14
  br label %92

79:                                               ; preds = %5
  %80 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %83 = load i64*, i64** %82, align 8
  %84 = icmp eq i64* %81, %83
  br i1 %84, label %85, label %87

85:                                               ; preds = %79
  %86 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #14
  br label %87

87:                                               ; preds = %85, %79
  %88 = phi i64* [ %86, %85 ], [ %81, %79 ]
  %89 = ptrtoint i64* %88 to i64
  %90 = add i64 %89, 8
  %91 = inttoptr i64 %90 to i64*
  store i64* %91, i64** %80, align 8
  store i64 %73, i64* %88, align 8
  br label %92

92:                                               ; preds = %77, %87
  %93 = phi i64* [ %78, %77 ], [ %88, %87 ]
  call void @_ZN2v88internal8LiveEdit14CompareStringsEPNS0_7IsolateENS0_6HandleINS0_6StringEEES6_PNSt3__16vectorINS0_17SourceChangeRangeENS7_9allocatorIS9_EEEE(%"class.v8::internal::Isolate"* %0, i64* %93, i64* %2, %"class.std::__1::vector.1189"* nonnull %44)
  %94 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %44, i64 0, i32 0, i32 0
  %95 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %44, i64 0, i32 0, i32 1
  %97 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %96, align 8
  %98 = icmp eq %"struct.v8::internal::SourceChangeRange"* %95, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 0
  store i32 0, i32* %100, align 8
  br label %4105

101:                                              ; preds = %92
  %102 = bitcast %"class.v8::internal::UnoptimizedCompileState"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %102) #14
  call void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nonnull %45, %"class.v8::internal::Isolate"* %0) #14
  %103 = load i64, i64* %1, align 8
  %104 = call { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags16ForScriptCompileEPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::Isolate"* %0, i64 %103) #14
  %105 = extractvalue { i64, i32 } %104, 0
  %106 = extractvalue { i64, i32 } %104, 1
  %107 = bitcast %"class.v8::internal::ParseInfo"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %107) #14
  %108 = or i64 %105, 2
  call void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nonnull %46, %"class.v8::internal::Isolate"* %0, i64 %108, i32 %106, %"class.v8::internal::UnoptimizedCompileState"* nonnull %45) #14
  %109 = bitcast %"class.std::__1::vector.1262"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 24, i1 false) #14
  %110 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_111ParseScriptEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEEPNS0_9ParseInfoEbPNSt3__16vectorIPNS0_15FunctionLiteralENS9_9allocatorISC_EEEEPNS_5debug14LiveEditResultE(%"class.v8::internal::Isolate"* %0, i64* %1, %"class.v8::internal::ParseInfo"* nonnull %46, i1 zeroext false, %"class.std::__1::vector.1262"* nonnull %47, %"struct.v8::debug::LiveEditResult"* %4)
  br i1 %110, label %111, label %4068

111:                                              ; preds = %101
  %112 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %113 = call i64* @_ZN2v88internal7Factory11CloneScriptENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Factory"* %112, i64* %1) #14
  %114 = load i64, i64* %113, align 8
  %115 = load i64, i64* %2, align 8
  %116 = add i64 %114, 3
  %117 = inttoptr i64 %116 to i32*
  %118 = trunc i64 %115 to i32
  store atomic volatile i32 %118, i32* %117 monotonic, align 4
  %119 = and i64 %115, 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %132, label %121

121:                                              ; preds = %111
  %122 = and i64 %114, -262144
  %123 = or i64 %122, 8
  %124 = inttoptr i64 %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 262144
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %121
  %129 = or i64 %122, 16
  %130 = inttoptr i64 %129 to %"class.v8::internal::Heap"**
  %131 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %130, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %131, i64 %114, i64 %116, i64 %115) #14
  br label %132

132:                                              ; preds = %128, %121, %111
  %133 = and i64 %115, -262144
  %134 = or i64 %133, 8
  %135 = inttoptr i64 %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %132
  %140 = and i64 %114, -262144
  %141 = or i64 %140, 8
  %142 = inttoptr i64 %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = and i64 %143, 24
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %114, i64 %116, i64 %115) #14
  br label %147

147:                                              ; preds = %132, %139, %146
  %148 = bitcast %"class.v8::internal::UnoptimizedCompileState"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %148) #14
  call void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"* nonnull %48, %"class.v8::internal::Isolate"* %0) #14
  %149 = load i64, i64* %113, align 8
  %150 = call { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags16ForScriptCompileEPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::Isolate"* %0, i64 %149) #14
  %151 = extractvalue { i64, i32 } %150, 0
  %152 = extractvalue { i64, i32 } %150, 1
  %153 = bitcast %"class.v8::internal::ParseInfo"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %153) #14
  %154 = or i64 %151, 2
  call void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"* nonnull %49, %"class.v8::internal::Isolate"* %0, i64 %154, i32 %152, %"class.v8::internal::UnoptimizedCompileState"* nonnull %48) #14
  %155 = bitcast %"class.std::__1::vector.1262"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 24, i1 false) #14
  %156 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_111ParseScriptEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEEPNS0_9ParseInfoEbPNSt3__16vectorIPNS0_15FunctionLiteralENS9_9allocatorISC_EEEEPNS_5debug14LiveEditResultE(%"class.v8::internal::Isolate"* %0, i64* %113, %"class.v8::internal::ParseInfo"* nonnull %49, i1 zeroext true, %"class.std::__1::vector.1262"* nonnull %50, %"struct.v8::debug::LiveEditResult"* %4)
  br i1 %156, label %157, label %4032

157:                                              ; preds = %147
  %158 = bitcast %"class.std::__1::unordered_map.1269"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %158) #14
  %159 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 3
  %160 = bitcast %"class.std::__1::__compressed_pair.1291"* %159 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %160, align 8
  %161 = bitcast %"class.std::__1::vector.1400"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 0, i64 24, i1 false) #14
  %162 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %47, i64 0, i32 0, i32 1
  %163 = bitcast %"class.v8::internal::FunctionLiteral"*** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.std::__1::vector.1262"* %47 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %164, %166
  %168 = ashr exact i64 %167, 3
  %169 = bitcast %"struct.v8::internal::SourceChangeRange"** %96 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.std::__1::vector.1189"* %44 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %170, %172
  %174 = ashr exact i64 %173, 4
  %175 = add nsw i64 %174, %168
  %176 = shl nsw i64 %175, 1
  %177 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %40, i64 0, i32 0, i32 2, i32 0, i32 0
  %178 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %177 to i64*
  %179 = bitcast %"class.std::__1::vector.1400"* %40 to i64*
  %180 = icmp eq i64 %175, 0
  %181 = inttoptr i64 %166 to %"class.v8::internal::FunctionLiteral"**
  %182 = inttoptr i64 %164 to %"class.v8::internal::FunctionLiteral"**
  %183 = inttoptr i64 %172 to %"struct.v8::internal::SourceChangeRange"*
  %184 = inttoptr i64 %170 to %"struct.v8::internal::SourceChangeRange"*
  br i1 %180, label %197, label %185

185:                                              ; preds = %157
  %186 = icmp ugt i64 %176, 1152921504606846975
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  call void @abort() #15
  unreachable

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %40, i64 0, i32 0, i32 1
  %190 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %189 to i64*
  %191 = shl i64 %175, 5
  %192 = call i8* @_Znwm(i64 %191) #16
  %193 = bitcast i8* %192 to %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*
  %194 = ptrtoint i8* %192 to i64
  %195 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %193, i64 %176
  %196 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %195 to i64
  store i64 %194, i64* %179, align 8
  store i64 %194, i64* %190, align 8
  store i64 %196, i64* %178, align 8
  br label %197

197:                                              ; preds = %188, %157
  %198 = icmp eq %"class.v8::internal::FunctionLiteral"** %181, %182
  br i1 %198, label %202, label %206

199:                                              ; preds = %206
  %200 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  %201 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %96, align 8
  br label %202

202:                                              ; preds = %199, %197
  %203 = phi %"struct.v8::internal::SourceChangeRange"* [ %201, %199 ], [ %184, %197 ]
  %204 = phi %"struct.v8::internal::SourceChangeRange"* [ %200, %199 ], [ %183, %197 ]
  %205 = icmp eq %"struct.v8::internal::SourceChangeRange"* %204, %203
  br i1 %205, label %211, label %242

206:                                              ; preds = %197, %206
  %207 = phi %"class.v8::internal::FunctionLiteral"** [ %209, %206 ], [ %181, %197 ]
  %208 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %207, align 8
  call fastcc void @_ZNSt3__16vectorIN2v88internal12_GLOBAL__N_119SourcePositionEventENS_9allocatorIS4_EEE12emplace_backIJRPNS2_15FunctionLiteralEbEEEvDpOT_(%"class.std::__1::vector.1400"* nonnull %40, %"class.v8::internal::FunctionLiteral"* %208, i8 1) #14
  call fastcc void @_ZNSt3__16vectorIN2v88internal12_GLOBAL__N_119SourcePositionEventENS_9allocatorIS4_EEE12emplace_backIJRPNS2_15FunctionLiteralEbEEEvDpOT_(%"class.std::__1::vector.1400"* nonnull %40, %"class.v8::internal::FunctionLiteral"* %208, i8 0) #14
  %209 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %207, i64 1
  %210 = icmp eq %"class.v8::internal::FunctionLiteral"** %209, %182
  br i1 %210, label %199, label %206

211:                                              ; preds = %242, %202
  %212 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %40, i64 0, i32 0, i32 0
  %213 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %40, i64 0, i32 0, i32 1
  %215 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %214, align 8
  %216 = bitcast i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #14
  store i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)* @_ZN2v88internal12_GLOBAL__N_119SourcePositionEvent8LessThanERKS2_S4_, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %39, align 8
  call fastcc void @_ZNSt3__16__sortIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEvT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %213, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %215, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** nonnull dereferenceable(8) %39) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #14
  %217 = bitcast %"class.std::__1::stack"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %217) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 0, i64 48, i1 false) #14
  %218 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %212, align 8
  %219 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %214, align 8
  %220 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %218, %219
  br i1 %220, label %246, label %221

221:                                              ; preds = %211
  %222 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %223 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0, i32 1
  %224 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0, i32 0, i32 1
  %225 = getelementptr inbounds [7 x i8], [7 x i8]* %42, i64 0, i64 0
  %226 = getelementptr inbounds [7 x i8], [7 x i8]* %43, i64 0, i64 0
  %227 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0, i32 0, i32 2
  %228 = bitcast %"struct.std::__1::pair.1413"*** %227 to i64*
  %229 = bitcast %"struct.std::__1::pair.1413"*** %224 to i64*
  %230 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %231 = bitcast %"struct.std::__1::pair.1413"*** %230 to i64*
  %232 = bitcast %"class.std::__1::stack"* %41 to i64*
  %233 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0
  %235 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 2, i32 0, i32 0
  %238 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 3, i32 0, i32 0
  %239 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 1, i32 0, i32 0
  %240 = bitcast %"struct.std::__1::__hash_node_base.1274"* %239 to i64*
  %241 = bitcast %"struct.std::__1::__hash_node_base.1274"* %239 to i8**
  br label %254

242:                                              ; preds = %202, %242
  %243 = phi %"struct.v8::internal::SourceChangeRange"* [ %244, %242 ], [ %204, %202 ]
  call fastcc void @_ZNSt3__16vectorIN2v88internal12_GLOBAL__N_119SourcePositionEventENS_9allocatorIS4_EEE12emplace_backIJRKNS2_17SourceChangeRangeEbEEEvDpOT_(%"class.std::__1::vector.1400"* nonnull %40, %"struct.v8::internal::SourceChangeRange"* dereferenceable(16) %243, i8 1) #14
  call fastcc void @_ZNSt3__16vectorIN2v88internal12_GLOBAL__N_119SourcePositionEventENS_9allocatorIS4_EEE12emplace_backIJRKNS2_17SourceChangeRangeEbEEEvDpOT_(%"class.std::__1::vector.1400"* nonnull %40, %"struct.v8::internal::SourceChangeRange"* dereferenceable(16) %243, i8 0) #14
  %244 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %243, i64 1
  %245 = icmp eq %"struct.v8::internal::SourceChangeRange"* %244, %203
  br i1 %245, label %211, label %242

246:                                              ; preds = %1339, %211
  %247 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %41, i64 0, i32 0, i32 0
  call fastcc void @_ZNSt3__112__deque_baseINS_4pairIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_9allocatorIS8_EEED2Ev(%"class.std::__1::__deque_base.1411"* nonnull %247) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %217) #14
  %248 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %212, align 8
  %249 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %248, null
  br i1 %249, label %1359, label %250

250:                                              ; preds = %246
  %251 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %248 to i64
  %252 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %214 to i64*
  store i64 %251, i64* %252, align 8
  %253 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %248 to i8*
  call void @_ZdlPv(i8* %253) #16
  br label %1359

254:                                              ; preds = %1339, %221
  %255 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1340, %1339 ]
  %256 = phi i64 [ 0, %221 ], [ %1341, %1339 ]
  %257 = phi i64 [ 0, %221 ], [ %1342, %1339 ]
  %258 = phi i64 [ 0, %221 ], [ %1343, %1339 ]
  %259 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1344, %1339 ]
  %260 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1345, %1339 ]
  %261 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1346, %1339 ]
  %262 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1347, %1339 ]
  %263 = phi i64 [ 0, %221 ], [ %1348, %1339 ]
  %264 = phi i64 [ 0, %221 ], [ %1349, %1339 ]
  %265 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1350, %1339 ]
  %266 = phi i64 [ 0, %221 ], [ %1351, %1339 ]
  %267 = phi %"struct.std::__1::pair.1413"** [ null, %221 ], [ %1352, %1339 ]
  %268 = phi i64 [ 0, %221 ], [ %1353, %1339 ]
  %269 = phi i64 [ 0, %221 ], [ %1354, %1339 ]
  %270 = phi i8 [ 0, %221 ], [ %1356, %1339 ]
  %271 = phi i32 [ 0, %221 ], [ %1355, %1339 ]
  %272 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %218, %221 ], [ %1357, %1339 ]
  %273 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %272, i64 0, i32 1
  %274 = load i32, i32* %273, align 4
  switch i32 %274, label %1339 [
    i32 3, label %275
    i32 1, label %280
    i32 0, label %516
    i32 2, label %1329
  ]

275:                                              ; preds = %254
  %276 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %272, i64 0, i32 2
  %277 = bitcast %union.anon.1402* %276 to i32*
  %278 = load i32, i32* %277, align 8
  %279 = add nsw i32 %278, %271
  br label %1339

280:                                              ; preds = %254
  %281 = add i64 %266, -1
  %282 = add i64 %268, %281
  %283 = lshr i64 %282, 7
  %284 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %260, i64 %283
  %285 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %284, align 8
  %286 = and i64 %282, 127
  %287 = and i8 %270, 1
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %289, label %294

289:                                              ; preds = %280
  %290 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %272, i64 0, i32 2, i32 0
  %291 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %290, align 8
  %292 = call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %291) #14
  %293 = add nsw i32 %292, %271
  br label %294

294:                                              ; preds = %289, %280
  %295 = phi i32 [ %293, %289 ], [ -1, %280 ]
  %296 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %285, i64 %286, i32 1, i32 1
  store i32 %295, i32* %296, align 4
  %297 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %259, i64 %283
  %298 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %297, align 8
  %299 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %298, i64 %286, i32 0
  %300 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %299, align 8
  %301 = ptrtoint %"class.v8::internal::FunctionLiteral"* %300 to i64
  %302 = lshr i64 %301, 32
  %303 = shl i64 %301, 3
  %304 = and i64 %303, 4294967288
  %305 = add nuw nsw i64 %304, 8
  %306 = xor i64 %305, %302
  %307 = mul i64 %306, -7070675565921424023
  %308 = lshr i64 %307, 47
  %309 = xor i64 %307, %302
  %310 = xor i64 %309, %308
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %312, %311
  %314 = mul i64 %313, -7070675565921424023
  %315 = load i64, i64* %235, align 8
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %375, label %317

317:                                              ; preds = %294
  %318 = call i64 @llvm.ctpop.i64(i64 %315) #14, !range !2
  %319 = icmp ugt i64 %318, 1
  br i1 %319, label %323, label %320

320:                                              ; preds = %317
  %321 = add i64 %315, -1
  %322 = and i64 %314, %321
  br label %327

323:                                              ; preds = %317
  %324 = icmp ult i64 %314, %315
  br i1 %324, label %327, label %325

325:                                              ; preds = %323
  %326 = urem i64 %314, %315
  br label %327

327:                                              ; preds = %325, %323, %320
  %328 = phi i64 [ %322, %320 ], [ %326, %325 ], [ %314, %323 ]
  %329 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %236, align 8
  %330 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %329, i64 %328
  %331 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %330, align 8
  %332 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %331, null
  br i1 %332, label %375, label %333

333:                                              ; preds = %327
  %334 = add i64 %315, -1
  br i1 %319, label %335, label %357

335:                                              ; preds = %333, %352
  %336 = phi %"struct.std::__1::__hash_node_base.1274"* [ %338, %352 ], [ %331, %333 ]
  %337 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %336, i64 0, i32 0
  %338 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %337, align 8
  %339 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %338, null
  br i1 %339, label %375, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %338, i64 1
  %342 = bitcast %"struct.std::__1::__hash_node_base.1274"* %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = icmp eq i64 %343, %314
  br i1 %344, label %352, label %345

345:                                              ; preds = %340
  %346 = icmp ult i64 %343, %315
  br i1 %346, label %349, label %347

347:                                              ; preds = %345
  %348 = urem i64 %343, %315
  br label %349

349:                                              ; preds = %347, %345
  %350 = phi i64 [ %348, %347 ], [ %343, %345 ]
  %351 = icmp eq i64 %350, %328
  br i1 %351, label %352, label %375

352:                                              ; preds = %349, %340
  %353 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %338, i64 2
  %354 = bitcast %"struct.std::__1::__hash_node_base.1274"* %353 to %"class.v8::internal::FunctionLiteral"**
  %355 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %354, align 8
  %356 = icmp eq %"class.v8::internal::FunctionLiteral"* %355, %300
  br i1 %356, label %498, label %335

357:                                              ; preds = %333, %370
  %358 = phi %"struct.std::__1::__hash_node_base.1274"* [ %360, %370 ], [ %331, %333 ]
  %359 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %358, i64 0, i32 0
  %360 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %359, align 8
  %361 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %360, i64 1
  %364 = bitcast %"struct.std::__1::__hash_node_base.1274"* %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = icmp eq i64 %365, %314
  %367 = and i64 %365, %334
  %368 = icmp eq i64 %367, %328
  %369 = or i1 %366, %368
  br i1 %369, label %370, label %375

370:                                              ; preds = %362
  %371 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %360, i64 2
  %372 = bitcast %"struct.std::__1::__hash_node_base.1274"* %371 to %"class.v8::internal::FunctionLiteral"**
  %373 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %372, align 8
  %374 = icmp eq %"class.v8::internal::FunctionLiteral"* %373, %300
  br i1 %374, label %498, label %357

375:                                              ; preds = %362, %357, %349, %335, %327, %294
  %376 = phi i64 [ %328, %327 ], [ undef, %294 ], [ %328, %335 ], [ %328, %349 ], [ %328, %357 ], [ %328, %362 ]
  %377 = call i8* @_Znwm(i64 48) #16, !noalias !3
  %378 = getelementptr inbounds i8, i8* %377, i64 16
  %379 = bitcast i8* %378 to i64*
  store i64 %301, i64* %379, align 8, !noalias !3
  %380 = getelementptr inbounds i8, i8* %377, i64 24
  %381 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %298, i64 %286, i32 1
  %382 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionLiteralChange"* %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %382, i64 24, i1 false) #14, !noalias !3
  %383 = getelementptr inbounds i8, i8* %377, i64 8
  %384 = bitcast i8* %383 to i64*
  store i64 %314, i64* %384, align 8, !noalias !3
  %385 = bitcast i8* %377 to %"struct.std::__1::__hash_node_base.1274"**
  store %"struct.std::__1::__hash_node_base.1274"* null, %"struct.std::__1::__hash_node_base.1274"** %385, align 8, !noalias !3
  %386 = load i64, i64* %237, align 8
  %387 = add i64 %386, 1
  %388 = uitofp i64 %387 to float
  %389 = uitofp i64 %315 to float
  %390 = load float, float* %238, align 8
  %391 = fmul float %390, %389
  %392 = fcmp olt float %391, %388
  %393 = or i1 %316, %392
  br i1 %393, label %394, label %458

394:                                              ; preds = %375
  %395 = shl i64 %315, 1
  %396 = icmp ult i64 %315, 3
  %397 = call i64 @llvm.ctpop.i64(i64 %315) #14, !range !2
  %398 = icmp ugt i64 %397, 1
  %399 = or i1 %396, %398
  %400 = zext i1 %399 to i64
  %401 = or i64 %395, %400
  %402 = fdiv float %388, %390
  %403 = call float @llvm.ceil.f32(float %402) #14
  %404 = fptoui float %403 to i64
  %405 = icmp ult i64 %401, %404
  %406 = select i1 %405, i64 %404, i64 %401
  %407 = icmp eq i64 %406, 1
  br i1 %407, label %414, label %408

408:                                              ; preds = %394
  %409 = call i64 @llvm.ctpop.i64(i64 %406) #14, !range !2
  %410 = icmp ugt i64 %409, 1
  br i1 %410, label %411, label %414

411:                                              ; preds = %408
  %412 = call i64 @_ZNSt3__112__next_primeEm(i64 %406) #14
  %413 = load i64, i64* %235, align 8
  br label %414

414:                                              ; preds = %411, %408, %394
  %415 = phi i64 [ %413, %411 ], [ %315, %408 ], [ %315, %394 ]
  %416 = phi i64 [ %412, %411 ], [ %406, %408 ], [ 2, %394 ]
  %417 = icmp ugt i64 %416, %415
  br i1 %417, label %418, label %419

418:                                              ; preds = %414
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1270"* nonnull %234, i64 %416) #14
  br label %447

419:                                              ; preds = %414
  %420 = icmp ult i64 %416, %415
  br i1 %420, label %421, label %447

421:                                              ; preds = %419
  %422 = icmp ugt i64 %415, 2
  %423 = call i64 @llvm.ctpop.i64(i64 %415) #14, !range !2
  %424 = icmp ult i64 %423, 2
  %425 = and i1 %422, %424
  %426 = load i64, i64* %237, align 8
  %427 = uitofp i64 %426 to float
  %428 = load float, float* %238, align 8
  %429 = fdiv float %427, %428
  %430 = call float @llvm.ceil.f32(float %429) #14
  %431 = fptoui float %430 to i64
  br i1 %425, label %432, label %439

432:                                              ; preds = %421
  %433 = icmp ult i64 %431, 2
  br i1 %433, label %441, label %434

434:                                              ; preds = %432
  %435 = add i64 %431, -1
  %436 = call i64 @llvm.ctlz.i64(i64 %435, i1 true) #14, !range !2
  %437 = sub nuw nsw i64 64, %436
  %438 = shl i64 1, %437
  br label %441

439:                                              ; preds = %421
  %440 = call i64 @_ZNSt3__112__next_primeEm(i64 %431) #14
  br label %441

441:                                              ; preds = %439, %434, %432
  %442 = phi i64 [ %440, %439 ], [ %438, %434 ], [ %431, %432 ]
  %443 = icmp ult i64 %416, %442
  %444 = select i1 %443, i64 %442, i64 %416
  %445 = icmp ult i64 %444, %415
  br i1 %445, label %446, label %447

446:                                              ; preds = %441
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1270"* nonnull %234, i64 %444) #14
  br label %447

447:                                              ; preds = %446, %441, %419, %418
  %448 = load i64, i64* %235, align 8
  %449 = call i64 @llvm.ctpop.i64(i64 %448) #14, !range !2
  %450 = icmp ugt i64 %449, 1
  br i1 %450, label %454, label %451

451:                                              ; preds = %447
  %452 = add i64 %448, -1
  %453 = and i64 %452, %314
  br label %458

454:                                              ; preds = %447
  %455 = icmp ult i64 %314, %448
  br i1 %455, label %458, label %456

456:                                              ; preds = %454
  %457 = urem i64 %314, %448
  br label %458

458:                                              ; preds = %456, %454, %451, %375
  %459 = phi i64 [ %315, %375 ], [ %448, %451 ], [ %448, %454 ], [ %448, %456 ]
  %460 = phi i64 [ %376, %375 ], [ %453, %451 ], [ %314, %454 ], [ %457, %456 ]
  %461 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %236, align 8
  %462 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %461, i64 %460
  %463 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %462, align 8
  %464 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %463, null
  br i1 %464, label %465, label %488

465:                                              ; preds = %458
  %466 = load i64, i64* %240, align 8
  %467 = bitcast i8* %377 to i64*
  store i64 %466, i64* %467, align 8
  store i8* %377, i8** %241, align 8
  store %"struct.std::__1::__hash_node_base.1274"* %239, %"struct.std::__1::__hash_node_base.1274"** %462, align 8
  %468 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %385, align 8
  %469 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %468, null
  br i1 %469, label %495, label %470

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %468, i64 1
  %472 = bitcast %"struct.std::__1::__hash_node_base.1274"* %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = call i64 @llvm.ctpop.i64(i64 %459) #14, !range !2
  %475 = icmp ugt i64 %474, 1
  br i1 %475, label %479, label %476

476:                                              ; preds = %470
  %477 = add i64 %459, -1
  %478 = and i64 %473, %477
  br label %483

479:                                              ; preds = %470
  %480 = icmp ult i64 %473, %459
  br i1 %480, label %483, label %481

481:                                              ; preds = %479
  %482 = urem i64 %473, %459
  br label %483

483:                                              ; preds = %481, %479, %476
  %484 = phi i64 [ %478, %476 ], [ %482, %481 ], [ %473, %479 ]
  %485 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %236, align 8
  %486 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %485, i64 %484
  %487 = bitcast %"struct.std::__1::__hash_node_base.1274"** %486 to i8**
  br label %493

488:                                              ; preds = %458
  %489 = bitcast %"struct.std::__1::__hash_node_base.1274"* %463 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast i8* %377 to i64*
  store i64 %490, i64* %491, align 8
  %492 = bitcast %"struct.std::__1::__hash_node_base.1274"* %463 to i8**
  br label %493

493:                                              ; preds = %483, %488
  %494 = phi i8** [ %492, %488 ], [ %487, %483 ]
  store i8* %377, i8** %494, align 8
  br label %495

495:                                              ; preds = %493, %465
  %496 = load i64, i64* %237, align 8
  %497 = add i64 %496, 1
  store i64 %497, i64* %237, align 8
  br label %498

498:                                              ; preds = %370, %352, %495
  store i64 %281, i64* %222, align 8
  %499 = sub i64 %258, %257
  %500 = icmp eq i64 %499, 0
  %501 = shl i64 %499, 4
  %502 = add i64 %501, -1
  %503 = select i1 %500, i64 0, i64 %502
  %504 = sub i64 1, %256
  %505 = add i64 %504, %503
  %506 = sub i64 %505, %266
  %507 = icmp ugt i64 %506, 255
  %508 = inttoptr i64 %257 to %"struct.std::__1::pair.1413"**
  %509 = inttoptr i64 %258 to %"struct.std::__1::pair.1413"**
  br i1 %507, label %510, label %1339

510:                                              ; preds = %498
  %511 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %509, i64 -1
  %512 = bitcast %"struct.std::__1::pair.1413"** %511 to i8**
  %513 = load i8*, i8** %512, align 8
  call void @_ZdlPv(i8* %513) #16
  %514 = getelementptr %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %255, i64 -1
  store %"struct.std::__1::pair.1413"** %514, %"struct.std::__1::pair.1413"*** %227, align 8
  %515 = ptrtoint %"struct.std::__1::pair.1413"** %514 to i64
  br label %1339

516:                                              ; preds = %254
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %225)
  %517 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %272, i64 0, i32 2, i32 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %226)
  %518 = and i8 %270, 1
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %520, label %524

520:                                              ; preds = %516
  %521 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %517, align 8
  %522 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %521) #14
  %523 = add nsw i32 %522, %271
  br label %524

524:                                              ; preds = %520, %516
  %525 = phi i32 [ %523, %520 ], [ -1, %516 ]
  %526 = icmp eq i64 %266, 0
  br i1 %526, label %536, label %527

527:                                              ; preds = %524
  %528 = add i64 %266, -1
  %529 = add i64 %528, %268
  %530 = lshr i64 %529, 7
  %531 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %265, i64 %530
  %532 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %531, align 8
  %533 = and i64 %529, 127
  %534 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %532, i64 %533, i32 0
  %535 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %534, align 8
  br label %536

536:                                              ; preds = %527, %524
  %537 = phi %"class.v8::internal::FunctionLiteral"* [ %535, %527 ], [ null, %524 ]
  %538 = bitcast %"class.v8::internal::FunctionLiteral"** %517 to i64*
  %539 = load i64, i64* %538, align 8, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %225, i8* nonnull align 1 %226, i64 7, i1 false) #14
  %540 = sub i64 %264, %263
  %541 = icmp eq i64 %540, 0
  %542 = shl i64 %540, 4
  %543 = add i64 %542, -1
  %544 = select i1 %541, i64 0, i64 %543
  %545 = add i64 %268, %266
  %546 = icmp eq i64 %544, %545
  %547 = inttoptr i64 %263 to %"struct.std::__1::pair.1413"**
  %548 = inttoptr i64 %264 to %"struct.std::__1::pair.1413"**
  br i1 %546, label %549, label %1298

549:                                              ; preds = %536
  %550 = icmp ugt i64 %268, 127
  br i1 %550, label %551, label %692

551:                                              ; preds = %549
  %552 = add i64 %268, -128
  store i64 %552, i64* %223, align 8
  %553 = inttoptr i64 %263 to i64*
  %554 = load i64, i64* %553, align 8
  %555 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %547, i64 1
  store %"struct.std::__1::pair.1413"** %555, %"struct.std::__1::pair.1413"*** %224, align 8
  %556 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %230, align 8
  %557 = icmp eq %"struct.std::__1::pair.1413"** %556, %548
  %558 = ptrtoint %"struct.std::__1::pair.1413"** %556 to i64
  %559 = inttoptr i64 %264 to i64*
  br i1 %557, label %560, label %687

560:                                              ; preds = %551
  %561 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  %562 = icmp ugt %"struct.std::__1::pair.1413"** %555, %561
  %563 = ptrtoint %"struct.std::__1::pair.1413"** %561 to i64
  br i1 %562, label %564, label %583

564:                                              ; preds = %560
  %565 = ptrtoint %"struct.std::__1::pair.1413"** %555 to i64
  %566 = sub i64 %565, %563
  %567 = ashr exact i64 %566, 3
  %568 = add nsw i64 %567, 1
  %569 = sdiv i64 %568, -2
  %570 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %555, i64 %569
  %571 = sub i64 %264, %565
  %572 = ashr exact i64 %571, 3
  %573 = icmp eq i64 %571, 0
  br i1 %573, label %578, label %574

574:                                              ; preds = %564
  %575 = bitcast %"struct.std::__1::pair.1413"** %570 to i8*
  %576 = bitcast %"struct.std::__1::pair.1413"** %555 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %575, i8* align 8 %576, i64 %571, i1 false) #14
  %577 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %224, align 8
  br label %578

578:                                              ; preds = %574, %564
  %579 = phi %"struct.std::__1::pair.1413"** [ %555, %564 ], [ %577, %574 ]
  %580 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %570, i64 %572
  store %"struct.std::__1::pair.1413"** %580, %"struct.std::__1::pair.1413"*** %227, align 8
  %581 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %579, i64 %569
  store %"struct.std::__1::pair.1413"** %581, %"struct.std::__1::pair.1413"*** %224, align 8
  %582 = bitcast %"struct.std::__1::pair.1413"** %580 to i64*
  br label %687

583:                                              ; preds = %560
  %584 = sub i64 %558, %563
  %585 = ashr exact i64 %584, 2
  %586 = icmp eq i64 %584, 0
  %587 = select i1 %586, i64 1, i64 %585
  %588 = icmp ugt i64 %587, 2305843009213693951
  br i1 %588, label %589, label %590

589:                                              ; preds = %583
  call void @abort() #15
  unreachable

590:                                              ; preds = %583
  %591 = lshr i64 %587, 2
  %592 = shl i64 %587, 3
  %593 = call i8* @_Znwm(i64 %592) #16
  %594 = bitcast i8* %593 to %"struct.std::__1::pair.1413"**
  %595 = ptrtoint i8* %593 to i64
  %596 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %594, i64 %591
  %597 = ptrtoint %"struct.std::__1::pair.1413"** %596 to i64
  %598 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %594, i64 %587
  %599 = ptrtoint %"struct.std::__1::pair.1413"** %598 to i64
  %600 = ptrtoint %"struct.std::__1::pair.1413"** %555 to i64
  %601 = sub i64 %264, %600
  %602 = ashr exact i64 %601, 3
  %603 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %596, i64 %602
  %604 = icmp eq i64 %601, 0
  br i1 %604, label %680, label %605

605:                                              ; preds = %590
  %606 = add i64 %601, -8
  %607 = lshr i64 %606, 3
  %608 = add nuw nsw i64 %607, 1
  %609 = and i64 %608, 7
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %626, label %611

611:                                              ; preds = %605, %611
  %612 = phi %"struct.std::__1::pair.1413"** [ %619, %611 ], [ %596, %605 ]
  %613 = phi i64 [ %620, %611 ], [ %597, %605 ]
  %614 = phi %"struct.std::__1::pair.1413"** [ %621, %611 ], [ %555, %605 ]
  %615 = phi i64 [ %622, %611 ], [ %609, %605 ]
  %616 = bitcast %"struct.std::__1::pair.1413"** %614 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = inttoptr i64 %613 to i64*
  store i64 %617, i64* %618, align 8
  %619 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %612, i64 1
  %620 = ptrtoint %"struct.std::__1::pair.1413"** %619 to i64
  %621 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %614, i64 1
  %622 = add i64 %615, -1
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %624, label %611, !llvm.loop !9

624:                                              ; preds = %611
  %625 = ptrtoint %"struct.std::__1::pair.1413"** %619 to i64
  br label %626

626:                                              ; preds = %605, %624
  %627 = phi %"struct.std::__1::pair.1413"** [ %596, %605 ], [ %619, %624 ]
  %628 = phi i64 [ %597, %605 ], [ %625, %624 ]
  %629 = phi %"struct.std::__1::pair.1413"** [ %555, %605 ], [ %621, %624 ]
  %630 = icmp ult i64 %606, 56
  br i1 %630, label %677, label %631

631:                                              ; preds = %626, %631
  %632 = phi %"struct.std::__1::pair.1413"** [ %673, %631 ], [ %627, %626 ]
  %633 = phi i64 [ %674, %631 ], [ %628, %626 ]
  %634 = phi %"struct.std::__1::pair.1413"** [ %675, %631 ], [ %629, %626 ]
  %635 = bitcast %"struct.std::__1::pair.1413"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = inttoptr i64 %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 1
  %639 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 1
  %640 = bitcast %"struct.std::__1::pair.1413"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"struct.std::__1::pair.1413"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 2
  %644 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 2
  %645 = bitcast %"struct.std::__1::pair.1413"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"struct.std::__1::pair.1413"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 3
  %649 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 3
  %650 = bitcast %"struct.std::__1::pair.1413"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"struct.std::__1::pair.1413"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 4
  %654 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 4
  %655 = bitcast %"struct.std::__1::pair.1413"** %654 to i64*
  %656 = load i64, i64* %655, align 8
  %657 = bitcast %"struct.std::__1::pair.1413"** %653 to i64*
  store i64 %656, i64* %657, align 8
  %658 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 5
  %659 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 5
  %660 = bitcast %"struct.std::__1::pair.1413"** %659 to i64*
  %661 = load i64, i64* %660, align 8
  %662 = bitcast %"struct.std::__1::pair.1413"** %658 to i64*
  store i64 %661, i64* %662, align 8
  %663 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 6
  %664 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 6
  %665 = bitcast %"struct.std::__1::pair.1413"** %664 to i64*
  %666 = load i64, i64* %665, align 8
  %667 = bitcast %"struct.std::__1::pair.1413"** %663 to i64*
  store i64 %666, i64* %667, align 8
  %668 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 7
  %669 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 7
  %670 = bitcast %"struct.std::__1::pair.1413"** %669 to i64*
  %671 = load i64, i64* %670, align 8
  %672 = bitcast %"struct.std::__1::pair.1413"** %668 to i64*
  store i64 %671, i64* %672, align 8
  %673 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %632, i64 8
  %674 = ptrtoint %"struct.std::__1::pair.1413"** %673 to i64
  %675 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %634, i64 8
  %676 = icmp eq %"struct.std::__1::pair.1413"** %603, %673
  br i1 %676, label %677, label %631

677:                                              ; preds = %631, %626
  %678 = ptrtoint %"struct.std::__1::pair.1413"** %603 to i64
  %679 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  br label %680

680:                                              ; preds = %677, %590
  %681 = phi %"struct.std::__1::pair.1413"** [ %679, %677 ], [ %561, %590 ]
  %682 = phi i64 [ %678, %677 ], [ %597, %590 ]
  store i64 %595, i64* %232, align 8
  store i64 %597, i64* %229, align 8
  store i64 %682, i64* %228, align 8
  store i64 %599, i64* %231, align 8
  %683 = icmp eq %"struct.std::__1::pair.1413"** %681, null
  %684 = inttoptr i64 %682 to i64*
  br i1 %683, label %687, label %685

685:                                              ; preds = %680
  %686 = bitcast %"struct.std::__1::pair.1413"** %681 to i8*
  call void @_ZdlPv(i8* %686) #16
  br label %687

687:                                              ; preds = %685, %680, %578, %551
  %688 = phi i64* [ %684, %685 ], [ %684, %680 ], [ %582, %578 ], [ %559, %551 ]
  store i64 %554, i64* %688, align 8
  %689 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %227, align 8
  %690 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %689, i64 1
  store %"struct.std::__1::pair.1413"** %690, %"struct.std::__1::pair.1413"*** %227, align 8
  %691 = ptrtoint %"struct.std::__1::pair.1413"** %690 to i64
  br label %1298

692:                                              ; preds = %549
  %693 = ashr exact i64 %540, 3
  %694 = load i64, i64* %231, align 8
  %695 = load i64, i64* %232, align 8
  %696 = sub i64 %694, %695
  %697 = ashr exact i64 %696, 3
  %698 = icmp ult i64 %693, %697
  %699 = inttoptr i64 %694 to %"struct.std::__1::pair.1413"**
  %700 = inttoptr i64 %695 to %"struct.std::__1::pair.1413"**
  br i1 %698, label %701, label %1086

701:                                              ; preds = %692
  %702 = icmp eq i64 %694, %264
  %703 = call i8* @_Znwm(i64 4096) #16
  %704 = ptrtoint i8* %703 to i64
  br i1 %702, label %829, label %705

705:                                              ; preds = %701
  %706 = icmp eq %"struct.std::__1::pair.1413"** %548, %699
  %707 = inttoptr i64 %264 to i64*
  br i1 %706, label %708, label %824

708:                                              ; preds = %705
  %709 = icmp ugt %"struct.std::__1::pair.1413"** %547, %700
  br i1 %709, label %710, label %725

710:                                              ; preds = %708
  %711 = sub i64 %263, %695
  %712 = ashr exact i64 %711, 3
  %713 = add nsw i64 %712, 1
  %714 = sdiv i64 %713, -2
  %715 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %547, i64 %714
  br i1 %541, label %720, label %716

716:                                              ; preds = %710
  %717 = bitcast %"struct.std::__1::pair.1413"** %715 to i8*
  %718 = inttoptr i64 %263 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %717, i8* align 8 %718, i64 %540, i1 false) #14
  %719 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %224, align 8
  br label %720

720:                                              ; preds = %716, %710
  %721 = phi %"struct.std::__1::pair.1413"** [ %547, %710 ], [ %719, %716 ]
  %722 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %715, i64 %693
  store %"struct.std::__1::pair.1413"** %722, %"struct.std::__1::pair.1413"*** %227, align 8
  %723 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %721, i64 %714
  store %"struct.std::__1::pair.1413"** %723, %"struct.std::__1::pair.1413"*** %224, align 8
  %724 = bitcast %"struct.std::__1::pair.1413"** %722 to i64*
  br label %824

725:                                              ; preds = %708
  %726 = ashr exact i64 %696, 2
  %727 = icmp eq i64 %696, 0
  %728 = select i1 %727, i64 1, i64 %726
  %729 = icmp ugt i64 %728, 2305843009213693951
  br i1 %729, label %730, label %731

730:                                              ; preds = %725
  call void @abort() #15
  unreachable

731:                                              ; preds = %725
  %732 = lshr i64 %728, 2
  %733 = shl i64 %728, 3
  %734 = call i8* @_Znwm(i64 %733) #16
  %735 = bitcast i8* %734 to %"struct.std::__1::pair.1413"**
  %736 = ptrtoint i8* %734 to i64
  %737 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %735, i64 %732
  %738 = ptrtoint %"struct.std::__1::pair.1413"** %737 to i64
  %739 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %735, i64 %728
  %740 = ptrtoint %"struct.std::__1::pair.1413"** %739 to i64
  %741 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %737, i64 %693
  br i1 %541, label %817, label %742

742:                                              ; preds = %731
  %743 = add i64 %540, -8
  %744 = lshr i64 %743, 3
  %745 = add nuw nsw i64 %744, 1
  %746 = and i64 %745, 7
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %763, label %748

748:                                              ; preds = %742, %748
  %749 = phi %"struct.std::__1::pair.1413"** [ %756, %748 ], [ %737, %742 ]
  %750 = phi i64 [ %757, %748 ], [ %738, %742 ]
  %751 = phi %"struct.std::__1::pair.1413"** [ %758, %748 ], [ %547, %742 ]
  %752 = phi i64 [ %759, %748 ], [ %746, %742 ]
  %753 = bitcast %"struct.std::__1::pair.1413"** %751 to i64*
  %754 = load i64, i64* %753, align 8
  %755 = inttoptr i64 %750 to i64*
  store i64 %754, i64* %755, align 8
  %756 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %749, i64 1
  %757 = ptrtoint %"struct.std::__1::pair.1413"** %756 to i64
  %758 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %751, i64 1
  %759 = add i64 %752, -1
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %761, label %748, !llvm.loop !11

761:                                              ; preds = %748
  %762 = ptrtoint %"struct.std::__1::pair.1413"** %756 to i64
  br label %763

763:                                              ; preds = %742, %761
  %764 = phi %"struct.std::__1::pair.1413"** [ %737, %742 ], [ %756, %761 ]
  %765 = phi i64 [ %738, %742 ], [ %762, %761 ]
  %766 = phi %"struct.std::__1::pair.1413"** [ %547, %742 ], [ %758, %761 ]
  %767 = icmp ult i64 %743, 56
  br i1 %767, label %814, label %768

768:                                              ; preds = %763, %768
  %769 = phi %"struct.std::__1::pair.1413"** [ %810, %768 ], [ %764, %763 ]
  %770 = phi i64 [ %811, %768 ], [ %765, %763 ]
  %771 = phi %"struct.std::__1::pair.1413"** [ %812, %768 ], [ %766, %763 ]
  %772 = bitcast %"struct.std::__1::pair.1413"** %771 to i64*
  %773 = load i64, i64* %772, align 8
  %774 = inttoptr i64 %770 to i64*
  store i64 %773, i64* %774, align 8
  %775 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 1
  %776 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 1
  %777 = bitcast %"struct.std::__1::pair.1413"** %776 to i64*
  %778 = load i64, i64* %777, align 8
  %779 = bitcast %"struct.std::__1::pair.1413"** %775 to i64*
  store i64 %778, i64* %779, align 8
  %780 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 2
  %781 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 2
  %782 = bitcast %"struct.std::__1::pair.1413"** %781 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = bitcast %"struct.std::__1::pair.1413"** %780 to i64*
  store i64 %783, i64* %784, align 8
  %785 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 3
  %786 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 3
  %787 = bitcast %"struct.std::__1::pair.1413"** %786 to i64*
  %788 = load i64, i64* %787, align 8
  %789 = bitcast %"struct.std::__1::pair.1413"** %785 to i64*
  store i64 %788, i64* %789, align 8
  %790 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 4
  %791 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 4
  %792 = bitcast %"struct.std::__1::pair.1413"** %791 to i64*
  %793 = load i64, i64* %792, align 8
  %794 = bitcast %"struct.std::__1::pair.1413"** %790 to i64*
  store i64 %793, i64* %794, align 8
  %795 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 5
  %796 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 5
  %797 = bitcast %"struct.std::__1::pair.1413"** %796 to i64*
  %798 = load i64, i64* %797, align 8
  %799 = bitcast %"struct.std::__1::pair.1413"** %795 to i64*
  store i64 %798, i64* %799, align 8
  %800 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 6
  %801 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 6
  %802 = bitcast %"struct.std::__1::pair.1413"** %801 to i64*
  %803 = load i64, i64* %802, align 8
  %804 = bitcast %"struct.std::__1::pair.1413"** %800 to i64*
  store i64 %803, i64* %804, align 8
  %805 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 7
  %806 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 7
  %807 = bitcast %"struct.std::__1::pair.1413"** %806 to i64*
  %808 = load i64, i64* %807, align 8
  %809 = bitcast %"struct.std::__1::pair.1413"** %805 to i64*
  store i64 %808, i64* %809, align 8
  %810 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %769, i64 8
  %811 = ptrtoint %"struct.std::__1::pair.1413"** %810 to i64
  %812 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %771, i64 8
  %813 = icmp eq %"struct.std::__1::pair.1413"** %741, %810
  br i1 %813, label %814, label %768

814:                                              ; preds = %768, %763
  %815 = ptrtoint %"struct.std::__1::pair.1413"** %741 to i64
  %816 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  br label %817

817:                                              ; preds = %814, %731
  %818 = phi %"struct.std::__1::pair.1413"** [ %816, %814 ], [ %700, %731 ]
  %819 = phi i64 [ %815, %814 ], [ %738, %731 ]
  store i64 %736, i64* %232, align 8
  store i64 %738, i64* %229, align 8
  store i64 %819, i64* %228, align 8
  store i64 %740, i64* %231, align 8
  %820 = icmp eq %"struct.std::__1::pair.1413"** %818, null
  %821 = inttoptr i64 %819 to i64*
  br i1 %820, label %824, label %822

822:                                              ; preds = %817
  %823 = bitcast %"struct.std::__1::pair.1413"** %818 to i8*
  call void @_ZdlPv(i8* %823) #16
  br label %824

824:                                              ; preds = %822, %817, %720, %705
  %825 = phi i64* [ %821, %822 ], [ %821, %817 ], [ %724, %720 ], [ %707, %705 ]
  store i64 %704, i64* %825, align 8
  %826 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %227, align 8
  %827 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %826, i64 1
  store %"struct.std::__1::pair.1413"** %827, %"struct.std::__1::pair.1413"*** %227, align 8
  %828 = ptrtoint %"struct.std::__1::pair.1413"** %827 to i64
  br label %1298

829:                                              ; preds = %701
  %830 = icmp eq %"struct.std::__1::pair.1413"** %547, %700
  br i1 %830, label %831, label %942

831:                                              ; preds = %829
  %832 = icmp ult %"struct.std::__1::pair.1413"** %548, %699
  br i1 %832, label %833, label %843

833:                                              ; preds = %831
  br i1 %541, label %840, label %834

834:                                              ; preds = %833
  %835 = sub nsw i64 0, %693
  %836 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %548, i64 %835
  %837 = bitcast %"struct.std::__1::pair.1413"** %836 to i8*
  %838 = inttoptr i64 %263 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %837, i8* align 8 %838, i64 %540, i1 false) #14
  %839 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %227, align 8
  br label %840

840:                                              ; preds = %834, %833
  %841 = phi %"struct.std::__1::pair.1413"** [ %839, %834 ], [ %548, %833 ]
  %842 = phi %"struct.std::__1::pair.1413"** [ %836, %834 ], [ %548, %833 ]
  store %"struct.std::__1::pair.1413"** %842, %"struct.std::__1::pair.1413"*** %224, align 8
  store %"struct.std::__1::pair.1413"** %841, %"struct.std::__1::pair.1413"*** %227, align 8
  br label %942

843:                                              ; preds = %831
  %844 = ashr exact i64 %696, 2
  %845 = icmp eq i64 %696, 0
  %846 = select i1 %845, i64 1, i64 %844
  %847 = icmp ugt i64 %846, 2305843009213693951
  br i1 %847, label %848, label %849

848:                                              ; preds = %843
  call void @abort() #15
  unreachable

849:                                              ; preds = %843
  %850 = add nuw nsw i64 %846, 3
  %851 = lshr i64 %850, 2
  %852 = shl i64 %846, 3
  %853 = call i8* @_Znwm(i64 %852) #16
  %854 = bitcast i8* %853 to %"struct.std::__1::pair.1413"**
  %855 = ptrtoint i8* %853 to i64
  %856 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %854, i64 %851
  %857 = ptrtoint %"struct.std::__1::pair.1413"** %856 to i64
  %858 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %854, i64 %846
  %859 = ptrtoint %"struct.std::__1::pair.1413"** %858 to i64
  %860 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %856, i64 %693
  br i1 %541, label %936, label %861

861:                                              ; preds = %849
  %862 = add i64 %540, -8
  %863 = lshr i64 %862, 3
  %864 = add nuw nsw i64 %863, 1
  %865 = and i64 %864, 7
  %866 = icmp eq i64 %865, 0
  br i1 %866, label %882, label %867

867:                                              ; preds = %861, %867
  %868 = phi %"struct.std::__1::pair.1413"** [ %875, %867 ], [ %856, %861 ]
  %869 = phi i64 [ %876, %867 ], [ %857, %861 ]
  %870 = phi %"struct.std::__1::pair.1413"** [ %877, %867 ], [ %547, %861 ]
  %871 = phi i64 [ %878, %867 ], [ %865, %861 ]
  %872 = bitcast %"struct.std::__1::pair.1413"** %870 to i64*
  %873 = load i64, i64* %872, align 8
  %874 = inttoptr i64 %869 to i64*
  store i64 %873, i64* %874, align 8
  %875 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %868, i64 1
  %876 = ptrtoint %"struct.std::__1::pair.1413"** %875 to i64
  %877 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %870, i64 1
  %878 = add i64 %871, -1
  %879 = icmp eq i64 %878, 0
  br i1 %879, label %880, label %867, !llvm.loop !12

880:                                              ; preds = %867
  %881 = ptrtoint %"struct.std::__1::pair.1413"** %875 to i64
  br label %882

882:                                              ; preds = %861, %880
  %883 = phi %"struct.std::__1::pair.1413"** [ %856, %861 ], [ %875, %880 ]
  %884 = phi i64 [ %857, %861 ], [ %881, %880 ]
  %885 = phi %"struct.std::__1::pair.1413"** [ %547, %861 ], [ %877, %880 ]
  %886 = icmp ult i64 %862, 56
  br i1 %886, label %933, label %887

887:                                              ; preds = %882, %887
  %888 = phi %"struct.std::__1::pair.1413"** [ %929, %887 ], [ %883, %882 ]
  %889 = phi i64 [ %930, %887 ], [ %884, %882 ]
  %890 = phi %"struct.std::__1::pair.1413"** [ %931, %887 ], [ %885, %882 ]
  %891 = bitcast %"struct.std::__1::pair.1413"** %890 to i64*
  %892 = load i64, i64* %891, align 8
  %893 = inttoptr i64 %889 to i64*
  store i64 %892, i64* %893, align 8
  %894 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 1
  %895 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 1
  %896 = bitcast %"struct.std::__1::pair.1413"** %895 to i64*
  %897 = load i64, i64* %896, align 8
  %898 = bitcast %"struct.std::__1::pair.1413"** %894 to i64*
  store i64 %897, i64* %898, align 8
  %899 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 2
  %900 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 2
  %901 = bitcast %"struct.std::__1::pair.1413"** %900 to i64*
  %902 = load i64, i64* %901, align 8
  %903 = bitcast %"struct.std::__1::pair.1413"** %899 to i64*
  store i64 %902, i64* %903, align 8
  %904 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 3
  %905 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 3
  %906 = bitcast %"struct.std::__1::pair.1413"** %905 to i64*
  %907 = load i64, i64* %906, align 8
  %908 = bitcast %"struct.std::__1::pair.1413"** %904 to i64*
  store i64 %907, i64* %908, align 8
  %909 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 4
  %910 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 4
  %911 = bitcast %"struct.std::__1::pair.1413"** %910 to i64*
  %912 = load i64, i64* %911, align 8
  %913 = bitcast %"struct.std::__1::pair.1413"** %909 to i64*
  store i64 %912, i64* %913, align 8
  %914 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 5
  %915 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 5
  %916 = bitcast %"struct.std::__1::pair.1413"** %915 to i64*
  %917 = load i64, i64* %916, align 8
  %918 = bitcast %"struct.std::__1::pair.1413"** %914 to i64*
  store i64 %917, i64* %918, align 8
  %919 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 6
  %920 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 6
  %921 = bitcast %"struct.std::__1::pair.1413"** %920 to i64*
  %922 = load i64, i64* %921, align 8
  %923 = bitcast %"struct.std::__1::pair.1413"** %919 to i64*
  store i64 %922, i64* %923, align 8
  %924 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 7
  %925 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 7
  %926 = bitcast %"struct.std::__1::pair.1413"** %925 to i64*
  %927 = load i64, i64* %926, align 8
  %928 = bitcast %"struct.std::__1::pair.1413"** %924 to i64*
  store i64 %927, i64* %928, align 8
  %929 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %888, i64 8
  %930 = ptrtoint %"struct.std::__1::pair.1413"** %929 to i64
  %931 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %890, i64 8
  %932 = icmp eq %"struct.std::__1::pair.1413"** %860, %929
  br i1 %932, label %933, label %887

933:                                              ; preds = %887, %882
  %934 = ptrtoint %"struct.std::__1::pair.1413"** %860 to i64
  %935 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  br label %936

936:                                              ; preds = %933, %849
  %937 = phi %"struct.std::__1::pair.1413"** [ %935, %933 ], [ %547, %849 ]
  %938 = phi i64 [ %934, %933 ], [ %857, %849 ]
  store i64 %855, i64* %232, align 8
  store i64 %857, i64* %229, align 8
  store i64 %938, i64* %228, align 8
  store i64 %859, i64* %231, align 8
  %939 = icmp eq %"struct.std::__1::pair.1413"** %937, null
  br i1 %939, label %942, label %940

940:                                              ; preds = %936
  %941 = bitcast %"struct.std::__1::pair.1413"** %937 to i8*
  call void @_ZdlPv(i8* %941) #16
  br label %942

942:                                              ; preds = %940, %936, %840, %829
  %943 = phi %"struct.std::__1::pair.1413"** [ %856, %940 ], [ %856, %936 ], [ %842, %840 ], [ %547, %829 ]
  %944 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %943, i64 -1
  %945 = bitcast %"struct.std::__1::pair.1413"** %944 to i64*
  store i64 %704, i64* %945, align 8
  %946 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %224, align 8
  %947 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %946, i64 -1
  %948 = bitcast %"struct.std::__1::pair.1413"** %947 to i64*
  %949 = load i64, i64* %948, align 8
  %950 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %227, align 8
  %951 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %230, align 8
  %952 = icmp eq %"struct.std::__1::pair.1413"** %950, %951
  %953 = ptrtoint %"struct.std::__1::pair.1413"** %951 to i64
  %954 = bitcast %"struct.std::__1::pair.1413"** %950 to i64*
  br i1 %952, label %955, label %1081

955:                                              ; preds = %942
  %956 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  %957 = icmp ugt %"struct.std::__1::pair.1413"** %946, %956
  %958 = ptrtoint %"struct.std::__1::pair.1413"** %956 to i64
  br i1 %957, label %959, label %976

959:                                              ; preds = %955
  %960 = ptrtoint %"struct.std::__1::pair.1413"** %946 to i64
  %961 = sub i64 %960, %958
  %962 = ashr exact i64 %961, 3
  %963 = add nsw i64 %962, 1
  %964 = sdiv i64 %963, -2
  %965 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %946, i64 %964
  %966 = ptrtoint %"struct.std::__1::pair.1413"** %950 to i64
  %967 = sub i64 %966, %960
  %968 = ashr exact i64 %967, 3
  %969 = icmp eq i64 %967, 0
  br i1 %969, label %973, label %970

970:                                              ; preds = %959
  %971 = bitcast %"struct.std::__1::pair.1413"** %965 to i8*
  %972 = bitcast %"struct.std::__1::pair.1413"** %946 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %971, i8* align 8 %972, i64 %967, i1 false) #14
  br label %973

973:                                              ; preds = %970, %959
  %974 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %965, i64 %968
  store %"struct.std::__1::pair.1413"** %974, %"struct.std::__1::pair.1413"*** %227, align 8
  store %"struct.std::__1::pair.1413"** %965, %"struct.std::__1::pair.1413"*** %224, align 8
  %975 = bitcast %"struct.std::__1::pair.1413"** %974 to i64*
  br label %1081

976:                                              ; preds = %955
  %977 = sub i64 %953, %958
  %978 = ashr exact i64 %977, 2
  %979 = icmp eq i64 %977, 0
  %980 = select i1 %979, i64 1, i64 %978
  %981 = icmp ugt i64 %980, 2305843009213693951
  br i1 %981, label %982, label %983

982:                                              ; preds = %976
  call void @abort() #15
  unreachable

983:                                              ; preds = %976
  %984 = lshr i64 %980, 2
  %985 = shl i64 %980, 3
  %986 = call i8* @_Znwm(i64 %985) #16
  %987 = bitcast i8* %986 to %"struct.std::__1::pair.1413"**
  %988 = ptrtoint i8* %986 to i64
  %989 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %987, i64 %984
  %990 = ptrtoint %"struct.std::__1::pair.1413"** %989 to i64
  %991 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %987, i64 %980
  %992 = ptrtoint %"struct.std::__1::pair.1413"** %991 to i64
  %993 = ptrtoint %"struct.std::__1::pair.1413"** %950 to i64
  %994 = ptrtoint %"struct.std::__1::pair.1413"** %946 to i64
  %995 = sub i64 %993, %994
  %996 = ashr exact i64 %995, 3
  %997 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %989, i64 %996
  %998 = icmp eq i64 %995, 0
  br i1 %998, label %1074, label %999

999:                                              ; preds = %983
  %1000 = add i64 %995, -8
  %1001 = lshr i64 %1000, 3
  %1002 = add nuw nsw i64 %1001, 1
  %1003 = and i64 %1002, 7
  %1004 = icmp eq i64 %1003, 0
  br i1 %1004, label %1020, label %1005

1005:                                             ; preds = %999, %1005
  %1006 = phi %"struct.std::__1::pair.1413"** [ %1013, %1005 ], [ %989, %999 ]
  %1007 = phi i64 [ %1014, %1005 ], [ %990, %999 ]
  %1008 = phi %"struct.std::__1::pair.1413"** [ %1015, %1005 ], [ %946, %999 ]
  %1009 = phi i64 [ %1016, %1005 ], [ %1003, %999 ]
  %1010 = bitcast %"struct.std::__1::pair.1413"** %1008 to i64*
  %1011 = load i64, i64* %1010, align 8
  %1012 = inttoptr i64 %1007 to i64*
  store i64 %1011, i64* %1012, align 8
  %1013 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1006, i64 1
  %1014 = ptrtoint %"struct.std::__1::pair.1413"** %1013 to i64
  %1015 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1008, i64 1
  %1016 = add i64 %1009, -1
  %1017 = icmp eq i64 %1016, 0
  br i1 %1017, label %1018, label %1005, !llvm.loop !13

1018:                                             ; preds = %1005
  %1019 = ptrtoint %"struct.std::__1::pair.1413"** %1013 to i64
  br label %1020

1020:                                             ; preds = %999, %1018
  %1021 = phi %"struct.std::__1::pair.1413"** [ %989, %999 ], [ %1013, %1018 ]
  %1022 = phi i64 [ %990, %999 ], [ %1019, %1018 ]
  %1023 = phi %"struct.std::__1::pair.1413"** [ %946, %999 ], [ %1015, %1018 ]
  %1024 = icmp ult i64 %1000, 56
  br i1 %1024, label %1071, label %1025

1025:                                             ; preds = %1020, %1025
  %1026 = phi %"struct.std::__1::pair.1413"** [ %1067, %1025 ], [ %1021, %1020 ]
  %1027 = phi i64 [ %1068, %1025 ], [ %1022, %1020 ]
  %1028 = phi %"struct.std::__1::pair.1413"** [ %1069, %1025 ], [ %1023, %1020 ]
  %1029 = bitcast %"struct.std::__1::pair.1413"** %1028 to i64*
  %1030 = load i64, i64* %1029, align 8
  %1031 = inttoptr i64 %1027 to i64*
  store i64 %1030, i64* %1031, align 8
  %1032 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 1
  %1033 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 1
  %1034 = bitcast %"struct.std::__1::pair.1413"** %1033 to i64*
  %1035 = load i64, i64* %1034, align 8
  %1036 = bitcast %"struct.std::__1::pair.1413"** %1032 to i64*
  store i64 %1035, i64* %1036, align 8
  %1037 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 2
  %1038 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 2
  %1039 = bitcast %"struct.std::__1::pair.1413"** %1038 to i64*
  %1040 = load i64, i64* %1039, align 8
  %1041 = bitcast %"struct.std::__1::pair.1413"** %1037 to i64*
  store i64 %1040, i64* %1041, align 8
  %1042 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 3
  %1043 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 3
  %1044 = bitcast %"struct.std::__1::pair.1413"** %1043 to i64*
  %1045 = load i64, i64* %1044, align 8
  %1046 = bitcast %"struct.std::__1::pair.1413"** %1042 to i64*
  store i64 %1045, i64* %1046, align 8
  %1047 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 4
  %1048 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 4
  %1049 = bitcast %"struct.std::__1::pair.1413"** %1048 to i64*
  %1050 = load i64, i64* %1049, align 8
  %1051 = bitcast %"struct.std::__1::pair.1413"** %1047 to i64*
  store i64 %1050, i64* %1051, align 8
  %1052 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 5
  %1053 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 5
  %1054 = bitcast %"struct.std::__1::pair.1413"** %1053 to i64*
  %1055 = load i64, i64* %1054, align 8
  %1056 = bitcast %"struct.std::__1::pair.1413"** %1052 to i64*
  store i64 %1055, i64* %1056, align 8
  %1057 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 6
  %1058 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 6
  %1059 = bitcast %"struct.std::__1::pair.1413"** %1058 to i64*
  %1060 = load i64, i64* %1059, align 8
  %1061 = bitcast %"struct.std::__1::pair.1413"** %1057 to i64*
  store i64 %1060, i64* %1061, align 8
  %1062 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 7
  %1063 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 7
  %1064 = bitcast %"struct.std::__1::pair.1413"** %1063 to i64*
  %1065 = load i64, i64* %1064, align 8
  %1066 = bitcast %"struct.std::__1::pair.1413"** %1062 to i64*
  store i64 %1065, i64* %1066, align 8
  %1067 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1026, i64 8
  %1068 = ptrtoint %"struct.std::__1::pair.1413"** %1067 to i64
  %1069 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1028, i64 8
  %1070 = icmp eq %"struct.std::__1::pair.1413"** %997, %1067
  br i1 %1070, label %1071, label %1025

1071:                                             ; preds = %1025, %1020
  %1072 = ptrtoint %"struct.std::__1::pair.1413"** %997 to i64
  %1073 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  br label %1074

1074:                                             ; preds = %1071, %983
  %1075 = phi %"struct.std::__1::pair.1413"** [ %1073, %1071 ], [ %956, %983 ]
  %1076 = phi i64 [ %1072, %1071 ], [ %990, %983 ]
  store i64 %988, i64* %232, align 8
  store i64 %990, i64* %229, align 8
  store i64 %1076, i64* %228, align 8
  store i64 %992, i64* %231, align 8
  %1077 = icmp eq %"struct.std::__1::pair.1413"** %1075, null
  %1078 = inttoptr i64 %1076 to i64*
  br i1 %1077, label %1081, label %1079

1079:                                             ; preds = %1074
  %1080 = bitcast %"struct.std::__1::pair.1413"** %1075 to i8*
  call void @_ZdlPv(i8* %1080) #16
  br label %1081

1081:                                             ; preds = %1079, %1074, %973, %942
  %1082 = phi i64* [ %1078, %1079 ], [ %1078, %1074 ], [ %975, %973 ], [ %954, %942 ]
  store i64 %949, i64* %1082, align 8
  %1083 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %227, align 8
  %1084 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1083, i64 1
  store %"struct.std::__1::pair.1413"** %1084, %"struct.std::__1::pair.1413"*** %227, align 8
  %1085 = ptrtoint %"struct.std::__1::pair.1413"** %1084 to i64
  br label %1298

1086:                                             ; preds = %692
  %1087 = ashr exact i64 %696, 2
  %1088 = icmp eq i64 %696, 0
  %1089 = select i1 %1088, i64 1, i64 %1087
  %1090 = icmp ugt i64 %1089, 2305843009213693951
  br i1 %1090, label %1091, label %1092

1091:                                             ; preds = %1086
  call void @abort() #15
  unreachable

1092:                                             ; preds = %1086
  %1093 = shl i64 %1089, 3
  %1094 = call i8* @_Znwm(i64 %1093) #16
  %1095 = bitcast i8* %1094 to %"struct.std::__1::pair.1413"**
  %1096 = ptrtoint i8* %1094 to i64
  %1097 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1095, i64 %693
  %1098 = ptrtoint %"struct.std::__1::pair.1413"** %1097 to i64
  %1099 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1095, i64 %1089
  %1100 = ptrtoint %"struct.std::__1::pair.1413"** %1099 to i64
  %1101 = call i8* @_Znwm(i64 4096) #16
  %1102 = ptrtoint i8* %1101 to i64
  %1103 = icmp eq i64 %693, %1089
  br i1 %1103, label %1104, label %1130

1104:                                             ; preds = %1092
  %1105 = icmp ugt %"struct.std::__1::pair.1413"** %1097, %1095
  br i1 %1105, label %1106, label %1113

1106:                                             ; preds = %1104
  %1107 = sub i64 %1098, %1096
  %1108 = ashr exact i64 %1107, 3
  %1109 = add nsw i64 %1108, 1
  %1110 = sdiv i64 %1109, -2
  %1111 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1097, i64 %1110
  %1112 = ptrtoint %"struct.std::__1::pair.1413"** %1111 to i64
  br label %1130

1113:                                             ; preds = %1104
  %1114 = sub i64 %1100, %1096
  %1115 = ashr exact i64 %1114, 2
  %1116 = icmp eq i64 %1114, 0
  %1117 = select i1 %1116, i64 1, i64 %1115
  %1118 = icmp ugt i64 %1117, 2305843009213693951
  br i1 %1118, label %1119, label %1120

1119:                                             ; preds = %1113
  call void @abort() #15
  unreachable

1120:                                             ; preds = %1113
  %1121 = lshr i64 %1117, 2
  %1122 = shl i64 %1117, 3
  %1123 = call i8* @_Znwm(i64 %1122) #16
  %1124 = bitcast i8* %1123 to %"struct.std::__1::pair.1413"**
  %1125 = ptrtoint i8* %1123 to i64
  %1126 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1124, i64 %1121
  %1127 = ptrtoint %"struct.std::__1::pair.1413"** %1126 to i64
  %1128 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1124, i64 %1117
  %1129 = ptrtoint %"struct.std::__1::pair.1413"** %1128 to i64
  call void @_ZdlPv(i8* nonnull %1094) #16
  br label %1130

1130:                                             ; preds = %1120, %1106, %1092
  %1131 = phi %"struct.std::__1::pair.1413"** [ %547, %1106 ], [ %261, %1120 ], [ %547, %1092 ]
  %1132 = phi %"struct.std::__1::pair.1413"** [ %548, %1106 ], [ %262, %1120 ], [ %548, %1092 ]
  %1133 = phi i64 [ %1096, %1106 ], [ %1125, %1120 ], [ %1096, %1092 ]
  %1134 = phi i64 [ %1112, %1106 ], [ %1127, %1120 ], [ %1098, %1092 ]
  %1135 = phi %"struct.std::__1::pair.1413"** [ %1111, %1106 ], [ %1126, %1120 ], [ %1097, %1092 ]
  %1136 = phi i64 [ %1100, %1106 ], [ %1129, %1120 ], [ %1100, %1092 ]
  %1137 = bitcast %"struct.std::__1::pair.1413"** %1135 to i64*
  store i64 %1102, i64* %1137, align 8
  %1138 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1135, i64 1
  %1139 = ptrtoint %"struct.std::__1::pair.1413"** %1138 to i64
  %1140 = icmp eq %"struct.std::__1::pair.1413"** %1132, %1131
  br i1 %1140, label %1144, label %1154

1141:                                             ; preds = %1286
  %1142 = ptrtoint %"struct.std::__1::pair.1413"** %1291 to i64
  %1143 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %233, align 8
  br label %1144

1144:                                             ; preds = %1141, %1130
  %1145 = phi %"struct.std::__1::pair.1413"** [ %700, %1130 ], [ %1143, %1141 ]
  %1146 = phi i64 [ %1133, %1130 ], [ %1287, %1141 ]
  %1147 = phi i64 [ %1134, %1130 ], [ %1142, %1141 ]
  %1148 = phi i64 [ %1139, %1130 ], [ %1288, %1141 ]
  %1149 = phi i64 [ %1136, %1130 ], [ %1289, %1141 ]
  store i64 %1146, i64* %232, align 8
  store i64 %1147, i64* %229, align 8
  store i64 %1148, i64* %228, align 8
  store i64 %1149, i64* %231, align 8
  %1150 = icmp eq %"struct.std::__1::pair.1413"** %1145, null
  %1151 = inttoptr i64 %1148 to %"struct.std::__1::pair.1413"**
  br i1 %1150, label %1298, label %1152

1152:                                             ; preds = %1144
  %1153 = bitcast %"struct.std::__1::pair.1413"** %1145 to i8*
  call void @_ZdlPv(i8* %1153) #16
  br label %1298

1154:                                             ; preds = %1130, %1286
  %1155 = phi %"struct.std::__1::pair.1413"** [ %1160, %1286 ], [ %1132, %1130 ]
  %1156 = phi i64 [ %1289, %1286 ], [ %1136, %1130 ]
  %1157 = phi i64 [ %1288, %1286 ], [ %1139, %1130 ]
  %1158 = phi i64 [ %1295, %1286 ], [ %1134, %1130 ]
  %1159 = phi i64 [ %1287, %1286 ], [ %1133, %1130 ]
  %1160 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1155, i64 -1
  %1161 = inttoptr i64 %1158 to %"struct.std::__1::pair.1413"**
  %1162 = inttoptr i64 %1159 to %"struct.std::__1::pair.1413"**
  %1163 = icmp eq %"struct.std::__1::pair.1413"** %1161, %1162
  br i1 %1163, label %1164, label %1286

1164:                                             ; preds = %1154
  %1165 = inttoptr i64 %1157 to %"struct.std::__1::pair.1413"**
  %1166 = inttoptr i64 %1156 to %"struct.std::__1::pair.1413"**
  %1167 = icmp ult %"struct.std::__1::pair.1413"** %1165, %1166
  br i1 %1167, label %1168, label %1185

1168:                                             ; preds = %1164
  %1169 = sub i64 %1156, %1157
  %1170 = ashr exact i64 %1169, 3
  %1171 = add nsw i64 %1170, 1
  %1172 = sdiv i64 %1171, 2
  %1173 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1165, i64 %1172
  %1174 = sub i64 %1157, %1158
  %1175 = icmp eq i64 %1174, 0
  br i1 %1175, label %1182, label %1176

1176:                                             ; preds = %1168
  %1177 = ashr exact i64 %1174, 3
  %1178 = sub nsw i64 0, %1177
  %1179 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1173, i64 %1178
  %1180 = bitcast %"struct.std::__1::pair.1413"** %1179 to i8*
  %1181 = inttoptr i64 %1158 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %1180, i8* align 8 %1181, i64 %1174, i1 false) #14
  br label %1182

1182:                                             ; preds = %1176, %1168
  %1183 = phi %"struct.std::__1::pair.1413"** [ %1179, %1176 ], [ %1173, %1168 ]
  %1184 = ptrtoint %"struct.std::__1::pair.1413"** %1173 to i64
  br label %1286

1185:                                             ; preds = %1164
  %1186 = sub i64 %1156, %1159
  %1187 = ashr exact i64 %1186, 2
  %1188 = icmp eq i64 %1186, 0
  %1189 = select i1 %1188, i64 1, i64 %1187
  %1190 = icmp ugt i64 %1189, 2305843009213693951
  br i1 %1190, label %1191, label %1192

1191:                                             ; preds = %1185
  call void @abort() #15
  unreachable

1192:                                             ; preds = %1185
  %1193 = add nuw nsw i64 %1189, 3
  %1194 = lshr i64 %1193, 2
  %1195 = shl i64 %1189, 3
  %1196 = call i8* @_Znwm(i64 %1195) #16
  %1197 = bitcast i8* %1196 to %"struct.std::__1::pair.1413"**
  %1198 = ptrtoint i8* %1196 to i64
  %1199 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1197, i64 %1194
  %1200 = ptrtoint %"struct.std::__1::pair.1413"** %1199 to i64
  %1201 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1197, i64 %1189
  %1202 = ptrtoint %"struct.std::__1::pair.1413"** %1201 to i64
  %1203 = sub i64 %1157, %1158
  %1204 = ashr exact i64 %1203, 3
  %1205 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1199, i64 %1204
  %1206 = icmp eq i64 %1203, 0
  br i1 %1206, label %1281, label %1207

1207:                                             ; preds = %1192
  %1208 = add i64 %1203, -8
  %1209 = lshr i64 %1208, 3
  %1210 = add nuw nsw i64 %1209, 1
  %1211 = and i64 %1210, 7
  %1212 = icmp eq i64 %1211, 0
  br i1 %1212, label %1228, label %1213

1213:                                             ; preds = %1207, %1213
  %1214 = phi %"struct.std::__1::pair.1413"** [ %1221, %1213 ], [ %1199, %1207 ]
  %1215 = phi i64 [ %1222, %1213 ], [ %1200, %1207 ]
  %1216 = phi %"struct.std::__1::pair.1413"** [ %1223, %1213 ], [ %1161, %1207 ]
  %1217 = phi i64 [ %1224, %1213 ], [ %1211, %1207 ]
  %1218 = bitcast %"struct.std::__1::pair.1413"** %1216 to i64*
  %1219 = load i64, i64* %1218, align 8
  %1220 = inttoptr i64 %1215 to i64*
  store i64 %1219, i64* %1220, align 8
  %1221 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1214, i64 1
  %1222 = ptrtoint %"struct.std::__1::pair.1413"** %1221 to i64
  %1223 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1216, i64 1
  %1224 = add i64 %1217, -1
  %1225 = icmp eq i64 %1224, 0
  br i1 %1225, label %1226, label %1213, !llvm.loop !14

1226:                                             ; preds = %1213
  %1227 = ptrtoint %"struct.std::__1::pair.1413"** %1221 to i64
  br label %1228

1228:                                             ; preds = %1207, %1226
  %1229 = phi %"struct.std::__1::pair.1413"** [ %1199, %1207 ], [ %1221, %1226 ]
  %1230 = phi i64 [ %1200, %1207 ], [ %1227, %1226 ]
  %1231 = phi %"struct.std::__1::pair.1413"** [ %1161, %1207 ], [ %1223, %1226 ]
  %1232 = icmp ult i64 %1208, 56
  br i1 %1232, label %1279, label %1233

1233:                                             ; preds = %1228, %1233
  %1234 = phi %"struct.std::__1::pair.1413"** [ %1275, %1233 ], [ %1229, %1228 ]
  %1235 = phi i64 [ %1276, %1233 ], [ %1230, %1228 ]
  %1236 = phi %"struct.std::__1::pair.1413"** [ %1277, %1233 ], [ %1231, %1228 ]
  %1237 = bitcast %"struct.std::__1::pair.1413"** %1236 to i64*
  %1238 = load i64, i64* %1237, align 8
  %1239 = inttoptr i64 %1235 to i64*
  store i64 %1238, i64* %1239, align 8
  %1240 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 1
  %1241 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 1
  %1242 = bitcast %"struct.std::__1::pair.1413"** %1241 to i64*
  %1243 = load i64, i64* %1242, align 8
  %1244 = bitcast %"struct.std::__1::pair.1413"** %1240 to i64*
  store i64 %1243, i64* %1244, align 8
  %1245 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 2
  %1246 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 2
  %1247 = bitcast %"struct.std::__1::pair.1413"** %1246 to i64*
  %1248 = load i64, i64* %1247, align 8
  %1249 = bitcast %"struct.std::__1::pair.1413"** %1245 to i64*
  store i64 %1248, i64* %1249, align 8
  %1250 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 3
  %1251 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 3
  %1252 = bitcast %"struct.std::__1::pair.1413"** %1251 to i64*
  %1253 = load i64, i64* %1252, align 8
  %1254 = bitcast %"struct.std::__1::pair.1413"** %1250 to i64*
  store i64 %1253, i64* %1254, align 8
  %1255 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 4
  %1256 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 4
  %1257 = bitcast %"struct.std::__1::pair.1413"** %1256 to i64*
  %1258 = load i64, i64* %1257, align 8
  %1259 = bitcast %"struct.std::__1::pair.1413"** %1255 to i64*
  store i64 %1258, i64* %1259, align 8
  %1260 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 5
  %1261 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 5
  %1262 = bitcast %"struct.std::__1::pair.1413"** %1261 to i64*
  %1263 = load i64, i64* %1262, align 8
  %1264 = bitcast %"struct.std::__1::pair.1413"** %1260 to i64*
  store i64 %1263, i64* %1264, align 8
  %1265 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 6
  %1266 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 6
  %1267 = bitcast %"struct.std::__1::pair.1413"** %1266 to i64*
  %1268 = load i64, i64* %1267, align 8
  %1269 = bitcast %"struct.std::__1::pair.1413"** %1265 to i64*
  store i64 %1268, i64* %1269, align 8
  %1270 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 7
  %1271 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 7
  %1272 = bitcast %"struct.std::__1::pair.1413"** %1271 to i64*
  %1273 = load i64, i64* %1272, align 8
  %1274 = bitcast %"struct.std::__1::pair.1413"** %1270 to i64*
  store i64 %1273, i64* %1274, align 8
  %1275 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1234, i64 8
  %1276 = ptrtoint %"struct.std::__1::pair.1413"** %1275 to i64
  %1277 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1236, i64 8
  %1278 = icmp eq %"struct.std::__1::pair.1413"** %1205, %1275
  br i1 %1278, label %1279, label %1233

1279:                                             ; preds = %1233, %1228
  %1280 = ptrtoint %"struct.std::__1::pair.1413"** %1205 to i64
  br label %1281

1281:                                             ; preds = %1279, %1192
  %1282 = phi i64 [ %1280, %1279 ], [ %1200, %1192 ]
  %1283 = icmp eq i64 %1158, 0
  br i1 %1283, label %1286, label %1284

1284:                                             ; preds = %1281
  %1285 = inttoptr i64 %1158 to i8*
  call void @_ZdlPv(i8* %1285) #16
  br label %1286

1286:                                             ; preds = %1284, %1281, %1182, %1154
  %1287 = phi i64 [ %1159, %1182 ], [ %1198, %1281 ], [ %1198, %1284 ], [ %1159, %1154 ]
  %1288 = phi i64 [ %1184, %1182 ], [ %1282, %1281 ], [ %1282, %1284 ], [ %1157, %1154 ]
  %1289 = phi i64 [ %1156, %1182 ], [ %1202, %1281 ], [ %1202, %1284 ], [ %1156, %1154 ]
  %1290 = phi %"struct.std::__1::pair.1413"** [ %1183, %1182 ], [ %1199, %1281 ], [ %1199, %1284 ], [ %1161, %1154 ]
  %1291 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1290, i64 -1
  %1292 = bitcast %"struct.std::__1::pair.1413"** %1160 to i64*
  %1293 = load i64, i64* %1292, align 8
  %1294 = bitcast %"struct.std::__1::pair.1413"** %1291 to i64*
  store i64 %1293, i64* %1294, align 8
  %1295 = ptrtoint %"struct.std::__1::pair.1413"** %1291 to i64
  %1296 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %224, align 8
  %1297 = icmp eq %"struct.std::__1::pair.1413"** %1160, %1296
  br i1 %1297, label %1141, label %1154

1298:                                             ; preds = %1152, %1144, %1081, %824, %687, %536
  %1299 = phi %"struct.std::__1::pair.1413"** [ %1151, %1152 ], [ %1151, %1144 ], [ %1084, %1081 ], [ %827, %824 ], [ %690, %687 ], [ %255, %536 ]
  %1300 = phi i64 [ %1148, %1152 ], [ %1148, %1144 ], [ %1085, %1081 ], [ %828, %824 ], [ %691, %687 ], [ %258, %536 ]
  %1301 = phi %"struct.std::__1::pair.1413"** [ %1151, %1152 ], [ %1151, %1144 ], [ %1084, %1081 ], [ %827, %824 ], [ %690, %687 ], [ %262, %536 ]
  %1302 = phi i64 [ %1148, %1152 ], [ %1148, %1144 ], [ %1085, %1081 ], [ %828, %824 ], [ %691, %687 ], [ %264, %536 ]
  %1303 = phi %"struct.std::__1::pair.1413"** [ %1151, %1152 ], [ %1151, %1144 ], [ %1084, %1081 ], [ %827, %824 ], [ %690, %687 ], [ %548, %536 ]
  %1304 = load i64, i64* %222, align 8
  %1305 = load i64, i64* %223, align 8
  %1306 = add i64 %1305, %1304
  %1307 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %224, align 8
  %1308 = icmp eq %"struct.std::__1::pair.1413"** %1303, %1307
  %1309 = ptrtoint %"struct.std::__1::pair.1413"** %1307 to i64
  br i1 %1308, label %1317, label %1310

1310:                                             ; preds = %1298
  %1311 = lshr i64 %1306, 7
  %1312 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1307, i64 %1311
  %1313 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1312, align 8
  %1314 = and i64 %1306, 127
  %1315 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %1313, i64 %1314
  %1316 = bitcast %"struct.std::__1::pair.1413"* %1315 to i8*
  br label %1317

1317:                                             ; preds = %1310, %1298
  %1318 = phi i8* [ %1316, %1310 ], [ null, %1298 ]
  %1319 = bitcast i8* %1318 to i64*
  store i64 %539, i64* %1319, align 8
  %1320 = getelementptr inbounds i8, i8* %1318, i64 8
  %1321 = bitcast i8* %1320 to i32*
  store i32 %525, i32* %1321, align 8
  %1322 = getelementptr inbounds i8, i8* %1318, i64 12
  %1323 = bitcast i8* %1322 to i32*
  store i32 -1, i32* %1323, align 4
  %1324 = getelementptr inbounds i8, i8* %1318, i64 16
  store i8 0, i8* %1324, align 8
  %1325 = getelementptr inbounds i8, i8* %1318, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1325, i8* nonnull align 1 %225, i64 7, i1 false) #14
  %1326 = getelementptr inbounds i8, i8* %1318, i64 24
  %1327 = bitcast i8* %1326 to %"class.v8::internal::FunctionLiteral"**
  store %"class.v8::internal::FunctionLiteral"* %537, %"class.v8::internal::FunctionLiteral"** %1327, align 8
  %1328 = add i64 %1304, 1
  store i64 %1328, i64* %222, align 8
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %226)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %225)
  br label %1339

1329:                                             ; preds = %254
  %1330 = icmp eq i64 %269, 0
  br i1 %1330, label %1339, label %1331

1331:                                             ; preds = %1329
  %1332 = add i64 %268, -1
  %1333 = add i64 %1332, %269
  %1334 = lshr i64 %1333, 7
  %1335 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %267, i64 %1334
  %1336 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %1335, align 8
  %1337 = and i64 %1333, 127
  %1338 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %1336, i64 %1337, i32 1, i32 2
  store i8 1, i8* %1338, align 8
  br label %1339

1339:                                             ; preds = %1331, %1329, %1317, %510, %498, %275, %254
  %1340 = phi %"struct.std::__1::pair.1413"** [ %255, %254 ], [ %255, %1329 ], [ %255, %1331 ], [ %1299, %1317 ], [ %255, %275 ], [ %255, %498 ], [ %514, %510 ]
  %1341 = phi i64 [ %256, %254 ], [ %256, %1329 ], [ %256, %1331 ], [ %1305, %1317 ], [ %256, %275 ], [ %256, %498 ], [ %256, %510 ]
  %1342 = phi i64 [ %257, %254 ], [ %257, %1329 ], [ %257, %1331 ], [ %1309, %1317 ], [ %257, %275 ], [ %257, %498 ], [ %257, %510 ]
  %1343 = phi i64 [ %258, %254 ], [ %258, %1329 ], [ %258, %1331 ], [ %1300, %1317 ], [ %258, %275 ], [ %258, %498 ], [ %515, %510 ]
  %1344 = phi %"struct.std::__1::pair.1413"** [ %259, %254 ], [ %259, %1329 ], [ %259, %1331 ], [ %1307, %1317 ], [ %259, %275 ], [ %508, %498 ], [ %508, %510 ]
  %1345 = phi %"struct.std::__1::pair.1413"** [ %260, %254 ], [ %260, %1329 ], [ %260, %1331 ], [ %1307, %1317 ], [ %260, %275 ], [ %508, %498 ], [ %508, %510 ]
  %1346 = phi %"struct.std::__1::pair.1413"** [ %261, %254 ], [ %261, %1329 ], [ %261, %1331 ], [ %1307, %1317 ], [ %261, %275 ], [ %508, %498 ], [ %508, %510 ]
  %1347 = phi %"struct.std::__1::pair.1413"** [ %262, %254 ], [ %262, %1329 ], [ %262, %1331 ], [ %1301, %1317 ], [ %262, %275 ], [ %509, %498 ], [ %514, %510 ]
  %1348 = phi i64 [ %263, %254 ], [ %263, %1329 ], [ %263, %1331 ], [ %1309, %1317 ], [ %263, %275 ], [ %257, %498 ], [ %257, %510 ]
  %1349 = phi i64 [ %264, %254 ], [ %264, %1329 ], [ %264, %1331 ], [ %1302, %1317 ], [ %264, %275 ], [ %258, %498 ], [ %515, %510 ]
  %1350 = phi %"struct.std::__1::pair.1413"** [ %265, %254 ], [ %265, %1329 ], [ %265, %1331 ], [ %1307, %1317 ], [ %265, %275 ], [ %508, %498 ], [ %508, %510 ]
  %1351 = phi i64 [ %266, %254 ], [ %266, %1329 ], [ %266, %1331 ], [ %1328, %1317 ], [ %266, %275 ], [ %281, %498 ], [ %281, %510 ]
  %1352 = phi %"struct.std::__1::pair.1413"** [ %267, %254 ], [ %267, %1329 ], [ %267, %1331 ], [ %1307, %1317 ], [ %267, %275 ], [ %508, %498 ], [ %508, %510 ]
  %1353 = phi i64 [ %268, %254 ], [ %268, %1329 ], [ %268, %1331 ], [ %1305, %1317 ], [ %268, %275 ], [ %256, %498 ], [ %256, %510 ]
  %1354 = phi i64 [ %269, %254 ], [ 0, %1329 ], [ %269, %1331 ], [ %1328, %1317 ], [ %269, %275 ], [ %281, %498 ], [ %281, %510 ]
  %1355 = phi i32 [ %271, %254 ], [ %271, %1329 ], [ %271, %1331 ], [ %271, %1317 ], [ %279, %275 ], [ %271, %498 ], [ %271, %510 ]
  %1356 = phi i8 [ %270, %254 ], [ 1, %1329 ], [ 1, %1331 ], [ %270, %1317 ], [ 0, %275 ], [ %270, %498 ], [ %270, %510 ]
  %1357 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %272, i64 1
  %1358 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1357, %219
  br i1 %1358, label %246, label %254

1359:                                             ; preds = %246, %250
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #14
  %1360 = bitcast %"class.std::__1::unordered_map.1297"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1360) #14
  %1361 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %52, i64 0, i32 0, i32 3
  %1362 = bitcast %"class.std::__1::__compressed_pair.1317"* %1361 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1360, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %1362, align 8
  %1363 = bitcast %"class.std::__1::unordered_map.1297"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1363) #14
  %1364 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %53, i64 0, i32 0, i32 3
  %1365 = bitcast %"class.std::__1::__compressed_pair.1317"* %1364 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1363, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %1365, align 8
  %1366 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %50, i64 0, i32 0, i32 0
  %1367 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %1366, align 8
  %1368 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %50, i64 0, i32 0, i32 1
  %1369 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %1368, align 8
  %1370 = bitcast %"class.std::__1::map.1448"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1370) #14
  %1371 = getelementptr inbounds %"class.std::__1::map.1448", %"class.std::__1::map.1448"* %35, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1372 = getelementptr inbounds %"class.std::__1::map.1448", %"class.std::__1::map.1448"* %35, i64 0, i32 0, i32 1, i32 0, i32 0
  %1373 = getelementptr inbounds %"class.std::__1::map.1448", %"class.std::__1::map.1448"* %35, i64 0, i32 0, i32 0
  %1374 = bitcast %"class.std::__1::__tree_node_base"** %1371 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1374, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %1372, %"class.std::__1::__tree_end_node"** %1373, align 8
  %1375 = icmp eq %"class.v8::internal::FunctionLiteral"** %1367, %1369
  br i1 %1375, label %1381, label %1376

1376:                                             ; preds = %1359
  %1377 = bitcast %"class.std::__1::__tree_end_node"* %1372 to %"class.std::__1::__tree_node"**
  %1378 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1372, i64 0, i32 0
  %1379 = bitcast %"class.std::__1::map.1448"* %35 to i64*
  %1380 = getelementptr inbounds %"class.std::__1::map.1448", %"class.std::__1::map.1448"* %35, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %1415

1381:                                             ; preds = %1496, %1359
  %1382 = bitcast %"class.std::__1::unordered_map.1297"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1382) #14
  %1383 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %36, i64 0, i32 0, i32 3
  %1384 = bitcast %"class.std::__1::__compressed_pair.1317"* %1383 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1382, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %1384, align 8
  %1385 = bitcast %"class.std::__1::unordered_map.1457"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1385) #14
  %1386 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %37, i64 0, i32 0, i32 3
  %1387 = bitcast %"class.std::__1::__compressed_pair.1477"* %1386 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1385, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %1387, align 8
  %1388 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1389 = bitcast %"struct.std::__1::__hash_node_base.1274"** %1388 to i64*
  %1390 = load i64, i64* %1389, align 8
  %1391 = icmp eq i64 %1390, 0
  br i1 %1391, label %1392, label %1394

1392:                                             ; preds = %1381
  %1393 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %36, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %1899

1394:                                             ; preds = %1381
  %1395 = bitcast %"class.v8::internal::FunctionLiteral"** %38 to i8*
  %1396 = bitcast %"class.v8::internal::FunctionLiteral"** %38 to i64*
  %1397 = bitcast %"class.std::__1::__tree_end_node"* %1372 to %"class.std::__1::__tree_node"**
  %1398 = bitcast %"class.std::__1::unordered_map.1495"* %27 to i8*
  %1399 = getelementptr inbounds %"class.std::__1::unordered_map.1495", %"class.std::__1::unordered_map.1495"* %27, i64 0, i32 0, i32 3
  %1400 = bitcast %"class.std::__1::__compressed_pair.1515"* %1399 to i32*
  %1401 = bitcast i32* %28 to i8*
  %1402 = getelementptr inbounds %"class.std::__1::unordered_map.1495", %"class.std::__1::unordered_map.1495"* %27, i64 0, i32 0
  %1403 = bitcast %"class.std::__1::tuple.1524"* %25 to i8*
  %1404 = getelementptr inbounds %"class.std::__1::tuple.1524", %"class.std::__1::tuple.1524"* %25, i64 0, i32 0, i32 0, i32 0
  %1405 = getelementptr inbounds %"class.std::__1::tuple.1488", %"class.std::__1::tuple.1488"* %26, i64 0, i32 0
  %1406 = getelementptr inbounds %"class.std::__1::unordered_map.1495", %"class.std::__1::unordered_map.1495"* %27, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1407 = getelementptr inbounds %"class.std::__1::unordered_map.1495", %"class.std::__1::unordered_map.1495"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1408 = getelementptr inbounds %"class.std::__1::unordered_map.1495", %"class.std::__1::unordered_map.1495"* %27, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1409 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %36, i64 0, i32 0
  %1410 = bitcast %"class.std::__1::tuple.1538"* %29 to i8*
  %1411 = getelementptr inbounds %"class.std::__1::tuple.1538", %"class.std::__1::tuple.1538"* %29, i64 0, i32 0, i32 0, i32 0
  %1412 = getelementptr inbounds %"class.std::__1::tuple.1488", %"class.std::__1::tuple.1488"* %30, i64 0, i32 0
  %1413 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1414 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1515

1415:                                             ; preds = %1496, %1376
  %1416 = phi %"class.v8::internal::FunctionLiteral"** [ %1367, %1376 ], [ %1499, %1496 ]
  %1417 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1416, align 8
  %1418 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1417, i64 0, i32 6
  %1419 = load i32, i32* %1418, align 4
  %1420 = icmp eq i32 %1419, 0
  br i1 %1420, label %1428, label %1421

1421:                                             ; preds = %1415
  %1422 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %1417) #14
  %1423 = call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %1417) #14
  %1424 = zext i32 %1423 to i64
  %1425 = shl nuw i64 %1424, 32
  %1426 = zext i32 %1422 to i64
  %1427 = or i64 %1425, %1426
  br label %1428

1428:                                             ; preds = %1421, %1415
  %1429 = phi i64 [ %1427, %1421 ], [ -1, %1415 ]
  %1430 = trunc i64 %1429 to i32
  %1431 = lshr i64 %1429, 32
  %1432 = trunc i64 %1431 to i32
  %1433 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1377, align 8
  %1434 = icmp eq %"class.std::__1::__tree_node"* %1433, null
  br i1 %1434, label %1467, label %1435

1435:                                             ; preds = %1428, %1463
  %1436 = phi %"class.std::__1::__tree_node"* [ %1466, %1463 ], [ %1433, %1428 ]
  %1437 = phi %"class.std::__1::__tree_node_base"** [ %1465, %1463 ], [ %1371, %1428 ]
  %1438 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 1, i32 0, i32 0, i32 0
  %1439 = load i32, i32* %1438, align 4
  %1440 = icmp sgt i32 %1439, %1430
  br i1 %1440, label %1447, label %1441

1441:                                             ; preds = %1435
  %1442 = icmp slt i32 %1439, %1430
  br i1 %1442, label %1455, label %1443

1443:                                             ; preds = %1441
  %1444 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 1, i32 0, i32 0, i32 1
  %1445 = load i32, i32* %1444, align 4
  %1446 = icmp sgt i32 %1445, %1432
  br i1 %1446, label %1447, label %1453

1447:                                             ; preds = %1443, %1435
  %1448 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 0, i32 0, i32 0
  %1449 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1448, align 8
  %1450 = icmp eq %"class.std::__1::__tree_node_base"* %1449, null
  br i1 %1450, label %1451, label %1463

1451:                                             ; preds = %1447
  %1452 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 0, i32 0
  br label %1467

1453:                                             ; preds = %1443
  %1454 = icmp slt i32 %1445, %1432
  br i1 %1454, label %1455, label %1461

1455:                                             ; preds = %1453, %1441
  %1456 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 0, i32 1
  %1457 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1456, align 8
  %1458 = icmp eq %"class.std::__1::__tree_node_base"* %1457, null
  br i1 %1458, label %1459, label %1463

1459:                                             ; preds = %1455
  %1460 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 0, i32 0
  br label %1467

1461:                                             ; preds = %1453
  %1462 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1436, i64 0, i32 0, i32 0
  br label %1467

1463:                                             ; preds = %1455, %1447
  %1464 = phi %"class.std::__1::__tree_node_base"* [ %1449, %1447 ], [ %1457, %1455 ]
  %1465 = phi %"class.std::__1::__tree_node_base"** [ %1448, %1447 ], [ %1456, %1455 ]
  %1466 = bitcast %"class.std::__1::__tree_node_base"* %1464 to %"class.std::__1::__tree_node"*
  br label %1435

1467:                                             ; preds = %1461, %1459, %1451, %1428
  %1468 = phi %"class.std::__1::__tree_end_node"* [ %1452, %1451 ], [ %1460, %1459 ], [ %1462, %1461 ], [ %1372, %1428 ]
  %1469 = phi %"class.std::__1::__tree_node_base"** [ %1448, %1451 ], [ %1456, %1459 ], [ %1437, %1461 ], [ %1378, %1428 ]
  %1470 = bitcast %"class.std::__1::__tree_node_base"** %1469 to %"class.std::__1::__tree_node"**
  %1471 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1470, align 8
  %1472 = icmp eq %"class.std::__1::__tree_node"* %1471, null
  br i1 %1472, label %1473, label %1496

1473:                                             ; preds = %1467
  %1474 = call i8* @_Znwm(i64 48) #16, !noalias !15
  %1475 = getelementptr inbounds i8, i8* %1474, i64 32
  %1476 = bitcast i8* %1475 to i64*
  store i64 %1429, i64* %1476, align 8, !noalias !15
  %1477 = getelementptr inbounds i8, i8* %1474, i64 40
  %1478 = bitcast i8* %1477 to %"class.v8::internal::FunctionLiteral"**
  store %"class.v8::internal::FunctionLiteral"* null, %"class.v8::internal::FunctionLiteral"** %1478, align 8, !noalias !15
  %1479 = bitcast i8* %1474 to %"class.std::__1::__tree_node"*
  %1480 = bitcast i8* %1474 to %"class.std::__1::__tree_node_base"*
  %1481 = getelementptr inbounds i8, i8* %1474, i64 16
  %1482 = bitcast i8* %1481 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1474, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %1468, %"class.std::__1::__tree_end_node"** %1482, align 8
  %1483 = bitcast %"class.std::__1::__tree_node_base"** %1469 to i8**
  store i8* %1474, i8** %1483, align 8
  %1484 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1373, align 8
  %1485 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1484, i64 0, i32 0
  %1486 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1485, align 8
  %1487 = icmp eq %"class.std::__1::__tree_node_base"* %1486, null
  br i1 %1487, label %1491, label %1488

1488:                                             ; preds = %1473
  %1489 = ptrtoint %"class.std::__1::__tree_node_base"* %1486 to i64
  store i64 %1489, i64* %1379, align 8
  %1490 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1469, align 8
  br label %1491

1491:                                             ; preds = %1488, %1473
  %1492 = phi %"class.std::__1::__tree_node_base"* [ %1480, %1473 ], [ %1490, %1488 ]
  %1493 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1371, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %1493, %"class.std::__1::__tree_node_base"* %1492) #14
  %1494 = load i64, i64* %1380, align 8
  %1495 = add i64 %1494, 1
  store i64 %1495, i64* %1380, align 8
  br label %1496

1496:                                             ; preds = %1491, %1467
  %1497 = phi %"class.std::__1::__tree_node"* [ %1479, %1491 ], [ %1471, %1467 ]
  %1498 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1497, i64 0, i32 1, i32 0, i32 1
  store %"class.v8::internal::FunctionLiteral"* %1417, %"class.v8::internal::FunctionLiteral"** %1498, align 8
  %1499 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1416, i64 1
  %1500 = icmp eq %"class.v8::internal::FunctionLiteral"** %1499, %1369
  br i1 %1500, label %1381, label %1415

1501:                                             ; preds = %1895
  %1502 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %36, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1503 = bitcast %"struct.std::__1::__hash_node_base.1302"** %1502 to i64*
  %1504 = load i64, i64* %1503, align 8
  %1505 = icmp eq i64 %1504, 0
  br i1 %1505, label %1899, label %1506

1506:                                             ; preds = %1501
  %1507 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %52, i64 0, i32 0
  %1508 = bitcast %"class.std::__1::tuple.1538"* %33 to i8*
  %1509 = getelementptr inbounds %"class.std::__1::tuple.1538", %"class.std::__1::tuple.1538"* %33, i64 0, i32 0, i32 0, i32 0
  %1510 = getelementptr inbounds %"class.std::__1::tuple.1488", %"class.std::__1::tuple.1488"* %34, i64 0, i32 0
  %1511 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %53, i64 0, i32 0
  %1512 = bitcast %"class.std::__1::tuple.1538"* %31 to i8*
  %1513 = getelementptr inbounds %"class.std::__1::tuple.1538", %"class.std::__1::tuple.1538"* %31, i64 0, i32 0, i32 0, i32 0
  %1514 = getelementptr inbounds %"class.std::__1::tuple.1488", %"class.std::__1::tuple.1488"* %32, i64 0, i32 0
  br label %1931

1515:                                             ; preds = %1895, %1394
  %1516 = phi i64 [ %1390, %1394 ], [ %1897, %1895 ]
  %1517 = inttoptr i64 %1516 to %"struct.std::__1::__hash_node_base.1274"*
  %1518 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %1517, i64 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1395) #14
  %1519 = bitcast %"struct.std::__1::__hash_node_base.1274"* %1518 to i64*
  %1520 = load i64, i64* %1519, align 8
  store i64 %1520, i64* %1396, align 8
  %1521 = inttoptr i64 %1520 to %"class.v8::internal::FunctionLiteral"*
  %1522 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1521, i64 0, i32 6
  %1523 = load i32, i32* %1522, align 4
  %1524 = icmp eq i32 %1523, 0
  br i1 %1524, label %1536, label %1525

1525:                                             ; preds = %1515
  %1526 = bitcast %"struct.std::__1::__hash_node_base.1274"* %1518 to %"struct.std::__1::pair.1431"*
  %1527 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %1517, i64 3
  %1528 = bitcast %"struct.std::__1::__hash_node_base.1274"* %1527 to i32*
  %1529 = getelementptr inbounds %"struct.std::__1::pair.1431", %"struct.std::__1::pair.1431"* %1526, i64 0, i32 1, i32 1
  %1530 = load i32, i32* %1528, align 4
  %1531 = load i32, i32* %1529, align 4
  %1532 = zext i32 %1531 to i64
  %1533 = shl nuw i64 %1532, 32
  %1534 = zext i32 %1530 to i64
  %1535 = or i64 %1533, %1534
  br label %1536

1536:                                             ; preds = %1525, %1515
  %1537 = phi i64 [ %1535, %1525 ], [ -1, %1515 ]
  %1538 = trunc i64 %1537 to i32
  %1539 = lshr i64 %1537, 32
  %1540 = trunc i64 %1539 to i32
  %1541 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1397, align 8
  %1542 = icmp eq %"class.std::__1::__tree_node"* %1541, null
  br i1 %1542, label %1791, label %1543

1543:                                             ; preds = %1536, %1563
  %1544 = phi %"class.std::__1::__tree_end_node"* [ %1565, %1563 ], [ %1372, %1536 ]
  %1545 = phi %"class.std::__1::__tree_node"* [ %1566, %1563 ], [ %1541, %1536 ]
  %1546 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 1, i32 0, i32 0, i32 0
  %1547 = load i32, i32* %1546, align 4
  %1548 = icmp slt i32 %1547, %1538
  br i1 %1548, label %1549, label %1552

1549:                                             ; preds = %1543
  %1550 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 1
  %1551 = bitcast %"class.std::__1::__tree_node_base"** %1550 to %"class.std::__1::__tree_node"**
  br label %1563

1552:                                             ; preds = %1543
  %1553 = icmp sgt i32 %1547, %1538
  br i1 %1553, label %1560, label %1554

1554:                                             ; preds = %1552
  %1555 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 1, i32 0, i32 0, i32 1
  %1556 = load i32, i32* %1555, align 4
  %1557 = icmp slt i32 %1556, %1540
  %1558 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 1
  %1559 = bitcast %"class.std::__1::__tree_node_base"** %1558 to %"class.std::__1::__tree_node"**
  br i1 %1557, label %1563, label %1560

1560:                                             ; preds = %1554, %1552
  %1561 = bitcast %"class.std::__1::__tree_node"* %1545 to %"class.std::__1::__tree_node"**
  %1562 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1545, i64 0, i32 0, i32 0
  br label %1563

1563:                                             ; preds = %1560, %1554, %1549
  %1564 = phi %"class.std::__1::__tree_node"** [ %1561, %1560 ], [ %1551, %1549 ], [ %1559, %1554 ]
  %1565 = phi %"class.std::__1::__tree_end_node"* [ %1562, %1560 ], [ %1544, %1549 ], [ %1544, %1554 ]
  %1566 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1564, align 8
  %1567 = icmp eq %"class.std::__1::__tree_node"* %1566, null
  br i1 %1567, label %1568, label %1543

1568:                                             ; preds = %1563
  %1569 = icmp eq %"class.std::__1::__tree_end_node"* %1565, %1372
  br i1 %1569, label %1791, label %1570

1570:                                             ; preds = %1568
  %1571 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1565, i64 4
  %1572 = bitcast %"class.std::__1::__tree_end_node"* %1571 to %"struct.std::__1::__value_type"*
  %1573 = bitcast %"class.std::__1::__tree_end_node"* %1571 to i32*
  %1574 = load i32, i32* %1573, align 4
  %1575 = icmp sgt i32 %1574, %1538
  br i1 %1575, label %1791, label %1576

1576:                                             ; preds = %1570
  %1577 = icmp slt i32 %1574, %1538
  br i1 %1577, label %1582, label %1578

1578:                                             ; preds = %1576
  %1579 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %1572, i64 0, i32 0, i32 0, i32 1
  %1580 = load i32, i32* %1579, align 4
  %1581 = icmp sgt i32 %1580, %1540
  br i1 %1581, label %1791, label %1582

1582:                                             ; preds = %1578, %1576
  %1583 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1565, i64 5
  %1584 = bitcast %"class.std::__1::__tree_end_node"* %1583 to %"class.v8::internal::FunctionLiteral"**
  %1585 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1584, align 8
  %1586 = getelementptr %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1521, i64 0, i32 8
  %1587 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %1586, align 8
  %1588 = getelementptr %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1585, i64 0, i32 8
  %1589 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %1588, align 8
  %1590 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1587, i64 0, i32 0, i32 0
  %1591 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %1590, align 8
  %1592 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1589, i64 0, i32 0, i32 0
  %1593 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %1592, align 8
  br label %1594

1594:                                             ; preds = %1787, %1582
  %1595 = phi %"class.v8::internal::Scope"* [ %1593, %1582 ], [ %1772, %1787 ]
  %1596 = phi %"class.v8::internal::Scope"* [ %1591, %1582 ], [ %1773, %1787 ]
  %1597 = icmp ne %"class.v8::internal::Scope"* %1596, null
  %1598 = icmp ne %"class.v8::internal::Scope"* %1595, null
  %1599 = and i1 %1598, %1597
  br i1 %1599, label %1600, label %1789

1600:                                             ; preds = %1594
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1398) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1398, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %1400, align 8
  %1601 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1596, i64 0, i32 4, i32 0
  %1602 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1596, i64 0, i32 4, i32 1
  %1603 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %1602, align 8
  %1604 = icmp eq %"class.v8::internal::Variable"** %1601, %1603
  br i1 %1604, label %1605, label %1689

1605:                                             ; preds = %1708, %1600
  %1606 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1595, i64 0, i32 4, i32 0
  %1607 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1595, i64 0, i32 4, i32 1
  %1608 = load %"class.v8::internal::Variable"**, %"class.v8::internal::Variable"*** %1607, align 8
  %1609 = icmp eq %"class.v8::internal::Variable"** %1606, %1608
  br i1 %1609, label %1765, label %1610

1610:                                             ; preds = %1605
  %1611 = load i64, i64* %1406, align 8
  %1612 = icmp eq i64 %1611, 0
  %1613 = add i64 %1611, -1
  %1614 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %1407, align 8
  br i1 %1612, label %1679, label %1615

1615:                                             ; preds = %1610
  %1616 = call i64 @llvm.ctpop.i64(i64 %1611) #14, !range !2
  %1617 = icmp ugt i64 %1616, 1
  br i1 %1617, label %1618, label %1712

1618:                                             ; preds = %1615, %1663
  %1619 = phi %"class.v8::internal::Variable"** [ %1664, %1663 ], [ %1606, %1615 ]
  %1620 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %1619, align 8
  %1621 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1620, i64 0, i32 6
  %1622 = load i16, i16* %1621, align 8
  %1623 = and i16 %1622, 896
  %1624 = icmp eq i16 %1623, 384
  br i1 %1624, label %1625, label %1663

1625:                                             ; preds = %1618
  %1626 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1620, i64 0, i32 4
  %1627 = load i32, i32* %1626, align 8
  %1628 = sext i32 %1627 to i64
  %1629 = icmp ugt i64 %1611, %1628
  br i1 %1629, label %1632, label %1630

1630:                                             ; preds = %1625
  %1631 = urem i64 %1628, %1611
  br label %1632

1632:                                             ; preds = %1630, %1625
  %1633 = phi i64 [ %1631, %1630 ], [ %1628, %1625 ]
  %1634 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1614, i64 %1633
  %1635 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1634, align 8
  %1636 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1635, null
  br i1 %1636, label %1770, label %1637

1637:                                             ; preds = %1632
  %1638 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1635, i64 0, i32 0
  %1639 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1638, align 8
  %1640 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1639, null
  br i1 %1640, label %1770, label %1641

1641:                                             ; preds = %1637, %1659
  %1642 = phi %"struct.std::__1::__hash_node_base.1500"* [ %1661, %1659 ], [ %1639, %1637 ]
  %1643 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1642, i64 1
  %1644 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1643 to i64*
  %1645 = load i64, i64* %1644, align 8
  %1646 = icmp eq i64 %1645, %1628
  br i1 %1646, label %1654, label %1647

1647:                                             ; preds = %1641
  %1648 = icmp ult i64 %1645, %1611
  br i1 %1648, label %1651, label %1649

1649:                                             ; preds = %1647
  %1650 = urem i64 %1645, %1611
  br label %1651

1651:                                             ; preds = %1649, %1647
  %1652 = phi i64 [ %1650, %1649 ], [ %1645, %1647 ]
  %1653 = icmp eq i64 %1652, %1633
  br i1 %1653, label %1659, label %1770

1654:                                             ; preds = %1641
  %1655 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1642, i64 2
  %1656 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1655 to i32*
  %1657 = load i32, i32* %1656, align 4
  %1658 = icmp eq i32 %1657, %1627
  br i1 %1658, label %1666, label %1659

1659:                                             ; preds = %1654, %1651
  %1660 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1642, i64 0, i32 0
  %1661 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1660, align 8
  %1662 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1661, null
  br i1 %1662, label %1770, label %1641

1663:                                             ; preds = %1666, %1618
  %1664 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1620, i64 0, i32 3
  %1665 = icmp eq %"class.v8::internal::Variable"** %1664, %1608
  br i1 %1665, label %1765, label %1618

1666:                                             ; preds = %1654
  %1667 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1642, i64 3
  %1668 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1667 to i64**
  %1669 = load i64*, i64** %1668, align 8
  %1670 = load i64, i64* %1669, align 8
  %1671 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1620, i64 0, i32 1
  %1672 = bitcast %"class.v8::internal::AstRawString"** %1671 to i64***
  %1673 = load i64**, i64*** %1672, align 8
  %1674 = load i64*, i64** %1673, align 8
  %1675 = load i64, i64* %1674, align 8
  %1676 = trunc i64 %1670 to i32
  %1677 = trunc i64 %1675 to i32
  %1678 = icmp eq i32 %1676, %1677
  br i1 %1678, label %1663, label %1770

1679:                                             ; preds = %1610, %1686
  %1680 = phi %"class.v8::internal::Variable"** [ %1687, %1686 ], [ %1606, %1610 ]
  %1681 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %1680, align 8
  %1682 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1681, i64 0, i32 6
  %1683 = load i16, i16* %1682, align 8
  %1684 = and i16 %1683, 896
  %1685 = icmp eq i16 %1684, 384
  br i1 %1685, label %1770, label %1686

1686:                                             ; preds = %1679
  %1687 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1681, i64 0, i32 3
  %1688 = icmp eq %"class.v8::internal::Variable"** %1687, %1608
  br i1 %1688, label %1765, label %1679

1689:                                             ; preds = %1600, %1708
  %1690 = phi %"class.v8::internal::Variable"** [ %1710, %1708 ], [ %1601, %1600 ]
  %1691 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %1690, align 8
  %1692 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1691, i64 0, i32 6
  %1693 = load i16, i16* %1692, align 8
  %1694 = and i16 %1693, 896
  %1695 = icmp eq i16 %1694, 384
  br i1 %1695, label %1696, label %1708

1696:                                             ; preds = %1689
  %1697 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1691, i64 0, i32 1
  %1698 = bitcast %"class.v8::internal::AstRawString"** %1697 to i64**
  %1699 = load i64*, i64** %1698, align 8
  %1700 = load i64, i64* %1699, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1401) #14
  %1701 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1691, i64 0, i32 4
  %1702 = load i32, i32* %1701, align 8
  store i32 %1702, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1403) #14
  store i32* %28, i32** %1404, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1405) #14
  %1703 = call { %"struct.std::__1::__hash_node_base.1500"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1496"* nonnull %1402, i32* nonnull dereferenceable(4) %28, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1524"* nonnull dereferenceable(8) %25, %"class.std::__1::tuple.1488"* nonnull dereferenceable(1) %26) #14
  %1704 = extractvalue { %"struct.std::__1::__hash_node_base.1500"*, i8 } %1703, 0
  %1705 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1704, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1405) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1403) #14
  %1706 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1705 to i64*
  store i64 %1700, i64* %1706, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1401) #14
  %1707 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %1690, align 8
  br label %1708

1708:                                             ; preds = %1696, %1689
  %1709 = phi %"class.v8::internal::Variable"* [ %1691, %1689 ], [ %1707, %1696 ]
  %1710 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1709, i64 0, i32 3
  %1711 = icmp eq %"class.v8::internal::Variable"** %1710, %1603
  br i1 %1711, label %1605, label %1689

1712:                                             ; preds = %1615, %1762
  %1713 = phi %"class.v8::internal::Variable"** [ %1763, %1762 ], [ %1606, %1615 ]
  %1714 = load %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** %1713, align 8
  %1715 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1714, i64 0, i32 6
  %1716 = load i16, i16* %1715, align 8
  %1717 = and i16 %1716, 896
  %1718 = icmp eq i16 %1717, 384
  br i1 %1718, label %1719, label %1762

1719:                                             ; preds = %1712
  %1720 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1714, i64 0, i32 4
  %1721 = load i32, i32* %1720, align 8
  %1722 = sext i32 %1721 to i64
  %1723 = and i64 %1613, %1722
  %1724 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1614, i64 %1723
  %1725 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1724, align 8
  %1726 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1725, null
  br i1 %1726, label %1770, label %1727

1727:                                             ; preds = %1719
  %1728 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1725, i64 0, i32 0
  %1729 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1728, align 8
  %1730 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1729, null
  br i1 %1730, label %1770, label %1731

1731:                                             ; preds = %1727, %1745
  %1732 = phi %"struct.std::__1::__hash_node_base.1500"* [ %1747, %1745 ], [ %1729, %1727 ]
  %1733 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1732, i64 1
  %1734 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1733 to i64*
  %1735 = load i64, i64* %1734, align 8
  %1736 = icmp eq i64 %1735, %1722
  br i1 %1736, label %1740, label %1737

1737:                                             ; preds = %1731
  %1738 = and i64 %1735, %1613
  %1739 = icmp eq i64 %1738, %1723
  br i1 %1739, label %1745, label %1770

1740:                                             ; preds = %1731
  %1741 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1732, i64 2
  %1742 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1741 to i32*
  %1743 = load i32, i32* %1742, align 4
  %1744 = icmp eq i32 %1743, %1721
  br i1 %1744, label %1749, label %1745

1745:                                             ; preds = %1740, %1737
  %1746 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1732, i64 0, i32 0
  %1747 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1746, align 8
  %1748 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1747, null
  br i1 %1748, label %1770, label %1731

1749:                                             ; preds = %1740
  %1750 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1732, i64 3
  %1751 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1750 to i64**
  %1752 = load i64*, i64** %1751, align 8
  %1753 = load i64, i64* %1752, align 8
  %1754 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1714, i64 0, i32 1
  %1755 = bitcast %"class.v8::internal::AstRawString"** %1754 to i64***
  %1756 = load i64**, i64*** %1755, align 8
  %1757 = load i64*, i64** %1756, align 8
  %1758 = load i64, i64* %1757, align 8
  %1759 = trunc i64 %1753 to i32
  %1760 = trunc i64 %1758 to i32
  %1761 = icmp eq i32 %1759, %1760
  br i1 %1761, label %1762, label %1770

1762:                                             ; preds = %1749, %1712
  %1763 = getelementptr inbounds %"class.v8::internal::Variable", %"class.v8::internal::Variable"* %1714, i64 0, i32 3
  %1764 = icmp eq %"class.v8::internal::Variable"** %1763, %1608
  br i1 %1764, label %1765, label %1712

1765:                                             ; preds = %1762, %1663, %1686, %1605
  %1766 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1596, i64 0, i32 0
  %1767 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %1766, align 8
  %1768 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1595, i64 0, i32 0
  %1769 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %1768, align 8
  br label %1770

1770:                                             ; preds = %1749, %1727, %1719, %1666, %1637, %1632, %1679, %1745, %1737, %1659, %1651, %1765
  %1771 = phi i32 [ 0, %1765 ], [ 1, %1651 ], [ 1, %1659 ], [ 1, %1737 ], [ 1, %1745 ], [ 1, %1679 ], [ 1, %1632 ], [ 1, %1637 ], [ 1, %1666 ], [ 1, %1719 ], [ 1, %1727 ], [ 1, %1749 ]
  %1772 = phi %"class.v8::internal::Scope"* [ %1769, %1765 ], [ %1595, %1651 ], [ %1595, %1659 ], [ %1595, %1737 ], [ %1595, %1745 ], [ %1595, %1679 ], [ %1595, %1632 ], [ %1595, %1637 ], [ %1595, %1666 ], [ %1595, %1719 ], [ %1595, %1727 ], [ %1595, %1749 ]
  %1773 = phi %"class.v8::internal::Scope"* [ %1767, %1765 ], [ %1596, %1651 ], [ %1596, %1659 ], [ %1596, %1737 ], [ %1596, %1745 ], [ %1596, %1679 ], [ %1596, %1632 ], [ %1596, %1637 ], [ %1596, %1666 ], [ %1596, %1719 ], [ %1596, %1727 ], [ %1596, %1749 ]
  %1774 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1408, align 8
  %1775 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1774, null
  br i1 %1775, label %1782, label %1776

1776:                                             ; preds = %1770, %1776
  %1777 = phi %"struct.std::__1::__hash_node_base.1500"* [ %1779, %1776 ], [ %1774, %1770 ]
  %1778 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %1777, i64 0, i32 0
  %1779 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %1778, align 8
  %1780 = bitcast %"struct.std::__1::__hash_node_base.1500"* %1777 to i8*
  call void @_ZdlPv(i8* %1780) #16
  %1781 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %1779, null
  br i1 %1781, label %1782, label %1776

1782:                                             ; preds = %1776, %1770
  %1783 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %1407, align 8
  store %"struct.std::__1::__hash_node_base.1500"** null, %"struct.std::__1::__hash_node_base.1500"*** %1407, align 8
  %1784 = icmp eq %"struct.std::__1::__hash_node_base.1500"** %1783, null
  br i1 %1784, label %1787, label %1785

1785:                                             ; preds = %1782
  %1786 = bitcast %"struct.std::__1::__hash_node_base.1500"** %1783 to i8*
  call void @_ZdlPv(i8* %1786) #16
  br label %1787

1787:                                             ; preds = %1785, %1782
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1398) #14
  %1788 = icmp eq i32 %1771, 0
  br i1 %1788, label %1594, label %1791

1789:                                             ; preds = %1594
  %1790 = icmp eq %"class.v8::internal::Scope"* %1596, %1595
  br i1 %1790, label %1803, label %1791

1791:                                             ; preds = %1787, %1789, %1578, %1570, %1568, %1536
  %1792 = call fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"* nonnull %37, %"class.v8::internal::FunctionLiteral"** nonnull dereferenceable(8) %38) #14
  store i32 2, i32* %1792, align 4
  %1793 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %1517, i64 5
  %1794 = bitcast %"struct.std::__1::__hash_node_base.1274"* %1793 to %"class.v8::internal::FunctionLiteral"**
  %1795 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1794, align 8
  %1796 = icmp eq %"class.v8::internal::FunctionLiteral"* %1795, null
  br i1 %1796, label %1895, label %1797

1797:                                             ; preds = %1791
  %1798 = call fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"* nonnull %37, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %1794) #14
  %1799 = load i32, i32* %1798, align 4
  %1800 = icmp eq i32 %1799, 2
  br i1 %1800, label %1895, label %1801

1801:                                             ; preds = %1797
  %1802 = call fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"* nonnull %37, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %1794) #14
  store i32 1, i32* %1802, align 4
  br label %1895

1803:                                             ; preds = %1789
  %1804 = bitcast %"class.std::__1::__tree_end_node"* %1583 to i64*
  %1805 = load i64, i64* %1804, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1410) #14
  store %"class.v8::internal::FunctionLiteral"** %38, %"class.v8::internal::FunctionLiteral"*** %1411, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1412) #14
  %1806 = call { %"struct.std::__1::__hash_node_base.1302"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1298"* nonnull %1409, %"class.v8::internal::FunctionLiteral"** nonnull dereferenceable(8) %38, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1538"* nonnull dereferenceable(8) %29, %"class.std::__1::tuple.1488"* nonnull dereferenceable(1) %30) #14
  %1807 = extractvalue { %"struct.std::__1::__hash_node_base.1302"*, i8 } %1806, 0
  %1808 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %1807, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1412) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1410) #14
  %1809 = bitcast %"struct.std::__1::__hash_node_base.1302"* %1808 to i64*
  store i64 %1805, i64* %1809, align 8
  %1810 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %38, align 8
  %1811 = ptrtoint %"class.v8::internal::FunctionLiteral"* %1810 to i64
  %1812 = lshr i64 %1811, 32
  %1813 = shl i64 %1811, 3
  %1814 = and i64 %1813, 4294967288
  %1815 = add nuw nsw i64 %1814, 8
  %1816 = xor i64 %1815, %1812
  %1817 = mul i64 %1816, -7070675565921424023
  %1818 = lshr i64 %1817, 47
  %1819 = xor i64 %1817, %1812
  %1820 = xor i64 %1819, %1818
  %1821 = mul i64 %1820, -7070675565921424023
  %1822 = lshr i64 %1821, 47
  %1823 = xor i64 %1822, %1821
  %1824 = mul i64 %1823, -7070675565921424023
  %1825 = load i64, i64* %1413, align 8
  %1826 = icmp eq i64 %1825, 0
  br i1 %1826, label %1889, label %1827

1827:                                             ; preds = %1803
  %1828 = call i64 @llvm.ctpop.i64(i64 %1825) #14, !range !2
  %1829 = icmp ugt i64 %1828, 1
  br i1 %1829, label %1833, label %1830

1830:                                             ; preds = %1827
  %1831 = add i64 %1825, -1
  %1832 = and i64 %1824, %1831
  br label %1837

1833:                                             ; preds = %1827
  %1834 = icmp ult i64 %1824, %1825
  br i1 %1834, label %1837, label %1835

1835:                                             ; preds = %1833
  %1836 = urem i64 %1824, %1825
  br label %1837

1837:                                             ; preds = %1835, %1833, %1830
  %1838 = phi i64 [ %1832, %1830 ], [ %1836, %1835 ], [ %1824, %1833 ]
  %1839 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %1414, align 8
  %1840 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1839, i64 %1838
  %1841 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1840, align 8
  %1842 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %1841, null
  br i1 %1842, label %1889, label %1843

1843:                                             ; preds = %1837
  %1844 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1841, i64 0, i32 0
  %1845 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1844, align 8
  %1846 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %1845, null
  br i1 %1846, label %1889, label %1847

1847:                                             ; preds = %1843
  %1848 = add i64 %1825, -1
  br i1 %1829, label %1849, label %1871

1849:                                             ; preds = %1847, %1867
  %1850 = phi %"struct.std::__1::__hash_node_base.1462"* [ %1869, %1867 ], [ %1845, %1847 ]
  %1851 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1850, i64 1
  %1852 = bitcast %"struct.std::__1::__hash_node_base.1462"* %1851 to i64*
  %1853 = load i64, i64* %1852, align 8
  %1854 = icmp eq i64 %1853, %1824
  br i1 %1854, label %1862, label %1855

1855:                                             ; preds = %1849
  %1856 = icmp ult i64 %1853, %1825
  br i1 %1856, label %1859, label %1857

1857:                                             ; preds = %1855
  %1858 = urem i64 %1853, %1825
  br label %1859

1859:                                             ; preds = %1857, %1855
  %1860 = phi i64 [ %1858, %1857 ], [ %1853, %1855 ]
  %1861 = icmp eq i64 %1860, %1838
  br i1 %1861, label %1867, label %1889

1862:                                             ; preds = %1849
  %1863 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1850, i64 2
  %1864 = bitcast %"struct.std::__1::__hash_node_base.1462"* %1863 to %"class.v8::internal::FunctionLiteral"**
  %1865 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1864, align 8
  %1866 = icmp eq %"class.v8::internal::FunctionLiteral"* %1865, %1810
  br i1 %1866, label %1895, label %1867

1867:                                             ; preds = %1862, %1859
  %1868 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1850, i64 0, i32 0
  %1869 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1868, align 8
  %1870 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %1869, null
  br i1 %1870, label %1889, label %1849

1871:                                             ; preds = %1847, %1885
  %1872 = phi %"struct.std::__1::__hash_node_base.1462"* [ %1887, %1885 ], [ %1845, %1847 ]
  %1873 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1872, i64 1
  %1874 = bitcast %"struct.std::__1::__hash_node_base.1462"* %1873 to i64*
  %1875 = load i64, i64* %1874, align 8
  %1876 = icmp eq i64 %1875, %1824
  br i1 %1876, label %1880, label %1877

1877:                                             ; preds = %1871
  %1878 = and i64 %1875, %1848
  %1879 = icmp eq i64 %1878, %1838
  br i1 %1879, label %1885, label %1889

1880:                                             ; preds = %1871
  %1881 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1872, i64 2
  %1882 = bitcast %"struct.std::__1::__hash_node_base.1462"* %1881 to %"class.v8::internal::FunctionLiteral"**
  %1883 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1882, align 8
  %1884 = icmp eq %"class.v8::internal::FunctionLiteral"* %1883, %1810
  br i1 %1884, label %1895, label %1885

1885:                                             ; preds = %1880, %1877
  %1886 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1872, i64 0, i32 0
  %1887 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1886, align 8
  %1888 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %1887, null
  br i1 %1888, label %1889, label %1871

1889:                                             ; preds = %1885, %1877, %1867, %1859, %1843, %1837, %1803
  %1890 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %1517, i64 4
  %1891 = bitcast %"struct.std::__1::__hash_node_base.1274"* %1890 to i8*
  %1892 = load i8, i8* %1891, align 8, !range !18
  %1893 = zext i8 %1892 to i32
  %1894 = call fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"* nonnull %37, %"class.v8::internal::FunctionLiteral"** nonnull dereferenceable(8) %38) #14
  store i32 %1893, i32* %1894, align 4
  br label %1895

1895:                                             ; preds = %1880, %1862, %1791, %1797, %1801, %1889
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1395) #14
  %1896 = inttoptr i64 %1516 to i64*
  %1897 = load i64, i64* %1896, align 8
  %1898 = icmp eq i64 %1897, 0
  br i1 %1898, label %1501, label %1515

1899:                                             ; preds = %1960, %1501, %1392
  %1900 = phi %"struct.std::__1::__hash_node_base.1302"** [ %1393, %1392 ], [ %1502, %1501 ], [ %1502, %1960 ]
  %1901 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %37, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1902 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1901, align 8
  %1903 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %1902, null
  br i1 %1903, label %1910, label %1904

1904:                                             ; preds = %1899, %1904
  %1905 = phi %"struct.std::__1::__hash_node_base.1462"* [ %1907, %1904 ], [ %1902, %1899 ]
  %1906 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %1905, i64 0, i32 0
  %1907 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %1906, align 8
  %1908 = bitcast %"struct.std::__1::__hash_node_base.1462"* %1905 to i8*
  call void @_ZdlPv(i8* %1908) #16
  %1909 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %1907, null
  br i1 %1909, label %1910, label %1904

1910:                                             ; preds = %1904, %1899
  %1911 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1912 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %1911, align 8
  store %"struct.std::__1::__hash_node_base.1462"** null, %"struct.std::__1::__hash_node_base.1462"*** %1911, align 8
  %1913 = icmp eq %"struct.std::__1::__hash_node_base.1462"** %1912, null
  br i1 %1913, label %1916, label %1914

1914:                                             ; preds = %1910
  %1915 = bitcast %"struct.std::__1::__hash_node_base.1462"** %1912 to i8*
  call void @_ZdlPv(i8* %1915) #16
  br label %1916

1916:                                             ; preds = %1914, %1910
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1385) #14
  %1917 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %1900, align 8
  %1918 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %1917, null
  br i1 %1918, label %1925, label %1919

1919:                                             ; preds = %1916, %1919
  %1920 = phi %"struct.std::__1::__hash_node_base.1302"* [ %1922, %1919 ], [ %1917, %1916 ]
  %1921 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %1920, i64 0, i32 0
  %1922 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %1921, align 8
  %1923 = bitcast %"struct.std::__1::__hash_node_base.1302"* %1920 to i8*
  call void @_ZdlPv(i8* %1923) #16
  %1924 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %1922, null
  br i1 %1924, label %1925, label %1919

1925:                                             ; preds = %1919, %1916
  %1926 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1927 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %1926, align 8
  store %"struct.std::__1::__hash_node_base.1302"** null, %"struct.std::__1::__hash_node_base.1302"*** %1926, align 8
  %1928 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %1927, null
  br i1 %1928, label %1964, label %1929

1929:                                             ; preds = %1925
  %1930 = bitcast %"struct.std::__1::__hash_node_base.1302"** %1927 to i8*
  call void @_ZdlPv(i8* %1930) #16
  br label %1964

1931:                                             ; preds = %1960, %1506
  %1932 = phi i64 [ %1504, %1506 ], [ %1962, %1960 ]
  %1933 = inttoptr i64 %1932 to %"struct.std::__1::__hash_node.1555"*
  %1934 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %1933, i64 0, i32 2, i32 0, i32 0
  %1935 = call fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"* nonnull %37, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %1934) #14
  %1936 = load i32, i32* %1935, align 4
  %1937 = icmp eq i32 %1936, 0
  br i1 %1937, label %1938, label %1943

1938:                                             ; preds = %1931
  %1939 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %1933, i64 0, i32 2, i32 0, i32 1
  %1940 = bitcast %"class.v8::internal::FunctionLiteral"** %1939 to i64*
  %1941 = load i64, i64* %1940, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1512) #14
  store %"class.v8::internal::FunctionLiteral"** %1934, %"class.v8::internal::FunctionLiteral"*** %1513, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1514) #14
  %1942 = call { %"struct.std::__1::__hash_node_base.1302"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1298"* nonnull %1511, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %1934, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1538"* nonnull dereferenceable(8) %31, %"class.std::__1::tuple.1488"* nonnull dereferenceable(1) %32) #14
  br label %1952

1943:                                             ; preds = %1931
  %1944 = call fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"* nonnull %37, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %1934) #14
  %1945 = load i32, i32* %1944, align 4
  %1946 = icmp eq i32 %1945, 1
  br i1 %1946, label %1947, label %1960

1947:                                             ; preds = %1943
  %1948 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %1933, i64 0, i32 2, i32 0, i32 1
  %1949 = bitcast %"class.v8::internal::FunctionLiteral"** %1948 to i64*
  %1950 = load i64, i64* %1949, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1508) #14
  store %"class.v8::internal::FunctionLiteral"** %1934, %"class.v8::internal::FunctionLiteral"*** %1509, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1510) #14
  %1951 = call { %"struct.std::__1::__hash_node_base.1302"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1298"* nonnull %1507, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %1934, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1538"* nonnull dereferenceable(8) %33, %"class.std::__1::tuple.1488"* nonnull dereferenceable(1) %34) #14
  br label %1952

1952:                                             ; preds = %1938, %1947
  %1953 = phi { %"struct.std::__1::__hash_node_base.1302"*, i8 } [ %1951, %1947 ], [ %1942, %1938 ]
  %1954 = phi i8* [ %1510, %1947 ], [ %1514, %1938 ]
  %1955 = phi i8* [ %1508, %1947 ], [ %1512, %1938 ]
  %1956 = phi i64 [ %1950, %1947 ], [ %1941, %1938 ]
  %1957 = extractvalue { %"struct.std::__1::__hash_node_base.1302"*, i8 } %1953, 0
  %1958 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %1957, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1954) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1955) #14
  %1959 = bitcast %"struct.std::__1::__hash_node_base.1302"* %1958 to i64*
  store i64 %1956, i64* %1959, align 8
  br label %1960

1960:                                             ; preds = %1952, %1943
  %1961 = inttoptr i64 %1932 to i64*
  %1962 = load i64, i64* %1961, align 8
  %1963 = icmp eq i64 %1962, 0
  br i1 %1963, label %1899, label %1931

1964:                                             ; preds = %1925, %1929
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1382) #14
  %1965 = getelementptr inbounds %"class.std::__1::map.1448", %"class.std::__1::map.1448"* %35, i64 0, i32 0
  %1966 = bitcast %"class.std::__1::__tree_end_node"* %1372 to %"class.std::__1::__tree_node"**
  %1967 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1966, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1449"* nonnull %1965, %"class.std::__1::__tree_node"* %1967) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1370) #14
  %1968 = bitcast %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1968) #14
  %1969 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_115FunctionDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1969, align 8
  %1970 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %1971 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %1972 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54, i64 0, i32 1, i32 0, i32 0
  %1973 = bitcast %"class.std::__1::__tree_node_base"** %1970 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1973, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %1971, %"class.std::__1::__tree_end_node"** %1972, align 8
  %1974 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %52, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1975 = bitcast %"struct.std::__1::__hash_node_base.1302"** %1974 to i64*
  %1976 = load i64, i64* %1975, align 8
  %1977 = icmp eq i64 %1976, 0
  br i1 %1977, label %1978, label %1983

1978:                                             ; preds = %1983, %1964
  %1979 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %53, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1980 = bitcast %"struct.std::__1::__hash_node_base.1302"** %1979 to i64*
  %1981 = load i64, i64* %1980, align 8
  %1982 = icmp eq i64 %1981, 0
  br i1 %1982, label %2003, label %2314

1983:                                             ; preds = %1964, %1983
  %1984 = phi i64 [ %2001, %1983 ], [ %1976, %1964 ]
  %1985 = inttoptr i64 %1984 to %"struct.std::__1::__hash_node.1555"*
  %1986 = load i64, i64* %1, align 8
  %1987 = add i64 %1986, 31
  %1988 = inttoptr i64 %1987 to i32*
  %1989 = load i32, i32* %1988, align 4
  %1990 = ashr i32 %1989, 1
  %1991 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %1985, i64 0, i32 2, i32 0, i32 0
  %1992 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1991, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap21AddInterestingLiteralEiPNS0_15FunctionLiteralE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i32 %1990, %"class.v8::internal::FunctionLiteral"* %1992)
  %1993 = load i64, i64* %113, align 8
  %1994 = add i64 %1993, 31
  %1995 = inttoptr i64 %1994 to i32*
  %1996 = load i32, i32* %1995, align 4
  %1997 = ashr i32 %1996, 1
  %1998 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %1985, i64 0, i32 2, i32 0, i32 1
  %1999 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1998, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap21AddInterestingLiteralEiPNS0_15FunctionLiteralE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i32 %1997, %"class.v8::internal::FunctionLiteral"* %1999)
  %2000 = inttoptr i64 %1984 to i64*
  %2001 = load i64, i64* %2000, align 8
  %2002 = icmp eq i64 %2001, 0
  br i1 %2002, label %1978, label %1983

2003:                                             ; preds = %2314, %1978
  %2004 = bitcast %"class.v8::internal::Isolate"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2004)
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %18, align 8
  %2005 = bitcast %"class.v8::internal::HeapObjectIterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2005) #14
  %2006 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  call void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"* nonnull %19, %"class.v8::internal::Heap"* %2006, i32 1) #14
  %2007 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %19) #14
  %2008 = trunc i64 %2007 to i32
  %2009 = icmp eq i32 %2008, 0
  br i1 %2009, label %2180, label %2010

2010:                                             ; preds = %2003
  %2011 = bitcast %"class.v8::internal::JSGeneratorObject"* %23 to i8*
  %2012 = getelementptr inbounds %"class.v8::internal::JSGeneratorObject", %"class.v8::internal::JSGeneratorObject"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2013 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %24 to i8*
  %2014 = bitcast %"class.v8::internal::JSFunction"* %21 to i8*
  %2015 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2016 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %22 to i8*
  %2017 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %20 to i8*
  br label %2018

2018:                                             ; preds = %2176, %2010
  %2019 = phi i64 [ %2007, %2010 ], [ %2177, %2176 ]
  %2020 = and i64 %2019, -4294967296
  %2021 = add i64 %2019, -1
  %2022 = inttoptr i64 %2021 to i32*
  %2023 = load atomic i32, i32* %2022 monotonic, align 4
  %2024 = zext i32 %2023 to i64
  %2025 = or i64 %2020, %2024
  %2026 = add i64 %2025, 7
  %2027 = inttoptr i64 %2026 to i16*
  %2028 = load atomic i16, i16* %2027 monotonic, align 2
  %2029 = icmp eq i16 %2028, 179
  br i1 %2029, label %2030, label %2058

2030:                                             ; preds = %2018
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2017) #14
  store %"struct.v8::internal::(anonymous namespace)::FunctionData"* null, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %20, align 8
  %2031 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap6LookupENS0_18SharedFunctionInfoEPPNS1_12FunctionDataE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i64 %2019, %"struct.v8::internal::(anonymous namespace)::FunctionData"** nonnull %20) #14
  br i1 %2031, label %2032, label %2174

2032:                                             ; preds = %2030
  %2033 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %2034 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2033, i64 0, i32 31, i32 4
  %2035 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %2034, align 8
  %2036 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2035, null
  br i1 %2036, label %2040, label %2037

2037:                                             ; preds = %2032
  %2038 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2035, i64 %2019) #14
  %2039 = ptrtoint i64* %2038 to i64
  br label %2053

2040:                                             ; preds = %2032
  %2041 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2033, i64 0, i32 31, i32 0
  %2042 = load i64*, i64** %2041, align 8
  %2043 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2033, i64 0, i32 31, i32 1
  %2044 = load i64*, i64** %2043, align 8
  %2045 = icmp eq i64* %2042, %2044
  br i1 %2045, label %2046, label %2048

2046:                                             ; preds = %2040
  %2047 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2033) #14
  br label %2048

2048:                                             ; preds = %2046, %2040
  %2049 = phi i64* [ %2047, %2046 ], [ %2042, %2040 ]
  %2050 = ptrtoint i64* %2049 to i64
  %2051 = add i64 %2050, 8
  %2052 = inttoptr i64 %2051 to i64*
  store i64* %2052, i64** %2041, align 8
  store i64 %2019, i64* %2049, align 8
  br label %2053

2053:                                             ; preds = %2048, %2037
  %2054 = phi i64 [ %2039, %2037 ], [ %2050, %2048 ]
  %2055 = load %"struct.v8::internal::(anonymous namespace)::FunctionData"*, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %20, align 8
  %2056 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2055, i64 0, i32 1
  %2057 = bitcast %"class.v8::internal::MaybeHandle"* %2056 to i64*
  store i64 %2054, i64* %2057, align 8
  br label %2174

2058:                                             ; preds = %2018
  %2059 = load atomic i32, i32* %2022 monotonic, align 4
  %2060 = zext i32 %2059 to i64
  %2061 = or i64 %2020, %2060
  %2062 = add i64 %2061, 7
  %2063 = inttoptr i64 %2062 to i16*
  %2064 = load atomic i16, i16* %2063 monotonic, align 2
  %2065 = add i16 %2064, -1059
  %2066 = icmp ult i16 %2065, 15
  br i1 %2066, label %2067, label %2111

2067:                                             ; preds = %2058
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2014) #14
  store i64 %2019, i64* %2015, align 8
  %2068 = add i64 %2019, 11
  %2069 = inttoptr i64 %2068 to i32*
  %2070 = load atomic i32, i32* %2069 monotonic, align 4
  %2071 = zext i32 %2070 to i64
  %2072 = or i64 %2020, %2071
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2016) #14
  store %"struct.v8::internal::(anonymous namespace)::FunctionData"* null, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %22, align 8
  %2073 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap6LookupENS0_18SharedFunctionInfoEPPNS1_12FunctionDataE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i64 %2072, %"struct.v8::internal::(anonymous namespace)::FunctionData"** nonnull %22) #14
  br i1 %2073, label %2074, label %2110

2074:                                             ; preds = %2067
  %2075 = load %"struct.v8::internal::(anonymous namespace)::FunctionData"*, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %22, align 8
  %2076 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2075, i64 0, i32 2, i32 0, i32 1
  %2077 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %2076, align 8
  %2078 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2075, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %2079 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %2078, align 8
  %2080 = icmp ult %"class.v8::internal::Handle.1342"* %2077, %2079
  br i1 %2080, label %2081, label %2108

2081:                                             ; preds = %2074
  %2082 = load i64, i64* %2015, align 8
  %2083 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %2084 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %2077, i64 0, i32 0, i32 0
  %2085 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2083, i64 0, i32 31, i32 4
  %2086 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %2085, align 8
  %2087 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2086, null
  br i1 %2087, label %2090, label %2088

2088:                                             ; preds = %2081
  %2089 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2086, i64 %2082) #14
  br label %2103

2090:                                             ; preds = %2081
  %2091 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2083, i64 0, i32 31, i32 0
  %2092 = load i64*, i64** %2091, align 8
  %2093 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2083, i64 0, i32 31, i32 1
  %2094 = load i64*, i64** %2093, align 8
  %2095 = icmp eq i64* %2092, %2094
  br i1 %2095, label %2096, label %2098

2096:                                             ; preds = %2090
  %2097 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2083) #14
  br label %2098

2098:                                             ; preds = %2096, %2090
  %2099 = phi i64* [ %2097, %2096 ], [ %2092, %2090 ]
  %2100 = ptrtoint i64* %2099 to i64
  %2101 = add i64 %2100, 8
  %2102 = inttoptr i64 %2101 to i64*
  store i64* %2102, i64** %2091, align 8
  store i64 %2082, i64* %2099, align 8
  br label %2103

2103:                                             ; preds = %2098, %2088
  %2104 = phi i64* [ %2089, %2088 ], [ %2099, %2098 ]
  store i64* %2104, i64** %2084, align 8
  %2105 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %2077, i64 1
  %2106 = ptrtoint %"class.v8::internal::Handle.1342"* %2105 to i64
  %2107 = bitcast %"class.v8::internal::Handle.1342"** %2076 to i64*
  store i64 %2106, i64* %2107, align 8
  br label %2110

2108:                                             ; preds = %2074
  %2109 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2075, i64 0, i32 2
  call void @_ZNSt3__16vectorIN2v88internal6HandleINS2_10JSFunctionEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_(%"class.std::__1::vector.1340"* %2109, %"class.v8::internal::JSFunction"* nonnull dereferenceable(8) %21, %"class.v8::internal::Isolate"** nonnull dereferenceable(8) %18) #14
  br label %2110

2110:                                             ; preds = %2108, %2103, %2067
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2016) #14
  br label %2174

2111:                                             ; preds = %2058
  %2112 = load atomic i32, i32* %2022 monotonic, align 4
  %2113 = zext i32 %2112 to i64
  %2114 = or i64 %2020, %2113
  %2115 = add i64 %2114, 7
  %2116 = inttoptr i64 %2115 to i16*
  %2117 = load atomic i16, i16* %2116 monotonic, align 2
  %2118 = add i16 %2117, -1052
  %2119 = icmp ult i16 %2118, 3
  br i1 %2119, label %2120, label %2176

2120:                                             ; preds = %2111
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2011) #14
  store i64 %2019, i64* %2012, align 8
  %2121 = add i64 %2019, 31
  %2122 = inttoptr i64 %2121 to i32*
  %2123 = load i32, i32* %2122, align 4
  %2124 = icmp ugt i32 %2123, -3
  br i1 %2124, label %2174, label %2125

2125:                                             ; preds = %2120
  %2126 = add i64 %2019, 11
  %2127 = inttoptr i64 %2126 to i32*
  %2128 = load i32, i32* %2127, align 4
  %2129 = zext i32 %2128 to i64
  %2130 = or i64 %2020, %2129
  %2131 = add i64 %2130, 11
  %2132 = inttoptr i64 %2131 to i32*
  %2133 = load atomic i32, i32* %2132 monotonic, align 4
  %2134 = zext i32 %2133 to i64
  %2135 = or i64 %2020, %2134
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2013) #14
  store %"struct.v8::internal::(anonymous namespace)::FunctionData"* null, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %24, align 8
  %2136 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap6LookupENS0_18SharedFunctionInfoEPPNS1_12FunctionDataE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i64 %2135, %"struct.v8::internal::(anonymous namespace)::FunctionData"** nonnull %24) #14
  br i1 %2136, label %2137, label %2173

2137:                                             ; preds = %2125
  %2138 = load %"struct.v8::internal::(anonymous namespace)::FunctionData"*, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %24, align 8
  %2139 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2138, i64 0, i32 3, i32 0, i32 1
  %2140 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %2139, align 8
  %2141 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2138, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %2142 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %2141, align 8
  %2143 = icmp ult %"class.v8::internal::Handle.1350"* %2140, %2142
  br i1 %2143, label %2144, label %2171

2144:                                             ; preds = %2137
  %2145 = load i64, i64* %2012, align 8
  %2146 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %2147 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %2140, i64 0, i32 0, i32 0
  %2148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2146, i64 0, i32 31, i32 4
  %2149 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %2148, align 8
  %2150 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2149, null
  br i1 %2150, label %2153, label %2151

2151:                                             ; preds = %2144
  %2152 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2149, i64 %2145) #14
  br label %2166

2153:                                             ; preds = %2144
  %2154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2146, i64 0, i32 31, i32 0
  %2155 = load i64*, i64** %2154, align 8
  %2156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2146, i64 0, i32 31, i32 1
  %2157 = load i64*, i64** %2156, align 8
  %2158 = icmp eq i64* %2155, %2157
  br i1 %2158, label %2159, label %2161

2159:                                             ; preds = %2153
  %2160 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2146) #14
  br label %2161

2161:                                             ; preds = %2159, %2153
  %2162 = phi i64* [ %2160, %2159 ], [ %2155, %2153 ]
  %2163 = ptrtoint i64* %2162 to i64
  %2164 = add i64 %2163, 8
  %2165 = inttoptr i64 %2164 to i64*
  store i64* %2165, i64** %2154, align 8
  store i64 %2145, i64* %2162, align 8
  br label %2166

2166:                                             ; preds = %2161, %2151
  %2167 = phi i64* [ %2152, %2151 ], [ %2162, %2161 ]
  store i64* %2167, i64** %2147, align 8
  %2168 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %2140, i64 1
  %2169 = ptrtoint %"class.v8::internal::Handle.1350"* %2168 to i64
  %2170 = bitcast %"class.v8::internal::Handle.1350"** %2139 to i64*
  store i64 %2169, i64* %2170, align 8
  br label %2173

2171:                                             ; preds = %2137
  %2172 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2138, i64 0, i32 3
  call void @_ZNSt3__16vectorIN2v88internal6HandleINS2_17JSGeneratorObjectEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_(%"class.std::__1::vector.1348"* %2172, %"class.v8::internal::JSGeneratorObject"* nonnull dereferenceable(8) %23, %"class.v8::internal::Isolate"** nonnull dereferenceable(8) %18) #14
  br label %2173

2173:                                             ; preds = %2171, %2166, %2125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2013) #14
  br label %2174

2174:                                             ; preds = %2120, %2173, %2030, %2053, %2110
  %2175 = phi i8* [ %2014, %2110 ], [ %2017, %2053 ], [ %2017, %2030 ], [ %2011, %2173 ], [ %2011, %2120 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2175) #14
  br label %2176

2176:                                             ; preds = %2174, %2111
  %2177 = call i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"* nonnull %19) #14
  %2178 = trunc i64 %2177 to i32
  %2179 = icmp eq i32 %2178, 0
  br i1 %2179, label %2180, label %2018

2180:                                             ; preds = %2176, %2003
  call void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2005) #14
  %2181 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %2182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2181, i64 0, i32 0, i32 9
  %2183 = bitcast %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54 to void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)***
  %2184 = load void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)**, void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)*** %2183, align 8
  %2185 = load void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)*, void (%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*)** %2184, align 8
  call void %2185(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, %"class.v8::internal::Isolate"* %2181, %"class.v8::internal::ThreadLocalTop"* %2182) #14
  %2186 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %2187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2186, i64 0, i32 38
  %2188 = load %"class.v8::internal::ThreadManager"*, %"class.v8::internal::ThreadManager"** %2187, align 8
  %2189 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54, i64 0, i32 0
  call void @_ZN2v88internal13ThreadManager22IterateArchivedThreadsEPNS0_13ThreadVisitorE(%"class.v8::internal::ThreadManager"* %2188, %"class.v8::internal::ThreadVisitor"* nonnull %2189) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2004)
  %2190 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %1974, align 8
  %2191 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %2190, null
  br i1 %2191, label %2327, label %2192

2192:                                             ; preds = %2180
  %2193 = ptrtoint %"struct.std::__1::__hash_node_base.1302"* %2190 to i64
  %2194 = bitcast %"class.std::__1::__tree_end_node"* %1971 to %"class.std::__1::__tree_node.1576"**
  br label %2195

2195:                                             ; preds = %2310, %2192
  %2196 = phi i64 [ %2193, %2192 ], [ %2312, %2310 ]
  %2197 = inttoptr i64 %2196 to %"struct.std::__1::__hash_node.1555"*
  %2198 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %2197, i64 0, i32 2, i32 0, i32 0
  %2199 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2198, align 8
  %2200 = load i64, i64* %1, align 8
  %2201 = add i64 %2200, 31
  %2202 = inttoptr i64 %2201 to i32*
  %2203 = load i32, i32* %2202, align 4
  %2204 = ashr i32 %2203, 1
  %2205 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %2199) #14
  %2206 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2199, i64 0, i32 6
  %2207 = load i32, i32* %2206, align 4
  %2208 = icmp eq i32 %2207, 0
  %2209 = select i1 %2208, i32 -1, i32 %2205
  %2210 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2194, align 8
  %2211 = icmp eq %"class.std::__1::__tree_node.1576"* %2210, null
  br i1 %2211, label %2254, label %2212

2212:                                             ; preds = %2195, %2232
  %2213 = phi %"class.std::__1::__tree_end_node"* [ %2234, %2232 ], [ %1971, %2195 ]
  %2214 = phi %"class.std::__1::__tree_node.1576"* [ %2235, %2232 ], [ %2210, %2195 ]
  %2215 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2214, i64 0, i32 2, i32 0, i32 0, i32 0
  %2216 = load i32, i32* %2215, align 4
  %2217 = icmp slt i32 %2216, %2204
  br i1 %2217, label %2218, label %2221

2218:                                             ; preds = %2212
  %2219 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2214, i64 0, i32 0, i32 1
  %2220 = bitcast %"class.std::__1::__tree_node_base"** %2219 to %"class.std::__1::__tree_node.1576"**
  br label %2232

2221:                                             ; preds = %2212
  %2222 = icmp sgt i32 %2216, %2204
  br i1 %2222, label %2229, label %2223

2223:                                             ; preds = %2221
  %2224 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2214, i64 0, i32 2, i32 0, i32 0, i32 1
  %2225 = load i32, i32* %2224, align 4
  %2226 = icmp slt i32 %2225, %2209
  %2227 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2214, i64 0, i32 0, i32 1
  %2228 = bitcast %"class.std::__1::__tree_node_base"** %2227 to %"class.std::__1::__tree_node.1576"**
  br i1 %2226, label %2232, label %2229

2229:                                             ; preds = %2223, %2221
  %2230 = bitcast %"class.std::__1::__tree_node.1576"* %2214 to %"class.std::__1::__tree_node.1576"**
  %2231 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2214, i64 0, i32 0, i32 0
  br label %2232

2232:                                             ; preds = %2229, %2223, %2218
  %2233 = phi %"class.std::__1::__tree_node.1576"** [ %2230, %2229 ], [ %2220, %2218 ], [ %2228, %2223 ]
  %2234 = phi %"class.std::__1::__tree_end_node"* [ %2231, %2229 ], [ %2213, %2218 ], [ %2213, %2223 ]
  %2235 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2233, align 8
  %2236 = icmp eq %"class.std::__1::__tree_node.1576"* %2235, null
  br i1 %2236, label %2237, label %2212

2237:                                             ; preds = %2232
  %2238 = icmp eq %"class.std::__1::__tree_end_node"* %2234, %1971
  br i1 %2238, label %2254, label %2239

2239:                                             ; preds = %2237
  %2240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2234, i64 4
  %2241 = bitcast %"class.std::__1::__tree_end_node"* %2240 to %"struct.std::__1::__value_type.1577"*
  %2242 = bitcast %"class.std::__1::__tree_end_node"* %2240 to i32*
  %2243 = load i32, i32* %2242, align 4
  %2244 = icmp sgt i32 %2243, %2204
  br i1 %2244, label %2254, label %2245

2245:                                             ; preds = %2239
  %2246 = icmp slt i32 %2243, %2204
  br i1 %2246, label %2251, label %2247

2247:                                             ; preds = %2245
  %2248 = getelementptr inbounds %"struct.std::__1::__value_type.1577", %"struct.std::__1::__value_type.1577"* %2241, i64 0, i32 0, i32 0, i32 1
  %2249 = load i32, i32* %2248, align 4
  %2250 = icmp sgt i32 %2249, %2209
  br i1 %2250, label %2254, label %2251

2251:                                             ; preds = %2247, %2245
  %2252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2234, i64 5
  %2253 = bitcast %"class.std::__1::__tree_end_node"* %2252 to %"struct.v8::internal::(anonymous namespace)::FunctionData"*
  br label %2254

2254:                                             ; preds = %2251, %2247, %2239, %2237, %2195
  %2255 = phi %"struct.v8::internal::(anonymous namespace)::FunctionData"* [ null, %2195 ], [ null, %2237 ], [ null, %2239 ], [ %2253, %2251 ], [ null, %2247 ]
  %2256 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %2197, i64 0, i32 2, i32 0, i32 1
  %2257 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2256, align 8
  %2258 = load i64, i64* %113, align 8
  %2259 = add i64 %2258, 31
  %2260 = inttoptr i64 %2259 to i32*
  %2261 = load i32, i32* %2260, align 4
  %2262 = ashr i32 %2261, 1
  %2263 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %2257) #14
  %2264 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2257, i64 0, i32 6
  %2265 = load i32, i32* %2264, align 4
  %2266 = icmp eq i32 %2265, 0
  %2267 = select i1 %2266, i32 -1, i32 %2263
  %2268 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2194, align 8
  %2269 = icmp eq %"class.std::__1::__tree_node.1576"* %2268, null
  br i1 %2269, label %2292, label %2270

2270:                                             ; preds = %2254, %2288
  %2271 = phi %"class.std::__1::__tree_node.1576"* [ %2290, %2288 ], [ %2268, %2254 ]
  %2272 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2271, i64 0, i32 2, i32 0, i32 0, i32 0
  %2273 = load i32, i32* %2272, align 4
  %2274 = icmp slt i32 %2273, %2262
  br i1 %2274, label %2275, label %2278

2275:                                             ; preds = %2270
  %2276 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2271, i64 0, i32 0, i32 1
  %2277 = bitcast %"class.std::__1::__tree_node_base"** %2276 to %"class.std::__1::__tree_node.1576"**
  br label %2288

2278:                                             ; preds = %2270
  %2279 = icmp sgt i32 %2273, %2262
  br i1 %2279, label %2286, label %2280

2280:                                             ; preds = %2278
  %2281 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2271, i64 0, i32 2, i32 0, i32 0, i32 1
  %2282 = load i32, i32* %2281, align 4
  %2283 = icmp slt i32 %2282, %2267
  %2284 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2271, i64 0, i32 0, i32 1
  %2285 = bitcast %"class.std::__1::__tree_node_base"** %2284 to %"class.std::__1::__tree_node.1576"**
  br i1 %2283, label %2288, label %2286

2286:                                             ; preds = %2280, %2278
  %2287 = bitcast %"class.std::__1::__tree_node.1576"* %2271 to %"class.std::__1::__tree_node.1576"**
  br label %2288

2288:                                             ; preds = %2286, %2280, %2275
  %2289 = phi %"class.std::__1::__tree_node.1576"** [ %2287, %2286 ], [ %2277, %2275 ], [ %2285, %2280 ]
  %2290 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2289, align 8
  %2291 = icmp eq %"class.std::__1::__tree_node.1576"* %2290, null
  br i1 %2291, label %2292, label %2270

2292:                                             ; preds = %2288, %2254
  %2293 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2255, i64 0, i32 1, i32 0
  %2294 = load i64*, i64** %2293, align 8
  %2295 = icmp eq i64* %2294, null
  br i1 %2295, label %2310, label %2296

2296:                                             ; preds = %2292
  %2297 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2255, i64 0, i32 4
  %2298 = load i32, i32* %2297, align 8
  %2299 = icmp eq i32 %2298, 1
  br i1 %2299, label %2300, label %2302

2300:                                             ; preds = %2296
  %2301 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 0
  store i32 3, i32* %2301, align 8
  br label %3983

2302:                                             ; preds = %2296
  %2303 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2255, i64 0, i32 3, i32 0, i32 0
  %2304 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %2303, align 8
  %2305 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %2255, i64 0, i32 3, i32 0, i32 1
  %2306 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %2305, align 8
  %2307 = icmp eq %"class.v8::internal::Handle.1350"* %2304, %2306
  br i1 %2307, label %2310, label %2308

2308:                                             ; preds = %2302
  %2309 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 0
  store i32 2, i32* %2309, align 8
  br label %3983

2310:                                             ; preds = %2302, %2292
  %2311 = inttoptr i64 %2196 to i64*
  %2312 = load i64, i64* %2311, align 8
  %2313 = icmp eq i64 %2312, 0
  br i1 %2313, label %2327, label %2195

2314:                                             ; preds = %1978, %2314
  %2315 = phi i64 [ %2325, %2314 ], [ %1981, %1978 ]
  %2316 = inttoptr i64 %2315 to %"struct.std::__1::__hash_node.1555"*
  %2317 = load i64, i64* %1, align 8
  %2318 = add i64 %2317, 31
  %2319 = inttoptr i64 %2318 to i32*
  %2320 = load i32, i32* %2319, align 4
  %2321 = ashr i32 %2320, 1
  %2322 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %2316, i64 0, i32 2, i32 0, i32 0
  %2323 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2322, align 8
  call fastcc void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap21AddInterestingLiteralEiPNS0_15FunctionLiteralE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i32 %2321, %"class.v8::internal::FunctionLiteral"* %2323)
  %2324 = inttoptr i64 %2315 to i64*
  %2325 = load i64, i64* %2324, align 8
  %2326 = icmp eq i64 %2325, 0
  br i1 %2326, label %2003, label %2314

2327:                                             ; preds = %2310, %2180
  br i1 %3, label %2328, label %2330

2328:                                             ; preds = %2327
  %2329 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 0
  store i32 0, i32* %2329, align 8
  br label %3983

2330:                                             ; preds = %2327
  %2331 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 110
  store i8 1, i8* %2331, align 8
  %2332 = bitcast %"class.std::__1::map.1331"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2332) #14
  %2333 = getelementptr inbounds %"class.std::__1::map.1331", %"class.std::__1::map.1331"* %55, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %2334 = getelementptr inbounds %"class.std::__1::map.1331", %"class.std::__1::map.1331"* %55, i64 0, i32 0, i32 1, i32 0, i32 0
  %2335 = getelementptr inbounds %"class.std::__1::map.1331", %"class.std::__1::map.1331"* %55, i64 0, i32 0, i32 0
  %2336 = bitcast %"class.std::__1::__tree_node_base"** %2333 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2336, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %2334, %"class.std::__1::__tree_end_node"** %2335, align 8
  %2337 = load i64, i64* %1980, align 8
  %2338 = icmp eq i64 %2337, 0
  br i1 %2338, label %2394, label %2339

2339:                                             ; preds = %2330
  %2340 = bitcast %"class.std::__1::__tree_end_node"* %1971 to %"class.std::__1::__tree_node.1576"**
  %2341 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 13
  %2342 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %2343 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %2344 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %2345 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %12 to i8*
  %2346 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2347 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %12, i64 0, i32 0
  %2348 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %13 to i8*
  %2349 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2350 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %13, i64 0, i32 0
  %2351 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %14 to i8*
  %2352 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2353 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %14, i64 0, i32 0
  %2354 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %15 to i8*
  %2355 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2356 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %15, i64 0, i32 0
  %2357 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %16 to i8*
  %2358 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2359 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %16, i64 0, i32 0
  %2360 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %17 to i8*
  %2361 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2362 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %17, i64 0, i32 0
  %2363 = bitcast %"class.v8::internal::Zone"* %9 to i8*
  %2364 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 34
  %2365 = bitcast %"class.v8::internal::SourcePositionTableBuilder"* %10 to i8*
  %2366 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %11 to i8*
  %2367 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %11, i64 0, i32 2
  %2368 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %11, i64 0, i32 4, i32 2
  %2369 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %11, i64 0, i32 4, i32 0
  %2370 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %11, i64 0, i32 4, i32 3
  %2371 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 21
  %2372 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %2373 = getelementptr inbounds %"class.v8::internal::SourcePositionTableBuilder", %"class.v8::internal::SourcePositionTableBuilder"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %2374 = bitcast i8** %2373 to i64*
  %2375 = bitcast %"class.std::__1::__tree_end_node"* %2334 to %"class.std::__1::__tree_node.1666"**
  %2376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2334, i64 0, i32 0
  %2377 = bitcast %"class.std::__1::map.1331"* %55 to i64*
  %2378 = getelementptr inbounds %"class.std::__1::map.1331", %"class.std::__1::map.1331"* %55, i64 0, i32 0, i32 2, i32 0, i32 0
  %2379 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %8, i64 0, i32 0
  %2380 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 601
  %2381 = bitcast { i64*, i8 }* %56 to i8*
  %2382 = bitcast { i64*, i8 }* %7 to i8*
  %2383 = bitcast { i64*, i8 }* %7 to %"class.v8::internal::IsCompiledScope"*
  %2384 = bitcast { i64*, i8 }* %7 to i64*
  %2385 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %7, i64 0, i32 1
  %2386 = bitcast { i64*, i8 }* %56 to i64*
  %2387 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %56, i64 0, i32 1
  %2388 = bitcast %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %58 to i8*
  %2389 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2390 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SharedFunctionInfo>::ObjectRef"* %58, i64 0, i32 0
  %2391 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %59 to i8*
  %2392 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %52, i64 0, i32 0
  %2393 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %59 to %"class.std::__1::__tree_end_node"**
  br label %2411

2394:                                             ; preds = %3463, %2330
  %2395 = load i64, i64* %1975, align 8
  %2396 = icmp eq i64 %2395, 0
  br i1 %2396, label %3467, label %2397

2397:                                             ; preds = %2394
  %2398 = bitcast %"class.std::__1::__tree_end_node"* %1971 to %"class.std::__1::__tree_node.1576"**
  %2399 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 68
  %2400 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 13
  %2401 = bitcast %"class.v8::internal::SharedFunctionInfo"* %60 to i8*
  %2402 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2403 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 601
  %2404 = bitcast { i64*, i8 }* %61 to i8*
  %2405 = bitcast { i64*, i8 }* %6 to i8*
  %2406 = bitcast { i64*, i8 }* %6 to %"class.v8::internal::IsCompiledScope"*
  %2407 = bitcast { i64*, i8 }* %6 to i64*
  %2408 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %6, i64 0, i32 1
  %2409 = bitcast { i64*, i8 }* %61 to i64*
  %2410 = getelementptr inbounds { i64*, i8 }, { i64*, i8 }* %61, i64 0, i32 1
  br label %3481

2411:                                             ; preds = %2339, %3463
  %2412 = phi i64 [ %2337, %2339 ], [ %3465, %3463 ]
  %2413 = inttoptr i64 %2412 to %"struct.std::__1::__hash_node.1555"*
  %2414 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %2413, i64 0, i32 2, i32 0, i32 0
  %2415 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2414, align 8
  %2416 = load i64, i64* %1, align 8
  %2417 = add i64 %2416, 31
  %2418 = inttoptr i64 %2417 to i32*
  %2419 = load i32, i32* %2418, align 4
  %2420 = ashr i32 %2419, 1
  %2421 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %2415) #14
  %2422 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2415, i64 0, i32 6
  %2423 = load i32, i32* %2422, align 4
  %2424 = icmp eq i32 %2423, 0
  %2425 = select i1 %2424, i32 -1, i32 %2421
  %2426 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2340, align 8
  %2427 = icmp eq %"class.std::__1::__tree_node.1576"* %2426, null
  br i1 %2427, label %3463, label %2428

2428:                                             ; preds = %2411, %2448
  %2429 = phi %"class.std::__1::__tree_end_node"* [ %2450, %2448 ], [ %1971, %2411 ]
  %2430 = phi %"class.std::__1::__tree_node.1576"* [ %2451, %2448 ], [ %2426, %2411 ]
  %2431 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2430, i64 0, i32 2, i32 0, i32 0, i32 0
  %2432 = load i32, i32* %2431, align 4
  %2433 = icmp slt i32 %2432, %2420
  br i1 %2433, label %2434, label %2437

2434:                                             ; preds = %2428
  %2435 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2430, i64 0, i32 0, i32 1
  %2436 = bitcast %"class.std::__1::__tree_node_base"** %2435 to %"class.std::__1::__tree_node.1576"**
  br label %2448

2437:                                             ; preds = %2428
  %2438 = icmp sgt i32 %2432, %2420
  br i1 %2438, label %2445, label %2439

2439:                                             ; preds = %2437
  %2440 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2430, i64 0, i32 2, i32 0, i32 0, i32 1
  %2441 = load i32, i32* %2440, align 4
  %2442 = icmp slt i32 %2441, %2425
  %2443 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2430, i64 0, i32 0, i32 1
  %2444 = bitcast %"class.std::__1::__tree_node_base"** %2443 to %"class.std::__1::__tree_node.1576"**
  br i1 %2442, label %2448, label %2445

2445:                                             ; preds = %2439, %2437
  %2446 = bitcast %"class.std::__1::__tree_node.1576"* %2430 to %"class.std::__1::__tree_node.1576"**
  %2447 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %2430, i64 0, i32 0, i32 0
  br label %2448

2448:                                             ; preds = %2445, %2439, %2434
  %2449 = phi %"class.std::__1::__tree_node.1576"** [ %2446, %2445 ], [ %2436, %2434 ], [ %2444, %2439 ]
  %2450 = phi %"class.std::__1::__tree_end_node"* [ %2447, %2445 ], [ %2429, %2434 ], [ %2429, %2439 ]
  %2451 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2449, align 8
  %2452 = icmp eq %"class.std::__1::__tree_node.1576"* %2451, null
  br i1 %2452, label %2453, label %2428

2453:                                             ; preds = %2448
  %2454 = icmp eq %"class.std::__1::__tree_end_node"* %2450, %1971
  br i1 %2454, label %3463, label %2455

2455:                                             ; preds = %2453
  %2456 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2450, i64 4
  %2457 = bitcast %"class.std::__1::__tree_end_node"* %2456 to %"struct.std::__1::__value_type.1577"*
  %2458 = bitcast %"class.std::__1::__tree_end_node"* %2456 to i32*
  %2459 = load i32, i32* %2458, align 4
  %2460 = icmp sgt i32 %2459, %2420
  br i1 %2460, label %3463, label %2461

2461:                                             ; preds = %2455
  %2462 = icmp slt i32 %2459, %2420
  br i1 %2462, label %2467, label %2463

2463:                                             ; preds = %2461
  %2464 = getelementptr inbounds %"struct.std::__1::__value_type.1577", %"struct.std::__1::__value_type.1577"* %2457, i64 0, i32 0, i32 0, i32 1
  %2465 = load i32, i32* %2464, align 4
  %2466 = icmp sgt i32 %2465, %2425
  br i1 %2466, label %3463, label %2467

2467:                                             ; preds = %2463, %2461
  %2468 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2450, i64 6
  %2469 = bitcast %"class.std::__1::__tree_end_node"* %2468 to i64**
  %2470 = load i64*, i64** %2469, align 8
  %2471 = icmp eq i64* %2470, null
  br i1 %2471, label %3463, label %2472

2472:                                             ; preds = %2467
  %2473 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %2341, align 8
  call void @_ZN2v88internal16CompilationCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCache"* %2473, i64* nonnull %2470) #14
  %2474 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2342, align 8
  call void @_ZN2v88internal5Debug18DeoptimizeFunctionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %2474, i64* nonnull %2470) #14
  %2475 = load i64, i64* %2470, align 8
  %2476 = and i64 %2475, -4294967296
  %2477 = add i64 %2475, 15
  %2478 = inttoptr i64 %2477 to i32*
  %2479 = load atomic i32, i32* %2478 acquire, align 4
  %2480 = zext i32 %2479 to i64
  %2481 = or i64 %2476, %2480
  %2482 = add i64 %2481, -1
  %2483 = inttoptr i64 %2482 to i32*
  %2484 = load atomic i32, i32* %2483 monotonic, align 4
  %2485 = zext i32 %2484 to i64
  %2486 = or i64 %2476, %2485
  %2487 = add i64 %2486, 7
  %2488 = inttoptr i64 %2487 to i16*
  %2489 = load atomic i16, i16* %2488 monotonic, align 2
  %2490 = icmp eq i16 %2489, 100
  br i1 %2490, label %2491, label %2517

2491:                                             ; preds = %2472
  %2492 = load i64, i64* %2470, align 8
  %2493 = and i64 %2492, -4294967296
  %2494 = add i64 %2492, 15
  %2495 = inttoptr i64 %2494 to i32*
  %2496 = load atomic i32, i32* %2495 acquire, align 4
  %2497 = zext i32 %2496 to i64
  %2498 = or i64 %2493, %2497
  %2499 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %74, align 8
  %2500 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2499, null
  br i1 %2500, label %2503, label %2501

2501:                                             ; preds = %2491
  %2502 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2499, i64 %2498) #14
  br label %2514

2503:                                             ; preds = %2491
  %2504 = load i64*, i64** %2343, align 8
  %2505 = load i64*, i64** %2344, align 8
  %2506 = icmp eq i64* %2504, %2505
  br i1 %2506, label %2507, label %2509

2507:                                             ; preds = %2503
  %2508 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #14
  br label %2509

2509:                                             ; preds = %2507, %2503
  %2510 = phi i64* [ %2508, %2507 ], [ %2504, %2503 ]
  %2511 = ptrtoint i64* %2510 to i64
  %2512 = add i64 %2511, 8
  %2513 = inttoptr i64 %2512 to i64*
  store i64* %2513, i64** %2343, align 8
  store i64 %2498, i64* %2510, align 8
  br label %2514

2514:                                             ; preds = %2501, %2509
  %2515 = phi i64* [ %2502, %2501 ], [ %2510, %2509 ]
  %2516 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2342, align 8
  call void @_ZN2v88internal5Debug27RemoveBreakInfoAndMaybeFreeENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"* %2516, i64* %2515) #14
  br label %2517

2517:                                             ; preds = %2514, %2472
  call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %0, i64* nonnull %2470) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2345) #14
  %2518 = load i64, i64* %2470, align 8
  store i64 %2518, i64* %2346, align 8
  %2519 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2347) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2345) #14
  %2520 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  %2521 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %96, align 8
  %2522 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2520 to i64
  %2523 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2521 to i64
  %2524 = sub i64 %2523, %2522
  %2525 = icmp eq i64 %2524, 0
  br i1 %2525, label %2542, label %2526

2526:                                             ; preds = %2517
  %2527 = ashr exact i64 %2524, 4
  br label %2528

2528:                                             ; preds = %2528, %2526
  %2529 = phi %"struct.v8::internal::SourceChangeRange"* [ %2540, %2528 ], [ %2520, %2526 ]
  %2530 = phi i64 [ %2539, %2528 ], [ %2527, %2526 ]
  %2531 = lshr i64 %2530, 1
  %2532 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2529, i64 1
  %2533 = getelementptr %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2529, i64 %2531, i32 1
  %2534 = load i32, i32* %2533, align 4
  %2535 = icmp slt i32 %2534, %2519
  %2536 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2532, i64 %2531
  %2537 = xor i64 %2531, -1
  %2538 = add i64 %2530, %2537
  %2539 = select i1 %2535, i64 %2538, i64 %2531
  %2540 = select i1 %2535, %"struct.v8::internal::SourceChangeRange"* %2536, %"struct.v8::internal::SourceChangeRange"* %2529
  %2541 = icmp eq i64 %2539, 0
  br i1 %2541, label %2542, label %2528

2542:                                             ; preds = %2528, %2517
  %2543 = phi %"struct.v8::internal::SourceChangeRange"* [ %2520, %2517 ], [ %2540, %2528 ]
  %2544 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2543, %2521
  br i1 %2544, label %2552, label %2545

2545:                                             ; preds = %2542
  %2546 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2543, i64 0, i32 1
  %2547 = load i32, i32* %2546, align 4
  %2548 = icmp eq i32 %2547, %2519
  br i1 %2548, label %2549, label %2552

2549:                                             ; preds = %2545
  %2550 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2543, i64 0, i32 3
  %2551 = load i32, i32* %2550, align 4
  br label %2561

2552:                                             ; preds = %2545, %2542
  %2553 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2543, %2520
  br i1 %2553, label %2561, label %2554

2554:                                             ; preds = %2552
  %2555 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2543, i64 -1, i32 3
  %2556 = load i32, i32* %2555, align 4
  %2557 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2543, i64 -1, i32 1
  %2558 = load i32, i32* %2557, align 4
  %2559 = add i32 %2556, %2519
  %2560 = sub i32 %2559, %2558
  br label %2561

2561:                                             ; preds = %2554, %2552, %2549
  %2562 = phi i32 [ %2551, %2549 ], [ %2560, %2554 ], [ %2519, %2552 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2348) #14
  %2563 = load i64, i64* %2470, align 8
  store i64 %2563, i64* %2349, align 8
  %2564 = call i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2350) #14
  %2565 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  %2566 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %96, align 8
  %2567 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2565 to i64
  %2568 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2566 to i64
  %2569 = sub i64 %2568, %2567
  %2570 = icmp eq i64 %2569, 0
  br i1 %2570, label %2587, label %2571

2571:                                             ; preds = %2561
  %2572 = ashr exact i64 %2569, 4
  br label %2573

2573:                                             ; preds = %2573, %2571
  %2574 = phi %"struct.v8::internal::SourceChangeRange"* [ %2585, %2573 ], [ %2565, %2571 ]
  %2575 = phi i64 [ %2584, %2573 ], [ %2572, %2571 ]
  %2576 = lshr i64 %2575, 1
  %2577 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2574, i64 1
  %2578 = getelementptr %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2574, i64 %2576, i32 1
  %2579 = load i32, i32* %2578, align 4
  %2580 = icmp slt i32 %2579, %2564
  %2581 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2577, i64 %2576
  %2582 = xor i64 %2576, -1
  %2583 = add i64 %2575, %2582
  %2584 = select i1 %2580, i64 %2583, i64 %2576
  %2585 = select i1 %2580, %"struct.v8::internal::SourceChangeRange"* %2581, %"struct.v8::internal::SourceChangeRange"* %2574
  %2586 = icmp eq i64 %2584, 0
  br i1 %2586, label %2587, label %2573

2587:                                             ; preds = %2573, %2561
  %2588 = phi %"struct.v8::internal::SourceChangeRange"* [ %2565, %2561 ], [ %2585, %2573 ]
  %2589 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2588, %2566
  br i1 %2589, label %2597, label %2590

2590:                                             ; preds = %2587
  %2591 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2588, i64 0, i32 1
  %2592 = load i32, i32* %2591, align 4
  %2593 = icmp eq i32 %2592, %2564
  br i1 %2593, label %2594, label %2597

2594:                                             ; preds = %2590
  %2595 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2588, i64 0, i32 3
  %2596 = load i32, i32* %2595, align 4
  br label %2606

2597:                                             ; preds = %2590, %2587
  %2598 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2588, %2565
  br i1 %2598, label %2606, label %2599

2599:                                             ; preds = %2597
  %2600 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2588, i64 -1, i32 3
  %2601 = load i32, i32* %2600, align 4
  %2602 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2588, i64 -1, i32 1
  %2603 = load i32, i32* %2602, align 4
  %2604 = add i32 %2601, %2564
  %2605 = sub i32 %2604, %2603
  br label %2606

2606:                                             ; preds = %2599, %2597, %2594
  %2607 = phi i32 [ %2596, %2594 ], [ %2605, %2599 ], [ %2564, %2597 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2348) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2351) #14
  %2608 = load i64, i64* %2470, align 8
  store i64 %2608, i64* %2352, align 8
  %2609 = add i64 %2608, 23
  %2610 = inttoptr i64 %2609 to i16*
  %2611 = load i16, i16* %2610, align 2
  %2612 = icmp eq i16 %2611, -1
  br i1 %2612, label %2622, label %2613

2613:                                             ; preds = %2606
  %2614 = zext i16 %2611 to i32
  %2615 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %2353) #14
  %2616 = sub nsw i32 %2615, %2614
  %2617 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  %2618 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %96, align 8
  %2619 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2617 to i64
  %2620 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2618 to i64
  %2621 = sub i64 %2620, %2619
  br label %2622

2622:                                             ; preds = %2613, %2606
  %2623 = phi i64 [ %2569, %2606 ], [ %2621, %2613 ]
  %2624 = phi %"struct.v8::internal::SourceChangeRange"* [ %2566, %2606 ], [ %2618, %2613 ]
  %2625 = phi %"struct.v8::internal::SourceChangeRange"* [ %2565, %2606 ], [ %2617, %2613 ]
  %2626 = phi i32 [ -1, %2606 ], [ %2616, %2613 ]
  %2627 = icmp eq i64 %2623, 0
  br i1 %2627, label %2644, label %2628

2628:                                             ; preds = %2622
  %2629 = ashr exact i64 %2623, 4
  br label %2630

2630:                                             ; preds = %2630, %2628
  %2631 = phi %"struct.v8::internal::SourceChangeRange"* [ %2642, %2630 ], [ %2625, %2628 ]
  %2632 = phi i64 [ %2641, %2630 ], [ %2629, %2628 ]
  %2633 = lshr i64 %2632, 1
  %2634 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2631, i64 1
  %2635 = getelementptr %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2631, i64 %2633, i32 1
  %2636 = load i32, i32* %2635, align 4
  %2637 = icmp slt i32 %2636, %2626
  %2638 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2634, i64 %2633
  %2639 = xor i64 %2633, -1
  %2640 = add i64 %2632, %2639
  %2641 = select i1 %2637, i64 %2640, i64 %2633
  %2642 = select i1 %2637, %"struct.v8::internal::SourceChangeRange"* %2638, %"struct.v8::internal::SourceChangeRange"* %2631
  %2643 = icmp eq i64 %2641, 0
  br i1 %2643, label %2644, label %2630

2644:                                             ; preds = %2630, %2622
  %2645 = phi %"struct.v8::internal::SourceChangeRange"* [ %2625, %2622 ], [ %2642, %2630 ]
  %2646 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2645, %2624
  br i1 %2646, label %2654, label %2647

2647:                                             ; preds = %2644
  %2648 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2645, i64 0, i32 1
  %2649 = load i32, i32* %2648, align 4
  %2650 = icmp eq i32 %2649, %2626
  br i1 %2650, label %2651, label %2654

2651:                                             ; preds = %2647
  %2652 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2645, i64 0, i32 3
  %2653 = load i32, i32* %2652, align 4
  br label %2663

2654:                                             ; preds = %2647, %2644
  %2655 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2645, %2625
  br i1 %2655, label %2663, label %2656

2656:                                             ; preds = %2654
  %2657 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2645, i64 -1, i32 3
  %2658 = load i32, i32* %2657, align 4
  %2659 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2645, i64 -1, i32 1
  %2660 = load i32, i32* %2659, align 4
  %2661 = add i32 %2658, %2626
  %2662 = sub i32 %2661, %2660
  br label %2663

2663:                                             ; preds = %2656, %2654, %2651
  %2664 = phi i32 [ %2653, %2651 ], [ %2662, %2656 ], [ %2626, %2654 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2351) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2354) #14
  %2665 = load i64, i64* %2470, align 8
  store i64 %2665, i64* %2355, align 8
  call void @_ZN2v88internal18SharedFunctionInfo11SetPositionEii(%"class.v8::internal::SharedFunctionInfo"* nonnull %2356, i32 %2562, i32 %2607) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2354) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2357) #14
  %2666 = load i64, i64* %2470, align 8
  store i64 %2666, i64* %2358, align 8
  call void @_ZN2v88internal18SharedFunctionInfo24SetFunctionTokenPositionEii(%"class.v8::internal::SharedFunctionInfo"* nonnull %2359, i32 %2664, i32 %2562) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2357) #14
  %2667 = load i64, i64* %2470, align 8
  %2668 = and i64 %2667, -4294967296
  %2669 = add i64 %2667, 3
  %2670 = inttoptr i64 %2669 to i32*
  %2671 = load atomic i32, i32* %2670 acquire, align 4
  %2672 = zext i32 %2671 to i64
  %2673 = and i64 %2672, 1
  %2674 = icmp eq i64 %2673, 0
  br i1 %2674, label %2894, label %2675

2675:                                             ; preds = %2663
  %2676 = or i64 %2668, %2672
  %2677 = add i64 %2676, -1
  %2678 = inttoptr i64 %2677 to i32*
  %2679 = load atomic i32, i32* %2678 monotonic, align 4
  %2680 = zext i32 %2679 to i64
  %2681 = or i64 %2668, %2680
  %2682 = add i64 %2681, 7
  %2683 = inttoptr i64 %2682 to i16*
  %2684 = load atomic i16, i16* %2683 monotonic, align 2
  %2685 = icmp eq i16 %2684, 133
  br i1 %2685, label %2702, label %2686

2686:                                             ; preds = %2675
  %2687 = load atomic i32, i32* %2678 monotonic, align 4
  %2688 = zext i32 %2687 to i64
  %2689 = or i64 %2668, %2688
  %2690 = add i64 %2689, 7
  %2691 = inttoptr i64 %2690 to i16*
  %2692 = load atomic i16, i16* %2691 monotonic, align 2
  %2693 = icmp eq i16 %2692, 105
  br i1 %2693, label %2702, label %2694

2694:                                             ; preds = %2686
  %2695 = load atomic i32, i32* %2678 monotonic, align 4
  %2696 = zext i32 %2695 to i64
  %2697 = or i64 %2668, %2696
  %2698 = add i64 %2697, 7
  %2699 = inttoptr i64 %2698 to i16*
  %2700 = load atomic i16, i16* %2699 monotonic, align 2
  %2701 = icmp eq i16 %2700, 94
  br i1 %2701, label %2702, label %2894

2702:                                             ; preds = %2694, %2686, %2675
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2360) #14
  %2703 = load i64, i64* %2470, align 8
  store i64 %2703, i64* %2361, align 8
  %2704 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %2362, %"class.v8::internal::Isolate"* %0) #14
  %2705 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %74, align 8
  %2706 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2705, null
  br i1 %2706, label %2709, label %2707

2707:                                             ; preds = %2702
  %2708 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2705, i64 %2704) #14
  br label %2720

2709:                                             ; preds = %2702
  %2710 = load i64*, i64** %2343, align 8
  %2711 = load i64*, i64** %2344, align 8
  %2712 = icmp eq i64* %2710, %2711
  br i1 %2712, label %2713, label %2715

2713:                                             ; preds = %2709
  %2714 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #14
  br label %2715

2715:                                             ; preds = %2713, %2709
  %2716 = phi i64* [ %2714, %2713 ], [ %2710, %2709 ]
  %2717 = ptrtoint i64* %2716 to i64
  %2718 = add i64 %2717, 8
  %2719 = inttoptr i64 %2718 to i64*
  store i64* %2719, i64** %2343, align 8
  store i64 %2704, i64* %2716, align 8
  br label %2720

2720:                                             ; preds = %2715, %2707
  %2721 = phi i64* [ %2708, %2707 ], [ %2716, %2715 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2363) #14
  %2722 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %2364, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %9, %"class.v8::internal::AccountingAllocator"* %2722, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__._ZN2v88internal12_GLOBAL__N_128TranslateSourcePositionTableEPNS0_7IsolateENS0_6HandleINS0_13BytecodeArrayEEERKNSt3__16vectorINS0_17SourceChangeRangeENS7_9allocatorIS9_EEEE, i64 0, i64 0), i1 zeroext false) #14
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2365) #14
  call void @_ZN2v88internal26SourcePositionTableBuilderC1EPNS0_4ZoneENS1_13RecordingModeE(%"class.v8::internal::SourcePositionTableBuilder"* nonnull %10, %"class.v8::internal::Zone"* nonnull %9, i32 2) #14
  %2723 = load i64, i64* %2721, align 8
  %2724 = and i64 %2723, -4294967296
  %2725 = add i64 %2723, 15
  %2726 = inttoptr i64 %2725 to i32*
  %2727 = load atomic i32, i32* %2726 acquire, align 4
  %2728 = zext i32 %2727 to i64
  %2729 = or i64 %2724, %2728
  %2730 = and i64 %2728, 1
  %2731 = icmp eq i64 %2730, 0
  br i1 %2731, label %2742, label %2732

2732:                                             ; preds = %2720
  %2733 = add i64 %2729, -1
  %2734 = inttoptr i64 %2733 to i32*
  %2735 = load atomic i32, i32* %2734 monotonic, align 4
  %2736 = zext i32 %2735 to i64
  %2737 = or i64 %2724, %2736
  %2738 = add i64 %2737, 7
  %2739 = inttoptr i64 %2738 to i16*
  %2740 = load atomic i16, i16* %2739 monotonic, align 2
  %2741 = icmp eq i16 %2740, 132
  br i1 %2741, label %2763, label %2742

2742:                                             ; preds = %2732, %2720
  %2743 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %2744 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %2743, null
  br i1 %2744, label %2751, label %2745

2745:                                             ; preds = %2742
  %2746 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %2743, i64 0, i32 0, i32 1
  %2747 = load i8, i8* %2746, align 8, !range !18
  %2748 = icmp eq i8 %2747, 0
  br i1 %2748, label %2751, label %2749

2749:                                             ; preds = %2745
  %2750 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %2743, i64 0, i32 1, i64 0
  br label %2759

2751:                                             ; preds = %2745, %2742
  %2752 = and i64 %2723, -262144
  %2753 = or i64 %2752, 16
  %2754 = inttoptr i64 %2753 to i64*
  %2755 = load i64, i64* %2754, align 16
  %2756 = add i64 %2755, -41416
  %2757 = inttoptr i64 %2756 to %"class.v8::internal::Isolate"*
  %2758 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2757, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %2759

2759:                                             ; preds = %2751, %2749
  %2760 = phi i64* [ %2758, %2751 ], [ %2750, %2749 ]
  %2761 = getelementptr inbounds i64, i64* %2760, i64 107
  %2762 = load i64, i64* %2761, align 8
  br label %2763

2763:                                             ; preds = %2759, %2732
  %2764 = phi i64 [ %2762, %2759 ], [ %2729, %2732 ]
  %2765 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %74, align 8
  %2766 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %2765, null
  br i1 %2766, label %2770, label %2767

2767:                                             ; preds = %2763
  %2768 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %2765, i64 %2764) #14
  %2769 = load i64, i64* %2768, align 8
  br label %2781

2770:                                             ; preds = %2763
  %2771 = load i64*, i64** %2343, align 8
  %2772 = load i64*, i64** %2344, align 8
  %2773 = icmp eq i64* %2771, %2772
  br i1 %2773, label %2774, label %2776

2774:                                             ; preds = %2770
  %2775 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #14
  br label %2776

2776:                                             ; preds = %2774, %2770
  %2777 = phi i64* [ %2775, %2774 ], [ %2771, %2770 ]
  %2778 = ptrtoint i64* %2777 to i64
  %2779 = add i64 %2778, 8
  %2780 = inttoptr i64 %2779 to i64*
  store i64* %2780, i64** %2343, align 8
  store i64 %2764, i64* %2777, align 8
  br label %2781

2781:                                             ; preds = %2776, %2767
  %2782 = phi i64 [ %2769, %2767 ], [ %2764, %2776 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2366) #14
  call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nonnull %11, i64 %2782, i32 0, i32 0) #14
  %2783 = load i32, i32* %2367, align 8
  %2784 = icmp eq i32 %2783, -1
  br i1 %2784, label %2785, label %2824

2785:                                             ; preds = %2871, %2781
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2366) #14
  %2786 = call i64* @_ZN2v88internal26SourcePositionTableBuilder21ToSourcePositionTableINS0_7IsolateEEENS0_6HandleINS0_9ByteArrayEEEPT_(%"class.v8::internal::SourcePositionTableBuilder"* nonnull %10, %"class.v8::internal::Isolate"* %0) #14
  %2787 = load i64, i64* %2721, align 8
  %2788 = load i64, i64* %2786, align 8
  %2789 = add i64 %2787, 15
  %2790 = inttoptr i64 %2789 to i32*
  %2791 = trunc i64 %2788 to i32
  store atomic volatile i32 %2791, i32* %2790 release, align 4
  %2792 = and i64 %2788, 1
  %2793 = icmp eq i64 %2792, 0
  br i1 %2793, label %2817, label %2794

2794:                                             ; preds = %2785
  %2795 = and i64 %2787, -262144
  %2796 = or i64 %2795, 8
  %2797 = inttoptr i64 %2796 to i64*
  %2798 = load i64, i64* %2797, align 8
  %2799 = and i64 %2798, 262144
  %2800 = icmp eq i64 %2799, 0
  br i1 %2800, label %2805, label %2801

2801:                                             ; preds = %2794
  %2802 = or i64 %2795, 16
  %2803 = inttoptr i64 %2802 to %"class.v8::internal::Heap"**
  %2804 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2803, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %2804, i64 %2787, i64 %2789, i64 %2788) #14
  br label %2805

2805:                                             ; preds = %2801, %2794
  %2806 = and i64 %2788, -262144
  %2807 = or i64 %2806, 8
  %2808 = inttoptr i64 %2807 to i64*
  %2809 = load i64, i64* %2808, align 8
  %2810 = and i64 %2809, 24
  %2811 = icmp eq i64 %2810, 0
  br i1 %2811, label %2817, label %2812

2812:                                             ; preds = %2805
  %2813 = load i64, i64* %2797, align 8
  %2814 = and i64 %2813, 24
  %2815 = icmp eq i64 %2814, 0
  br i1 %2815, label %2816, label %2817

2816:                                             ; preds = %2812
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2787, i64 %2789, i64 %2788) #14
  br label %2817

2817:                                             ; preds = %2816, %2812, %2805, %2785
  %2818 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %2371, align 8
  %2819 = bitcast %"class.v8::internal::Logger"* %2818 to i1 (%"class.v8::internal::Logger"*)***
  %2820 = load i1 (%"class.v8::internal::Logger"*)**, i1 (%"class.v8::internal::Logger"*)*** %2819, align 8
  %2821 = getelementptr inbounds i1 (%"class.v8::internal::Logger"*)*, i1 (%"class.v8::internal::Logger"*)** %2820, i64 19
  %2822 = load i1 (%"class.v8::internal::Logger"*)*, i1 (%"class.v8::internal::Logger"*)** %2821, align 8
  %2823 = call zeroext i1 %2822(%"class.v8::internal::Logger"* %2818) #14
  br i1 %2823, label %2884, label %2888

2824:                                             ; preds = %2781, %2871
  %2825 = load i64, i64* %2368, align 8
  %2826 = lshr i64 %2825, 1
  %2827 = trunc i64 %2826 to i32
  %2828 = and i32 %2827, 1073741823
  %2829 = add nsw i32 %2828, -1
  %2830 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  %2831 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %96, align 8
  %2832 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2830 to i64
  %2833 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %2831 to i64
  %2834 = sub i64 %2833, %2832
  %2835 = icmp eq i64 %2834, 0
  br i1 %2835, label %2852, label %2836

2836:                                             ; preds = %2824
  %2837 = ashr exact i64 %2834, 4
  br label %2838

2838:                                             ; preds = %2838, %2836
  %2839 = phi %"struct.v8::internal::SourceChangeRange"* [ %2850, %2838 ], [ %2830, %2836 ]
  %2840 = phi i64 [ %2849, %2838 ], [ %2837, %2836 ]
  %2841 = lshr i64 %2840, 1
  %2842 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2839, i64 1
  %2843 = getelementptr %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2839, i64 %2841, i32 1
  %2844 = load i32, i32* %2843, align 4
  %2845 = icmp slt i32 %2844, %2829
  %2846 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2842, i64 %2841
  %2847 = xor i64 %2841, -1
  %2848 = add i64 %2840, %2847
  %2849 = select i1 %2845, i64 %2848, i64 %2841
  %2850 = select i1 %2845, %"struct.v8::internal::SourceChangeRange"* %2846, %"struct.v8::internal::SourceChangeRange"* %2839
  %2851 = icmp eq i64 %2849, 0
  br i1 %2851, label %2852, label %2838

2852:                                             ; preds = %2838, %2824
  %2853 = phi %"struct.v8::internal::SourceChangeRange"* [ %2830, %2824 ], [ %2850, %2838 ]
  %2854 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2853, %2831
  br i1 %2854, label %2862, label %2855

2855:                                             ; preds = %2852
  %2856 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2853, i64 0, i32 1
  %2857 = load i32, i32* %2856, align 4
  %2858 = icmp eq i32 %2857, %2829
  br i1 %2858, label %2859, label %2862

2859:                                             ; preds = %2855
  %2860 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2853, i64 0, i32 3
  %2861 = load i32, i32* %2860, align 4
  br label %2871

2862:                                             ; preds = %2855, %2852
  %2863 = icmp eq %"struct.v8::internal::SourceChangeRange"* %2853, %2830
  br i1 %2863, label %2871, label %2864

2864:                                             ; preds = %2862
  %2865 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2853, i64 -1, i32 3
  %2866 = load i32, i32* %2865, align 4
  %2867 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %2853, i64 -1, i32 1
  %2868 = load i32, i32* %2867, align 4
  %2869 = add i32 %2866, %2829
  %2870 = sub i32 %2869, %2868
  br label %2871

2871:                                             ; preds = %2864, %2862, %2859
  %2872 = phi i32 [ %2861, %2859 ], [ %2870, %2864 ], [ %2829, %2862 ]
  %2873 = add nsw i32 %2872, 1
  %2874 = and i64 %2825, -2147483647
  %2875 = sext i32 %2873 to i64
  %2876 = shl nsw i64 %2875, 1
  %2877 = or i64 %2876, %2874
  %2878 = load i32, i32* %2369, align 8
  %2879 = sext i32 %2878 to i64
  %2880 = load i8, i8* %2370, align 8, !range !18
  %2881 = icmp ne i8 %2880, 0
  call void @_ZN2v88internal26SourcePositionTableBuilder11AddPositionEmNS0_14SourcePositionEb(%"class.v8::internal::SourcePositionTableBuilder"* nonnull %10, i64 %2879, i64 %2877, i1 zeroext %2881) #14
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nonnull %11) #14
  %2882 = load i32, i32* %2367, align 8
  %2883 = icmp eq i32 %2882, -1
  br i1 %2883, label %2785, label %2824

2884:                                             ; preds = %2817
  %2885 = load i64, i64* %2721, align 8
  %2886 = add i64 %2885, 33
  %2887 = load i64, i64* %2786, align 8
  call void @_ZN2v88internal6Logger26CodeLinePosInfoRecordEventEmNS0_9ByteArrayE(%"class.v8::internal::Logger"* %2818, i64 %2886, i64 %2887) #14
  br label %2888

2888:                                             ; preds = %2884, %2817
  %2889 = load i8*, i8** %2372, align 8
  %2890 = icmp eq i8* %2889, null
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2888
  %2892 = ptrtoint i8* %2889 to i64
  store i64 %2892, i64* %2374, align 8
  br label %2893

2893:                                             ; preds = %2891, %2888
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2365) #14
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2363) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2360) #14
  br label %2894

2894:                                             ; preds = %2663, %2694, %2893
  %2895 = load i64, i64* %2470, align 8
  %2896 = load i64, i64* %113, align 8
  %2897 = and i64 %2895, -4294967296
  %2898 = add i64 %2895, 15
  %2899 = inttoptr i64 %2898 to i32*
  %2900 = load atomic i32, i32* %2899 acquire, align 4
  %2901 = zext i32 %2900 to i64
  %2902 = or i64 %2897, %2901
  %2903 = add i64 %2902, -1
  %2904 = inttoptr i64 %2903 to i32*
  %2905 = load atomic i32, i32* %2904 monotonic, align 4
  %2906 = zext i32 %2905 to i64
  %2907 = or i64 %2897, %2906
  %2908 = add i64 %2907, 7
  %2909 = inttoptr i64 %2908 to i16*
  %2910 = load atomic i16, i16* %2909 monotonic, align 2
  %2911 = icmp eq i16 %2910, 100
  br i1 %2911, label %2912, label %2944

2912:                                             ; preds = %2894
  %2913 = add i64 %2902, 11
  %2914 = inttoptr i64 %2913 to i32*
  %2915 = trunc i64 %2896 to i32
  store atomic volatile i32 %2915, i32* %2914 monotonic, align 4
  %2916 = and i64 %2896, 1
  %2917 = icmp eq i64 %2916, 0
  br i1 %2917, label %2929, label %2918

2918:                                             ; preds = %2912
  %2919 = and i64 %2902, -262144
  %2920 = or i64 %2919, 8
  %2921 = inttoptr i64 %2920 to i64*
  %2922 = load i64, i64* %2921, align 8
  %2923 = and i64 %2922, 262144
  %2924 = icmp eq i64 %2923, 0
  br i1 %2924, label %2929, label %2925

2925:                                             ; preds = %2918
  %2926 = or i64 %2919, 16
  %2927 = inttoptr i64 %2926 to %"class.v8::internal::Heap"**
  %2928 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2927, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %2928, i64 %2902, i64 %2913, i64 %2896) #14
  br label %2929

2929:                                             ; preds = %2925, %2918, %2912
  %2930 = and i64 %2896, -262144
  %2931 = or i64 %2930, 8
  %2932 = inttoptr i64 %2931 to i64*
  %2933 = load i64, i64* %2932, align 8
  %2934 = and i64 %2933, 24
  %2935 = icmp eq i64 %2934, 0
  br i1 %2935, label %2974, label %2936

2936:                                             ; preds = %2929
  %2937 = and i64 %2902, -262144
  %2938 = or i64 %2937, 8
  %2939 = inttoptr i64 %2938 to i64*
  %2940 = load i64, i64* %2939, align 8
  %2941 = and i64 %2940, 24
  %2942 = icmp eq i64 %2941, 0
  br i1 %2942, label %2943, label %2974

2943:                                             ; preds = %2936
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2902, i64 %2913, i64 %2896) #14
  br label %2974

2944:                                             ; preds = %2894
  %2945 = trunc i64 %2896 to i32
  store atomic volatile i32 %2945, i32* %2899 release, align 4
  %2946 = and i64 %2896, 1
  %2947 = icmp eq i64 %2946, 0
  br i1 %2947, label %2959, label %2948

2948:                                             ; preds = %2944
  %2949 = and i64 %2895, -262144
  %2950 = or i64 %2949, 8
  %2951 = inttoptr i64 %2950 to i64*
  %2952 = load i64, i64* %2951, align 8
  %2953 = and i64 %2952, 262144
  %2954 = icmp eq i64 %2953, 0
  br i1 %2954, label %2959, label %2955

2955:                                             ; preds = %2948
  %2956 = or i64 %2949, 16
  %2957 = inttoptr i64 %2956 to %"class.v8::internal::Heap"**
  %2958 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2957, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %2958, i64 %2895, i64 %2898, i64 %2896) #14
  br label %2959

2959:                                             ; preds = %2955, %2948, %2944
  %2960 = and i64 %2896, -262144
  %2961 = or i64 %2960, 8
  %2962 = inttoptr i64 %2961 to i64*
  %2963 = load i64, i64* %2962, align 8
  %2964 = and i64 %2963, 24
  %2965 = icmp eq i64 %2964, 0
  br i1 %2965, label %2974, label %2966

2966:                                             ; preds = %2959
  %2967 = and i64 %2895, -262144
  %2968 = or i64 %2967, 8
  %2969 = inttoptr i64 %2968 to i64*
  %2970 = load i64, i64* %2969, align 8
  %2971 = and i64 %2970, 24
  %2972 = icmp eq i64 %2971, 0
  br i1 %2972, label %2973, label %2974

2973:                                             ; preds = %2966
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %2895, i64 %2898, i64 %2896) #14
  br label %2974

2974:                                             ; preds = %2973, %2966, %2959, %2943, %2936, %2929
  %2975 = load i64, i64* %2470, align 8
  %2976 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %2413, i64 0, i32 2, i32 0, i32 1
  %2977 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2976, align 8
  %2978 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2977, i64 0, i32 6
  %2979 = load i32, i32* %2978, align 4
  %2980 = add i64 %2975, 31
  %2981 = inttoptr i64 %2980 to i32*
  store i32 %2979, i32* %2981, align 4
  %2982 = load i64, i64* %113, align 8
  %2983 = add i64 %2982, 23
  %2984 = inttoptr i64 %2983 to i32*
  %2985 = load i32, i32* %2984, align 4
  %2986 = and i32 %2985, -2
  %2987 = icmp eq i32 %2986, 6
  br i1 %2987, label %2988, label %2997

2988:                                             ; preds = %2974
  %2989 = and i64 %2982, -262144
  %2990 = or i64 %2989, 16
  %2991 = inttoptr i64 %2990 to i64*
  %2992 = load i64, i64* %2991, align 16
  %2993 = add i64 %2992, -41416
  %2994 = inttoptr i64 %2993 to %"class.v8::internal::Isolate"*
  %2995 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2994, i64 0, i32 0, i32 7, i32 0, i64 119
  %2996 = load i64, i64* %2995, align 8
  br label %3004

2997:                                             ; preds = %2974
  %2998 = add i64 %2982, 43
  %2999 = inttoptr i64 %2998 to i32*
  %3000 = load i32, i32* %2999, align 4
  %3001 = and i64 %2982, -4294967296
  %3002 = zext i32 %3000 to i64
  %3003 = or i64 %3001, %3002
  br label %3004

3004:                                             ; preds = %2988, %2997
  %3005 = phi i64 [ %2996, %2988 ], [ %3003, %2997 ]
  %3006 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2976, align 8
  %3007 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %3006, i64 0, i32 6
  %3008 = load i32, i32* %3007, align 4
  %3009 = load i64, i64* %2470, align 8
  %3010 = shl i32 %3008, 2
  %3011 = sext i32 %3010 to i64
  %3012 = add i64 %3005, 7
  %3013 = add i64 %3012, %3011
  %3014 = inttoptr i64 %3013 to i32*
  %3015 = trunc i64 %3009 to i32
  %3016 = or i32 %3015, 2
  store atomic volatile i32 %3016, i32* %3014 monotonic, align 4
  %3017 = and i64 %3009, 1
  %3018 = icmp ne i64 %3017, 0
  %3019 = icmp ne i32 %3016, 3
  %3020 = and i1 %3018, %3019
  br i1 %3020, label %3021, label %3049

3021:                                             ; preds = %3004
  %3022 = and i64 %3005, -262144
  %3023 = or i64 %3022, 8
  %3024 = inttoptr i64 %3023 to i64*
  %3025 = load i64, i64* %3024, align 8
  %3026 = and i64 %3025, 262144
  %3027 = icmp eq i64 %3026, 0
  br i1 %3027, label %3033, label %3028

3028:                                             ; preds = %3021
  %3029 = and i64 %3009, -3
  %3030 = or i64 %3022, 16
  %3031 = inttoptr i64 %3030 to %"class.v8::internal::Heap"**
  %3032 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3031, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3032, i64 %3005, i64 %3013, i64 %3029) #14
  br label %3033

3033:                                             ; preds = %3028, %3021
  %3034 = and i64 %3009, -3
  %3035 = and i64 %3009, -262144
  %3036 = or i64 %3035, 8
  %3037 = inttoptr i64 %3036 to i64*
  %3038 = load i64, i64* %3037, align 8
  %3039 = and i64 %3038, 24
  %3040 = icmp eq i64 %3039, 0
  br i1 %3040, label %3049, label %3041

3041:                                             ; preds = %3033
  %3042 = and i64 %3005, -262144
  %3043 = or i64 %3042, 8
  %3044 = inttoptr i64 %3043 to i64*
  %3045 = load i64, i64* %3044, align 8
  %3046 = and i64 %3045, 24
  %3047 = icmp eq i64 %3046, 0
  br i1 %3047, label %3048, label %3049

3048:                                             ; preds = %3041
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3005, i64 %3013, i64 %3034) #14
  br label %3049

3049:                                             ; preds = %3004, %3033, %3041, %3048
  %3050 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %2976, align 8
  %3051 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %3050, i64 0, i32 6
  %3052 = load i32, i32* %3051, align 4
  %3053 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %3050) #14
  %3054 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %2375, align 8
  %3055 = icmp eq %"class.std::__1::__tree_node.1666"* %3054, null
  br i1 %3055, label %3082, label %3056

3056:                                             ; preds = %3049, %3078
  %3057 = phi %"class.std::__1::__tree_node.1666"* [ %3081, %3078 ], [ %3054, %3049 ]
  %3058 = phi %"class.std::__1::__tree_node_base"** [ %3080, %3078 ], [ %2333, %3049 ]
  %3059 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3057, i64 0, i32 1, i32 0, i32 0
  %3060 = load i32, i32* %3059, align 4
  %3061 = icmp slt i32 %3053, %3060
  br i1 %3061, label %3062, label %3068

3062:                                             ; preds = %3056
  %3063 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3057, i64 0, i32 0, i32 0, i32 0
  %3064 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3063, align 8
  %3065 = icmp eq %"class.std::__1::__tree_node_base"* %3064, null
  br i1 %3065, label %3066, label %3078

3066:                                             ; preds = %3062
  %3067 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3057, i64 0, i32 0, i32 0
  br label %3082

3068:                                             ; preds = %3056
  %3069 = icmp slt i32 %3060, %3053
  br i1 %3069, label %3070, label %3076

3070:                                             ; preds = %3068
  %3071 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3057, i64 0, i32 0, i32 1
  %3072 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3071, align 8
  %3073 = icmp eq %"class.std::__1::__tree_node_base"* %3072, null
  br i1 %3073, label %3074, label %3078

3074:                                             ; preds = %3070
  %3075 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3057, i64 0, i32 0, i32 0
  br label %3082

3076:                                             ; preds = %3068
  %3077 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3057, i64 0, i32 0, i32 0
  br label %3082

3078:                                             ; preds = %3070, %3062
  %3079 = phi %"class.std::__1::__tree_node_base"* [ %3064, %3062 ], [ %3072, %3070 ]
  %3080 = phi %"class.std::__1::__tree_node_base"** [ %3063, %3062 ], [ %3071, %3070 ]
  %3081 = bitcast %"class.std::__1::__tree_node_base"* %3079 to %"class.std::__1::__tree_node.1666"*
  br label %3056

3082:                                             ; preds = %3049, %3076, %3074, %3066
  %3083 = phi %"class.std::__1::__tree_end_node"* [ %3067, %3066 ], [ %3075, %3074 ], [ %3077, %3076 ], [ %2334, %3049 ]
  %3084 = phi %"class.std::__1::__tree_node_base"** [ %3063, %3066 ], [ %3071, %3074 ], [ %3058, %3076 ], [ %2376, %3049 ]
  %3085 = bitcast %"class.std::__1::__tree_node_base"** %3084 to %"class.std::__1::__tree_node.1666"**
  %3086 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %3085, align 8
  %3087 = icmp eq %"class.std::__1::__tree_node.1666"* %3086, null
  br i1 %3087, label %3088, label %3111

3088:                                             ; preds = %3082
  %3089 = call i8* @_Znwm(i64 40) #16, !noalias !19
  %3090 = getelementptr inbounds i8, i8* %3089, i64 28
  %3091 = bitcast i8* %3090 to i32*
  store i32 %3053, i32* %3091, align 4, !noalias !19
  %3092 = getelementptr inbounds i8, i8* %3089, i64 32
  %3093 = bitcast i8* %3092 to i32*
  store i32 0, i32* %3093, align 4, !noalias !19
  %3094 = bitcast i8* %3089 to %"class.std::__1::__tree_node.1666"*
  %3095 = bitcast i8* %3089 to %"class.std::__1::__tree_node_base"*
  %3096 = getelementptr inbounds i8, i8* %3089, i64 16
  %3097 = bitcast i8* %3096 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3089, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %3083, %"class.std::__1::__tree_end_node"** %3097, align 8
  %3098 = bitcast %"class.std::__1::__tree_node_base"** %3084 to i8**
  store i8* %3089, i8** %3098, align 8
  %3099 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2335, align 8
  %3100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3099, i64 0, i32 0
  %3101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3100, align 8
  %3102 = icmp eq %"class.std::__1::__tree_node_base"* %3101, null
  br i1 %3102, label %3106, label %3103

3103:                                             ; preds = %3088
  %3104 = ptrtoint %"class.std::__1::__tree_node_base"* %3101 to i64
  store i64 %3104, i64* %2377, align 8
  %3105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3084, align 8
  br label %3106

3106:                                             ; preds = %3103, %3088
  %3107 = phi %"class.std::__1::__tree_node_base"* [ %3095, %3088 ], [ %3105, %3103 ]
  %3108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %2333, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %3108, %"class.std::__1::__tree_node_base"* %3107) #14
  %3109 = load i64, i64* %2378, align 8
  %3110 = add i64 %3109, 1
  store i64 %3110, i64* %2378, align 8
  br label %3111

3111:                                             ; preds = %3082, %3106
  %3112 = phi %"class.std::__1::__tree_node.1666"* [ %3094, %3106 ], [ %3086, %3082 ]
  %3113 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3112, i64 0, i32 1, i32 0, i32 1
  store i32 %3052, i32* %3113, align 4
  %3114 = load i64, i64* %2470, align 8
  %3115 = and i64 %3114, -4294967296
  %3116 = add i64 %3114, 3
  %3117 = inttoptr i64 %3116 to i32*
  %3118 = load atomic i32, i32* %3117 acquire, align 4
  %3119 = zext i32 %3118 to i64
  %3120 = and i64 %3119, 1
  %3121 = icmp eq i64 %3120, 0
  br i1 %3121, label %3183, label %3122

3122:                                             ; preds = %3111
  %3123 = or i64 %3115, %3119
  %3124 = add i64 %3123, -1
  %3125 = inttoptr i64 %3124 to i32*
  %3126 = load atomic i32, i32* %3125 monotonic, align 4
  %3127 = zext i32 %3126 to i64
  %3128 = or i64 %3115, %3127
  %3129 = add i64 %3128, 7
  %3130 = inttoptr i64 %3129 to i16*
  %3131 = load atomic i16, i16* %3130 monotonic, align 2
  %3132 = icmp eq i16 %3131, 157
  br i1 %3132, label %3133, label %3183

3133:                                             ; preds = %3122
  %3134 = load i64, i64* %2470, align 8
  %3135 = and i64 %3134, -4294967296
  %3136 = add i64 %3134, 3
  %3137 = inttoptr i64 %3136 to i32*
  %3138 = load atomic i32, i32* %3137 acquire, align 4
  %3139 = zext i32 %3138 to i64
  %3140 = or i64 %3135, %3139
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2379) #14
  %3141 = and i64 %3140, -262144
  %3142 = or i64 %3141, 16
  %3143 = inttoptr i64 %3142 to %"class.v8::internal::Heap"**
  %3144 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3143, align 16
  call void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"* %3144, i64 %3140, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %8, i32 0) #14
  %3145 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %3146 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %3145, null
  br i1 %3146, label %3153, label %3147

3147:                                             ; preds = %3133
  %3148 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %3145, i64 0, i32 0, i32 1
  %3149 = load i8, i8* %3148, align 8, !range !18
  %3150 = icmp eq i8 %3149, 0
  br i1 %3150, label %3153, label %3151

3151:                                             ; preds = %3147
  %3152 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %3145, i64 0, i32 1, i64 0
  br label %3161

3153:                                             ; preds = %3147, %3133
  %3154 = and i64 %3134, -262144
  %3155 = or i64 %3154, 16
  %3156 = inttoptr i64 %3155 to i64*
  %3157 = load i64, i64* %3156, align 16
  %3158 = add i64 %3157, -41416
  %3159 = inttoptr i64 %3158 to %"class.v8::internal::Isolate"*
  %3160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3159, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %3161

3161:                                             ; preds = %3153, %3151
  %3162 = phi i64* [ %3160, %3153 ], [ %3152, %3151 ]
  %3163 = getelementptr inbounds i64, i64* %3162, i64 564
  %3164 = load i64, i64* %3163, align 8
  %3165 = add i64 %3140, -1
  %3166 = inttoptr i64 %3165 to i32*
  %3167 = trunc i64 %3164 to i32
  store atomic volatile i32 %3167, i32* %3166 release, align 4
  %3168 = icmp eq i32 %3167, 0
  %3169 = and i64 %3164, 1
  %3170 = icmp eq i64 %3169, 0
  %3171 = or i1 %3168, %3170
  br i1 %3171, label %3180, label %3172

3172:                                             ; preds = %3161
  %3173 = or i64 %3141, 8
  %3174 = inttoptr i64 %3173 to i64*
  %3175 = load i64, i64* %3174, align 8
  %3176 = and i64 %3175, 262144
  %3177 = icmp eq i64 %3176, 0
  br i1 %3177, label %3180, label %3178

3178:                                             ; preds = %3172
  %3179 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3143, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3179, i64 %3140, i64 0, i64 %3164) #14
  br label %3180

3180:                                             ; preds = %3161, %3172, %3178
  %3181 = add i64 %3140, 15
  %3182 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %3144, i64 %3181, i32 4, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2379) #14
  br label %3183

3183:                                             ; preds = %3111, %3180, %3122
  %3184 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2450, i64 7
  %3185 = bitcast %"class.std::__1::__tree_end_node"* %3184 to %"class.v8::internal::Handle.1342"**
  %3186 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %3185, align 8
  %3187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %2450, i64 8
  %3188 = bitcast %"class.std::__1::__tree_end_node"* %3187 to %"class.v8::internal::Handle.1342"**
  %3189 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %3188, align 8
  %3190 = icmp eq %"class.v8::internal::Handle.1342"* %3186, %3189
  br i1 %3190, label %3191, label %3227

3191:                                             ; preds = %3315, %3183
  %3192 = load i64, i64* %2470, align 8
  %3193 = and i64 %3192, -4294967296
  %3194 = add i64 %3192, 3
  %3195 = inttoptr i64 %3194 to i32*
  %3196 = load atomic i32, i32* %3195 acquire, align 4
  %3197 = zext i32 %3196 to i64
  %3198 = and i64 %3197, 1
  %3199 = icmp eq i64 %3198, 0
  br i1 %3199, label %3463, label %3200

3200:                                             ; preds = %3191
  %3201 = or i64 %3193, %3197
  %3202 = add i64 %3201, -1
  %3203 = inttoptr i64 %3202 to i32*
  %3204 = load atomic i32, i32* %3203 monotonic, align 4
  %3205 = zext i32 %3204 to i64
  %3206 = or i64 %3193, %3205
  %3207 = add i64 %3206, 7
  %3208 = inttoptr i64 %3207 to i16*
  %3209 = load atomic i16, i16* %3208 monotonic, align 2
  %3210 = icmp eq i16 %3209, 133
  br i1 %3210, label %3318, label %3211

3211:                                             ; preds = %3200
  %3212 = load atomic i32, i32* %3203 monotonic, align 4
  %3213 = zext i32 %3212 to i64
  %3214 = or i64 %3193, %3213
  %3215 = add i64 %3214, 7
  %3216 = inttoptr i64 %3215 to i16*
  %3217 = load atomic i16, i16* %3216 monotonic, align 2
  %3218 = icmp eq i16 %3217, 105
  br i1 %3218, label %3318, label %3219

3219:                                             ; preds = %3211
  %3220 = load atomic i32, i32* %3203 monotonic, align 4
  %3221 = zext i32 %3220 to i64
  %3222 = or i64 %3193, %3221
  %3223 = add i64 %3222, 7
  %3224 = inttoptr i64 %3223 to i16*
  %3225 = load atomic i16, i16* %3224 monotonic, align 2
  %3226 = icmp eq i16 %3225, 94
  br i1 %3226, label %3318, label %3463

3227:                                             ; preds = %3183, %3315
  %3228 = phi %"class.v8::internal::Handle.1342"* [ %3316, %3315 ], [ %3186, %3183 ]
  %3229 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %3228, i64 0, i32 0, i32 0
  %3230 = load i64*, i64** %3229, align 8
  %3231 = load i64, i64* %3230, align 8
  %3232 = load i64, i64* %2380, align 8
  %3233 = add i64 %3231, 19
  %3234 = inttoptr i64 %3233 to i32*
  %3235 = trunc i64 %3232 to i32
  store atomic volatile i32 %3235, i32* %3234 monotonic, align 4
  %3236 = and i64 %3232, 1
  %3237 = icmp eq i64 %3236, 0
  br i1 %3237, label %3249, label %3238

3238:                                             ; preds = %3227
  %3239 = and i64 %3231, -262144
  %3240 = or i64 %3239, 8
  %3241 = inttoptr i64 %3240 to i64*
  %3242 = load i64, i64* %3241, align 8
  %3243 = and i64 %3242, 262144
  %3244 = icmp eq i64 %3243, 0
  br i1 %3244, label %3249, label %3245

3245:                                             ; preds = %3238
  %3246 = or i64 %3239, 16
  %3247 = inttoptr i64 %3246 to %"class.v8::internal::Heap"**
  %3248 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3247, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3248, i64 %3231, i64 %3233, i64 %3232) #14
  br label %3249

3249:                                             ; preds = %3245, %3238, %3227
  %3250 = and i64 %3232, -262144
  %3251 = or i64 %3250, 8
  %3252 = inttoptr i64 %3251 to i64*
  %3253 = load i64, i64* %3252, align 8
  %3254 = and i64 %3253, 24
  %3255 = icmp eq i64 %3254, 0
  br i1 %3255, label %3264, label %3256

3256:                                             ; preds = %3249
  %3257 = and i64 %3231, -262144
  %3258 = or i64 %3257, 8
  %3259 = inttoptr i64 %3258 to i64*
  %3260 = load i64, i64* %3259, align 8
  %3261 = and i64 %3260, 24
  %3262 = icmp eq i64 %3261, 0
  br i1 %3262, label %3263, label %3264

3263:                                             ; preds = %3256
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3231, i64 %3233, i64 %3232) #14
  br label %3264

3264:                                             ; preds = %3249, %3256, %3263
  %3265 = load i64*, i64** %3229, align 8
  %3266 = load i64, i64* %3265, align 8
  %3267 = and i64 %3266, -4294967296
  %3268 = add i64 %3266, 23
  %3269 = inttoptr i64 %3268 to i32*
  %3270 = load atomic i32, i32* %3269 acquire, align 4
  %3271 = zext i32 %3270 to i64
  %3272 = or i64 %3267, %3271
  %3273 = add i64 %3272, 31
  %3274 = inttoptr i64 %3273 to i32*
  %3275 = load atomic i32, i32* %3274 monotonic, align 4
  %3276 = icmp eq i32 %3275, 85
  br i1 %3276, label %3315, label %3277

3277:                                             ; preds = %3264
  %3278 = add i64 %3266, 11
  %3279 = inttoptr i64 %3278 to i32*
  %3280 = load atomic i32, i32* %3279 monotonic, align 4
  %3281 = zext i32 %3280 to i64
  %3282 = or i64 %3267, %3281
  %3283 = add i64 %3282, 3
  %3284 = inttoptr i64 %3283 to i32*
  %3285 = load atomic i32, i32* %3284 acquire, align 4
  %3286 = zext i32 %3285 to i64
  %3287 = or i64 %3267, %3286
  %3288 = icmp eq i32 %3285, 170
  br i1 %3288, label %3315, label %3289

3289:                                             ; preds = %3277
  %3290 = and i64 %3286, 1
  %3291 = icmp eq i64 %3290, 0
  br i1 %3291, label %3303, label %3292

3292:                                             ; preds = %3289
  %3293 = add i64 %3287, -1
  %3294 = inttoptr i64 %3293 to i32*
  %3295 = load atomic i32, i32* %3294 monotonic, align 4
  %3296 = zext i32 %3295 to i64
  %3297 = or i64 %3267, %3296
  %3298 = add i64 %3297, 7
  %3299 = inttoptr i64 %3298 to i16*
  %3300 = load atomic i16, i16* %3299 monotonic, align 2
  %3301 = add i16 %3300, -157
  %3302 = icmp ugt i16 %3301, 1
  br i1 %3302, label %3303, label %3315

3303:                                             ; preds = %3289, %3292
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2381) #14
  %3304 = load i64*, i64** %3229, align 8
  %3305 = load i64, i64* %3304, align 8
  %3306 = add i64 %3305, 11
  %3307 = inttoptr i64 %3306 to i32*
  %3308 = load atomic i32, i32* %3307 monotonic, align 4
  %3309 = and i64 %3305, -4294967296
  %3310 = zext i32 %3308 to i64
  %3311 = or i64 %3309, %3310
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2382)
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %2383, i64 %3311, %"class.v8::internal::Isolate"* %0) #14
  %3312 = load i64, i64* %2384, align 8
  %3313 = load i8, i8* %2385, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2382)
  store i64 %3312, i64* %2386, align 8
  store i8 %3313, i8* %2387, align 8
  %3314 = load i64*, i64** %3229, align 8
  call void @_ZN2v88internal10JSFunction20EnsureFeedbackVectorENS0_6HandleIS1_EEPNS0_15IsCompiledScopeE(i64* %3314, %"class.v8::internal::IsCompiledScope"* nonnull %57) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2381) #14
  br label %3315

3315:                                             ; preds = %3277, %3264, %3292, %3303
  %3316 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %3228, i64 1
  %3317 = icmp eq %"class.v8::internal::Handle.1342"* %3316, %3189
  br i1 %3317, label %3191, label %3227

3318:                                             ; preds = %3200, %3211, %3219
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2388) #14
  %3319 = load i64, i64* %2470, align 8
  store i64 %3319, i64* %2389, align 8
  %3320 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %2390, %"class.v8::internal::Isolate"* %0)
  %3321 = and i64 %3320, -4294967296
  %3322 = add i64 %3320, 7
  %3323 = inttoptr i64 %3322 to i32*
  %3324 = load i32, i32* %3323, align 4
  %3325 = zext i32 %3324 to i64
  %3326 = or i64 %3321, %3325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2388) #14
  %3327 = add i64 %3326, 3
  %3328 = inttoptr i64 %3327 to i32*
  %3329 = load i32, i32* %3328, align 4
  %3330 = icmp sgt i32 %3329, 1
  br i1 %3330, label %3331, label %3463

3331:                                             ; preds = %3318
  %3332 = add i64 %3326, 7
  %3333 = and i64 %3326, -262144
  %3334 = or i64 %3333, 8
  %3335 = inttoptr i64 %3334 to i64*
  %3336 = or i64 %3333, 16
  %3337 = inttoptr i64 %3336 to %"class.v8::internal::Heap"**
  br label %3338

3338:                                             ; preds = %3331, %3457
  %3339 = phi i32 [ %3329, %3331 ], [ %3458, %3457 ]
  %3340 = phi i64 [ 0, %3331 ], [ %3459, %3457 ]
  %3341 = trunc i64 %3340 to i32
  %3342 = shl i32 %3341, 2
  %3343 = sext i32 %3342 to i64
  %3344 = add i64 %3332, %3343
  %3345 = inttoptr i64 %3344 to i32*
  %3346 = load atomic i32, i32* %3345 monotonic, align 4
  %3347 = zext i32 %3346 to i64
  %3348 = and i64 %3347, 1
  %3349 = icmp eq i64 %3348, 0
  br i1 %3349, label %3457, label %3350

3350:                                             ; preds = %3338
  %3351 = or i64 %3321, %3347
  %3352 = add i64 %3351, -1
  %3353 = inttoptr i64 %3352 to i32*
  %3354 = load atomic i32, i32* %3353 monotonic, align 4
  %3355 = zext i32 %3354 to i64
  %3356 = or i64 %3321, %3355
  %3357 = add i64 %3356, 7
  %3358 = inttoptr i64 %3357 to i16*
  %3359 = load atomic i16, i16* %3358 monotonic, align 2
  %3360 = icmp eq i16 %3359, 179
  br i1 %3360, label %3361, label %3457

3361:                                             ; preds = %3350
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2391) #14
  store %"struct.v8::internal::(anonymous namespace)::FunctionData"* null, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %59, align 8
  %3362 = load atomic i32, i32* %3345 monotonic, align 4
  %3363 = zext i32 %3362 to i64
  %3364 = or i64 %3321, %3363
  %3365 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap6LookupENS0_18SharedFunctionInfoEPPNS1_12FunctionDataE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* nonnull %54, i64 %3364, %"struct.v8::internal::(anonymous namespace)::FunctionData"** nonnull %59)
  br i1 %3365, label %3366, label %3455

3366:                                             ; preds = %3361
  %3367 = load %"struct.v8::internal::(anonymous namespace)::FunctionData"*, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %59, align 8
  %3368 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %3367, i64 0, i32 0
  %3369 = call %"struct.std::__1::__hash_node_base.1302"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.1298"* nonnull %2392, %"class.v8::internal::FunctionLiteral"** dereferenceable(8) %3368) #14
  %3370 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %3369, null
  br i1 %3370, label %3455, label %3371

3371:                                             ; preds = %3366
  %3372 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %3369, i64 3
  %3373 = bitcast %"struct.std::__1::__hash_node_base.1302"* %3372 to %"class.v8::internal::FunctionLiteral"**
  %3374 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %3373, align 8
  %3375 = load i64, i64* %113, align 8
  %3376 = add i64 %3375, 31
  %3377 = inttoptr i64 %3376 to i32*
  %3378 = load i32, i32* %3377, align 4
  %3379 = ashr i32 %3378, 1
  %3380 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %3374) #14
  %3381 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %3374, i64 0, i32 6
  %3382 = load i32, i32* %3381, align 4
  %3383 = icmp eq i32 %3382, 0
  %3384 = select i1 %3383, i32 -1, i32 %3380
  %3385 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2340, align 8
  %3386 = icmp eq %"class.std::__1::__tree_node.1576"* %3385, null
  br i1 %3386, label %3455, label %3387

3387:                                             ; preds = %3371, %3407
  %3388 = phi %"class.std::__1::__tree_end_node"* [ %3409, %3407 ], [ %1971, %3371 ]
  %3389 = phi %"class.std::__1::__tree_node.1576"* [ %3410, %3407 ], [ %3385, %3371 ]
  %3390 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3389, i64 0, i32 2, i32 0, i32 0, i32 0
  %3391 = load i32, i32* %3390, align 4
  %3392 = icmp slt i32 %3391, %3379
  br i1 %3392, label %3393, label %3396

3393:                                             ; preds = %3387
  %3394 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3389, i64 0, i32 0, i32 1
  %3395 = bitcast %"class.std::__1::__tree_node_base"** %3394 to %"class.std::__1::__tree_node.1576"**
  br label %3407

3396:                                             ; preds = %3387
  %3397 = icmp sgt i32 %3391, %3379
  br i1 %3397, label %3404, label %3398

3398:                                             ; preds = %3396
  %3399 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3389, i64 0, i32 2, i32 0, i32 0, i32 1
  %3400 = load i32, i32* %3399, align 4
  %3401 = icmp slt i32 %3400, %3384
  %3402 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3389, i64 0, i32 0, i32 1
  %3403 = bitcast %"class.std::__1::__tree_node_base"** %3402 to %"class.std::__1::__tree_node.1576"**
  br i1 %3401, label %3407, label %3404

3404:                                             ; preds = %3398, %3396
  %3405 = bitcast %"class.std::__1::__tree_node.1576"* %3389 to %"class.std::__1::__tree_node.1576"**
  %3406 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3389, i64 0, i32 0, i32 0
  br label %3407

3407:                                             ; preds = %3404, %3398, %3393
  %3408 = phi %"class.std::__1::__tree_node.1576"** [ %3405, %3404 ], [ %3395, %3393 ], [ %3403, %3398 ]
  %3409 = phi %"class.std::__1::__tree_end_node"* [ %3406, %3404 ], [ %3388, %3393 ], [ %3388, %3398 ]
  %3410 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %3408, align 8
  %3411 = icmp eq %"class.std::__1::__tree_node.1576"* %3410, null
  br i1 %3411, label %3412, label %3387

3412:                                             ; preds = %3407
  %3413 = icmp eq %"class.std::__1::__tree_end_node"* %3409, %1971
  br i1 %3413, label %3455, label %3414

3414:                                             ; preds = %3412
  %3415 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3409, i64 4
  %3416 = bitcast %"class.std::__1::__tree_end_node"* %3415 to %"struct.std::__1::__value_type.1577"*
  %3417 = bitcast %"class.std::__1::__tree_end_node"* %3415 to i32*
  %3418 = load i32, i32* %3417, align 4
  %3419 = icmp sgt i32 %3418, %3379
  br i1 %3419, label %3455, label %3420

3420:                                             ; preds = %3414
  %3421 = icmp slt i32 %3418, %3379
  br i1 %3421, label %3426, label %3422

3422:                                             ; preds = %3420
  %3423 = getelementptr inbounds %"struct.std::__1::__value_type.1577", %"struct.std::__1::__value_type.1577"* %3416, i64 0, i32 0, i32 0, i32 1
  %3424 = load i32, i32* %3423, align 4
  %3425 = icmp sgt i32 %3424, %3384
  br i1 %3425, label %3455, label %3426

3426:                                             ; preds = %3422, %3420
  %3427 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3409, i64 5
  store %"class.std::__1::__tree_end_node"* %3427, %"class.std::__1::__tree_end_node"** %2393, align 8
  %3428 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3409, i64 6
  %3429 = bitcast %"class.std::__1::__tree_end_node"* %3428 to i64**
  %3430 = load i64*, i64** %3429, align 8
  %3431 = icmp eq i64* %3430, null
  br i1 %3431, label %3455, label %3432

3432:                                             ; preds = %3426
  %3433 = load i64, i64* %3430, align 8
  %3434 = trunc i64 %3433 to i32
  store atomic volatile i32 %3434, i32* %3345 monotonic, align 4
  %3435 = and i64 %3433, 1
  %3436 = icmp eq i64 %3435, 0
  br i1 %3436, label %3455, label %3437

3437:                                             ; preds = %3432
  %3438 = load i64, i64* %3335, align 8
  %3439 = and i64 %3438, 262144
  %3440 = icmp eq i64 %3439, 0
  br i1 %3440, label %3443, label %3441

3441:                                             ; preds = %3437
  %3442 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3337, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3442, i64 %3326, i64 %3344, i64 %3433) #14
  br label %3443

3443:                                             ; preds = %3441, %3437
  %3444 = and i64 %3433, -262144
  %3445 = or i64 %3444, 8
  %3446 = inttoptr i64 %3445 to i64*
  %3447 = load i64, i64* %3446, align 8
  %3448 = and i64 %3447, 24
  %3449 = icmp eq i64 %3448, 0
  br i1 %3449, label %3455, label %3450

3450:                                             ; preds = %3443
  %3451 = load i64, i64* %3335, align 8
  %3452 = and i64 %3451, 24
  %3453 = icmp eq i64 %3452, 0
  br i1 %3453, label %3454, label %3455

3454:                                             ; preds = %3450
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3326, i64 %3344, i64 %3433) #14
  br label %3455

3455:                                             ; preds = %3422, %3414, %3412, %3371, %3366, %3454, %3450, %3443, %3432, %3426, %3361
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2391) #14
  %3456 = load i32, i32* %3328, align 4
  br label %3457

3457:                                             ; preds = %3338, %3350, %3455
  %3458 = phi i32 [ %3339, %3338 ], [ %3339, %3350 ], [ %3456, %3455 ]
  %3459 = add nuw nsw i64 %3340, 1
  %3460 = ashr i32 %3458, 1
  %3461 = sext i32 %3460 to i64
  %3462 = icmp slt i64 %3459, %3461
  br i1 %3462, label %3338, label %3463

3463:                                             ; preds = %3457, %3318, %3191, %2463, %2455, %2453, %2411, %3219, %2467
  %3464 = inttoptr i64 %2412 to i64*
  %3465 = load i64, i64* %3464, align 8
  %3466 = icmp eq i64 %3465, 0
  br i1 %3466, label %2394, label %2411

3467:                                             ; preds = %3779, %2394
  %3468 = bitcast %"class.v8::internal::SharedFunctionInfo::ScriptIterator"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3468) #14
  %3469 = load i64, i64* %113, align 8
  call void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %63, %"class.v8::internal::Isolate"* %0, i64 %3469) #14
  %3470 = bitcast %"class.v8::internal::SharedFunctionInfo"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3470) #14
  %3471 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %63) #14
  %3472 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3471, i64* %3472, align 8
  %3473 = trunc i64 %3471 to i32
  %3474 = icmp eq i32 %3473, 0
  br i1 %3474, label %3475, label %3477

3475:                                             ; preds = %3467
  %3476 = bitcast %"class.std::__1::__tree_end_node"* %2334 to %"class.std::__1::__tree_node.1666"**
  br label %3783

3477:                                             ; preds = %3467
  %3478 = bitcast %"class.v8::internal::SharedFunctionInfo"* %65 to i8*
  %3479 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3480 = bitcast %"class.std::__1::__tree_end_node"* %2334 to %"class.std::__1::__tree_node.1666"**
  br label %3803

3481:                                             ; preds = %2397, %3779
  %3482 = phi i64 [ %2395, %2397 ], [ %3781, %3779 ]
  %3483 = inttoptr i64 %3482 to %"struct.std::__1::__hash_node.1555"*
  %3484 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %3483, i64 0, i32 2, i32 0, i32 1
  %3485 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %3484, align 8
  %3486 = load i64, i64* %113, align 8
  %3487 = add i64 %3486, 31
  %3488 = inttoptr i64 %3487 to i32*
  %3489 = load i32, i32* %3488, align 4
  %3490 = ashr i32 %3489, 1
  %3491 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %3485) #14
  %3492 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %3485, i64 0, i32 6
  %3493 = load i32, i32* %3492, align 4
  %3494 = icmp eq i32 %3493, 0
  %3495 = select i1 %3494, i32 -1, i32 %3491
  %3496 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2398, align 8
  %3497 = icmp eq %"class.std::__1::__tree_node.1576"* %3496, null
  br i1 %3497, label %3779, label %3498

3498:                                             ; preds = %3481, %3518
  %3499 = phi %"class.std::__1::__tree_end_node"* [ %3520, %3518 ], [ %1971, %3481 ]
  %3500 = phi %"class.std::__1::__tree_node.1576"* [ %3521, %3518 ], [ %3496, %3481 ]
  %3501 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3500, i64 0, i32 2, i32 0, i32 0, i32 0
  %3502 = load i32, i32* %3501, align 4
  %3503 = icmp slt i32 %3502, %3490
  br i1 %3503, label %3504, label %3507

3504:                                             ; preds = %3498
  %3505 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3500, i64 0, i32 0, i32 1
  %3506 = bitcast %"class.std::__1::__tree_node_base"** %3505 to %"class.std::__1::__tree_node.1576"**
  br label %3518

3507:                                             ; preds = %3498
  %3508 = icmp sgt i32 %3502, %3490
  br i1 %3508, label %3515, label %3509

3509:                                             ; preds = %3507
  %3510 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3500, i64 0, i32 2, i32 0, i32 0, i32 1
  %3511 = load i32, i32* %3510, align 4
  %3512 = icmp slt i32 %3511, %3495
  %3513 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3500, i64 0, i32 0, i32 1
  %3514 = bitcast %"class.std::__1::__tree_node_base"** %3513 to %"class.std::__1::__tree_node.1576"**
  br i1 %3512, label %3518, label %3515

3515:                                             ; preds = %3509, %3507
  %3516 = bitcast %"class.std::__1::__tree_node.1576"* %3500 to %"class.std::__1::__tree_node.1576"**
  %3517 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3500, i64 0, i32 0, i32 0
  br label %3518

3518:                                             ; preds = %3515, %3509, %3504
  %3519 = phi %"class.std::__1::__tree_node.1576"** [ %3516, %3515 ], [ %3506, %3504 ], [ %3514, %3509 ]
  %3520 = phi %"class.std::__1::__tree_end_node"* [ %3517, %3515 ], [ %3499, %3504 ], [ %3499, %3509 ]
  %3521 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %3519, align 8
  %3522 = icmp eq %"class.std::__1::__tree_node.1576"* %3521, null
  br i1 %3522, label %3523, label %3498

3523:                                             ; preds = %3518
  %3524 = icmp eq %"class.std::__1::__tree_end_node"* %3520, %1971
  br i1 %3524, label %3779, label %3525

3525:                                             ; preds = %3523
  %3526 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3520, i64 4
  %3527 = bitcast %"class.std::__1::__tree_end_node"* %3526 to %"struct.std::__1::__value_type.1577"*
  %3528 = bitcast %"class.std::__1::__tree_end_node"* %3526 to i32*
  %3529 = load i32, i32* %3528, align 4
  %3530 = icmp sgt i32 %3529, %3490
  br i1 %3530, label %3779, label %3531

3531:                                             ; preds = %3525
  %3532 = icmp slt i32 %3529, %3490
  br i1 %3532, label %3537, label %3533

3533:                                             ; preds = %3531
  %3534 = getelementptr inbounds %"struct.std::__1::__value_type.1577", %"struct.std::__1::__value_type.1577"* %3527, i64 0, i32 0, i32 0, i32 1
  %3535 = load i32, i32* %3534, align 4
  %3536 = icmp sgt i32 %3535, %3495
  br i1 %3536, label %3779, label %3537

3537:                                             ; preds = %3533, %3531
  %3538 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3520, i64 6
  %3539 = bitcast %"class.std::__1::__tree_end_node"* %3538 to i64**
  %3540 = load i64*, i64** %3539, align 8
  %3541 = icmp eq i64* %3540, null
  br i1 %3541, label %3542, label %3543, !prof !22

3542:                                             ; preds = %3537
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

3543:                                             ; preds = %3537
  %3544 = getelementptr inbounds %"struct.std::__1::__hash_node.1555", %"struct.std::__1::__hash_node.1555"* %3483, i64 0, i32 2, i32 0, i32 0
  %3545 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %3544, align 8
  %3546 = load i64, i64* %1, align 8
  %3547 = add i64 %3546, 31
  %3548 = inttoptr i64 %3547 to i32*
  %3549 = load i32, i32* %3548, align 4
  %3550 = ashr i32 %3549, 1
  %3551 = call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %3545) #14
  %3552 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %3545, i64 0, i32 6
  %3553 = load i32, i32* %3552, align 4
  %3554 = icmp eq i32 %3553, 0
  %3555 = select i1 %3554, i32 -1, i32 %3551
  %3556 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %2398, align 8
  %3557 = icmp eq %"class.std::__1::__tree_node.1576"* %3556, null
  br i1 %3557, label %3779, label %3558

3558:                                             ; preds = %3543, %3578
  %3559 = phi %"class.std::__1::__tree_end_node"* [ %3580, %3578 ], [ %1971, %3543 ]
  %3560 = phi %"class.std::__1::__tree_node.1576"* [ %3581, %3578 ], [ %3556, %3543 ]
  %3561 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3560, i64 0, i32 2, i32 0, i32 0, i32 0
  %3562 = load i32, i32* %3561, align 4
  %3563 = icmp slt i32 %3562, %3550
  br i1 %3563, label %3564, label %3567

3564:                                             ; preds = %3558
  %3565 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3560, i64 0, i32 0, i32 1
  %3566 = bitcast %"class.std::__1::__tree_node_base"** %3565 to %"class.std::__1::__tree_node.1576"**
  br label %3578

3567:                                             ; preds = %3558
  %3568 = icmp sgt i32 %3562, %3550
  br i1 %3568, label %3575, label %3569

3569:                                             ; preds = %3567
  %3570 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3560, i64 0, i32 2, i32 0, i32 0, i32 1
  %3571 = load i32, i32* %3570, align 4
  %3572 = icmp slt i32 %3571, %3555
  %3573 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3560, i64 0, i32 0, i32 1
  %3574 = bitcast %"class.std::__1::__tree_node_base"** %3573 to %"class.std::__1::__tree_node.1576"**
  br i1 %3572, label %3578, label %3575

3575:                                             ; preds = %3569, %3567
  %3576 = bitcast %"class.std::__1::__tree_node.1576"* %3560 to %"class.std::__1::__tree_node.1576"**
  %3577 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %3560, i64 0, i32 0, i32 0
  br label %3578

3578:                                             ; preds = %3575, %3569, %3564
  %3579 = phi %"class.std::__1::__tree_node.1576"** [ %3576, %3575 ], [ %3566, %3564 ], [ %3574, %3569 ]
  %3580 = phi %"class.std::__1::__tree_end_node"* [ %3577, %3575 ], [ %3559, %3564 ], [ %3559, %3569 ]
  %3581 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %3579, align 8
  %3582 = icmp eq %"class.std::__1::__tree_node.1576"* %3581, null
  br i1 %3582, label %3583, label %3558

3583:                                             ; preds = %3578
  %3584 = icmp eq %"class.std::__1::__tree_end_node"* %3580, %1971
  br i1 %3584, label %3779, label %3585

3585:                                             ; preds = %3583
  %3586 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3580, i64 4
  %3587 = bitcast %"class.std::__1::__tree_end_node"* %3586 to %"struct.std::__1::__value_type.1577"*
  %3588 = bitcast %"class.std::__1::__tree_end_node"* %3586 to i32*
  %3589 = load i32, i32* %3588, align 4
  %3590 = icmp sgt i32 %3589, %3550
  br i1 %3590, label %3779, label %3591

3591:                                             ; preds = %3585
  %3592 = icmp slt i32 %3589, %3550
  br i1 %3592, label %3597, label %3593

3593:                                             ; preds = %3591
  %3594 = getelementptr inbounds %"struct.std::__1::__value_type.1577", %"struct.std::__1::__value_type.1577"* %3587, i64 0, i32 0, i32 0, i32 1
  %3595 = load i32, i32* %3594, align 4
  %3596 = icmp sgt i32 %3595, %3555
  br i1 %3596, label %3779, label %3597

3597:                                             ; preds = %3593, %3591
  %3598 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3580, i64 6
  %3599 = bitcast %"class.std::__1::__tree_end_node"* %3598 to i64**
  %3600 = load i64*, i64** %3599, align 8
  %3601 = icmp eq i64* %3600, null
  br i1 %3601, label %3779, label %3602

3602:                                             ; preds = %3597
  %3603 = load %"class.v8::internal::Debug"*, %"class.v8::internal::Debug"** %2399, align 8
  call void @_ZN2v88internal5Debug18DeoptimizeFunctionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"* %3603, i64* nonnull %3600) #14
  %3604 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %2400, align 8
  call void @_ZN2v88internal16CompilationCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCache"* %3604, i64* nonnull %3600) #14
  %3605 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3580, i64 7
  %3606 = bitcast %"class.std::__1::__tree_end_node"* %3605 to %"class.v8::internal::Handle.1342"**
  %3607 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %3606, align 8
  %3608 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3580, i64 8
  %3609 = bitcast %"class.std::__1::__tree_end_node"* %3608 to %"class.v8::internal::Handle.1342"**
  %3610 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %3609, align 8
  %3611 = icmp eq %"class.v8::internal::Handle.1342"* %3607, %3610
  br i1 %3611, label %3779, label %3612

3612:                                             ; preds = %3602, %3776
  %3613 = phi %"class.v8::internal::Handle.1342"* [ %3777, %3776 ], [ %3607, %3602 ]
  %3614 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %3613, i64 0, i32 0, i32 0
  %3615 = load i64*, i64** %3614, align 8
  %3616 = load i64, i64* %3615, align 8
  %3617 = load i64, i64* %3540, align 8
  %3618 = add i64 %3616, 11
  %3619 = inttoptr i64 %3618 to i32*
  %3620 = trunc i64 %3617 to i32
  store atomic volatile i32 %3620, i32* %3619 release, align 4
  %3621 = and i64 %3617, 1
  %3622 = icmp eq i64 %3621, 0
  br i1 %3622, label %3634, label %3623

3623:                                             ; preds = %3612
  %3624 = and i64 %3616, -262144
  %3625 = or i64 %3624, 8
  %3626 = inttoptr i64 %3625 to i64*
  %3627 = load i64, i64* %3626, align 8
  %3628 = and i64 %3627, 262144
  %3629 = icmp eq i64 %3628, 0
  br i1 %3629, label %3634, label %3630

3630:                                             ; preds = %3623
  %3631 = or i64 %3624, 16
  %3632 = inttoptr i64 %3631 to %"class.v8::internal::Heap"**
  %3633 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3632, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3633, i64 %3616, i64 %3618, i64 %3617) #14
  br label %3634

3634:                                             ; preds = %3630, %3623, %3612
  %3635 = and i64 %3617, -262144
  %3636 = or i64 %3635, 8
  %3637 = inttoptr i64 %3636 to i64*
  %3638 = load i64, i64* %3637, align 8
  %3639 = and i64 %3638, 24
  %3640 = icmp eq i64 %3639, 0
  br i1 %3640, label %3649, label %3641

3641:                                             ; preds = %3634
  %3642 = and i64 %3616, -262144
  %3643 = or i64 %3642, 8
  %3644 = inttoptr i64 %3643 to i64*
  %3645 = load i64, i64* %3644, align 8
  %3646 = and i64 %3645, 24
  %3647 = icmp eq i64 %3646, 0
  br i1 %3647, label %3648, label %3649

3648:                                             ; preds = %3641
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3616, i64 %3618, i64 %3617) #14
  br label %3649

3649:                                             ; preds = %3634, %3641, %3648
  %3650 = load i64*, i64** %3614, align 8
  %3651 = load i64, i64* %3650, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2401) #14
  %3652 = add i64 %3651, 11
  %3653 = inttoptr i64 %3652 to i32*
  %3654 = load atomic i32, i32* %3653 monotonic, align 4
  %3655 = and i64 %3651, -4294967296
  %3656 = zext i32 %3654 to i64
  %3657 = or i64 %3655, %3656
  store i64 %3657, i64* %2402, align 8
  %3658 = call i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %60) #14
  %3659 = add i64 %3651, 23
  %3660 = inttoptr i64 %3659 to i32*
  %3661 = trunc i64 %3658 to i32
  store atomic volatile i32 %3661, i32* %3660 release, align 4
  %3662 = and i64 %3658, 1
  %3663 = icmp eq i64 %3662, 0
  br i1 %3663, label %3675, label %3664

3664:                                             ; preds = %3649
  %3665 = and i64 %3651, -262144
  %3666 = or i64 %3665, 8
  %3667 = inttoptr i64 %3666 to i64*
  %3668 = load i64, i64* %3667, align 8
  %3669 = and i64 %3668, 262144
  %3670 = icmp eq i64 %3669, 0
  br i1 %3670, label %3675, label %3671

3671:                                             ; preds = %3664
  %3672 = or i64 %3665, 16
  %3673 = inttoptr i64 %3672 to %"class.v8::internal::Heap"**
  %3674 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3673, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3674, i64 %3651, i64 %3659, i64 %3658) #14
  br label %3675

3675:                                             ; preds = %3671, %3664, %3649
  %3676 = and i64 %3658, -262144
  %3677 = or i64 %3676, 8
  %3678 = inttoptr i64 %3677 to i64*
  %3679 = load i64, i64* %3678, align 8
  %3680 = and i64 %3679, 24
  %3681 = icmp eq i64 %3680, 0
  br i1 %3681, label %3690, label %3682

3682:                                             ; preds = %3675
  %3683 = and i64 %3651, -262144
  %3684 = or i64 %3683, 8
  %3685 = inttoptr i64 %3684 to i64*
  %3686 = load i64, i64* %3685, align 8
  %3687 = and i64 %3686, 24
  %3688 = icmp eq i64 %3687, 0
  br i1 %3688, label %3689, label %3690

3689:                                             ; preds = %3682
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3651, i64 %3659, i64 %3658) #14
  br label %3690

3690:                                             ; preds = %3675, %3682, %3689
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2401) #14
  %3691 = load i64*, i64** %3614, align 8
  %3692 = load i64, i64* %3691, align 8
  %3693 = load i64, i64* %2403, align 8
  %3694 = add i64 %3692, 19
  %3695 = inttoptr i64 %3694 to i32*
  %3696 = trunc i64 %3693 to i32
  store atomic volatile i32 %3696, i32* %3695 monotonic, align 4
  %3697 = and i64 %3693, 1
  %3698 = icmp eq i64 %3697, 0
  br i1 %3698, label %3710, label %3699

3699:                                             ; preds = %3690
  %3700 = and i64 %3692, -262144
  %3701 = or i64 %3700, 8
  %3702 = inttoptr i64 %3701 to i64*
  %3703 = load i64, i64* %3702, align 8
  %3704 = and i64 %3703, 262144
  %3705 = icmp eq i64 %3704, 0
  br i1 %3705, label %3710, label %3706

3706:                                             ; preds = %3699
  %3707 = or i64 %3700, 16
  %3708 = inttoptr i64 %3707 to %"class.v8::internal::Heap"**
  %3709 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3708, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3709, i64 %3692, i64 %3694, i64 %3693) #14
  br label %3710

3710:                                             ; preds = %3706, %3699, %3690
  %3711 = and i64 %3693, -262144
  %3712 = or i64 %3711, 8
  %3713 = inttoptr i64 %3712 to i64*
  %3714 = load i64, i64* %3713, align 8
  %3715 = and i64 %3714, 24
  %3716 = icmp eq i64 %3715, 0
  br i1 %3716, label %3725, label %3717

3717:                                             ; preds = %3710
  %3718 = and i64 %3692, -262144
  %3719 = or i64 %3718, 8
  %3720 = inttoptr i64 %3719 to i64*
  %3721 = load i64, i64* %3720, align 8
  %3722 = and i64 %3721, 24
  %3723 = icmp eq i64 %3722, 0
  br i1 %3723, label %3724, label %3725

3724:                                             ; preds = %3717
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3692, i64 %3694, i64 %3693) #14
  br label %3725

3725:                                             ; preds = %3710, %3717, %3724
  %3726 = load i64*, i64** %3614, align 8
  %3727 = load i64, i64* %3726, align 8
  %3728 = and i64 %3727, -4294967296
  %3729 = add i64 %3727, 23
  %3730 = inttoptr i64 %3729 to i32*
  %3731 = load atomic i32, i32* %3730 acquire, align 4
  %3732 = zext i32 %3731 to i64
  %3733 = or i64 %3728, %3732
  %3734 = add i64 %3733, 31
  %3735 = inttoptr i64 %3734 to i32*
  %3736 = load atomic i32, i32* %3735 monotonic, align 4
  %3737 = icmp eq i32 %3736, 85
  br i1 %3737, label %3776, label %3738

3738:                                             ; preds = %3725
  %3739 = add i64 %3727, 11
  %3740 = inttoptr i64 %3739 to i32*
  %3741 = load atomic i32, i32* %3740 monotonic, align 4
  %3742 = zext i32 %3741 to i64
  %3743 = or i64 %3728, %3742
  %3744 = add i64 %3743, 3
  %3745 = inttoptr i64 %3744 to i32*
  %3746 = load atomic i32, i32* %3745 acquire, align 4
  %3747 = zext i32 %3746 to i64
  %3748 = or i64 %3728, %3747
  %3749 = icmp eq i32 %3746, 170
  br i1 %3749, label %3776, label %3750

3750:                                             ; preds = %3738
  %3751 = and i64 %3747, 1
  %3752 = icmp eq i64 %3751, 0
  br i1 %3752, label %3764, label %3753

3753:                                             ; preds = %3750
  %3754 = add i64 %3748, -1
  %3755 = inttoptr i64 %3754 to i32*
  %3756 = load atomic i32, i32* %3755 monotonic, align 4
  %3757 = zext i32 %3756 to i64
  %3758 = or i64 %3728, %3757
  %3759 = add i64 %3758, 7
  %3760 = inttoptr i64 %3759 to i16*
  %3761 = load atomic i16, i16* %3760 monotonic, align 2
  %3762 = add i16 %3761, -157
  %3763 = icmp ugt i16 %3762, 1
  br i1 %3763, label %3764, label %3776

3764:                                             ; preds = %3750, %3753
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2404) #14
  %3765 = load i64*, i64** %3614, align 8
  %3766 = load i64, i64* %3765, align 8
  %3767 = add i64 %3766, 11
  %3768 = inttoptr i64 %3767 to i32*
  %3769 = load atomic i32, i32* %3768 monotonic, align 4
  %3770 = and i64 %3766, -4294967296
  %3771 = zext i32 %3769 to i64
  %3772 = or i64 %3770, %3771
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2405)
  call void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"* nonnull %2406, i64 %3772, %"class.v8::internal::Isolate"* %0) #14
  %3773 = load i64, i64* %2407, align 8
  %3774 = load i8, i8* %2408, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2405)
  store i64 %3773, i64* %2409, align 8
  store i8 %3774, i8* %2410, align 8
  %3775 = load i64*, i64** %3614, align 8
  call void @_ZN2v88internal10JSFunction20EnsureFeedbackVectorENS0_6HandleIS1_EEPNS0_15IsCompiledScopeE(i64* %3775, %"class.v8::internal::IsCompiledScope"* nonnull %62) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2404) #14
  br label %3776

3776:                                             ; preds = %3738, %3725, %3753, %3764
  %3777 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %3613, i64 1
  %3778 = icmp eq %"class.v8::internal::Handle.1342"* %3777, %3610
  br i1 %3778, label %3779, label %3612

3779:                                             ; preds = %3776, %3602, %3593, %3585, %3583, %3543, %3533, %3525, %3523, %3481, %3597
  %3780 = inttoptr i64 %3482 to i64*
  %3781 = load i64, i64* %3780, align 8
  %3782 = icmp eq i64 %3781, 0
  br i1 %3782, label %3467, label %3481

3783:                                             ; preds = %3979, %3475
  %3784 = phi %"class.std::__1::__tree_node.1666"** [ %3476, %3475 ], [ %3480, %3979 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3470) #14
  %3785 = load i64, i64* %1, align 8
  %3786 = add i64 %3785, 31
  %3787 = inttoptr i64 %3786 to i32*
  %3788 = load i32, i32* %3787, align 4
  %3789 = and i32 %3788, -2
  %3790 = load i64, i64* %113, align 8
  %3791 = add i64 %3790, 31
  %3792 = inttoptr i64 %3791 to i32*
  %3793 = load i32, i32* %3792, align 4
  %3794 = and i32 %3793, -2
  store atomic volatile i32 %3794, i32* %3787 monotonic, align 4
  %3795 = load i64, i64* %113, align 8
  %3796 = add i64 %3795, 31
  %3797 = inttoptr i64 %3796 to i32*
  store atomic volatile i32 %3789, i32* %3797 monotonic, align 4
  %3798 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 0
  store i32 0, i32* %3798, align 8
  %3799 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %4, i64 0, i32 2, i32 0
  %3800 = bitcast %"class.v8::debug::Script"** %3799 to i64**
  store i64* %113, i64** %3800, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3468) #14
  %3801 = getelementptr inbounds %"class.std::__1::map.1331", %"class.std::__1::map.1331"* %55, i64 0, i32 0
  %3802 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %3784, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1332"* nonnull %3801, %"class.std::__1::__tree_node.1666"* %3802) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2332) #14
  br label %3983

3803:                                             ; preds = %3477, %3979
  %3804 = phi i64 [ %3471, %3477 ], [ %3980, %3979 ]
  %3805 = and i64 %3804, -4294967296
  %3806 = add i64 %3804, 3
  %3807 = inttoptr i64 %3806 to i32*
  %3808 = load atomic i32, i32* %3807 acquire, align 4
  %3809 = zext i32 %3808 to i64
  %3810 = and i64 %3809, 1
  %3811 = icmp eq i64 %3810, 0
  br i1 %3811, label %3979, label %3812

3812:                                             ; preds = %3803
  %3813 = or i64 %3805, %3809
  %3814 = add i64 %3813, -1
  %3815 = inttoptr i64 %3814 to i32*
  %3816 = load atomic i32, i32* %3815 monotonic, align 4
  %3817 = zext i32 %3816 to i64
  %3818 = or i64 %3805, %3817
  %3819 = add i64 %3818, 7
  %3820 = inttoptr i64 %3819 to i16*
  %3821 = load atomic i16, i16* %3820 monotonic, align 2
  %3822 = icmp eq i16 %3821, 133
  br i1 %3822, label %3839, label %3823

3823:                                             ; preds = %3812
  %3824 = load atomic i32, i32* %3815 monotonic, align 4
  %3825 = zext i32 %3824 to i64
  %3826 = or i64 %3805, %3825
  %3827 = add i64 %3826, 7
  %3828 = inttoptr i64 %3827 to i16*
  %3829 = load atomic i16, i16* %3828 monotonic, align 2
  %3830 = icmp eq i16 %3829, 105
  br i1 %3830, label %3839, label %3831

3831:                                             ; preds = %3823
  %3832 = load atomic i32, i32* %3815 monotonic, align 4
  %3833 = zext i32 %3832 to i64
  %3834 = or i64 %3805, %3833
  %3835 = add i64 %3834, 7
  %3836 = inttoptr i64 %3835 to i16*
  %3837 = load atomic i16, i16* %3836 monotonic, align 2
  %3838 = icmp eq i16 %3837, 94
  br i1 %3838, label %3839, label %3979

3839:                                             ; preds = %3812, %3823, %3831
  %3840 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %64, %"class.v8::internal::Isolate"* %0)
  %3841 = and i64 %3840, -4294967296
  %3842 = add i64 %3840, 7
  %3843 = inttoptr i64 %3842 to i32*
  %3844 = load i32, i32* %3843, align 4
  %3845 = zext i32 %3844 to i64
  %3846 = or i64 %3841, %3845
  %3847 = add i64 %3846, 3
  %3848 = inttoptr i64 %3847 to i32*
  %3849 = load i32, i32* %3848, align 4
  %3850 = icmp sgt i32 %3849, 1
  br i1 %3850, label %3851, label %3979

3851:                                             ; preds = %3839
  %3852 = add i64 %3846, 7
  %3853 = and i64 %3846, -262144
  %3854 = or i64 %3853, 8
  %3855 = inttoptr i64 %3854 to i64*
  %3856 = or i64 %3853, 16
  %3857 = inttoptr i64 %3856 to %"class.v8::internal::Heap"**
  br label %3858

3858:                                             ; preds = %3851, %3973
  %3859 = phi i32 [ %3849, %3851 ], [ %3974, %3973 ]
  %3860 = phi i64 [ 0, %3851 ], [ %3975, %3973 ]
  %3861 = trunc i64 %3860 to i32
  %3862 = shl i32 %3861, 2
  %3863 = sext i32 %3862 to i64
  %3864 = add i64 %3852, %3863
  %3865 = inttoptr i64 %3864 to i32*
  %3866 = load atomic i32, i32* %3865 monotonic, align 4
  %3867 = zext i32 %3866 to i64
  %3868 = and i64 %3867, 1
  %3869 = icmp eq i64 %3868, 0
  br i1 %3869, label %3973, label %3870

3870:                                             ; preds = %3858
  %3871 = or i64 %3841, %3867
  %3872 = add i64 %3871, -1
  %3873 = inttoptr i64 %3872 to i32*
  %3874 = load atomic i32, i32* %3873 monotonic, align 4
  %3875 = zext i32 %3874 to i64
  %3876 = or i64 %3841, %3875
  %3877 = add i64 %3876, 7
  %3878 = inttoptr i64 %3877 to i16*
  %3879 = load atomic i16, i16* %3878 monotonic, align 2
  %3880 = icmp eq i16 %3879, 179
  br i1 %3880, label %3881, label %3973

3881:                                             ; preds = %3870
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3478) #14
  %3882 = load atomic i32, i32* %3865 monotonic, align 4
  %3883 = zext i32 %3882 to i64
  %3884 = or i64 %3841, %3883
  store i64 %3884, i64* %3479, align 8
  %3885 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %65) #14
  %3886 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %3480, align 8
  %3887 = icmp eq %"class.std::__1::__tree_node.1666"* %3886, null
  br i1 %3887, label %3971, label %3888

3888:                                             ; preds = %3881, %3888
  %3889 = phi %"class.std::__1::__tree_end_node"* [ %3899, %3888 ], [ %2334, %3881 ]
  %3890 = phi %"class.std::__1::__tree_node.1666"* [ %3900, %3888 ], [ %3886, %3881 ]
  %3891 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3890, i64 0, i32 1, i32 0, i32 0
  %3892 = load i32, i32* %3891, align 4
  %3893 = icmp slt i32 %3892, %3885
  %3894 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3890, i64 0, i32 0, i32 1
  %3895 = bitcast %"class.std::__1::__tree_node_base"** %3894 to %"class.std::__1::__tree_node.1666"**
  %3896 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3890, i64 0, i32 0, i32 0
  %3897 = bitcast %"class.std::__1::__tree_node.1666"* %3890 to %"class.std::__1::__tree_node.1666"**
  %3898 = select i1 %3893, %"class.std::__1::__tree_node.1666"** %3895, %"class.std::__1::__tree_node.1666"** %3897
  %3899 = select i1 %3893, %"class.std::__1::__tree_end_node"* %3889, %"class.std::__1::__tree_end_node"* %3896
  %3900 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %3898, align 8
  %3901 = icmp eq %"class.std::__1::__tree_node.1666"* %3900, null
  br i1 %3901, label %3902, label %3888

3902:                                             ; preds = %3888
  %3903 = icmp eq %"class.std::__1::__tree_end_node"* %3899, %2334
  br i1 %3903, label %3971, label %3904

3904:                                             ; preds = %3902
  %3905 = bitcast %"class.std::__1::__tree_end_node"* %3899 to %"class.std::__1::__tree_node.1666"*
  %3906 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %3905, i64 0, i32 1, i32 0, i32 0
  %3907 = load i32, i32* %3906, align 4
  %3908 = icmp slt i32 %3885, %3907
  br i1 %3908, label %3971, label %3909

3909:                                             ; preds = %3904
  %3910 = load i64, i64* %113, align 8
  %3911 = add i64 %3910, 23
  %3912 = inttoptr i64 %3911 to i32*
  %3913 = load i32, i32* %3912, align 4
  %3914 = and i32 %3913, -2
  %3915 = icmp eq i32 %3914, 6
  br i1 %3915, label %3916, label %3925

3916:                                             ; preds = %3909
  %3917 = and i64 %3910, -262144
  %3918 = or i64 %3917, 16
  %3919 = inttoptr i64 %3918 to i64*
  %3920 = load i64, i64* %3919, align 16
  %3921 = add i64 %3920, -41416
  %3922 = inttoptr i64 %3921 to %"class.v8::internal::Isolate"*
  %3923 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3922, i64 0, i32 0, i32 7, i32 0, i64 119
  %3924 = load i64, i64* %3923, align 8
  br label %3932

3925:                                             ; preds = %3909
  %3926 = add i64 %3910, 43
  %3927 = inttoptr i64 %3926 to i32*
  %3928 = load i32, i32* %3927, align 4
  %3929 = and i64 %3910, -4294967296
  %3930 = zext i32 %3928 to i64
  %3931 = or i64 %3929, %3930
  br label %3932

3932:                                             ; preds = %3916, %3925
  %3933 = phi i64 [ %3924, %3916 ], [ %3931, %3925 ]
  %3934 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3899, i64 4
  %3935 = bitcast %"class.std::__1::__tree_end_node"* %3934 to i32*
  %3936 = load i32, i32* %3935, align 4
  %3937 = and i64 %3933, -4294967296
  %3938 = shl i32 %3936, 2
  %3939 = sext i32 %3938 to i64
  %3940 = add i64 %3933, 7
  %3941 = add i64 %3940, %3939
  %3942 = inttoptr i64 %3941 to i32*
  %3943 = load atomic i32, i32* %3942 monotonic, align 4
  %3944 = and i32 %3943, -3
  %3945 = zext i32 %3944 to i64
  %3946 = or i64 %3937, %3945
  %3947 = load i64, i64* %3479, align 8
  %3948 = trunc i64 %3947 to i32
  %3949 = icmp eq i32 %3944, %3948
  br i1 %3949, label %3971, label %3950

3950:                                             ; preds = %3932
  store atomic volatile i32 %3944, i32* %3865 monotonic, align 4
  %3951 = and i64 %3945, 1
  %3952 = icmp eq i64 %3951, 0
  br i1 %3952, label %3971, label %3953

3953:                                             ; preds = %3950
  %3954 = load i64, i64* %3855, align 8
  %3955 = and i64 %3954, 262144
  %3956 = icmp eq i64 %3955, 0
  br i1 %3956, label %3959, label %3957

3957:                                             ; preds = %3953
  %3958 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3857, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %3958, i64 %3846, i64 %3864, i64 %3946) #14
  br label %3959

3959:                                             ; preds = %3957, %3953
  %3960 = and i64 %3946, -262144
  %3961 = or i64 %3960, 8
  %3962 = inttoptr i64 %3961 to i64*
  %3963 = load i64, i64* %3962, align 8
  %3964 = and i64 %3963, 24
  %3965 = icmp eq i64 %3964, 0
  br i1 %3965, label %3971, label %3966

3966:                                             ; preds = %3959
  %3967 = load i64, i64* %3855, align 8
  %3968 = and i64 %3967, 24
  %3969 = icmp eq i64 %3968, 0
  br i1 %3969, label %3970, label %3971

3970:                                             ; preds = %3966
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %3846, i64 %3864, i64 %3946) #14
  br label %3971

3971:                                             ; preds = %3904, %3902, %3881, %3932, %3950, %3959, %3966, %3970
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3478) #14
  %3972 = load i32, i32* %3848, align 4
  br label %3973

3973:                                             ; preds = %3858, %3870, %3971
  %3974 = phi i32 [ %3859, %3858 ], [ %3859, %3870 ], [ %3972, %3971 ]
  %3975 = add nuw nsw i64 %3860, 1
  %3976 = ashr i32 %3974, 1
  %3977 = sext i32 %3976 to i64
  %3978 = icmp slt i64 %3975, %3977
  br i1 %3978, label %3858, label %3979

3979:                                             ; preds = %3973, %3839, %3803, %3831
  %3980 = call i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"* nonnull %63) #14
  store i64 %3980, i64* %3472, align 8
  %3981 = trunc i64 %3980 to i32
  %3982 = icmp eq i32 %3981, 0
  br i1 %3982, label %3783, label %3803

3983:                                             ; preds = %2308, %2300, %3783, %2328
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_115FunctionDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1969, align 8
  %3984 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %54, i64 0, i32 1, i32 0
  %3985 = bitcast %"class.std::__1::__tree_end_node"* %1971 to %"class.std::__1::__tree_node.1576"**
  %3986 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %3985, align 8
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1321"* %3984, %"class.std::__1::__tree_node.1576"* %3986) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1968) #14
  %3987 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %1979, align 8
  %3988 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %3987, null
  br i1 %3988, label %3995, label %3989

3989:                                             ; preds = %3983, %3989
  %3990 = phi %"struct.std::__1::__hash_node_base.1302"* [ %3992, %3989 ], [ %3987, %3983 ]
  %3991 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %3990, i64 0, i32 0
  %3992 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %3991, align 8
  %3993 = bitcast %"struct.std::__1::__hash_node_base.1302"* %3990 to i8*
  call void @_ZdlPv(i8* %3993) #16
  %3994 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %3992, null
  br i1 %3994, label %3995, label %3989

3995:                                             ; preds = %3989, %3983
  %3996 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3997 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %3996, align 8
  store %"struct.std::__1::__hash_node_base.1302"** null, %"struct.std::__1::__hash_node_base.1302"*** %3996, align 8
  %3998 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %3997, null
  br i1 %3998, label %4001, label %3999

3999:                                             ; preds = %3995
  %4000 = bitcast %"struct.std::__1::__hash_node_base.1302"** %3997 to i8*
  call void @_ZdlPv(i8* %4000) #16
  br label %4001

4001:                                             ; preds = %3995, %3999
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1363) #14
  %4002 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %1974, align 8
  %4003 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %4002, null
  br i1 %4003, label %4010, label %4004

4004:                                             ; preds = %4001, %4004
  %4005 = phi %"struct.std::__1::__hash_node_base.1302"* [ %4007, %4004 ], [ %4002, %4001 ]
  %4006 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %4005, i64 0, i32 0
  %4007 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %4006, align 8
  %4008 = bitcast %"struct.std::__1::__hash_node_base.1302"* %4005 to i8*
  call void @_ZdlPv(i8* %4008) #16
  %4009 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %4007, null
  br i1 %4009, label %4010, label %4004

4010:                                             ; preds = %4004, %4001
  %4011 = getelementptr inbounds %"class.std::__1::unordered_map.1297", %"class.std::__1::unordered_map.1297"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4012 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %4011, align 8
  store %"struct.std::__1::__hash_node_base.1302"** null, %"struct.std::__1::__hash_node_base.1302"*** %4011, align 8
  %4013 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %4012, null
  br i1 %4013, label %4016, label %4014

4014:                                             ; preds = %4010
  %4015 = bitcast %"struct.std::__1::__hash_node_base.1302"** %4012 to i8*
  call void @_ZdlPv(i8* %4015) #16
  br label %4016

4016:                                             ; preds = %4010, %4014
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1360) #14
  %4017 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %1388, align 8
  %4018 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %4017, null
  br i1 %4018, label %4025, label %4019

4019:                                             ; preds = %4016, %4019
  %4020 = phi %"struct.std::__1::__hash_node_base.1274"* [ %4022, %4019 ], [ %4017, %4016 ]
  %4021 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %4020, i64 0, i32 0
  %4022 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %4021, align 8
  %4023 = bitcast %"struct.std::__1::__hash_node_base.1274"* %4020 to i8*
  call void @_ZdlPv(i8* %4023) #16
  %4024 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %4022, null
  br i1 %4024, label %4025, label %4019

4025:                                             ; preds = %4019, %4016
  %4026 = getelementptr inbounds %"class.std::__1::unordered_map.1269", %"class.std::__1::unordered_map.1269"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4027 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %4026, align 8
  store %"struct.std::__1::__hash_node_base.1274"** null, %"struct.std::__1::__hash_node_base.1274"*** %4026, align 8
  %4028 = icmp eq %"struct.std::__1::__hash_node_base.1274"** %4027, null
  br i1 %4028, label %4031, label %4029

4029:                                             ; preds = %4025
  %4030 = bitcast %"struct.std::__1::__hash_node_base.1274"** %4027 to i8*
  call void @_ZdlPv(i8* %4030) #16
  br label %4031

4031:                                             ; preds = %4025, %4029
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %158) #14
  br label %4032

4032:                                             ; preds = %147, %4031
  %4033 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %50, i64 0, i32 0, i32 0
  %4034 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %4033, align 8
  %4035 = icmp eq %"class.v8::internal::FunctionLiteral"** %4034, null
  br i1 %4035, label %4041, label %4036

4036:                                             ; preds = %4032
  %4037 = ptrtoint %"class.v8::internal::FunctionLiteral"** %4034 to i64
  %4038 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %50, i64 0, i32 0, i32 1
  %4039 = bitcast %"class.v8::internal::FunctionLiteral"*** %4038 to i64*
  store i64 %4037, i64* %4039, align 8
  %4040 = bitcast %"class.v8::internal::FunctionLiteral"** %4034 to i8*
  call void @_ZdlPv(i8* %4040) #16
  br label %4041

4041:                                             ; preds = %4032, %4036
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #14
  call void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"* nonnull %49) #14
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %153) #14
  %4042 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %48, i64 0, i32 5, i32 0, i32 0, i32 0
  %4043 = load %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"*, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %4042, align 8
  store %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* null, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %4042, align 8
  %4044 = icmp eq %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %4043, null
  br i1 %4044, label %4057, label %4045

4045:                                             ; preds = %4041
  %4046 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %4043, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4047 = load %"struct.std::__1::__forward_list_node.1210"*, %"struct.std::__1::__forward_list_node.1210"** %4046, align 8
  %4048 = icmp eq %"struct.std::__1::__forward_list_node.1210"* %4047, null
  br i1 %4048, label %4055, label %4049

4049:                                             ; preds = %4045, %4049
  %4050 = phi %"struct.std::__1::__forward_list_node.1210"* [ %4053, %4049 ], [ %4047, %4045 ]
  %4051 = bitcast %"struct.std::__1::__forward_list_node.1210"* %4050 to i8*
  %4052 = getelementptr inbounds %"struct.std::__1::__forward_list_node.1210", %"struct.std::__1::__forward_list_node.1210"* %4050, i64 0, i32 0, i32 0
  %4053 = load %"struct.std::__1::__forward_list_node.1210"*, %"struct.std::__1::__forward_list_node.1210"** %4052, align 8
  call void @_ZdlPv(i8* %4051) #16
  %4054 = icmp eq %"struct.std::__1::__forward_list_node.1210"* %4053, null
  br i1 %4054, label %4055, label %4049

4055:                                             ; preds = %4049, %4045
  %4056 = bitcast %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %4043 to i8*
  call void @_ZdlPv(i8* %4056) #16
  br label %4057

4057:                                             ; preds = %4055, %4041
  %4058 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %48, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %4059 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %4058, align 8
  %4060 = icmp eq %"struct.std::__1::__forward_list_node"* %4059, null
  br i1 %4060, label %4067, label %4061

4061:                                             ; preds = %4057, %4061
  %4062 = phi %"struct.std::__1::__forward_list_node"* [ %4065, %4061 ], [ %4059, %4057 ]
  %4063 = bitcast %"struct.std::__1::__forward_list_node"* %4062 to i8*
  %4064 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %4062, i64 0, i32 0, i32 0
  %4065 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %4064, align 8
  call void @_ZdlPv(i8* %4063) #16
  %4066 = icmp eq %"struct.std::__1::__forward_list_node"* %4065, null
  br i1 %4066, label %4067, label %4061

4067:                                             ; preds = %4061, %4057
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %148) #14
  br label %4068

4068:                                             ; preds = %101, %4067
  %4069 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %47, i64 0, i32 0, i32 0
  %4070 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %4069, align 8
  %4071 = icmp eq %"class.v8::internal::FunctionLiteral"** %4070, null
  br i1 %4071, label %4077, label %4072

4072:                                             ; preds = %4068
  %4073 = ptrtoint %"class.v8::internal::FunctionLiteral"** %4070 to i64
  %4074 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %47, i64 0, i32 0, i32 1
  %4075 = bitcast %"class.v8::internal::FunctionLiteral"*** %4074 to i64*
  store i64 %4073, i64* %4075, align 8
  %4076 = bitcast %"class.v8::internal::FunctionLiteral"** %4070 to i8*
  call void @_ZdlPv(i8* %4076) #16
  br label %4077

4077:                                             ; preds = %4068, %4072
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #14
  call void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"* nonnull %46) #14
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %107) #14
  %4078 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %45, i64 0, i32 5, i32 0, i32 0, i32 0
  %4079 = load %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"*, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %4078, align 8
  store %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* null, %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"** %4078, align 8
  %4080 = icmp eq %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %4079, null
  br i1 %4080, label %4093, label %4081

4081:                                             ; preds = %4077
  %4082 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState::ParallelTasks", %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %4079, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4083 = load %"struct.std::__1::__forward_list_node.1210"*, %"struct.std::__1::__forward_list_node.1210"** %4082, align 8
  %4084 = icmp eq %"struct.std::__1::__forward_list_node.1210"* %4083, null
  br i1 %4084, label %4091, label %4085

4085:                                             ; preds = %4081, %4085
  %4086 = phi %"struct.std::__1::__forward_list_node.1210"* [ %4089, %4085 ], [ %4083, %4081 ]
  %4087 = bitcast %"struct.std::__1::__forward_list_node.1210"* %4086 to i8*
  %4088 = getelementptr inbounds %"struct.std::__1::__forward_list_node.1210", %"struct.std::__1::__forward_list_node.1210"* %4086, i64 0, i32 0, i32 0
  %4089 = load %"struct.std::__1::__forward_list_node.1210"*, %"struct.std::__1::__forward_list_node.1210"** %4088, align 8
  call void @_ZdlPv(i8* %4087) #16
  %4090 = icmp eq %"struct.std::__1::__forward_list_node.1210"* %4089, null
  br i1 %4090, label %4091, label %4085

4091:                                             ; preds = %4085, %4081
  %4092 = bitcast %"class.v8::internal::UnoptimizedCompileState::ParallelTasks"* %4079 to i8*
  call void @_ZdlPv(i8* %4092) #16
  br label %4093

4093:                                             ; preds = %4091, %4077
  %4094 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %45, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %4095 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %4094, align 8
  %4096 = icmp eq %"struct.std::__1::__forward_list_node"* %4095, null
  br i1 %4096, label %4103, label %4097

4097:                                             ; preds = %4093, %4097
  %4098 = phi %"struct.std::__1::__forward_list_node"* [ %4101, %4097 ], [ %4095, %4093 ]
  %4099 = bitcast %"struct.std::__1::__forward_list_node"* %4098 to i8*
  %4100 = getelementptr inbounds %"struct.std::__1::__forward_list_node", %"struct.std::__1::__forward_list_node"* %4098, i64 0, i32 0, i32 0
  %4101 = load %"struct.std::__1::__forward_list_node"*, %"struct.std::__1::__forward_list_node"** %4100, align 8
  call void @_ZdlPv(i8* %4099) #16
  %4102 = icmp eq %"struct.std::__1::__forward_list_node"* %4101, null
  br i1 %4102, label %4103, label %4097

4103:                                             ; preds = %4097, %4093
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %102) #14
  %4104 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %94, align 8
  br label %4105

4105:                                             ; preds = %4103, %99
  %4106 = phi %"struct.v8::internal::SourceChangeRange"* [ %4104, %4103 ], [ %95, %99 ]
  %4107 = icmp eq %"struct.v8::internal::SourceChangeRange"* %4106, null
  br i1 %4107, label %4112, label %4108

4108:                                             ; preds = %4105
  %4109 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %4106 to i64
  %4110 = bitcast %"struct.v8::internal::SourceChangeRange"** %96 to i64*
  store i64 %4109, i64* %4110, align 8
  %4111 = bitcast %"struct.v8::internal::SourceChangeRange"* %4106 to i8*
  call void @_ZdlPv(i8* %4111) #16
  br label %4112

4112:                                             ; preds = %4105, %4108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8LiveEdit14CompareStringsEPNS0_7IsolateENS0_6HandleINS0_6StringEEES6_PNSt3__16vectorINS0_17SourceChangeRangeENS7_9allocatorIS9_EEEE(%"class.v8::internal::Isolate"*, i64*, i64*, %"class.std::__1::vector.1189"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", align 8
  %6 = alloca %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", align 8
  %7 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext 0)
  %8 = tail call i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %2, i8 zeroext 0)
  %9 = tail call i64* @_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::Isolate"* %0, i64* %7, i1 zeroext false) #14
  %10 = load i64, i64* %7, align 8
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = tail call i64* @_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::Isolate"* %0, i64* %8, i1 zeroext false) #14
  %15 = load i64, i64* %8, align 8
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_121LineArrayCompareInputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 1, i32 0, i32 0
  store i64* %7, i64** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 2, i32 0, i32 0
  store i64* %8, i64** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  store i64* %9, i64** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 3, i32 1
  store i32 %13, i32* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64* %14, i64** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 4, i32 1
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 5
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 6
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 7
  %30 = load i64, i64* %9, align 8
  %31 = add i64 %30, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = ashr i32 %33, 1
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %29, align 8
  %36 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 8
  %37 = load i64, i64* %14, align 8
  %38 = add i64 %37, 3
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = ashr i32 %40, 1
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %36, align 4
  %43 = bitcast %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 1
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64* %9, i64** %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 2, i32 1
  store i32 %13, i32* %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  store i64* %14, i64** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 3, i32 1
  store i32 %18, i32* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 4, i32 0, i32 0
  store i64* %7, i64** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 5, i32 0, i32 0
  store i64* %8, i64** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 6
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 7
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 8
  store %"class.std::__1::vector.1189"* %3, %"class.std::__1::vector.1189"** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5, i64 0, i32 0, i32 0
  %58 = icmp slt i32 %42, %35
  %59 = select i1 %58, i32 %42, i32 %35
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %103

61:                                               ; preds = %4
  %62 = bitcast %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5 to i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)***
  %63 = load i64, i64* %9, align 8
  %64 = add i64 %63, 3
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp ult i32 %66, 2
  br i1 %67, label %74, label %68

68:                                               ; preds = %61
  %69 = add i64 %63, 7
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = ashr i32 %71, 1
  %73 = add nsw i32 %72, 1
  br label %74

74:                                               ; preds = %61, %68
  %75 = phi i32 [ %73, %68 ], [ %13, %61 ]
  %76 = load i64, i64* %14, align 8
  %77 = add i64 %76, 3
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = icmp ult i32 %79, 2
  br i1 %80, label %87, label %81

81:                                               ; preds = %74
  %82 = add i64 %76, 7
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = ashr i32 %84, 1
  %86 = add nsw i32 %85, 1
  br label %87

87:                                               ; preds = %74, %81
  %88 = phi i32 [ %86, %81 ], [ %18, %74 ]
  %89 = icmp eq i32 %75, %88
  br i1 %89, label %90, label %103

90:                                               ; preds = %87
  %91 = tail call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_117CompareSubstringsENS0_6HandleINS0_6StringEEEiS4_ii(i64* %7, i32 0, i64* %8, i32 0, i32 %75) #14
  br i1 %91, label %97, label %103

92:                                               ; preds = %97
  %93 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)**, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*** %62, align 8
  %94 = getelementptr inbounds i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %93, i64 2
  %95 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %94, align 8
  %96 = call zeroext i1 %95(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* nonnull %57, i32 %99, i32 %99) #14
  br i1 %96, label %97, label %101

97:                                               ; preds = %90, %92
  %98 = phi i32 [ %99, %92 ], [ 0, %90 ]
  %99 = add nuw nsw i32 %98, 1
  %100 = icmp slt i32 %99, %59
  br i1 %100, label %92, label %101

101:                                              ; preds = %97, %92
  %102 = xor i32 %98, -1
  br label %103

103:                                              ; preds = %87, %101, %90, %4
  %104 = phi i32 [ 0, %4 ], [ 0, %90 ], [ %99, %101 ], [ 0, %87 ]
  %105 = phi i32 [ 0, %4 ], [ 0, %90 ], [ %102, %101 ], [ 0, %87 ]
  %106 = sub nsw i32 %35, %104
  %107 = sub nsw i32 %42, %104
  %108 = icmp slt i32 %107, %106
  %109 = select i1 %108, i32 %107, i32 %106
  %110 = icmp sgt i32 %109, 0
  br i1 %110, label %111, label %124

111:                                              ; preds = %103
  %112 = bitcast %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5 to i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)***
  br label %113

113:                                              ; preds = %121, %111
  %114 = phi i32 [ 0, %111 ], [ %122, %121 ]
  %115 = sub i32 %34, %114
  %116 = sub i32 %41, %114
  %117 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)**, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*** %112, align 8
  %118 = getelementptr inbounds i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %117, i64 2
  %119 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %118, align 8
  %120 = call zeroext i1 %119(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* nonnull %57, i32 %115, i32 %116) #14
  br i1 %120, label %121, label %124

121:                                              ; preds = %113
  %122 = add nuw nsw i32 %114, 1
  %123 = icmp slt i32 %122, %109
  br i1 %123, label %113, label %124

124:                                              ; preds = %121, %113, %103
  %125 = phi i32 [ 0, %103 ], [ %122, %121 ], [ %114, %113 ]
  %126 = or i32 %125, %104
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %147, label %128

128:                                              ; preds = %124
  %129 = sub nsw i32 %35, %125
  %130 = add i32 %129, %105
  %131 = sub nsw i32 %42, %125
  %132 = add i32 %131, %105
  %133 = bitcast %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %5 to void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)***
  %134 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)**, void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)** %134, i64 5
  %136 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)** %135, align 8
  call void %136(%"class.v8::internal::(anonymous namespace)::SubrangableInput"* nonnull %55, i32 %104, i32 %130) #14
  %137 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)**, void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)*** %133, align 8
  %138 = getelementptr inbounds void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)** %137, i64 6
  %139 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableInput"*, i32, i32)** %138, align 8
  call void %139(%"class.v8::internal::(anonymous namespace)::SubrangableInput"* nonnull %55, i32 %104, i32 %132) #14
  %140 = bitcast %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6 to void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)***
  %141 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)**, void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)** %141, i64 3
  %143 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)** %142, align 8
  call void %143(%"class.v8::internal::(anonymous namespace)::SubrangableOutput"* nonnull %56, i32 %104, i32 %130) #14
  %144 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)**, void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)*** %140, align 8
  %145 = getelementptr inbounds void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)** %144, i64 4
  %146 = load void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::SubrangableOutput"*, i32, i32)** %145, align 8
  call void %146(%"class.v8::internal::(anonymous namespace)::SubrangableOutput"* nonnull %56, i32 %104, i32 %132) #14
  br label %147

147:                                              ; preds = %124, %128
  %148 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %6, i64 0, i32 0, i32 0
  call fastcc void @_ZN2v88internal12_GLOBAL__N_110Comparator19CalculateDifferenceEPNS2_5InputEPNS2_6OutputE(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* nonnull %57, %"class.v8::internal::(anonymous namespace)::Comparator::Output"* nonnull %148)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal23UnoptimizedCompileStateC1EPNS0_7IsolateE(%"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

declare { i64, i32 } @_ZN2v88internal23UnoptimizedCompileFlags16ForScriptCompileEPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal9ParseInfoC1EPNS0_7IsolateENS0_23UnoptimizedCompileFlagsEPNS0_23UnoptimizedCompileStateE(%"class.v8::internal::ParseInfo"*, %"class.v8::internal::Isolate"*, i64, i32, %"class.v8::internal::UnoptimizedCompileState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_111ParseScriptEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEEPNS0_9ParseInfoEbPNSt3__16vectorIPNS0_15FunctionLiteralENS9_9allocatorISC_EEEEPNS_5debug14LiveEditResultE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::ParseInfo"*, i1 zeroext, %"class.std::__1::vector.1262"*, %"struct.v8::debug::LiveEditResult"* nocapture) unnamed_addr #0 {
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals", align 8
  %11 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #14
  %12 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::Isolate"*
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %12) #14
  br i1 %3, label %13, label %16

13:                                               ; preds = %6
  %14 = call i64* @_ZN2v88internal8Compiler18CompileForLiveEditEPNS0_9ParseInfoENS0_6HandleINS0_6ScriptEEEPNS0_7IsolateE(%"class.v8::internal::ParseInfo"* %2, i64* %1, %"class.v8::internal::Isolate"* %0) #14
  %15 = icmp eq i64* %14, null
  br i1 %15, label %26, label %46

16:                                               ; preds = %6
  %17 = call zeroext i1 @_ZN2v88internal7parsing12ParseProgramEPNS0_9ParseInfoENS0_6HandleINS0_6ScriptEEEPNS0_7IsolateENS1_20ReportStatisticsModeE(%"class.v8::internal::ParseInfo"* %2, i64* %1, %"class.v8::internal::Isolate"* %0, i32 0) #14
  br i1 %17, label %46, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %2, i64 0, i32 2
  %20 = load %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %20, i64 0, i32 3
  %22 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %2, i64 0, i32 11, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::AstValueFactory"*, %"class.v8::internal::AstValueFactory"** %22, align 8
  call void @_ZN2v88internal30PendingCompilationErrorHandler13PrepareErrorsINS0_7IsolateEEEvPT_PNS0_15AstValueFactoryE(%"class.v8::internal::PendingCompilationErrorHandler"* %21, %"class.v8::internal::Isolate"* %0, %"class.v8::internal::AstValueFactory"* %23) #14
  %24 = load %"class.v8::internal::UnoptimizedCompileState"*, %"class.v8::internal::UnoptimizedCompileState"** %19, align 8
  %25 = getelementptr inbounds %"class.v8::internal::UnoptimizedCompileState", %"class.v8::internal::UnoptimizedCompileState"* %24, i64 0, i32 3
  call void @_ZNK2v88internal30PendingCompilationErrorHandler12ReportErrorsEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::PendingCompilationErrorHandler"* %25, %"class.v8::internal::Isolate"* %0, i64* %1) #14
  br label %26

26:                                               ; preds = %18, %13
  %27 = call zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"* %0, i1 zeroext false) #14
  %28 = call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* nonnull %7) #14
  %29 = call %"class.v8::String"* @_ZNK2v87Message3GetEv(%"class.v8::Message"* %28) #14
  %30 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %5, i64 0, i32 3, i32 0
  store %"class.v8::String"* %29, %"class.v8::String"** %30, align 8
  %31 = call %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"* nonnull %7) #14
  %32 = bitcast %"class.v8::Message"* %31 to i64*
  %33 = bitcast %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  %34 = load i64, i64* %32, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef"* %8, i64 0, i32 0
  %37 = call i32 @_ZNK2v88internal15JSMessageObject13GetLineNumberEv(%"class.v8::internal::JSMessageObject"* nonnull %36) #14
  %38 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %5, i64 0, i32 4
  store i32 %37, i32* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %39 = bitcast %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = load i64, i64* %32, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSMessageObject>::ObjectRef"* %9, i64 0, i32 0
  %43 = call i32 @_ZNK2v88internal15JSMessageObject15GetColumnNumberEv(%"class.v8::internal::JSMessageObject"* nonnull %42) #14
  %44 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %5, i64 0, i32 5
  store i32 %43, i32* %44, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  %45 = getelementptr inbounds %"struct.v8::debug::LiveEditResult", %"struct.v8::debug::LiveEditResult"* %5, i64 0, i32 0
  store i32 1, i32* %45, align 8
  br label %64

46:                                               ; preds = %13, %16
  %47 = bitcast %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.v8::internal::ParseInfo", %"class.v8::internal::ParseInfo"* %2, i64 0, i32 15
  %49 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %49, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals", %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10, i64 0, i32 0, i32 3
  store %"class.v8::internal::AstNode"* %50, %"class.v8::internal::AstNode"** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals", %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10, i64 0, i32 0, i32 4
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 6, i32 1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals", %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10, i64 0, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals", %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10, i64 0, i32 0, i32 1
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals", %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10, i64 0, i32 1
  store %"class.std::__1::vector.1262"* %4, %"class.std::__1::vector.1262"** %57, align 8
  %58 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %59 = icmp ult i64 %58, %54
  br i1 %59, label %60, label %61

60:                                               ; preds = %46
  store i8 1, i8* %56, align 8
  br label %63

61:                                               ; preds = %46
  %62 = bitcast %"class.v8::internal::(anonymous namespace)::CollectFunctionLiterals"* %10 to %"class.v8::internal::AstTraversalVisitor"*
  call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* nonnull %62, %"class.v8::internal::AstNode"* %50) #14
  br label %63

63:                                               ; preds = %60, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #14
  br label %64

64:                                               ; preds = %63, %26
  %65 = phi i1 [ true, %63 ], [ false, %26 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #14
  ret i1 %65
}

declare i64* @_ZN2v88internal7Factory11CloneScriptENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap21AddInterestingLiteralEiPNS0_15FunctionLiteralE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, i32, %"class.v8::internal::FunctionLiteral"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1
  %5 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %2) #14
  %6 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %2, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, i32 -1, i32 %5
  %10 = zext i32 %9 to i64
  %11 = shl nuw i64 %10, 32
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node.1576"**
  %14 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node.1576"* %14, null
  br i1 %15, label %50, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %46, %16
  %19 = phi %"class.std::__1::__tree_node.1576"* [ %49, %46 ], [ %14, %16 ]
  %20 = phi %"class.std::__1::__tree_node_base"** [ %48, %46 ], [ %17, %16 ]
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, %1
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = icmp slt i32 %22, %1
  br i1 %25, label %38, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 2, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %9
  br i1 %29, label %30, label %36

30:                                               ; preds = %26, %18
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 0, i32 0
  br label %52

36:                                               ; preds = %26
  %37 = icmp slt i32 %28, %9
  br i1 %37, label %38, label %44

38:                                               ; preds = %36, %24
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 0, i32 1
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %19, i64 0, i32 0, i32 0
  br label %52

46:                                               ; preds = %38, %30
  %47 = phi %"class.std::__1::__tree_node_base"* [ %32, %30 ], [ %40, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %31, %30 ], [ %39, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"* %47 to %"class.std::__1::__tree_node.1576"*
  br label %18

50:                                               ; preds = %3
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 0, i32 0
  br label %52

52:                                               ; preds = %50, %44, %42, %34
  %53 = phi %"class.std::__1::__tree_end_node"* [ %12, %50 ], [ %35, %34 ], [ %43, %42 ], [ %45, %44 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %51, %50 ], [ %31, %34 ], [ %39, %42 ], [ %20, %44 ]
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to %"class.std::__1::__tree_node.1576"**
  %56 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node.1576"* %56, null
  br i1 %57, label %58, label %87

58:                                               ; preds = %52
  %59 = tail call i8* @_Znwm(i64 112) #16, !noalias !23
  %60 = getelementptr inbounds i8, i8* %59, i64 32
  %61 = bitcast i8* %60 to i64*
  %62 = zext i32 %1 to i64
  %63 = or i64 %11, %62
  store i64 %63, i64* %61, align 8, !noalias !23
  %64 = getelementptr inbounds i8, i8* %59, i64 40
  %65 = bitcast i8* %64 to %"class.v8::internal::FunctionLiteral"**
  store %"class.v8::internal::FunctionLiteral"* %2, %"class.v8::internal::FunctionLiteral"** %65, align 8, !noalias !23
  %66 = getelementptr inbounds i8, i8* %59, i64 48
  %67 = bitcast i8* %59 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds i8, i8* %59, i64 16
  %69 = bitcast i8* %68 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 16, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 60, i1 false)
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %69, align 8
  %70 = bitcast %"class.std::__1::__tree_node_base"** %54 to i8**
  store i8* %59, i8** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %58
  %77 = ptrtoint %"class.std::__1::__tree_node_base"* %74 to i64
  %78 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %77, i64* %78, align 8
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  br label %80

80:                                               ; preds = %76, %58
  %81 = phi %"class.std::__1::__tree_node_base"* [ %67, %58 ], [ %79, %76 ]
  %82 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %83, %"class.std::__1::__tree_node_base"* %81) #14
  %84 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %87

87:                                               ; preds = %52, %80
  ret void
}

declare void @_ZN2v88internal16CompilationCache6RemoveENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::CompilationCache"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal5Debug18DeoptimizeFunctionENS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal5Debug27RemoveBreakInfoAndMaybeFreeENS0_6HandleINS0_9DebugInfoEEE(%"class.v8::internal::Debug"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2

declare void @_ZN2v88internal10JSFunction20EnsureFeedbackVectorENS0_6HandleIS1_EEPNS0_15IsCompiledScopeE(i64*, %"class.v8::internal::IsCompiledScope"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 15
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %5, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp eq i16 %18, 100
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = load i64, i64* %3, align 8
  %22 = and i64 %21, -4294967296
  %23 = add i64 %21, 15
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 19
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %22, %31
  %33 = add i64 %32, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %22, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = icmp eq i16 %40, 133
  br i1 %41, label %42, label %55

42:                                               ; preds = %20
  %43 = load i64, i64* %3, align 8
  %44 = and i64 %43, -4294967296
  %45 = add i64 %43, 15
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 15
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 acquire, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %44, %53
  br label %120

55:                                               ; preds = %2, %20
  %56 = load i64, i64* %3, align 8
  %57 = and i64 %56, -4294967296
  %58 = add i64 %56, 3
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 acquire, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %57, %61
  %63 = and i64 %61, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %114, label %65

65:                                               ; preds = %55
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %57, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 133
  br i1 %74, label %120, label %75

75:                                               ; preds = %65
  %76 = load atomic i32, i32* %67 monotonic, align 4
  %77 = zext i32 %76 to i64
  %78 = or i64 %57, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 94
  br i1 %82, label %83, label %114

83:                                               ; preds = %75
  %84 = load i64, i64* %3, align 8
  %85 = and i64 %84, -4294967296
  %86 = add i64 %84, 3
  %87 = inttoptr i64 %86 to i32*
  %88 = load atomic i32, i32* %87 acquire, align 4
  %89 = zext i32 %88 to i64
  %90 = or i64 %85, %89
  %91 = add i64 %90, 7
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %85, %94
  %96 = and i64 %94, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %83
  %99 = add i64 %95, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %85, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 133
  br i1 %107, label %120, label %108

108:                                              ; preds = %98, %83
  %109 = add i64 %95, 3
  %110 = inttoptr i64 %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %85, %112
  br label %120

114:                                              ; preds = %75, %55
  %115 = add i64 %62, 3
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %57, %118
  br label %120

120:                                              ; preds = %114, %108, %98, %65, %42
  %121 = phi i64 [ %54, %42 ], [ %119, %114 ], [ %62, %65 ], [ %113, %108 ], [ %95, %98 ]
  ret i64 %121
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap6LookupENS0_18SharedFunctionInfoEPPNS1_12FunctionDataE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, i64, %"struct.v8::internal::(anonymous namespace)::FunctionData"** nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %6 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %5) #14
  %8 = load i64, i64* %6, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 15
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 acquire, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %9, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 100
  br i1 %23, label %24, label %32

24:                                               ; preds = %3
  %25 = add i64 %14, 11
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %9, %28
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  br label %32

32:                                               ; preds = %3, %24
  %33 = phi i32* [ %16, %3 ], [ %31, %24 ]
  %34 = phi i64 [ %14, %3 ], [ %29, %24 ]
  %35 = and i64 %34, -4294967296
  %36 = load atomic i32, i32* %33 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %35, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp ne i16 %41, 112
  %43 = icmp eq i32 %7, -1
  %44 = or i1 %43, %42
  br i1 %44, label %131, label %45

45:                                               ; preds = %32
  %46 = load i64, i64* %6, align 8
  %47 = and i64 %46, -4294967296
  %48 = add i64 %46, 15
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 acquire, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %47, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 100
  br i1 %61, label %62, label %68

62:                                               ; preds = %45
  %63 = add i64 %52, 11
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %47, %66
  br label %68

68:                                               ; preds = %45, %62
  %69 = phi i64 [ %67, %62 ], [ %52, %45 ]
  %70 = add i64 %69, 31
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = ashr i32 %72, 1
  %74 = load i64, i64* %6, align 8
  %75 = bitcast %"class.v8::internal::SharedFunctionInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %76, align 8
  %77 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #14
  %78 = load i64, i64* %76, align 8
  %79 = add i64 %78, 27
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 134217728
  %83 = icmp eq i32 %82, 0
  %84 = select i1 %83, i32 %77, i32 -1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  %85 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node.1576"**
  %87 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node.1576"* %87, null
  br i1 %88, label %131, label %89

89:                                               ; preds = %68, %109
  %90 = phi %"class.std::__1::__tree_end_node"* [ %111, %109 ], [ %85, %68 ]
  %91 = phi %"class.std::__1::__tree_node.1576"* [ %112, %109 ], [ %87, %68 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %91, i64 0, i32 2, i32 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %93, %73
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %91, i64 0, i32 0, i32 1
  %97 = bitcast %"class.std::__1::__tree_node_base"** %96 to %"class.std::__1::__tree_node.1576"**
  br label %109

98:                                               ; preds = %89
  %99 = icmp sgt i32 %93, %73
  br i1 %99, label %106, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %91, i64 0, i32 2, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, %84
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %91, i64 0, i32 0, i32 1
  %105 = bitcast %"class.std::__1::__tree_node_base"** %104 to %"class.std::__1::__tree_node.1576"**
  br i1 %103, label %109, label %106

106:                                              ; preds = %100, %98
  %107 = bitcast %"class.std::__1::__tree_node.1576"* %91 to %"class.std::__1::__tree_node.1576"**
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %91, i64 0, i32 0, i32 0
  br label %109

109:                                              ; preds = %106, %100, %95
  %110 = phi %"class.std::__1::__tree_node.1576"** [ %107, %106 ], [ %97, %95 ], [ %105, %100 ]
  %111 = phi %"class.std::__1::__tree_end_node"* [ %108, %106 ], [ %90, %95 ], [ %90, %100 ]
  %112 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %110, align 8
  %113 = icmp eq %"class.std::__1::__tree_node.1576"* %112, null
  br i1 %113, label %114, label %89

114:                                              ; preds = %109
  %115 = icmp eq %"class.std::__1::__tree_end_node"* %111, %85
  br i1 %115, label %131, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 4
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"struct.std::__1::__value_type.1577"*
  %119 = bitcast %"class.std::__1::__tree_end_node"* %117 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, %73
  br i1 %121, label %131, label %122

122:                                              ; preds = %116
  %123 = icmp slt i32 %120, %73
  br i1 %123, label %128, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"struct.std::__1::__value_type.1577", %"struct.std::__1::__value_type.1577"* %118, i64 0, i32 0, i32 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, %84
  br i1 %127, label %131, label %128

128:                                              ; preds = %124, %122
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 5
  %130 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %2 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"** %130, align 8
  br label %131

131:                                              ; preds = %128, %124, %116, %114, %68, %32
  %132 = phi i1 [ false, %32 ], [ true, %128 ], [ false, %68 ], [ false, %114 ], [ false, %116 ], [ false, %124 ]
  ret i1 %132
}

declare i64 @_ZNK2v88internal18SharedFunctionInfo7GetCodeEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare void @_ZN2v88internal18SharedFunctionInfo14ScriptIteratorC1EPNS0_7IsolateENS0_6ScriptE(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*, %"class.v8::internal::Isolate"*, i64) unnamed_addr #2

declare i64 @_ZN2v88internal18SharedFunctionInfo14ScriptIterator4NextEv(%"class.v8::internal::SharedFunctionInfo::ScriptIterator"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMapD2Ev(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_115FunctionDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1576"**
  %6 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1321"* %3, %"class.std::__1::__tree_node.1576"* %6) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal9ParseInfoD1Ev(%"class.v8::internal::ParseInfo"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal6String7FlattenEPNS0_7IsolateENS0_6HandleIS1_EENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3 comdat align 2 {
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp ult i16 %13, 64
  br i1 %14, label %15, label %72

15:                                               ; preds = %3
  %16 = load atomic i32, i32* %7 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %5, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = and i16 %21, 7
  %23 = icmp eq i16 %22, 1
  br i1 %23, label %24, label %72

24:                                               ; preds = %15
  %25 = load atomic i32, i32* %7 acquire, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %5, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = and i16 %30, 7
  %32 = icmp eq i16 %31, 1
  br i1 %32, label %33, label %43

33:                                               ; preds = %24
  %34 = add i64 %4, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %5, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %24, %33
  %44 = load i64, i64* %1, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 11
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %52 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %51, align 8
  %53 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %43
  %55 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %52, i64 %50) #14
  %56 = load i64, i64* %55, align 8
  br label %72

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #14
  br label %65

65:                                               ; preds = %63, %57
  %66 = phi i64* [ %64, %63 ], [ %59, %57 ]
  %67 = ptrtoint i64* %66 to i64
  %68 = add i64 %67, 8
  %69 = inttoptr i64 %68 to i64*
  store i64* %69, i64** %58, align 8
  store i64 %50, i64* %66, align 8
  br label %72

70:                                               ; preds = %33
  %71 = tail call i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %2) #14
  br label %118

72:                                               ; preds = %65, %54, %3, %15
  %73 = phi i64 [ %4, %15 ], [ %4, %3 ], [ %50, %65 ], [ %56, %54 ]
  %74 = phi i64* [ %1, %15 ], [ %1, %3 ], [ %66, %65 ], [ %55, %54 ]
  %75 = and i64 %73, -4294967296
  %76 = add i64 %73, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp ult i16 %83, 64
  br i1 %84, label %85, label %118

85:                                               ; preds = %72
  %86 = load atomic i32, i32* %77 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %75, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 7
  %93 = icmp eq i16 %92, 5
  br i1 %93, label %94, label %118

94:                                               ; preds = %85
  %95 = add i64 %73, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %75, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %94
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #14
  br label %118

105:                                              ; preds = %94
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #14
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %118

118:                                              ; preds = %72, %85, %103, %113, %70
  %119 = phi i64* [ %71, %70 ], [ %74, %85 ], [ %104, %103 ], [ %114, %113 ], [ %74, %72 ]
  ret i64* %119
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_110Comparator19CalculateDifferenceEPNS2_5InputEPNS2_6OutputE(%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, %"class.v8::internal::(anonymous namespace)::Comparator::Output"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::(anonymous namespace)::Differencer", align 8
  %4 = bitcast %"class.v8::internal::(anonymous namespace)::Differencer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 0
  store %"class.v8::internal::(anonymous namespace)::Comparator::Input"* %0, %"class.v8::internal::(anonymous namespace)::Comparator::Input"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::(anonymous namespace)::Comparator::Input"* %0 to i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)***
  %12 = load i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)**, i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)*** %11, align 8
  %13 = load i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)*, i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)** %12, align 8
  %14 = call i32 %13(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* %0) #14
  store i32 %14, i32* %10, align 8
  %15 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 3
  %16 = load i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)**, i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)*** %11, align 8
  %17 = getelementptr inbounds i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)*, i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)** %16, i64 1
  %18 = load i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)*, i32 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*)** %17, align 8
  %19 = call i32 %18(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* %0) #14
  store i32 %19, i32* %15, align 4
  %20 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 4
  store i32 0, i32* %20, align 8
  %21 = load i32, i32* %10, align 8
  %22 = icmp slt i32 %19, %21
  %23 = select i1 %22, i32 %19, i32 %21
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %2, %34
  %26 = phi i32 [ %35, %34 ], [ 0, %2 ]
  %27 = load %"class.v8::internal::(anonymous namespace)::Comparator::Input"*, %"class.v8::internal::(anonymous namespace)::Comparator::Input"** %5, align 8
  %28 = bitcast %"class.v8::internal::(anonymous namespace)::Comparator::Input"* %27 to i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)***
  %29 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)**, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %29, i64 2
  %31 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %30, align 8
  %32 = call zeroext i1 %31(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* %27, i32 %26, i32 %26) #14
  %33 = load i32, i32* %20, align 8
  br i1 %32, label %34, label %37

34:                                               ; preds = %25
  %35 = add nsw i32 %33, 1
  store i32 %35, i32* %20, align 8
  %36 = icmp slt i32 %35, %23
  br i1 %36, label %25, label %37

37:                                               ; preds = %34, %25
  %38 = phi i32 [ %33, %25 ], [ %35, %34 ]
  %39 = load i32, i32* %10, align 8
  %40 = load i32, i32* %15, align 4
  br label %41

41:                                               ; preds = %37, %2
  %42 = phi i32 [ %38, %37 ], [ 0, %2 ]
  %43 = phi i32 [ %40, %37 ], [ %19, %2 ]
  %44 = phi i32 [ %39, %37 ], [ %21, %2 ]
  %45 = icmp sgt i32 %44, %42
  %46 = icmp sgt i32 %43, %42
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %140

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 1, i32 0
  %50 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1657"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::__tree.1641", %"class.std::__1::__tree.1641"* %49, i64 0, i32 0
  %53 = bitcast %"class.std::__1::__tree.1641"* %49 to i64*
  %54 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %55

55:                                               ; preds = %135, %48
  %56 = phi i32 [ %43, %48 ], [ %60, %135 ]
  %57 = phi i32 [ %44, %48 ], [ %59, %135 ]
  %58 = load %"class.v8::internal::(anonymous namespace)::Comparator::Input"*, %"class.v8::internal::(anonymous namespace)::Comparator::Input"** %5, align 8
  %59 = add nsw i32 %57, -1
  %60 = add nsw i32 %56, -1
  %61 = bitcast %"class.v8::internal::(anonymous namespace)::Comparator::Input"* %58 to i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)***
  %62 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)**, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %62, i64 2
  %64 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %63, align 8
  %65 = call zeroext i1 %64(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* %58, i32 %59, i32 %60) #14
  br i1 %65, label %68, label %66

66:                                               ; preds = %55
  %67 = load i32, i32* %20, align 8
  br label %140

68:                                               ; preds = %55
  %69 = zext i32 %60 to i64
  %70 = shl nuw i64 %69, 32
  %71 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %50, align 8
  %72 = icmp eq %"class.std::__1::__tree_node.1657"* %71, null
  br i1 %72, label %105, label %73

73:                                               ; preds = %68, %101
  %74 = phi %"class.std::__1::__tree_node.1657"* [ %104, %101 ], [ %71, %68 ]
  %75 = phi %"class.std::__1::__tree_node_base"** [ %103, %101 ], [ %6, %68 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %57
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = icmp slt i32 %77, %59
  br i1 %80, label %93, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 1, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, %56
  br i1 %84, label %91, label %85

85:                                               ; preds = %81, %73
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %89, label %101

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 0, i32 0
  br label %105

91:                                               ; preds = %81
  %92 = icmp slt i32 %83, %60
  br i1 %92, label %93, label %99

93:                                               ; preds = %91, %79
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 0, i32 1
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %97, label %101

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 0, i32 0
  br label %105

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %74, i64 0, i32 0, i32 0
  br label %105

101:                                              ; preds = %93, %85
  %102 = phi %"class.std::__1::__tree_node_base"* [ %87, %85 ], [ %95, %93 ]
  %103 = phi %"class.std::__1::__tree_node_base"** [ %86, %85 ], [ %94, %93 ]
  %104 = bitcast %"class.std::__1::__tree_node_base"* %102 to %"class.std::__1::__tree_node.1657"*
  br label %73

105:                                              ; preds = %99, %97, %89, %68
  %106 = phi %"class.std::__1::__tree_end_node"* [ %90, %89 ], [ %98, %97 ], [ %100, %99 ], [ %7, %68 ]
  %107 = phi %"class.std::__1::__tree_node_base"** [ %86, %89 ], [ %94, %97 ], [ %75, %99 ], [ %51, %68 ]
  %108 = bitcast %"class.std::__1::__tree_node_base"** %107 to %"class.std::__1::__tree_node.1657"**
  %109 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node.1657"* %109, null
  br i1 %110, label %111, label %135

111:                                              ; preds = %105
  %112 = call i8* @_Znwm(i64 40) #16, !noalias !26
  %113 = getelementptr inbounds i8, i8* %112, i64 28
  %114 = bitcast i8* %113 to i64*
  %115 = zext i32 %59 to i64
  %116 = or i64 %70, %115
  store i64 %116, i64* %114, align 4, !noalias !26
  %117 = getelementptr inbounds i8, i8* %112, i64 36
  %118 = bitcast i8* %117 to i32*
  store i32 0, i32* %118, align 4, !noalias !26
  %119 = bitcast i8* %112 to %"class.std::__1::__tree_node_base"*
  %120 = getelementptr inbounds i8, i8* %112, i64 16
  %121 = bitcast i8* %120 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %121, align 8
  %122 = bitcast %"class.std::__1::__tree_node_base"** %107 to i8**
  store i8* %112, i8** %122, align 8
  %123 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %111
  %128 = ptrtoint %"class.std::__1::__tree_node_base"* %125 to i64
  store i64 %128, i64* %53, align 8
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  br label %130

130:                                              ; preds = %127, %111
  %131 = phi %"class.std::__1::__tree_node_base"* [ %119, %111 ], [ %129, %127 ]
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %132, %"class.std::__1::__tree_node_base"* %131) #14
  %133 = load i64, i64* %54, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %54, align 8
  br label %135

135:                                              ; preds = %130, %105
  %136 = load i32, i32* %20, align 8
  %137 = icmp sgt i32 %59, %136
  %138 = icmp sgt i32 %60, %136
  %139 = and i1 %137, %138
  br i1 %139, label %55, label %140

140:                                              ; preds = %135, %41, %66
  %141 = phi i32 [ %42, %41 ], [ %67, %66 ], [ %136, %135 ]
  %142 = call fastcc i32 @_ZN2v88internal12_GLOBAL__N_111Differencer15CompareUpToTailEii(%"class.v8::internal::(anonymous namespace)::Differencer"* nonnull %3, i32 %141, i32 %141) #14
  %143 = load i32, i32* %20, align 8
  %144 = load i32, i32* %10, align 8
  %145 = icmp sgt i32 %144, %143
  %146 = load i32, i32* %15, align 4
  br i1 %145, label %147, label %259

147:                                              ; preds = %140
  %148 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1657"**
  %149 = bitcast %"class.v8::internal::(anonymous namespace)::Comparator::Output"* %1 to void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)***
  br label %150

150:                                              ; preds = %240, %147
  %151 = phi i32 [ %146, %147 ], [ %241, %240 ]
  %152 = phi i32 [ %144, %147 ], [ %242, %240 ]
  %153 = phi i32 [ %146, %147 ], [ %243, %240 ]
  %154 = phi i32 [ %144, %147 ], [ %244, %240 ]
  %155 = phi i32 [ %143, %147 ], [ %251, %240 ]
  %156 = phi i32 [ %143, %147 ], [ %250, %240 ]
  %157 = phi i8 [ 0, %147 ], [ %249, %240 ]
  %158 = phi i32 [ %143, %147 ], [ %248, %240 ]
  %159 = phi i32 [ %143, %147 ], [ %247, %240 ]
  %160 = phi i32 [ -1, %147 ], [ %246, %240 ]
  %161 = phi i32 [ -1, %147 ], [ %245, %240 ]
  %162 = icmp sgt i32 %153, %156
  br i1 %162, label %163, label %253

163:                                              ; preds = %150
  %164 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %148, align 8
  %165 = icmp eq %"class.std::__1::__tree_node.1657"* %164, null
  br i1 %165, label %209, label %166

166:                                              ; preds = %163, %186
  %167 = phi %"class.std::__1::__tree_end_node"* [ %188, %186 ], [ %7, %163 ]
  %168 = phi %"class.std::__1::__tree_node.1657"* [ %189, %186 ], [ %164, %163 ]
  %169 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %168, i64 0, i32 1, i32 0, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, %155
  br i1 %171, label %172, label %175

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %168, i64 0, i32 0, i32 1
  %174 = bitcast %"class.std::__1::__tree_node_base"** %173 to %"class.std::__1::__tree_node.1657"**
  br label %186

175:                                              ; preds = %166
  %176 = icmp sgt i32 %170, %155
  br i1 %176, label %183, label %177

177:                                              ; preds = %175
  %178 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %168, i64 0, i32 1, i32 0, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %179, %156
  %181 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %168, i64 0, i32 0, i32 1
  %182 = bitcast %"class.std::__1::__tree_node_base"** %181 to %"class.std::__1::__tree_node.1657"**
  br i1 %180, label %186, label %183

183:                                              ; preds = %177, %175
  %184 = bitcast %"class.std::__1::__tree_node.1657"* %168 to %"class.std::__1::__tree_node.1657"**
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %168, i64 0, i32 0, i32 0
  br label %186

186:                                              ; preds = %183, %177, %172
  %187 = phi %"class.std::__1::__tree_node.1657"** [ %184, %183 ], [ %174, %172 ], [ %182, %177 ]
  %188 = phi %"class.std::__1::__tree_end_node"* [ %185, %183 ], [ %167, %172 ], [ %167, %177 ]
  %189 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %187, align 8
  %190 = icmp eq %"class.std::__1::__tree_node.1657"* %189, null
  br i1 %190, label %191, label %166

191:                                              ; preds = %186
  %192 = icmp eq %"class.std::__1::__tree_end_node"* %188, %7
  br i1 %192, label %209, label %193

193:                                              ; preds = %191
  %194 = bitcast %"class.std::__1::__tree_end_node"* %188 to %"class.std::__1::__tree_node.1657"*
  %195 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %194, i64 0, i32 1, i32 0, i32 0, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp sgt i32 %196, %155
  br i1 %197, label %209, label %198

198:                                              ; preds = %193
  %199 = icmp slt i32 %196, %155
  br i1 %199, label %205, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %188, i64 4
  %202 = bitcast %"class.std::__1::__tree_end_node"* %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, %156
  br i1 %204, label %209, label %205

205:                                              ; preds = %200, %198
  %206 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %194, i64 0, i32 1, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = and i32 %207, 3
  switch i32 %208, label %239 [
    i32 0, label %209
    i32 1, label %225
    i32 2, label %232
    i32 3, label %232
  ]

209:                                              ; preds = %205, %200, %193, %191, %163
  %210 = icmp eq i8 %157, 0
  br i1 %210, label %218, label %211

211:                                              ; preds = %209
  %212 = sub nsw i32 %158, %160
  %213 = sub nsw i32 %159, %161
  %214 = load void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)**, void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)*** %149, align 8
  %215 = load void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)** %214, align 8
  call void %215(%"class.v8::internal::(anonymous namespace)::Comparator::Output"* %1, i32 %160, i32 %161, i32 %212, i32 %213) #14
  %216 = load i32, i32* %10, align 8
  %217 = load i32, i32* %15, align 4
  br label %218

218:                                              ; preds = %211, %209
  %219 = phi i32 [ %151, %209 ], [ %217, %211 ]
  %220 = phi i32 [ %152, %209 ], [ %216, %211 ]
  %221 = add nsw i32 %158, 1
  %222 = add nsw i32 %159, 1
  %223 = add nsw i32 %155, 1
  %224 = add nsw i32 %156, 1
  br label %240

225:                                              ; preds = %205
  %226 = icmp eq i8 %157, 0
  %227 = select i1 %226, i32 %159, i32 %161
  %228 = select i1 %226, i32 %158, i32 %160
  %229 = select i1 %226, i8 1, i8 %157
  %230 = add nsw i32 %158, 1
  %231 = add nsw i32 %155, 1
  br label %240

232:                                              ; preds = %205, %205
  %233 = icmp eq i8 %157, 0
  %234 = select i1 %233, i32 %159, i32 %161
  %235 = select i1 %233, i32 %158, i32 %160
  %236 = select i1 %233, i8 1, i8 %157
  %237 = add nsw i32 %159, 1
  %238 = add nsw i32 %156, 1
  br label %240

239:                                              ; preds = %205
  unreachable

240:                                              ; preds = %232, %225, %218
  %241 = phi i32 [ %151, %232 ], [ %151, %225 ], [ %219, %218 ]
  %242 = phi i32 [ %152, %232 ], [ %152, %225 ], [ %220, %218 ]
  %243 = phi i32 [ %153, %232 ], [ %153, %225 ], [ %219, %218 ]
  %244 = phi i32 [ %154, %232 ], [ %154, %225 ], [ %220, %218 ]
  %245 = phi i32 [ %234, %232 ], [ %227, %225 ], [ %161, %218 ]
  %246 = phi i32 [ %235, %232 ], [ %228, %225 ], [ %160, %218 ]
  %247 = phi i32 [ %237, %232 ], [ %159, %225 ], [ %222, %218 ]
  %248 = phi i32 [ %158, %232 ], [ %230, %225 ], [ %221, %218 ]
  %249 = phi i8 [ %236, %232 ], [ %229, %225 ], [ 0, %218 ]
  %250 = phi i32 [ %238, %232 ], [ %156, %225 ], [ %224, %218 ]
  %251 = phi i32 [ %155, %232 ], [ %231, %225 ], [ %223, %218 ]
  %252 = icmp sgt i32 %244, %251
  br i1 %252, label %150, label %259

253:                                              ; preds = %150
  %254 = icmp eq i8 %157, 0
  %255 = select i1 %254, i32 %159, i32 %161
  %256 = select i1 %254, i32 %158, i32 %160
  %257 = sub i32 %154, %155
  %258 = add i32 %257, %158
  br label %275

259:                                              ; preds = %240, %140
  %260 = phi i32 [ -1, %140 ], [ %245, %240 ]
  %261 = phi i32 [ -1, %140 ], [ %246, %240 ]
  %262 = phi i32 [ %143, %140 ], [ %247, %240 ]
  %263 = phi i32 [ %143, %140 ], [ %248, %240 ]
  %264 = phi i8 [ 0, %140 ], [ %249, %240 ]
  %265 = phi i32 [ %143, %140 ], [ %250, %240 ]
  %266 = phi i32 [ %146, %140 ], [ %243, %240 ]
  %267 = icmp eq i32 %266, %265
  %268 = icmp eq i8 %264, 0
  br i1 %267, label %274, label %269

269:                                              ; preds = %259
  %270 = select i1 %268, i32 %262, i32 %260
  %271 = select i1 %268, i32 %263, i32 %261
  %272 = sub i32 %262, %265
  %273 = add i32 %272, %266
  br label %275

274:                                              ; preds = %259
  br i1 %268, label %285, label %275

275:                                              ; preds = %274, %269, %253
  %276 = phi i32 [ %263, %274 ], [ %263, %269 ], [ %258, %253 ]
  %277 = phi i32 [ %262, %274 ], [ %273, %269 ], [ %159, %253 ]
  %278 = phi i32 [ %261, %274 ], [ %271, %269 ], [ %256, %253 ]
  %279 = phi i32 [ %260, %274 ], [ %270, %269 ], [ %255, %253 ]
  %280 = sub nsw i32 %276, %278
  %281 = sub nsw i32 %277, %279
  %282 = bitcast %"class.v8::internal::(anonymous namespace)::Comparator::Output"* %1 to void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)***
  %283 = load void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)**, void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)*** %282, align 8
  %284 = load void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)*, void (%"class.v8::internal::(anonymous namespace)::Comparator::Output"*, i32, i32, i32, i32)** %283, align 8
  call void %284(%"class.v8::internal::(anonymous namespace)::Comparator::Output"* %1, i32 %278, i32 %279, i32 %280, i32 %281) #14
  br label %285

285:                                              ; preds = %274, %275
  %286 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %3, i64 0, i32 1, i32 0
  %287 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1657"**
  %288 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %287, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.1641"* %286, %"class.std::__1::__tree_node.1657"* %288) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_110Comparator6OutputD2Ev(%"class.v8::internal::(anonymous namespace)::Comparator::Output"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal8LiveEdit17TranslatePositionERKNSt3__16vectorINS0_17SourceChangeRangeENS2_9allocatorIS4_EEEEi(%"class.std::__1::vector.1189"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %5, align 8
  %7 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %4 to i64
  %8 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %6 to i64
  %9 = sub i64 %8, %7
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %2
  %12 = ashr exact i64 %9, 4
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"struct.v8::internal::SourceChangeRange"* [ %25, %13 ], [ %4, %11 ]
  %15 = phi i64 [ %24, %13 ], [ %12, %11 ]
  %16 = lshr i64 %15, 1
  %17 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %14, i64 1
  %18 = getelementptr %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %14, i64 %16, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %1
  %21 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %17, i64 %16
  %22 = xor i64 %16, -1
  %23 = add i64 %15, %22
  %24 = select i1 %20, i64 %23, i64 %16
  %25 = select i1 %20, %"struct.v8::internal::SourceChangeRange"* %21, %"struct.v8::internal::SourceChangeRange"* %14
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %13

27:                                               ; preds = %13, %2
  %28 = phi %"struct.v8::internal::SourceChangeRange"* [ %4, %2 ], [ %25, %13 ]
  %29 = icmp eq %"struct.v8::internal::SourceChangeRange"* %28, %6
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %1
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %28, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  br label %46

37:                                               ; preds = %27, %30
  %38 = icmp eq %"struct.v8::internal::SourceChangeRange"* %28, %4
  br i1 %38, label %46, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %28, i64 -1, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %28, i64 -1, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %41, %1
  %45 = sub i32 %44, %43
  br label %46

46:                                               ; preds = %37, %39, %34
  %47 = phi i32 [ %36, %34 ], [ %45, %39 ], [ %1, %37 ]
  ret i32 %47
}

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare i64* @_ZN2v88internal8Compiler18CompileForLiveEditEPNS0_9ParseInfoENS0_6HandleINS0_6ScriptEEEPNS0_7IsolateE(%"class.v8::internal::ParseInfo"*, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal7parsing12ParseProgramEPNS0_9ParseInfoENS0_6HandleINS0_6ScriptEEEPNS0_7IsolateENS1_20ReportStatisticsModeE(%"class.v8::internal::ParseInfo"*, i64*, %"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal30PendingCompilationErrorHandler13PrepareErrorsINS0_7IsolateEEEvPT_PNS0_15AstValueFactoryE(%"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::AstValueFactory"*) local_unnamed_addr #2

declare void @_ZNK2v88internal30PendingCompilationErrorHandler12ReportErrorsEPNS0_7IsolateENS0_6HandleINS0_6ScriptEEE(%"class.v8::internal::PendingCompilationErrorHandler"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal7Isolate27OptionalRescheduleExceptionEb(%"class.v8::internal::Isolate"*, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::Message"* @_ZNK2v88TryCatch7MessageEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v87Message3GetEv(%"class.v8::Message"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal15JSMessageObject13GetLineNumberEv(%"class.v8::internal::JSMessageObject"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal15JSMessageObject15GetColumnNumberEv(%"class.v8::internal::JSMessageObject"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::AstNode"*) unnamed_addr #0 align 2 {
  %3 = getelementptr %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  br label %5

5:                                                ; preds = %47, %2
  %6 = phi %"class.v8::internal::AstNode"* [ %1, %2 ], [ %48, %47 ]
  %7 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 63
  switch i8 %10, label %1722 [
    i8 54, label %1702
    i8 1, label %11
    i8 2, label %24
    i8 3, label %50
    i8 4, label %74
    i8 5, label %138
    i8 6, label %174
    i8 7, label %210
    i8 8, label %289
    i8 9, label %357
    i8 55, label %1721
    i8 11, label %370
    i8 12, label %383
    i8 53, label %1683
    i8 51, label %1664
    i8 15, label %419
    i8 16, label %432
    i8 17, label %456
    i8 18, label %480
    i8 50, label %1645
    i8 20, label %504
    i8 21, label %556
    i8 48, label %1591
    i8 23, label %627
    i8 24, label %685
    i8 25, label %725
    i8 26, label %761
    i8 27, label %780
    i8 28, label %816
    i8 29, label %875
    i8 30, label %929
    i8 31, label %983
    i8 32, label %1023
    i8 33, label %1215
    i8 34, label %1251
    i8 35, label %1253
    i8 36, label %1305
    i8 45, label %1572
    i8 38, label %1324
    i8 44, label %1536
    i8 40, label %1478
    i8 43, label %1517
  ]

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %13 = bitcast %"class.v8::internal::AstNode"* %12 to %"class.v8::internal::FunctionLiteral"**
  %14 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %14, i64 0, i32 0, i32 0
  %16 = load i8, i8* %3, align 8, !range !18
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %1722

18:                                               ; preds = %11
  %19 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %20 = load i64, i64* %4, align 8
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i8 1, i8* %3, align 8
  br label %1722

23:                                               ; preds = %18
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %15) #14
  br label %1722

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %26 = bitcast %"class.v8::internal::AstNode"* %25 to %"class.v8::internal::Statement"**
  %27 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %27, i64 0, i32 0
  %29 = load i8, i8* %3, align 8, !range !18
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %1722

31:                                               ; preds = %24
  %32 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %33 = load i64, i64* %4, align 8
  %34 = icmp ult i64 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  store i8 1, i8* %3, align 8
  br label %1722

36:                                               ; preds = %31
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %28) #14
  %37 = load i8, i8* %3, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %1722

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %41 = bitcast %"class.v8::internal::AstNode"* %40 to %"class.v8::internal::Expression"**
  %42 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %42, i64 0, i32 0
  %44 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %45 = load i64, i64* %4, align 8
  %46 = icmp ult i64 %44, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %39, %65, %165, %201, %410, %447, %471, %495
  %48 = phi %"class.v8::internal::AstNode"* [ %43, %39 ], [ %69, %65 ], [ %169, %165 ], [ %205, %201 ], [ %414, %410 ], [ %451, %447 ], [ %475, %471 ], [ %499, %495 ]
  br label %5

49:                                               ; preds = %39
  store i8 1, i8* %3, align 8
  br label %1722

50:                                               ; preds = %5
  %51 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %52 = bitcast %"class.v8::internal::AstNode"* %51 to %"class.v8::internal::Expression"**
  %53 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %53, i64 0, i32 0
  %55 = load i8, i8* %3, align 8, !range !18
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %1722

57:                                               ; preds = %50
  %58 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %59 = load i64, i64* %4, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  store i8 1, i8* %3, align 8
  br label %1722

62:                                               ; preds = %57
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %54) #14
  %63 = load i8, i8* %3, align 8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %1722

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %67 = bitcast %"class.v8::internal::AstNode"* %66 to %"class.v8::internal::Statement"**
  %68 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %68, i64 0, i32 0
  %70 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %71 = load i64, i64* %4, align 8
  %72 = icmp ult i64 %70, %71
  br i1 %72, label %73, label %47

73:                                               ; preds = %65
  store i8 1, i8* %3, align 8
  br label %1722

74:                                               ; preds = %5
  %75 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %76 = bitcast %"class.v8::internal::AstNode"* %75 to %"class.v8::internal::Statement"**
  %77 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %76, align 8
  %78 = icmp eq %"class.v8::internal::Statement"* %77, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %77, i64 0, i32 0
  %81 = load i8, i8* %3, align 8, !range !18
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %1722

83:                                               ; preds = %79
  %84 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %85 = load i64, i64* %4, align 8
  %86 = icmp ult i64 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  store i8 1, i8* %3, align 8
  br label %1722

88:                                               ; preds = %83
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %80) #14
  %89 = load i8, i8* %3, align 8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %1722

91:                                               ; preds = %88, %74
  %92 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %93 = bitcast %"class.v8::internal::AstNode"* %92 to %"class.v8::internal::Expression"**
  %94 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %93, align 8
  %95 = icmp eq %"class.v8::internal::Expression"* %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %94, i64 0, i32 0
  %98 = load i8, i8* %3, align 8, !range !18
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %1722

100:                                              ; preds = %96
  %101 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %102 = load i64, i64* %4, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %100
  store i8 1, i8* %3, align 8
  br label %1722

105:                                              ; preds = %100
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %97) #14
  %106 = load i8, i8* %3, align 8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %1722

108:                                              ; preds = %105, %91
  %109 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 4
  %110 = bitcast %"class.v8::internal::AstNode"* %109 to %"class.v8::internal::Statement"**
  %111 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %110, align 8
  %112 = icmp eq %"class.v8::internal::Statement"* %111, null
  br i1 %112, label %125, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %111, i64 0, i32 0
  %115 = load i8, i8* %3, align 8, !range !18
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %1722

117:                                              ; preds = %113
  %118 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %119 = load i64, i64* %4, align 8
  %120 = icmp ult i64 %118, %119
  br i1 %120, label %121, label %122

121:                                              ; preds = %117
  store i8 1, i8* %3, align 8
  br label %1722

122:                                              ; preds = %117
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %114) #14
  %123 = load i8, i8* %3, align 8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %128, label %1722

125:                                              ; preds = %108
  %126 = load i8, i8* %3, align 8, !range !18
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %1722

128:                                              ; preds = %122, %125
  %129 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %130 = bitcast %"class.v8::internal::AstNode"* %129 to %"class.v8::internal::Statement"**
  %131 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %130, align 8
  %132 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %133 = load i64, i64* %4, align 8
  %134 = icmp ult i64 %132, %133
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  store i8 1, i8* %3, align 8
  br label %1722

136:                                              ; preds = %128
  %137 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %131, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %137) #14
  br label %1722

138:                                              ; preds = %5
  %139 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %140 = bitcast %"class.v8::internal::AstNode"* %139 to %"class.v8::internal::Expression"**
  %141 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %141, i64 0, i32 0
  %143 = load i8, i8* %3, align 8, !range !18
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %1722

145:                                              ; preds = %138
  %146 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %147 = load i64, i64* %4, align 8
  %148 = icmp ult i64 %146, %147
  br i1 %148, label %149, label %150

149:                                              ; preds = %145
  store i8 1, i8* %3, align 8
  br label %1722

150:                                              ; preds = %145
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %142) #14
  %151 = load i8, i8* %3, align 8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %1722

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %155 = bitcast %"class.v8::internal::AstNode"* %154 to %"class.v8::internal::Expression"**
  %156 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %155, align 8
  %157 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %158 = load i64, i64* %4, align 8
  %159 = icmp ult i64 %157, %158
  br i1 %159, label %160, label %161

160:                                              ; preds = %153
  store i8 1, i8* %3, align 8
  br label %1722

161:                                              ; preds = %153
  %162 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %156, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %162) #14
  %163 = load i8, i8* %3, align 8
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %1722

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %167 = bitcast %"class.v8::internal::AstNode"* %166 to %"class.v8::internal::Statement"**
  %168 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %168, i64 0, i32 0
  %170 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %171 = load i64, i64* %4, align 8
  %172 = icmp ult i64 %170, %171
  br i1 %172, label %173, label %47

173:                                              ; preds = %165
  store i8 1, i8* %3, align 8
  br label %1722

174:                                              ; preds = %5
  %175 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %176 = bitcast %"class.v8::internal::AstNode"* %175 to %"class.v8::internal::Expression"**
  %177 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %177, i64 0, i32 0
  %179 = load i8, i8* %3, align 8, !range !18
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %1722

181:                                              ; preds = %174
  %182 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %183 = load i64, i64* %4, align 8
  %184 = icmp ult i64 %182, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %181
  store i8 1, i8* %3, align 8
  br label %1722

186:                                              ; preds = %181
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %178) #14
  %187 = load i8, i8* %3, align 8
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %1722

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %191 = bitcast %"class.v8::internal::AstNode"* %190 to %"class.v8::internal::Expression"**
  %192 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %191, align 8
  %193 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %194 = load i64, i64* %4, align 8
  %195 = icmp ult i64 %193, %194
  br i1 %195, label %196, label %197

196:                                              ; preds = %189
  store i8 1, i8* %3, align 8
  br label %1722

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %192, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %198) #14
  %199 = load i8, i8* %3, align 8
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %1722

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %203 = bitcast %"class.v8::internal::AstNode"* %202 to %"class.v8::internal::Statement"**
  %204 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %204, i64 0, i32 0
  %206 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %207 = load i64, i64* %4, align 8
  %208 = icmp ult i64 %206, %207
  br i1 %208, label %209, label %47

209:                                              ; preds = %201
  store i8 1, i8* %3, align 8
  br label %1722

210:                                              ; preds = %5
  %211 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %212 = bitcast %"class.v8::internal::AstNode"* %211 to %"class.v8::internal::Scope"**
  %213 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %212, align 8
  %214 = icmp eq %"class.v8::internal::Scope"* %213, null
  br i1 %214, label %257, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %217 = load i32, i32* %216, align 8
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %216, align 8
  %219 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %212, align 8
  %220 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %219, i64 0, i32 6, i32 0
  %221 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %219, i64 0, i32 6, i32 1
  %222 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %221, align 8
  %223 = icmp eq %"class.v8::internal::Declaration"** %220, %222
  %224 = load i8, i8* %3, align 8
  br i1 %223, label %252, label %225

225:                                              ; preds = %215
  %226 = icmp eq i8 %224, 0
  br label %227

227:                                              ; preds = %225, %245
  %228 = phi i8 [ %224, %225 ], [ %242, %245 ]
  %229 = phi i8 [ %224, %225 ], [ 0, %245 ]
  %230 = phi i1 [ %226, %225 ], [ true, %245 ]
  %231 = phi %"class.v8::internal::Declaration"** [ %220, %225 ], [ %247, %245 ]
  %232 = bitcast %"class.v8::internal::Declaration"** %231 to %"class.v8::internal::AstNode"**
  %233 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %232, align 8
  br i1 %230, label %234, label %241

234:                                              ; preds = %227
  %235 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %236 = load i64, i64* %4, align 8
  %237 = icmp ult i64 %235, %236
  br i1 %237, label %238, label %239

238:                                              ; preds = %234
  store i8 1, i8* %3, align 8
  br label %249

239:                                              ; preds = %234
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %233) #14
  %240 = load i8, i8* %3, align 8
  br label %241

241:                                              ; preds = %227, %239
  %242 = phi i8 [ %228, %227 ], [ %240, %239 ]
  %243 = phi i8 [ %229, %227 ], [ %240, %239 ]
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %245, label %249

245:                                              ; preds = %241
  %246 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %231, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %246, i64 0, i32 2
  %248 = icmp eq %"class.v8::internal::Declaration"** %247, %222
  br i1 %248, label %249, label %227

249:                                              ; preds = %245, %241, %238
  %250 = phi i8 [ 1, %238 ], [ %242, %241 ], [ %242, %245 ]
  %251 = load i32, i32* %216, align 8
  br label %252

252:                                              ; preds = %215, %249
  %253 = phi i8 [ %250, %249 ], [ %224, %215 ]
  %254 = phi i32 [ %251, %249 ], [ %218, %215 ]
  %255 = add nsw i32 %254, -1
  store i32 %255, i32* %216, align 8
  %256 = icmp eq i8 %253, 0
  br i1 %256, label %257, label %1722

257:                                              ; preds = %252, %210
  %258 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %261, label %1722

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %263 = bitcast %"class.v8::internal::AstNode"* %262 to %"class.v8::internal::Statement"***
  %264 = load i8, i8* %3, align 8, !range !18
  %265 = icmp eq i8 %264, 0
  br label %270

266:                                              ; preds = %285
  %267 = load i32, i32* %258, align 4
  %268 = sext i32 %267 to i64
  %269 = icmp slt i64 %288, %268
  br i1 %269, label %270, label %1722

270:                                              ; preds = %261, %266
  %271 = phi i8 [ %264, %261 ], [ 0, %266 ]
  %272 = phi i1 [ %265, %261 ], [ true, %266 ]
  %273 = phi i64 [ 0, %261 ], [ %288, %266 ]
  %274 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %263, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %274, i64 %273
  %276 = bitcast %"class.v8::internal::Statement"** %275 to %"class.v8::internal::AstNode"**
  %277 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %276, align 8
  br i1 %272, label %278, label %285

278:                                              ; preds = %270
  %279 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %280 = load i64, i64* %4, align 8
  %281 = icmp ult i64 %279, %280
  br i1 %281, label %282, label %283

282:                                              ; preds = %278
  store i8 1, i8* %3, align 8
  br label %1722

283:                                              ; preds = %278
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %277) #14
  %284 = load i8, i8* %3, align 8
  br label %285

285:                                              ; preds = %270, %283
  %286 = phi i8 [ %271, %270 ], [ %284, %283 ]
  %287 = icmp eq i8 %286, 0
  %288 = add nuw nsw i64 %273, 1
  br i1 %287, label %266, label %1722

289:                                              ; preds = %5
  %290 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %291 = bitcast %"class.v8::internal::AstNode"* %290 to %"class.v8::internal::Expression"**
  %292 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %292, i64 0, i32 0
  %294 = load i8, i8* %3, align 8, !range !18
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %1722

296:                                              ; preds = %289
  %297 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %298 = load i64, i64* %4, align 8
  %299 = icmp ult i64 %297, %298
  br i1 %299, label %300, label %301

300:                                              ; preds = %296
  store i8 1, i8* %3, align 8
  br label %1722

301:                                              ; preds = %296
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %293) #14
  %302 = load i8, i8* %3, align 8
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %1722

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = icmp sgt i32 %306, 0
  br i1 %307, label %308, label %1722

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %310 = bitcast %"class.v8::internal::AstNode"* %309 to %"class.v8::internal::CaseClause"***
  br label %316

311:                                              ; preds = %339, %333
  %312 = add nuw nsw i64 %317, 1
  %313 = load i32, i32* %305, align 4
  %314 = sext i32 %313 to i64
  %315 = icmp slt i64 %312, %314
  br i1 %315, label %316, label %1722

316:                                              ; preds = %308, %311
  %317 = phi i64 [ 0, %308 ], [ %312, %311 ]
  %318 = load %"class.v8::internal::CaseClause"**, %"class.v8::internal::CaseClause"*** %310, align 8
  %319 = getelementptr inbounds %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %318, i64 %317
  %320 = load %"class.v8::internal::CaseClause"*, %"class.v8::internal::CaseClause"** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %320, i64 0, i32 0
  %322 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %321, align 8
  %323 = icmp eq %"class.v8::internal::Expression"* %322, null
  br i1 %323, label %333, label %324

324:                                              ; preds = %316
  %325 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %326 = load i64, i64* %4, align 8
  %327 = icmp ult i64 %325, %326
  br i1 %327, label %328, label %329

328:                                              ; preds = %324
  store i8 1, i8* %3, align 8
  br label %1722

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %322, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %330) #14
  %331 = load i8, i8* %3, align 8
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %333, label %1722

333:                                              ; preds = %329, %316
  %334 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %320, i64 0, i32 1, i32 2
  %335 = load i32, i32* %334, align 4
  %336 = icmp sgt i32 %335, 0
  br i1 %336, label %337, label %311

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"class.v8::internal::CaseClause", %"class.v8::internal::CaseClause"* %320, i64 0, i32 1, i32 0
  br label %343

339:                                              ; preds = %353
  %340 = load i32, i32* %334, align 4
  %341 = sext i32 %340 to i64
  %342 = icmp slt i64 %356, %341
  br i1 %342, label %343, label %311

343:                                              ; preds = %339, %337
  %344 = phi i64 [ 0, %337 ], [ %356, %339 ]
  %345 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %338, align 8
  %346 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %345, i64 %344
  %347 = bitcast %"class.v8::internal::Statement"** %346 to %"class.v8::internal::AstNode"**
  %348 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %347, align 8
  %349 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %350 = load i64, i64* %4, align 8
  %351 = icmp ult i64 %349, %350
  br i1 %351, label %352, label %353

352:                                              ; preds = %343
  store i8 1, i8* %3, align 8
  br label %1722

353:                                              ; preds = %343
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %348) #14
  %354 = load i8, i8* %3, align 8
  %355 = icmp eq i8 %354, 0
  %356 = add nuw nsw i64 %344, 1
  br i1 %355, label %339, label %1722

357:                                              ; preds = %5
  %358 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %359 = bitcast %"class.v8::internal::AstNode"* %358 to %"class.v8::internal::Expression"**
  %360 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %359, align 8
  %361 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %360, i64 0, i32 0
  %362 = load i8, i8* %3, align 8, !range !18
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %364, label %1722

364:                                              ; preds = %357
  %365 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %366 = load i64, i64* %4, align 8
  %367 = icmp ult i64 %365, %366
  br i1 %367, label %368, label %369

368:                                              ; preds = %364
  store i8 1, i8* %3, align 8
  br label %1722

369:                                              ; preds = %364
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %361) #14
  br label %1722

370:                                              ; preds = %5
  %371 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %372 = bitcast %"class.v8::internal::AstNode"* %371 to %"class.v8::internal::Statement"**
  %373 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %372, align 8
  %374 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %373, i64 0, i32 0
  %375 = load i8, i8* %3, align 8, !range !18
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %377, label %1722

377:                                              ; preds = %370
  %378 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %379 = load i64, i64* %4, align 8
  %380 = icmp ult i64 %378, %379
  br i1 %380, label %381, label %382

381:                                              ; preds = %377
  store i8 1, i8* %3, align 8
  br label %1722

382:                                              ; preds = %377
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %374) #14
  br label %1722

383:                                              ; preds = %5
  %384 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %385 = bitcast %"class.v8::internal::AstNode"* %384 to %"class.v8::internal::Expression"**
  %386 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %385, align 8
  %387 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %386, i64 0, i32 0
  %388 = load i8, i8* %3, align 8, !range !18
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %390, label %1722

390:                                              ; preds = %383
  %391 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %392 = load i64, i64* %4, align 8
  %393 = icmp ult i64 %391, %392
  br i1 %393, label %394, label %395

394:                                              ; preds = %390
  store i8 1, i8* %3, align 8
  br label %1722

395:                                              ; preds = %390
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %387) #14
  %396 = load i8, i8* %3, align 8
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %398, label %1722

398:                                              ; preds = %395
  %399 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %400 = bitcast %"class.v8::internal::AstNode"* %399 to %"class.v8::internal::Statement"**
  %401 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %400, align 8
  %402 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %403 = load i64, i64* %4, align 8
  %404 = icmp ult i64 %402, %403
  br i1 %404, label %405, label %406

405:                                              ; preds = %398
  store i8 1, i8* %3, align 8
  br label %1722

406:                                              ; preds = %398
  %407 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %401, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %407) #14
  %408 = load i8, i8* %3, align 8
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %410, label %1722

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %412 = bitcast %"class.v8::internal::AstNode"* %411 to %"class.v8::internal::Statement"**
  %413 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %412, align 8
  %414 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %413, i64 0, i32 0
  %415 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %416 = load i64, i64* %4, align 8
  %417 = icmp ult i64 %415, %416
  br i1 %417, label %418, label %47

418:                                              ; preds = %410
  store i8 1, i8* %3, align 8
  br label %1722

419:                                              ; preds = %5
  %420 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %421 = bitcast %"class.v8::internal::AstNode"* %420 to %"class.v8::internal::Expression"**
  %422 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %421, align 8
  %423 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %422, i64 0, i32 0
  %424 = load i8, i8* %3, align 8, !range !18
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %426, label %1722

426:                                              ; preds = %419
  %427 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %428 = load i64, i64* %4, align 8
  %429 = icmp ult i64 %427, %428
  br i1 %429, label %430, label %431

430:                                              ; preds = %426
  store i8 1, i8* %3, align 8
  br label %1722

431:                                              ; preds = %426
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %423) #14
  br label %1722

432:                                              ; preds = %5
  %433 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %434 = bitcast %"class.v8::internal::AstNode"* %433 to %"class.v8::internal::Expression"**
  %435 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %434, align 8
  %436 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %435, i64 0, i32 0
  %437 = load i8, i8* %3, align 8, !range !18
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %439, label %1722

439:                                              ; preds = %432
  %440 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %441 = load i64, i64* %4, align 8
  %442 = icmp ult i64 %440, %441
  br i1 %442, label %443, label %444

443:                                              ; preds = %439
  store i8 1, i8* %3, align 8
  br label %1722

444:                                              ; preds = %439
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %436) #14
  %445 = load i8, i8* %3, align 8
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %447, label %1722

447:                                              ; preds = %444
  %448 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %449 = bitcast %"class.v8::internal::AstNode"* %448 to %"class.v8::internal::Statement"**
  %450 = load %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %449, align 8
  %451 = getelementptr inbounds %"class.v8::internal::Statement", %"class.v8::internal::Statement"* %450, i64 0, i32 0
  %452 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %453 = load i64, i64* %4, align 8
  %454 = icmp ult i64 %452, %453
  br i1 %454, label %455, label %47

455:                                              ; preds = %447
  store i8 1, i8* %3, align 8
  br label %1722

456:                                              ; preds = %5
  %457 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %458 = bitcast %"class.v8::internal::AstNode"* %457 to %"class.v8::internal::Block"**
  %459 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %458, align 8
  %460 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %459, i64 0, i32 0, i32 0, i32 0
  %461 = load i8, i8* %3, align 8, !range !18
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %463, label %1722

463:                                              ; preds = %456
  %464 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %465 = load i64, i64* %4, align 8
  %466 = icmp ult i64 %464, %465
  br i1 %466, label %467, label %468

467:                                              ; preds = %463
  store i8 1, i8* %3, align 8
  br label %1722

468:                                              ; preds = %463
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %460) #14
  %469 = load i8, i8* %3, align 8
  %470 = icmp eq i8 %469, 0
  br i1 %470, label %471, label %1722

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %473 = bitcast %"class.v8::internal::AstNode"* %472 to %"class.v8::internal::Block"**
  %474 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %473, align 8
  %475 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %474, i64 0, i32 0, i32 0, i32 0
  %476 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %477 = load i64, i64* %4, align 8
  %478 = icmp ult i64 %476, %477
  br i1 %478, label %479, label %47

479:                                              ; preds = %471
  store i8 1, i8* %3, align 8
  br label %1722

480:                                              ; preds = %5
  %481 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %482 = bitcast %"class.v8::internal::AstNode"* %481 to %"class.v8::internal::Block"**
  %483 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %482, align 8
  %484 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %483, i64 0, i32 0, i32 0, i32 0
  %485 = load i8, i8* %3, align 8, !range !18
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %1722

487:                                              ; preds = %480
  %488 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %489 = load i64, i64* %4, align 8
  %490 = icmp ult i64 %488, %489
  br i1 %490, label %491, label %492

491:                                              ; preds = %487
  store i8 1, i8* %3, align 8
  br label %1722

492:                                              ; preds = %487
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %484) #14
  %493 = load i8, i8* %3, align 8
  %494 = icmp eq i8 %493, 0
  br i1 %494, label %495, label %1722

495:                                              ; preds = %492
  %496 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %497 = bitcast %"class.v8::internal::AstNode"* %496 to %"class.v8::internal::Block"**
  %498 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %497, align 8
  %499 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %498, i64 0, i32 0, i32 0, i32 0
  %500 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %501 = load i64, i64* %4, align 8
  %502 = icmp ult i64 %500, %501
  br i1 %502, label %503, label %47

503:                                              ; preds = %495
  store i8 1, i8* %3, align 8
  br label %1722

504:                                              ; preds = %5
  %505 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %506 = bitcast %"class.v8::internal::AstNode"* %505 to %"class.v8::internal::ZoneList.1382"**
  %507 = load %"class.v8::internal::ZoneList.1382"*, %"class.v8::internal::ZoneList.1382"** %506, align 8
  %508 = getelementptr inbounds %"class.v8::internal::ZoneList.1382", %"class.v8::internal::ZoneList.1382"* %507, i64 0, i32 2
  %509 = load i32, i32* %508, align 4
  %510 = icmp sgt i32 %509, 0
  br i1 %510, label %511, label %1722

511:                                              ; preds = %504
  %512 = getelementptr inbounds %"class.v8::internal::ZoneList.1382", %"class.v8::internal::ZoneList.1382"* %507, i64 0, i32 0
  br label %517

513:                                              ; preds = %551
  %514 = load i32, i32* %508, align 4
  %515 = sext i32 %514 to i64
  %516 = icmp slt i64 %555, %515
  br i1 %516, label %517, label %1722

517:                                              ; preds = %511, %513
  %518 = phi i64 [ 0, %511 ], [ %555, %513 ]
  %519 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %512, align 8
  %520 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %519, i64 %518
  %521 = bitcast %"class.v8::internal::ClassLiteralProperty"** %520 to %"class.v8::internal::LiteralProperty"**
  %522 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %521, align 8
  %523 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %522, i64 0, i32 0, i32 0
  %524 = load i64, i64* %523, align 8
  %525 = and i64 %524, -2
  %526 = inttoptr i64 %525 to %"class.v8::internal::Expression"*
  %527 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %526, i64 0, i32 0
  %528 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %526, i64 0, i32 0, i32 1
  %529 = load i32, i32* %528, align 4
  %530 = and i32 %529, 63
  %531 = icmp eq i32 %530, 41
  %532 = load i8, i8* %3, align 8, !range !18
  %533 = icmp eq i8 %532, 0
  br i1 %531, label %543, label %534

534:                                              ; preds = %517
  br i1 %533, label %535, label %1722

535:                                              ; preds = %534
  %536 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %537 = load i64, i64* %4, align 8
  %538 = icmp ult i64 %536, %537
  br i1 %538, label %539, label %540

539:                                              ; preds = %535
  store i8 1, i8* %3, align 8
  br label %1722

540:                                              ; preds = %535
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %527) #14
  %541 = load i8, i8* %3, align 8
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %544, label %1722

543:                                              ; preds = %517
  br i1 %533, label %544, label %1722

544:                                              ; preds = %540, %543
  %545 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %522, i64 0, i32 1
  %546 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %545, align 8
  %547 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %548 = load i64, i64* %4, align 8
  %549 = icmp ult i64 %547, %548
  br i1 %549, label %550, label %551

550:                                              ; preds = %544
  store i8 1, i8* %3, align 8
  br label %1722

551:                                              ; preds = %544
  %552 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %546, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %552) #14
  %553 = load i8, i8* %3, align 8
  %554 = icmp eq i8 %553, 0
  %555 = add nuw nsw i64 %518, 1
  br i1 %554, label %513, label %1722

556:                                              ; preds = %5
  %557 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %558 = bitcast %"class.v8::internal::AstNode"* %557 to %"class.v8::internal::ZoneList.1383"**
  %559 = load %"class.v8::internal::ZoneList.1383"*, %"class.v8::internal::ZoneList.1383"** %558, align 8
  %560 = getelementptr inbounds %"class.v8::internal::ZoneList.1383", %"class.v8::internal::ZoneList.1383"* %559, i64 0, i32 2
  %561 = load i32, i32* %560, align 4
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %563, label %1722

563:                                              ; preds = %556
  %564 = getelementptr inbounds %"class.v8::internal::ZoneList.1383", %"class.v8::internal::ZoneList.1383"* %559, i64 0, i32 0
  br label %565

565:                                              ; preds = %563, %622
  %566 = phi i64 [ 0, %563 ], [ %623, %622 ]
  %567 = load %"class.v8::internal::ClassLiteralStaticElement"**, %"class.v8::internal::ClassLiteralStaticElement"*** %564, align 8
  %568 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %567, i64 %566
  %569 = load %"class.v8::internal::ClassLiteralStaticElement"*, %"class.v8::internal::ClassLiteralStaticElement"** %568, align 8
  %570 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %569, i64 0, i32 0
  %571 = load i8, i8* %570, align 8
  switch i8 %571, label %622 [
    i8 0, label %572
    i8 1, label %607
  ]

572:                                              ; preds = %565
  %573 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %569, i64 0, i32 1, i32 0
  %574 = load %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %573, align 8
  %575 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %574, i64 0, i32 0, i32 0, i32 0
  %576 = load i64, i64* %575, align 8
  %577 = and i64 %576, -2
  %578 = inttoptr i64 %577 to %"class.v8::internal::Expression"*
  %579 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %578, i64 0, i32 0
  %580 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %578, i64 0, i32 0, i32 1
  %581 = load i32, i32* %580, align 4
  %582 = and i32 %581, 63
  %583 = icmp eq i32 %582, 41
  %584 = load i8, i8* %3, align 8, !range !18
  %585 = icmp eq i8 %584, 0
  br i1 %583, label %595, label %586

586:                                              ; preds = %572
  br i1 %585, label %587, label %1722

587:                                              ; preds = %586
  %588 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %589 = load i64, i64* %4, align 8
  %590 = icmp ult i64 %588, %589
  br i1 %590, label %591, label %592

591:                                              ; preds = %587
  store i8 1, i8* %3, align 8
  br label %1722

592:                                              ; preds = %587
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %579) #14
  %593 = load i8, i8* %3, align 8
  %594 = icmp eq i8 %593, 0
  br i1 %594, label %596, label %1722

595:                                              ; preds = %572
  br i1 %585, label %596, label %1722

596:                                              ; preds = %592, %595
  %597 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty", %"class.v8::internal::ClassLiteralProperty"* %574, i64 0, i32 0, i32 1
  %598 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %597, align 8
  %599 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %600 = load i64, i64* %4, align 8
  %601 = icmp ult i64 %599, %600
  br i1 %601, label %602, label %603

602:                                              ; preds = %596
  store i8 1, i8* %3, align 8
  br label %1722

603:                                              ; preds = %596
  %604 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %598, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %604) #14
  %605 = load i8, i8* %3, align 8
  %606 = icmp eq i8 %605, 0
  br i1 %606, label %622, label %1722

607:                                              ; preds = %565
  %608 = getelementptr inbounds %"class.v8::internal::ClassLiteralStaticElement", %"class.v8::internal::ClassLiteralStaticElement"* %569, i64 0, i32 1
  %609 = bitcast %union.anon.1384* %608 to %"class.v8::internal::Block"**
  %610 = load %"class.v8::internal::Block"*, %"class.v8::internal::Block"** %609, align 8
  %611 = getelementptr inbounds %"class.v8::internal::Block", %"class.v8::internal::Block"* %610, i64 0, i32 0, i32 0, i32 0
  %612 = load i8, i8* %3, align 8, !range !18
  %613 = icmp eq i8 %612, 0
  br i1 %613, label %614, label %1722

614:                                              ; preds = %607
  %615 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %616 = load i64, i64* %4, align 8
  %617 = icmp ult i64 %615, %616
  br i1 %617, label %618, label %619

618:                                              ; preds = %614
  store i8 1, i8* %3, align 8
  br label %1722

619:                                              ; preds = %614
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %611) #14
  %620 = load i8, i8* %3, align 8
  %621 = icmp eq i8 %620, 0
  br i1 %621, label %622, label %1722

622:                                              ; preds = %603, %619, %565
  %623 = add nuw nsw i64 %566, 1
  %624 = load i32, i32* %560, align 4
  %625 = sext i32 %624 to i64
  %626 = icmp slt i64 %623, %625
  br i1 %626, label %565, label %1722

627:                                              ; preds = %5
  %628 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 4, i32 1
  %629 = load i32, i32* %628, align 4
  %630 = icmp sgt i32 %629, 0
  br i1 %630, label %631, label %1722

631:                                              ; preds = %627
  %632 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %633 = bitcast %"class.v8::internal::AstNode"* %632 to %"class.v8::internal::ObjectLiteralProperty"***
  %634 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %635 = load i32, i32* %634, align 8
  %636 = load i8, i8* %3, align 8, !range !18
  %637 = icmp eq i8 %636, 0
  br label %642

638:                                              ; preds = %678
  %639 = load i32, i32* %628, align 4
  %640 = sext i32 %639 to i64
  %641 = icmp slt i64 %684, %640
  br i1 %641, label %642, label %1722

642:                                              ; preds = %631, %638
  %643 = phi i1 [ %637, %631 ], [ true, %638 ]
  %644 = phi i32 [ %635, %631 ], [ %682, %638 ]
  %645 = phi i64 [ 0, %631 ], [ %684, %638 ]
  %646 = load %"class.v8::internal::ObjectLiteralProperty"**, %"class.v8::internal::ObjectLiteralProperty"*** %633, align 8
  %647 = getelementptr inbounds %"class.v8::internal::ObjectLiteralProperty"*, %"class.v8::internal::ObjectLiteralProperty"** %646, i64 %645
  %648 = bitcast %"class.v8::internal::ObjectLiteralProperty"** %647 to %"class.v8::internal::LiteralProperty"**
  %649 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %648, align 8
  %650 = add nsw i32 %644, 1
  store i32 %650, i32* %634, align 8
  %651 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %649, i64 0, i32 0, i32 0
  %652 = load i64, i64* %651, align 8
  %653 = and i64 %652, -2
  %654 = inttoptr i64 %653 to %"class.v8::internal::Expression"*
  %655 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %654, i64 0, i32 0
  br i1 %643, label %656, label %661

656:                                              ; preds = %642
  %657 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %658 = load i64, i64* %4, align 8
  %659 = icmp ult i64 %657, %658
  br i1 %659, label %660, label %664

660:                                              ; preds = %656
  store i8 1, i8* %3, align 8
  br label %661

661:                                              ; preds = %642, %660
  %662 = load i32, i32* %634, align 8
  %663 = add nsw i32 %662, -1
  store i32 %663, i32* %634, align 8
  br label %1722

664:                                              ; preds = %656
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %655) #14
  %665 = load i8, i8* %3, align 8
  %666 = load i32, i32* %634, align 8
  %667 = add nsw i32 %666, -1
  store i32 %667, i32* %634, align 8
  %668 = icmp eq i8 %665, 0
  br i1 %668, label %669, label %1722

669:                                              ; preds = %664
  store i32 %666, i32* %634, align 8
  %670 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %649, i64 0, i32 1
  %671 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %670, align 8
  %672 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %673 = load i64, i64* %4, align 8
  %674 = icmp ult i64 %672, %673
  br i1 %674, label %675, label %678

675:                                              ; preds = %669
  store i8 1, i8* %3, align 8
  %676 = load i32, i32* %634, align 8
  %677 = add nsw i32 %676, -1
  store i32 %677, i32* %634, align 8
  br label %1722

678:                                              ; preds = %669
  %679 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %671, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %679) #14
  %680 = load i8, i8* %3, align 8
  %681 = load i32, i32* %634, align 8
  %682 = add nsw i32 %681, -1
  store i32 %682, i32* %634, align 8
  %683 = icmp eq i8 %680, 0
  %684 = add nuw nsw i64 %645, 1
  br i1 %683, label %638, label %1722

685:                                              ; preds = %5
  %686 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 4, i32 1
  %687 = load i32, i32* %686, align 4
  %688 = icmp sgt i32 %687, 0
  br i1 %688, label %689, label %1722

689:                                              ; preds = %685
  %690 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %691 = bitcast %"class.v8::internal::AstNode"* %690 to %"class.v8::internal::Expression"***
  %692 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %693 = load i32, i32* %692, align 8
  %694 = load i8, i8* %3, align 8, !range !18
  %695 = icmp eq i8 %694, 0
  br label %700

696:                                              ; preds = %719
  %697 = load i32, i32* %686, align 4
  %698 = sext i32 %697 to i64
  %699 = icmp slt i64 %724, %698
  br i1 %699, label %700, label %1722

700:                                              ; preds = %689, %696
  %701 = phi i8 [ %694, %689 ], [ 0, %696 ]
  %702 = phi i1 [ %695, %689 ], [ true, %696 ]
  %703 = phi i32 [ %693, %689 ], [ %722, %696 ]
  %704 = phi i64 [ 0, %689 ], [ %724, %696 ]
  %705 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %691, align 8
  %706 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %705, i64 %704
  %707 = bitcast %"class.v8::internal::Expression"** %706 to %"class.v8::internal::AstNode"**
  %708 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %707, align 8
  %709 = add nsw i32 %703, 1
  store i32 %709, i32* %692, align 8
  br i1 %702, label %710, label %719

710:                                              ; preds = %700
  %711 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %712 = load i64, i64* %4, align 8
  %713 = icmp ult i64 %711, %712
  br i1 %713, label %714, label %717

714:                                              ; preds = %710
  store i8 1, i8* %3, align 8
  %715 = load i32, i32* %692, align 8
  %716 = add nsw i32 %715, -1
  store i32 %716, i32* %692, align 8
  br label %1722

717:                                              ; preds = %710
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %708) #14
  %718 = load i8, i8* %3, align 8
  br label %719

719:                                              ; preds = %700, %717
  %720 = phi i8 [ %701, %700 ], [ %718, %717 ]
  %721 = load i32, i32* %692, align 8
  %722 = add nsw i32 %721, -1
  store i32 %722, i32* %692, align 8
  %723 = icmp eq i8 %720, 0
  %724 = add nuw nsw i64 %704, 1
  br i1 %723, label %696, label %1722

725:                                              ; preds = %5
  %726 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %727 = load i32, i32* %726, align 8
  %728 = add nsw i32 %727, 1
  store i32 %728, i32* %726, align 8
  %729 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %730 = bitcast %"class.v8::internal::AstNode"* %729 to %"class.v8::internal::Expression"**
  %731 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %730, align 8
  %732 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %731, i64 0, i32 0
  %733 = load i8, i8* %3, align 8, !range !18
  %734 = icmp eq i8 %733, 0
  br i1 %734, label %735, label %740

735:                                              ; preds = %725
  %736 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %737 = load i64, i64* %4, align 8
  %738 = icmp ult i64 %736, %737
  br i1 %738, label %739, label %743

739:                                              ; preds = %735
  store i8 1, i8* %3, align 8
  br label %740

740:                                              ; preds = %725, %739
  %741 = load i32, i32* %726, align 8
  %742 = add nsw i32 %741, -1
  store i32 %742, i32* %726, align 8
  br label %1722

743:                                              ; preds = %735
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %732) #14
  %744 = load i8, i8* %3, align 8
  %745 = load i32, i32* %726, align 8
  %746 = add nsw i32 %745, -1
  store i32 %746, i32* %726, align 8
  %747 = icmp eq i8 %744, 0
  br i1 %747, label %748, label %1722

748:                                              ; preds = %743
  store i32 %745, i32* %726, align 8
  %749 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %750 = bitcast %"class.v8::internal::AstNode"* %749 to %"class.v8::internal::Expression"**
  %751 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %750, align 8
  %752 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %753 = load i64, i64* %4, align 8
  %754 = icmp ult i64 %752, %753
  br i1 %754, label %755, label %756

755:                                              ; preds = %748
  store i8 1, i8* %3, align 8
  br label %758

756:                                              ; preds = %748
  %757 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %751, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %757) #14
  br label %758

758:                                              ; preds = %755, %756
  %759 = load i32, i32* %726, align 8
  %760 = add nsw i32 %759, -1
  store i32 %760, i32* %726, align 8
  br label %1722

761:                                              ; preds = %5
  %762 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %763 = load i32, i32* %762, align 8
  %764 = add nsw i32 %763, 1
  store i32 %764, i32* %762, align 8
  %765 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %766 = bitcast %"class.v8::internal::AstNode"* %765 to %"class.v8::internal::Expression"**
  %767 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %766, align 8
  %768 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %767, i64 0, i32 0
  %769 = load i8, i8* %3, align 8, !range !18
  %770 = icmp eq i8 %769, 0
  br i1 %770, label %771, label %777

771:                                              ; preds = %761
  %772 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %773 = load i64, i64* %4, align 8
  %774 = icmp ult i64 %772, %773
  br i1 %774, label %775, label %776

775:                                              ; preds = %771
  store i8 1, i8* %3, align 8
  br label %777

776:                                              ; preds = %771
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %768) #14
  br label %777

777:                                              ; preds = %761, %775, %776
  %778 = load i32, i32* %762, align 8
  %779 = add nsw i32 %778, -1
  store i32 %779, i32* %762, align 8
  br label %1722

780:                                              ; preds = %5
  %781 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %782 = load i32, i32* %781, align 8
  %783 = add nsw i32 %782, 1
  store i32 %783, i32* %781, align 8
  %784 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %785 = bitcast %"class.v8::internal::AstNode"* %784 to %"class.v8::internal::Expression"**
  %786 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %785, align 8
  %787 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %786, i64 0, i32 0
  %788 = load i8, i8* %3, align 8, !range !18
  %789 = icmp eq i8 %788, 0
  br i1 %789, label %790, label %795

790:                                              ; preds = %780
  %791 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %792 = load i64, i64* %4, align 8
  %793 = icmp ult i64 %791, %792
  br i1 %793, label %794, label %798

794:                                              ; preds = %790
  store i8 1, i8* %3, align 8
  br label %795

795:                                              ; preds = %780, %794
  %796 = load i32, i32* %781, align 8
  %797 = add nsw i32 %796, -1
  store i32 %797, i32* %781, align 8
  br label %1722

798:                                              ; preds = %790
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %787) #14
  %799 = load i8, i8* %3, align 8
  %800 = load i32, i32* %781, align 8
  %801 = add nsw i32 %800, -1
  store i32 %801, i32* %781, align 8
  %802 = icmp eq i8 %799, 0
  br i1 %802, label %803, label %1722

803:                                              ; preds = %798
  store i32 %800, i32* %781, align 8
  %804 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %805 = bitcast %"class.v8::internal::AstNode"* %804 to %"class.v8::internal::Expression"**
  %806 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %805, align 8
  %807 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %808 = load i64, i64* %4, align 8
  %809 = icmp ult i64 %807, %808
  br i1 %809, label %810, label %811

810:                                              ; preds = %803
  store i8 1, i8* %3, align 8
  br label %813

811:                                              ; preds = %803
  %812 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %806, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %812) #14
  br label %813

813:                                              ; preds = %810, %811
  %814 = load i32, i32* %781, align 8
  %815 = add nsw i32 %814, -1
  store i32 %815, i32* %781, align 8
  br label %1722

816:                                              ; preds = %5
  %817 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %818 = load i32, i32* %817, align 8
  %819 = add nsw i32 %818, 1
  store i32 %819, i32* %817, align 8
  %820 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %821 = bitcast %"class.v8::internal::AstNode"* %820 to %"class.v8::internal::Expression"**
  %822 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %821, align 8
  %823 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %822, i64 0, i32 0
  %824 = load i8, i8* %3, align 8, !range !18
  %825 = icmp eq i8 %824, 0
  br i1 %825, label %826, label %831

826:                                              ; preds = %816
  %827 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %828 = load i64, i64* %4, align 8
  %829 = icmp ult i64 %827, %828
  br i1 %829, label %830, label %834

830:                                              ; preds = %826
  store i8 1, i8* %3, align 8
  br label %831

831:                                              ; preds = %816, %830
  %832 = load i32, i32* %817, align 8
  %833 = add nsw i32 %832, -1
  store i32 %833, i32* %817, align 8
  br label %1722

834:                                              ; preds = %826
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %823) #14
  %835 = load i8, i8* %3, align 8
  %836 = load i32, i32* %817, align 8
  %837 = add nsw i32 %836, -1
  store i32 %837, i32* %817, align 8
  %838 = icmp eq i8 %835, 0
  br i1 %838, label %839, label %1722

839:                                              ; preds = %834
  %840 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %841 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %842 = bitcast %"class.v8::internal::AstNode"* %841 to i64*
  %843 = load i64, i64* %842, align 8
  %844 = bitcast %"class.v8::internal::AstNode"* %840 to i64*
  %845 = load i64, i64* %844, align 8
  %846 = icmp eq i64 %843, %845
  br i1 %846, label %1722, label %847

847:                                              ; preds = %839
  %848 = bitcast %"class.v8::internal::AstNode"* %840 to %"struct.v8::internal::NaryOperation::NaryOperationEntry"**
  br label %855

849:                                              ; preds = %868
  %850 = load i64, i64* %842, align 8
  %851 = load i64, i64* %844, align 8
  %852 = sub i64 %850, %851
  %853 = ashr exact i64 %852, 4
  %854 = icmp ult i64 %874, %853
  br i1 %854, label %855, label %1722

855:                                              ; preds = %849, %847
  %856 = phi i32 [ %837, %847 ], [ %872, %849 ]
  %857 = phi i64 [ 0, %847 ], [ %874, %849 ]
  %858 = add nsw i32 %856, 1
  store i32 %858, i32* %817, align 8
  %859 = load %"struct.v8::internal::NaryOperation::NaryOperationEntry"*, %"struct.v8::internal::NaryOperation::NaryOperationEntry"** %848, align 8
  %860 = getelementptr inbounds %"struct.v8::internal::NaryOperation::NaryOperationEntry", %"struct.v8::internal::NaryOperation::NaryOperationEntry"* %859, i64 %857, i32 0
  %861 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %860, align 8
  %862 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %863 = load i64, i64* %4, align 8
  %864 = icmp ult i64 %862, %863
  br i1 %864, label %865, label %868

865:                                              ; preds = %855
  store i8 1, i8* %3, align 8
  %866 = load i32, i32* %817, align 8
  %867 = add nsw i32 %866, -1
  store i32 %867, i32* %817, align 8
  br label %1722

868:                                              ; preds = %855
  %869 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %861, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %869) #14
  %870 = load i8, i8* %3, align 8
  %871 = load i32, i32* %817, align 8
  %872 = add nsw i32 %871, -1
  store i32 %872, i32* %817, align 8
  %873 = icmp eq i8 %870, 0
  %874 = add nuw i64 %857, 1
  br i1 %873, label %849, label %1722

875:                                              ; preds = %5
  %876 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %877 = load i32, i32* %876, align 8
  %878 = add nsw i32 %877, 1
  store i32 %878, i32* %876, align 8
  %879 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %880 = bitcast %"class.v8::internal::AstNode"* %879 to %"class.v8::internal::Expression"**
  %881 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %880, align 8
  %882 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %881, i64 0, i32 0
  %883 = load i8, i8* %3, align 8, !range !18
  %884 = icmp eq i8 %883, 0
  br i1 %884, label %885, label %890

885:                                              ; preds = %875
  %886 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %887 = load i64, i64* %4, align 8
  %888 = icmp ult i64 %886, %887
  br i1 %888, label %889, label %893

889:                                              ; preds = %885
  store i8 1, i8* %3, align 8
  br label %890

890:                                              ; preds = %875, %889
  %891 = load i32, i32* %876, align 8
  %892 = add nsw i32 %891, -1
  store i32 %892, i32* %876, align 8
  br label %1722

893:                                              ; preds = %885
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %882) #14
  %894 = load i8, i8* %3, align 8
  %895 = load i32, i32* %876, align 8
  %896 = add nsw i32 %895, -1
  store i32 %896, i32* %876, align 8
  %897 = icmp eq i8 %894, 0
  br i1 %897, label %898, label %1722

898:                                              ; preds = %893
  %899 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3, i32 1
  %900 = load i32, i32* %899, align 4
  %901 = icmp sgt i32 %900, 0
  br i1 %901, label %902, label %1722

902:                                              ; preds = %898
  %903 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %904 = bitcast %"class.v8::internal::AstNode"* %903 to %"class.v8::internal::Expression"***
  br label %909

905:                                              ; preds = %923
  %906 = load i32, i32* %899, align 4
  %907 = sext i32 %906 to i64
  %908 = icmp slt i64 %928, %907
  br i1 %908, label %909, label %1722

909:                                              ; preds = %905, %902
  %910 = phi i32 [ %896, %902 ], [ %926, %905 ]
  %911 = phi i64 [ 0, %902 ], [ %928, %905 ]
  %912 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %904, align 8
  %913 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %912, i64 %911
  %914 = bitcast %"class.v8::internal::Expression"** %913 to %"class.v8::internal::AstNode"**
  %915 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %914, align 8
  %916 = add nsw i32 %910, 1
  store i32 %916, i32* %876, align 8
  %917 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %918 = load i64, i64* %4, align 8
  %919 = icmp ult i64 %917, %918
  br i1 %919, label %920, label %923

920:                                              ; preds = %909
  store i8 1, i8* %3, align 8
  %921 = load i32, i32* %876, align 8
  %922 = add nsw i32 %921, -1
  store i32 %922, i32* %876, align 8
  br label %1722

923:                                              ; preds = %909
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %915) #14
  %924 = load i8, i8* %3, align 8
  %925 = load i32, i32* %876, align 8
  %926 = add nsw i32 %925, -1
  store i32 %926, i32* %876, align 8
  %927 = icmp eq i8 %924, 0
  %928 = add nuw nsw i64 %911, 1
  br i1 %927, label %905, label %1722

929:                                              ; preds = %5
  %930 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %931 = load i32, i32* %930, align 8
  %932 = add nsw i32 %931, 1
  store i32 %932, i32* %930, align 8
  %933 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %934 = bitcast %"class.v8::internal::AstNode"* %933 to %"class.v8::internal::Expression"**
  %935 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %934, align 8
  %936 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %935, i64 0, i32 0
  %937 = load i8, i8* %3, align 8, !range !18
  %938 = icmp eq i8 %937, 0
  br i1 %938, label %939, label %944

939:                                              ; preds = %929
  %940 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %941 = load i64, i64* %4, align 8
  %942 = icmp ult i64 %940, %941
  br i1 %942, label %943, label %947

943:                                              ; preds = %939
  store i8 1, i8* %3, align 8
  br label %944

944:                                              ; preds = %929, %943
  %945 = load i32, i32* %930, align 8
  %946 = add nsw i32 %945, -1
  store i32 %946, i32* %930, align 8
  br label %1722

947:                                              ; preds = %939
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %936) #14
  %948 = load i8, i8* %3, align 8
  %949 = load i32, i32* %930, align 8
  %950 = add nsw i32 %949, -1
  store i32 %950, i32* %930, align 8
  %951 = icmp eq i8 %948, 0
  br i1 %951, label %952, label %1722

952:                                              ; preds = %947
  %953 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3, i32 1
  %954 = load i32, i32* %953, align 4
  %955 = icmp sgt i32 %954, 0
  br i1 %955, label %956, label %1722

956:                                              ; preds = %952
  %957 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %958 = bitcast %"class.v8::internal::AstNode"* %957 to %"class.v8::internal::Expression"***
  br label %963

959:                                              ; preds = %977
  %960 = load i32, i32* %953, align 4
  %961 = sext i32 %960 to i64
  %962 = icmp slt i64 %982, %961
  br i1 %962, label %963, label %1722

963:                                              ; preds = %959, %956
  %964 = phi i32 [ %950, %956 ], [ %980, %959 ]
  %965 = phi i64 [ 0, %956 ], [ %982, %959 ]
  %966 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %958, align 8
  %967 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %966, i64 %965
  %968 = bitcast %"class.v8::internal::Expression"** %967 to %"class.v8::internal::AstNode"**
  %969 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %968, align 8
  %970 = add nsw i32 %964, 1
  store i32 %970, i32* %930, align 8
  %971 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %972 = load i64, i64* %4, align 8
  %973 = icmp ult i64 %971, %972
  br i1 %973, label %974, label %977

974:                                              ; preds = %963
  store i8 1, i8* %3, align 8
  %975 = load i32, i32* %930, align 8
  %976 = add nsw i32 %975, -1
  store i32 %976, i32* %930, align 8
  br label %1722

977:                                              ; preds = %963
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %969) #14
  %978 = load i8, i8* %3, align 8
  %979 = load i32, i32* %930, align 8
  %980 = add nsw i32 %979, -1
  store i32 %980, i32* %930, align 8
  %981 = icmp eq i8 %978, 0
  %982 = add nuw nsw i64 %965, 1
  br i1 %981, label %959, label %1722

983:                                              ; preds = %5
  %984 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 4, i32 1
  %985 = load i32, i32* %984, align 4
  %986 = icmp sgt i32 %985, 0
  br i1 %986, label %987, label %1722

987:                                              ; preds = %983
  %988 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %989 = bitcast %"class.v8::internal::AstNode"* %988 to %"class.v8::internal::Expression"***
  %990 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %991 = load i32, i32* %990, align 8
  %992 = load i8, i8* %3, align 8, !range !18
  %993 = icmp eq i8 %992, 0
  br label %998

994:                                              ; preds = %1017
  %995 = load i32, i32* %984, align 4
  %996 = sext i32 %995 to i64
  %997 = icmp slt i64 %1022, %996
  br i1 %997, label %998, label %1722

998:                                              ; preds = %987, %994
  %999 = phi i8 [ %992, %987 ], [ 0, %994 ]
  %1000 = phi i1 [ %993, %987 ], [ true, %994 ]
  %1001 = phi i32 [ %991, %987 ], [ %1020, %994 ]
  %1002 = phi i64 [ 0, %987 ], [ %1022, %994 ]
  %1003 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %989, align 8
  %1004 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1003, i64 %1002
  %1005 = bitcast %"class.v8::internal::Expression"** %1004 to %"class.v8::internal::AstNode"**
  %1006 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %1005, align 8
  %1007 = add nsw i32 %1001, 1
  store i32 %1007, i32* %990, align 8
  br i1 %1000, label %1008, label %1017

1008:                                             ; preds = %998
  %1009 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1010 = load i64, i64* %4, align 8
  %1011 = icmp ult i64 %1009, %1010
  br i1 %1011, label %1012, label %1015

1012:                                             ; preds = %1008
  store i8 1, i8* %3, align 8
  %1013 = load i32, i32* %990, align 8
  %1014 = add nsw i32 %1013, -1
  store i32 %1014, i32* %990, align 8
  br label %1722

1015:                                             ; preds = %1008
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1006) #14
  %1016 = load i8, i8* %3, align 8
  br label %1017

1017:                                             ; preds = %998, %1015
  %1018 = phi i8 [ %999, %998 ], [ %1016, %1015 ]
  %1019 = load i32, i32* %990, align 8
  %1020 = add nsw i32 %1019, -1
  store i32 %1020, i32* %990, align 8
  %1021 = icmp eq i8 %1018, 0
  %1022 = add nuw nsw i64 %1002, 1
  br i1 %1021, label %994, label %1722

1023:                                             ; preds = %5
  %1024 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %1025 = bitcast %"class.v8::internal::AstNode"* %1024 to %"class.v8::internal::Expression"**
  %1026 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1025, align 8
  %1027 = icmp eq %"class.v8::internal::Expression"* %1026, null
  %1028 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1029 = load i32, i32* %1028, align 8
  br i1 %1027, label %1030, label %1033

1030:                                             ; preds = %1023
  %1031 = load i8, i8* %3, align 8, !range !18
  %1032 = icmp eq i8 %1031, 0
  br label %1052

1033:                                             ; preds = %1023
  %1034 = add nsw i32 %1029, 1
  store i32 %1034, i32* %1028, align 8
  %1035 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1025, align 8
  %1036 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1035, i64 0, i32 0
  %1037 = load i8, i8* %3, align 8, !range !18
  %1038 = icmp eq i8 %1037, 0
  br i1 %1038, label %1039, label %1044

1039:                                             ; preds = %1033
  %1040 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1041 = load i64, i64* %4, align 8
  %1042 = icmp ult i64 %1040, %1041
  br i1 %1042, label %1043, label %1047

1043:                                             ; preds = %1039
  store i8 1, i8* %3, align 8
  br label %1044

1044:                                             ; preds = %1033, %1043
  %1045 = load i32, i32* %1028, align 8
  %1046 = add nsw i32 %1045, -1
  store i32 %1046, i32* %1028, align 8
  br label %1722

1047:                                             ; preds = %1039
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1036) #14
  %1048 = load i8, i8* %3, align 8
  %1049 = load i32, i32* %1028, align 8
  %1050 = add nsw i32 %1049, -1
  store i32 %1050, i32* %1028, align 8
  %1051 = icmp eq i8 %1048, 0
  br i1 %1051, label %1052, label %1722

1052:                                             ; preds = %1030, %1047
  %1053 = phi i1 [ %1032, %1030 ], [ true, %1047 ]
  %1054 = phi i32 [ %1029, %1030 ], [ %1050, %1047 ]
  %1055 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1056 = add nsw i32 %1054, 1
  store i32 %1056, i32* %1055, align 8
  %1057 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 4
  %1058 = bitcast %"class.v8::internal::AstNode"* %1057 to %"class.v8::internal::FunctionLiteral"**
  %1059 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1058, align 8
  %1060 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1059, i64 0, i32 0, i32 0
  br i1 %1053, label %1061, label %1066

1061:                                             ; preds = %1052
  %1062 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1063 = load i64, i64* %4, align 8
  %1064 = icmp ult i64 %1062, %1063
  br i1 %1064, label %1065, label %1069

1065:                                             ; preds = %1061
  store i8 1, i8* %3, align 8
  br label %1066

1066:                                             ; preds = %1052, %1065
  %1067 = load i32, i32* %1055, align 8
  %1068 = add nsw i32 %1067, -1
  store i32 %1068, i32* %1055, align 8
  br label %1722

1069:                                             ; preds = %1061
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1060) #14
  %1070 = load i8, i8* %3, align 8
  %1071 = load i32, i32* %1055, align 8
  %1072 = add nsw i32 %1071, -1
  store i32 %1072, i32* %1055, align 8
  %1073 = icmp eq i8 %1070, 0
  br i1 %1073, label %1074, label %1722

1074:                                             ; preds = %1069
  %1075 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 7
  %1076 = bitcast %"class.v8::internal::AstNode"* %1075 to %"class.v8::internal::FunctionLiteral"**
  %1077 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1076, align 8
  %1078 = icmp eq %"class.v8::internal::FunctionLiteral"* %1077, null
  br i1 %1078, label %1093, label %1079

1079:                                             ; preds = %1074
  store i32 %1071, i32* %1055, align 8
  %1080 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1076, align 8
  %1081 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1082 = load i64, i64* %4, align 8
  %1083 = icmp ult i64 %1081, %1082
  br i1 %1083, label %1084, label %1087

1084:                                             ; preds = %1079
  store i8 1, i8* %3, align 8
  %1085 = load i32, i32* %1055, align 8
  %1086 = add nsw i32 %1085, -1
  store i32 %1086, i32* %1055, align 8
  br label %1722

1087:                                             ; preds = %1079
  %1088 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1080, i64 0, i32 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1088) #14
  %1089 = load i8, i8* %3, align 8
  %1090 = icmp eq i8 %1089, 0
  %1091 = load i32, i32* %1055, align 8
  %1092 = add nsw i32 %1091, -1
  store i32 %1092, i32* %1055, align 8
  br i1 %1090, label %1093, label %1722

1093:                                             ; preds = %1087, %1074
  %1094 = phi i32 [ %1092, %1087 ], [ %1072, %1074 ]
  %1095 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 8
  %1096 = bitcast %"class.v8::internal::AstNode"* %1095 to %"class.v8::internal::FunctionLiteral"**
  %1097 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1096, align 8
  %1098 = icmp eq %"class.v8::internal::FunctionLiteral"* %1097, null
  br i1 %1098, label %1114, label %1099

1099:                                             ; preds = %1093
  %1100 = add nsw i32 %1094, 1
  store i32 %1100, i32* %1055, align 8
  %1101 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1096, align 8
  %1102 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1103 = load i64, i64* %4, align 8
  %1104 = icmp ult i64 %1102, %1103
  br i1 %1104, label %1105, label %1108

1105:                                             ; preds = %1099
  store i8 1, i8* %3, align 8
  %1106 = load i32, i32* %1055, align 8
  %1107 = add nsw i32 %1106, -1
  store i32 %1107, i32* %1055, align 8
  br label %1722

1108:                                             ; preds = %1099
  %1109 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %1101, i64 0, i32 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1109) #14
  %1110 = load i8, i8* %3, align 8
  %1111 = icmp eq i8 %1110, 0
  %1112 = load i32, i32* %1055, align 8
  %1113 = add nsw i32 %1112, -1
  store i32 %1113, i32* %1055, align 8
  br i1 %1111, label %1114, label %1722

1114:                                             ; preds = %1108, %1093
  %1115 = phi i32 [ %1113, %1108 ], [ %1094, %1093 ]
  %1116 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 6
  %1117 = bitcast %"class.v8::internal::AstNode"* %1116 to %"class.v8::internal::ZoneList.1382"**
  %1118 = load %"class.v8::internal::ZoneList.1382"*, %"class.v8::internal::ZoneList.1382"** %1117, align 8
  %1119 = getelementptr inbounds %"class.v8::internal::ZoneList.1382", %"class.v8::internal::ZoneList.1382"* %1118, i64 0, i32 2
  %1120 = load i32, i32* %1119, align 4
  %1121 = icmp sgt i32 %1120, 0
  br i1 %1121, label %1122, label %1151

1122:                                             ; preds = %1114
  %1123 = getelementptr inbounds %"class.v8::internal::ZoneList.1382", %"class.v8::internal::ZoneList.1382"* %1118, i64 0, i32 0
  br label %1128

1124:                                             ; preds = %1144
  %1125 = load i32, i32* %1119, align 4
  %1126 = sext i32 %1125 to i64
  %1127 = icmp slt i64 %1150, %1126
  br i1 %1127, label %1128, label %1151

1128:                                             ; preds = %1124, %1122
  %1129 = phi i32 [ %1115, %1122 ], [ %1148, %1124 ]
  %1130 = phi i64 [ 0, %1122 ], [ %1150, %1124 ]
  %1131 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %1123, align 8
  %1132 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %1131, i64 %1130
  %1133 = bitcast %"class.v8::internal::ClassLiteralProperty"** %1132 to %"class.v8::internal::LiteralProperty"**
  %1134 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %1133, align 8
  %1135 = add nsw i32 %1129, 1
  store i32 %1135, i32* %1055, align 8
  %1136 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %1134, i64 0, i32 1
  %1137 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1136, align 8
  %1138 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1139 = load i64, i64* %4, align 8
  %1140 = icmp ult i64 %1138, %1139
  br i1 %1140, label %1141, label %1144

1141:                                             ; preds = %1128
  store i8 1, i8* %3, align 8
  %1142 = load i32, i32* %1055, align 8
  %1143 = add nsw i32 %1142, -1
  store i32 %1143, i32* %1055, align 8
  br label %1722

1144:                                             ; preds = %1128
  %1145 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1137, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1145) #14
  %1146 = load i8, i8* %3, align 8
  %1147 = load i32, i32* %1055, align 8
  %1148 = add nsw i32 %1147, -1
  store i32 %1148, i32* %1055, align 8
  %1149 = icmp eq i8 %1146, 0
  %1150 = add nuw nsw i64 %1130, 1
  br i1 %1149, label %1124, label %1722

1151:                                             ; preds = %1124, %1114
  %1152 = phi i32 [ %1115, %1114 ], [ %1148, %1124 ]
  %1153 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 5
  %1154 = bitcast %"class.v8::internal::AstNode"* %1153 to %"class.v8::internal::ZoneList.1382"**
  %1155 = load %"class.v8::internal::ZoneList.1382"*, %"class.v8::internal::ZoneList.1382"** %1154, align 8
  %1156 = getelementptr inbounds %"class.v8::internal::ZoneList.1382", %"class.v8::internal::ZoneList.1382"* %1155, i64 0, i32 2
  %1157 = load i32, i32* %1156, align 4
  %1158 = icmp sgt i32 %1157, 0
  br i1 %1158, label %1159, label %1722

1159:                                             ; preds = %1151
  %1160 = getelementptr inbounds %"class.v8::internal::ZoneList.1382", %"class.v8::internal::ZoneList.1382"* %1155, i64 0, i32 0
  br label %1165

1161:                                             ; preds = %1208
  %1162 = load i32, i32* %1156, align 4
  %1163 = sext i32 %1162 to i64
  %1164 = icmp slt i64 %1214, %1163
  br i1 %1164, label %1165, label %1722

1165:                                             ; preds = %1159, %1161
  %1166 = phi i32 [ %1152, %1159 ], [ %1212, %1161 ]
  %1167 = phi i64 [ 0, %1159 ], [ %1214, %1161 ]
  %1168 = load %"class.v8::internal::ClassLiteralProperty"**, %"class.v8::internal::ClassLiteralProperty"*** %1160, align 8
  %1169 = getelementptr inbounds %"class.v8::internal::ClassLiteralProperty"*, %"class.v8::internal::ClassLiteralProperty"** %1168, i64 %1167
  %1170 = bitcast %"class.v8::internal::ClassLiteralProperty"** %1169 to %"class.v8::internal::LiteralProperty"**
  %1171 = load %"class.v8::internal::LiteralProperty"*, %"class.v8::internal::LiteralProperty"** %1170, align 8
  %1172 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %1171, i64 0, i32 0, i32 0
  %1173 = load i64, i64* %1172, align 8
  %1174 = and i64 %1173, -2
  %1175 = inttoptr i64 %1174 to %"class.v8::internal::Expression"*
  %1176 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1175, i64 0, i32 0, i32 1
  %1177 = load i32, i32* %1176, align 4
  %1178 = and i32 %1177, 63
  %1179 = icmp eq i32 %1178, 41
  br i1 %1179, label %1197, label %1180

1180:                                             ; preds = %1165
  %1181 = add nsw i32 %1166, 1
  store i32 %1181, i32* %1055, align 8
  %1182 = load i64, i64* %1172, align 8
  %1183 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1184 = load i64, i64* %4, align 8
  %1185 = icmp ult i64 %1183, %1184
  br i1 %1185, label %1186, label %1189

1186:                                             ; preds = %1180
  store i8 1, i8* %3, align 8
  %1187 = load i32, i32* %1055, align 8
  %1188 = add nsw i32 %1187, -1
  store i32 %1188, i32* %1055, align 8
  br label %1722

1189:                                             ; preds = %1180
  %1190 = and i64 %1182, -2
  %1191 = inttoptr i64 %1190 to %"class.v8::internal::Expression"*
  %1192 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1191, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1192) #14
  %1193 = load i8, i8* %3, align 8
  %1194 = load i32, i32* %1055, align 8
  %1195 = add nsw i32 %1194, -1
  store i32 %1195, i32* %1055, align 8
  %1196 = icmp eq i8 %1193, 0
  br i1 %1196, label %1197, label %1722

1197:                                             ; preds = %1165, %1189
  %1198 = phi i32 [ %1195, %1189 ], [ %1166, %1165 ]
  %1199 = add nsw i32 %1198, 1
  store i32 %1199, i32* %1055, align 8
  %1200 = getelementptr inbounds %"class.v8::internal::LiteralProperty", %"class.v8::internal::LiteralProperty"* %1171, i64 0, i32 1
  %1201 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1200, align 8
  %1202 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1203 = load i64, i64* %4, align 8
  %1204 = icmp ult i64 %1202, %1203
  br i1 %1204, label %1205, label %1208

1205:                                             ; preds = %1197
  store i8 1, i8* %3, align 8
  %1206 = load i32, i32* %1055, align 8
  %1207 = add nsw i32 %1206, -1
  store i32 %1207, i32* %1055, align 8
  br label %1722

1208:                                             ; preds = %1197
  %1209 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1201, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1209) #14
  %1210 = load i8, i8* %3, align 8
  %1211 = load i32, i32* %1055, align 8
  %1212 = add nsw i32 %1211, -1
  store i32 %1212, i32* %1055, align 8
  %1213 = icmp eq i8 %1210, 0
  %1214 = add nuw nsw i64 %1167, 1
  br i1 %1213, label %1161, label %1722

1215:                                             ; preds = %5
  %1216 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1217 = load i32, i32* %1216, align 8
  %1218 = add nsw i32 %1217, 1
  store i32 %1218, i32* %1216, align 8
  %1219 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1220 = bitcast %"class.v8::internal::AstNode"* %1219 to %"class.v8::internal::Expression"**
  %1221 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1220, align 8
  %1222 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1221, i64 0, i32 0
  %1223 = load i8, i8* %3, align 8, !range !18
  %1224 = icmp eq i8 %1223, 0
  br i1 %1224, label %1225, label %1230

1225:                                             ; preds = %1215
  %1226 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1227 = load i64, i64* %4, align 8
  %1228 = icmp ult i64 %1226, %1227
  br i1 %1228, label %1229, label %1233

1229:                                             ; preds = %1225
  store i8 1, i8* %3, align 8
  br label %1230

1230:                                             ; preds = %1215, %1229
  %1231 = load i32, i32* %1216, align 8
  %1232 = add nsw i32 %1231, -1
  store i32 %1232, i32* %1216, align 8
  br label %1722

1233:                                             ; preds = %1225
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1222) #14
  %1234 = load i8, i8* %3, align 8
  %1235 = load i32, i32* %1216, align 8
  %1236 = add nsw i32 %1235, -1
  store i32 %1236, i32* %1216, align 8
  %1237 = icmp eq i8 %1234, 0
  br i1 %1237, label %1238, label %1722

1238:                                             ; preds = %1233
  store i32 %1235, i32* %1216, align 8
  %1239 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %1240 = bitcast %"class.v8::internal::AstNode"* %1239 to %"class.v8::internal::Expression"**
  %1241 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1240, align 8
  %1242 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1243 = load i64, i64* %4, align 8
  %1244 = icmp ult i64 %1242, %1243
  br i1 %1244, label %1245, label %1246

1245:                                             ; preds = %1238
  store i8 1, i8* %3, align 8
  br label %1248

1246:                                             ; preds = %1238
  %1247 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1241, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1247) #14
  br label %1248

1248:                                             ; preds = %1245, %1246
  %1249 = load i32, i32* %1216, align 8
  %1250 = add nsw i32 %1249, -1
  store i32 %1250, i32* %1216, align 8
  br label %1722

1251:                                             ; preds = %5
  %1252 = bitcast %"class.v8::internal::AstNode"* %6 to %"class.v8::internal::Assignment"*
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::Assignment"* %1252) #14
  br label %1722

1253:                                             ; preds = %5
  %1254 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1255 = load i32, i32* %1254, align 8
  %1256 = add nsw i32 %1255, 1
  store i32 %1256, i32* %1254, align 8
  %1257 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1258 = bitcast %"class.v8::internal::AstNode"* %1257 to %"class.v8::internal::Expression"**
  %1259 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1258, align 8
  %1260 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1259, i64 0, i32 0
  %1261 = load i8, i8* %3, align 8, !range !18
  %1262 = icmp eq i8 %1261, 0
  br i1 %1262, label %1263, label %1268

1263:                                             ; preds = %1253
  %1264 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1265 = load i64, i64* %4, align 8
  %1266 = icmp ult i64 %1264, %1265
  br i1 %1266, label %1267, label %1271

1267:                                             ; preds = %1263
  store i8 1, i8* %3, align 8
  br label %1268

1268:                                             ; preds = %1253, %1267
  %1269 = load i32, i32* %1254, align 8
  %1270 = add nsw i32 %1269, -1
  store i32 %1270, i32* %1254, align 8
  br label %1722

1271:                                             ; preds = %1263
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1260) #14
  %1272 = load i8, i8* %3, align 8
  %1273 = load i32, i32* %1254, align 8
  %1274 = add nsw i32 %1273, -1
  store i32 %1274, i32* %1254, align 8
  %1275 = icmp eq i8 %1272, 0
  br i1 %1275, label %1276, label %1722

1276:                                             ; preds = %1271
  store i32 %1273, i32* %1254, align 8
  %1277 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %1278 = bitcast %"class.v8::internal::AstNode"* %1277 to %"class.v8::internal::Expression"**
  %1279 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1278, align 8
  %1280 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1281 = load i64, i64* %4, align 8
  %1282 = icmp ult i64 %1280, %1281
  br i1 %1282, label %1283, label %1286

1283:                                             ; preds = %1276
  store i8 1, i8* %3, align 8
  %1284 = load i32, i32* %1254, align 8
  %1285 = add nsw i32 %1284, -1
  store i32 %1285, i32* %1254, align 8
  br label %1722

1286:                                             ; preds = %1276
  %1287 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1279, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1287) #14
  %1288 = load i8, i8* %3, align 8
  %1289 = icmp eq i8 %1288, 0
  %1290 = load i32, i32* %1254, align 8
  %1291 = add nsw i32 %1290, -1
  store i32 %1291, i32* %1254, align 8
  br i1 %1289, label %1292, label %1722

1292:                                             ; preds = %1286
  store i32 %1290, i32* %1254, align 8
  %1293 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 3
  %1294 = bitcast %"class.v8::internal::AstNode"* %1293 to %"class.v8::internal::Expression"**
  %1295 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1294, align 8
  %1296 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1297 = load i64, i64* %4, align 8
  %1298 = icmp ult i64 %1296, %1297
  br i1 %1298, label %1299, label %1300

1299:                                             ; preds = %1292
  store i8 1, i8* %3, align 8
  br label %1302

1300:                                             ; preds = %1292
  %1301 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1295, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1301) #14
  br label %1302

1302:                                             ; preds = %1299, %1300
  %1303 = load i32, i32* %1254, align 8
  %1304 = add nsw i32 %1303, -1
  store i32 %1304, i32* %1254, align 8
  br label %1722

1305:                                             ; preds = %5
  %1306 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1307 = load i32, i32* %1306, align 8
  %1308 = add nsw i32 %1307, 1
  store i32 %1308, i32* %1306, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1310 = bitcast %"class.v8::internal::AstNode"* %1309 to %"class.v8::internal::Expression"**
  %1311 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1310, align 8
  %1312 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1311, i64 0, i32 0
  %1313 = load i8, i8* %3, align 8, !range !18
  %1314 = icmp eq i8 %1313, 0
  br i1 %1314, label %1315, label %1321

1315:                                             ; preds = %1305
  %1316 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1317 = load i64, i64* %4, align 8
  %1318 = icmp ult i64 %1316, %1317
  br i1 %1318, label %1319, label %1320

1319:                                             ; preds = %1315
  store i8 1, i8* %3, align 8
  br label %1321

1320:                                             ; preds = %1315
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1312) #14
  br label %1321

1321:                                             ; preds = %1305, %1319, %1320
  %1322 = load i32, i32* %1306, align 8
  %1323 = add nsw i32 %1322, -1
  store i32 %1323, i32* %1306, align 8
  br label %1722

1324:                                             ; preds = %5
  %1325 = ptrtoint %"class.v8::internal::AstNode"* %6 to i64
  %1326 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 5
  %1327 = bitcast %"class.v8::internal::AstNode"* %1326 to %"class.v8::internal::DeclarationScope"**
  %1328 = bitcast %"class.v8::internal::AstNode"* %1326 to %"class.v8::internal::Scope"**
  %1329 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %1328, align 8
  %1330 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1331 = load i32, i32* %1330, align 8
  %1332 = add nsw i32 %1331, 1
  store i32 %1332, i32* %1330, align 8
  %1333 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1329, i64 0, i32 6, i32 0
  %1334 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %1329, i64 0, i32 6, i32 1
  %1335 = load %"class.v8::internal::Declaration"**, %"class.v8::internal::Declaration"*** %1334, align 8
  %1336 = icmp eq %"class.v8::internal::Declaration"** %1333, %1335
  %1337 = load i8, i8* %3, align 8
  br i1 %1336, label %1365, label %1338

1338:                                             ; preds = %1324
  %1339 = icmp eq i8 %1337, 0
  br label %1340

1340:                                             ; preds = %1338, %1358
  %1341 = phi i8 [ %1337, %1338 ], [ %1355, %1358 ]
  %1342 = phi i8 [ %1337, %1338 ], [ 0, %1358 ]
  %1343 = phi i1 [ %1339, %1338 ], [ true, %1358 ]
  %1344 = phi %"class.v8::internal::Declaration"** [ %1333, %1338 ], [ %1360, %1358 ]
  %1345 = bitcast %"class.v8::internal::Declaration"** %1344 to %"class.v8::internal::AstNode"**
  %1346 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %1345, align 8
  br i1 %1343, label %1347, label %1354

1347:                                             ; preds = %1340
  %1348 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1349 = load i64, i64* %4, align 8
  %1350 = icmp ult i64 %1348, %1349
  br i1 %1350, label %1351, label %1352

1351:                                             ; preds = %1347
  store i8 1, i8* %3, align 8
  br label %1362

1352:                                             ; preds = %1347
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1346) #14
  %1353 = load i8, i8* %3, align 8
  br label %1354

1354:                                             ; preds = %1340, %1352
  %1355 = phi i8 [ %1341, %1340 ], [ %1353, %1352 ]
  %1356 = phi i8 [ %1342, %1340 ], [ %1353, %1352 ]
  %1357 = icmp eq i8 %1356, 0
  br i1 %1357, label %1358, label %1362

1358:                                             ; preds = %1354
  %1359 = load %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** %1344, align 8
  %1360 = getelementptr inbounds %"class.v8::internal::Declaration", %"class.v8::internal::Declaration"* %1359, i64 0, i32 2
  %1361 = icmp eq %"class.v8::internal::Declaration"** %1360, %1335
  br i1 %1361, label %1362, label %1340

1362:                                             ; preds = %1358, %1354, %1351
  %1363 = phi i8 [ 1, %1351 ], [ %1355, %1354 ], [ %1355, %1358 ]
  %1364 = load i32, i32* %1330, align 8
  br label %1365

1365:                                             ; preds = %1324, %1362
  %1366 = phi i8 [ %1363, %1362 ], [ %1337, %1324 ]
  %1367 = phi i32 [ %1364, %1362 ], [ %1332, %1324 ]
  %1368 = add nsw i32 %1367, -1
  store i32 %1368, i32* %1330, align 8
  %1369 = icmp eq i8 %1366, 0
  br i1 %1369, label %1370, label %1406

1370:                                             ; preds = %1365
  %1371 = load %"class.v8::internal::DeclarationScope"*, %"class.v8::internal::DeclarationScope"** %1327, align 8
  %1372 = getelementptr inbounds %"class.v8::internal::DeclarationScope", %"class.v8::internal::DeclarationScope"* %1371, i64 0, i32 1
  %1373 = load i16, i16* %1372, align 1
  %1374 = trunc i16 %1373 to i8
  %1375 = icmp slt i8 %1374, 0
  br i1 %1375, label %1406, label %1376

1376:                                             ; preds = %1370
  store i32 %1367, i32* %1330, align 8
  %1377 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 7, i32 1
  %1378 = load i32, i32* %1377, align 4
  %1379 = icmp sgt i32 %1378, 0
  br i1 %1379, label %1380, label %1404

1380:                                             ; preds = %1376
  %1381 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 6
  %1382 = bitcast %"class.v8::internal::AstNode"* %1381 to %"class.v8::internal::Statement"***
  br label %1387

1383:                                             ; preds = %1397
  %1384 = load i32, i32* %1377, align 4
  %1385 = sext i32 %1384 to i64
  %1386 = icmp slt i64 %1400, %1385
  br i1 %1386, label %1387, label %1401

1387:                                             ; preds = %1383, %1380
  %1388 = phi i64 [ 0, %1380 ], [ %1400, %1383 ]
  %1389 = load %"class.v8::internal::Statement"**, %"class.v8::internal::Statement"*** %1382, align 8
  %1390 = getelementptr inbounds %"class.v8::internal::Statement"*, %"class.v8::internal::Statement"** %1389, i64 %1388
  %1391 = bitcast %"class.v8::internal::Statement"** %1390 to %"class.v8::internal::AstNode"**
  %1392 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %1391, align 8
  %1393 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1394 = load i64, i64* %4, align 8
  %1395 = icmp ult i64 %1393, %1394
  br i1 %1395, label %1396, label %1397

1396:                                             ; preds = %1387
  store i8 1, i8* %3, align 8
  br label %1401

1397:                                             ; preds = %1387
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1392) #14
  %1398 = load i8, i8* %3, align 8
  %1399 = icmp eq i8 %1398, 0
  %1400 = add nuw nsw i64 %1388, 1
  br i1 %1399, label %1383, label %1401

1401:                                             ; preds = %1397, %1383, %1396
  %1402 = load i32, i32* %1330, align 8
  %1403 = add nsw i32 %1402, -1
  br label %1404

1404:                                             ; preds = %1401, %1376
  %1405 = phi i32 [ %1403, %1401 ], [ %1368, %1376 ]
  store i32 %1405, i32* %1330, align 8
  br label %1406

1406:                                             ; preds = %1365, %1370, %1404
  %1407 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 1
  %1408 = bitcast %"class.v8::internal::AstTraversalVisitor"* %1407 to %"class.std::__1::vector.1262"**
  %1409 = load %"class.std::__1::vector.1262"*, %"class.std::__1::vector.1262"** %1408, align 8
  %1410 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %1409, i64 0, i32 0, i32 1
  %1411 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %1410, align 8
  %1412 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %1409, i64 0, i32 0, i32 2, i32 0, i32 0
  %1413 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %1412, align 8
  %1414 = icmp eq %"class.v8::internal::FunctionLiteral"** %1411, %1413
  %1415 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1413 to i64
  br i1 %1414, label %1421, label %1416

1416:                                             ; preds = %1406
  %1417 = bitcast %"class.v8::internal::FunctionLiteral"** %1411 to i64*
  store i64 %1325, i64* %1417, align 8
  %1418 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1411, i64 1
  %1419 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1418 to i64
  %1420 = bitcast %"class.v8::internal::FunctionLiteral"*** %1410 to i64*
  store i64 %1419, i64* %1420, align 8
  br label %1722

1421:                                             ; preds = %1406
  %1422 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1411 to i64
  %1423 = bitcast %"class.v8::internal::FunctionLiteral"*** %1410 to i64*
  %1424 = bitcast %"class.std::__1::vector.1262"* %1409 to i64*
  %1425 = load i64, i64* %1424, align 8
  %1426 = sub i64 %1422, %1425
  %1427 = ashr exact i64 %1426, 3
  %1428 = add nsw i64 %1427, 1
  %1429 = icmp ugt i64 %1428, 2305843009213693951
  br i1 %1429, label %1430, label %1432

1430:                                             ; preds = %1421
  %1431 = bitcast %"class.std::__1::vector.1262"* %1409 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1431) #15
  unreachable

1432:                                             ; preds = %1421
  %1433 = bitcast %"class.v8::internal::FunctionLiteral"*** %1412 to i64*
  %1434 = sub i64 %1415, %1425
  %1435 = ashr exact i64 %1434, 3
  %1436 = icmp ult i64 %1435, 1152921504606846975
  br i1 %1436, label %1437, label %1445

1437:                                             ; preds = %1432
  %1438 = ashr exact i64 %1434, 2
  %1439 = icmp ult i64 %1438, %1428
  %1440 = select i1 %1439, i64 %1428, i64 %1438
  %1441 = icmp eq i64 %1440, 0
  br i1 %1441, label %1450, label %1442

1442:                                             ; preds = %1437
  %1443 = icmp ugt i64 %1440, 2305843009213693951
  br i1 %1443, label %1444, label %1445

1444:                                             ; preds = %1442
  tail call void @abort() #15
  unreachable

1445:                                             ; preds = %1442, %1432
  %1446 = phi i64 [ %1440, %1442 ], [ 2305843009213693951, %1432 ]
  %1447 = shl i64 %1446, 3
  %1448 = tail call i8* @_Znwm(i64 %1447) #16
  %1449 = bitcast i8* %1448 to %"class.v8::internal::FunctionLiteral"**
  br label %1450

1450:                                             ; preds = %1445, %1437
  %1451 = phi i64 [ %1446, %1445 ], [ 0, %1437 ]
  %1452 = phi %"class.v8::internal::FunctionLiteral"** [ %1449, %1445 ], [ null, %1437 ]
  %1453 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1452, i64 %1427
  %1454 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1452, i64 %1451
  %1455 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1454 to i64
  %1456 = bitcast %"class.v8::internal::FunctionLiteral"** %1453 to i64*
  store i64 %1325, i64* %1456, align 8
  %1457 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1453, i64 1
  %1458 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1457 to i64
  %1459 = getelementptr inbounds %"class.std::__1::vector.1262", %"class.std::__1::vector.1262"* %1409, i64 0, i32 0, i32 0
  %1460 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %1459, align 8
  %1461 = load i64, i64* %1423, align 8
  %1462 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1460 to i64
  %1463 = sub i64 %1461, %1462
  %1464 = ashr exact i64 %1463, 3
  %1465 = sub nsw i64 0, %1464
  %1466 = getelementptr inbounds %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1453, i64 %1465
  %1467 = ptrtoint %"class.v8::internal::FunctionLiteral"** %1466 to i64
  %1468 = icmp sgt i64 %1463, 0
  br i1 %1468, label %1469, label %1473

1469:                                             ; preds = %1450
  %1470 = bitcast %"class.v8::internal::FunctionLiteral"** %1466 to i8*
  %1471 = bitcast %"class.v8::internal::FunctionLiteral"** %1460 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1470, i8* align 8 %1471, i64 %1463, i1 false) #14
  %1472 = load %"class.v8::internal::FunctionLiteral"**, %"class.v8::internal::FunctionLiteral"*** %1459, align 8
  br label %1473

1473:                                             ; preds = %1469, %1450
  %1474 = phi %"class.v8::internal::FunctionLiteral"** [ %1460, %1450 ], [ %1472, %1469 ]
  store i64 %1467, i64* %1424, align 8
  store i64 %1458, i64* %1423, align 8
  store i64 %1455, i64* %1433, align 8
  %1475 = icmp eq %"class.v8::internal::FunctionLiteral"** %1474, null
  br i1 %1475, label %1722, label %1476

1476:                                             ; preds = %1473
  %1477 = bitcast %"class.v8::internal::FunctionLiteral"** %1474 to i8*
  tail call void @_ZdlPv(i8* %1477) #16
  br label %1722

1478:                                             ; preds = %5
  %1479 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1480 = load i32, i32* %1479, align 8
  %1481 = add nsw i32 %1480, 1
  store i32 %1481, i32* %1479, align 8
  %1482 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1483 = bitcast %"class.v8::internal::AstNode"* %1482 to %"class.v8::internal::Expression"**
  %1484 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1483, align 8
  %1485 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1484, i64 0, i32 0
  %1486 = load i8, i8* %3, align 8, !range !18
  %1487 = icmp eq i8 %1486, 0
  br i1 %1487, label %1488, label %1493

1488:                                             ; preds = %1478
  %1489 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1490 = load i64, i64* %4, align 8
  %1491 = icmp ult i64 %1489, %1490
  br i1 %1491, label %1492, label %1496

1492:                                             ; preds = %1488
  store i8 1, i8* %3, align 8
  br label %1493

1493:                                             ; preds = %1478, %1492
  %1494 = load i32, i32* %1479, align 8
  %1495 = add nsw i32 %1494, -1
  store i32 %1495, i32* %1479, align 8
  br label %1722

1496:                                             ; preds = %1488
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1485) #14
  %1497 = load i8, i8* %3, align 8
  %1498 = load i32, i32* %1479, align 8
  %1499 = add nsw i32 %1498, -1
  store i32 %1499, i32* %1479, align 8
  %1500 = icmp eq i8 %1497, 0
  br i1 %1500, label %1501, label %1722

1501:                                             ; preds = %1496
  %1502 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %1503 = bitcast %"class.v8::internal::AstNode"* %1502 to %"class.v8::internal::Expression"**
  %1504 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1503, align 8
  %1505 = icmp eq %"class.v8::internal::Expression"* %1504, null
  br i1 %1505, label %1722, label %1506

1506:                                             ; preds = %1501
  store i32 %1498, i32* %1479, align 8
  %1507 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1503, align 8
  %1508 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1509 = load i64, i64* %4, align 8
  %1510 = icmp ult i64 %1508, %1509
  br i1 %1510, label %1511, label %1512

1511:                                             ; preds = %1506
  store i8 1, i8* %3, align 8
  br label %1514

1512:                                             ; preds = %1506
  %1513 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1507, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1513) #14
  br label %1514

1514:                                             ; preds = %1511, %1512
  %1515 = load i32, i32* %1479, align 8
  %1516 = add nsw i32 %1515, -1
  store i32 %1516, i32* %1479, align 8
  br label %1722

1517:                                             ; preds = %5
  %1518 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1519 = load i32, i32* %1518, align 8
  %1520 = add nsw i32 %1519, 1
  store i32 %1520, i32* %1518, align 8
  %1521 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1522 = bitcast %"class.v8::internal::AstNode"* %1521 to %"class.v8::internal::Expression"**
  %1523 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1522, align 8
  %1524 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1523, i64 0, i32 0
  %1525 = load i8, i8* %3, align 8, !range !18
  %1526 = icmp eq i8 %1525, 0
  br i1 %1526, label %1527, label %1533

1527:                                             ; preds = %1517
  %1528 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1529 = load i64, i64* %4, align 8
  %1530 = icmp ult i64 %1528, %1529
  br i1 %1530, label %1531, label %1532

1531:                                             ; preds = %1527
  store i8 1, i8* %3, align 8
  br label %1533

1532:                                             ; preds = %1527
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1524) #14
  br label %1533

1533:                                             ; preds = %1517, %1531, %1532
  %1534 = load i32, i32* %1518, align 8
  %1535 = add nsw i32 %1534, -1
  store i32 %1535, i32* %1518, align 8
  br label %1722

1536:                                             ; preds = %5
  %1537 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1538 = load i32, i32* %1537, align 8
  %1539 = add nsw i32 %1538, 1
  store i32 %1539, i32* %1537, align 8
  %1540 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1541 = bitcast %"class.v8::internal::AstNode"* %1540 to %"class.v8::internal::Expression"**
  %1542 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1541, align 8
  %1543 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1542, i64 0, i32 0
  %1544 = load i8, i8* %3, align 8, !range !18
  %1545 = icmp eq i8 %1544, 0
  br i1 %1545, label %1546, label %1551

1546:                                             ; preds = %1536
  %1547 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1548 = load i64, i64* %4, align 8
  %1549 = icmp ult i64 %1547, %1548
  br i1 %1549, label %1550, label %1554

1550:                                             ; preds = %1546
  store i8 1, i8* %3, align 8
  br label %1551

1551:                                             ; preds = %1536, %1550
  %1552 = load i32, i32* %1537, align 8
  %1553 = add nsw i32 %1552, -1
  store i32 %1553, i32* %1537, align 8
  br label %1722

1554:                                             ; preds = %1546
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1543) #14
  %1555 = load i8, i8* %3, align 8
  %1556 = load i32, i32* %1537, align 8
  %1557 = add nsw i32 %1556, -1
  store i32 %1557, i32* %1537, align 8
  %1558 = icmp eq i8 %1555, 0
  br i1 %1558, label %1559, label %1722

1559:                                             ; preds = %1554
  store i32 %1556, i32* %1537, align 8
  %1560 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %1561 = bitcast %"class.v8::internal::AstNode"* %1560 to %"class.v8::internal::Expression"**
  %1562 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1561, align 8
  %1563 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1564 = load i64, i64* %4, align 8
  %1565 = icmp ult i64 %1563, %1564
  br i1 %1565, label %1566, label %1567

1566:                                             ; preds = %1559
  store i8 1, i8* %3, align 8
  br label %1569

1567:                                             ; preds = %1559
  %1568 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1562, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1568) #14
  br label %1569

1569:                                             ; preds = %1566, %1567
  %1570 = load i32, i32* %1537, align 8
  %1571 = add nsw i32 %1570, -1
  store i32 %1571, i32* %1537, align 8
  br label %1722

1572:                                             ; preds = %5
  %1573 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1574 = load i32, i32* %1573, align 8
  %1575 = add nsw i32 %1574, 1
  store i32 %1575, i32* %1573, align 8
  %1576 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %1577 = bitcast %"class.v8::internal::AstNode"* %1576 to %"class.v8::internal::Expression"**
  %1578 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1577, align 8
  %1579 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1578, i64 0, i32 0
  %1580 = load i8, i8* %3, align 8, !range !18
  %1581 = icmp eq i8 %1580, 0
  br i1 %1581, label %1582, label %1588

1582:                                             ; preds = %1572
  %1583 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1584 = load i64, i64* %4, align 8
  %1585 = icmp ult i64 %1583, %1584
  br i1 %1585, label %1586, label %1587

1586:                                             ; preds = %1582
  store i8 1, i8* %3, align 8
  br label %1588

1587:                                             ; preds = %1582
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1579) #14
  br label %1588

1588:                                             ; preds = %1572, %1586, %1587
  %1589 = load i32, i32* %1573, align 8
  %1590 = add nsw i32 %1589, -1
  store i32 %1590, i32* %1573, align 8
  br label %1722

1591:                                             ; preds = %5
  %1592 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 2
  %1593 = bitcast %"class.v8::internal::AstNode"* %1592 to %"class.v8::internal::ZoneList.1388"**
  %1594 = load %"class.v8::internal::ZoneList.1388"*, %"class.v8::internal::ZoneList.1388"** %1593, align 8
  %1595 = getelementptr inbounds %"class.v8::internal::ZoneList.1388", %"class.v8::internal::ZoneList.1388"* %1594, i64 0, i32 0
  %1596 = load %"class.v8::internal::Expression"**, %"class.v8::internal::Expression"*** %1595, align 8
  %1597 = getelementptr inbounds %"class.v8::internal::ZoneList.1388", %"class.v8::internal::ZoneList.1388"* %1594, i64 0, i32 2
  %1598 = load i32, i32* %1597, align 4
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1596, i64 %1599
  %1601 = icmp eq i32 %1598, 0
  br i1 %1601, label %1722, label %1602

1602:                                             ; preds = %1591
  %1603 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1604 = load i32, i32* %1603, align 8
  %1605 = load i8, i8* %3, align 8, !range !18
  %1606 = icmp eq i8 %1605, 0
  %1607 = bitcast %"class.v8::internal::Expression"** %1596 to %"class.v8::internal::AstNode"**
  %1608 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %1607, align 8
  %1609 = add nsw i32 %1604, 1
  store i32 %1609, i32* %1603, align 8
  br i1 %1606, label %1610, label %1617

1610:                                             ; preds = %1602
  %1611 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1612 = load i64, i64* %4, align 8
  %1613 = icmp ult i64 %1611, %1612
  br i1 %1613, label %1616, label %1614

1614:                                             ; preds = %1610
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1608) #14
  %1615 = load i8, i8* %3, align 8
  br label %1617

1616:                                             ; preds = %1610
  store i8 1, i8* %3, align 8
  br label %1617

1617:                                             ; preds = %1616, %1614, %1602
  %1618 = phi i8 [ %1605, %1602 ], [ 1, %1616 ], [ %1615, %1614 ]
  %1619 = load i32, i32* %1603, align 8
  %1620 = add nsw i32 %1619, -1
  store i32 %1620, i32* %1603, align 8
  %1621 = icmp ne i8 %1618, 0
  %1622 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1596, i64 1
  %1623 = icmp eq i32 %1598, 1
  %1624 = or i1 %1621, %1623
  br i1 %1624, label %1722, label %1625

1625:                                             ; preds = %1617, %1637
  %1626 = phi i32 [ %1640, %1637 ], [ %1620, %1617 ]
  %1627 = phi %"class.v8::internal::Expression"** [ %1642, %1637 ], [ %1622, %1617 ]
  %1628 = bitcast %"class.v8::internal::Expression"** %1627 to %"class.v8::internal::AstNode"**
  %1629 = load %"class.v8::internal::AstNode"*, %"class.v8::internal::AstNode"** %1628, align 8
  %1630 = add nsw i32 %1626, 1
  store i32 %1630, i32* %1603, align 8
  %1631 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1632 = load i64, i64* %4, align 8
  %1633 = icmp ult i64 %1631, %1632
  br i1 %1633, label %1634, label %1635

1634:                                             ; preds = %1625
  store i8 1, i8* %3, align 8
  br label %1637

1635:                                             ; preds = %1625
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1629) #14
  %1636 = load i8, i8* %3, align 8
  br label %1637

1637:                                             ; preds = %1634, %1635
  %1638 = phi i8 [ 1, %1634 ], [ %1636, %1635 ]
  %1639 = load i32, i32* %1603, align 8
  %1640 = add nsw i32 %1639, -1
  store i32 %1640, i32* %1603, align 8
  %1641 = icmp ne i8 %1638, 0
  %1642 = getelementptr inbounds %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1627, i64 1
  %1643 = icmp eq %"class.v8::internal::Expression"** %1642, %1600
  %1644 = or i1 %1641, %1643
  br i1 %1644, label %1722, label %1625, !llvm.loop !29

1645:                                             ; preds = %5
  %1646 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1647 = load i32, i32* %1646, align 8
  %1648 = add nsw i32 %1647, 1
  store i32 %1648, i32* %1646, align 8
  %1649 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1650 = bitcast %"class.v8::internal::AstNode"* %1649 to %"class.v8::internal::Expression"**
  %1651 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1650, align 8
  %1652 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1651, i64 0, i32 0
  %1653 = load i8, i8* %3, align 8, !range !18
  %1654 = icmp eq i8 %1653, 0
  br i1 %1654, label %1655, label %1661

1655:                                             ; preds = %1645
  %1656 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1657 = load i64, i64* %4, align 8
  %1658 = icmp ult i64 %1656, %1657
  br i1 %1658, label %1659, label %1660

1659:                                             ; preds = %1655
  store i8 1, i8* %3, align 8
  br label %1661

1660:                                             ; preds = %1655
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1652) #14
  br label %1661

1661:                                             ; preds = %1645, %1659, %1660
  %1662 = load i32, i32* %1646, align 8
  %1663 = add nsw i32 %1662, -1
  store i32 %1663, i32* %1646, align 8
  br label %1722

1664:                                             ; preds = %5
  %1665 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1666 = load i32, i32* %1665, align 8
  %1667 = add nsw i32 %1666, 1
  store i32 %1667, i32* %1665, align 8
  %1668 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1669 = bitcast %"class.v8::internal::AstNode"* %1668 to %"class.v8::internal::Expression"**
  %1670 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1669, align 8
  %1671 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1670, i64 0, i32 0
  %1672 = load i8, i8* %3, align 8, !range !18
  %1673 = icmp eq i8 %1672, 0
  br i1 %1673, label %1674, label %1680

1674:                                             ; preds = %1664
  %1675 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1676 = load i64, i64* %4, align 8
  %1677 = icmp ult i64 %1675, %1676
  br i1 %1677, label %1678, label %1679

1678:                                             ; preds = %1674
  store i8 1, i8* %3, align 8
  br label %1680

1679:                                             ; preds = %1674
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1671) #14
  br label %1680

1680:                                             ; preds = %1664, %1678, %1679
  %1681 = load i32, i32* %1665, align 8
  %1682 = add nsw i32 %1681, -1
  store i32 %1682, i32* %1665, align 8
  br label %1722

1683:                                             ; preds = %5
  %1684 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1685 = load i32, i32* %1684, align 8
  %1686 = add nsw i32 %1685, 1
  store i32 %1686, i32* %1684, align 8
  %1687 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1688 = bitcast %"class.v8::internal::AstNode"* %1687 to %"class.v8::internal::Expression"**
  %1689 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1688, align 8
  %1690 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1689, i64 0, i32 0
  %1691 = load i8, i8* %3, align 8, !range !18
  %1692 = icmp eq i8 %1691, 0
  br i1 %1692, label %1693, label %1699

1693:                                             ; preds = %1683
  %1694 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1695 = load i64, i64* %4, align 8
  %1696 = icmp ult i64 %1694, %1695
  br i1 %1696, label %1697, label %1698

1697:                                             ; preds = %1693
  store i8 1, i8* %3, align 8
  br label %1699

1698:                                             ; preds = %1693
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1690) #14
  br label %1699

1699:                                             ; preds = %1683, %1697, %1698
  %1700 = load i32, i32* %1684, align 8
  %1701 = add nsw i32 %1700, -1
  store i32 %1701, i32* %1684, align 8
  br label %1722

1702:                                             ; preds = %5
  %1703 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %1704 = load i32, i32* %1703, align 8
  %1705 = add nsw i32 %1704, 1
  store i32 %1705, i32* %1703, align 8
  %1706 = getelementptr inbounds %"class.v8::internal::AstNode", %"class.v8::internal::AstNode"* %6, i64 1
  %1707 = bitcast %"class.v8::internal::AstNode"* %1706 to %"class.v8::internal::Expression"**
  %1708 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %1707, align 8
  %1709 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %1708, i64 0, i32 0
  %1710 = load i8, i8* %3, align 8, !range !18
  %1711 = icmp eq i8 %1710, 0
  br i1 %1711, label %1712, label %1718

1712:                                             ; preds = %1702
  %1713 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %1714 = load i64, i64* %4, align 8
  %1715 = icmp ult i64 %1713, %1714
  br i1 %1715, label %1716, label %1717

1716:                                             ; preds = %1712
  store i8 1, i8* %3, align 8
  br label %1718

1717:                                             ; preds = %1712
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %1709) #14
  br label %1718

1718:                                             ; preds = %1702, %1716, %1717
  %1719 = load i32, i32* %1703, align 8
  %1720 = add nsw i32 %1719, -1
  store i32 %1720, i32* %1703, align 8
  br label %1722

1721:                                             ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

1722:                                             ; preds = %480, %456, %432, %383, %174, %138, %50, %24, %36, %62, %161, %150, %197, %186, %406, %395, %444, %468, %492, %5, %1144, %1161, %1189, %1208, %994, %1017, %959, %977, %905, %923, %849, %868, %696, %719, %638, %664, %678, %1617, %1637, %607, %595, %586, %622, %619, %592, %603, %543, %534, %513, %540, %551, %311, %329, %353, %285, %266, %352, %618, %602, %591, %550, %539, %491, %467, %443, %394, %300, %289, %185, %149, %121, %113, %104, %96, %87, %79, %61, %35, %160, %196, %405, %1141, %1186, %1205, %1012, %974, %920, %865, %714, %661, %675, %328, %282, %1551, %1493, %1283, %1268, %1230, %1105, %1084, %1066, %1044, %944, %890, %831, %795, %740, %839, %1151, %983, %952, %898, %685, %627, %1591, %556, %504, %304, %257, %431, %430, %419, %382, %381, %370, %369, %368, %357, %136, %135, %125, %23, %22, %11, %122, %105, %88, %252, %301, %743, %798, %834, %893, %947, %1108, %1087, %1069, %1047, %1233, %1286, %1271, %1496, %1554, %503, %479, %455, %418, %209, %173, %73, %49, %1569, %1514, %1501, %1476, %1473, %1416, %1302, %1248, %813, %758, %777, %1251, %1321, %1533, %1588, %1661, %1680, %1699, %1718
  ret void
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE15VisitAssignmentEPNS0_10AssignmentE(%"class.v8::internal::AstTraversalVisitor"*, %"class.v8::internal::Assignment"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 1
  %7 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %7, i64 0, i32 0
  %9 = getelementptr %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !18
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %33

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %14 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  store i8 1, i8* %9, align 8
  br label %33

18:                                               ; preds = %12
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %8) #14
  %19 = load i8, i8* %9, align 8
  %20 = load i32, i32* %3, align 8
  %21 = add nsw i32 %20, -1
  store i32 %21, i32* %3, align 8
  %22 = icmp eq i8 %19, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %18
  store i32 %20, i32* %3, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Assignment", %"class.v8::internal::Assignment"* %1, i64 0, i32 2
  %25 = load %"class.v8::internal::Expression"*, %"class.v8::internal::Expression"** %24, align 8
  %26 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #14
  %27 = getelementptr inbounds %"class.v8::internal::AstTraversalVisitor", %"class.v8::internal::AstTraversalVisitor"* %0, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %23
  store i8 1, i8* %9, align 8
  br label %33

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::internal::Expression", %"class.v8::internal::Expression"* %25, i64 0, i32 0
  tail call fastcc void @_ZN2v88internal19AstTraversalVisitorINS0_12_GLOBAL__N_123CollectFunctionLiteralsEE25VisitNoStackOverflowCheckEPNS0_7AstNodeE(%"class.v8::internal::AstTraversalVisitor"* %0, %"class.v8::internal::AstNode"* %32) #14
  br label %33

33:                                               ; preds = %31, %30, %17, %2
  %34 = load i32, i32* %3, align 8
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %3, align 8
  br label %36

36:                                               ; preds = %33, %18
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorIN2v88internal12_GLOBAL__N_119SourcePositionEventENS_9allocatorIS4_EEE12emplace_backIJRPNS2_15FunctionLiteralEbEEEvDpOT_(%"class.std::__1::vector.1400"*, %"class.v8::internal::FunctionLiteral"*, i8) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %6, align 8
  %8 = icmp ult %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, %7
  %9 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %7 to i64
  br i1 %8, label %10, label %26

10:                                               ; preds = %3
  %11 = icmp ne i8 %2, 0
  %12 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 0, i32 0
  br i1 %11, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %1) #14
  br label %17

15:                                               ; preds = %10
  %16 = tail call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %1) #14
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ]
  store i32 %18, i32* %12, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 0, i32 1
  %20 = xor i1 %11, true
  %21 = zext i1 %20 to i32
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 0, i32 2, i32 0
  store %"class.v8::internal::FunctionLiteral"* %1, %"class.v8::internal::FunctionLiteral"** %22, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 1
  %24 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %23 to i64
  %25 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %4 to i64*
  store i64 %24, i64* %25, align 8
  br label %94

26:                                               ; preds = %3
  %27 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5 to i64
  %28 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %4 to i64*
  %29 = bitcast %"class.std::__1::vector.1400"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %27, %30
  %32 = ashr exact i64 %31, 4
  %33 = add nsw i64 %32, 1
  %34 = icmp ugt i64 %33, 1152921504606846975
  br i1 %34, label %35, label %37

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::vector.1400"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #15
  unreachable

37:                                               ; preds = %26
  %38 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %6 to i64*
  %39 = sub i64 %9, %30
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %37
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %33
  %45 = select i1 %44, i64 %33, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

50:                                               ; preds = %47, %37
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %37 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 %32
  %59 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 %56
  %60 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %59 to i64
  %61 = icmp ne i8 %2, 0
  %62 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %58, i64 0, i32 0
  br i1 %61, label %63, label %65

63:                                               ; preds = %55
  %64 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %1) #14
  br label %67

65:                                               ; preds = %55
  %66 = tail call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %1) #14
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi i32 [ %64, %63 ], [ %66, %65 ]
  store i32 %68, i32* %62, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 %32, i32 1
  %70 = xor i1 %61, true
  %71 = zext i1 %70 to i32
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 %32, i32 2, i32 0
  store %"class.v8::internal::FunctionLiteral"* %1, %"class.v8::internal::FunctionLiteral"** %72, align 8
  %73 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %58, i64 1
  %74 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %73 to i64
  %75 = getelementptr %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %0, i64 0, i32 0, i32 0
  %76 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %75, align 8
  %77 = load i64, i64* %28, align 8
  %78 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %76 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 4
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %58, i64 %81
  %83 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %67
  %86 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %82 to i8*
  %87 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 %79, i1 false) #14
  %88 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %75, align 8
  br label %89

89:                                               ; preds = %85, %67
  %90 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %76, %67 ], [ %88, %85 ]
  store i64 %83, i64* %29, align 8
  store i64 %74, i64* %28, align 8
  store i64 %60, i64* %38, align 8
  %91 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %90 to i8*
  tail call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %92, %89, %17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16vectorIN2v88internal12_GLOBAL__N_119SourcePositionEventENS_9allocatorIS4_EEE12emplace_backIJRKNS2_17SourceChangeRangeEbEEEvDpOT_(%"class.std::__1::vector.1400"*, %"struct.v8::internal::SourceChangeRange"* nocapture readonly dereferenceable(16), i8) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %0, i64 0, i32 0, i32 1
  %5 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %6, align 8
  %8 = icmp ult %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, %7
  %9 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %7 to i64
  br i1 %8, label %10, label %34

10:                                               ; preds = %3
  %11 = icmp ne i8 %2, 0
  %12 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 1
  %15 = load i32, i32* %13, align 4
  %16 = load i32, i32* %14, align 4
  %17 = select i1 %11, i32 %15, i32 %16
  store i32 %17, i32* %12, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 0, i32 1
  %19 = select i1 %11, i32 2, i32 3
  store i32 %19, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 0, i32 2
  %21 = bitcast %union.anon.1402* %20 to i32*
  %22 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %14, align 4
  %27 = load i32, i32* %13, align 4
  %28 = sub i32 %23, %25
  %29 = sub i32 %28, %26
  %30 = add i32 %29, %27
  store i32 %30, i32* %21, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5, i64 1
  %32 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %31 to i64
  %33 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %4 to i64*
  store i64 %32, i64* %33, align 8
  br label %110

34:                                               ; preds = %3
  %35 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5 to i64
  %36 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %4 to i64*
  %37 = bitcast %"class.std::__1::vector.1400"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  %40 = ashr exact i64 %39, 4
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 1152921504606846975
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  %44 = bitcast %"class.std::__1::vector.1400"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #15
  unreachable

45:                                               ; preds = %34
  %46 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %6 to i64*
  %47 = sub i64 %9, %38
  %48 = ashr exact i64 %47, 4
  %49 = icmp ult i64 %48, 576460752303423487
  br i1 %49, label %50, label %58

50:                                               ; preds = %45
  %51 = ashr exact i64 %47, 3
  %52 = icmp ult i64 %51, %41
  %53 = select i1 %52, i64 %41, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 1152921504606846975
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #15
  unreachable

58:                                               ; preds = %55, %45
  %59 = phi i64 [ %53, %55 ], [ 1152921504606846975, %45 ]
  %60 = shl i64 %59, 4
  %61 = tail call i8* @_Znwm(i64 %60) #16
  %62 = bitcast i8* %61 to %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %65, i64 %40
  %67 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %65, i64 %64
  %68 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %67 to i64
  %69 = icmp ne i8 %2, 0
  %70 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %66, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 1
  %73 = load i32, i32* %71, align 4
  %74 = load i32, i32* %72, align 4
  %75 = select i1 %69, i32 %73, i32 %74
  store i32 %75, i32* %70, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %65, i64 %40, i32 1
  %77 = select i1 %69, i32 2, i32 3
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %65, i64 %40, i32 2
  %79 = bitcast %union.anon.1402* %78 to i32*
  %80 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %1, i64 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* %72, align 4
  %85 = load i32, i32* %71, align 4
  %86 = sub i32 %81, %83
  %87 = sub i32 %86, %84
  %88 = add i32 %87, %85
  store i32 %88, i32* %79, align 8
  %89 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %66, i64 1
  %90 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %89 to i64
  %91 = getelementptr %"class.std::__1::vector.1400", %"class.std::__1::vector.1400"* %0, i64 0, i32 0, i32 0
  %92 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %91, align 8
  %93 = load i64, i64* %36, align 8
  %94 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %92 to i64
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 4
  %97 = sub nsw i64 0, %96
  %98 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %66, i64 %97
  %99 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %98 to i64
  %100 = icmp sgt i64 %95, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %63
  %102 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %98 to i8*
  %103 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 %95, i1 false) #14
  %104 = load %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"** %91, align 8
  br label %105

105:                                              ; preds = %101, %63
  %106 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %92, %63 ], [ %104, %101 ]
  store i64 %99, i64* %37, align 8
  store i64 %90, i64* %36, align 8
  store i64 %68, i64* %46, align 8
  %107 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %105
  %109 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %106 to i8*
  tail call void @_ZdlPv(i8* %109) #16
  br label %110

110:                                              ; preds = %108, %105, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2v88internal12_GLOBAL__N_119SourcePositionEvent8LessThanERKS2_S4_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* nocapture readonly dereferenceable(16), %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* nocapture readonly dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = icmp slt i32 %4, %6
  br label %69

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = icmp slt i32 %12, %14
  br label %69

18:                                               ; preds = %10
  switch i32 %12, label %61 [
    i32 0, label %19
    i32 1, label %40
  ]

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 0, i32 2, i32 0
  %21 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %20, align 8
  %22 = tail call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %21) #14
  %23 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 0, i32 2, i32 0
  %24 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %23, align 8
  %25 = tail call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %24) #14
  %26 = icmp eq i32 %22, %25
  %27 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %20, align 8
  br i1 %26, label %33, label %28

28:                                               ; preds = %19
  %29 = tail call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %27) #14
  %30 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %23, align 8
  %31 = tail call i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"* %30) #14
  %32 = icmp sgt i32 %29, %31
  br label %69

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %27, i64 0, i32 6
  %35 = load i32, i32* %34, align 4
  %36 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %23, align 8
  %37 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %36, i64 0, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %35, %38
  br label %69

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 0, i32 2, i32 0
  %42 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %41, align 8
  %43 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %42) #14
  %44 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 0, i32 2, i32 0
  %45 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %44, align 8
  %46 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %45) #14
  %47 = icmp eq i32 %43, %46
  %48 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %41, align 8
  br i1 %47, label %54, label %49

49:                                               ; preds = %40
  %50 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %48) #14
  %51 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %44, align 8
  %52 = tail call i32 @_ZNK2v88internal15FunctionLiteral14start_positionEv(%"class.v8::internal::FunctionLiteral"* %51) #14
  %53 = icmp sgt i32 %50, %52
  br label %69

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %48, i64 0, i32 6
  %56 = load i32, i32* %55, align 4
  %57 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %44, align 8
  %58 = getelementptr inbounds %"class.v8::internal::FunctionLiteral", %"class.v8::internal::FunctionLiteral"* %57, i64 0, i32 6
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %56, %59
  br label %69

61:                                               ; preds = %18
  %62 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 0, i32 2
  %63 = bitcast %union.anon.1402* %62 to i32*
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 0, i32 2
  %66 = bitcast %union.anon.1402* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = icmp slt i32 %64, %67
  br label %69

69:                                               ; preds = %61, %54, %49, %33, %28, %16, %8
  %70 = phi i1 [ %9, %8 ], [ %17, %16 ], [ %32, %28 ], [ %39, %33 ], [ %53, %49 ], [ %60, %54 ], [ %68, %61 ]
  ret i1 %70
}

declare i32 @_ZNK2v88internal15FunctionLiteral12end_positionEv(%"class.v8::internal::FunctionLiteral"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEvT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %5 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %6 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %7 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %8 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %9 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %10 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %11 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %12 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %13 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %14 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %15 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %16 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %17 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %18 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %19 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %20 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %21 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %22 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %23 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %24 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %25 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %26 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %27 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %28 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %29 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %30 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %31 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %32 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %33 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %34 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %18 to i8*
  %35 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %16 to i8*
  %36 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %15 to i8*
  %37 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %17 to i8*
  %38 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %14 to i8*
  %39 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %11 to i8*
  %40 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %13 to i8*
  %41 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %12 to i8*
  %42 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %10 to i8*
  %43 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %9 to i8*
  br label %44

44:                                               ; preds = %347, %3
  %45 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %1, %3 ], [ %330, %347 ]
  %46 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %0, %3 ], [ %57, %347 ]
  %47 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45 to i64
  %48 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i64 -1
  %49 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %48 to i8*
  %50 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %48 to i8*
  %51 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %48 to i8*
  %52 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %48 to i8*
  %53 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45 to i64
  br label %54

54:                                               ; preds = %356, %44
  %55 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %46, %44 ], [ %357, %356 ]
  br label %56

56:                                               ; preds = %286, %54
  %57 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %55, %54 ], [ %277, %286 ]
  %58 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i64
  %59 = sub i64 %47, %58
  %60 = ashr exact i64 %59, 4
  switch i64 %60, label %155 [
    i64 0, label %360
    i64 1, label %360
    i64 2, label %61
    i64 3, label %69
    i64 4, label %100
    i64 5, label %149
  ]

61:                                               ; preds = %56
  %62 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i64 -1
  %64 = tail call zeroext i1 %62(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %63, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  br i1 %64, label %65, label %360

65:                                               ; preds = %61
  %66 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66)
  %67 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %67, i64 16, i1 false) #14
  %68 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* nonnull align 8 %66, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66)
  br label %360

69:                                               ; preds = %56
  %70 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 1
  %71 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i64 -1
  %72 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %73 = tail call zeroext i1 %72(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %70, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  %74 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %75 = tail call zeroext i1 %74(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %71, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %70) #14
  br i1 %73, label %86, label %76

76:                                               ; preds = %69
  br i1 %75, label %77, label %360

77:                                               ; preds = %76
  %78 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78)
  %79 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* align 8 %79, i64 16, i1 false) #14
  %80 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* nonnull align 8 %78, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78)
  %81 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %82 = tail call zeroext i1 %81(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %70, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  br i1 %82, label %83, label %360

83:                                               ; preds = %77
  %84 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84)
  %85 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 %85, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %79, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %84, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84)
  br label %360

86:                                               ; preds = %69
  br i1 %75, label %87, label %91

87:                                               ; preds = %86
  %88 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88)
  %89 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %89, i64 16, i1 false) #14
  %90 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %88, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88)
  br label %360

91:                                               ; preds = %86
  %92 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92)
  %93 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %93, i64 16, i1 false) #14
  %94 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %92, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92)
  %95 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %96 = tail call zeroext i1 %95(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %71, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %70) #14
  br i1 %96, label %97, label %360

97:                                               ; preds = %91
  %98 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* align 8 %94, i64 16, i1 false) #14
  %99 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %99, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %98, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98)
  br label %360

100:                                              ; preds = %56
  %101 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 1
  %102 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 2
  %103 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i64 -1
  %104 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %105 = tail call zeroext i1 %104(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %101, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  %106 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %107 = tail call zeroext i1 %106(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %102, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %101) #14
  br i1 %105, label %118, label %108

108:                                              ; preds = %100
  br i1 %107, label %109, label %132

109:                                              ; preds = %108
  %110 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110)
  %111 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %111, i64 16, i1 false) #14
  %112 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 8 %110, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110)
  %113 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %114 = tail call zeroext i1 %113(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %101, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  br i1 %114, label %115, label %132

115:                                              ; preds = %109
  %116 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116)
  %117 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* align 8 %117, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %111, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* nonnull align 8 %116, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116)
  br label %132

118:                                              ; preds = %100
  br i1 %107, label %119, label %123

119:                                              ; preds = %118
  %120 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120)
  %121 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 8 %121, i64 16, i1 false) #14
  %122 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 8 %120, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120)
  br label %132

123:                                              ; preds = %118
  %124 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124)
  %125 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %125, i64 16, i1 false) #14
  %126 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* nonnull align 8 %124, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124)
  %127 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %128 = tail call zeroext i1 %127(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %102, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %101) #14
  br i1 %128, label %129, label %132

129:                                              ; preds = %123
  %130 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 8 %126, i64 16, i1 false) #14
  %131 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %131, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %130, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130)
  br label %132

132:                                              ; preds = %108, %109, %115, %119, %123, %129
  %133 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %134 = tail call zeroext i1 %133(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %103, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %102) #14
  br i1 %134, label %135, label %360

135:                                              ; preds = %132
  %136 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136)
  %137 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* align 8 %137, i64 16, i1 false) #14
  %138 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* nonnull align 8 %136, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136)
  %139 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %140 = tail call zeroext i1 %139(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %102, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %101) #14
  br i1 %140, label %141, label %360

141:                                              ; preds = %135
  %142 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142)
  %143 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 %143, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %137, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 8 %142, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142)
  %144 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %145 = tail call zeroext i1 %144(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %101, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  br i1 %145, label %146, label %360

146:                                              ; preds = %141
  %147 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %147)
  %148 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %147, i8* align 8 %148, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %143, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 8 %147, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %147)
  br label %360

149:                                              ; preds = %56
  %150 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 1
  %151 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 2
  %152 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 3
  %153 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i64 -1
  %154 = tail call fastcc i32 @_ZNSt3__17__sort5IRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %150, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %151, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %152, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %153, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  br label %360

155:                                              ; preds = %56
  %156 = icmp slt i64 %59, 496
  br i1 %156, label %157, label %216

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 2
  %159 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 1
  %160 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %161 = tail call zeroext i1 %160(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %159, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  %162 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %163 = tail call zeroext i1 %162(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %158, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %159) #14
  br i1 %161, label %174, label %164

164:                                              ; preds = %157
  br i1 %163, label %165, label %188

165:                                              ; preds = %164
  %166 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166)
  %167 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %166, i8* align 8 %167, i64 16, i1 false) #14
  %168 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* nonnull align 8 %166, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166)
  %169 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %170 = tail call zeroext i1 %169(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %159, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  br i1 %170, label %171, label %188

171:                                              ; preds = %165
  %172 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172)
  %173 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %172, i8* align 8 %173, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %167, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* nonnull align 8 %172, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172)
  br label %188

174:                                              ; preds = %157
  br i1 %163, label %175, label %179

175:                                              ; preds = %174
  %176 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176)
  %177 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %176, i8* align 8 %177, i64 16, i1 false) #14
  %178 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* nonnull align 8 %176, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176)
  br label %188

179:                                              ; preds = %174
  %180 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %180)
  %181 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %180, i8* align 8 %181, i64 16, i1 false) #14
  %182 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* nonnull align 8 %180, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %180)
  %183 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %184 = tail call zeroext i1 %183(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %158, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %159) #14
  br i1 %184, label %185, label %188

185:                                              ; preds = %179
  %186 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %186, i8* align 8 %182, i64 16, i1 false) #14
  %187 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %187, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* nonnull align 8 %186, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186)
  br label %188

188:                                              ; preds = %185, %179, %175, %171, %165, %164
  %189 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 3
  %190 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %189, %45
  br i1 %190, label %360, label %191

191:                                              ; preds = %188
  %192 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %24 to i8*
  br label %193

193:                                              ; preds = %213, %191
  %194 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %189, %191 ], [ %214, %213 ]
  %195 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %158, %191 ], [ %194, %213 ]
  %196 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %197 = call zeroext i1 %196(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %194, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %195) #14
  br i1 %197, label %198, label %213

198:                                              ; preds = %193
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #14
  %199 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %194 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %192, i8* align 8 %199, i64 16, i1 false) #14
  br label %200

200:                                              ; preds = %206, %198
  %201 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %194, %198 ], [ %202, %206 ]
  %202 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %195, %198 ], [ %208, %206 ]
  %203 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %201 to i8*
  %204 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 16, i1 false) #14
  %205 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %202, %57
  br i1 %205, label %210, label %206

206:                                              ; preds = %200
  %207 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %208 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %202, i64 -1
  %209 = call zeroext i1 %207(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* nonnull dereferenceable(16) %24, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %208) #14
  br i1 %209, label %200, label %210

210:                                              ; preds = %200, %206
  %211 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %202, %206 ], [ %57, %200 ]
  %212 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* nonnull align 8 %192, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #14
  br label %213

213:                                              ; preds = %210, %193
  %214 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %194, i64 1
  %215 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %214, %45
  br i1 %215, label %360, label %193

216:                                              ; preds = %155
  %217 = icmp sgt i64 %59, 15984
  %218 = sdiv i64 %60, 2
  %219 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 %218
  br i1 %217, label %220, label %225

220:                                              ; preds = %216
  %221 = sdiv i64 %60, 4
  %222 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 %221
  %223 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %219, i64 %221
  %224 = tail call fastcc i32 @_ZNSt3__17__sort5IRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %222, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %219, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %223, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %48, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  br label %246

225:                                              ; preds = %216
  %226 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %227 = tail call zeroext i1 %226(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %219, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  %228 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %229 = tail call zeroext i1 %228(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %48, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %219) #14
  br i1 %227, label %237, label %230

230:                                              ; preds = %225
  br i1 %229, label %231, label %246

231:                                              ; preds = %230
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  %232 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %232, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %49, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %34, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  %233 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %234 = tail call zeroext i1 %233(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %219, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57) #14
  br i1 %234, label %235, label %246

235:                                              ; preds = %231
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  %236 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %236, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %236, i8* align 8 %232, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* nonnull align 8 %35, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  br label %246

237:                                              ; preds = %225
  br i1 %229, label %238, label %240

238:                                              ; preds = %237
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38)
  %239 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %239, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 8 %51, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %38, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38)
  br label %246

240:                                              ; preds = %237
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36)
  %241 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %241, i64 16, i1 false) #14
  %242 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %219 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* nonnull align 8 %36, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36)
  %243 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %244 = tail call zeroext i1 %243(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %48, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %219) #14
  br i1 %244, label %245, label %246

245:                                              ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %242, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %50, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %37, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  br label %246

246:                                              ; preds = %245, %240, %238, %235, %231, %230, %220
  %247 = phi i32 [ %224, %220 ], [ 1, %238 ], [ 0, %230 ], [ 2, %235 ], [ 1, %231 ], [ 2, %245 ], [ 1, %240 ]
  %248 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %249 = tail call zeroext i1 %248(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %219) #14
  br i1 %249, label %298, label %250

250:                                              ; preds = %246, %291
  %251 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %252, %291 ], [ %48, %246 ]
  %252 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %251, i64 -1
  %253 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, %252
  br i1 %253, label %254, label %291

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 1
  %256 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %257 = tail call zeroext i1 %256(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %48) #14
  br i1 %257, label %270, label %258

258:                                              ; preds = %254
  %259 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %255, %48
  br i1 %259, label %360, label %260

260:                                              ; preds = %258, %267
  %261 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %268, %267 ], [ %255, %258 ]
  %262 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %263 = tail call zeroext i1 %262(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %261) #14
  br i1 %263, label %264, label %267

264:                                              ; preds = %260
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  %265 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %265, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %52, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %40, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  %266 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %261, i64 1
  br label %270

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %261, i64 1
  %269 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %268, %48
  br i1 %269, label %360, label %260

270:                                              ; preds = %264, %254
  %271 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %255, %254 ], [ %266, %264 ]
  %272 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %271, %48
  br i1 %272, label %360, label %273

273:                                              ; preds = %270, %288
  %274 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %280, %288 ], [ %271, %270 ]
  %275 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %284, %288 ], [ %48, %270 ]
  br label %276

276:                                              ; preds = %276, %273
  %277 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %274, %273 ], [ %280, %276 ]
  %278 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %279 = tail call zeroext i1 %278(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %277) #14
  %280 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %277, i64 1
  br i1 %279, label %281, label %276

281:                                              ; preds = %276, %281
  %282 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %284, %281 ], [ %275, %276 ]
  %283 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %284 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %282, i64 -1
  %285 = tail call zeroext i1 %283(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %284) #14
  br i1 %285, label %281, label %286

286:                                              ; preds = %281
  %287 = icmp ult %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %277, %284
  br i1 %287, label %288, label %56

288:                                              ; preds = %286
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %289 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %289, i64 16, i1 false) #14
  %290 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %284 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %289, i8* align 8 %290, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* nonnull align 8 %41, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  br label %273

291:                                              ; preds = %250
  %292 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %293 = tail call zeroext i1 %292(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %252, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %219) #14
  br i1 %293, label %294, label %250

294:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  %295 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %295, i64 16, i1 false) #14
  %296 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %252 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %295, i8* align 8 %296, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* nonnull align 8 %39, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %297 = add i32 %247, 1
  br label %298

298:                                              ; preds = %246, %294
  %299 = phi i32 [ %297, %294 ], [ %247, %246 ]
  %300 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %252, %294 ], [ %48, %246 ]
  %301 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57 to i64
  %302 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, i64 1
  %303 = icmp ult %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %302, %300
  br i1 %303, label %304, label %327

304:                                              ; preds = %298, %321
  %305 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %326, %321 ], [ %219, %298 ]
  %306 = phi i32 [ %324, %321 ], [ %299, %298 ]
  %307 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %313, %321 ], [ %302, %298 ]
  %308 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %317, %321 ], [ %300, %298 ]
  br label %309

309:                                              ; preds = %309, %304
  %310 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %307, %304 ], [ %313, %309 ]
  %311 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %312 = tail call zeroext i1 %311(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %310, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %305) #14
  %313 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %310, i64 1
  br i1 %312, label %309, label %314

314:                                              ; preds = %309, %314
  %315 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %317, %314 ], [ %308, %309 ]
  %316 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %317 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %315, i64 -1
  %318 = tail call zeroext i1 %316(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %317, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %305) #14
  br i1 %318, label %319, label %314

319:                                              ; preds = %314
  %320 = icmp ugt %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %310, %317
  br i1 %320, label %327, label %321

321:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42)
  %322 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %322, i64 16, i1 false) #14
  %323 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %317 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %322, i8* align 8 %323, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %323, i8* nonnull align 8 %42, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42)
  %324 = add i32 %306, 1
  %325 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %305, %310
  %326 = select i1 %325, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %317, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %305
  br label %304

327:                                              ; preds = %319, %298
  %328 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %219, %298 ], [ %305, %319 ]
  %329 = phi i32 [ %299, %298 ], [ %306, %319 ]
  %330 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %302, %298 ], [ %310, %319 ]
  %331 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330, %328
  br i1 %331, label %339, label %332

332:                                              ; preds = %327
  %333 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %334 = tail call zeroext i1 %333(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %328, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %330) #14
  br i1 %334, label %335, label %339

335:                                              ; preds = %332
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43)
  %336 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %336, i64 16, i1 false) #14
  %337 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %328 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %336, i8* align 8 %337, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %337, i8* nonnull align 8 %43, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43)
  %338 = add i32 %329, 1
  br label %339

339:                                              ; preds = %327, %335, %332
  %340 = phi i32 [ %338, %335 ], [ %329, %332 ], [ %329, %327 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %349

342:                                              ; preds = %339
  %343 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEbT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  %344 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330, i64 1
  %345 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEbT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %344, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  br i1 %345, label %346, label %348

346:                                              ; preds = %342
  br i1 %343, label %360, label %347

347:                                              ; preds = %346, %358
  br label %44

348:                                              ; preds = %342
  br i1 %343, label %356, label %349

349:                                              ; preds = %348, %339
  %350 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330 to i64
  %351 = sub i64 %350, %301
  %352 = sub i64 %53, %350
  %353 = icmp slt i64 %351, %352
  br i1 %353, label %354, label %358

354:                                              ; preds = %349
  tail call fastcc void @_ZNSt3__16__sortIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEvT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %57, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  %355 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330, i64 1
  br label %356

356:                                              ; preds = %354, %348
  %357 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %344, %348 ], [ %355, %354 ]
  br label %54

358:                                              ; preds = %349
  %359 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %330, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEvT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %359, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %45, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  br label %347

360:                                              ; preds = %346, %270, %56, %56, %258, %267, %213, %188, %146, %141, %135, %132, %97, %91, %87, %83, %77, %76, %61, %65, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %7 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %8 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %9 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %10 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %11 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %12 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %13 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %14 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %15 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %16 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %17 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %18 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %19 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %20 = tail call zeroext i1 %19(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  %21 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %22 = tail call zeroext i1 %21(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %2, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1) #14
  br i1 %20, label %33, label %23

23:                                               ; preds = %6
  br i1 %22, label %24, label %47

24:                                               ; preds = %23
  %25 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25)
  %26 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %26, i64 16, i1 false) #14
  %27 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %25, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25)
  %28 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %29 = tail call zeroext i1 %28(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %29, label %30, label %47

30:                                               ; preds = %24
  %31 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  %32 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %32, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %26, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %31, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  br label %47

33:                                               ; preds = %6
  br i1 %22, label %34, label %38

34:                                               ; preds = %33
  %35 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  %36 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %36, i64 16, i1 false) #14
  %37 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %35, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  br label %47

38:                                               ; preds = %33
  %39 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  %40 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %40, i64 16, i1 false) #14
  %41 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %39, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %42 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %43 = tail call zeroext i1 %42(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %2, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1) #14
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %41, i64 16, i1 false) #14
  %46 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %46, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %45, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  br label %47

47:                                               ; preds = %23, %24, %30, %34, %38, %44
  %48 = phi i32 [ 1, %34 ], [ 0, %23 ], [ 2, %30 ], [ 1, %24 ], [ 2, %44 ], [ 1, %38 ]
  %49 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %50 = tail call zeroext i1 %49(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %3, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %2) #14
  br i1 %50, label %51, label %68

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 %53, i64 16, i1 false) #14
  %54 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %52, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  %55 = add nuw nsw i32 %48, 1
  %56 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %57 = tail call zeroext i1 %56(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %2, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1) #14
  br i1 %57, label %58, label %68

58:                                               ; preds = %51
  %59 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59)
  %60 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %60, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %53, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %59, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59)
  %61 = add nuw nsw i32 %48, 2
  %62 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %63 = tail call zeroext i1 %62(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %63, label %64, label %68

64:                                               ; preds = %58
  %65 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65)
  %66 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %66, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %60, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %65, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65)
  %67 = add nuw nsw i32 %48, 3
  br label %68

68:                                               ; preds = %47, %51, %58, %64
  %69 = phi i32 [ %67, %64 ], [ %61, %58 ], [ %55, %51 ], [ %48, %47 ]
  %70 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %71 = tail call zeroext i1 %70(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %4, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %3) #14
  br i1 %71, label %72, label %95

72:                                               ; preds = %68
  %73 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73)
  %74 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 %74, i64 16, i1 false) #14
  %75 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* nonnull align 8 %73, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73)
  %76 = add nuw nsw i32 %69, 1
  %77 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %78 = tail call zeroext i1 %77(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %3, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %2) #14
  br i1 %78, label %79, label %95

79:                                               ; preds = %72
  %80 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80)
  %81 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %80, i8* align 8 %81, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %74, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %80, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80)
  %82 = add nuw nsw i32 %69, 2
  %83 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %84 = tail call zeroext i1 %83(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %2, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1) #14
  br i1 %84, label %85, label %95

85:                                               ; preds = %79
  %86 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86)
  %87 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 8 %87, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %81, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %86, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86)
  %88 = add nuw nsw i32 %69, 3
  %89 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %5, align 8
  %90 = tail call zeroext i1 %89(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %1, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %90, label %91, label %95

91:                                               ; preds = %85
  %92 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92)
  %93 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %93, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %87, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %92, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92)
  %94 = add nuw nsw i32 %69, 4
  br label %95

95:                                               ; preds = %72, %85, %91, %79, %68
  %96 = phi i32 [ %94, %91 ], [ %88, %85 ], [ %82, %79 ], [ %76, %72 ], [ %69, %68 ]
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEbT0_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %4 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %5 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %6 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %7 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %8 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %9 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %10 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %11 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %12 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %13 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %14 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %15 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %16 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %17 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %18 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %19 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %20 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %21 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %22 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %23 = alloca %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", align 8
  %24 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1 to i64
  %25 = ptrtoint %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i64
  %26 = sub i64 %24, %25
  %27 = ashr exact i64 %26, 4
  switch i64 %27, label %122 [
    i64 0, label %188
    i64 1, label %188
    i64 2, label %28
    i64 3, label %36
    i64 4, label %67
    i64 5, label %116
  ]

28:                                               ; preds = %3
  %29 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %30 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 -1
  %31 = tail call zeroext i1 %29(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %30, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %31, label %32, label %188

32:                                               ; preds = %28
  %33 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  %34 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %34, i64 16, i1 false) #14
  %35 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %33, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  br label %188

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 1
  %38 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 -1
  %39 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %40 = tail call zeroext i1 %39(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %37, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  %41 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %42 = tail call zeroext i1 %41(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %38, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %37) #14
  br i1 %40, label %53, label %43

43:                                               ; preds = %36
  br i1 %42, label %44, label %188

44:                                               ; preds = %43
  %45 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  %46 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %46, i64 16, i1 false) #14
  %47 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %45, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  %48 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %49 = tail call zeroext i1 %48(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %37, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %49, label %50, label %188

50:                                               ; preds = %44
  %51 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51)
  %52 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %52, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %46, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %51, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51)
  br label %188

53:                                               ; preds = %36
  br i1 %42, label %54, label %58

54:                                               ; preds = %53
  %55 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55)
  %56 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %56, i64 16, i1 false) #14
  %57 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %55, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55)
  br label %188

58:                                               ; preds = %53
  %59 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59)
  %60 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 %60, i64 16, i1 false) #14
  %61 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %59, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59)
  %62 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %63 = tail call zeroext i1 %62(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %38, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %37) #14
  br i1 %63, label %64, label %188

64:                                               ; preds = %58
  %65 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %61, i64 16, i1 false) #14
  %66 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %66, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %65, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65)
  br label %188

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 1
  %69 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 2
  %70 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 -1
  %71 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %72 = tail call zeroext i1 %71(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %68, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  %73 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %74 = tail call zeroext i1 %73(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %69, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %68) #14
  br i1 %72, label %85, label %75

75:                                               ; preds = %67
  br i1 %74, label %76, label %99

76:                                               ; preds = %75
  %77 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77)
  %78 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 16, i1 false) #14
  %79 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %77, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77)
  %80 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %81 = tail call zeroext i1 %80(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %68, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %81, label %82, label %99

82:                                               ; preds = %76
  %83 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83)
  %84 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %78, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %83, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83)
  br label %99

85:                                               ; preds = %67
  br i1 %74, label %86, label %90

86:                                               ; preds = %85
  %87 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87)
  %88 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %88, i64 16, i1 false) #14
  %89 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %87, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87)
  br label %99

90:                                               ; preds = %85
  %91 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91)
  %92 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 %92, i64 16, i1 false) #14
  %93 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %91, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91)
  %94 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %95 = tail call zeroext i1 %94(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %69, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %68) #14
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* align 8 %93, i64 16, i1 false) #14
  %98 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %98, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %97, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97)
  br label %99

99:                                               ; preds = %75, %76, %82, %86, %90, %96
  %100 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %101 = tail call zeroext i1 %100(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %70, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %69) #14
  br i1 %101, label %102, label %188

102:                                              ; preds = %99
  %103 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103)
  %104 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %104, i64 16, i1 false) #14
  %105 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %103, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103)
  %106 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %107 = tail call zeroext i1 %106(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %69, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %68) #14
  br i1 %107, label %108, label %188

108:                                              ; preds = %102
  %109 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109)
  %110 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* align 8 %110, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %104, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %109, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109)
  %111 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %112 = tail call zeroext i1 %111(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %68, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %112, label %113, label %188

113:                                              ; preds = %108
  %114 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114)
  %115 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %115, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %110, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* nonnull align 8 %114, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114)
  br label %188

116:                                              ; preds = %3
  %117 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 1
  %118 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 2
  %119 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 3
  %120 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %1, i64 -1
  %121 = tail call fastcc i32 @_ZNSt3__17__sort5IRPFbRKN2v88internal12_GLOBAL__N_119SourcePositionEventES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %117, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %118, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %119, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %120, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** dereferenceable(8) %2)
  br label %188

122:                                              ; preds = %3
  %123 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 2
  %124 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 1
  %125 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %126 = tail call zeroext i1 %125(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %124, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  %127 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %128 = tail call zeroext i1 %127(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %123, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %124) #14
  br i1 %126, label %139, label %129

129:                                              ; preds = %122
  br i1 %128, label %130, label %153

130:                                              ; preds = %129
  %131 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131)
  %132 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* align 8 %132, i64 16, i1 false) #14
  %133 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* nonnull align 8 %131, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131)
  %134 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %135 = tail call zeroext i1 %134(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %124, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %0) #14
  br i1 %135, label %136, label %153

136:                                              ; preds = %130
  %137 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137)
  %138 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* align 8 %138, i64 16, i1 false) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %132, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %137, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137)
  br label %153

139:                                              ; preds = %122
  br i1 %128, label %140, label %144

140:                                              ; preds = %139
  %141 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141)
  %142 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 %142, i64 16, i1 false) #14
  %143 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 8 %141, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141)
  br label %153

144:                                              ; preds = %139
  %145 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145)
  %146 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %145, i8* align 8 %146, i64 16, i1 false) #14
  %147 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %145, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145)
  %148 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %149 = tail call zeroext i1 %148(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %123, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %124) #14
  br i1 %149, label %150, label %153

150:                                              ; preds = %144
  %151 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %151, i8* align 8 %147, i64 16, i1 false) #14
  %152 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %152, i64 16, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* nonnull align 8 %151, i64 16, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151)
  br label %153

153:                                              ; preds = %129, %130, %136, %140, %144, %150
  %154 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %0, i64 3
  %155 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %154, %1
  br i1 %155, label %188, label %156

156:                                              ; preds = %153
  %157 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %23 to i8*
  br label %158

158:                                              ; preds = %156, %181
  %159 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %154, %156 ], [ %183, %181 ]
  %160 = phi i32 [ 0, %156 ], [ %182, %181 ]
  %161 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %123, %156 ], [ %159, %181 ]
  %162 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %163 = call zeroext i1 %162(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %159, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %161) #14
  br i1 %163, label %164, label %181

164:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #14
  %165 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %157, i8* align 8 %165, i64 16, i1 false)
  br label %166

166:                                              ; preds = %172, %164
  %167 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %159, %164 ], [ %168, %172 ]
  %168 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %161, %164 ], [ %174, %172 ]
  %169 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %167 to i8*
  %170 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false)
  %171 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %168, %0
  br i1 %171, label %176, label %172

172:                                              ; preds = %166
  %173 = load i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)*, i1 (%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"*)** %2, align 8
  %174 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %168, i64 -1
  %175 = call zeroext i1 %173(%"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* nonnull dereferenceable(16) %23, %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* dereferenceable(16) %174) #14
  br i1 %175, label %166, label %176

176:                                              ; preds = %166, %172
  %177 = phi %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* [ %168, %172 ], [ %0, %166 ]
  %178 = bitcast %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* nonnull align 8 %157, i64 16, i1 false)
  %179 = add i32 %160, 1
  %180 = icmp eq i32 %179, 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #14
  br i1 %180, label %185, label %181

181:                                              ; preds = %176, %158
  %182 = phi i32 [ %179, %176 ], [ %160, %158 ]
  %183 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %159, i64 1
  %184 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %183, %1
  br i1 %184, label %188, label %158

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent", %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %159, i64 1
  %187 = icmp eq %"struct.v8::internal::(anonymous namespace)::SourcePositionEvent"* %186, %1
  br label %188

188:                                              ; preds = %181, %185, %153, %113, %108, %102, %99, %64, %58, %54, %50, %44, %43, %28, %32, %3, %3, %116
  %189 = phi i1 [ true, %116 ], [ true, %3 ], [ true, %3 ], [ true, %32 ], [ true, %28 ], [ true, %43 ], [ true, %44 ], [ true, %50 ], [ true, %54 ], [ true, %58 ], [ true, %64 ], [ true, %99 ], [ true, %102 ], [ true, %108 ], [ true, %113 ], [ true, %153 ], [ %187, %185 ], [ true, %181 ]
  ret i1 %189
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1270"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %178, label %4

4:                                                ; preds = %2
  %5 = icmp ugt i64 %1, 2305843009213693951
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @abort() #15
  unreachable

7:                                                ; preds = %4
  %8 = shl i64 %1, 3
  %9 = tail call i8* @_Znwm(i64 %8) #16
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.1270", %"class.std::__1::__hash_table.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %12 = bitcast %"class.std::__1::__hash_table.1270"* %0 to i8**
  store i8* %9, i8** %12, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.1274"** %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast %"struct.std::__1::__hash_node_base.1274"** %11 to i8*
  tail call void @_ZdlPv(i8* %15) #16
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.1270", %"class.std::__1::__hash_table.1270"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %17, align 8
  %18 = add i64 %1, -1
  %19 = and i64 %1, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = sub i64 %1, %19
  br label %39

23:                                               ; preds = %39, %16
  %24 = phi i64 [ 0, %16 ], [ %53, %39 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ %19, %23 ]
  %29 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %29, i64 %27
  store %"struct.std::__1::__hash_node_base.1274"* null, %"struct.std::__1::__hash_node_base.1274"** %30, align 8
  %31 = add nuw i64 %27, 1
  %32 = add i64 %28, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %26, !llvm.loop !30

34:                                               ; preds = %26, %23
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.1270", %"class.std::__1::__hash_table.1270"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %37, null
  br i1 %38, label %186, label %56

39:                                               ; preds = %39, %21
  %40 = phi i64 [ 0, %21 ], [ %53, %39 ]
  %41 = phi i64 [ %22, %21 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.1274"* null, %"struct.std::__1::__hash_node_base.1274"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.1274"* null, %"struct.std::__1::__hash_node_base.1274"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.1274"* null, %"struct.std::__1::__hash_node_base.1274"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.1274"* null, %"struct.std::__1::__hash_node_base.1274"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %23, label %39

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %37, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1274"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !2
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = add i64 %1, -1
  %64 = and i64 %59, %63
  br label %69

65:                                               ; preds = %56
  %66 = icmp ult i64 %59, %1
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %59, %1
  br label %69

69:                                               ; preds = %62, %65, %67
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %59, %65 ]
  %71 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %71, i64 %70
  store %"struct.std::__1::__hash_node_base.1274"* %35, %"struct.std::__1::__hash_node_base.1274"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %37, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %74, null
  br i1 %75, label %186, label %76

76:                                               ; preds = %69
  %77 = add i64 %1, -1
  br i1 %61, label %78, label %130

78:                                               ; preds = %76, %121
  %79 = phi %"struct.std::__1::__hash_node_base.1274"* [ %125, %121 ], [ %74, %76 ]
  %80 = phi i64 [ %123, %121 ], [ %70, %76 ]
  %81 = phi %"struct.std::__1::__hash_node_base.1274"* [ %122, %121 ], [ %37, %76 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %79, i64 1
  %83 = bitcast %"struct.std::__1::__hash_node_base.1274"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %84, %1
  br i1 %85, label %88, label %86

86:                                               ; preds = %78
  %87 = urem i64 %84, %1
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i64 [ %87, %86 ], [ %84, %78 ]
  %90 = icmp eq i64 %89, %80
  br i1 %90, label %121, label %91

91:                                               ; preds = %88
  %92 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %92, i64 %89
  %94 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %94, null
  br i1 %95, label %120, label %127

96:                                               ; preds = %127, %101
  %97 = phi %"struct.std::__1::__hash_node_base.1274"* [ %99, %101 ], [ %79, %127 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %97, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %99, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %99, i64 2
  %103 = bitcast %"struct.std::__1::__hash_node_base.1274"* %102 to %"class.v8::internal::FunctionLiteral"**
  %104 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %129, align 8
  %105 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %103, align 8
  %106 = icmp eq %"class.v8::internal::FunctionLiteral"* %104, %105
  br i1 %106, label %96, label %107

107:                                              ; preds = %101, %96
  %108 = ptrtoint %"struct.std::__1::__hash_node_base.1274"* %99 to i64
  %109 = bitcast %"struct.std::__1::__hash_node_base.1274"* %97 to i64*
  %110 = bitcast %"struct.std::__1::__hash_node_base.1274"* %81 to i64*
  store i64 %108, i64* %110, align 8
  %111 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %111, i64 %89
  %113 = bitcast %"struct.std::__1::__hash_node_base.1274"** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %109, align 8
  %116 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %116, i64 %89
  %118 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %118, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1274"* %79, %"struct.std::__1::__hash_node_base.1274"** %119, align 8
  br label %121

120:                                              ; preds = %91
  store %"struct.std::__1::__hash_node_base.1274"* %81, %"struct.std::__1::__hash_node_base.1274"** %93, align 8
  br label %121

121:                                              ; preds = %120, %107, %88
  %122 = phi %"struct.std::__1::__hash_node_base.1274"* [ %79, %120 ], [ %81, %107 ], [ %79, %88 ]
  %123 = phi i64 [ %89, %120 ], [ %80, %107 ], [ %80, %88 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %122, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %125, null
  br i1 %126, label %186, label %78

127:                                              ; preds = %91
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %79, i64 2
  %129 = bitcast %"struct.std::__1::__hash_node_base.1274"* %128 to %"class.v8::internal::FunctionLiteral"**
  br label %96

130:                                              ; preds = %76, %172
  %131 = phi %"struct.std::__1::__hash_node_base.1274"* [ %176, %172 ], [ %74, %76 ]
  %132 = phi i64 [ %174, %172 ], [ %70, %76 ]
  %133 = phi %"struct.std::__1::__hash_node_base.1274"* [ %173, %172 ], [ %37, %76 ]
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %131, i64 1
  %135 = bitcast %"struct.std::__1::__hash_node_base.1274"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, %77
  %138 = icmp eq i64 %137, %132
  br i1 %138, label %172, label %139

139:                                              ; preds = %130
  %140 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %140, i64 %137
  %142 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %141, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %131, i64 2
  %146 = bitcast %"struct.std::__1::__hash_node_base.1274"* %145 to %"class.v8::internal::FunctionLiteral"**
  br label %148

147:                                              ; preds = %139
  store %"struct.std::__1::__hash_node_base.1274"* %133, %"struct.std::__1::__hash_node_base.1274"** %141, align 8
  br label %172

148:                                              ; preds = %144, %153
  %149 = phi %"struct.std::__1::__hash_node_base.1274"* [ %151, %153 ], [ %131, %144 ]
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %149, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %151, i64 2
  %155 = bitcast %"struct.std::__1::__hash_node_base.1274"* %154 to %"class.v8::internal::FunctionLiteral"**
  %156 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %146, align 8
  %157 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %155, align 8
  %158 = icmp eq %"class.v8::internal::FunctionLiteral"* %156, %157
  br i1 %158, label %148, label %159

159:                                              ; preds = %148, %153
  %160 = ptrtoint %"struct.std::__1::__hash_node_base.1274"* %151 to i64
  %161 = bitcast %"struct.std::__1::__hash_node_base.1274"* %149 to i64*
  %162 = bitcast %"struct.std::__1::__hash_node_base.1274"* %133 to i64*
  store i64 %160, i64* %162, align 8
  %163 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %163, i64 %137
  %165 = bitcast %"struct.std::__1::__hash_node_base.1274"** %164 to i64**
  %166 = load i64*, i64** %165, align 8
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %161, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %10, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %168, i64 %137
  %170 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %170, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1274"* %131, %"struct.std::__1::__hash_node_base.1274"** %171, align 8
  br label %172

172:                                              ; preds = %130, %159, %147
  %173 = phi %"struct.std::__1::__hash_node_base.1274"* [ %131, %147 ], [ %133, %159 ], [ %131, %130 ]
  %174 = phi i64 [ %137, %147 ], [ %132, %159 ], [ %132, %130 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1274", %"struct.std::__1::__hash_node_base.1274"* %173, i64 0, i32 0
  %176 = load %"struct.std::__1::__hash_node_base.1274"*, %"struct.std::__1::__hash_node_base.1274"** %175, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base.1274"* %176, null
  br i1 %177, label %186, label %130

178:                                              ; preds = %2
  %179 = getelementptr inbounds %"class.std::__1::__hash_table.1270", %"class.std::__1::__hash_table.1270"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %180 = load %"struct.std::__1::__hash_node_base.1274"**, %"struct.std::__1::__hash_node_base.1274"*** %179, align 8
  store %"struct.std::__1::__hash_node_base.1274"** null, %"struct.std::__1::__hash_node_base.1274"*** %179, align 8
  %181 = icmp eq %"struct.std::__1::__hash_node_base.1274"** %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = bitcast %"struct.std::__1::__hash_node_base.1274"** %180 to i8*
  tail call void @_ZdlPv(i8* %183) #16
  br label %184

184:                                              ; preds = %178, %182
  %185 = getelementptr inbounds %"class.std::__1::__hash_table.1270", %"class.std::__1::__hash_table.1270"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %185, align 8
  br label %186

186:                                              ; preds = %172, %121, %69, %34, %184
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__112__deque_baseINS_4pairIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_9allocatorIS8_EEED2Ev(%"class.std::__1::__deque_base.1411"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr %"class.std::__1::__deque_base.1411", %"class.std::__1::__deque_base.1411"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.1411", %"class.std::__1::__deque_base.1411"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 7
  %7 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %3, i64 %6
  %8 = getelementptr %"class.std::__1::__deque_base.1411", %"class.std::__1::__deque_base.1411"* %0, i64 0, i32 0, i32 2
  %9 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.1413"** %9, %3
  %11 = ptrtoint %"struct.std::__1::pair.1413"** %9 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1413"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.1411", %"class.std::__1::__deque_base.1411"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %7, align 8
  %17 = and i64 %5, 127
  %18 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.1411", %"class.std::__1::__deque_base.1411"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 7
  %23 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %3, i64 %22
  %24 = load %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %23, align 8
  %25 = and i64 %21, 127
  %26 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %24, i64 %25
  %27 = icmp eq %"struct.std::__1::pair.1413"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.std::__1::pair.1413"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi %"struct.std::__1::pair.1413"* [ %50, %47 ], [ %18, %15 ]
  %36 = phi %"struct.std::__1::pair.1413"** [ %48, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.1413", %"struct.std::__1::pair.1413"* %35, i64 1
  %38 = ptrtoint %"struct.std::__1::pair.1413"* %37 to i64
  %39 = bitcast %"struct.std::__1::pair.1413"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %36, i64 1
  %45 = bitcast %"struct.std::__1::pair.1413"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi %"struct.std::__1::pair.1413"** [ %44, %43 ], [ %36, %34 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %50 = inttoptr i64 %49 to %"struct.std::__1::pair.1413"*
  %51 = icmp eq %"struct.std::__1::pair.1413"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"struct.std::__1::pair.1413"** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"struct.std::__1::pair.1413"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #16
  %56 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %2, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %56, i64 1
  store %"struct.std::__1::pair.1413"** %57, %"struct.std::__1::pair.1413"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"struct.std::__1::pair.1413"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to %"struct.std::__1::pair.1413"**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi %"struct.std::__1::pair.1413"** [ %9, %28 ], [ %64, %63 ]
  %67 = phi %"struct.std::__1::pair.1413"** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 128, %69 ], [ 64, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq %"struct.std::__1::pair.1413"** %67, %66
  br i1 %73, label %83, label %74

74:                                               ; preds = %72, %74
  %75 = phi %"struct.std::__1::pair.1413"** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast %"struct.std::__1::pair.1413"** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #16
  %78 = getelementptr inbounds %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %75, i64 1
  %79 = icmp eq %"struct.std::__1::pair.1413"** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %2, align 8
  %82 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %8, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi %"struct.std::__1::pair.1413"** [ %82, %80 ], [ %66, %72 ]
  %85 = phi %"struct.std::__1::pair.1413"** [ %81, %80 ], [ %66, %72 ]
  %86 = icmp eq %"struct.std::__1::pair.1413"** %84, %85
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = ptrtoint %"struct.std::__1::pair.1413"** %85 to i64
  %89 = getelementptr %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %84, i64 -1
  %90 = ptrtoint %"struct.std::__1::pair.1413"** %89 to i64
  %91 = sub i64 %90, %88
  %92 = lshr i64 %91, 3
  %93 = xor i64 %92, -1
  %94 = getelementptr %"struct.std::__1::pair.1413"*, %"struct.std::__1::pair.1413"** %84, i64 %93
  store %"struct.std::__1::pair.1413"** %94, %"struct.std::__1::pair.1413"*** %8, align 8
  br label %95

95:                                               ; preds = %87, %83
  %96 = getelementptr inbounds %"class.std::__1::__deque_base.1411", %"class.std::__1::__deque_base.1411"* %0, i64 0, i32 0, i32 0
  %97 = load %"struct.std::__1::pair.1413"**, %"struct.std::__1::pair.1413"*** %96, align 8
  %98 = icmp eq %"struct.std::__1::pair.1413"** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast %"struct.std::__1::pair.1413"** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #16
  br label %101

101:                                              ; preds = %95, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(4) i32* @_ZNSt3__113unordered_mapIPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_111ChangeStateENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorINS_4pairIKS4_S6_EEEEEixERSD_(%"class.std::__1::unordered_map.1457"*, %"class.v8::internal::FunctionLiteral"** dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %1, align 8
  %5 = ptrtoint %"class.v8::internal::FunctionLiteral"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base.1462"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1462"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1462"* %59 to %"class.v8::internal::FunctionLiteral"**
  %61 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %60, align 8
  %62 = icmp eq %"class.v8::internal::FunctionLiteral"* %61, %4
  br i1 %62, label %210, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base.1462"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.1462"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1462"* %77 to %"class.v8::internal::FunctionLiteral"**
  %79 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %78, align 8
  %80 = icmp eq %"class.v8::internal::FunctionLiteral"* %79, %4
  br i1 %80, label %210, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %2
  %82 = phi i64 [ %33, %32 ], [ undef, %2 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 32) #16, !noalias !31
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast i8* %84 to i64*
  store i64 %5, i64* %85, align 8, !noalias !31
  %86 = getelementptr inbounds i8, i8* %83, i64 24
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 8, !noalias !31
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !31
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.1462"**
  store %"struct.std::__1::__hash_node_base.1462"* null, %"struct.std::__1::__hash_node_base.1462"** %90, align 8, !noalias !31
  %91 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %165

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !2
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #14
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  %114 = icmp eq i64 %113, 1
  br i1 %114, label %121, label %115

115:                                              ; preds = %101
  %116 = tail call i64 @llvm.ctpop.i64(i64 %113) #14, !range !2
  %117 = icmp ugt i64 %116, 1
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %113) #14
  %120 = load i64, i64* %19, align 8
  br label %121

121:                                              ; preds = %118, %115, %101
  %122 = phi i64 [ %120, %118 ], [ %20, %115 ], [ %20, %101 ]
  %123 = phi i64 [ %119, %118 ], [ %113, %115 ], [ 2, %101 ]
  %124 = icmp ugt i64 %123, %122
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_111ChangeStateEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1458"* %3, i64 %123) #14
  br label %154

126:                                              ; preds = %121
  %127 = icmp ult i64 %123, %122
  br i1 %127, label %128, label %154

128:                                              ; preds = %126
  %129 = icmp ugt i64 %122, 2
  %130 = tail call i64 @llvm.ctpop.i64(i64 %122) #14, !range !2
  %131 = icmp ult i64 %130, 2
  %132 = and i1 %129, %131
  %133 = load i64, i64* %91, align 8
  %134 = uitofp i64 %133 to float
  %135 = load float, float* %96, align 4
  %136 = fdiv float %134, %135
  %137 = tail call float @llvm.ceil.f32(float %136) #14
  %138 = fptoui float %137 to i64
  br i1 %132, label %139, label %146

139:                                              ; preds = %128
  %140 = icmp ult i64 %138, 2
  br i1 %140, label %148, label %141

141:                                              ; preds = %139
  %142 = add i64 %138, -1
  %143 = tail call i64 @llvm.ctlz.i64(i64 %142, i1 true) #14, !range !2
  %144 = sub nuw nsw i64 64, %143
  %145 = shl i64 1, %144
  br label %148

146:                                              ; preds = %128
  %147 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %138) #14
  br label %148

148:                                              ; preds = %146, %141, %139
  %149 = phi i64 [ %147, %146 ], [ %145, %141 ], [ %138, %139 ]
  %150 = icmp ult i64 %123, %149
  %151 = select i1 %150, i64 %149, i64 %123
  %152 = icmp ult i64 %151, %122
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  tail call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_111ChangeStateEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1458"* %3, i64 %151) #14
  br label %154

154:                                              ; preds = %153, %148, %126, %125
  %155 = load i64, i64* %19, align 8
  %156 = tail call i64 @llvm.ctpop.i64(i64 %155) #14, !range !2
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %154
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %81
  %166 = phi i64 [ %20, %81 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %82, %81 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::unordered_map.1457", %"class.std::__1::unordered_map.1457"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.1462"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %83 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base.1462"* %174 to i8**
  store i8* %83, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base.1462"* %174, %"struct.std::__1::__hash_node_base.1462"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %90, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.1462"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = tail call i64 @llvm.ctpop.i64(i64 %166) #14, !range !2
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %192, %190, %187
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base.1462"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base.1462"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %83 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.1462"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %83, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.1462"*
  %208 = load i64, i64* %91, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %91, align 8
  br label %210

210:                                              ; preds = %76, %58, %206
  %211 = phi %"struct.std::__1::__hash_node_base.1462"* [ %207, %206 ], [ %44, %58 ], [ %66, %76 ]
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %211, i64 3
  %213 = bitcast %"struct.std::__1::__hash_node_base.1462"* %212 to i32*
  ret i32* %213
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !18
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !18
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !18
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1500"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1496"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1524"* dereferenceable(8), %"class.std::__1::tuple.1488"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %70, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #14, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %26, null
  br i1 %27, label %70, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br i1 %13, label %30, label %52

30:                                               ; preds = %28, %47
  %31 = phi %"struct.std::__1::__hash_node_base.1500"* [ %33, %47 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %33, null
  br i1 %34, label %70, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1500"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %9
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %9
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %22
  br i1 %46, label %47, label %70

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1500"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %6
  br i1 %51, label %161, label %30

52:                                               ; preds = %28, %65
  %53 = phi %"struct.std::__1::__hash_node_base.1500"* [ %55, %65 ], [ %26, %28 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %53, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %55, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1500"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %7
  %62 = and i64 %60, %29
  %63 = icmp eq i64 %62, %22
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %70

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %55, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.1500"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %6
  br i1 %69, label %161, label %52

70:                                               ; preds = %57, %52, %44, %30, %21, %5
  %71 = phi i64 [ %22, %21 ], [ undef, %5 ], [ %22, %30 ], [ %22, %44 ], [ %22, %52 ], [ %22, %57 ]
  %72 = tail call i8* @_Znwm(i64 32) #16, !noalias !34
  %73 = getelementptr inbounds %"class.std::__1::tuple.1524", %"class.std::__1::tuple.1524"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8, !noalias !34
  %75 = getelementptr inbounds i8, i8* %72, i64 16
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %74, align 4, !noalias !34
  store i32 %77, i32* %76, align 8, !noalias !34
  %78 = getelementptr inbounds i8, i8* %72, i64 24
  %79 = bitcast i8* %78 to i64**
  store i64* null, i64** %79, align 8, !noalias !34
  %80 = getelementptr inbounds i8, i8* %72, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %7, i64* %81, align 8, !noalias !34
  %82 = bitcast i8* %72 to %"struct.std::__1::__hash_node_base.1500"**
  store %"struct.std::__1::__hash_node_base.1500"* null, %"struct.std::__1::__hash_node_base.1500"** %82, align 8, !noalias !34
  %83 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  %86 = uitofp i64 %85 to float
  %87 = uitofp i64 %9 to float
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 3, i32 0, i32 0
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, %87
  %91 = fcmp olt float %90, %86
  %92 = or i1 %10, %91
  br i1 %92, label %93, label %116

93:                                               ; preds = %70
  %94 = shl i64 %9, 1
  %95 = icmp ult i64 %9, 3
  %96 = tail call i64 @llvm.ctpop.i64(i64 %9) #14, !range !2
  %97 = icmp ugt i64 %96, 1
  %98 = or i1 %95, %97
  %99 = zext i1 %98 to i64
  %100 = or i64 %94, %99
  %101 = fdiv float %86, %89
  %102 = tail call float @llvm.ceil.f32(float %101) #14
  %103 = fptoui float %102 to i64
  %104 = icmp ult i64 %100, %103
  %105 = select i1 %104, i64 %103, i64 %100
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1496"* %0, i64 %105)
  %106 = load i64, i64* %8, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #14, !range !2
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %93
  %110 = add i64 %106, -1
  %111 = and i64 %110, %7
  br label %116

112:                                              ; preds = %93
  %113 = icmp ugt i64 %106, %7
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %7, %106
  br label %116

116:                                              ; preds = %114, %112, %109, %70
  %117 = phi i64 [ %9, %70 ], [ %106, %109 ], [ %106, %112 ], [ %106, %114 ]
  %118 = phi i64 [ %71, %70 ], [ %111, %109 ], [ %7, %112 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %120, i64 %118
  %122 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %122, null
  br i1 %123, label %124, label %150

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::__hash_node_base.1500"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %72 to i64*
  store i64 %127, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.1500"* %125 to i8**
  store i8* %72, i8** %129, align 8
  store %"struct.std::__1::__hash_node_base.1500"* %125, %"struct.std::__1::__hash_node_base.1500"** %121, align 8
  %130 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %82, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %130, i64 1
  %134 = bitcast %"struct.std::__1::__hash_node_base.1500"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = tail call i64 @llvm.ctpop.i64(i64 %117) #14, !range !2
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = add i64 %117, -1
  %140 = and i64 %135, %139
  br label %145

141:                                              ; preds = %132
  %142 = icmp ult i64 %135, %117
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = urem i64 %135, %117
  br label %145

145:                                              ; preds = %138, %141, %143
  %146 = phi i64 [ %140, %138 ], [ %144, %143 ], [ %135, %141 ]
  %147 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %119, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %147, i64 %146
  %149 = bitcast %"struct.std::__1::__hash_node_base.1500"** %148 to i8**
  br label %155

150:                                              ; preds = %116
  %151 = bitcast %"struct.std::__1::__hash_node_base.1500"* %122 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast i8* %72 to i64*
  store i64 %152, i64* %153, align 8
  %154 = bitcast %"struct.std::__1::__hash_node_base.1500"* %122 to i8**
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i8** [ %154, %150 ], [ %149, %145 ]
  store i8* %72, i8** %156, align 8
  br label %157

157:                                              ; preds = %155, %124
  %158 = bitcast i8* %72 to %"struct.std::__1::__hash_node_base.1500"*
  %159 = load i64, i64* %83, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %83, align 8
  br label %161

161:                                              ; preds = %65, %47, %157
  %162 = phi i8 [ 1, %157 ], [ 0, %47 ], [ 0, %65 ]
  %163 = phi %"struct.std::__1::__hash_node_base.1500"* [ %158, %157 ], [ %33, %47 ], [ %55, %65 ]
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1500"*, i8 } undef, %"struct.std::__1::__hash_node_base.1500"* %163, 0
  %165 = insertvalue { %"struct.std::__1::__hash_node_base.1500"*, i8 } %164, i8 %162, 1
  ret { %"struct.std::__1::__hash_node_base.1500"*, i8 } %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table.1496"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1496"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1496"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table.1496"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1496"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1500"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1500"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1502", %"class.std::__1::__bucket_list_deallocator.1502"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1500"* null, %"struct.std::__1::__hash_node_base.1500"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1500"* null, %"struct.std::__1::__hash_node_base.1500"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1500"* null, %"struct.std::__1::__hash_node_base.1500"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1500"* null, %"struct.std::__1::__hash_node_base.1500"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1500"* null, %"struct.std::__1::__hash_node_base.1500"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1500"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1500"* %36, %"struct.std::__1::__hash_node_base.1500"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1500"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1500"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1500"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1500"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1500"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1500"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1500"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1500"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1500"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1500"* %80, %"struct.std::__1::__hash_node_base.1500"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1500"* %82, %"struct.std::__1::__hash_node_base.1500"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1500"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1500"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1500"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1500"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1500"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1500"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1500"* %134, %"struct.std::__1::__hash_node_base.1500"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1500"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1500"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1500"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1500"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1500"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1500"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1500"* %132, %"struct.std::__1::__hash_node_base.1500"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1500"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1500", %"struct.std::__1::__hash_node_base.1500"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1500"*, %"struct.std::__1::__hash_node_base.1500"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1500"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1496", %"class.std::__1::__hash_table.1496"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1500"**, %"struct.std::__1::__hash_node_base.1500"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1500"** null, %"struct.std::__1::__hash_node_base.1500"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1500"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1500"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #16
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1502", %"class.std::__1::__bucket_list_deallocator.1502"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_111ChangeStateEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1458"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %178, label %4

4:                                                ; preds = %2
  %5 = icmp ugt i64 %1, 2305843009213693951
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @abort() #15
  unreachable

7:                                                ; preds = %4
  %8 = shl i64 %1, 3
  %9 = tail call i8* @_Znwm(i64 %8) #16
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.1458", %"class.std::__1::__hash_table.1458"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %12 = bitcast %"class.std::__1::__hash_table.1458"* %0 to i8**
  store i8* %9, i8** %12, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.1462"** %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast %"struct.std::__1::__hash_node_base.1462"** %11 to i8*
  tail call void @_ZdlPv(i8* %15) #16
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.1458", %"class.std::__1::__hash_table.1458"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %17, align 8
  %18 = add i64 %1, -1
  %19 = and i64 %1, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = sub i64 %1, %19
  br label %39

23:                                               ; preds = %39, %16
  %24 = phi i64 [ 0, %16 ], [ %53, %39 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ %19, %23 ]
  %29 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %29, i64 %27
  store %"struct.std::__1::__hash_node_base.1462"* null, %"struct.std::__1::__hash_node_base.1462"** %30, align 8
  %31 = add nuw i64 %27, 1
  %32 = add i64 %28, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %26, !llvm.loop !38

34:                                               ; preds = %26, %23
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.1458", %"class.std::__1::__hash_table.1458"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %37, null
  br i1 %38, label %186, label %56

39:                                               ; preds = %39, %21
  %40 = phi i64 [ 0, %21 ], [ %53, %39 ]
  %41 = phi i64 [ %22, %21 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.1462"* null, %"struct.std::__1::__hash_node_base.1462"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.1462"* null, %"struct.std::__1::__hash_node_base.1462"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.1462"* null, %"struct.std::__1::__hash_node_base.1462"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.1462"* null, %"struct.std::__1::__hash_node_base.1462"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %23, label %39

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %37, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.1462"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !2
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = add i64 %1, -1
  %64 = and i64 %59, %63
  br label %69

65:                                               ; preds = %56
  %66 = icmp ult i64 %59, %1
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %59, %1
  br label %69

69:                                               ; preds = %62, %65, %67
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %59, %65 ]
  %71 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %71, i64 %70
  store %"struct.std::__1::__hash_node_base.1462"* %35, %"struct.std::__1::__hash_node_base.1462"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %37, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %74, null
  br i1 %75, label %186, label %76

76:                                               ; preds = %69
  %77 = add i64 %1, -1
  br i1 %61, label %78, label %130

78:                                               ; preds = %76, %121
  %79 = phi %"struct.std::__1::__hash_node_base.1462"* [ %125, %121 ], [ %74, %76 ]
  %80 = phi i64 [ %123, %121 ], [ %70, %76 ]
  %81 = phi %"struct.std::__1::__hash_node_base.1462"* [ %122, %121 ], [ %37, %76 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %79, i64 1
  %83 = bitcast %"struct.std::__1::__hash_node_base.1462"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %84, %1
  br i1 %85, label %88, label %86

86:                                               ; preds = %78
  %87 = urem i64 %84, %1
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i64 [ %87, %86 ], [ %84, %78 ]
  %90 = icmp eq i64 %89, %80
  br i1 %90, label %121, label %91

91:                                               ; preds = %88
  %92 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %92, i64 %89
  %94 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %93, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %94, null
  br i1 %95, label %120, label %127

96:                                               ; preds = %127, %101
  %97 = phi %"struct.std::__1::__hash_node_base.1462"* [ %99, %101 ], [ %79, %127 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %97, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %99, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %99, i64 2
  %103 = bitcast %"struct.std::__1::__hash_node_base.1462"* %102 to %"class.v8::internal::FunctionLiteral"**
  %104 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %129, align 8
  %105 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %103, align 8
  %106 = icmp eq %"class.v8::internal::FunctionLiteral"* %104, %105
  br i1 %106, label %96, label %107

107:                                              ; preds = %101, %96
  %108 = ptrtoint %"struct.std::__1::__hash_node_base.1462"* %99 to i64
  %109 = bitcast %"struct.std::__1::__hash_node_base.1462"* %97 to i64*
  %110 = bitcast %"struct.std::__1::__hash_node_base.1462"* %81 to i64*
  store i64 %108, i64* %110, align 8
  %111 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %111, i64 %89
  %113 = bitcast %"struct.std::__1::__hash_node_base.1462"** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %109, align 8
  %116 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %116, i64 %89
  %118 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %118, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1462"* %79, %"struct.std::__1::__hash_node_base.1462"** %119, align 8
  br label %121

120:                                              ; preds = %91
  store %"struct.std::__1::__hash_node_base.1462"* %81, %"struct.std::__1::__hash_node_base.1462"** %93, align 8
  br label %121

121:                                              ; preds = %120, %107, %88
  %122 = phi %"struct.std::__1::__hash_node_base.1462"* [ %79, %120 ], [ %81, %107 ], [ %79, %88 ]
  %123 = phi i64 [ %89, %120 ], [ %80, %107 ], [ %80, %88 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %122, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %125, null
  br i1 %126, label %186, label %78

127:                                              ; preds = %91
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %79, i64 2
  %129 = bitcast %"struct.std::__1::__hash_node_base.1462"* %128 to %"class.v8::internal::FunctionLiteral"**
  br label %96

130:                                              ; preds = %76, %172
  %131 = phi %"struct.std::__1::__hash_node_base.1462"* [ %176, %172 ], [ %74, %76 ]
  %132 = phi i64 [ %174, %172 ], [ %70, %76 ]
  %133 = phi %"struct.std::__1::__hash_node_base.1462"* [ %173, %172 ], [ %37, %76 ]
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %131, i64 1
  %135 = bitcast %"struct.std::__1::__hash_node_base.1462"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, %77
  %138 = icmp eq i64 %137, %132
  br i1 %138, label %172, label %139

139:                                              ; preds = %130
  %140 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %140, i64 %137
  %142 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %141, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %131, i64 2
  %146 = bitcast %"struct.std::__1::__hash_node_base.1462"* %145 to %"class.v8::internal::FunctionLiteral"**
  br label %148

147:                                              ; preds = %139
  store %"struct.std::__1::__hash_node_base.1462"* %133, %"struct.std::__1::__hash_node_base.1462"** %141, align 8
  br label %172

148:                                              ; preds = %144, %153
  %149 = phi %"struct.std::__1::__hash_node_base.1462"* [ %151, %153 ], [ %131, %144 ]
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %149, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %151, i64 2
  %155 = bitcast %"struct.std::__1::__hash_node_base.1462"* %154 to %"class.v8::internal::FunctionLiteral"**
  %156 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %146, align 8
  %157 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %155, align 8
  %158 = icmp eq %"class.v8::internal::FunctionLiteral"* %156, %157
  br i1 %158, label %148, label %159

159:                                              ; preds = %148, %153
  %160 = ptrtoint %"struct.std::__1::__hash_node_base.1462"* %151 to i64
  %161 = bitcast %"struct.std::__1::__hash_node_base.1462"* %149 to i64*
  %162 = bitcast %"struct.std::__1::__hash_node_base.1462"* %133 to i64*
  store i64 %160, i64* %162, align 8
  %163 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %163, i64 %137
  %165 = bitcast %"struct.std::__1::__hash_node_base.1462"** %164 to i64**
  %166 = load i64*, i64** %165, align 8
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %161, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %10, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %168, i64 %137
  %170 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %169, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %170, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1462"* %131, %"struct.std::__1::__hash_node_base.1462"** %171, align 8
  br label %172

172:                                              ; preds = %130, %159, %147
  %173 = phi %"struct.std::__1::__hash_node_base.1462"* [ %131, %147 ], [ %133, %159 ], [ %131, %130 ]
  %174 = phi i64 [ %137, %147 ], [ %132, %159 ], [ %132, %130 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1462", %"struct.std::__1::__hash_node_base.1462"* %173, i64 0, i32 0
  %176 = load %"struct.std::__1::__hash_node_base.1462"*, %"struct.std::__1::__hash_node_base.1462"** %175, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base.1462"* %176, null
  br i1 %177, label %186, label %130

178:                                              ; preds = %2
  %179 = getelementptr inbounds %"class.std::__1::__hash_table.1458", %"class.std::__1::__hash_table.1458"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %180 = load %"struct.std::__1::__hash_node_base.1462"**, %"struct.std::__1::__hash_node_base.1462"*** %179, align 8
  store %"struct.std::__1::__hash_node_base.1462"** null, %"struct.std::__1::__hash_node_base.1462"*** %179, align 8
  %181 = icmp eq %"struct.std::__1::__hash_node_base.1462"** %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = bitcast %"struct.std::__1::__hash_node_base.1462"** %180 to i8*
  tail call void @_ZdlPv(i8* %183) #16
  br label %184

184:                                              ; preds = %178, %182
  %185 = getelementptr inbounds %"class.std::__1::__hash_table.1458", %"class.std::__1::__hash_table.1458"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %185, align 8
  br label %186

186:                                              ; preds = %172, %121, %69, %34, %184
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1302"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1298"*, %"class.v8::internal::FunctionLiteral"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1538"* dereferenceable(8), %"class.std::__1::tuple.1488"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::FunctionLiteral"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.v8::internal::FunctionLiteral"*
  br i1 %23, label %84, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br i1 %27, label %44, label %66

44:                                               ; preds = %42, %61
  %45 = phi %"struct.std::__1::__hash_node_base.1302"* [ %47, %61 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %47, null
  br i1 %48, label %84, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.1302"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = icmp ult i64 %52, %22
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %52, %22
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %57, %56 ], [ %52, %54 ]
  %60 = icmp eq i64 %59, %36
  br i1 %60, label %61, label %84

61:                                               ; preds = %58, %49
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %47, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.1302"* %62 to %"class.v8::internal::FunctionLiteral"**
  %64 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %63, align 8
  %65 = icmp eq %"class.v8::internal::FunctionLiteral"* %64, %24
  br i1 %65, label %175, label %44

66:                                               ; preds = %42, %79
  %67 = phi %"struct.std::__1::__hash_node_base.1302"* [ %69, %79 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %69, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1302"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, %20
  %76 = and i64 %74, %43
  %77 = icmp eq i64 %76, %36
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %69, i64 2
  %81 = bitcast %"struct.std::__1::__hash_node_base.1302"* %80 to %"class.v8::internal::FunctionLiteral"**
  %82 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %81, align 8
  %83 = icmp eq %"class.v8::internal::FunctionLiteral"* %82, %24
  br i1 %83, label %175, label %66

84:                                               ; preds = %71, %66, %58, %44, %35, %5
  %85 = phi i64 [ %36, %35 ], [ undef, %5 ], [ %36, %44 ], [ %36, %58 ], [ %36, %66 ], [ %36, %71 ]
  %86 = tail call i8* @_Znwm(i64 32) #16, !noalias !39
  %87 = getelementptr inbounds i8, i8* %86, i64 16
  %88 = bitcast %"class.std::__1::tuple.1538"* %3 to i64**
  %89 = load i64*, i64** %88, align 8, !noalias !39
  %90 = load i64, i64* %89, align 8, !noalias !39
  %91 = bitcast i8* %87 to i64*
  store i64 %90, i64* %91, align 8, !noalias !39
  %92 = getelementptr inbounds i8, i8* %86, i64 24
  %93 = bitcast i8* %92 to %"class.v8::internal::FunctionLiteral"**
  store %"class.v8::internal::FunctionLiteral"* null, %"class.v8::internal::FunctionLiteral"** %93, align 8, !noalias !39
  %94 = getelementptr inbounds i8, i8* %86, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %20, i64* %95, align 8, !noalias !39
  %96 = bitcast i8* %86 to %"struct.std::__1::__hash_node_base.1302"**
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %96, align 8, !noalias !39
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  %100 = uitofp i64 %99 to float
  %101 = uitofp i64 %22 to float
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %101
  %105 = fcmp olt float %104, %100
  %106 = or i1 %23, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %84
  %108 = shl i64 %22, 1
  %109 = icmp ult i64 %22, 3
  %110 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !2
  %111 = icmp ugt i64 %110, 1
  %112 = or i1 %109, %111
  %113 = zext i1 %112 to i64
  %114 = or i64 %108, %113
  %115 = fdiv float %100, %103
  %116 = tail call float @llvm.ceil.f32(float %115) #14
  %117 = fptoui float %116 to i64
  %118 = icmp ult i64 %114, %117
  %119 = select i1 %118, i64 %117, i64 %114
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1298"* %0, i64 %119)
  %120 = load i64, i64* %21, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %120) #14, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %107
  %124 = add i64 %120, -1
  %125 = and i64 %124, %20
  br label %130

126:                                              ; preds = %107
  %127 = icmp ult i64 %20, %120
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %20, %120
  br label %130

130:                                              ; preds = %128, %126, %123, %84
  %131 = phi i64 [ %22, %84 ], [ %120, %123 ], [ %120, %126 ], [ %120, %128 ]
  %132 = phi i64 [ %85, %84 ], [ %125, %123 ], [ %20, %126 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %134, i64 %132
  %136 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %136, null
  br i1 %137, label %138, label %164

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 1, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.1302"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %86 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.1302"* %139 to i8**
  store i8* %86, i8** %143, align 8
  store %"struct.std::__1::__hash_node_base.1302"* %139, %"struct.std::__1::__hash_node_base.1302"** %135, align 8
  %144 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %96, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.1302"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i64 @llvm.ctpop.i64(i64 %131) #14, !range !2
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %131, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %131
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %131
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %133, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %161, i64 %160
  %163 = bitcast %"struct.std::__1::__hash_node_base.1302"** %162 to i8**
  br label %169

164:                                              ; preds = %130
  %165 = bitcast %"struct.std::__1::__hash_node_base.1302"* %136 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %86 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.1302"* %136 to i8**
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi i8** [ %168, %164 ], [ %163, %159 ]
  store i8* %86, i8** %170, align 8
  br label %171

171:                                              ; preds = %169, %138
  %172 = bitcast i8* %86 to %"struct.std::__1::__hash_node_base.1302"*
  %173 = load i64, i64* %97, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %97, align 8
  br label %175

175:                                              ; preds = %79, %61, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %61 ], [ 0, %79 ]
  %177 = phi %"struct.std::__1::__hash_node_base.1302"* [ %172, %171 ], [ %47, %61 ], [ %69, %79 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.1302"*, i8 } undef, %"struct.std::__1::__hash_node_base.1302"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.1302"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.1302"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1298"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1298"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1298"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1298"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #16
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1298"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1302"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1304", %"class.std::__1::__bucket_list_deallocator.1304"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !42

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1302"* null, %"struct.std::__1::__hash_node_base.1302"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1302"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1302"* %36, %"struct.std::__1::__hash_node_base.1302"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1302"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1302"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1302"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1302"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1302"* %103 to %"class.v8::internal::FunctionLiteral"**
  %105 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %130, align 8
  %106 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %104, align 8
  %107 = icmp eq %"class.v8::internal::FunctionLiteral"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1302"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1302"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1302"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1302"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1302"* %80, %"struct.std::__1::__hash_node_base.1302"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1302"* %82, %"struct.std::__1::__hash_node_base.1302"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1302"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1302"* %129 to %"class.v8::internal::FunctionLiteral"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1302"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1302"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1302"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1302"* %146 to %"class.v8::internal::FunctionLiteral"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1302"* %134, %"struct.std::__1::__hash_node_base.1302"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1302"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1302"* %155 to %"class.v8::internal::FunctionLiteral"**
  %157 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %147, align 8
  %158 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %156, align 8
  %159 = icmp eq %"class.v8::internal::FunctionLiteral"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1302"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1302"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1302"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1302"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1302"* %132, %"struct.std::__1::__hash_node_base.1302"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1302"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1302"** null, %"struct.std::__1::__hash_node_base.1302"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1302"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1302"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #16
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1304", %"class.std::__1::__bucket_list_deallocator.1304"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1449"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1449"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1449"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap11VisitThreadEPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %5 = alloca %"class.std::__1::vector.1562", align 8
  %6 = alloca %"struct.v8::internal::(anonymous namespace)::FunctionData"*, align 8
  %7 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::StackFrameIterator"* nonnull %8, %"class.v8::internal::Isolate"* %1, %"class.v8::internal::ThreadLocalTop"* %2) #14
  %9 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %10 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %9, align 8
  %11 = icmp eq %"class.v8::internal::StackFrame"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #14
  %13 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %9, align 8
  %14 = icmp eq %"class.v8::internal::StackFrame"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = bitcast %"class.std::__1::vector.1562"* %5 to i8*
  %17 = getelementptr inbounds %"class.std::__1::vector.1562", %"class.std::__1::vector.1562"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.1562", %"class.std::__1::vector.1562"* %5, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.v8::internal::(anonymous namespace)::FunctionData"** %6 to i8*
  %20 = bitcast %"class.v8::internal::Handle.740"** %18 to i64*
  br label %22

21:                                               ; preds = %36, %3, %12
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %7) #14
  ret void

22:                                               ; preds = %15, %36
  %23 = phi %"class.v8::internal::StackFrame"* [ %13, %15 ], [ %37, %36 ]
  %24 = bitcast %"class.v8::internal::StackFrame"* %23 to %"class.v8::internal::JavaScriptFrame"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #14
  call void @_ZNK2v88internal15JavaScriptFrame12GetFunctionsEPNSt3__16vectorINS0_6HandleINS0_18SharedFunctionInfoEEENS2_9allocatorIS6_EEEE(%"class.v8::internal::JavaScriptFrame"* %24, %"class.std::__1::vector.1562"* nonnull %5) #14
  %25 = load %"class.v8::internal::Handle.740"*, %"class.v8::internal::Handle.740"** %17, align 8
  %26 = load %"class.v8::internal::Handle.740"*, %"class.v8::internal::Handle.740"** %18, align 8
  %27 = icmp eq %"class.v8::internal::Handle.740"* %25, %26
  br i1 %27, label %30, label %39

28:                                               ; preds = %48
  %29 = load %"class.v8::internal::Handle.740"*, %"class.v8::internal::Handle.740"** %17, align 8
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi %"class.v8::internal::Handle.740"* [ %29, %28 ], [ %25, %22 ]
  %32 = icmp eq %"class.v8::internal::Handle.740"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = ptrtoint %"class.v8::internal::Handle.740"* %31 to i64
  store i64 %34, i64* %20, align 8
  %35 = bitcast %"class.v8::internal::Handle.740"* %31 to i8*
  call void @_ZdlPv(i8* %35) #16
  br label %36

36:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #14
  %37 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %9, align 8
  %38 = icmp eq %"class.v8::internal::StackFrame"* %37, null
  br i1 %38, label %21, label %22

39:                                               ; preds = %22, %48
  %40 = phi %"class.v8::internal::Handle.740"* [ %49, %48 ], [ %25, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  store %"struct.v8::internal::(anonymous namespace)::FunctionData"* null, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %6, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Handle.740", %"class.v8::internal::Handle.740"* %40, i64 0, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %42, align 8
  %44 = call fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_115FunctionDataMap6LookupENS0_18SharedFunctionInfoEPPNS1_12FunctionDataE(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 %43, %"struct.v8::internal::(anonymous namespace)::FunctionData"** nonnull %6)
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = load %"struct.v8::internal::(anonymous namespace)::FunctionData"*, %"struct.v8::internal::(anonymous namespace)::FunctionData"** %6, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::(anonymous namespace)::FunctionData", %"struct.v8::internal::(anonymous namespace)::FunctionData"* %46, i64 0, i32 4
  store i32 1, i32* %47, align 8
  br label %48

48:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %49 = getelementptr inbounds %"class.v8::internal::Handle.740", %"class.v8::internal::Handle.740"* %40, i64 1
  %50 = icmp eq %"class.v8::internal::Handle.740"* %49, %26
  br i1 %50, label %28, label %39
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_115FunctionDataMapD0Ev(%"class.v8::internal::(anonymous namespace)::FunctionDataMap"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_115FunctionDataMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::FunctionDataMap", %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1576"**
  %6 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1321"* %3, %"class.std::__1::__tree_node.1576"* %6) #14
  %7 = bitcast %"class.v8::internal::(anonymous namespace)::FunctionDataMap"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #16
  ret void
}

declare void @_ZNK2v88internal15JavaScriptFrame12GetFunctionsEPNSt3__16vectorINS0_6HandleINS0_18SharedFunctionInfoEEENS2_9allocatorIS6_EEEE(%"class.v8::internal::JavaScriptFrame"*, %"class.std::__1::vector.1562"*) local_unnamed_addr #2

declare void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"*) local_unnamed_addr #2

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateEPNS0_14ThreadLocalTopE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadLocalTop"*) unnamed_addr #2

declare void @_ZN2v88internal18HeapObjectIteratorC1EPNS0_4HeapENS1_20HeapObjectsFilteringE(%"class.v8::internal::HeapObjectIterator"*, %"class.v8::internal::Heap"*, i32) unnamed_addr #2

declare i64 @_ZN2v88internal18HeapObjectIterator4NextEv(%"class.v8::internal::HeapObjectIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal18HeapObjectIteratorD1Ev(%"class.v8::internal::HeapObjectIterator"*) unnamed_addr #4

declare void @_ZN2v88internal13ThreadManager22IterateArchivedThreadsEPNS0_13ThreadVisitorE(%"class.v8::internal::ThreadManager"*, %"class.v8::internal::ThreadVisitor"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6HandleINS2_10JSFunctionEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_(%"class.std::__1::vector.1340"*, %"class.v8::internal::JSFunction"* dereferenceable(8), %"class.v8::internal::Isolate"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1340", %"class.std::__1::vector.1340"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::Handle.1342"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1340"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.1340"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.1340", %"class.std::__1::vector.1340"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::Handle.1342"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 2305843009213693951, %15 ]
  %32 = shl i64 %31, 3
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to %"class.v8::internal::Handle.1342"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.v8::internal::Handle.1342"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %37, i64 %10
  %39 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %37, i64 %36
  %40 = ptrtoint %"class.v8::internal::Handle.1342"* %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::JSFunction", %"class.v8::internal::JSFunction"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %38, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %35
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %42) #14
  br label %63

50:                                               ; preds = %35
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %43) #14
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %42, i64* %59, align 8
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ]
  store i64* %64, i64** %44, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %38, i64 1
  %66 = ptrtoint %"class.v8::internal::Handle.1342"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.1340", %"class.std::__1::vector.1340"* %0, i64 0, i32 0, i32 0
  %68 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %67, align 8
  %69 = load i64, i64* %5, align 8
  %70 = ptrtoint %"class.v8::internal::Handle.1342"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %"class.v8::internal::Handle.1342", %"class.v8::internal::Handle.1342"* %38, i64 %73
  %75 = ptrtoint %"class.v8::internal::Handle.1342"* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %63
  %78 = bitcast %"class.v8::internal::Handle.1342"* %74 to i8*
  %79 = bitcast %"class.v8::internal::Handle.1342"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #14
  %80 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %67, align 8
  br label %81

81:                                               ; preds = %63, %77
  %82 = phi %"class.v8::internal::Handle.1342"* [ %68, %63 ], [ %80, %77 ]
  store i64 %75, i64* %7, align 8
  store i64 %66, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %83 = icmp eq %"class.v8::internal::Handle.1342"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.v8::internal::Handle.1342"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #16
  br label %86

86:                                               ; preds = %81, %84
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal6HandleINS2_17JSGeneratorObjectEEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRS4_RPNS2_7IsolateEEEEvDpOT_(%"class.std::__1::vector.1348"*, %"class.v8::internal::JSGeneratorObject"* dereferenceable(8), %"class.v8::internal::Isolate"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.1348", %"class.std::__1::vector.1348"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::Handle.1350"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1348"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.1348"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.1348", %"class.std::__1::vector.1348"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::Handle.1350"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 2305843009213693951, %15 ]
  %32 = shl i64 %31, 3
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to %"class.v8::internal::Handle.1350"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.v8::internal::Handle.1350"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %37, i64 %10
  %39 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %37, i64 %36
  %40 = ptrtoint %"class.v8::internal::Handle.1350"* %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::JSGeneratorObject", %"class.v8::internal::JSGeneratorObject"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %38, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %35
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %42) #14
  br label %63

50:                                               ; preds = %35
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %43, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %43) #14
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %42, i64* %59, align 8
  br label %63

63:                                               ; preds = %48, %58
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ]
  store i64* %64, i64** %44, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %38, i64 1
  %66 = ptrtoint %"class.v8::internal::Handle.1350"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.1348", %"class.std::__1::vector.1348"* %0, i64 0, i32 0, i32 0
  %68 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %67, align 8
  %69 = load i64, i64* %5, align 8
  %70 = ptrtoint %"class.v8::internal::Handle.1350"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds %"class.v8::internal::Handle.1350", %"class.v8::internal::Handle.1350"* %38, i64 %73
  %75 = ptrtoint %"class.v8::internal::Handle.1350"* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %63
  %78 = bitcast %"class.v8::internal::Handle.1350"* %74 to i8*
  %79 = bitcast %"class.v8::internal::Handle.1350"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #14
  %80 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %67, align 8
  br label %81

81:                                               ; preds = %63, %77
  %82 = phi %"class.v8::internal::Handle.1350"* [ %68, %63 ], [ %80, %77 ]
  store i64 %75, i64* %7, align 8
  store i64 %66, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %83 = icmp eq %"class.v8::internal::Handle.1350"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.v8::internal::Handle.1350"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #16
  br label %86

86:                                               ; preds = %81, %84
  ret void
}

declare i32 @_ZNK2v88internal18SharedFunctionInfo11EndPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare void @_ZN2v88internal18SharedFunctionInfo11SetPositionEii(%"class.v8::internal::SharedFunctionInfo"*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal18SharedFunctionInfo24SetFunctionTokenPositionEii(%"class.v8::internal::SharedFunctionInfo"*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #2

declare void @_ZN2v88internal26SourcePositionTableBuilderC1EPNS0_4ZoneENS1_13RecordingModeE(%"class.v8::internal::SourcePositionTableBuilder"*, %"class.v8::internal::Zone"*, i32) unnamed_addr #2

declare void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_9ByteArrayENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"*, i64, i32, i32) unnamed_addr #2

declare void @_ZN2v88internal26SourcePositionTableBuilder11AddPositionEmNS0_14SourcePositionEb(%"class.v8::internal::SourcePositionTableBuilder"*, i64, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal26SourcePositionTableBuilder21ToSourcePositionTableINS0_7IsolateEEENS0_6HandleINS0_9ByteArrayEEEPT_(%"class.v8::internal::SourcePositionTableBuilder"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal6Logger26CodeLinePosInfoRecordEventEmNS0_9ByteArrayE(%"class.v8::internal::Logger"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #4

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1), i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1321"* readnone, %"class.std::__1::__tree_node.1576"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1576"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1576"* %1 to %"class.std::__1::__tree_node.1576"**
  %6 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1321"* %0, %"class.std::__1::__tree_node.1576"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1576"**
  %9 = load %"class.std::__1::__tree_node.1576"*, %"class.std::__1::__tree_node.1576"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1321"* %0, %"class.std::__1::__tree_node.1576"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %1, i64 0, i32 2, i32 0, i32 1, i32 3, i32 0, i32 0
  %11 = load %"class.v8::internal::Handle.1350"*, %"class.v8::internal::Handle.1350"** %10, align 8
  %12 = icmp eq %"class.v8::internal::Handle.1350"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"class.v8::internal::Handle.1350"* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %1, i64 0, i32 2, i32 0, i32 1, i32 3, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::Handle.1350"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.v8::internal::Handle.1350"* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %13, %4
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %1, i64 0, i32 2, i32 0, i32 1, i32 2, i32 0, i32 0
  %20 = load %"class.v8::internal::Handle.1342"*, %"class.v8::internal::Handle.1342"** %19, align 8
  %21 = icmp eq %"class.v8::internal::Handle.1342"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"class.v8::internal::Handle.1342"* %20 to i64
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.1576", %"class.std::__1::__tree_node.1576"* %1, i64 0, i32 2, i32 0, i32 1, i32 2, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::Handle.1342"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.v8::internal::Handle.1342"* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #16
  br label %27

27:                                               ; preds = %18, %22
  %28 = bitcast %"class.std::__1::__tree_node.1576"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

declare i64* @_ZN2v88internal6String11SlowFlattenEPNS0_7IsolateENS0_6HandleINS0_10ConsStringEEENS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal6String17CalculateLineEndsINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_NS4_IS1_EEb(%"class.v8::internal::Isolate"*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput10GetLength1Ev(%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* nocapture readonly) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput10GetLength2Ev(%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* nocapture readonly) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput6EqualsEii(%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::StringShape", align 4
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringShape", align 4
  %10 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, %1
  %13 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, %2
  %16 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 3
  %17 = icmp eq i32 %12, 0
  br i1 %17, label %40, label %18

18:                                               ; preds = %3
  %19 = add nsw i32 %12, -1
  %20 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %16, i64 0, i32 0, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 3
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 1
  %27 = icmp eq i32 %26, %19
  br i1 %27, label %28, label %31

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 3, i32 1
  %30 = load i32, i32* %29, align 8
  br label %40

31:                                               ; preds = %18
  %32 = shl i32 %19, 2
  %33 = sext i32 %32 to i64
  %34 = add nsw i64 %33, 7
  %35 = add i64 %34, %22
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = ashr i32 %37, 1
  %39 = add nsw i32 %38, 1
  br label %40

40:                                               ; preds = %3, %28, %31
  %41 = phi i32 [ 0, %3 ], [ %30, %28 ], [ %39, %31 ]
  %42 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 4
  %43 = icmp eq i32 %15, 0
  br i1 %43, label %66, label %44

44:                                               ; preds = %40
  %45 = add nsw i32 %15, -1
  %46 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %42, i64 0, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, 3
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = ashr i32 %51, 1
  %53 = icmp eq i32 %52, %45
  br i1 %53, label %54, label %57

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 4, i32 1
  %56 = load i32, i32* %55, align 8
  br label %66

57:                                               ; preds = %44
  %58 = shl i32 %45, 2
  %59 = sext i32 %58 to i64
  %60 = add nsw i64 %59, 7
  %61 = add i64 %60, %48
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = ashr i32 %63, 1
  %65 = add nsw i32 %64, 1
  br label %66

66:                                               ; preds = %40, %54, %57
  %67 = phi i32 [ 0, %40 ], [ %56, %54 ], [ %65, %57 ]
  %68 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %16, i64 0, i32 0, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 3
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = ashr i32 %73, 1
  %75 = icmp eq i32 %74, %12
  br i1 %75, label %76, label %79

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 3, i32 1
  %78 = load i32, i32* %77, align 8
  br label %88

79:                                               ; preds = %66
  %80 = shl i32 %12, 2
  %81 = sext i32 %80 to i64
  %82 = add nsw i64 %81, 7
  %83 = add i64 %82, %70
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = ashr i32 %85, 1
  %87 = add nsw i32 %86, 1
  br label %88

88:                                               ; preds = %76, %79
  %89 = phi i32 [ %78, %76 ], [ %87, %79 ]
  %90 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %42, i64 0, i32 0, i32 0, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 3
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = ashr i32 %95, 1
  %97 = icmp eq i32 %96, %15
  br i1 %97, label %98, label %101

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 4, i32 1
  %100 = load i32, i32* %99, align 8
  br label %110

101:                                              ; preds = %88
  %102 = shl i32 %15, 2
  %103 = sext i32 %102 to i64
  %104 = add nsw i64 %103, 7
  %105 = add i64 %104, %92
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = ashr i32 %107, 1
  %109 = add nsw i32 %108, 1
  br label %110

110:                                              ; preds = %98, %101
  %111 = phi i32 [ %100, %98 ], [ %109, %101 ]
  %112 = sub nsw i32 %89, %41
  %113 = sub nsw i32 %111, %67
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %115, label %164

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 1, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 2, i32 0, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = icmp sgt i32 %112, 0
  br i1 %120, label %121, label %164

121:                                              ; preds = %115
  %122 = bitcast i32* %5 to i8*
  %123 = bitcast %"class.v8::internal::StringShape"* %6 to i8*
  %124 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %6, i64 0, i32 0
  %125 = bitcast %"class.v8::internal::String"* %4 to i8*
  %126 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = bitcast i32* %8 to i8*
  %128 = bitcast %"class.v8::internal::StringShape"* %9 to i8*
  %129 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %9, i64 0, i32 0
  %130 = bitcast %"class.v8::internal::String"* %7 to i8*
  %131 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %134

132:                                              ; preds = %134
  %133 = icmp eq i32 %163, %112
  br i1 %133, label %164, label %134

134:                                              ; preds = %132, %121
  %135 = phi i32 [ 0, %121 ], [ %163, %132 ]
  %136 = load i64, i64* %117, align 8
  %137 = add nsw i32 %135, %41
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %122) #14
  store i32 %137, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %123) #14
  %138 = and i64 %136, -4294967296
  %139 = add i64 %136, -1
  %140 = inttoptr i64 %139 to i32*
  %141 = load atomic i32, i32* %140 acquire, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %138, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = zext i16 %146 to i32
  store i32 %147, i32* %124, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #14
  store i64 %136, i64* %126, align 8
  %148 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %6, %"class.v8::internal::String"* nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %123) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %122) #14
  %149 = load i64, i64* %119, align 8
  %150 = add nsw i32 %135, %67
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #14
  store i32 %150, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #14
  %151 = and i64 %149, -4294967296
  %152 = add i64 %149, -1
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 acquire, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %151, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = zext i16 %159 to i32
  store i32 %160, i32* %129, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #14
  store i64 %149, i64* %131, align 8
  %161 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %9, %"class.v8::internal::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #14
  %162 = icmp eq i16 %148, %161
  %163 = add nuw nsw i32 %135, 1
  br i1 %162, label %132, label %164

164:                                              ; preds = %134, %132, %115, %110
  %165 = phi i1 [ false, %110 ], [ true, %115 ], [ false, %134 ], [ true, %132 ]
  ret i1 %165
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInputD0Ev(%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput12SetSubrange1Eii(%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* nocapture, i32, i32) unnamed_addr #13 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 5
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 7
  store i32 %2, i32* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN2v88internal12_GLOBAL__N_121LineArrayCompareInput12SetSubrange2Eii(%"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* nocapture, i32, i32) unnamed_addr #13 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 6
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput", %"class.v8::internal::(anonymous namespace)::LineArrayCompareInput"* %0, i64 0, i32 8
  store i32 %2, i32* %5, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_110Comparator5InputD2Ev(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2v88internal12_GLOBAL__N_117CompareSubstringsENS0_6HandleINS0_6StringEEEiS4_ii(i64*, i32, i64*, i32, i32) unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringShape", align 4
  %9 = alloca %"class.v8::internal::String", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.v8::internal::StringShape", align 4
  %12 = icmp sgt i32 %4, 0
  br i1 %12, label %13, label %56

13:                                               ; preds = %5
  %14 = bitcast i32* %7 to i8*
  %15 = bitcast %"class.v8::internal::StringShape"* %8 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %8, i64 0, i32 0
  %17 = bitcast %"class.v8::internal::String"* %6 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast i32* %10 to i8*
  %20 = bitcast %"class.v8::internal::StringShape"* %11 to i8*
  %21 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %11, i64 0, i32 0
  %22 = bitcast %"class.v8::internal::String"* %9 to i8*
  %23 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %26

24:                                               ; preds = %26
  %25 = icmp eq i32 %55, %4
  br i1 %25, label %56, label %26

26:                                               ; preds = %24, %13
  %27 = phi i32 [ 0, %13 ], [ %55, %24 ]
  %28 = load i64, i64* %0, align 8
  %29 = add nsw i32 %27, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #14
  store i32 %29, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  %30 = and i64 %28, -4294967296
  %31 = add i64 %28, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 acquire, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = zext i16 %38 to i32
  store i32 %39, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  store i64 %28, i64* %18, align 8
  %40 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %8, %"class.v8::internal::String"* nonnull dereferenceable(8) %6, i32* nonnull dereferenceable(4) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #14
  %41 = load i64, i64* %2, align 8
  %42 = add nsw i32 %27, %3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #14
  store i32 %42, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #14
  %43 = and i64 %41, -4294967296
  %44 = add i64 %41, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = add i64 %48, 7
  %50 = inttoptr i64 %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = zext i16 %51 to i32
  store i32 %52, i32* %21, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  store i64 %41, i64* %23, align 8
  %53 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %11, %"class.v8::internal::String"* nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %10) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #14
  %54 = icmp eq i16 %40, %53
  %55 = add nuw nsw i32 %27, 1
  br i1 %54, label %24, label %56

56:                                               ; preds = %26, %24, %5
  %57 = phi i1 [ true, %5 ], [ true, %24 ], [ false, %26 ]
  ret i1 %57
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"*, %"class.v8::internal::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.v8::internal::ConsString", align 8
  %5 = alloca %"class.v8::internal::SlicedString", align 8
  %6 = alloca %"class.v8::internal::ThinString", align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 15
  switch i32 %9, label %134 [
    i32 8, label %10
    i32 0, label %20
    i32 9, label %30
    i32 1, label %30
    i32 10, label %37
    i32 2, label %79
    i32 11, label %120
    i32 3, label %120
    i32 13, label %127
    i32 5, label %127
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %12, 11
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  br label %135

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %2, align 4
  %24 = shl nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = add i64 %22, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  br label %135

30:                                               ; preds = %3, %3
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* %2, align 4
  %34 = bitcast %"class.v8::internal::ConsString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %35, align 8
  %36 = call zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nonnull %4, i32 %33) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  br label %135

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = and i64 %39, -4294967296
  %42 = add i64 %39, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = and i16 %49, 16
  %51 = icmp eq i16 %50, 0
  %52 = add i64 %39, 11
  %53 = inttoptr i64 %52 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %51, label %66, label %54

54:                                               ; preds = %37
  %55 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %56 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %55, i64 0, i32 0
  %57 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %55 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %58 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %58, i64 2
  %60 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.v8::String::ExternalStringResourceBase"* %56) #14
  br i1 %61, label %62, label %66

62:                                               ; preds = %54
  %63 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %63) #14
  %64 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  br label %73

66:                                               ; preds = %54, %37
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %68 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %69 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %68, align 8
  %70 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %69, i64 6
  %71 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %70, align 8
  %72 = tail call i8* %71(%"class.v8::String::ExternalOneByteStringResource"* %67) #14
  br label %73

73:                                               ; preds = %62, %66
  %74 = phi i8* [ %65, %62 ], [ %72, %66 ]
  %75 = sext i32 %40 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  br label %135

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* %2, align 4
  %83 = and i64 %81, -4294967296
  %84 = add i64 %81, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 16
  %93 = icmp eq i16 %92, 0
  %94 = add i64 %81, 11
  %95 = inttoptr i64 %94 to %"class.v8::String::ExternalStringResource"**
  br i1 %93, label %108, label %96

96:                                               ; preds = %79
  %97 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %98 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %97, i64 0, i32 0
  %99 = bitcast %"class.v8::String::ExternalStringResource"* %97 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %100 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %100, i64 2
  %102 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.v8::String::ExternalStringResourceBase"* %98) #14
  br i1 %103, label %104, label %108

104:                                              ; preds = %96
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %105) #14
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 1
  %107 = load i16*, i16** %106, align 8
  br label %115

108:                                              ; preds = %96, %79
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %110 = bitcast %"class.v8::String::ExternalStringResource"* %109 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %111 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %110, align 8
  %112 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %111, i64 6
  %113 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %112, align 8
  %114 = tail call i16* %113(%"class.v8::String::ExternalStringResource"* %109) #14
  br label %115

115:                                              ; preds = %104, %108
  %116 = phi i16* [ %107, %104 ], [ %114, %108 ]
  %117 = sext i32 %82 to i64
  %118 = getelementptr inbounds i16, i16* %116, i64 %117
  %119 = load i16, i16* %118, align 2
  br label %135

120:                                              ; preds = %3, %3
  %121 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i32, i32* %2, align 4
  %124 = bitcast %"class.v8::internal::SlicedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #14
  %125 = getelementptr inbounds %"class.v8::internal::SlicedString", %"class.v8::internal::SlicedString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %125, align 8
  %126 = call zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"* nonnull %5, i32 %123) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #14
  br label %135

127:                                              ; preds = %3, %3
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i32, i32* %2, align 4
  %131 = bitcast %"class.v8::internal::ThinString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #14
  %132 = getelementptr inbounds %"class.v8::internal::ThinString", %"class.v8::internal::ThinString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %132, align 8
  %133 = call zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"* nonnull %6, i32 %130) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #14
  br label %135

134:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #15
  unreachable

135:                                              ; preds = %127, %120, %115, %73, %30, %20, %10
  %136 = phi i16 [ %133, %127 ], [ %126, %120 ], [ %119, %115 ], [ %78, %73 ], [ %36, %30 ], [ %29, %20 ], [ %19, %10 ]
  ret i16 %136
}

declare zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"*, i32) local_unnamed_addr #2

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"*, i32) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutput8AddChunkEiiii(%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* nocapture readonly, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::(anonymous namespace)::TokensCompareInput", align 8
  %7 = alloca %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", align 8
  %8 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, %1
  %11 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, %2
  %14 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 2
  %15 = icmp eq i32 %10, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %5
  %17 = add nsw i32 %10, -1
  %18 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %14, i64 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 3
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = ashr i32 %23, 1
  %25 = icmp eq i32 %24, %17
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 2, i32 1
  %28 = load i32, i32* %27, align 8
  br label %38

29:                                               ; preds = %16
  %30 = shl i32 %17, 2
  %31 = sext i32 %30 to i64
  %32 = add nsw i64 %31, 7
  %33 = add i64 %32, %20
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = ashr i32 %35, 1
  %37 = add nsw i32 %36, 1
  br label %38

38:                                               ; preds = %5, %26, %29
  %39 = phi i32 [ 0, %5 ], [ %28, %26 ], [ %37, %29 ]
  %40 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 3
  %41 = icmp eq i32 %13, 0
  br i1 %41, label %64, label %42

42:                                               ; preds = %38
  %43 = add nsw i32 %13, -1
  %44 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %40, i64 0, i32 0, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 3
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = ashr i32 %49, 1
  %51 = icmp eq i32 %50, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 3, i32 1
  %54 = load i32, i32* %53, align 8
  br label %64

55:                                               ; preds = %42
  %56 = shl i32 %43, 2
  %57 = sext i32 %56 to i64
  %58 = add nsw i64 %57, 7
  %59 = add i64 %58, %46
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = ashr i32 %61, 1
  %63 = add nsw i32 %62, 1
  br label %64

64:                                               ; preds = %38, %52, %55
  %65 = phi i32 [ 0, %38 ], [ %54, %52 ], [ %63, %55 ]
  %66 = add nsw i32 %10, %3
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %90, label %68

68:                                               ; preds = %64
  %69 = add nsw i32 %66, -1
  %70 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %14, i64 0, i32 0, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 3
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = ashr i32 %75, 1
  %77 = icmp eq i32 %76, %69
  br i1 %77, label %78, label %81

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 2, i32 1
  %80 = load i32, i32* %79, align 8
  br label %90

81:                                               ; preds = %68
  %82 = shl i32 %69, 2
  %83 = sext i32 %82 to i64
  %84 = add nsw i64 %83, 7
  %85 = add i64 %84, %72
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = ashr i32 %87, 1
  %89 = add nsw i32 %88, 1
  br label %90

90:                                               ; preds = %64, %78, %81
  %91 = phi i32 [ 0, %64 ], [ %80, %78 ], [ %89, %81 ]
  %92 = sub nsw i32 %91, %39
  %93 = add nsw i32 %13, %4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %117, label %95

95:                                               ; preds = %90
  %96 = add nsw i32 %93, -1
  %97 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::LineEndsWrapper", %"class.v8::internal::(anonymous namespace)::LineEndsWrapper"* %40, i64 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %99, 3
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = ashr i32 %102, 1
  %104 = icmp eq i32 %103, %96
  br i1 %104, label %105, label %108

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 3, i32 1
  %107 = load i32, i32* %106, align 8
  br label %117

108:                                              ; preds = %95
  %109 = shl i32 %96, 2
  %110 = sext i32 %109 to i64
  %111 = add nsw i64 %110, 7
  %112 = add i64 %111, %99
  %113 = inttoptr i64 %112 to i32*
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = ashr i32 %114, 1
  %116 = add nsw i32 %115, 1
  br label %117

117:                                              ; preds = %90, %105, %108
  %118 = phi i32 [ 0, %90 ], [ %107, %105 ], [ %116, %108 ]
  %119 = sub nsw i32 %118, %65
  %120 = icmp slt i32 %92, 800
  %121 = icmp slt i32 %119, 800
  %122 = and i1 %120, %121
  br i1 %122, label %123, label %175

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 1
  %125 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %125, i64 0, i32 31
  %127 = bitcast %"struct.v8::internal::HandleScopeData"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %125, i64 0, i32 31, i32 1
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %125, i64 0, i32 31, i32 2
  %132 = load i32, i32* %131, align 8
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %131, align 8
  %134 = bitcast %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %134) #14
  %135 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 4, i32 0, i32 0
  %136 = bitcast i64** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 5, i32 0, i32 0
  %139 = bitcast i64** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_118TokensCompareInputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 1, i32 0, i32 0
  %143 = bitcast i64** %142 to i64*
  store i64 %137, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 2
  store i32 %39, i32* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 3
  store i32 %92, i32* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 4, i32 0, i32 0
  %147 = bitcast i64** %146 to i64*
  store i64 %140, i64* %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 5
  store i32 %65, i32* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 6
  store i32 %119, i32* %149, align 4
  %150 = bitcast %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #14
  %151 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 8
  %152 = bitcast %"class.std::__1::vector.1189"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_119TokensCompareOutputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %7, i64 0, i32 1
  %156 = bitcast %"class.std::__1::vector.1189"** %155 to i64*
  store i64 %153, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %7, i64 0, i32 2
  store i32 %39, i32* %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %7, i64 0, i32 3
  store i32 %65, i32* %158, align 4
  %159 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %6, i64 0, i32 0
  %160 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %7, i64 0, i32 0
  call fastcc void @_ZN2v88internal12_GLOBAL__N_110Comparator19CalculateDifferenceEPNS2_5InputEPNS2_6OutputE(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* nonnull %159, %"class.v8::internal::(anonymous namespace)::Comparator::Output"* nonnull %160)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %134) #14
  %161 = icmp eq %"class.v8::internal::Isolate"* %125, null
  br i1 %161, label %252, label %162

162:                                              ; preds = %123
  %163 = inttoptr i64 %128 to i64*
  %164 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %126, i64 0, i32 0
  %165 = load i64*, i64** %164, align 8
  store i64 %128, i64* %127, align 8
  %166 = load i32, i32* %131, align 8
  %167 = add nsw i32 %166, -1
  store i32 %167, i32* %131, align 8
  %168 = load i64*, i64** %129, align 8
  %169 = icmp eq i64* %168, %130
  br i1 %169, label %172, label %170

170:                                              ; preds = %162
  store i64* %130, i64** %129, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %125) #14
  %171 = load i64*, i64** %164, align 8
  br label %172

172:                                              ; preds = %170, %162
  %173 = phi i64* [ %171, %170 ], [ %163, %162 ]
  %174 = phi i64* [ %130, %170 ], [ %165, %162 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %173, i64* %174) #14
  br label %252

175:                                              ; preds = %117
  %176 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 8
  %177 = load %"class.std::__1::vector.1189"*, %"class.std::__1::vector.1189"** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %177, i64 0, i32 0, i32 1
  %179 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %177, i64 0, i32 0, i32 2, i32 0, i32 0
  %181 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %180, align 8
  %182 = icmp ult %"struct.v8::internal::SourceChangeRange"* %179, %181
  %183 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %181 to i64
  br i1 %182, label %184, label %192

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %179, i64 0, i32 0
  store i32 %39, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %179, i64 0, i32 1
  store i32 %91, i32* %186, align 4
  %187 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %179, i64 0, i32 2
  store i32 %65, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %179, i64 0, i32 3
  store i32 %118, i32* %188, align 4
  %189 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %179, i64 1
  %190 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %189 to i64
  %191 = bitcast %"struct.v8::internal::SourceChangeRange"** %178 to i64*
  store i64 %190, i64* %191, align 8
  br label %252

192:                                              ; preds = %175
  %193 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %179 to i64
  %194 = bitcast %"struct.v8::internal::SourceChangeRange"** %178 to i64*
  %195 = bitcast %"class.std::__1::vector.1189"* %177 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %193, %196
  %198 = ashr exact i64 %197, 4
  %199 = add nsw i64 %198, 1
  %200 = icmp ugt i64 %199, 1152921504606846975
  br i1 %200, label %201, label %203

201:                                              ; preds = %192
  %202 = bitcast %"class.std::__1::vector.1189"* %177 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %202) #15
  unreachable

203:                                              ; preds = %192
  %204 = bitcast %"struct.v8::internal::SourceChangeRange"** %180 to i64*
  %205 = sub i64 %183, %196
  %206 = ashr exact i64 %205, 4
  %207 = icmp ult i64 %206, 576460752303423487
  br i1 %207, label %208, label %216

208:                                              ; preds = %203
  %209 = ashr exact i64 %205, 3
  %210 = icmp ult i64 %209, %199
  %211 = select i1 %210, i64 %199, i64 %209
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %221, label %213

213:                                              ; preds = %208
  %214 = icmp ugt i64 %211, 1152921504606846975
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  tail call void @abort() #15
  unreachable

216:                                              ; preds = %213, %203
  %217 = phi i64 [ %211, %213 ], [ 1152921504606846975, %203 ]
  %218 = shl i64 %217, 4
  %219 = tail call i8* @_Znwm(i64 %218) #16
  %220 = bitcast i8* %219 to %"struct.v8::internal::SourceChangeRange"*
  br label %221

221:                                              ; preds = %216, %208
  %222 = phi i64 [ %217, %216 ], [ 0, %208 ]
  %223 = phi %"struct.v8::internal::SourceChangeRange"* [ %220, %216 ], [ null, %208 ]
  %224 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %223, i64 %198
  %225 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %223, i64 %222
  %226 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %225 to i64
  %227 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %224, i64 0, i32 0
  store i32 %39, i32* %227, align 4
  %228 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %223, i64 %198, i32 1
  store i32 %91, i32* %228, align 4
  %229 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %223, i64 %198, i32 2
  store i32 %65, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %223, i64 %198, i32 3
  store i32 %118, i32* %230, align 4
  %231 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %224, i64 1
  %232 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %231 to i64
  %233 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %177, i64 0, i32 0, i32 0
  %234 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %233, align 8
  %235 = load i64, i64* %194, align 8
  %236 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %234 to i64
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 4
  %239 = sub nsw i64 0, %238
  %240 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %224, i64 %239
  %241 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %240 to i64
  %242 = icmp sgt i64 %237, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %221
  %244 = bitcast %"struct.v8::internal::SourceChangeRange"* %240 to i8*
  %245 = bitcast %"struct.v8::internal::SourceChangeRange"* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 %237, i1 false) #14
  %246 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %233, align 8
  br label %247

247:                                              ; preds = %243, %221
  %248 = phi %"struct.v8::internal::SourceChangeRange"* [ %234, %221 ], [ %246, %243 ]
  store i64 %241, i64* %195, align 8
  store i64 %232, i64* %194, align 8
  store i64 %226, i64* %204, align 8
  %249 = icmp eq %"struct.v8::internal::SourceChangeRange"* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = bitcast %"struct.v8::internal::SourceChangeRange"* %248 to i8*
  tail call void @_ZdlPv(i8* %251) #16
  br label %252

252:                                              ; preds = %250, %247, %184, %172, %123
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutputD0Ev(%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutput12SetSubrange1Eii(%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* nocapture, i32, i32) unnamed_addr #13 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 6
  store i32 %1, i32* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN2v88internal12_GLOBAL__N_132TokenizingLineArrayCompareOutput12SetSubrange2Eii(%"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* nocapture, i32, i32) unnamed_addr #13 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput", %"class.v8::internal::(anonymous namespace)::TokenizingLineArrayCompareOutput"* %0, i64 0, i32 7
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN2v88internal12_GLOBAL__N_118TokensCompareInput10GetLength1Ev(%"class.v8::internal::(anonymous namespace)::TokensCompareInput"* nocapture readonly) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZN2v88internal12_GLOBAL__N_118TokensCompareInput10GetLength2Ev(%"class.v8::internal::(anonymous namespace)::TokensCompareInput"* nocapture readonly) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN2v88internal12_GLOBAL__N_118TokensCompareInput6EqualsEii(%"class.v8::internal::(anonymous namespace)::TokensCompareInput"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::String", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::StringShape", align 4
  %7 = alloca %"class.v8::internal::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::StringShape", align 4
  %10 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, %1
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #14
  store i32 %15, i32* %5, align 4
  %17 = bitcast %"class.v8::internal::StringShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %6, i64 0, i32 0
  %19 = and i64 %12, -4294967296
  %20 = add i64 %12, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = zext i16 %27 to i32
  store i32 %28, i32* %18, align 4
  %29 = bitcast %"class.v8::internal::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %30, align 8
  %31 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %6, %"class.v8::internal::String"* nonnull dereferenceable(8) %4, i32* nonnull dereferenceable(4) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #14
  %32 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0, i64 0, i32 4, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareInput", %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = add nsw i32 %36, %2
  %38 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #14
  store i32 %37, i32* %8, align 4
  %39 = bitcast %"class.v8::internal::StringShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %9, i64 0, i32 0
  %41 = and i64 %34, -4294967296
  %42 = add i64 %34, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 acquire, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = zext i16 %49 to i32
  store i32 %50, i32* %40, align 4
  %51 = bitcast %"class.v8::internal::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  %52 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %34, i64* %52, align 8
  %53 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %9, %"class.v8::internal::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #14
  %54 = icmp eq i16 %31, %53
  ret i1 %54
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_118TokensCompareInputD0Ev(%"class.v8::internal::(anonymous namespace)::TokensCompareInput"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::TokensCompareInput"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_119TokensCompareOutput8AddChunkEiiii(%"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* nocapture readonly, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %0, i64 0, i32 1
  %7 = load %"class.std::__1::vector.1189"*, %"class.std::__1::vector.1189"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, %1
  %11 = add i32 %10, %3
  %12 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::TokensCompareOutput", %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, %2
  %15 = add nsw i32 %14, %4
  %16 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %7, i64 0, i32 0, i32 1
  %17 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %18, align 8
  %20 = icmp ult %"struct.v8::internal::SourceChangeRange"* %17, %19
  %21 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %19 to i64
  br i1 %20, label %22, label %30

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %17, i64 0, i32 0
  store i32 %10, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %17, i64 0, i32 1
  store i32 %11, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %17, i64 0, i32 2
  store i32 %14, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %17, i64 0, i32 3
  store i32 %15, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %17, i64 1
  %28 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %27 to i64
  %29 = bitcast %"struct.v8::internal::SourceChangeRange"** %16 to i64*
  store i64 %28, i64* %29, align 8
  br label %90

30:                                               ; preds = %5
  %31 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %17 to i64
  %32 = bitcast %"struct.v8::internal::SourceChangeRange"** %16 to i64*
  %33 = bitcast %"class.std::__1::vector.1189"* %7 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 4
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector.1189"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #15
  unreachable

41:                                               ; preds = %30
  %42 = bitcast %"struct.v8::internal::SourceChangeRange"** %18 to i64*
  %43 = sub i64 %21, %34
  %44 = ashr exact i64 %43, 4
  %45 = icmp ult i64 %44, 576460752303423487
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 3
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 1152921504606846975
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #15
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 1152921504606846975, %41 ]
  %56 = shl i64 %55, 4
  %57 = tail call i8* @_Znwm(i64 %56) #16
  %58 = bitcast i8* %57 to %"struct.v8::internal::SourceChangeRange"*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi %"struct.v8::internal::SourceChangeRange"* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %61, i64 %36
  %63 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %61, i64 %60
  %64 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %63 to i64
  %65 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %62, i64 0, i32 0
  store i32 %10, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %61, i64 %36, i32 1
  store i32 %11, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %61, i64 %36, i32 2
  store i32 %14, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %61, i64 %36, i32 3
  store i32 %15, i32* %68, align 4
  %69 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %62, i64 1
  %70 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %69 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.1189", %"class.std::__1::vector.1189"* %7, i64 0, i32 0, i32 0
  %72 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %71, align 8
  %73 = load i64, i64* %32, align 8
  %74 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %72 to i64
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 4
  %77 = sub nsw i64 0, %76
  %78 = getelementptr inbounds %"struct.v8::internal::SourceChangeRange", %"struct.v8::internal::SourceChangeRange"* %62, i64 %77
  %79 = ptrtoint %"struct.v8::internal::SourceChangeRange"* %78 to i64
  %80 = icmp sgt i64 %75, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %59
  %82 = bitcast %"struct.v8::internal::SourceChangeRange"* %78 to i8*
  %83 = bitcast %"struct.v8::internal::SourceChangeRange"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %75, i1 false) #14
  %84 = load %"struct.v8::internal::SourceChangeRange"*, %"struct.v8::internal::SourceChangeRange"** %71, align 8
  br label %85

85:                                               ; preds = %81, %59
  %86 = phi %"struct.v8::internal::SourceChangeRange"* [ %72, %59 ], [ %84, %81 ]
  store i64 %79, i64* %33, align 8
  store i64 %70, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %87 = icmp eq %"struct.v8::internal::SourceChangeRange"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast %"struct.v8::internal::SourceChangeRange"* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #16
  br label %90

90:                                               ; preds = %22, %85, %88
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_119TokensCompareOutputD0Ev(%"class.v8::internal::(anonymous namespace)::TokensCompareOutput"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::TokensCompareOutput"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN2v88internal12_GLOBAL__N_111Differencer15CompareUpToTailEii(%"class.v8::internal::(anonymous namespace)::Differencer"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, %1
  %7 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  br i1 %6, label %9, label %12

9:                                                ; preds = %3
  %10 = sub nsw i32 %8, %2
  %11 = shl i32 %10, 2
  br label %168

12:                                               ; preds = %3
  %13 = icmp eq i32 %8, %2
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = sub nsw i32 %5, %1
  %16 = shl i32 %15, 2
  br label %168

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node.1657"**
  %20 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node.1657"* %20, null
  br i1 %21, label %66, label %22

22:                                               ; preds = %17, %42
  %23 = phi %"class.std::__1::__tree_end_node"* [ %44, %42 ], [ %18, %17 ]
  %24 = phi %"class.std::__1::__tree_node.1657"* [ %45, %42 ], [ %20, %17 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, %1
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %24, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::__tree_node_base"** %29 to %"class.std::__1::__tree_node.1657"**
  br label %42

31:                                               ; preds = %22
  %32 = icmp sgt i32 %26, %1
  br i1 %32, label %39, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %24, i64 0, i32 1, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %2
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %24, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::__tree_node_base"** %37 to %"class.std::__1::__tree_node.1657"**
  br i1 %36, label %42, label %39

39:                                               ; preds = %33, %31
  %40 = bitcast %"class.std::__1::__tree_node.1657"* %24 to %"class.std::__1::__tree_node.1657"**
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %24, i64 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %39, %33, %28
  %43 = phi %"class.std::__1::__tree_node.1657"** [ %40, %39 ], [ %30, %28 ], [ %38, %33 ]
  %44 = phi %"class.std::__1::__tree_end_node"* [ %41, %39 ], [ %23, %28 ], [ %23, %33 ]
  %45 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %43, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.1657"* %45, null
  br i1 %46, label %47, label %22

47:                                               ; preds = %42
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %44, %18
  br i1 %48, label %66, label %49

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_node.1657"*
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, %1
  br i1 %53, label %66, label %54

54:                                               ; preds = %49
  %55 = icmp slt i32 %52, %1
  br i1 %55, label %61, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 4
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, %2
  br i1 %60, label %66, label %61

61:                                               ; preds = %54, %56
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %50, i64 0, i32 1, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, -4
  %65 = icmp ugt i32 %63, -5
  br i1 %65, label %66, label %168

66:                                               ; preds = %56, %49, %47, %17, %61
  %67 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 0
  %68 = load %"class.v8::internal::(anonymous namespace)::Comparator::Input"*, %"class.v8::internal::(anonymous namespace)::Comparator::Input"** %67, align 8
  %69 = bitcast %"class.v8::internal::(anonymous namespace)::Comparator::Input"* %68 to i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)***
  %70 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)**, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %70, i64 2
  %72 = load i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)*, i1 (%"class.v8::internal::(anonymous namespace)::Comparator::Input"*, i32, i32)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.v8::internal::(anonymous namespace)::Comparator::Input"* %68, i32 %1, i32 %2) #14
  %74 = add nsw i32 %1, 1
  br i1 %73, label %75, label %78

75:                                               ; preds = %66
  %76 = add nsw i32 %2, 1
  %77 = tail call fastcc i32 @_ZN2v88internal12_GLOBAL__N_111Differencer15CompareUpToTailEii(%"class.v8::internal::(anonymous namespace)::Differencer"* %0, i32 %74, i32 %76)
  br label %89

78:                                               ; preds = %66
  %79 = tail call fastcc i32 @_ZN2v88internal12_GLOBAL__N_111Differencer15CompareUpToTailEii(%"class.v8::internal::(anonymous namespace)::Differencer"* %0, i32 %74, i32 %2)
  %80 = add nsw i32 %79, 4
  %81 = add nsw i32 %2, 1
  %82 = tail call fastcc i32 @_ZN2v88internal12_GLOBAL__N_111Differencer15CompareUpToTailEii(%"class.v8::internal::(anonymous namespace)::Differencer"* %0, i32 %1, i32 %81)
  %83 = add nsw i32 %82, 4
  %84 = icmp eq i32 %80, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %78
  %86 = icmp slt i32 %80, %83
  %87 = select i1 %86, i32 1, i32 2
  %88 = select i1 %86, i32 %80, i32 %83
  br label %89

89:                                               ; preds = %78, %85, %75
  %90 = phi i32 [ 0, %75 ], [ 3, %78 ], [ %87, %85 ]
  %91 = phi i32 [ %77, %75 ], [ %80, %78 ], [ %88, %85 ]
  %92 = or i32 %91, %90
  %93 = zext i32 %2 to i64
  %94 = shl nuw i64 %93, 32
  %95 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 1, i32 0
  %96 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %19, align 8
  %97 = icmp eq %"class.std::__1::__tree_node.1657"* %96, null
  br i1 %97, label %132, label %98

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %100

100:                                              ; preds = %128, %98
  %101 = phi %"class.std::__1::__tree_node.1657"* [ %131, %128 ], [ %96, %98 ]
  %102 = phi %"class.std::__1::__tree_node_base"** [ %130, %128 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, %1
  br i1 %105, label %112, label %106

106:                                              ; preds = %100
  %107 = icmp slt i32 %104, %1
  br i1 %107, label %120, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 1, i32 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, %2
  br i1 %111, label %112, label %118

112:                                              ; preds = %108, %100
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 0, i32 0
  br label %134

118:                                              ; preds = %108
  %119 = icmp slt i32 %110, %2
  br i1 %119, label %120, label %126

120:                                              ; preds = %118, %106
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 0, i32 1
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 0, i32 0
  br label %134

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %101, i64 0, i32 0, i32 0
  br label %134

128:                                              ; preds = %120, %112
  %129 = phi %"class.std::__1::__tree_node_base"* [ %114, %112 ], [ %122, %120 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %113, %112 ], [ %121, %120 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"* %129 to %"class.std::__1::__tree_node.1657"*
  br label %100

132:                                              ; preds = %89
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  br label %134

134:                                              ; preds = %132, %126, %124, %116
  %135 = phi %"class.std::__1::__tree_end_node"* [ %18, %132 ], [ %117, %116 ], [ %125, %124 ], [ %127, %126 ]
  %136 = phi %"class.std::__1::__tree_node_base"** [ %133, %132 ], [ %113, %116 ], [ %121, %124 ], [ %102, %126 ]
  %137 = bitcast %"class.std::__1::__tree_node_base"** %136 to %"class.std::__1::__tree_node.1657"**
  %138 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node.1657"* %138, null
  br i1 %139, label %140, label %168

140:                                              ; preds = %134
  %141 = tail call i8* @_Znwm(i64 40) #16, !noalias !43
  %142 = getelementptr inbounds i8, i8* %141, i64 28
  %143 = bitcast i8* %142 to i64*
  %144 = zext i32 %1 to i64
  %145 = or i64 %94, %144
  store i64 %145, i64* %143, align 4, !noalias !43
  %146 = getelementptr inbounds i8, i8* %141, i64 36
  %147 = bitcast i8* %146 to i32*
  store i32 %92, i32* %147, align 4, !noalias !43
  %148 = bitcast i8* %141 to %"class.std::__1::__tree_node_base"*
  %149 = getelementptr inbounds i8, i8* %141, i64 16
  %150 = bitcast i8* %149 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %135, %"class.std::__1::__tree_end_node"** %150, align 8
  %151 = bitcast %"class.std::__1::__tree_node_base"** %136 to i8**
  store i8* %141, i8** %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree.1641", %"class.std::__1::__tree.1641"* %95, i64 0, i32 0
  %153 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 0, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %161, label %157

157:                                              ; preds = %140
  %158 = ptrtoint %"class.std::__1::__tree_node_base"* %155 to i64
  %159 = bitcast %"class.std::__1::__tree.1641"* %95 to i64*
  store i64 %158, i64* %159, align 8
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  br label %161

161:                                              ; preds = %157, %140
  %162 = phi %"class.std::__1::__tree_node_base"* [ %148, %140 ], [ %160, %157 ]
  %163 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %164, %"class.std::__1::__tree_node_base"* %162) #14
  %165 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::Differencer", %"class.v8::internal::(anonymous namespace)::Differencer"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = add i64 %166, 1
  store i64 %167, i64* %165, align 8
  br label %168

168:                                              ; preds = %161, %134, %61, %14, %9
  %169 = phi i32 [ %11, %9 ], [ %16, %14 ], [ %64, %61 ], [ %91, %134 ], [ %91, %161 ]
  ret i32 %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.1641"*, %"class.std::__1::__tree_node.1657"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1657"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1657"* %1 to %"class.std::__1::__tree_node.1657"**
  %6 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.1641"* %0, %"class.std::__1::__tree_node.1657"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1657", %"class.std::__1::__tree_node.1657"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1657"**
  %9 = load %"class.std::__1::__tree_node.1657"*, %"class.std::__1::__tree_node.1657"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.1641"* %0, %"class.std::__1::__tree_node.1657"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.1657"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1332"*, %"class.std::__1::__tree_node.1666"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1666"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1666"* %1 to %"class.std::__1::__tree_node.1666"**
  %6 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1332"* %0, %"class.std::__1::__tree_node.1666"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1666", %"class.std::__1::__tree_node.1666"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1666"**
  %9 = load %"class.std::__1::__tree_node.1666"*, %"class.std::__1::__tree_node.1666"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.1332"* %0, %"class.std::__1::__tree_node.1666"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.1666"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15IsCompiledScopeC2ENS0_18SharedFunctionInfoEPNS0_7IsolateE(%"class.v8::internal::IsCompiledScope"*, i64, %"class.v8::internal::Isolate"*) unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, 3
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = zext i32 %9 to i64
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %3
  %14 = or i64 %6, %10
  %15 = add i64 %14, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 133
  br i1 %23, label %40, label %24

24:                                               ; preds = %13
  %25 = load atomic i32, i32* %16 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %6, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 105
  br i1 %31, label %40, label %32

32:                                               ; preds = %24
  %33 = load atomic i32, i32* %16 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 94
  br i1 %39, label %40, label %60

40:                                               ; preds = %13, %24, %32
  %41 = call i64 @_ZNK2v88internal18SharedFunctionInfo16GetBytecodeArrayINS0_7IsolateEEENS0_13BytecodeArrayEPT_(%"class.v8::internal::SharedFunctionInfo"* nonnull %4, %"class.v8::internal::Isolate"* %2)
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %43 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %42, align 8
  %44 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %43, i64 %41) #14
  br label %60

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #14
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i64* [ %54, %53 ], [ %49, %47 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %48, align 8
  store i64 %41, i64* %56, align 8
  br label %60

60:                                               ; preds = %32, %3, %55, %45
  %61 = phi i64* [ %46, %45 ], [ %56, %55 ], [ null, %3 ], [ null, %32 ]
  %62 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %0, i64 0, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::IsCompiledScope", %"class.v8::internal::IsCompiledScope"* %0, i64 0, i32 1
  %64 = load i64, i64* %5, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, 3
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = icmp eq i32 %68, 170
  br i1 %71, label %87, label %72

72:                                               ; preds = %60
  %73 = and i64 %69, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = add i64 %70, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %65, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = add i16 %83, -157
  %85 = icmp ugt i16 %84, 1
  %86 = zext i1 %85 to i8
  br label %87

87:                                               ; preds = %60, %72, %75
  %88 = phi i8 [ 0, %60 ], [ 1, %72 ], [ %86, %75 ]
  store i8 %88, i8* %63, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1302"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.1298"*, %"class.v8::internal::FunctionLiteral"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::FunctionLiteral"** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to %"class.v8::internal::FunctionLiteral"*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #14, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1298", %"class.std::__1::__hash_table.1298"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1302"**, %"struct.std::__1::__hash_node_base.1302"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base.1302"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1302"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1302"* %59 to %"class.v8::internal::FunctionLiteral"**
  %61 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %60, align 8
  %62 = icmp eq %"class.v8::internal::FunctionLiteral"* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base.1302"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.1302"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %17
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1302"* %77 to %"class.v8::internal::FunctionLiteral"**
  %79 = load %"class.v8::internal::FunctionLiteral"*, %"class.v8::internal::FunctionLiteral"** %78, align 8
  %80 = icmp eq %"class.v8::internal::FunctionLiteral"* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1302", %"struct.std::__1::__hash_node_base.1302"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1302"*, %"struct.std::__1::__hash_node_base.1302"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1302"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base.1302"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base.1302"* %86
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRNS_4pairIS5_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISR_EEEEEEmOT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_121FunctionLiteralChangeEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRNS_4pairIS5_S7_EEJEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISR_EEEEEEmOT_DpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__19make_pairIRKPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_121FunctionLiteralChangeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__19make_pairIRKPN2v88internal15FunctionLiteralENS2_12_GLOBAL__N_121FunctionLiteralChangeEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEPN2v88internal15FunctionLiteralEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!18 = !{i8 0, i8 2}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOiEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_"}
!22 = !{!"branch_weights", i32 1, i32 2000}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJS3_S7_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISK_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEN2v88internal12_GLOBAL__N_112FunctionDataEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJS3_S7_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISK_EEEEEEDpOT_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS2_IS3_iEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!28 = distinct !{!28, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS2_IS3_iEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_111ChangeStateEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralENS3_12_GLOBAL__N_111ChangeStateEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN2v88internal6HandleINS3_6StringEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal15FunctionLiteralES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!42 = distinct !{!42, !10}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS2_IS3_iEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIiiEEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS2_IS3_iEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISH_EEEEEEDpOT_"}
