; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/integrity_metadata.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/integrity_metadata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IntegrityMetadata" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>

$_ZNK3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EEPKS6_RKT0_ = comdat any

@_ZN5blink17IntegrityMetadataC1EN3WTF6StringENS_18IntegrityAlgorithmE = hidden unnamed_addr alias void (%"class.blink::IntegrityMetadata"*, %"class.WTF::StringImpl"*, i8), void (%"class.blink::IntegrityMetadata"*, %"class.WTF::StringImpl"*, i8)* @_ZN5blink17IntegrityMetadataC2EN3WTF6StringENS_18IntegrityAlgorithmE
@_ZN5blink17IntegrityMetadataC1ENSt3__14pairIN3WTF6StringENS_18IntegrityAlgorithmEEE = hidden unnamed_addr alias void (%"class.blink::IntegrityMetadata"*, %"class.WTF::StringImpl"*, i8), void (%"class.blink::IntegrityMetadata"*, %"class.WTF::StringImpl"*, i8)* @_ZN5blink17IntegrityMetadataC2ENSt3__14pairIN3WTF6StringENS_18IntegrityAlgorithmEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IntegrityMetadataC2EN3WTF6StringENS_18IntegrityAlgorithmE(%"class.blink::IntegrityMetadata"* nocapture, %"class.WTF::StringImpl"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #5
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #5
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 1
  store i8 %2, i8* %24, align 8
  br label %38

25:                                               ; preds = %6, %21
  %26 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 1
  store i8 %2, i8* %26, align 8
  %27 = load atomic i32, i32* %7 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #5
  br label %38

38:                                               ; preds = %23, %34, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IntegrityMetadataC2ENSt3__14pairIN3WTF6StringENS_18IntegrityAlgorithmEEE(%"class.blink::IntegrityMetadata"* nocapture, %"class.WTF::StringImpl"*, i8) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %25

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #5
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #5
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 1
  store i8 %2, i8* %24, align 8
  br label %38

25:                                               ; preds = %6, %21
  %26 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 1
  store i8 %2, i8* %26, align 8
  %27 = load atomic i32, i32* %7 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #5
  br label %38

38:                                               ; preds = %23, %34, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.WTF::StringImpl"*, i8 } @_ZNK5blink17IntegrityMetadata6ToPairEv(%"class.blink::IntegrityMetadata"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::IntegrityMetadata", %"class.blink::IntegrityMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #5
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #5
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  %24 = load i8, i8* %2, align 1
  %25 = insertvalue { %"class.WTF::StringImpl"*, i8 } undef, %"class.WTF::StringImpl"* %4, 0
  %26 = insertvalue { %"class.WTF::StringImpl"*, i8 } %25, i8 %24, 1
  ret { %"class.WTF::StringImpl"*, i8 } %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IntegrityMetadata9SetsEqualERKN3WTF7HashSetINSt3__14pairINS1_6StringENS_18IntegrityAlgorithmEEENS1_8PairHashIS5_S6_EENS1_10HashTraitsIS7_EENS1_18PartitionAllocatorEEESF_(%"class.WTF::HashSet"* nocapture readonly dereferenceable(24), %"class.WTF::HashSet"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %59

8:                                                ; preds = %2
  %9 = icmp eq i32 %4, 0
  %10 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %14
  br i1 %9, label %59, label %16

16:                                               ; preds = %8
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %16, %29
  %19 = phi %"struct.std::__1::pair"* [ %30, %29 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  %26 = and i1 %22, %25
  %27 = icmp eq %"class.WTF::StringImpl"* %21, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1
  %31 = icmp eq %"struct.std::__1::pair"* %30, %15
  br i1 %31, label %59, label %18

32:                                               ; preds = %18, %16
  %33 = phi %"struct.std::__1::pair"* [ %11, %16 ], [ %19, %18 ]
  %34 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0
  %35 = icmp eq %"struct.std::__1::pair"* %33, %15
  br i1 %35, label %59, label %36

36:                                               ; preds = %32, %57
  %37 = phi %"struct.std::__1::pair"* [ %44, %57 ], [ %33, %32 ]
  %38 = tail call %"struct.std::__1::pair"* @_ZNK3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EEPKS6_RKT0_(%"class.WTF::HashTable"* %34, %"struct.std::__1::pair"* dereferenceable(16) %37) #5
  %39 = icmp eq %"struct.std::__1::pair"* %38, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %42 = icmp eq %"struct.std::__1::pair"* %41, %15
  br i1 %42, label %59, label %43

43:                                               ; preds = %40, %54
  %44 = phi %"struct.std::__1::pair"* [ %55, %54 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  %51 = and i1 %47, %50
  %52 = icmp eq %"class.WTF::StringImpl"* %46, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %53 = or i1 %52, %51
  br i1 %53, label %54, label %57

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 1
  %56 = icmp eq %"struct.std::__1::pair"* %55, %15
  br i1 %56, label %59, label %43

57:                                               ; preds = %43
  %58 = icmp eq %"struct.std::__1::pair"* %44, %15
  br i1 %58, label %59, label %36

59:                                               ; preds = %29, %40, %57, %36, %54, %8, %32, %2
  %60 = phi i1 [ false, %2 ], [ true, %32 ], [ true, %8 ], [ true, %54 ], [ true, %40 ], [ true, %57 ], [ false, %36 ], [ true, %29 ]
  ret i1 %60
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNK3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EEPKS6_RKT0_(%"class.WTF::HashTable"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %98, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #5
  br label %19

19:                                               ; preds = %6, %17
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %22 = load i8, i8* %21, align 8
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 15
  %25 = xor i32 %24, -1
  %26 = add nsw i32 %25, %23
  %27 = lshr i32 %26, 10
  %28 = xor i32 %27, %26
  %29 = mul nsw i32 %28, 9
  %30 = lshr i32 %29, 6
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 11
  %33 = xor i32 %32, -1
  %34 = add i32 %31, %33
  %35 = lshr i32 %34, 16
  %36 = xor i32 %35, %34
  %37 = zext i32 %20 to i64
  %38 = mul i64 %37, 5146158508761418231
  %39 = zext i32 %36 to i64
  %40 = mul i64 %39, -682818954288075998
  %41 = add i64 %40, %38
  %42 = lshr i64 %41, 32
  %43 = trunc i64 %42 to i32
  %44 = and i32 %9, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %45
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %45, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  %53 = and i1 %49, %52
  br i1 %53, label %98, label %54

54:                                               ; preds = %19
  %55 = xor i32 %43, -1
  %56 = lshr i64 %41, 55
  %57 = trunc i64 %56 to i32
  %58 = add i32 %57, %55
  %59 = shl i32 %58, 12
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 7
  %62 = xor i32 %61, %60
  %63 = shl i32 %62, 2
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 20
  %66 = xor i32 %65, %64
  %67 = or i32 %66, 1
  %68 = zext i32 %67 to i64
  br label %69

69:                                               ; preds = %54, %85
  %70 = phi i8* [ %50, %54 ], [ %94, %85 ]
  %71 = phi %"class.WTF::StringImpl"* [ %48, %54 ], [ %92, %85 ]
  %72 = phi %"struct.std::__1::pair"* [ %46, %54 ], [ %90, %85 ]
  %73 = phi i64 [ %45, %54 ], [ %89, %85 ]
  %74 = phi i64 [ 0, %54 ], [ %87, %85 ]
  %75 = bitcast %"struct.std::__1::pair"* %72 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, inttoptr (i64 -1 to i8*)
  br i1 %77, label %85, label %78

78:                                               ; preds = %69
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %80 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"* %79) #5
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  %82 = load i8, i8* %70, align 8
  %83 = load i8, i8* %21, align 8
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %98, label %85

85:                                               ; preds = %78, %69, %81
  %86 = icmp eq i64 %74, 0
  %87 = select i1 %86, i64 %68, i64 %74
  %88 = add i64 %87, %73
  %89 = and i64 %88, %10
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %89
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %89, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  %97 = and i1 %93, %96
  br i1 %97, label %98, label %69

98:                                               ; preds = %85, %81, %19, %2
  %99 = phi %"struct.std::__1::pair"* [ null, %2 ], [ null, %19 ], [ null, %85 ], [ %72, %81 ]
  ret %"struct.std::__1::pair"* %99
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
