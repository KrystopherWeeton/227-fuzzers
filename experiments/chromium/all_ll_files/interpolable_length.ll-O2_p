; ModuleID = '../../third_party/blink/renderer/core/animation/interpolable_length.cc'
source_filename = "../../third_party/blink/renderer/core/animation/interpolable_length.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::CSSMathExpressionNode> >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::CSSMathExpressionNode> >::InstanceStorage" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.0", i32, [4 x i8], %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.170", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.110", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist.41"* }
%"class.blink::Worklist.41" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64 }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { float }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.113", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.41"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.177" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent" }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector", %"class.std::__1::bitset" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [80 x i8] }
%"class.WTF::VectorBufferBase" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186", %class.scoped_refptr.192 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::InterpolableValue"* }
%class.scoped_refptr.192 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.193", [4 x i8] }>
%"class.WTF::RefCounted.193" = type { %"class.base::RefCounted.194" }
%"class.base::RefCounted.194" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSMathExpressionNumericLiteral" = type { %"class.blink::CSSMathExpressionNode.base", %"class.blink::Member.203" }
%"class.blink::CSSMathExpressionNode.base" = type <{ i32 (...)**, i32, i8, i8, i8 }>
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::CSSNumericLiteralValue"* }
%"class.blink::PersistentBase.198" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::Font" = type opaque
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%"class.blink::CSSMathFunctionValue" = type { %"class.blink::CSSPrimitiveValue", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSMathExpressionNode"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.211 }
%union.anon.211 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink18InterpolableLengthC2ERKS0_ = comdat any

$_ZN5blink18InterpolableLengthD2Ev = comdat any

$_ZN5blink18InterpolableLengthD0Ev = comdat any

$_ZNK5blink17InterpolableValue8IsNumberEv = comdat any

$_ZNK5blink17InterpolableValue6IsBoolEv = comdat any

$_ZNK5blink17InterpolableValue6IsListEv = comdat any

$_ZNK5blink18InterpolableLength8IsLengthEv = comdat any

$_ZNK5blink17InterpolableValue13IsAspectRatioEv = comdat any

$_ZNK5blink17InterpolableValue8IsShadowEv = comdat any

$_ZNK5blink17InterpolableValue8IsFilterEv = comdat any

$_ZNK5blink17InterpolableValue15IsTransformListEv = comdat any

$_ZNK5blink18InterpolableLength6EqualsERKNS_17InterpolableValueE = comdat any

$_ZNK5blink18InterpolableLength15RawCloneAndZeroEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd = comdat any

$_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIdS1_E11OffsetRangeES6_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_ = comdat any

$_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink18InterpolableLengthE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolableLength"*)* @_ZN5blink18InterpolableLengthD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableLength"*)* @_ZN5blink18InterpolableLengthD0Ev to i8*), i8* bitcast (void (%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)* @_ZNK5blink18InterpolableLength11InterpolateERKNS_17InterpolableValueEdRS1_ to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsNumberEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsBoolEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableLength"*)* @_ZNK5blink18InterpolableLength8IsLengthEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue13IsAspectRatioEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsShadowEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue8IsFilterEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableValue"*)* @_ZNK5blink17InterpolableValue15IsTransformListEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink18InterpolableLength6EqualsERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableLength"*, double)* @_ZN5blink18InterpolableLength5ScaleEd to i8*), i8* bitcast (void (%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"*)* @_ZN5blink18InterpolableLength3AddERKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableLength"*, double, %"class.blink::InterpolableValue"*)* @_ZN5blink18InterpolableLength11ScaleAndAddEdRKNS_17InterpolableValueE to i8*), i8* bitcast (void (%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"*)* @_ZNK5blink18InterpolableLength24AssertCanInterpolateWithERKNS_17InterpolableValueE to i8*), i8* bitcast (%"class.blink::InterpolableLength"* (%"class.blink::InterpolableLength"*)* @_ZNK5blink18InterpolableLength8RawCloneEv to i8*), i8* bitcast (%"class.blink::InterpolableLength"* (%"class.blink::InterpolableLength"*)* @_ZNK5blink18InterpolableLength15RawCloneAndZeroEv to i8*)] }, align 8
@_ZZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent = internal global i64 0, align 8
@_ZZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent = internal global i64 0, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink18InterpolableLengthC1EONS_17CSSPrimitiveValue14CSSLengthArrayE = hidden unnamed_addr alias void (%"class.blink::InterpolableLength"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*), void (%"class.blink::InterpolableLength"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"*)* @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE
@_ZN5blink18InterpolableLengthC1ERKNS_21CSSMathExpressionNodeE = hidden unnamed_addr alias void (%"class.blink::InterpolableLength"*, %"class.blink::CSSMathExpressionNode"*), void (%"class.blink::InterpolableLength"*, %"class.blink::CSSMathExpressionNode"*)* @_ZN5blink18InterpolableLengthC2ERKNS_21CSSMathExpressionNodeE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength12CreatePixelsEd(double) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %3 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %5 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %7, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 88, i1 false) #13
  %8 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0
  %9 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 0) #13
  store double %0, double* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 1, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 1
  store i64 %12, i64* %10, align 8
  %13 = call noalias i8* @malloc(i64 136) #13
  %14 = bitcast i8* %13 to %"class.blink::InterpolableLength"*
  call void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"* %14, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %2) #13
  %15 = load i32, i32* %7, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %1
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %17, %1
  %19 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = bitcast i8* %4 to double*
  %22 = icmp eq double* %20, %21
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %24, double* %20) #13
  br label %25

25:                                               ; preds = %18, %23
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %3) #13
  ret %"class.blink::InterpolableLength"* %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreatePercentEd(double) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %3 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %5 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %7, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 88, i1 false) #13
  %8 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0
  %9 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %8, i32 1) #13
  store double %0, double* %9, align 8
  %10 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 1, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = or i64 %11, 2
  store i64 %12, i64* %10, align 8
  %13 = call noalias i8* @malloc(i64 136) #13
  %14 = bitcast i8* %13 to %"class.blink::InterpolableLength"*
  call void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"* %14, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %2) #13
  %15 = load i32, i32* %7, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %1
  store i32 0, i32* %7, align 4
  br label %18

18:                                               ; preds = %17, %1
  %19 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = bitcast i8* %4 to double*
  %22 = icmp eq double* %20, %21
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %24, double* %20) #13
  br label %25

25:                                               ; preds = %18, %23
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %3) #13
  ret %"class.blink::InterpolableLength"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %2 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %2) #13
  %3 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %4 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1 to i8**
  store i8* %3, i8** %4, align 8
  %5 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %6, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 88, i1 false) #13
  %7 = call noalias i8* @malloc(i64 136) #13
  %8 = bitcast i8* %7 to %"class.blink::InterpolableLength"*
  call void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"* %8, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %1) #13
  %9 = load i32, i32* %6, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %0
  store i32 0, i32* %6, align 4
  br label %12

12:                                               ; preds = %11, %0
  %13 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = bitcast i8* %3 to double*
  %16 = icmp eq double* %14, %15
  br i1 %16, label %19, label %17, !prof !3

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %18, double* %14) #13
  br label %19

19:                                               ; preds = %12, %17
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %2) #13
  ret %"class.blink::InterpolableLength"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp ugt i8 %4, 1
  %6 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPrimitiveValue"*
  %7 = icmp eq %"class.blink::CSSValue"* %0, null
  %8 = or i1 %7, %5
  br i1 %8, label %56, label %9

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %6) #13
  br i1 %10, label %15, label %11

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* nonnull %6) #13
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue32IsCalculatedPercentageWithLengthEv(%"class.blink::CSSPrimitiveValue"* nonnull %6) #13
  br i1 %14, label %15, label %56

15:                                               ; preds = %13, %11, %9
  %16 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %18 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %20, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 88, i1 false) #13
  %21 = call zeroext i1 @_ZNK5blink17CSSPrimitiveValue21AccumulateLengthArrayERNS0_14CSSLengthArrayEd(%"class.blink::CSSPrimitiveValue"* nonnull %6, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %2, double 1.000000e+00) #13
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = call noalias i8* @malloc(i64 136) #13
  %24 = bitcast i8* %23 to %"class.blink::InterpolableLength"*
  call void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"* %24, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %2) #13
  br label %42

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %27 = bitcast i8* %26 to %"class.blink::CSSMathExpressionNode"**
  %28 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %27, align 8
  %29 = call noalias i8* @malloc(i64 136) #13
  %30 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 16
  %32 = getelementptr inbounds i8, i8* %29, i64 32
  %33 = bitcast i8* %31 to i8**
  store i8* %32, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %29, i64 24
  %35 = bitcast i8* %34 to i32*
  store i32 10, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %29, i64 28
  %37 = bitcast i8* %36 to i32*
  store i32 10, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %29, i64 8
  %39 = bitcast i8* %38 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 104, i1 false) #13
  store i32 1, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %29, i64 120
  %41 = bitcast i8* %40 to %"class.blink::PersistentBase"*
  call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %41, %"class.blink::CSSMathExpressionNode"* %28) #13
  br label %42

42:                                               ; preds = %25, %22
  %43 = phi i8* [ %23, %22 ], [ %29, %25 ]
  %44 = load i32, i32* %20, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %42
  store i32 0, i32* %20, align 4
  br label %47

47:                                               ; preds = %46, %42
  %48 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load double*, double** %48, align 8
  %50 = bitcast i8* %17 to double*
  %51 = icmp eq double* %49, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %53, double* %49) #13
  br label %54

54:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %16) #13
  %55 = bitcast i8* %43 to %"class.blink::InterpolableLength"*
  br label %56

56:                                               ; preds = %13, %1, %54
  %57 = phi %"class.blink::InterpolableLength"* [ %55, %54 ], [ null, %1 ], [ null, %13 ]
  ret %"class.blink::InterpolableLength"* %57
}

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue8IsLengthEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue32IsCalculatedPercentageWithLengthEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue21AccumulateLengthArrayERNS0_14CSSLengthArrayEd(%"class.blink::CSSPrimitiveValue"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104), double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #3 align 2 {
  %3 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %84 [
    i8 8, label %6
    i8 1, label %40
    i8 2, label %40
  ]

6:                                                ; preds = %2
  %7 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0) #13
  %8 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %7, i64 0, i32 3
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %6
  %13 = tail call dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"* %0) #13
  %14 = fpext float %1 to double
  %15 = fdiv double 1.000000e+00, %14
  %16 = tail call %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue4ZoomEd(%"class.blink::CalculationValue"* %13, double %15) #13
  %17 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_16CalculationValueE(%"class.blink::CalculationValue"* dereferenceable(24) %16) #13
  %18 = tail call noalias i8* @malloc(i64 136) #13
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 16
  %21 = getelementptr inbounds i8, i8* %18, i64 32
  %22 = bitcast i8* %20 to i8**
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %18, i64 24
  %24 = bitcast i8* %23 to i32*
  store i32 10, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 28
  %26 = bitcast i8* %25 to i32*
  store i32 10, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %18, i64 8
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 104, i1 false) #13
  store i32 1, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %18, i64 120
  %30 = bitcast i8* %29 to %"class.blink::PersistentBase"*
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %30, %"class.blink::CSSMathExpressionNode"* %17) #13
  %31 = ptrtoint i8* %18 to i64
  %32 = icmp eq %"class.blink::CalculationValue"* %16, null
  br i1 %32, label %84, label %33

33:                                               ; preds = %12
  %34 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %16, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #13
  %35 = getelementptr inbounds %"class.blink::CalculationValue", %"class.blink::CalculationValue"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %84

38:                                               ; preds = %33
  tail call void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"* nonnull %16) #13
  %39 = bitcast %"class.blink::CalculationValue"* %16 to i8*
  tail call void @free(i8* %39) #13
  br label %84

40:                                               ; preds = %6, %2, %2
  %41 = tail call <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* %0) #13
  %42 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %44 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3 to i8**
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %46, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 88, i1 false) #13
  %47 = extractelement <2 x float> %41, i32 0
  %48 = fdiv float %47, %1
  %49 = fpext float %48 to double
  %50 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 0
  %51 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %50, i32 0) #13
  store double %49, double* %51, align 8
  %52 = fcmp une float %47, 0.000000e+00
  %53 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 1, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, -2
  %56 = or i64 %54, 1
  %57 = select i1 %52, i64 %56, i64 %55
  store i64 %57, i64* %53, align 8
  %58 = extractelement <2 x float> %41, i32 1
  %59 = fpext float %58 to double
  %60 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %50, i32 1) #13
  store double %59, double* %60, align 8
  %61 = load i8, i8* %4, align 1
  switch i8 %61, label %65 [
    i8 8, label %62
    i8 1, label %62
  ]

62:                                               ; preds = %40, %40
  %63 = load i64, i64* %53, align 8
  %64 = or i64 %63, 2
  br label %68

65:                                               ; preds = %40
  %66 = load i64, i64* %53, align 8
  %67 = and i64 %66, -3
  br label %68

68:                                               ; preds = %62, %65
  %69 = phi i64 [ %64, %62 ], [ %67, %65 ]
  store i64 %69, i64* %53, align 8
  %70 = call noalias i8* @malloc(i64 136) #13
  %71 = bitcast i8* %70 to %"class.blink::InterpolableLength"*
  call void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"* %71, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %3) #13
  %72 = ptrtoint i8* %70 to i64
  %73 = load i32, i32* %46, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %68
  store i32 0, i32* %46, align 4
  br label %76

76:                                               ; preds = %75, %68
  %77 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load double*, double** %77, align 8
  %79 = bitcast i8* %43 to double*
  %80 = icmp eq double* %78, %79
  br i1 %80, label %83, label %81, !prof !3

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %3, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %82, double* %78) #13
  br label %83

83:                                               ; preds = %76, %81
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %42) #13
  br label %84

84:                                               ; preds = %2, %38, %33, %12, %83
  %85 = phi i64 [ %72, %83 ], [ 0, %2 ], [ %31, %12 ], [ %31, %33 ], [ %31, %38 ]
  %86 = inttoptr i64 %85 to %"class.blink::InterpolableLength"*
  ret %"class.blink::InterpolableLength"* %86
}

declare dereferenceable(24) %"class.blink::CalculationValue"* @_ZNK5blink6Length19GetCalculationValueEv(%"class.blink::Length"*) local_unnamed_addr #2

declare %"class.blink::CalculationValue"* @_ZNK5blink16CalculationValue4ZoomEd(%"class.blink::CalculationValue"*, double) local_unnamed_addr #2

declare %"class.blink::CSSMathExpressionNode"* @_ZN5blink21CSSMathExpressionNode6CreateERKNS_16CalculationValueE(%"class.blink::CalculationValue"* dereferenceable(24)) local_unnamed_addr #2

declare <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength12MergeSinglesENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEES6_(%"struct.blink::PairwiseInterpolationValue"* noalias nocapture sret, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::InterpolableValue"* %1 to i64
  %5 = ptrtoint %"class.blink::InterpolableValue"* %2 to i64
  %6 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  %7 = bitcast %"class.blink::InterpolableValue"* %2 to %"class.blink::InterpolableLength"*
  %8 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %9 = bitcast %"class.blink::InterpolableValue"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 14
  %14 = bitcast %"class.blink::InterpolableValue"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 2
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %26, label %45

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 15
  %20 = bitcast %"class.blink::InterpolableValue"* %19 to %"class.blink::CSSMathExpressionNode"**
  %21 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = or i32 %23, 1
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %45, label %26

26:                                               ; preds = %12, %18
  %27 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 1
  %28 = bitcast %"class.blink::InterpolableValue"* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 14
  %33 = bitcast %"class.blink::InterpolableValue"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 2
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %47, label %45

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 15
  %39 = bitcast %"class.blink::InterpolableValue"* %38 to %"class.blink::CSSMathExpressionNode"**
  %40 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = or i32 %42, 1
  %44 = icmp eq i32 %43, 3
  br i1 %44, label %45, label %47

45:                                               ; preds = %12, %31, %37, %18
  tail call void @_ZN5blink18InterpolableLength16SetHasPercentageEv(%"class.blink::InterpolableLength"* %6)
  tail call void @_ZN5blink18InterpolableLength16SetHasPercentageEv(%"class.blink::InterpolableLength"* %7)
  %46 = load i32, i32* %9, align 8
  br label %47

47:                                               ; preds = %31, %45, %37
  %48 = phi i32 [ %10, %31 ], [ %46, %45 ], [ %10, %37 ]
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 1
  %52 = bitcast %"class.blink::InterpolableValue"* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %64

55:                                               ; preds = %47, %50
  %56 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %6)
  store i32 1, i32* %9, align 8
  %57 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 15
  %58 = bitcast %"class.blink::InterpolableValue"* %57 to %"class.blink::PersistentBase"*
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %58, %"class.blink::CSSMathExpressionNode"* %56) #13
  %59 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %7)
  %60 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 1
  %61 = bitcast %"class.blink::InterpolableValue"* %60 to i32*
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 15
  %63 = bitcast %"class.blink::InterpolableValue"* %62 to %"class.blink::PersistentBase"*
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %63, %"class.blink::CSSMathExpressionNode"* %59) #13
  br label %64

64:                                               ; preds = %55, %50
  %65 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %4, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %67 = bitcast %"class.std::__1::unique_ptr.186"* %66 to i64*
  store i64 %5, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %69 = bitcast %class.scoped_refptr.192* %68 to i64*
  store i64 0, i64* %69, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18InterpolableLength13HasPercentageEv(%"class.blink::InterpolableLength"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp ne i64 %8, 0
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 3
  br label %17

17:                                               ; preds = %10, %5
  %18 = phi i1 [ %9, %5 ], [ %16, %10 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength16SetHasPercentageEv(%"class.blink::InterpolableLength"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %17, label %62

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = or i32 %14, 1
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %62, label %19

17:                                               ; preds = %5
  %18 = or i64 %7, 2
  store i64 %18, i64* %6, align 8
  br label %62

19:                                               ; preds = %10
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %56, !prof !4

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %56, label %25

25:                                               ; preds = %22
  %26 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 2) #13
  %27 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %26, i1 zeroext false) #13
  store %"class.blink::CSSMathExpressionNumericLiteral"* %27, %"class.blink::CSSMathExpressionNumericLiteral"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent to %"class.blink::CSSMathExpressionNumericLiteral"**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %28 = ptrtoint %"class.blink::CSSMathExpressionNumericLiteral"* %27 to i64
  switch i64 %28, label %29 [
    i64 0, label %55
    i64 -1, label %55
  ]

29:                                               ; preds = %25
  %30 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %31 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %30, i64 0, i32 1
  %32 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %31) #13
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %29
  %35 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %31, i8* %35) #13
  br label %36

36:                                               ; preds = %34, %29
  %37 = phi i8* [ %35, %34 ], [ %32, %29 ]
  %38 = bitcast i8* %37 to %"class.blink::ThreadState"**
  %39 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8
  %44 = icmp eq %"class.blink::PersistentNode"* %43, null
  br i1 %44, label %45, label %48, !prof !2

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %41, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %46) #13
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8
  br label %48

48:                                               ; preds = %45, %36
  %49 = phi %"class.blink::PersistentNode"* [ %47, %45 ], [ %43, %36 ]
  %50 = bitcast %"class.blink::PersistentNode"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.blink::PersistentRegion"* %41 to i64*
  store i64 %51, i64* %52, align 8
  %53 = bitcast %"class.blink::PersistentNode"* %49 to %"class.blink::PersistentBase.198"**
  store %"class.blink::PersistentBase.198"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent to %"class.blink::PersistentBase.198"*), %"class.blink::PersistentBase.198"** %53, align 8
  %54 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %49, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %54, align 8
  store %"class.blink::PersistentNode"* %49, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %55

55:                                               ; preds = %25, %25, %48
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent) #13
  br label %56

56:                                               ; preds = %22, %55, %19
  %57 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  %58 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %57, i64 0, i32 0
  %59 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %58, align 8
  %60 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength16SetHasPercentageEvE14s_zero_percent to %"class.blink::CSSMathExpressionNode"**), align 8
  %61 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %59, %"class.blink::CSSMathExpressionNode"* %60, i32 0) #13
  store i32 1, i32* %2, align 8
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %57, %"class.blink::CSSMathExpressionNode"* %61) #13
  br label %62

62:                                               ; preds = %5, %10, %56, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength13SetExpressionERKNS_21CSSMathExpressionNodeE(%"class.blink::InterpolableLength"*, %"class.blink::CSSMathExpressionNode"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %4, %"class.blink::CSSMathExpressionNode"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %12 [
    i32 1, label %4
    i32 0, label %7
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %5, align 8
  br label %55

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 2
  %11 = icmp ne i64 %10, 0
  br label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = or i32 %16, 1
  %18 = icmp eq i32 %17, 3
  br label %19

19:                                               ; preds = %7, %12
  %20 = phi i1 [ %11, %7 ], [ %18, %12 ]
  %21 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0
  %26 = xor i1 %20, true
  br label %29

27:                                               ; preds = %46
  %28 = icmp eq %"class.blink::CSSMathExpressionNode"* %47, null
  br i1 %28, label %51, label %55

29:                                               ; preds = %24, %46
  %30 = phi i32 [ 0, %24 ], [ %48, %46 ]
  %31 = phi %"class.blink::CSSMathExpressionNode"* [ null, %24 ], [ %47, %46 ]
  %32 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %25, i32 %30) #13
  %33 = load double, double* %32, align 8
  %34 = fcmp oeq double %33, 0.000000e+00
  %35 = icmp ne i32 %30, 1
  %36 = or i1 %35, %26
  %37 = and i1 %34, %36
  br i1 %37, label %46, label %38

38:                                               ; preds = %29
  %39 = tail call i32 @_ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE(i32 %30) #13
  %40 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %33, i32 %39) #13
  %41 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %40, i1 zeroext false) #13
  %42 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %41 to %"class.blink::CSSMathExpressionNode"*
  %43 = icmp eq %"class.blink::CSSMathExpressionNode"* %31, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* nonnull %31, %"class.blink::CSSMathExpressionNode"* %42, i32 0) #13
  br label %46

46:                                               ; preds = %29, %44, %38
  %47 = phi %"class.blink::CSSMathExpressionNode"* [ %45, %44 ], [ %42, %38 ], [ %31, %29 ]
  %48 = add nuw i32 %30, 1
  %49 = load i32, i32* %21, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %29, label %27

51:                                               ; preds = %19, %27
  %52 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 5) #13
  %53 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %52, i1 zeroext false) #13
  %54 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %53 to %"class.blink::CSSMathExpressionNode"*
  br label %55

55:                                               ; preds = %51, %27, %4
  %56 = phi %"class.blink::CSSMathExpressionNode"* [ %6, %4 ], [ %54, %51 ], [ %47, %27 ]
  ret %"class.blink::CSSMathExpressionNode"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i64 0
  %6 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %4 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 104, i1 false)
  tail call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIdS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %10, %"class.WTF::VectorBuffer"* dereferenceable(96) %11, i64 0, i64 0) #13
  %12 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* null, %"class.blink::CSSMathExpressionNode"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %17 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %16, align 8
  %18 = icmp eq %"class.blink::PersistentNode"* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #13
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #13
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %30, align 8
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %16, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %31, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::PersistentRegion"* %31 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %33, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %16, align 8
  br label %38

38:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength14SetLengthArrayEONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"*, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIdS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %4, %"class.WTF::VectorBuffer"* dereferenceable(96) %5, i64 0, i64 0) #13
  %6 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* null, %"class.blink::CSSMathExpressionNode"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %2
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #13
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #13
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %27, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %32

32:                                               ; preds = %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLengthC2ERKNS_21CSSMathExpressionNodeE(%"class.blink::InterpolableLength"*, %"class.blink::CSSMathExpressionNode"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i64 0
  %6 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %4 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %8, align 4
  %9 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 104, i1 false)
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %10, %"class.blink::CSSMathExpressionNode"* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InterpolableLength"* @_ZNK5blink18InterpolableLength8RawCloneEv(%"class.blink::InterpolableLength"*) unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 136) #13
  %3 = bitcast i8* %2 to %"class.blink::InterpolableLength"*
  tail call void @_ZN5blink18InterpolableLengthC2ERKS0_(%"class.blink::InterpolableLength"* %3, %"class.blink::InterpolableLength"* dereferenceable(136) %0)
  ret %"class.blink::InterpolableLength"* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InterpolableLengthC2ERKS0_(%"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"* dereferenceable(136)) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %7 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %12, align 8
  %13 = icmp ugt i32 %9, 10
  br i1 %13, label %14, label %22

14:                                               ; preds = %2
  %15 = zext i32 %9 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %15) #13
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #13
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %7 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 3
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %12, align 8
  br label %22

22:                                               ; preds = %14, %2
  %23 = phi i8* [ %10, %2 ], [ %17, %14 ]
  %24 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load double*, double** %27, align 8
  %29 = icmp ne i8* %23, null
  %30 = icmp ne double* %28, null
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %37, !prof !3

32:                                               ; preds = %22
  %33 = load i32, i32* %24, align 4
  %34 = zext i32 %33 to i64
  %35 = bitcast double* %28 to i8*
  %36 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %35, i64 %36, i1 false) #13
  br label %37

37:                                               ; preds = %22, %32
  %38 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 3
  %43 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %41, i64 0, i32 0
  %44 = bitcast %"class.blink::Persistent"* %42 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.blink::Persistent"* %41 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8
  switch i64 %45, label %48 [
    i64 0, label %74
    i64 -1, label %74
  ]

48:                                               ; preds = %37
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #13
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #13
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %61, align 8
  %63 = icmp eq %"class.blink::PersistentNode"* %62, null
  br i1 %63, label %64, label %67, !prof !2

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %65) #13
  %66 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %61, align 8
  br label %67

67:                                               ; preds = %64, %55
  %68 = phi %"class.blink::PersistentNode"* [ %66, %64 ], [ %62, %55 ]
  %69 = bitcast %"class.blink::PersistentNode"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  store i64 %70, i64* %71, align 8
  %72 = bitcast %"class.blink::PersistentNode"* %68 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %43, %"class.blink::PersistentBase"** %72, align 8
  %73 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %68, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %73, align 8
  store %"class.blink::PersistentNode"* %68, %"class.blink::PersistentNode"** %47, align 8
  br label %74

74:                                               ; preds = %37, %37, %67
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength29SubtractFromOneHundredPercentEv(%"class.blink::InterpolableLength"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %88

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds double, double* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %75, label %14

14:                                               ; preds = %5
  %15 = shl nuw nsw i64 %11, 3
  %16 = add nsw i64 %15, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp ult i64 %18, 4
  br i1 %19, label %20, label %22

20:                                               ; preds = %73, %14
  %21 = phi double* [ %8, %14 ], [ %24, %73 ]
  br label %82

22:                                               ; preds = %14
  %23 = and i64 %18, 4611686018427387900
  %24 = getelementptr double, double* %8, i64 %23
  %25 = add nsw i64 %23, -4
  %26 = lshr exact i64 %25, 2
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %25, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %22
  %31 = sub nuw nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %56, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %57, %32 ]
  %35 = getelementptr double, double* %8, i64 %33
  %36 = bitcast double* %35 to <2 x double>*
  %37 = load <2 x double>, <2 x double>* %36, align 8
  %38 = getelementptr double, double* %35, i64 2
  %39 = bitcast double* %38 to <2 x double>*
  %40 = load <2 x double>, <2 x double>* %39, align 8
  %41 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %37
  %42 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %40
  %43 = bitcast double* %35 to <2 x double>*
  store <2 x double> %41, <2 x double>* %43, align 8
  %44 = bitcast double* %38 to <2 x double>*
  store <2 x double> %42, <2 x double>* %44, align 8
  %45 = or i64 %33, 4
  %46 = getelementptr double, double* %8, i64 %45
  %47 = bitcast double* %46 to <2 x double>*
  %48 = load <2 x double>, <2 x double>* %47, align 8
  %49 = getelementptr double, double* %46, i64 2
  %50 = bitcast double* %49 to <2 x double>*
  %51 = load <2 x double>, <2 x double>* %50, align 8
  %52 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %48
  %53 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %51
  %54 = bitcast double* %46 to <2 x double>*
  store <2 x double> %52, <2 x double>* %54, align 8
  %55 = bitcast double* %49 to <2 x double>*
  store <2 x double> %53, <2 x double>* %55, align 8
  %56 = add i64 %33, 8
  %57 = add i64 %34, -2
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %32, !llvm.loop !5

59:                                               ; preds = %32, %22
  %60 = phi i64 [ 0, %22 ], [ %56, %32 ]
  %61 = icmp eq i64 %28, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  %63 = getelementptr double, double* %8, i64 %60
  %64 = bitcast double* %63 to <2 x double>*
  %65 = load <2 x double>, <2 x double>* %64, align 8
  %66 = getelementptr double, double* %63, i64 2
  %67 = bitcast double* %66 to <2 x double>*
  %68 = load <2 x double>, <2 x double>* %67, align 8
  %69 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %65
  %70 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %68
  %71 = bitcast double* %63 to <2 x double>*
  store <2 x double> %69, <2 x double>* %71, align 8
  %72 = bitcast double* %66 to <2 x double>*
  store <2 x double> %70, <2 x double>* %72, align 8
  br label %73

73:                                               ; preds = %59, %62
  %74 = icmp eq i64 %18, %23
  br i1 %74, label %75, label %20

75:                                               ; preds = %82, %73, %5
  %76 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 1) #13
  %77 = load double, double* %76, align 8
  %78 = fadd double %77, 1.000000e+02
  store double %78, double* %76, align 8
  %79 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = or i64 %80, 2
  store i64 %81, i64* %79, align 8
  br label %131

82:                                               ; preds = %20, %82
  %83 = phi double* [ %86, %82 ], [ %21, %20 ]
  %84 = load double, double* %83, align 8
  %85 = fsub double -0.000000e+00, %84
  store double %85, double* %83, align 8
  %86 = getelementptr inbounds double, double* %83, i64 1
  %87 = icmp eq double* %86, %12
  br i1 %87, label %75, label %82, !llvm.loop !7

88:                                               ; preds = %1
  %89 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent to i8*) acquire, align 8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %125, !prof !4

91:                                               ; preds = %88
  %92 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent) #13
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %125, label %94

94:                                               ; preds = %91
  %95 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 1.000000e+02, i32 2) #13
  %96 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %95, i1 zeroext false) #13
  store %"class.blink::CSSMathExpressionNumericLiteral"* %96, %"class.blink::CSSMathExpressionNumericLiteral"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent to %"class.blink::CSSMathExpressionNumericLiteral"**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %97 = ptrtoint %"class.blink::CSSMathExpressionNumericLiteral"* %96 to i64
  switch i64 %97, label %98 [
    i64 0, label %124
    i64 -1, label %124
  ]

98:                                               ; preds = %94
  %99 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %100 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %99, i64 0, i32 1
  %101 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %100) #13
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %105, !prof !2

103:                                              ; preds = %98
  %104 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %100, i8* %104) #13
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i8* [ %104, %103 ], [ %101, %98 ]
  %107 = bitcast i8* %106 to %"class.blink::ThreadState"**
  %108 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %110 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %111, align 8
  %113 = icmp eq %"class.blink::PersistentNode"* %112, null
  br i1 %113, label %114, label %117, !prof !2

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %110, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %115) #13
  %116 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %111, align 8
  br label %117

117:                                              ; preds = %114, %105
  %118 = phi %"class.blink::PersistentNode"* [ %116, %114 ], [ %112, %105 ]
  %119 = bitcast %"class.blink::PersistentNode"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.blink::PersistentRegion"* %110 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"class.blink::PersistentNode"* %118 to %"class.blink::PersistentBase.198"**
  store %"class.blink::PersistentBase.198"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent to %"class.blink::PersistentBase.198"*), %"class.blink::PersistentBase.198"** %122, align 8
  %123 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %118, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %123, align 8
  store %"class.blink::PersistentNode"* %118, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %124

124:                                              ; preds = %94, %94, %117
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent) #13
  br label %125

125:                                              ; preds = %91, %124, %88
  %126 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink18InterpolableLength29SubtractFromOneHundredPercentEvE17s_hundred_percent to %"class.blink::CSSMathExpressionNode"**), align 8
  %127 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  %128 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %127, i64 0, i32 0
  %129 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %128, align 8
  %130 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %126, %"class.blink::CSSMathExpressionNode"* %129, i32 1) #13
  store i32 1, i32* %2, align 8
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %127, %"class.blink::CSSMathExpressionNode"* %130) #13
  br label %131

131:                                              ; preds = %125, %75
  ret void
}

declare %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* noalias sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %16 [
    i32 1, label %7
    i32 0, label %11
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %8, align 8
  %10 = tail call %"class.blink::CalculationValue"* @_ZNK5blink21CSSMathExpressionNode11ToCalcValueERKNS_25CSSToLengthConversionDataENS_10ValueRangeEb(%"class.blink::CSSMathExpressionNode"* %9, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %2, i32 %3, i1 zeroext true) #13
  tail call void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"* %0, %"class.blink::CalculationValue"* %10) #13
  br label %113

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 2
  %15 = icmp ne i64 %14, 0
  br label %23

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = or i32 %20, 1
  %22 = icmp eq i32 %21, 3
  br label %23

23:                                               ; preds = %11, %16
  %24 = phi i1 [ %15, %11 ], [ %22, %16 ]
  %25 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = icmp eq i32 %3, 1
  br i1 %24, label %85, label %102

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %1, i64 0, i32 2, i32 0
  br label %38

32:                                               ; preds = %51
  %33 = fcmp une double %53, 0.000000e+00
  %34 = or i1 %24, %33
  %35 = fcmp oeq double %52, 0.000000e+00
  %36 = xor i1 %34, true
  %37 = or i1 %35, %36
  br i1 %37, label %83, label %57

38:                                               ; preds = %30, %51
  %39 = phi i32 [ 0, %30 ], [ %54, %51 ]
  %40 = phi double [ 0.000000e+00, %30 ], [ %53, %51 ]
  %41 = phi double [ 0.000000e+00, %30 ], [ %52, %51 ]
  %42 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %31, i32 %39) #13
  %43 = load double, double* %42, align 8
  %44 = fcmp oeq double %43, 0.000000e+00
  br i1 %44, label %51, label %45

45:                                               ; preds = %38
  %46 = icmp eq i32 %39, 1
  br i1 %46, label %51, label %47

47:                                               ; preds = %45
  %48 = tail call i32 @_ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE(i32 %39) #13
  %49 = tail call double @_ZNK5blink25CSSToLengthConversionData20ZoomedComputedPixelsEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSToLengthConversionData"* %2, double %43, i32 %48) #13
  %50 = fadd double %41, %49
  br label %51

51:                                               ; preds = %47, %45, %38
  %52 = phi double [ %41, %38 ], [ %50, %47 ], [ %41, %45 ]
  %53 = phi double [ %40, %38 ], [ %40, %47 ], [ %43, %45 ]
  %54 = add nuw i32 %39, 1
  %55 = load i32, i32* %25, align 4
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %38, label %32

57:                                               ; preds = %32
  %58 = fcmp ult double %52, 0x47EFFFFFE0000000
  br i1 %58, label %59, label %63

59:                                               ; preds = %57
  %60 = fcmp ole double %52, 0xC7EFFFFFE0000000
  %61 = select i1 %60, double 0xC7EFFFFFE0000000, double %52
  %62 = fptrunc double %61 to float
  br label %63

63:                                               ; preds = %57, %59
  %64 = phi float [ %62, %59 ], [ 0x47EFFFFFE0000000, %57 ]
  %65 = fcmp ult double %53, 0x47EFFFFFE0000000
  br i1 %65, label %66, label %70

66:                                               ; preds = %63
  %67 = fcmp ole double %53, 0xC7EFFFFFE0000000
  %68 = select i1 %67, double 0xC7EFFFFFE0000000, double %53
  %69 = fptrunc double %68 to float
  br label %70

70:                                               ; preds = %63, %66
  %71 = phi float [ %69, %66 ], [ 0x47EFFFFFE0000000, %63 ]
  %72 = insertelement <2 x float> undef, float %64, i32 0
  %73 = insertelement <2 x float> %72, float %71, i32 1
  %74 = tail call noalias i8* @malloc(i64 24) #13
  %75 = bitcast i8* %74 to %"class.blink::CalculationValue"*
  %76 = bitcast i8* %74 to i32*
  store i32 1, i32* %76, align 4
  %77 = getelementptr inbounds i8, i8* %74, i64 8
  %78 = bitcast i8* %77 to <2 x float>*
  store <2 x float> %73, <2 x float>* %78, align 8
  %79 = getelementptr inbounds i8, i8* %74, i64 16
  %80 = icmp eq i32 %3, 1
  %81 = zext i1 %80 to i8
  %82 = shl nuw nsw i8 %81, 1
  store i8 %82, i8* %79, align 8
  tail call void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"* %0, %"class.blink::CalculationValue"* %75) #13
  br label %113

83:                                               ; preds = %32
  %84 = icmp eq i32 %3, 1
  br i1 %34, label %85, label %102

85:                                               ; preds = %28, %83
  %86 = phi i1 [ %29, %28 ], [ %84, %83 ]
  %87 = phi double [ 0.000000e+00, %28 ], [ %53, %83 ]
  %88 = fcmp olt double %87, 0.000000e+00
  %89 = and i1 %86, %88
  %90 = select i1 %89, double 0.000000e+00, double %87
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %91, align 4, !alias.scope !9
  %92 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 1, i8* %92, align 1, !alias.scope !9
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %93, align 2, !alias.scope !9
  %94 = fcmp ult double %90, 0x47EFFFFFE0000000
  br i1 %94, label %95, label %99

95:                                               ; preds = %85
  %96 = fcmp ole double %90, 0xC7EFFFFFE0000000
  %97 = select i1 %96, double 0xC7EFFFFFE0000000, double %90
  %98 = fptrunc double %97 to float
  br label %99

99:                                               ; preds = %85, %95
  %100 = phi float [ %98, %95 ], [ 0x47EFFFFFE0000000, %85 ]
  %101 = bitcast %"class.blink::Length"* %0 to float*
  store float %100, float* %101, align 4, !alias.scope !9
  br label %113

102:                                              ; preds = %28, %83
  %103 = phi i1 [ %29, %28 ], [ %84, %83 ]
  %104 = phi double [ 0.000000e+00, %28 ], [ %52, %83 ]
  %105 = fcmp olt double %104, 0.000000e+00
  %106 = and i1 %103, %105
  %107 = select i1 %106, double 0.000000e+00, double %104
  %108 = tail call float @_ZN5blink17CSSPrimitiveValue21ClampToCSSLengthRangeEd(double %107) #13
  %109 = bitcast %"class.blink::Length"* %0 to float*
  store float %108, float* %109, align 4, !alias.scope !12
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 1
  store i8 0, i8* %110, align 4, !alias.scope !12
  %111 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  store i8 2, i8* %111, align 1, !alias.scope !12
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 3
  store i8 1, i8* %112, align 2, !alias.scope !12
  br label %113

113:                                              ; preds = %70, %99, %102, %7
  ret void
}

declare %"class.blink::CalculationValue"* @_ZNK5blink21CSSMathExpressionNode11ToCalcValueERKNS_25CSSToLengthConversionDataENS_10ValueRangeEb(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"*, %"class.blink::CalculationValue"*) unnamed_addr #2

declare double @_ZNK5blink25CSSToLengthConversionData20ZoomedComputedPixelsEdNS_17CSSPrimitiveValue8UnitTypeE(%"class.blink::CSSToLengthConversionData"*, double, i32) local_unnamed_addr #2

declare float @_ZN5blink17CSSPrimitiveValue21ClampToCSSLengthRangeEd(double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSPrimitiveValue"* @_ZNK5blink18InterpolableLength14CreateCSSValueENS_10ValueRangeE(%"class.blink::InterpolableLength"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %7, align 8
  %9 = tail call %"class.blink::CSSMathFunctionValue"* @_ZN5blink20CSSMathFunctionValue6CreateEPKNS_21CSSMathExpressionNodeENS_10ValueRangeE(%"class.blink::CSSMathExpressionNode"* %8, i32 %1) #13
  %10 = getelementptr inbounds %"class.blink::CSSMathFunctionValue", %"class.blink::CSSMathFunctionValue"* %9, i64 0, i32 0
  br label %77

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 1023
  %15 = tail call i64 @llvm.ctpop.i64(i64 %14) #13, !range !15
  %16 = icmp ugt i64 %15, 1
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %74, label %22

22:                                               ; preds = %17
  %23 = zext i32 %20 to i64
  br label %52

24:                                               ; preds = %11
  %25 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %0)
  %26 = bitcast %"class.blink::CSSMathExpressionNode"* %25 to i1 (%"class.blink::CSSMathExpressionNode"*)***
  %27 = load i1 (%"class.blink::CSSMathExpressionNode"*)**, i1 (%"class.blink::CSSMathExpressionNode"*)*** %26, align 8
  %28 = load i1 (%"class.blink::CSSMathExpressionNode"*)*, i1 (%"class.blink::CSSMathExpressionNode"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::CSSMathExpressionNode"* %25) #13
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %0)
  %32 = tail call %"class.blink::CSSMathFunctionValue"* @_ZN5blink20CSSMathFunctionValue6CreateEPKNS_21CSSMathExpressionNodeENS_10ValueRangeE(%"class.blink::CSSMathExpressionNode"* %31, i32 %1) #13
  %33 = getelementptr inbounds %"class.blink::CSSMathFunctionValue", %"class.blink::CSSMathFunctionValue"* %32, i64 0, i32 0
  br label %77

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::CSSMathExpressionNode", %"class.blink::CSSMathExpressionNode"* %25, i64 1
  %36 = bitcast %"class.blink::CSSMathExpressionNode"* %35 to %"class.blink::CSSNumericLiteralValue"**
  %37 = load %"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"** %36, align 8
  %38 = icmp eq i32 %1, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %37, i64 0, i32 1
  %41 = load double, double* %40, align 8
  %42 = fcmp ult double %41, 0.000000e+00
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %37, i64 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8
  %46 = and i8 %45, 127
  %47 = zext i8 %46 to i32
  %48 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 %47) #13
  br label %49

49:                                               ; preds = %34, %39, %43
  %50 = phi %"class.blink::CSSNumericLiteralValue"* [ %48, %43 ], [ %37, %39 ], [ %37, %34 ]
  %51 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %50, i64 0, i32 0
  br label %77

52:                                               ; preds = %22, %60
  %53 = phi i64 [ 0, %22 ], [ %61, %60 ]
  %54 = icmp eq i64 %53, 10
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %52
  %57 = shl i64 1, %53
  %58 = and i64 %57, %13
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = add nuw nsw i64 %53, 1
  %62 = icmp ult i64 %61, %23
  br i1 %62, label %52, label %74

63:                                               ; preds = %56
  %64 = trunc i64 %53 to i32
  %65 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %64) #13
  %66 = load double, double* %65, align 8
  %67 = icmp eq i32 %1, 1
  %68 = fcmp olt double %66, 0.000000e+00
  %69 = and i1 %67, %68
  %70 = select i1 %69, double 0.000000e+00, double %66
  %71 = tail call i32 @_ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE(i32 %64) #13
  %72 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %70, i32 %71) #13
  %73 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %72, i64 0, i32 0
  br label %77

74:                                               ; preds = %60, %17
  %75 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 5) #13
  %76 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %75, i64 0, i32 0
  br label %77

77:                                               ; preds = %63, %30, %49, %74, %6
  %78 = phi %"class.blink::CSSPrimitiveValue"* [ %10, %6 ], [ %76, %74 ], [ %73, %63 ], [ %51, %49 ], [ %33, %30 ]
  ret %"class.blink::CSSPrimitiveValue"* %78
}

declare %"class.blink::CSSMathFunctionValue"* @_ZN5blink20CSSMathFunctionValue6CreateEPKNS_21CSSMathExpressionNodeENS_10ValueRangeE(%"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #2

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #2

declare %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength5ScaleEd(%"class.blink::InterpolableLength"*, double) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %85

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds double, double* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %93, label %14

14:                                               ; preds = %6
  %15 = shl nuw nsw i64 %11, 3
  %16 = add nsw i64 %15, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %19 = icmp ult i64 %18, 4
  br i1 %19, label %77, label %20

20:                                               ; preds = %14
  %21 = and i64 %18, 4611686018427387900
  %22 = getelementptr double, double* %8, i64 %21
  %23 = insertelement <2 x double> undef, double %1, i32 0
  %24 = shufflevector <2 x double> %23, <2 x double> undef, <2 x i32> zeroinitializer
  %25 = insertelement <2 x double> undef, double %1, i32 0
  %26 = shufflevector <2 x double> %25, <2 x double> undef, <2 x i32> zeroinitializer
  %27 = add nsw i64 %21, -4
  %28 = lshr exact i64 %27, 2
  %29 = add nuw nsw i64 %28, 1
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %27, 0
  br i1 %31, label %61, label %32

32:                                               ; preds = %20
  %33 = sub nuw nsw i64 %29, %30
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi i64 [ 0, %32 ], [ %58, %34 ]
  %36 = phi i64 [ %33, %32 ], [ %59, %34 ]
  %37 = getelementptr double, double* %8, i64 %35
  %38 = bitcast double* %37 to <2 x double>*
  %39 = load <2 x double>, <2 x double>* %38, align 8
  %40 = getelementptr double, double* %37, i64 2
  %41 = bitcast double* %40 to <2 x double>*
  %42 = load <2 x double>, <2 x double>* %41, align 8
  %43 = fmul <2 x double> %39, %24
  %44 = fmul <2 x double> %42, %26
  %45 = bitcast double* %37 to <2 x double>*
  store <2 x double> %43, <2 x double>* %45, align 8
  %46 = bitcast double* %40 to <2 x double>*
  store <2 x double> %44, <2 x double>* %46, align 8
  %47 = or i64 %35, 4
  %48 = getelementptr double, double* %8, i64 %47
  %49 = bitcast double* %48 to <2 x double>*
  %50 = load <2 x double>, <2 x double>* %49, align 8
  %51 = getelementptr double, double* %48, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  %53 = load <2 x double>, <2 x double>* %52, align 8
  %54 = fmul <2 x double> %50, %24
  %55 = fmul <2 x double> %53, %26
  %56 = bitcast double* %48 to <2 x double>*
  store <2 x double> %54, <2 x double>* %56, align 8
  %57 = bitcast double* %51 to <2 x double>*
  store <2 x double> %55, <2 x double>* %57, align 8
  %58 = add i64 %35, 8
  %59 = add i64 %36, -2
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %34, !llvm.loop !16

61:                                               ; preds = %34, %20
  %62 = phi i64 [ 0, %20 ], [ %58, %34 ]
  %63 = icmp eq i64 %30, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %61
  %65 = getelementptr double, double* %8, i64 %62
  %66 = bitcast double* %65 to <2 x double>*
  %67 = load <2 x double>, <2 x double>* %66, align 8
  %68 = getelementptr double, double* %65, i64 2
  %69 = bitcast double* %68 to <2 x double>*
  %70 = load <2 x double>, <2 x double>* %69, align 8
  %71 = fmul <2 x double> %67, %24
  %72 = fmul <2 x double> %70, %26
  %73 = bitcast double* %65 to <2 x double>*
  store <2 x double> %71, <2 x double>* %73, align 8
  %74 = bitcast double* %68 to <2 x double>*
  store <2 x double> %72, <2 x double>* %74, align 8
  br label %75

75:                                               ; preds = %61, %64
  %76 = icmp eq i64 %18, %21
  br i1 %76, label %93, label %77

77:                                               ; preds = %75, %14
  %78 = phi double* [ %8, %14 ], [ %22, %75 ]
  br label %79

79:                                               ; preds = %77, %79
  %80 = phi double* [ %83, %79 ], [ %78, %77 ]
  %81 = load double, double* %80, align 8
  %82 = fmul double %81, %1
  store double %82, double* %80, align 8
  %83 = getelementptr inbounds double, double* %80, i64 1
  %84 = icmp eq double* %83, %12
  br i1 %84, label %93, label %79, !llvm.loop !17

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  %87 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %86, i64 0, i32 0
  %88 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %87, align 8
  %89 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %1, i32 1) #13
  %90 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %89, i1 zeroext false) #13
  %91 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %90 to %"class.blink::CSSMathExpressionNode"*
  %92 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %88, %"class.blink::CSSMathExpressionNode"* %91, i32 2) #13
  store i32 1, i32* %3, align 8
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %86, %"class.blink::CSSMathExpressionNode"* %92) #13
  br label %93

93:                                               ; preds = %79, %75, %6, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength3AddERKNS_17InterpolableValueE(%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  %4 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %9 = bitcast %"class.blink::InterpolableValue"* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %38

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 2
  %19 = bitcast %"class.blink::InterpolableValue"* %18 to %"class.WTF::Vector"*
  br label %27

20:                                               ; preds = %27, %12
  %21 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 14
  %22 = bitcast %"class.blink::InterpolableValue"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = or i64 %25, %23
  store i64 %26, i64* %24, align 8
  br label %43

27:                                               ; preds = %17, %27
  %28 = phi i32 [ 0, %17 ], [ %35, %27 ]
  %29 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %28) #13
  %30 = load double, double* %29, align 8
  %31 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %19, i32 %28) #13
  %32 = load double, double* %31, align 8
  %33 = fadd double %30, %32
  %34 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 %28) #13
  store double %33, double* %34, align 8
  %35 = add nuw i32 %28, 1
  %36 = load i32, i32* %14, align 4
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %27, label %20

38:                                               ; preds = %7, %2
  %39 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %0)
  %40 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %3)
  %41 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %39, %"class.blink::CSSMathExpressionNode"* %40, i32 0) #13
  store i32 1, i32* %4, align 8
  %42 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %42, %"class.blink::CSSMathExpressionNode"* %41) #13
  br label %43

43:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InterpolableLength11ScaleAndAddEdRKNS_17InterpolableValueE(%"class.blink::InterpolableLength"*, double, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::InterpolableValue"* %2 to %"class.blink::InterpolableLength"*
  %5 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %40

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 1
  %10 = bitcast %"class.blink::InterpolableValue"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %40

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 2
  %20 = bitcast %"class.blink::InterpolableValue"* %19 to %"class.WTF::Vector"*
  br label %28

21:                                               ; preds = %28, %13
  %22 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %2, i64 14
  %23 = bitcast %"class.blink::InterpolableValue"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = or i64 %26, %24
  store i64 %27, i64* %25, align 8
  br label %49

28:                                               ; preds = %18, %28
  %29 = phi i32 [ 0, %18 ], [ %37, %28 ]
  %30 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %29) #13
  %31 = load double, double* %30, align 8
  %32 = fmul double %31, %1
  %33 = tail call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %29) #13
  %34 = load double, double* %33, align 8
  %35 = fadd double %32, %34
  %36 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %29) #13
  store double %35, double* %36, align 8
  %37 = add nuw i32 %29, 1
  %38 = load i32, i32* %15, align 4
  %39 = icmp ult i32 %37, %38
  br i1 %39, label %28, label %21

40:                                               ; preds = %8, %3
  %41 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %0)
  %42 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %1, i32 1) #13
  %43 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %42, i1 zeroext false) #13
  %44 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %43 to %"class.blink::CSSMathExpressionNode"*
  %45 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %41, %"class.blink::CSSMathExpressionNode"* %44, i32 2) #13
  %46 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %4)
  %47 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %45, %"class.blink::CSSMathExpressionNode"* %46, i32 0) #13
  store i32 1, i32* %5, align 8
  %48 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %48, %"class.blink::CSSMathExpressionNode"* %47) #13
  br label %49

49:                                               ; preds = %40, %21
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink18InterpolableLength24AssertCanInterpolateWithERKNS_17InterpolableValueE(%"class.blink::InterpolableLength"* nocapture, %"class.blink::InterpolableValue"* nocapture dereferenceable(8)) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18InterpolableLength11InterpolateERKNS_17InterpolableValueEdRS1_(%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %6 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableLength"*
  %7 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %101

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %12 = bitcast %"class.blink::InterpolableValue"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %101

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 1
  %17 = bitcast %"class.blink::InterpolableValue"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %69, label %20

20:                                               ; preds = %15
  %21 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %23 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %25, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 88, i1 false) #13
  store i32 0, i32* %17, align 8
  %26 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 2
  %27 = bitcast %"class.blink::InterpolableValue"* %26 to %"class.WTF::VectorBuffer"*
  %28 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIdS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %27, %"class.WTF::VectorBuffer"* nonnull dereferenceable(96) %28, i64 0, i64 0) #13
  %29 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5, i64 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 14
  %31 = bitcast %"class.blink::InterpolableValue"* %30 to i64*
  %32 = load i64, i64* %29, align 8
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 15
  %34 = bitcast %"class.blink::InterpolableValue"* %33 to %"class.blink::CSSMathExpressionNode"**
  store %"class.blink::CSSMathExpressionNode"* null, %"class.blink::CSSMathExpressionNode"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 16
  %36 = bitcast %"class.blink::InterpolableValue"* %35 to %"class.blink::PersistentNode"**
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %20
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #13
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #13
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %20, %46
  %59 = load i32, i32* %25, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %58
  store i32 0, i32* %25, align 4
  br label %62

62:                                               ; preds = %61, %58
  %63 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load double*, double** %63, align 8
  %65 = bitcast i8* %22 to double*
  %66 = icmp eq double* %64, %65
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %62
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %28, double* %64) #13
  br label %68

68:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %21) #13
  br label %69

69:                                               ; preds = %68, %15
  %70 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0
  %75 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 2
  %76 = bitcast %"class.blink::InterpolableValue"* %75 to %"class.WTF::Vector"*
  %77 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 2
  %78 = bitcast %"class.blink::InterpolableValue"* %77 to %"class.WTF::Vector"*
  br label %88

79:                                               ; preds = %88, %69
  %80 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 14
  %81 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.blink::InterpolableValue"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = or i64 %84, %82
  %86 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 14
  %87 = bitcast %"class.blink::InterpolableValue"* %86 to i64*
  store i64 %85, i64* %87, align 8
  br label %118

88:                                               ; preds = %73, %88
  %89 = phi i32 [ 0, %73 ], [ %98, %88 ]
  %90 = call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %74, i32 %89) #13
  %91 = load double, double* %90, align 8
  %92 = call dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %76, i32 %89) #13
  %93 = load double, double* %92, align 8
  %94 = fsub double %93, %91
  %95 = fmul double %94, %2
  %96 = fadd double %91, %95
  %97 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %78, i32 %89) #13
  store double %96, double* %97, align 8
  %98 = add nuw i32 %89, 1
  %99 = load i32, i32* %70, align 4
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %88, label %79

101:                                              ; preds = %10, %4
  %102 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %0)
  %103 = fsub double 1.000000e+00, %2
  %104 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %103, i32 1) #13
  %105 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %104, i1 zeroext false) #13
  %106 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %105 to %"class.blink::CSSMathExpressionNode"*
  %107 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %102, %"class.blink::CSSMathExpressionNode"* %106, i32 2) #13
  %108 = tail call dereferenceable(16) %"class.blink::CSSMathExpressionNode"* @_ZNK5blink18InterpolableLength12AsExpressionEv(%"class.blink::InterpolableLength"* %6)
  %109 = tail call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double %2, i32 1) #13
  %110 = tail call %"class.blink::CSSMathExpressionNumericLiteral"* @_ZN5blink31CSSMathExpressionNumericLiteral6CreateEPKNS_22CSSNumericLiteralValueEb(%"class.blink::CSSNumericLiteralValue"* %109, i1 zeroext false) #13
  %111 = bitcast %"class.blink::CSSMathExpressionNumericLiteral"* %110 to %"class.blink::CSSMathExpressionNode"*
  %112 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %108, %"class.blink::CSSMathExpressionNode"* %111, i32 2) #13
  %113 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation16CreateSimplifiedEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %107, %"class.blink::CSSMathExpressionNode"* %112, i32 0) #13
  %114 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 1
  %115 = bitcast %"class.blink::InterpolableValue"* %114 to i32*
  store i32 1, i32* %115, align 8
  %116 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %3, i64 15
  %117 = bitcast %"class.blink::InterpolableValue"* %116 to %"class.blink::PersistentBase"*
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"* %117, %"class.blink::CSSMathExpressionNode"* %113) #13
  br label %118

118:                                              ; preds = %101, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InterpolableLengthD2Ev(%"class.blink::InterpolableLength"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink18InterpolableLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %25
  store i32 0, i32* %27, align 4
  br label %31

31:                                               ; preds = %30, %25
  %32 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load double*, double** %32, align 8
  %34 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i64 0
  %35 = bitcast i8* %34 to double*
  %36 = icmp eq double* %33, %35
  br i1 %36, label %39, label %37, !prof !3

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %26, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* %38, double* %33) #13
  br label %39

39:                                               ; preds = %31, %37
  store double* null, double** %32, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InterpolableLengthD0Ev(%"class.blink::InterpolableLength"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink18InterpolableLengthD2Ev(%"class.blink::InterpolableLength"* %0) #13
  %2 = bitcast %"class.blink::InterpolableLength"* %0 to i8*
  tail call void @free(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsNumberEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsBoolEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue6IsListEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18InterpolableLength8IsLengthEv(%"class.blink::InterpolableLength"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue13IsAspectRatioEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsShadowEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue8IsFilterEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17InterpolableValue15IsTransformListEv(%"class.blink::InterpolableValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18InterpolableLength6EqualsERKNS_17InterpolableValueE(%"class.blink::InterpolableLength"*, %"class.blink::InterpolableValue"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InterpolableLength"* @_ZNK5blink18InterpolableLength15RawCloneAndZeroEv(%"class.blink::InterpolableLength"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.blink::CSSPrimitiveValue::CSSLengthArray", align 8
  %3 = tail call noalias i8* @malloc(i64 136) #13
  %4 = bitcast i8* %3 to %"class.blink::InterpolableLength"*
  %5 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %7 = bitcast %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2 to i8**
  store i8* %6, i8** %7, align 8
  %8 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 10, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 10, i32* %9, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 88, i1 false) #13
  call void @_ZN5blink18InterpolableLengthC2EONS_17CSSPrimitiveValue14CSSLengthArrayE(%"class.blink::InterpolableLength"* %4, %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* nonnull dereferenceable(104) %2)
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %1
  store i32 0, i32* %9, align 4
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load double*, double** %14, align 8
  %16 = bitcast i8* %6 to double*
  %17 = icmp eq double* %15, %16
  br i1 %17, label %20, label %18, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"struct.blink::CSSPrimitiveValue::CSSLengthArray"* %2, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"* nonnull %19, double* %15) #13
  br label %20

20:                                               ; preds = %13, %18
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %5) #13
  ret %"class.blink::InterpolableLength"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPd(%"class.WTF::VectorBuffer"*, double*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast double* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIdLj10ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIdS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"*, %"class.WTF::VectorBuffer"* dereferenceable(96), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to double*
  %12 = icmp eq double* %9, %11
  %13 = ptrtoint double* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to double*
  %19 = icmp eq double* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint double* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to double*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi double* [ %18, %14 ], [ %39, %32 ]
  %44 = phi double* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi double* [ null, %14 ], [ %9, %32 ]
  %49 = phi double* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq double* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi double* [ %43, %52 ], [ null, %42 ]
  %60 = phi double* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq double* %48, null
  %66 = icmp ne double* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne double* %48, null
  %84 = icmp ult i32 %47, 10
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 10
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds double, double* %48, i64 %139
  %141 = bitcast double* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds double, double* %48, i64 %138
  %145 = bitcast double* %144 to i8*
  %146 = getelementptr inbounds double, double* %59, i64 %138
  %147 = bitcast double* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 3
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr double, double* %59, i64 %139
  %153 = icmp ult double* %144, %152
  %154 = icmp ult double* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !18, !noalias !21
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !18, !noalias !21
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !21
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !21
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !18, !noalias !21
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !18, !noalias !21
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !21
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !21
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !18, !noalias !21
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !18, !noalias !21
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !21
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !21
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !18, !noalias !21
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !18, !noalias !21
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !21
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !21
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !23

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !18, !noalias !21
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !18, !noalias !21
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !21
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !21
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !18, !noalias !21
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !18, !noalias !21
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !21
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !21
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !24

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds double, double* %48, i64 %242
  %244 = getelementptr inbounds double, double* %49, i64 %242
  %245 = icmp ne double* %244, null
  %246 = icmp ne double* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !3

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds double, double* %48, i64 %249
  %251 = bitcast double* %243 to i8*
  %252 = ptrtoint double* %250 to i64
  %253 = ptrtoint double* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast double* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %255, i8* nonnull align 8 %251, i64 %254, i1 false) #13
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds double, double* %59, i64 %258
  %260 = getelementptr inbounds double, double* %60, i64 %258
  %261 = icmp ne double* %260, null
  %262 = icmp ne double* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !3

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds double, double* %59, i64 %265
  %267 = bitcast double* %259 to i8*
  %268 = ptrtoint double* %266 to i64
  %269 = ptrtoint double* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast double* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %271, i8* nonnull align 8 %267, i64 %270, i1 false) #13
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 10
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSMathExpressionNode"**
  %5 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::CSSMathExpressionNode"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSMathExpressionNode"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSMathExpressionNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)** %5, i64 15
  %7 = load void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSMathExpressionNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSMathExpressionNode"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

declare i32 @_ZN5blink17CSSPrimitiveValue24LengthUnitTypeToUnitTypeENS0_14LengthUnitTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16CalculationValueD1Ev(%"class.blink::CalculationValue"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS2_(%"class.blink::PersistentBase"*, %"class.blink::CSSMathExpressionNode"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::CSSMathExpressionNode"* %1, %"class.blink::CSSMathExpressionNode"** %3, align 8
  %4 = ptrtoint %"class.blink::CSSMathExpressionNode"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase"* %0) #13
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #13
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !2

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #13
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21CSSMathExpressionNodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::CSSMathExpressionNode"**
  %5 = load %"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::CSSMathExpressionNode"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSMathExpressionNode"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21CSSMathExpressionNodeEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZNK3WTF6VectorIdLj10ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8, !6}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink6Length7PercentIdEES0_T_: argument 0"}
!11 = distinct !{!11, !"_ZN5blink6Length7PercentIdEES0_T_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN5blink6Length5FixedIfEES0_T_: argument 0"}
!14 = distinct !{!14, !"_ZN5blink6Length5FixedIfEES0_T_"}
!15 = !{i64 0, i64 65}
!16 = distinct !{!16, !6}
!17 = distinct !{!17, !8, !6}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !6}
!24 = distinct !{!24, !6}
