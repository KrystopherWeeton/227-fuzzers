; ModuleID = '../../media/base/time_delta_interpolator.cc'
source_filename = "../../media/base/time_delta_interpolator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::TimeDeltaInterpolator" = type { %"class.base::TickClock"*, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeTicks", double }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN5media21TimeDeltaInterpolatorC1EPKN4base9TickClockE = hidden unnamed_addr alias void (%"class.media::TimeDeltaInterpolator"*, %"class.base::TickClock"*), void (%"class.media::TimeDeltaInterpolator"*, %"class.base::TickClock"*)* @_ZN5media21TimeDeltaInterpolatorC2EPKN4base9TickClockE
@_ZN5media21TimeDeltaInterpolatorD1Ev = hidden unnamed_addr alias void (%"class.media::TimeDeltaInterpolator"*), void (%"class.media::TimeDeltaInterpolator"*)* @_ZN5media21TimeDeltaInterpolatorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media21TimeDeltaInterpolatorC2EPKN4base9TickClockE(%"class.media::TimeDeltaInterpolator"* nocapture, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 0
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  %4 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  %6 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -9223372036854775808>, <2 x i64>* %6, align 8
  %7 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media21TimeDeltaInterpolatorD2Ev(%"class.media::TimeDeltaInterpolator"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media21TimeDeltaInterpolator18StartInterpolatingEv(%"class.media::TimeDeltaInterpolator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 0
  %3 = load %"class.base::TickClock"*, %"class.base::TickClock"** %2, align 8
  %4 = bitcast %"class.base::TickClock"* %3 to i64 (%"class.base::TickClock"*)***
  %5 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %5, i64 2
  %7 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::TickClock"* %3) #8
  %9 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 1
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  %12 = load i64, i64* %11, align 8
  ret i64 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media21TimeDeltaInterpolator17StopInterpolatingEv(%"class.media::TimeDeltaInterpolator"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = tail call i64 @_ZN5media21TimeDeltaInterpolator19GetInterpolatedTimeEv(%"class.media::TimeDeltaInterpolator"* %0)
  %3 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  store i64 %2, i64* %3, align 8
  %4 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media21TimeDeltaInterpolator19GetInterpolatedTimeEv(%"class.media::TimeDeltaInterpolator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  %9 = load i64, i64* %8, align 8
  br label %60

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 0
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** %11, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #8
  %18 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 4, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %17, %19
  %21 = sitofp i64 %20 to double
  %22 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 5
  %23 = load double, double* %22, align 8
  %24 = fmul double %23, %21
  %25 = fptosi double %24 to i64
  %26 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store i64 -6148914691236517206, i64* %3, align 8
  %27 = add i64 %25, -9223372036854775807
  %28 = icmp ult i64 %27, 2
  %29 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  %30 = load i64, i64* %29, align 8
  br i1 %28, label %38, label %31

31:                                               ; preds = %10
  %32 = icmp slt i64 %25, 0
  %33 = select i1 %32, i64 -9223372036854775808, i64 9223372036854775807
  %34 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %30, i64 %25) #8
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 %33, i64 %36, !prof !3
  br label %46

38:                                               ; preds = %10
  %39 = add i64 %30, -9223372036854775807
  %40 = icmp ugt i64 %39, 1
  %41 = icmp eq i64 %30, %25
  %42 = or i1 %41, %40
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #8
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  br label %46

46:                                               ; preds = %31, %38, %43
  %47 = phi i64 [ %37, %31 ], [ %25, %38 ], [ %25, %43 ]
  store i64 %47, i64* %3, align 8
  %48 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 3
  %49 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %48, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, -9223372036854775808
  br i1 %51, label %58, label %52

52:                                               ; preds = %46
  %53 = icmp slt i64 %50, %47
  %54 = bitcast i64* %3 to %"class.base::TimeDelta"*
  %55 = select i1 %53, %"class.base::TimeDelta"* %48, %"class.base::TimeDelta"* %54
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %46, %52
  %59 = phi i64 [ %57, %52 ], [ %47, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  br label %60

60:                                               ; preds = %58, %7
  %61 = phi i64 [ %59, %58 ], [ %9, %7 ]
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21TimeDeltaInterpolator15SetPlaybackRateEd(%"class.media::TimeDeltaInterpolator"* nocapture, double) local_unnamed_addr #2 align 2 {
  %3 = tail call i64 @_ZN5media21TimeDeltaInterpolator19GetInterpolatedTimeEv(%"class.media::TimeDeltaInterpolator"* %0)
  %4 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 0
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #8
  %12 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 5
  store double %1, double* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5media21TimeDeltaInterpolator9SetBoundsEN4base9TimeDeltaES2_NS1_9TimeTicksE(%"class.media::TimeDeltaInterpolator"* nocapture, i64, i64, i64) local_unnamed_addr #4 align 2 {
  %5 = icmp sgt i64 %1, 0
  %6 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  %7 = select i1 %5, i64 %1, i64 0
  store i64 %7, i64* %6, align 8
  %8 = icmp sgt i64 %2, 0
  %9 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 3, i32 0
  %10 = select i1 %8, i64 %2, i64 0
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %3, i64* %11, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21TimeDeltaInterpolator13SetUpperBoundEN4base9TimeDeltaE(%"class.media::TimeDeltaInterpolator"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = tail call i64 @_ZN5media21TimeDeltaInterpolator19GetInterpolatedTimeEv(%"class.media::TimeDeltaInterpolator"* %0)
  %4 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 2, i32 0
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 0
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #8
  %12 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.media::TimeDeltaInterpolator", %"class.media::TimeDeltaInterpolator"* %0, i64 0, i32 3, i32 0
  store i64 %1, i64* %13, align 8
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
