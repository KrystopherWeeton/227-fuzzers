; ModuleID = '../../extensions/renderer/bindings/js_runner.cc'
source_filename = "../../extensions/renderer/bindings/js_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::JSRunner" = type { i32 (...)** }
%"class.v8::Context" = type { i8 }
%"class.gin::PerContextData" = type { %"class.base::SupportsUserData.base", %"class.gin::ContextHolder"*, %"class.gin::Runner"* }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.gin::ContextHolder" = type opaque
%"class.gin::Runner" = type opaque
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::Function" = type { i8 }
%"class.v8::Local.20" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.extensions::(anonymous namespace)::JSRunnerPerContextData" = type { %"class.base::SupportsUserData::Data", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.extensions::JSRunner"* }

@_ZN10extensions12_GLOBAL__N_122g_instance_for_testingE = internal unnamed_addr global %"class.extensions::JSRunner"* null, align 8
@_ZN10extensions12_GLOBAL__N_131kExtensionJSRunnerPerContextKeyE = internal constant [20 x i8] c"extension_js_runner\00", align 16
@.str = private unnamed_addr constant [48 x i8] c"../../extensions/renderer/bindings/js_runner.cc\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"per_context_data\00", align 1
@_ZTVN10extensions12_GLOBAL__N_122JSRunnerPerContextDataE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"*)* @_ZN10extensions12_GLOBAL__N_122JSRunnerPerContextDataD2Ev to i8*), i8* bitcast (void (%"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"*)* @_ZN10extensions12_GLOBAL__N_122JSRunnerPerContextDataD0Ev to i8*), i8* bitcast (%"class.base::SupportsUserData::Data"* (%"class.base::SupportsUserData::Data"*)* @_ZN4base16SupportsUserData4Data5CloneEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::JSRunner"* @_ZN10extensions8JSRunner3GetEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.extensions::JSRunner"*, %"class.extensions::JSRunner"** @_ZN10extensions12_GLOBAL__N_122g_instance_for_testingE, align 8
  %3 = icmp eq %"class.extensions::JSRunner"* %2, null
  br i1 %3, label %4, label %15

4:                                                ; preds = %1
  %5 = tail call %"class.gin::PerContextData"* @_ZN3gin14PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0) #8
  %6 = icmp eq %"class.gin::PerContextData"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.gin::PerContextData"* %5 to %"class.base::SupportsUserData"*
  %9 = tail call %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"* nonnull %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN10extensions12_GLOBAL__N_131kExtensionJSRunnerPerContextKeyE, i64 0, i64 0)) #8
  %10 = icmp eq %"class.base::SupportsUserData::Data"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::SupportsUserData::Data", %"class.base::SupportsUserData::Data"* %9, i64 1
  %13 = bitcast %"class.base::SupportsUserData::Data"* %12 to %"class.extensions::JSRunner"**
  %14 = load %"class.extensions::JSRunner"*, %"class.extensions::JSRunner"** %13, align 8
  br label %15

15:                                               ; preds = %4, %7, %11, %1
  %16 = phi %"class.extensions::JSRunner"* [ %2, %1 ], [ null, %4 ], [ %14, %11 ], [ null, %7 ]
  ret %"class.extensions::JSRunner"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.gin::PerContextData"* @_ZN3gin14PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions8JSRunner21SetInstanceForContextEN2v85LocalINS1_7ContextEEENSt3__110unique_ptrIS0_NS5_14default_deleteIS0_EEEE(%"class.v8::Context"*, %"class.extensions::JSRunner"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = ptrtoint %"class.extensions::JSRunner"* %1 to i64
  %5 = tail call %"class.gin::PerContextData"* @_ZN3gin14PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0) #8
  %6 = icmp eq %"class.gin::PerContextData"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #8
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"class.gin::PerContextData"* %5 to %"class.base::SupportsUserData"*
  %12 = call i8* @_Znwm(i64 16) #9
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_122JSRunnerPerContextDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 %4, i64* %15, align 8
  %16 = bitcast i8* %12 to %"class.base::SupportsUserData::Data"*
  call void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN10extensions12_GLOBAL__N_131kExtensionJSRunnerPerContextKeyE, i64 0, i64 0), %"class.base::SupportsUserData::Data"* nonnull %16) #8
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"*, i8*, %"class.base::SupportsUserData::Data"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions8JSRunner23ClearInstanceForContextEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call %"class.gin::PerContextData"* @_ZN3gin14PerContextData4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %0) #8
  %4 = icmp eq %"class.gin::PerContextData"* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #8
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  br label %8

8:                                                ; preds = %1, %5
  %9 = bitcast %"class.gin::PerContextData"* %3 to %"class.base::SupportsUserData"*
  call void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN10extensions12_GLOBAL__N_131kExtensionJSRunnerPerContextKeyE, i64 0, i64 0), %"class.base::SupportsUserData::Data"* null) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions8JSRunner21SetInstanceForTestingEPS0_(%"class.extensions::JSRunner"*) local_unnamed_addr #4 align 2 {
  store %"class.extensions::JSRunner"* %0, %"class.extensions::JSRunner"** @_ZN10extensions12_GLOBAL__N_122g_instance_for_testingE, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.extensions::JSRunner"* @_ZN10extensions8JSRunner21GetInstanceForTestingEv() local_unnamed_addr #5 align 2 {
  %1 = load %"class.extensions::JSRunner"*, %"class.extensions::JSRunner"** @_ZN10extensions12_GLOBAL__N_122g_instance_for_testingE, align 8
  ret %"class.extensions::JSRunner"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions8JSRunner13RunJSFunctionEN2v85LocalINS1_8FunctionEEENS2_INS1_7ContextEEEiPNS2_INS1_5ValueEEE(%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %8 = bitcast %"class.extensions::JSRunner"* %0 to void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)***
  %9 = load void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)**, void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)*, void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)** %9, i64 2
  %11 = load void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)*, void (%"class.extensions::JSRunner"*, %"class.v8::Function"*, %"class.v8::Context"*, i32, %"class.v8::Local.20"*, %"class.base::OnceCallback"*)** %10, align 8
  call void %11(%"class.extensions::JSRunner"* %0, %"class.v8::Function"* %1, %"class.v8::Context"* %2, i32 %3, %"class.v8::Local.20"* %4, %"class.base::OnceCallback"* nonnull %6) #8
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_122JSRunnerPerContextDataD2Ev(%"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData", %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_122JSRunnerPerContextDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData", %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.extensions::JSRunner"*, %"class.extensions::JSRunner"** %3, align 8
  store %"class.extensions::JSRunner"* null, %"class.extensions::JSRunner"** %3, align 8
  %5 = icmp eq %"class.extensions::JSRunner"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::JSRunner"* %4 to void (%"class.extensions::JSRunner"*)***
  %8 = load void (%"class.extensions::JSRunner"*)**, void (%"class.extensions::JSRunner"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::JSRunner"*)*, void (%"class.extensions::JSRunner"*)** %8, i64 1
  %10 = load void (%"class.extensions::JSRunner"*)*, void (%"class.extensions::JSRunner"*)** %9, align 8
  tail call void %10(%"class.extensions::JSRunner"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10extensions12_GLOBAL__N_122JSRunnerPerContextDataD0Ev(%"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData", %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10extensions12_GLOBAL__N_122JSRunnerPerContextDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData", %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.extensions::JSRunner"*, %"class.extensions::JSRunner"** %3, align 8
  store %"class.extensions::JSRunner"* null, %"class.extensions::JSRunner"** %3, align 8
  %5 = icmp eq %"class.extensions::JSRunner"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.extensions::JSRunner"* %4 to void (%"class.extensions::JSRunner"*)***
  %8 = load void (%"class.extensions::JSRunner"*)**, void (%"class.extensions::JSRunner"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.extensions::JSRunner"*)*, void (%"class.extensions::JSRunner"*)** %8, i64 1
  %10 = load void (%"class.extensions::JSRunner"*)*, void (%"class.extensions::JSRunner"*)** %9, align 8
  tail call void %10(%"class.extensions::JSRunner"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"struct.extensions::(anonymous namespace)::JSRunnerPerContextData"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

declare %"class.base::SupportsUserData::Data"* @_ZN4base16SupportsUserData4Data5CloneEv(%"class.base::SupportsUserData::Data"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
