; ModuleID = '../../courgette/third_party/bsdiff/bsdiff_apply.cc'
source_filename = "../../courgette/third_party/bsdiff/bsdiff_apply.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.courgette::SourceStream" = type { i8*, i8*, i8* }
%"struct.bsdiff::MBSPatchHeader_" = type { [8 x i8], i32, i32, i32 }
%"class.courgette::SinkStream" = type { %"class.courgette::NoThrowBuffer" }
%"class.courgette::NoThrowBuffer" = type <{ i8*, i64, i64, %"class.courgette::MemoryAllocator", [7 x i8] }>
%"class.courgette::MemoryAllocator" = type { i8 }
%"class.courgette::SourceStreamSet" = type { i64, [10 x %"class.courgette::SourceStream"] }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }

@.str = private unnamed_addr constant [9 x i8] c"GBSDIF42\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6bsdiff14MBS_ReadHeaderEPN9courgette12SourceStreamEPNS_15MBSPatchHeader_E(%"class.courgette::SourceStream"*, %"struct.bsdiff::MBSPatchHeader_"*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %1, i64 0, i32 0, i64 0
  %4 = tail call zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"* %0, i8* %3, i64 8) #5
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %1, i64 0, i32 1
  %7 = tail call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %0, i32* %6) #5
  br i1 %7, label %8, label %18

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %1, i64 0, i32 2
  %10 = tail call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %0, i32* %9) #5
  br i1 %10, label %11, label %18

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %1, i64 0, i32 3
  %13 = tail call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %0, i32* %12) #5
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = tail call i32 @bcmp(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8)
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, i32 0, i32 4
  br label %18

18:                                               ; preds = %14, %11, %8, %5, %2
  %19 = phi i32 [ 3, %2 ], [ 3, %5 ], [ 3, %8 ], [ 3, %11 ], [ %17, %14 ]
  ret i32 %19
}

declare zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6bsdiff14MBS_ApplyPatchEPKNS_15MBSPatchHeader_EPN9courgette12SourceStreamEPKhmPNS3_10SinkStreamE(%"struct.bsdiff::MBSPatchHeader_"* nocapture readonly, %"class.courgette::SourceStream"*, i8*, i64, %"class.courgette::SinkStream"*) local_unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca %"class.courgette::SourceStreamSet", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds i8, i8* %2, i64 %3
  %15 = bitcast %"class.courgette::SourceStreamSet"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 248, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 248, i1 false)
  call void @_ZN9courgette15SourceStreamSetC1Ev(%"class.courgette::SourceStreamSet"* nonnull %7) #5
  %16 = call zeroext i1 @_ZN9courgette15SourceStreamSet4InitEPNS_12SourceStreamE(%"class.courgette::SourceStreamSet"* nonnull %7, %"class.courgette::SourceStream"* %1) #5
  br i1 %16, label %17, label %200

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 1, i64 0
  %22 = select i1 %20, %"class.courgette::SourceStream"* null, %"class.courgette::SourceStream"* %21
  %23 = icmp ugt i64 %19, 1
  %24 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 1, i64 1
  %25 = select i1 %23, %"class.courgette::SourceStream"* %24, %"class.courgette::SourceStream"* null
  %26 = icmp ugt i64 %19, 2
  %27 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 1, i64 2
  %28 = select i1 %26, %"class.courgette::SourceStream"* %27, %"class.courgette::SourceStream"* null
  %29 = icmp ugt i64 %19, 3
  %30 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 1, i64 3
  %31 = select i1 %29, %"class.courgette::SourceStream"* %30, %"class.courgette::SourceStream"* null
  %32 = icmp ugt i64 %19, 4
  %33 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 1, i64 4
  %34 = select i1 %32, %"class.courgette::SourceStream"* %33, %"class.courgette::SourceStream"* null
  %35 = icmp ugt i64 %19, 5
  %36 = getelementptr inbounds %"class.courgette::SourceStreamSet", %"class.courgette::SourceStreamSet"* %7, i64 0, i32 1, i64 5
  %37 = select i1 %35, %"class.courgette::SourceStream"* %36, %"class.courgette::SourceStream"* null
  %38 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %37, i64 0, i32 2
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %37, i64 0, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = ptrtoint i8* %39 to i64
  %44 = sub i64 %42, %43
  %45 = getelementptr inbounds i8, i8* %39, i64 %44
  %46 = call zeroext i1 @_ZN9courgette12SourceStream4SkipEm(%"class.courgette::SourceStream"* %37, i64 %44) #5
  %47 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %0, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %82, label %50

50:                                               ; preds = %17
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %4, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, %51
  %55 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %4, i64 0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 4294967295
  br i1 %57, label %200, label %58

58:                                               ; preds = %50
  %59 = icmp ult i64 %56, %54
  br i1 %59, label %60, label %82

60:                                               ; preds = %58
  %61 = icmp ugt i64 %54, 256
  %62 = select i1 %61, i64 %54, i64 256
  %63 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #5
  store i8* null, i8** %6, align 8
  %64 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %62, i8** nonnull %6) #5
  %65 = load i8*, i8** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #5
  %66 = icmp eq i8* %65, null
  %67 = xor i1 %64, true
  %68 = or i1 %66, %67
  %69 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %4, i64 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %68, label %72, label %75

72:                                               ; preds = %60
  br i1 %71, label %79, label %73

73:                                               ; preds = %72
  call void @free(i8* nonnull %70) #5
  %74 = bitcast %"class.courgette::SinkStream"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #5
  br label %79

75:                                               ; preds = %60
  br i1 %71, label %80, label %76

76:                                               ; preds = %75
  %77 = load i64, i64* %52, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* nonnull align 1 %70, i64 %77, i1 false) #5
  %78 = load i8*, i8** %69, align 8
  call void @free(i8* %78) #5
  br label %80

79:                                               ; preds = %72, %73
  store i64 4294967295, i64* %55, align 8
  br label %200

80:                                               ; preds = %75, %76
  store i8* %65, i8** %69, align 8
  store i64 %62, i64* %55, align 8
  %81 = icmp eq i64 %62, 4294967295
  br i1 %81, label %200, label %82

82:                                               ; preds = %80, %58, %17
  %83 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #5
  store i32 0, i32* %8, align 4
  %84 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %31, i32* nonnull %8) #5
  br i1 %84, label %85, label %198

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %22, i64 0, i32 2
  %87 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %22, i64 0, i32 1
  %88 = bitcast i32* %9 to i8*
  %89 = bitcast i32* %10 to i8*
  %90 = bitcast i32* %11 to i8*
  %91 = ptrtoint i8* %14 to i64
  %92 = ptrtoint i8* %45 to i64
  br label %93

93:                                               ; preds = %85, %163
  %94 = phi i32 [ %165, %163 ], [ undef, %85 ]
  %95 = phi i8* [ %166, %163 ], [ %39, %85 ]
  %96 = phi i8* [ %167, %163 ], [ %2, %85 ]
  %97 = load i8*, i8** %86, align 8
  %98 = load i8*, i8** %87, align 8
  %99 = icmp eq i8* %97, %98
  br i1 %99, label %169, label %100

100:                                              ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #5
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #5
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #5
  store i32 -1431655766, i32* %11, align 4
  %101 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %22, i32* nonnull %9) #5
  br i1 %101, label %102, label %163

102:                                              ; preds = %100
  %103 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %25, i32* nonnull %10) #5
  br i1 %103, label %104, label %163

104:                                              ; preds = %102
  %105 = call zeroext i1 @_ZN9courgette12SourceStream18ReadVarint32SignedEPi(%"class.courgette::SourceStream"* %28, i32* nonnull %11) #5
  br i1 %105, label %106, label %163

106:                                              ; preds = %104
  %107 = load i32, i32* %9, align 4
  %108 = zext i32 %107 to i64
  %109 = ptrtoint i8* %96 to i64
  %110 = sub i64 %91, %109
  %111 = icmp ult i64 %110, %108
  br i1 %111, label %163, label %112

112:                                              ; preds = %106
  %113 = icmp eq i32 %107, 0
  br i1 %113, label %139, label %114

114:                                              ; preds = %112, %132
  %115 = phi i64 [ %133, %132 ], [ 0, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #5
  store i8 0, i8* %12, align 1
  %116 = load i32, i32* %8, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = add i32 %116, -1
  store i32 %119, i32* %8, align 4
  br label %126

120:                                              ; preds = %114
  %121 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %31, i32* nonnull %8) #5
  br i1 %121, label %122, label %137

122:                                              ; preds = %120
  %123 = call zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"* %34, i8* nonnull %12, i64 1) #5
  br i1 %123, label %124, label %137

124:                                              ; preds = %122
  %125 = load i8, i8* %12, align 1
  br label %126

126:                                              ; preds = %124, %118
  %127 = phi i8 [ %125, %124 ], [ 0, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #5
  store i8 -86, i8* %13, align 1
  %128 = getelementptr inbounds i8, i8* %96, i64 %115
  %129 = load i8, i8* %128, align 1
  %130 = add i8 %127, %129
  store i8 %130, i8* %13, align 1
  %131 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %4, i8* nonnull %13, i64 1) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #5
  br i1 %131, label %132, label %137

132:                                              ; preds = %126
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #5
  %133 = add nuw nsw i64 %115, 1
  %134 = load i32, i32* %9, align 4
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %133, %135
  br i1 %136, label %114, label %139

137:                                              ; preds = %126, %120, %122
  %138 = phi i32 [ 4, %122 ], [ 4, %120 ], [ 1, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #5
  br label %163

139:                                              ; preds = %132, %112
  %140 = phi i32 [ 0, %112 ], [ %134, %132 ]
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %96, i64 %141
  %143 = load i32, i32* %10, align 4
  %144 = zext i32 %143 to i64
  %145 = ptrtoint i8* %95 to i64
  %146 = sub i64 %92, %145
  %147 = icmp ult i64 %146, %144
  br i1 %147, label %163, label %148

148:                                              ; preds = %139
  %149 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %4, i8* %95, i64 %144) #5
  br i1 %149, label %150, label %163

150:                                              ; preds = %148
  %151 = load i32, i32* %10, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %95, i64 %152
  %154 = load i32, i32* %11, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %142, i64 %155
  %157 = icmp ult i8* %156, %2
  %158 = icmp ugt i8* %156, %14
  %159 = or i1 %157, %158
  %160 = zext i1 %159 to i32
  %161 = select i1 %159, i32 4, i32 %94
  %162 = select i1 %159, i8* %142, i8* %156
  br label %163

163:                                              ; preds = %150, %137, %148, %139, %106, %104, %102, %100
  %164 = phi i32 [ 1, %137 ], [ 1, %100 ], [ 1, %102 ], [ 1, %104 ], [ 1, %106 ], [ 1, %139 ], [ 1, %148 ], [ %160, %150 ]
  %165 = phi i32 [ %138, %137 ], [ 4, %100 ], [ 4, %102 ], [ 4, %104 ], [ 4, %106 ], [ 4, %139 ], [ 1, %148 ], [ %161, %150 ]
  %166 = phi i8* [ %95, %137 ], [ %95, %100 ], [ %95, %102 ], [ %95, %104 ], [ %95, %106 ], [ %95, %139 ], [ %95, %148 ], [ %153, %150 ]
  %167 = phi i8* [ %96, %137 ], [ %96, %100 ], [ %96, %102 ], [ %96, %104 ], [ %96, %106 ], [ %142, %139 ], [ %142, %148 ], [ %162, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #5
  %168 = icmp eq i32 %164, 0
  br i1 %168, label %93, label %198

169:                                              ; preds = %93
  %170 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %25, i64 0, i32 2
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %25, i64 0, i32 1
  %173 = load i8*, i8** %172, align 8
  %174 = icmp eq i8* %171, %173
  br i1 %174, label %175, label %198

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %28, i64 0, i32 2
  %177 = load i8*, i8** %176, align 8
  %178 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %28, i64 0, i32 1
  %179 = load i8*, i8** %178, align 8
  %180 = icmp eq i8* %177, %179
  br i1 %180, label %181, label %198

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %31, i64 0, i32 2
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %31, i64 0, i32 1
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %183, %185
  br i1 %186, label %187, label %198

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %34, i64 0, i32 2
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %34, i64 0, i32 1
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %189, %191
  br i1 %192, label %193, label %198

193:                                              ; preds = %187
  %194 = load i8*, i8** %38, align 8
  %195 = load i8*, i8** %40, align 8
  %196 = icmp eq i8* %194, %195
  %197 = select i1 %196, i32 0, i32 4
  br label %198

198:                                              ; preds = %163, %193, %169, %175, %181, %187, %82
  %199 = phi i32 [ 4, %82 ], [ 4, %187 ], [ 4, %181 ], [ 4, %175 ], [ 4, %169 ], [ %197, %193 ], [ %165, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #5
  br label %200

200:                                              ; preds = %80, %50, %79, %198, %5
  %201 = phi i32 [ 3, %5 ], [ %199, %198 ], [ 1, %80 ], [ 1, %79 ], [ 1, %50 ]
  call void @_ZN9courgette15SourceStreamSetD1Ev(%"class.courgette::SourceStreamSet"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 248, i8* nonnull %15) #5
  ret i32 %201
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN9courgette15SourceStreamSetC1Ev(%"class.courgette::SourceStreamSet"*) unnamed_addr #1

declare zeroext i1 @_ZN9courgette15SourceStreamSet4InitEPNS_12SourceStreamE(%"class.courgette::SourceStreamSet"*, %"class.courgette::SourceStream"*) local_unnamed_addr #1

declare zeroext i1 @_ZN9courgette12SourceStream4SkipEm(%"class.courgette::SourceStream"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN9courgette12SourceStream18ReadVarint32SignedEPi(%"class.courgette::SourceStream"*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN9courgette15SourceStreamSetD1Ev(%"class.courgette::SourceStreamSet"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6bsdiff16ApplyBinaryPatchEPN9courgette12SourceStreamES2_PNS0_10SinkStreamE(%"class.courgette::SourceStream"* nocapture readonly, %"class.courgette::SourceStream"*, %"class.courgette::SinkStream"*) local_unnamed_addr #0 {
  %4 = alloca %"struct.bsdiff::MBSPatchHeader_", align 4
  %5 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %4, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %4, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %4, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -86, i64 20, i1 false)
  %9 = call zeroext i1 @_ZN9courgette12SourceStream4ReadEPvm(%"class.courgette::SourceStream"* %1, i8* nonnull %5, i64 8) #5
  br i1 %9, label %10, label %36

10:                                               ; preds = %3
  %11 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %1, i32* %6) #5
  br i1 %11, label %12, label %36

12:                                               ; preds = %10
  %13 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %1, i32* %7) #5
  br i1 %13, label %14, label %36

14:                                               ; preds = %12
  %15 = call zeroext i1 @_ZN9courgette12SourceStream12ReadVarint32EPj(%"class.courgette::SourceStream"* %1, i32* %8) #5
  br i1 %15, label %16, label %36

16:                                               ; preds = %14
  %17 = call i32 @bcmp(i8* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = ptrtoint i8* %21 to i64
  %26 = sub i64 %24, %25
  %27 = load i32, i32* %6, align 4
  %28 = zext i32 %27 to i64
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %19
  %31 = call i32 @_ZN9courgette12CalculateCrcEPKhm(i8* %21, i64 %26) #5
  %32 = load i32, i32* %7, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = call i32 @_ZN6bsdiff14MBS_ApplyPatchEPKNS_15MBSPatchHeader_EPN9courgette12SourceStreamEPKhmPNS3_10SinkStreamE(%"struct.bsdiff::MBSPatchHeader_"* nonnull %4, %"class.courgette::SourceStream"* %1, i8* %21, i64 %26, %"class.courgette::SinkStream"* %2)
  br label %36

36:                                               ; preds = %16, %14, %12, %10, %3, %34, %19, %30
  %37 = phi i32 [ %35, %34 ], [ 4, %19 ], [ 2, %30 ], [ 4, %16 ], [ 3, %14 ], [ 3, %12 ], [ 3, %10 ], [ 3, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #5
  ret i32 %37
}

declare i32 @_ZN9courgette12CalculateCrcEPKhm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6bsdiff16ApplyBinaryPatchEN4base4FileES1_S1_(%"class.base::File"*, %"class.base::File"*, %"class.base::File"*) local_unnamed_addr #0 {
  %4 = alloca %"class.base::File", align 8
  %5 = alloca %"class.base::File", align 8
  %6 = alloca %"class.base::MemoryMappedFile", align 8
  %7 = alloca %"class.base::File", align 8
  %8 = alloca %"class.courgette::SourceStream", align 8
  %9 = alloca %"class.base::MemoryMappedFile", align 8
  %10 = alloca %"class.base::File", align 8
  %11 = alloca %"class.courgette::SourceStream", align 8
  %12 = alloca %"class.courgette::SinkStream", align 8
  %13 = bitcast %"class.base::MemoryMappedFile"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 72, i1 false)
  call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* nonnull %6) #5
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %7, %"class.base::File"* dereferenceable(56) %0) #5
  %14 = bitcast %"class.base::File"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14)
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %5, %"class.base::File"* nonnull dereferenceable(56) %7) #5
  %15 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"* nonnull %6, %"class.base::File"* nonnull %5, i32 0) #5
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %7) #5
  br i1 %15, label %16, label %67

16:                                               ; preds = %3
  %17 = bitcast %"class.courgette::SourceStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #5
  %18 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %8, i64 0, i32 0
  %19 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %8, i64 0, i32 1
  %20 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %8, i64 0, i32 2
  %21 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %6, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %6, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  store i8* %22, i8** %18, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  store i8* %25, i8** %19, align 8
  %26 = ptrtoint i8* %22 to i64
  %27 = bitcast i8** %20 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.base::MemoryMappedFile"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 72, i1 false)
  call void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"* nonnull %9) #5
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %10, %"class.base::File"* dereferenceable(56) %1) #5
  %29 = bitcast %"class.base::File"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29)
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %4, %"class.base::File"* nonnull dereferenceable(56) %10) #5
  %30 = call zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"* nonnull %9, %"class.base::File"* nonnull %4, i32 0) #5
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %29)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %10) #5
  br i1 %30, label %31, label %65

31:                                               ; preds = %16
  %32 = bitcast %"class.courgette::SourceStream"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %11, i64 0, i32 0
  %34 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %11, i64 0, i32 1
  %35 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %11, i64 0, i32 2
  %36 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %9, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.base::MemoryMappedFile", %"class.base::MemoryMappedFile"* %9, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  store i8* %37, i8** %33, align 8
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  store i8* %40, i8** %34, align 8
  %41 = ptrtoint i8* %37 to i64
  %42 = bitcast i8** %35 to i64*
  store i64 %41, i64* %42, align 8
  %43 = bitcast %"class.courgette::SinkStream"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #5
  %44 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %12, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %12, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %12, i64 0, i32 0, i32 3, i32 0
  %47 = bitcast i8* %46 to i64*
  store i64 -6148914691236517206, i64* %47, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #5
  %48 = call i32 @_ZN6bsdiff16ApplyBinaryPatchEPN9courgette12SourceStreamES2_PNS0_10SinkStreamE(%"class.courgette::SourceStream"* nonnull %8, %"class.courgette::SourceStream"* nonnull %11, %"class.courgette::SinkStream"* nonnull %12)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %31
  %51 = load i8*, i8** %44, align 8
  %52 = load i64, i64* %45, align 8
  %53 = trunc i64 %52 to i32
  %54 = call i32 @_ZN4base4File5WriteElPKci(%"class.base::File"* %2, i64 0, i8* %51, i32 %53) #5
  %55 = load i64, i64* %45, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %54, %56
  %58 = select i1 %57, i32 0, i32 5
  br label %59

59:                                               ; preds = %31, %50
  %60 = phi i32 [ %58, %50 ], [ %48, %31 ]
  %61 = load i8*, i8** %44, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @free(i8* nonnull %61) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #5
  br label %64

64:                                               ; preds = %59, %63
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #5
  br label %65

65:                                               ; preds = %16, %64
  %66 = phi i32 [ %60, %64 ], [ 3, %16 ]
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #5
  br label %67

67:                                               ; preds = %3, %65
  %68 = phi i32 [ %66, %65 ], [ 3, %3 ]
  call void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #5
  ret i32 %68
}

declare void @_ZN4base16MemoryMappedFileC1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #1

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #3

declare i32 @_ZN4base4File5WriteElPKci(%"class.base::File"*, i64, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base16MemoryMappedFileD1Ev(%"class.base::MemoryMappedFile"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6bsdiff16ApplyBinaryPatchERKN4base8FilePathES3_S3_(%"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.base::File", align 8
  %5 = alloca %"class.base::File", align 8
  %6 = alloca %"class.base::File", align 8
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %4, %"class.base::FilePath"* dereferenceable(24) %0, i32 32801) #5
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %5, %"class.base::FilePath"* dereferenceable(24) %1, i32 32801) #5
  call void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"* nonnull %6, %"class.base::FilePath"* dereferenceable(24) %2, i32 33352) #5
  %7 = call i32 @_ZN6bsdiff16ApplyBinaryPatchEN4base4FileES1_S1_(%"class.base::File"* nonnull %4, %"class.base::File"* nonnull %5, %"class.base::File"* nonnull %6)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %6) #5
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %5) #5
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #5
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = call zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %2) #5
  br label %11

11:                                               ; preds = %3, %9
  ret i32 %7
}

declare void @_ZN4base4FileC1ERKNS_8FilePathEj(%"class.base::File"*, %"class.base::FilePath"* dereferenceable(24), i32) unnamed_addr #1

declare zeroext i1 @_ZN4base10DeleteFileERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64, i8**) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare zeroext i1 @_ZN4base16MemoryMappedFile10InitializeENS_4FileENS0_6AccessE(%"class.base::MemoryMappedFile"*, %"class.base::File"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
