; ModuleID = '../../native_client/src/trusted/debug_stub/packet.cc'
source_filename = "../../native_client/src/trusted/debug_stub/packet.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.gdb_rsp::Packet" = type { i32, %"class.std::__1::vector", i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm = comdat any

@.str = private unnamed_addr constant [36 x i8] c"Unexpected RLE at start of packet.\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Unexpected EoP during RLE.\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Unexpected RLE length.\0A\00", align 1

@_ZN7gdb_rsp6PacketC1Ev = hidden unnamed_addr alias void (%"class.gdb_rsp::Packet"*), void (%"class.gdb_rsp::Packet"*)* @_ZN7gdb_rsp6PacketC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6PacketC2Ev(%"class.gdb_rsp::Packet"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 0, i64* %6, align 8
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %2, i64 64) #11
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %10 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet5ClearEv(%"class.gdb_rsp::Packet"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 %4, i64* %6, align 8
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %2, i64 64) #11
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7gdb_rsp6Packet6RewindEv(%"class.gdb_rsp::Packet"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7gdb_rsp6Packet11EndOfPacketEv(%"class.gdb_rsp::Packet"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp uge i64 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet10AddRawCharEc(%"class.gdb_rsp::Packet"*, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 1
  %13 = icmp ugt i64 %9, %12
  %14 = inttoptr i64 %8 to i8*
  br i1 %13, label %25, label %15

15:                                               ; preds = %2
  %16 = icmp ult i64 %9, -64
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %3, i64 64) #11
  %18 = load i64, i64* %10, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %18, 1
  br label %25

22:                                               ; preds = %15
  %23 = add nsw i64 %9, 64
  %24 = getelementptr inbounds i8, i8* %14, i64 %23
  store i8* %24, i8** %4, align 8
  br label %25

25:                                               ; preds = %22, %17, %2
  %26 = phi i64 [ %12, %22 ], [ %21, %17 ], [ %12, %2 ]
  %27 = phi i8* [ %14, %22 ], [ %20, %17 ], [ %14, %2 ]
  %28 = phi i64 [ %11, %22 ], [ %18, %17 ], [ %11, %2 ]
  store i64 %26, i64* %10, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8 %1, i8* %30, align 1
  %31 = load i64, i64* %10, align 8
  %32 = load i8*, i8** %29, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  store i8 0, i8* %33, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 -86, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %5 = zext i8 %1 to i32
  %6 = lshr i32 %5, 4
  %7 = call zeroext i1 @_ZN7gdb_rsp11IntToNibbleEiPc(i32 %6, i8* nonnull %3) #11
  %8 = and i32 %5, 15
  %9 = call zeroext i1 @_ZN7gdb_rsp11IntToNibbleEiPc(i32 %8, i8* nonnull %4) #11
  %10 = load i8, i8* %3, align 1
  %11 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  %21 = icmp ugt i64 %17, %20
  %22 = inttoptr i64 %16 to i8*
  br i1 %21, label %33, label %23

23:                                               ; preds = %2
  %24 = icmp ult i64 %17, -64
  br i1 %24, label %25, label %30

25:                                               ; preds = %23
  call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %11, i64 64) #11
  %26 = load i64, i64* %18, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = add i64 %26, 1
  br label %33

30:                                               ; preds = %23
  %31 = add nsw i64 %17, 64
  %32 = getelementptr inbounds i8, i8* %22, i64 %31
  store i8* %32, i8** %12, align 8
  br label %33

33:                                               ; preds = %2, %25, %30
  %34 = phi i64 [ %20, %30 ], [ %29, %25 ], [ %20, %2 ]
  %35 = phi i8* [ %22, %30 ], [ %28, %25 ], [ %22, %2 ]
  %36 = phi i64 [ %19, %30 ], [ %26, %25 ], [ %19, %2 ]
  store i64 %34, i64* %18, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8 %10, i8* %38, align 1
  %39 = load i64, i64* %18, align 8
  %40 = load i8*, i8** %37, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %39
  store i8 0, i8* %41, align 1
  %42 = load i8, i8* %4, align 1
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = load i64, i64* %18, align 8
  %47 = add i64 %46, 1
  %48 = icmp ugt i64 %45, %47
  %49 = inttoptr i64 %44 to i8*
  br i1 %48, label %59, label %50

50:                                               ; preds = %33
  %51 = icmp ult i64 %45, -64
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %11, i64 64) #11
  %53 = load i64, i64* %18, align 8
  %54 = load i8*, i8** %37, align 8
  %55 = add i64 %53, 1
  br label %59

56:                                               ; preds = %50
  %57 = add nsw i64 %45, 64
  %58 = getelementptr inbounds i8, i8* %49, i64 %57
  store i8* %58, i8** %12, align 8
  br label %59

59:                                               ; preds = %33, %52, %56
  %60 = phi i64 [ %47, %56 ], [ %55, %52 ], [ %47, %33 ]
  %61 = phi i8* [ %49, %56 ], [ %54, %52 ], [ %49, %33 ]
  %62 = phi i64 [ %46, %56 ], [ %53, %52 ], [ %46, %33 ]
  store i64 %60, i64* %18, align 8
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  store i8 %42, i8* %63, align 1
  %64 = load i64, i64* %18, align 8
  %65 = load i8*, i8** %37, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %64
  store i8 0, i8* %66, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN7gdb_rsp11IntToNibbleEiPc(i32, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet8AddBlockEPKvj(%"class.gdb_rsp::Packet"*, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = zext i32 %2 to i64
  br label %8

7:                                                ; preds = %8, %3
  ret void

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %12, %8 ]
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  %11 = load i8, i8* %10, align 1
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %11)
  %12 = add nuw nsw i64 %9, 1
  %13 = icmp eq i64 %12, %6
  br i1 %13, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet9AddWord16Et(%"class.gdb_rsp::Packet"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = trunc i16 %1 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %3) #11
  %4 = lshr i16 %1, 8
  %5 = trunc i16 %4 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet9AddWord32Ej(%"class.gdb_rsp::Packet"*, i32) local_unnamed_addr #0 align 2 {
  %3 = trunc i32 %1 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %3) #11
  %4 = lshr i32 %1, 8
  %5 = trunc i32 %4 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %5) #11
  %6 = lshr i32 %1, 16
  %7 = trunc i32 %6 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %7) #11
  %8 = lshr i32 %1, 24
  %9 = trunc i32 %8 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet9AddWord64Em(%"class.gdb_rsp::Packet"*, i64) local_unnamed_addr #0 align 2 {
  %3 = trunc i64 %1 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %3) #11
  %4 = lshr i64 %1, 8
  %5 = trunc i64 %4 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %5) #11
  %6 = lshr i64 %1, 16
  %7 = trunc i64 %6 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %7) #11
  %8 = lshr i64 %1, 24
  %9 = trunc i64 %8 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %9) #11
  %10 = lshr i64 %1, 32
  %11 = trunc i64 %10 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %11) #11
  %12 = lshr i64 %1, 40
  %13 = trunc i64 %12 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %13) #11
  %14 = lshr i64 %1, 48
  %15 = trunc i64 %14 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %15) #11
  %16 = lshr i64 %1, 56
  %17 = trunc i64 %16 to i8
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet9AddStringEPKc(%"class.gdb_rsp::Packet"*, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %42, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = bitcast %"class.std::__1::vector"* %6 to i64*
  %10 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %5, %31
  %13 = phi i8 [ %3, %5 ], [ %40, %31 ]
  %14 = phi i8* [ %1, %5 ], [ %39, %31 ]
  %15 = load i64, i64* %8, align 8
  %16 = load i64, i64* %9, align 8
  %17 = sub i64 %15, %16
  %18 = load i64, i64* %10, align 8
  %19 = add i64 %18, 1
  %20 = icmp ugt i64 %17, %19
  %21 = inttoptr i64 %16 to i8*
  br i1 %20, label %31, label %22

22:                                               ; preds = %12
  %23 = icmp ult i64 %17, -64
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %6, i64 64) #11
  %25 = load i64, i64* %10, align 8
  %26 = load i8*, i8** %11, align 8
  %27 = add i64 %25, 1
  br label %31

28:                                               ; preds = %22
  %29 = add nsw i64 %17, 64
  %30 = getelementptr inbounds i8, i8* %21, i64 %29
  store i8* %30, i8** %7, align 8
  br label %31

31:                                               ; preds = %12, %24, %28
  %32 = phi i64 [ %19, %28 ], [ %27, %24 ], [ %19, %12 ]
  %33 = phi i8* [ %21, %28 ], [ %26, %24 ], [ %21, %12 ]
  %34 = phi i64 [ %18, %28 ], [ %25, %24 ], [ %18, %12 ]
  store i64 %32, i64* %10, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  store i8 %13, i8* %35, align 1
  %36 = load i64, i64* %10, align 8
  %37 = load i8*, i8** %11, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds i8, i8* %14, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %12

42:                                               ; preds = %31, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet14AddEscapedDataEPKcm(%"class.gdb_rsp::Packet"*, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %167, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = bitcast %"class.std::__1::vector"* %6 to i64*
  %10 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %5, %163
  %13 = phi i64 [ %2, %5 ], [ %165, %163 ]
  %14 = phi i8* [ %1, %5 ], [ %164, %163 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %63 [
    i8 125, label %16
    i8 35, label %16
    i8 36, label %16
    i8 42, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12
  %17 = load i64, i64* %8, align 8
  %18 = load i64, i64* %9, align 8
  %19 = sub i64 %17, %18
  %20 = load i64, i64* %10, align 8
  %21 = add i64 %20, 1
  %22 = icmp ugt i64 %19, %21
  %23 = inttoptr i64 %18 to i8*
  br i1 %22, label %33, label %24

24:                                               ; preds = %16
  %25 = icmp ult i64 %19, -64
  br i1 %25, label %26, label %30

26:                                               ; preds = %24
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %6, i64 64) #11
  %27 = load i64, i64* %10, align 8
  %28 = load i8*, i8** %11, align 8
  %29 = add i64 %27, 1
  br label %33

30:                                               ; preds = %24
  %31 = add nsw i64 %19, 64
  %32 = getelementptr inbounds i8, i8* %23, i64 %31
  store i8* %32, i8** %7, align 8
  br label %33

33:                                               ; preds = %16, %26, %30
  %34 = phi i64 [ %21, %30 ], [ %29, %26 ], [ %21, %16 ]
  %35 = phi i8* [ %23, %30 ], [ %28, %26 ], [ %23, %16 ]
  %36 = phi i64 [ %20, %30 ], [ %27, %26 ], [ %20, %16 ]
  store i64 %34, i64* %10, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8 125, i8* %37, align 1
  %38 = load i64, i64* %10, align 8
  %39 = load i8*, i8** %11, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %38
  store i8 0, i8* %40, align 1
  %41 = xor i8 %15, 32
  %42 = load i64, i64* %8, align 8
  %43 = load i64, i64* %9, align 8
  %44 = sub i64 %42, %43
  %45 = load i64, i64* %10, align 8
  %46 = add i64 %45, 1
  %47 = icmp ugt i64 %44, %46
  %48 = inttoptr i64 %43 to i8*
  br i1 %47, label %58, label %49

49:                                               ; preds = %33
  %50 = icmp ult i64 %44, -64
  br i1 %50, label %51, label %55

51:                                               ; preds = %49
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %6, i64 64) #11
  %52 = load i64, i64* %10, align 8
  %53 = load i8*, i8** %11, align 8
  %54 = add i64 %52, 1
  br label %58

55:                                               ; preds = %49
  %56 = add nsw i64 %44, 64
  %57 = getelementptr inbounds i8, i8* %48, i64 %56
  store i8* %57, i8** %7, align 8
  br label %58

58:                                               ; preds = %33, %51, %55
  %59 = phi i64 [ %46, %55 ], [ %54, %51 ], [ %46, %33 ]
  %60 = phi i8* [ %48, %55 ], [ %53, %51 ], [ %48, %33 ]
  %61 = phi i64 [ %45, %55 ], [ %52, %51 ], [ %45, %33 ]
  store i64 %59, i64* %10, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  br label %85

63:                                               ; preds = %12
  %64 = load i64, i64* %8, align 8
  %65 = load i64, i64* %9, align 8
  %66 = sub i64 %64, %65
  %67 = load i64, i64* %10, align 8
  %68 = add i64 %67, 1
  %69 = icmp ugt i64 %66, %68
  %70 = inttoptr i64 %65 to i8*
  br i1 %69, label %80, label %71

71:                                               ; preds = %63
  %72 = icmp ult i64 %66, -64
  br i1 %72, label %73, label %77

73:                                               ; preds = %71
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %6, i64 64) #11
  %74 = load i64, i64* %10, align 8
  %75 = load i8*, i8** %11, align 8
  %76 = add i64 %74, 1
  br label %80

77:                                               ; preds = %71
  %78 = add nsw i64 %66, 64
  %79 = getelementptr inbounds i8, i8* %70, i64 %78
  store i8* %79, i8** %7, align 8
  br label %80

80:                                               ; preds = %63, %73, %77
  %81 = phi i64 [ %68, %77 ], [ %76, %73 ], [ %68, %63 ]
  %82 = phi i8* [ %70, %77 ], [ %75, %73 ], [ %70, %63 ]
  %83 = phi i64 [ %67, %77 ], [ %74, %73 ], [ %67, %63 ]
  store i64 %81, i64* %10, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  br label %85

85:                                               ; preds = %80, %58
  %86 = phi i8* [ %84, %80 ], [ %62, %58 ]
  %87 = phi i8 [ %15, %80 ], [ %41, %58 ]
  store i8 %87, i8* %86, align 1
  %88 = load i64, i64* %10, align 8
  %89 = load i8*, i8** %11, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %88
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %14, i64 1
  %92 = add i64 %13, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %167, label %94

94:                                               ; preds = %85, %99
  %95 = phi i64 [ %100, %99 ], [ 0, %85 ]
  %96 = getelementptr inbounds i8, i8* %91, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, %15
  br i1 %98, label %99, label %104

99:                                               ; preds = %94
  %100 = add nuw nsw i64 %95, 1
  %101 = icmp ult i64 %100, 97
  %102 = icmp ugt i64 %92, %100
  %103 = and i1 %101, %102
  br i1 %103, label %94, label %104

104:                                              ; preds = %94, %99
  %105 = phi i64 [ %95, %94 ], [ %100, %99 ]
  %106 = icmp ugt i64 %105, 2
  br i1 %106, label %107, label %163

107:                                              ; preds = %104
  %108 = or i64 %105, 1
  %109 = icmp eq i64 %108, 7
  %110 = select i1 %109, i64 5, i64 %105
  %111 = load i64, i64* %8, align 8
  %112 = load i64, i64* %9, align 8
  %113 = sub i64 %111, %112
  %114 = load i64, i64* %10, align 8
  %115 = add i64 %114, 1
  %116 = icmp ugt i64 %113, %115
  %117 = inttoptr i64 %112 to i8*
  br i1 %116, label %127, label %118

118:                                              ; preds = %107
  %119 = icmp ult i64 %113, -64
  br i1 %119, label %120, label %124

120:                                              ; preds = %118
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %6, i64 64) #11
  %121 = load i64, i64* %10, align 8
  %122 = load i8*, i8** %11, align 8
  %123 = add i64 %121, 1
  br label %127

124:                                              ; preds = %118
  %125 = add nsw i64 %113, 64
  %126 = getelementptr inbounds i8, i8* %117, i64 %125
  store i8* %126, i8** %7, align 8
  br label %127

127:                                              ; preds = %107, %120, %124
  %128 = phi i64 [ %115, %124 ], [ %123, %120 ], [ %115, %107 ]
  %129 = phi i8* [ %117, %124 ], [ %122, %120 ], [ %117, %107 ]
  %130 = phi i64 [ %114, %124 ], [ %121, %120 ], [ %114, %107 ]
  store i64 %128, i64* %10, align 8
  %131 = getelementptr inbounds i8, i8* %129, i64 %130
  store i8 42, i8* %131, align 1
  %132 = load i64, i64* %10, align 8
  %133 = load i8*, i8** %11, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 %132
  store i8 0, i8* %134, align 1
  %135 = trunc i64 %110 to i8
  %136 = add nuw nsw i8 %135, 29
  %137 = load i64, i64* %8, align 8
  %138 = load i64, i64* %9, align 8
  %139 = sub i64 %137, %138
  %140 = load i64, i64* %10, align 8
  %141 = add i64 %140, 1
  %142 = icmp ugt i64 %139, %141
  %143 = inttoptr i64 %138 to i8*
  br i1 %142, label %153, label %144

144:                                              ; preds = %127
  %145 = icmp ult i64 %139, -64
  br i1 %145, label %146, label %150

146:                                              ; preds = %144
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %6, i64 64) #11
  %147 = load i64, i64* %10, align 8
  %148 = load i8*, i8** %11, align 8
  %149 = add i64 %147, 1
  br label %153

150:                                              ; preds = %144
  %151 = add nsw i64 %139, 64
  %152 = getelementptr inbounds i8, i8* %143, i64 %151
  store i8* %152, i8** %7, align 8
  br label %153

153:                                              ; preds = %127, %146, %150
  %154 = phi i64 [ %141, %150 ], [ %149, %146 ], [ %141, %127 ]
  %155 = phi i8* [ %143, %150 ], [ %148, %146 ], [ %143, %127 ]
  %156 = phi i64 [ %140, %150 ], [ %147, %146 ], [ %140, %127 ]
  store i64 %154, i64* %10, align 8
  %157 = getelementptr inbounds i8, i8* %155, i64 %156
  store i8 %136, i8* %157, align 1
  %158 = load i64, i64* %10, align 8
  %159 = load i8*, i8** %11, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 %158
  store i8 0, i8* %160, align 1
  %161 = getelementptr inbounds i8, i8* %91, i64 %110
  %162 = sub i64 %92, %110
  br label %163

163:                                              ; preds = %153, %104
  %164 = phi i8* [ %161, %153 ], [ %91, %104 ]
  %165 = phi i64 [ %162, %153 ], [ %92, %104 ]
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %12

167:                                              ; preds = %85, %163, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet12AddHexStringEPKc(%"class.gdb_rsp::Packet"*, i8* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* %1, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %9, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %2 ]
  tail call void @_ZN7gdb_rsp6Packet8AddWord8Eh(%"class.gdb_rsp::Packet"* %0, i8 zeroext %6)
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet12AddNumberSepEmc(%"class.gdb_rsp::Packet"*, i64, i8 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca [16 x i8], align 16
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = icmp eq i64 %1, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 16, i1 false)
  br i1 %6, label %7, label %63

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  %18 = icmp ugt i64 %14, %17
  %19 = inttoptr i64 %13 to i8*
  br i1 %18, label %30, label %20

20:                                               ; preds = %7
  %21 = icmp ult i64 %14, -64
  br i1 %21, label %22, label %27

22:                                               ; preds = %20
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %8, i64 64) #11
  %23 = load i64, i64* %15, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %23, 1
  br label %30

27:                                               ; preds = %20
  %28 = add nsw i64 %14, 64
  %29 = getelementptr inbounds i8, i8* %19, i64 %28
  store i8* %29, i8** %9, align 8
  br label %30

30:                                               ; preds = %7, %22, %27
  %31 = phi i64 [ %17, %27 ], [ %26, %22 ], [ %17, %7 ]
  %32 = phi i8* [ %19, %27 ], [ %25, %22 ], [ %19, %7 ]
  %33 = phi i64 [ %16, %27 ], [ %23, %22 ], [ %16, %7 ]
  store i64 %31, i64* %15, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds i8, i8* %32, i64 %33
  store i8 45, i8* %35, align 1
  %36 = load i64, i64* %15, align 8
  %37 = load i8*, i8** %34, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  store i8 0, i8* %38, align 1
  %39 = load i64, i64* %10, align 8
  %40 = load i64, i64* %12, align 8
  %41 = sub i64 %39, %40
  %42 = load i64, i64* %15, align 8
  %43 = add i64 %42, 1
  %44 = icmp ugt i64 %41, %43
  %45 = inttoptr i64 %40 to i8*
  br i1 %44, label %55, label %46

46:                                               ; preds = %30
  %47 = icmp ult i64 %41, -64
  br i1 %47, label %48, label %52

48:                                               ; preds = %46
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %8, i64 64) #11
  %49 = load i64, i64* %15, align 8
  %50 = load i8*, i8** %34, align 8
  %51 = add i64 %49, 1
  br label %55

52:                                               ; preds = %46
  %53 = add nsw i64 %41, 64
  %54 = getelementptr inbounds i8, i8* %45, i64 %53
  store i8* %54, i8** %9, align 8
  br label %55

55:                                               ; preds = %30, %48, %52
  %56 = phi i64 [ %43, %52 ], [ %51, %48 ], [ %43, %30 ]
  %57 = phi i8* [ %45, %52 ], [ %50, %48 ], [ %45, %30 ]
  %58 = phi i64 [ %42, %52 ], [ %49, %48 ], [ %42, %30 ]
  store i64 %56, i64* %15, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  store i8 49, i8* %59, align 1
  %60 = load i64, i64* %15, align 8
  %61 = load i8*, i8** %34, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %62, align 1
  br label %128

63:                                               ; preds = %3, %63
  %64 = phi i64 [ %74, %63 ], [ 0, %3 ]
  %65 = phi i64 [ %77, %63 ], [ %1, %3 ]
  %66 = phi i64 [ %79, %63 ], [ 0, %3 ]
  %67 = trunc i64 %65 to i32
  %68 = and i32 %67, 15
  %69 = or i64 %64, 1
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 %64
  %71 = call zeroext i1 @_ZN7gdb_rsp11IntToNibbleEiPc(i32 %68, i8* %70) #11
  %72 = lshr i32 %67, 4
  %73 = and i32 %72, 15
  %74 = add nuw nsw i64 %64, 2
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 %69
  %76 = call zeroext i1 @_ZN7gdb_rsp11IntToNibbleEiPc(i32 %73, i8* %75) #11
  %77 = lshr i64 %65, 8
  %78 = icmp ne i64 %77, 0
  %79 = add nuw nsw i64 %66, 1
  %80 = icmp ult i64 %79, 8
  %81 = and i1 %78, %80
  br i1 %81, label %63, label %82

82:                                               ; preds = %63
  %83 = trunc i64 %74 to i32
  %84 = trunc i64 %64 to i32
  %85 = or i32 %84, 1
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 48
  %90 = select i1 %89, i32 %85, i32 %83
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %93 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %94 = bitcast i8** %93 to i64*
  %95 = bitcast %"class.std::__1::vector"* %92 to i64*
  %96 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %92, i64 0, i32 0, i32 0
  br label %98

98:                                               ; preds = %82, %119
  %99 = phi i64 [ %91, %82 ], [ %100, %119 ]
  %100 = add nsw i64 %99, -1
  %101 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = load i64, i64* %94, align 8
  %104 = load i64, i64* %95, align 8
  %105 = sub i64 %103, %104
  %106 = load i64, i64* %96, align 8
  %107 = add i64 %106, 1
  %108 = icmp ugt i64 %105, %107
  %109 = inttoptr i64 %104 to i8*
  br i1 %108, label %119, label %110

110:                                              ; preds = %98
  %111 = icmp ult i64 %105, -64
  br i1 %111, label %112, label %116

112:                                              ; preds = %110
  call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %92, i64 64) #11
  %113 = load i64, i64* %96, align 8
  %114 = load i8*, i8** %97, align 8
  %115 = add i64 %113, 1
  br label %119

116:                                              ; preds = %110
  %117 = add nsw i64 %105, 64
  %118 = getelementptr inbounds i8, i8* %109, i64 %117
  store i8* %118, i8** %93, align 8
  br label %119

119:                                              ; preds = %98, %112, %116
  %120 = phi i64 [ %107, %116 ], [ %115, %112 ], [ %107, %98 ]
  %121 = phi i8* [ %109, %116 ], [ %114, %112 ], [ %109, %98 ]
  %122 = phi i64 [ %106, %116 ], [ %113, %112 ], [ %106, %98 ]
  store i64 %120, i64* %96, align 8
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  store i8 %102, i8* %123, align 1
  %124 = load i64, i64* %96, align 8
  %125 = load i8*, i8** %97, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 %124
  store i8 0, i8* %126, align 1
  %127 = icmp eq i64 %100, 0
  br i1 %127, label %128, label %98

128:                                              ; preds = %119, %55
  %129 = icmp eq i8 %2, 0
  br i1 %129, label %162, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %132 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %133 = bitcast i8** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.std::__1::vector"* %131 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %134, %136
  %138 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %139, 1
  %141 = icmp ugt i64 %137, %140
  %142 = inttoptr i64 %136 to i8*
  br i1 %141, label %153, label %143

143:                                              ; preds = %130
  %144 = icmp ult i64 %137, -64
  br i1 %144, label %145, label %150

145:                                              ; preds = %143
  call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %131, i64 64) #11
  %146 = load i64, i64* %138, align 8
  %147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = add i64 %146, 1
  br label %153

150:                                              ; preds = %143
  %151 = add nsw i64 %137, 64
  %152 = getelementptr inbounds i8, i8* %142, i64 %151
  store i8* %152, i8** %132, align 8
  br label %153

153:                                              ; preds = %130, %145, %150
  %154 = phi i64 [ %140, %150 ], [ %149, %145 ], [ %140, %130 ]
  %155 = phi i8* [ %142, %150 ], [ %148, %145 ], [ %142, %130 ]
  %156 = phi i64 [ %139, %150 ], [ %146, %145 ], [ %139, %130 ]
  store i64 %154, i64* %138, align 8
  %157 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %131, i64 0, i32 0, i32 0
  %158 = getelementptr inbounds i8, i8* %155, i64 %156
  store i8 %2, i8* %158, align 1
  %159 = load i64, i64* %138, align 8
  %160 = load i8*, i8** %157, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 %159
  store i8 0, i8* %161, align 1
  br label %162

162:                                              ; preds = %128, %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet12GetNumberSepEPmPc(%"class.gdb_rsp::Packet"*, i64* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %6 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  br i1 %6, label %7, label %40

7:                                                ; preds = %3
  %8 = load i8, i8* %4, align 1
  %9 = icmp eq i8 %8, 45
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %5, align 4
  %12 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %8, i32* nonnull %5) #11
  br i1 %12, label %25, label %23

13:                                               ; preds = %7
  %14 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  %15 = load i8, i8* %4, align 1
  %16 = icmp eq i8 %15, 49
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %40

18:                                               ; preds = %13
  store i64 -1, i64* %1, align 8
  store i8 0, i8* %4, align 1
  %19 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  %20 = icmp eq i8* %2, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %18
  %22 = load i8, i8* %4, align 1
  store i8 %22, i8* %2, align 1
  br label %40

23:                                               ; preds = %32, %10
  %24 = phi i64 [ 0, %10 ], [ %30, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  br label %35

25:                                               ; preds = %10, %32
  %26 = phi i64 [ %30, %32 ], [ 0, %10 ]
  %27 = shl i64 %26, 4
  %28 = load i32, i32* %5, align 4
  %29 = sext i32 %28 to i64
  %30 = add i64 %27, %29
  store i8 0, i8* %4, align 1
  %31 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = load i8, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %5, align 4
  %34 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %33, i32* nonnull %5) #11
  br i1 %34, label %25, label %23

35:                                               ; preds = %25, %23
  %36 = phi i64 [ %24, %23 ], [ %30, %25 ]
  store i64 %36, i64* %1, align 8
  %37 = icmp eq i8* %2, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = load i8, i8* %4, align 1
  store i8 %39, i8* %2, align 1
  br label %40

40:                                               ; preds = %38, %35, %21, %18, %13, %3
  %41 = phi i1 [ false, %3 ], [ false, %13 ], [ true, %18 ], [ true, %21 ], [ true, %35 ], [ true, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %78

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1
  %10 = add nuw i64 %4, 1
  store i64 %10, i64* %3, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %4
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %1, align 1
  %15 = icmp eq i8 %14, 42
  br i1 %15, label %16, label %78

16:                                               ; preds = %8
  %17 = load i64, i64* %3, align 8
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #11
  br label %78

20:                                               ; preds = %16
  %21 = load i64, i64* %5, align 8
  %22 = icmp ult i64 %17, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %78

24:                                               ; preds = %20
  %25 = load i8*, i8** %11, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = add nsw i32 %28, -28
  %30 = icmp slt i32 %29, 3
  br i1 %30, label %31, label %32

31:                                               ; preds = %24
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %78

32:                                               ; preds = %24
  %33 = ptrtoint i8* %25 to i64
  %34 = sext i32 %29 to i64
  %35 = add i64 %21, -2
  %36 = add i64 %35, %34
  %37 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector"* %9 to i64*
  %41 = sub i64 %39, %33
  %42 = icmp ugt i64 %36, %41
  br i1 %42, label %43, label %48

43:                                               ; preds = %32
  %44 = sub i64 %36, %41
  tail call void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"* %9, i64 %44) #11
  %45 = load i64, i64* %3, align 8
  %46 = load i8*, i8** %11, align 8
  %47 = load i64, i64* %5, align 8
  br label %52

48:                                               ; preds = %32
  %49 = icmp ult i64 %36, %41
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = getelementptr inbounds i8, i8* %25, i64 %36
  store i8* %51, i8** %37, align 8
  br label %52

52:                                               ; preds = %43, %48, %50
  %53 = phi i64 [ %47, %43 ], [ %21, %48 ], [ %21, %50 ]
  %54 = phi i8* [ %46, %43 ], [ %25, %48 ], [ %25, %50 ]
  %55 = phi i64 [ %45, %43 ], [ %17, %48 ], [ %17, %50 ]
  %56 = add nsw i64 %34, -3
  %57 = add i64 %56, %55
  %58 = getelementptr inbounds i8, i8* %54, i64 %57
  %59 = getelementptr inbounds i8, i8* %54, i64 %55
  %60 = sub i64 %53, %55
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %59, i64 %60, i1 false)
  %61 = load i64, i64* %3, align 8
  %62 = add i64 %61, -2
  %63 = load i8*, i8** %11, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  %65 = load i8, i8* %64, align 1
  store i8 %65, i8* %1, align 1
  %66 = load i64, i64* %3, align 8
  %67 = add i64 %66, -1
  %68 = load i8*, i8** %11, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  %70 = add nsw i32 %28, -29
  %71 = sext i32 %70 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 %65, i64 %71, i1 false)
  %72 = load i64, i64* %38, align 8
  %73 = load i64, i64* %40, align 8
  %74 = xor i64 %73, -1
  %75 = add i64 %72, %74
  store i64 %75, i64* %5, align 8
  %76 = inttoptr i64 %73 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 %75
  store i8 0, i8* %77, align 1
  br label %78

78:                                               ; preds = %8, %52, %31, %2, %23, %19
  %79 = phi i1 [ false, %19 ], [ false, %23 ], [ false, %2 ], [ false, %31 ], [ true, %52 ], [ true, %8 ]
  ret i1 %79
}

declare zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext, i32*) local_unnamed_addr #4

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet8GetWord8EPh(%"class.gdb_rsp::Packet"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 -86, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %6, align 4
  %9 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %3)
  br i1 %9, label %10, label %24

10:                                               ; preds = %2
  %11 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  br i1 %11, label %12, label %24

12:                                               ; preds = %10
  %13 = load i8, i8* %3, align 1
  %14 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %13, i32* nonnull %5) #11
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = load i8, i8* %4, align 1
  %17 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %16, i32* nonnull %6) #11
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = load i32, i32* %5, align 4
  %20 = shl i32 %19, 4
  %21 = load i32, i32* %6, align 4
  %22 = add nsw i32 %20, %21
  %23 = trunc i32 %22 to i8
  store i8 %23, i8* %1, align 1
  br label %24

24:                                               ; preds = %15, %12, %10, %2, %18
  %25 = phi i1 [ true, %18 ], [ false, %2 ], [ false, %10 ], [ false, %12 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet8GetBlockEPvj(%"class.gdb_rsp::Packet"*, i8* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %34, label %9

9:                                                ; preds = %3
  %10 = bitcast i32* %6 to i8*
  %11 = bitcast i32* %7 to i8*
  %12 = zext i32 %2 to i64
  br label %13

13:                                               ; preds = %25, %9
  %14 = phi i64 [ 0, %9 ], [ %31, %25 ]
  %15 = getelementptr inbounds i8, i8* %1, i64 %14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 -86, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  store i32 -1431655766, i32* %7, align 4
  %16 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4) #11
  br i1 %16, label %17, label %33

17:                                               ; preds = %13
  %18 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %5) #11
  br i1 %18, label %19, label %33

19:                                               ; preds = %17
  %20 = load i8, i8* %4, align 1
  %21 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %20, i32* nonnull %6) #11
  br i1 %21, label %22, label %33

22:                                               ; preds = %19
  %23 = load i8, i8* %5, align 1
  %24 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %23, i32* nonnull %7) #11
  br i1 %24, label %25, label %33

25:                                               ; preds = %22
  %26 = load i32, i32* %6, align 4
  %27 = shl i32 %26, 4
  %28 = load i32, i32* %7, align 4
  %29 = add nsw i32 %27, %28
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %15, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %31 = add nuw nsw i64 %14, 1
  %32 = icmp eq i64 %31, %12
  br i1 %32, label %34, label %13

33:                                               ; preds = %13, %17, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br label %34

34:                                               ; preds = %25, %3, %33
  %35 = phi i1 [ false, %33 ], [ true, %3 ], [ true, %25 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet9GetWord16EPt(%"class.gdb_rsp::Packet"*, i16* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast i16* %1 to i8*
  %4 = tail call zeroext i1 @_ZN7gdb_rsp6Packet8GetBlockEPvj(%"class.gdb_rsp::Packet"* %0, i8* %3, i32 2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet9GetWord32EPj(%"class.gdb_rsp::Packet"*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast i32* %1 to i8*
  %4 = tail call zeroext i1 @_ZN7gdb_rsp6Packet8GetBlockEPvj(%"class.gdb_rsp::Packet"* %0, i8* %3, i32 4)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet9GetWord64EPm(%"class.gdb_rsp::Packet"*, i64* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast i64* %1 to i8*
  %4 = tail call zeroext i1 @_ZN7gdb_rsp6Packet8GetBlockEPvj(%"class.gdb_rsp::Packet"* %0, i8* %3, i32 8)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet9GetStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gdb_rsp::Packet"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %4, %6
  br i1 %7, label %8, label %41

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %4
  %12 = load i8, i8* %11, align 1
  %13 = tail call i1 @llvm.is.constant.i8(i8 %12) #11
  br i1 %13, label %14, label %37

14:                                               ; preds = %8
  %15 = tail call i64 @strlen(i8* %11) #11
  %16 = icmp ult i64 %15, 23
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  br label %29

26:                                               ; preds = %17
  %27 = trunc i64 %15 to i8
  store i8 %27, i8* %19, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %29

29:                                               ; preds = %26, %22
  %30 = phi i8* [ %25, %22 ], [ %28, %26 ]
  %31 = icmp eq i64 %15, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %11, i64 %15, i1 false) #11
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds i8, i8* %30, i64 %15
  store i8 0, i8* %34, align 1
  br label %39

35:                                               ; preds = %14
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %1, i8* %11, i64 %15) #11
  br label %39

37:                                               ; preds = %8
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %1, i8* %11) #11
  br label %39

39:                                               ; preds = %33, %35, %37
  %40 = load i64, i64* %5, align 8
  store i64 %40, i64* %3, align 8
  br label %41

41:                                               ; preds = %2, %39
  %42 = phi i1 [ true, %39 ], [ false, %2 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet12GetHexStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gdb_rsp::Packet"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 -86, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 -1431655766, i32* %5, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 -1431655766, i32* %6, align 4
  %9 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %45

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  br label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %24, align 1
  store i8 0, i8* %16, align 1
  br label %25

25:                                               ; preds = %19, %23
  %26 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %3)
  br i1 %26, label %27, label %45

27:                                               ; preds = %25, %38
  %28 = load i8, i8* %3, align 1
  %29 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %28, i32* nonnull %5) #11
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i64, i64* %9, align 8
  %32 = add i64 %31, -1
  store i64 %32, i64* %9, align 8
  br label %45

33:                                               ; preds = %27
  %34 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  br i1 %34, label %35, label %45

35:                                               ; preds = %33
  %36 = load i8, i8* %4, align 1
  %37 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %36, i32* nonnull %6) #11
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 4
  %40 = shl i32 %39, 4
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %40, %41
  %43 = trunc i32 %42 to i8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %1, i8 signext %43) #11
  %44 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %3)
  br i1 %44, label %27, label %45

45:                                               ; preds = %35, %33, %38, %25, %2, %30
  %46 = phi i1 [ false, %2 ], [ true, %30 ], [ true, %25 ], [ false, %35 ], [ false, %33 ], [ true, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7gdb_rsp6Packet12GetStringSepEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc(%"class.gdb_rsp::Packet"*, %"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %10, label %28

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %18, align 8
  br label %21

19:                                               ; preds = %10
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %20, align 1
  store i8 0, i8* %12, align 1
  br label %21

21:                                               ; preds = %15, %19
  %22 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  br i1 %22, label %23, label %28

23:                                               ; preds = %21, %26
  %24 = load i8, i8* %4, align 1
  %25 = icmp eq i8 %24, %2
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %1, i8 signext %24) #11
  %27 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %4)
  br i1 %27, label %23, label %28

28:                                               ; preds = %23, %26, %21, %3
  %29 = phi i1 [ false, %3 ], [ false, %21 ], [ true, %23 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  ret i1 %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK7gdb_rsp6Packet10GetPayloadEv(%"class.gdb_rsp::Packet"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7gdb_rsp6Packet14GetPayloadSizeEv(%"class.gdb_rsp::Packet"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7gdb_rsp6Packet11GetSequenceEPi(%"class.gdb_rsp::Packet"* nocapture readonly, i32* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %4, i32* %1, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7gdb_rsp6Packet13ParseSequenceEv(%"class.gdb_rsp::Packet"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 -86, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #11
  store i8 -86, i8* %2, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #11
  store i8 -86, i8* %3, align 1
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 -1431655766, i32* %4, align 4
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 -1431655766, i32* %5, align 4
  %11 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %2) #11
  br i1 %11, label %12, label %26

12:                                               ; preds = %1
  %13 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %3) #11
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = load i8, i8* %2, align 1
  %16 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %15, i32* nonnull %4) #11
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = load i8, i8* %3, align 1
  %19 = call zeroext i1 @_ZN7gdb_rsp11NibbleToIntEcPi(i8 signext %18, i32* nonnull %5) #11
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = load i32, i32* %4, align 4
  %22 = shl i32 %21, 4
  %23 = load i32, i32* %5, align 4
  %24 = add nsw i32 %22, %23
  %25 = and i32 %24, 255
  br label %26

26:                                               ; preds = %1, %12, %14, %17, %20
  %27 = phi i32 [ %25, %20 ], [ 170, %17 ], [ 170, %14 ], [ 170, %12 ], [ 170, %1 ]
  %28 = phi i1 [ true, %20 ], [ false, %17 ], [ false, %14 ], [ false, %12 ], [ false, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #11
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = call zeroext i1 @_ZN7gdb_rsp6Packet10GetRawCharEPc(%"class.gdb_rsp::Packet"* %0, i8* nonnull %6)
  %31 = load i8, i8* %6, align 1
  %32 = icmp eq i8 %31, 58
  %33 = and i1 %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 0
  store i32 %27, i32* %35, align 8
  br label %37

36:                                               ; preds = %29, %26
  store i64 %8, i64* %7, align 8
  br label %37

37:                                               ; preds = %36, %34
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7gdb_rsp6Packet11SetSequenceEi(%"class.gdb_rsp::Packet"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gdb_rsp::Packet", %"class.gdb_rsp::Packet"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIcNS_9allocatorIcEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #11
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #12
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #13
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #11
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #11
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #13
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
