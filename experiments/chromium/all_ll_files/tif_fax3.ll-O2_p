; ModuleID = '../../third_party/pdfium/third_party/libtiff/tif_fax3.c'
source_filename = "../../third_party/pdfium/third_party/libtiff/tif_fax3.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.tableentry = type { i16, i16, i16 }
%struct._TIFFField = type { i32, i16, i16, i32, i32, i32, i32, i16, i8, i8, i8*, %struct._TIFFFieldArray* }
%struct._TIFFFieldArray = type { i32, i32, i32, %struct._TIFFField* }
%struct.TIFFFaxTabEnt = type { i8, i8, i32 }
%struct.tiff = type { i8*, i32, i32, i32, i64, i64, i64*, i16, i16, %struct.TIFFDirectory, %struct.TIFFDirectory, %union.anon.0, i16, i32, i16, i32, i64, i64, i16, i64, i32, i32, i64, i32, i32 (%struct.tiff*)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32, i32 (%struct.tiff*, i16)*, i32 (%struct.tiff*)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, i32 (%struct.tiff*, i8*, i64, i16)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*)*, i32 (%struct.tiff*, i32)*, void (%struct.tiff*, i32*, i32*)*, i8*, i64, i64, i8*, i64, i64, i64, i8*, i64, i8*, i64, i32 (i8*, i8**, i64*)*, void (i8*, i8*, i64)*, i8*, i64 (i8*, i8*, i64)*, i64 (i8*, i8*, i64)*, i64 (i8*, i64, i32)*, i32 (i8*)*, i64 (i8*)*, void (%struct.tiff*, i8*, i64)*, %struct._TIFFField**, i64, %struct._TIFFField*, %struct.TIFFTagMethods, %struct.client_info*, %struct._TIFFFieldArray*, i64 }
%struct.TIFFDirectory = type { [4 x i64], i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, double*, double*, float, float, i16, i16, float, float, [2 x i16], [3 x i16*], [2 x i16], i16, i16*, i32, i32, i64*, i64*, i32, %struct.TIFFDirEntry, %struct.TIFFDirEntry, i16, i64*, [2 x i16], i16, [3 x i16*], float*, i32, i8*, i32, %struct.TIFFTagValue*, i8 }
%struct.TIFFDirEntry = type { i16, i16, i64, %union.anon, i8 }
%union.anon = type { i64 }
%struct.TIFFTagValue = type { %struct._TIFFField*, i32, i8* }
%union.anon.0 = type { %struct.TIFFHeaderBig }
%struct.TIFFHeaderBig = type { i16, i16, i16, i16, i64 }
%struct.TIFFTagMethods = type { i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.client_info = type { %struct.client_info*, i8*, i8* }
%struct.Fax3BaseState = type { i32, i32, i64, i32, i16, i32, i32, i32, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, void (%struct.tiff*, %struct._IO_FILE*, i64)* }
%struct.Fax3CodecState = type { %struct.Fax3BaseState, i8*, i32, i32, i32, void (i8*, i32*, i32*, i32)*, i32*, i32*, i32*, i32, i8*, i32, i32, i32 }

@TIFFFaxWhiteCodes = hidden constant [109 x %struct.tableentry] [%struct.tableentry { i16 8, i16 53, i16 0 }, %struct.tableentry { i16 6, i16 7, i16 1 }, %struct.tableentry { i16 4, i16 7, i16 2 }, %struct.tableentry { i16 4, i16 8, i16 3 }, %struct.tableentry { i16 4, i16 11, i16 4 }, %struct.tableentry { i16 4, i16 12, i16 5 }, %struct.tableentry { i16 4, i16 14, i16 6 }, %struct.tableentry { i16 4, i16 15, i16 7 }, %struct.tableentry { i16 5, i16 19, i16 8 }, %struct.tableentry { i16 5, i16 20, i16 9 }, %struct.tableentry { i16 5, i16 7, i16 10 }, %struct.tableentry { i16 5, i16 8, i16 11 }, %struct.tableentry { i16 6, i16 8, i16 12 }, %struct.tableentry { i16 6, i16 3, i16 13 }, %struct.tableentry { i16 6, i16 52, i16 14 }, %struct.tableentry { i16 6, i16 53, i16 15 }, %struct.tableentry { i16 6, i16 42, i16 16 }, %struct.tableentry { i16 6, i16 43, i16 17 }, %struct.tableentry { i16 7, i16 39, i16 18 }, %struct.tableentry { i16 7, i16 12, i16 19 }, %struct.tableentry { i16 7, i16 8, i16 20 }, %struct.tableentry { i16 7, i16 23, i16 21 }, %struct.tableentry { i16 7, i16 3, i16 22 }, %struct.tableentry { i16 7, i16 4, i16 23 }, %struct.tableentry { i16 7, i16 40, i16 24 }, %struct.tableentry { i16 7, i16 43, i16 25 }, %struct.tableentry { i16 7, i16 19, i16 26 }, %struct.tableentry { i16 7, i16 36, i16 27 }, %struct.tableentry { i16 7, i16 24, i16 28 }, %struct.tableentry { i16 8, i16 2, i16 29 }, %struct.tableentry { i16 8, i16 3, i16 30 }, %struct.tableentry { i16 8, i16 26, i16 31 }, %struct.tableentry { i16 8, i16 27, i16 32 }, %struct.tableentry { i16 8, i16 18, i16 33 }, %struct.tableentry { i16 8, i16 19, i16 34 }, %struct.tableentry { i16 8, i16 20, i16 35 }, %struct.tableentry { i16 8, i16 21, i16 36 }, %struct.tableentry { i16 8, i16 22, i16 37 }, %struct.tableentry { i16 8, i16 23, i16 38 }, %struct.tableentry { i16 8, i16 40, i16 39 }, %struct.tableentry { i16 8, i16 41, i16 40 }, %struct.tableentry { i16 8, i16 42, i16 41 }, %struct.tableentry { i16 8, i16 43, i16 42 }, %struct.tableentry { i16 8, i16 44, i16 43 }, %struct.tableentry { i16 8, i16 45, i16 44 }, %struct.tableentry { i16 8, i16 4, i16 45 }, %struct.tableentry { i16 8, i16 5, i16 46 }, %struct.tableentry { i16 8, i16 10, i16 47 }, %struct.tableentry { i16 8, i16 11, i16 48 }, %struct.tableentry { i16 8, i16 82, i16 49 }, %struct.tableentry { i16 8, i16 83, i16 50 }, %struct.tableentry { i16 8, i16 84, i16 51 }, %struct.tableentry { i16 8, i16 85, i16 52 }, %struct.tableentry { i16 8, i16 36, i16 53 }, %struct.tableentry { i16 8, i16 37, i16 54 }, %struct.tableentry { i16 8, i16 88, i16 55 }, %struct.tableentry { i16 8, i16 89, i16 56 }, %struct.tableentry { i16 8, i16 90, i16 57 }, %struct.tableentry { i16 8, i16 91, i16 58 }, %struct.tableentry { i16 8, i16 74, i16 59 }, %struct.tableentry { i16 8, i16 75, i16 60 }, %struct.tableentry { i16 8, i16 50, i16 61 }, %struct.tableentry { i16 8, i16 51, i16 62 }, %struct.tableentry { i16 8, i16 52, i16 63 }, %struct.tableentry { i16 5, i16 27, i16 64 }, %struct.tableentry { i16 5, i16 18, i16 128 }, %struct.tableentry { i16 6, i16 23, i16 192 }, %struct.tableentry { i16 7, i16 55, i16 256 }, %struct.tableentry { i16 8, i16 54, i16 320 }, %struct.tableentry { i16 8, i16 55, i16 384 }, %struct.tableentry { i16 8, i16 100, i16 448 }, %struct.tableentry { i16 8, i16 101, i16 512 }, %struct.tableentry { i16 8, i16 104, i16 576 }, %struct.tableentry { i16 8, i16 103, i16 640 }, %struct.tableentry { i16 9, i16 204, i16 704 }, %struct.tableentry { i16 9, i16 205, i16 768 }, %struct.tableentry { i16 9, i16 210, i16 832 }, %struct.tableentry { i16 9, i16 211, i16 896 }, %struct.tableentry { i16 9, i16 212, i16 960 }, %struct.tableentry { i16 9, i16 213, i16 1024 }, %struct.tableentry { i16 9, i16 214, i16 1088 }, %struct.tableentry { i16 9, i16 215, i16 1152 }, %struct.tableentry { i16 9, i16 216, i16 1216 }, %struct.tableentry { i16 9, i16 217, i16 1280 }, %struct.tableentry { i16 9, i16 218, i16 1344 }, %struct.tableentry { i16 9, i16 219, i16 1408 }, %struct.tableentry { i16 9, i16 152, i16 1472 }, %struct.tableentry { i16 9, i16 153, i16 1536 }, %struct.tableentry { i16 9, i16 154, i16 1600 }, %struct.tableentry { i16 6, i16 24, i16 1664 }, %struct.tableentry { i16 9, i16 155, i16 1728 }, %struct.tableentry { i16 11, i16 8, i16 1792 }, %struct.tableentry { i16 11, i16 12, i16 1856 }, %struct.tableentry { i16 11, i16 13, i16 1920 }, %struct.tableentry { i16 12, i16 18, i16 1984 }, %struct.tableentry { i16 12, i16 19, i16 2048 }, %struct.tableentry { i16 12, i16 20, i16 2112 }, %struct.tableentry { i16 12, i16 21, i16 2176 }, %struct.tableentry { i16 12, i16 22, i16 2240 }, %struct.tableentry { i16 12, i16 23, i16 2304 }, %struct.tableentry { i16 12, i16 28, i16 2368 }, %struct.tableentry { i16 12, i16 29, i16 2432 }, %struct.tableentry { i16 12, i16 30, i16 2496 }, %struct.tableentry { i16 12, i16 31, i16 2560 }, %struct.tableentry { i16 12, i16 1, i16 -1 }, %struct.tableentry { i16 9, i16 1, i16 -2 }, %struct.tableentry { i16 10, i16 1, i16 -2 }, %struct.tableentry { i16 11, i16 1, i16 -2 }, %struct.tableentry { i16 12, i16 0, i16 -2 }], align 16
@TIFFFaxBlackCodes = hidden constant [109 x %struct.tableentry] [%struct.tableentry { i16 10, i16 55, i16 0 }, %struct.tableentry { i16 3, i16 2, i16 1 }, %struct.tableentry { i16 2, i16 3, i16 2 }, %struct.tableentry { i16 2, i16 2, i16 3 }, %struct.tableentry { i16 3, i16 3, i16 4 }, %struct.tableentry { i16 4, i16 3, i16 5 }, %struct.tableentry { i16 4, i16 2, i16 6 }, %struct.tableentry { i16 5, i16 3, i16 7 }, %struct.tableentry { i16 6, i16 5, i16 8 }, %struct.tableentry { i16 6, i16 4, i16 9 }, %struct.tableentry { i16 7, i16 4, i16 10 }, %struct.tableentry { i16 7, i16 5, i16 11 }, %struct.tableentry { i16 7, i16 7, i16 12 }, %struct.tableentry { i16 8, i16 4, i16 13 }, %struct.tableentry { i16 8, i16 7, i16 14 }, %struct.tableentry { i16 9, i16 24, i16 15 }, %struct.tableentry { i16 10, i16 23, i16 16 }, %struct.tableentry { i16 10, i16 24, i16 17 }, %struct.tableentry { i16 10, i16 8, i16 18 }, %struct.tableentry { i16 11, i16 103, i16 19 }, %struct.tableentry { i16 11, i16 104, i16 20 }, %struct.tableentry { i16 11, i16 108, i16 21 }, %struct.tableentry { i16 11, i16 55, i16 22 }, %struct.tableentry { i16 11, i16 40, i16 23 }, %struct.tableentry { i16 11, i16 23, i16 24 }, %struct.tableentry { i16 11, i16 24, i16 25 }, %struct.tableentry { i16 12, i16 202, i16 26 }, %struct.tableentry { i16 12, i16 203, i16 27 }, %struct.tableentry { i16 12, i16 204, i16 28 }, %struct.tableentry { i16 12, i16 205, i16 29 }, %struct.tableentry { i16 12, i16 104, i16 30 }, %struct.tableentry { i16 12, i16 105, i16 31 }, %struct.tableentry { i16 12, i16 106, i16 32 }, %struct.tableentry { i16 12, i16 107, i16 33 }, %struct.tableentry { i16 12, i16 210, i16 34 }, %struct.tableentry { i16 12, i16 211, i16 35 }, %struct.tableentry { i16 12, i16 212, i16 36 }, %struct.tableentry { i16 12, i16 213, i16 37 }, %struct.tableentry { i16 12, i16 214, i16 38 }, %struct.tableentry { i16 12, i16 215, i16 39 }, %struct.tableentry { i16 12, i16 108, i16 40 }, %struct.tableentry { i16 12, i16 109, i16 41 }, %struct.tableentry { i16 12, i16 218, i16 42 }, %struct.tableentry { i16 12, i16 219, i16 43 }, %struct.tableentry { i16 12, i16 84, i16 44 }, %struct.tableentry { i16 12, i16 85, i16 45 }, %struct.tableentry { i16 12, i16 86, i16 46 }, %struct.tableentry { i16 12, i16 87, i16 47 }, %struct.tableentry { i16 12, i16 100, i16 48 }, %struct.tableentry { i16 12, i16 101, i16 49 }, %struct.tableentry { i16 12, i16 82, i16 50 }, %struct.tableentry { i16 12, i16 83, i16 51 }, %struct.tableentry { i16 12, i16 36, i16 52 }, %struct.tableentry { i16 12, i16 55, i16 53 }, %struct.tableentry { i16 12, i16 56, i16 54 }, %struct.tableentry { i16 12, i16 39, i16 55 }, %struct.tableentry { i16 12, i16 40, i16 56 }, %struct.tableentry { i16 12, i16 88, i16 57 }, %struct.tableentry { i16 12, i16 89, i16 58 }, %struct.tableentry { i16 12, i16 43, i16 59 }, %struct.tableentry { i16 12, i16 44, i16 60 }, %struct.tableentry { i16 12, i16 90, i16 61 }, %struct.tableentry { i16 12, i16 102, i16 62 }, %struct.tableentry { i16 12, i16 103, i16 63 }, %struct.tableentry { i16 10, i16 15, i16 64 }, %struct.tableentry { i16 12, i16 200, i16 128 }, %struct.tableentry { i16 12, i16 201, i16 192 }, %struct.tableentry { i16 12, i16 91, i16 256 }, %struct.tableentry { i16 12, i16 51, i16 320 }, %struct.tableentry { i16 12, i16 52, i16 384 }, %struct.tableentry { i16 12, i16 53, i16 448 }, %struct.tableentry { i16 13, i16 108, i16 512 }, %struct.tableentry { i16 13, i16 109, i16 576 }, %struct.tableentry { i16 13, i16 74, i16 640 }, %struct.tableentry { i16 13, i16 75, i16 704 }, %struct.tableentry { i16 13, i16 76, i16 768 }, %struct.tableentry { i16 13, i16 77, i16 832 }, %struct.tableentry { i16 13, i16 114, i16 896 }, %struct.tableentry { i16 13, i16 115, i16 960 }, %struct.tableentry { i16 13, i16 116, i16 1024 }, %struct.tableentry { i16 13, i16 117, i16 1088 }, %struct.tableentry { i16 13, i16 118, i16 1152 }, %struct.tableentry { i16 13, i16 119, i16 1216 }, %struct.tableentry { i16 13, i16 82, i16 1280 }, %struct.tableentry { i16 13, i16 83, i16 1344 }, %struct.tableentry { i16 13, i16 84, i16 1408 }, %struct.tableentry { i16 13, i16 85, i16 1472 }, %struct.tableentry { i16 13, i16 90, i16 1536 }, %struct.tableentry { i16 13, i16 91, i16 1600 }, %struct.tableentry { i16 13, i16 100, i16 1664 }, %struct.tableentry { i16 13, i16 101, i16 1728 }, %struct.tableentry { i16 11, i16 8, i16 1792 }, %struct.tableentry { i16 11, i16 12, i16 1856 }, %struct.tableentry { i16 11, i16 13, i16 1920 }, %struct.tableentry { i16 12, i16 18, i16 1984 }, %struct.tableentry { i16 12, i16 19, i16 2048 }, %struct.tableentry { i16 12, i16 20, i16 2112 }, %struct.tableentry { i16 12, i16 21, i16 2176 }, %struct.tableentry { i16 12, i16 22, i16 2240 }, %struct.tableentry { i16 12, i16 23, i16 2304 }, %struct.tableentry { i16 12, i16 28, i16 2368 }, %struct.tableentry { i16 12, i16 29, i16 2432 }, %struct.tableentry { i16 12, i16 30, i16 2496 }, %struct.tableentry { i16 12, i16 31, i16 2560 }, %struct.tableentry { i16 12, i16 1, i16 -1 }, %struct.tableentry { i16 9, i16 1, i16 -2 }, %struct.tableentry { i16 10, i16 1, i16 -2 }, %struct.tableentry { i16 11, i16 1, i16 -2 }, %struct.tableentry { i16 12, i16 0, i16 -2 }], align 16
@_TIFFFax3fillruns._fillmasks = internal unnamed_addr constant [9 x i8] c"\00\80\C0\E0\F0\F8\FC\FE\FF", align 1
@fax3Fields = internal constant [1 x %struct._TIFFField] [%struct._TIFFField { i32 292, i16 1, i16 1, i32 4, i32 0, i32 6, i32 6, i16 73, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), %struct._TIFFFieldArray* null }], align 16
@.str = private unnamed_addr constant [18 x i8] c"TIFFInitCCITTFax3\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"Merging CCITT Fax 3 codec-specific tags failed\00", align 1
@fax4Fields = internal constant [1 x %struct._TIFFField] [%struct._TIFFField { i32 293, i16 1, i16 1, i32 4, i32 0, i32 6, i32 6, i16 73, i8 0, i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), %struct._TIFFFieldArray* null }], align 16
@.str.2 = private unnamed_addr constant [18 x i8] c"TIFFInitCCITTFax4\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"Merging CCITT Fax 4 codec-specific tags failed\00", align 1
@faxFields = internal constant [5 x %struct._TIFFField] [%struct._TIFFField { i32 65536, i16 0, i16 0, i32 0, i32 0, i32 13, i32 0, i16 0, i8 0, i8 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), %struct._TIFFFieldArray* null }, %struct._TIFFField { i32 65540, i16 0, i16 0, i32 0, i32 0, i32 51, i32 0, i16 0, i8 0, i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), %struct._TIFFFieldArray* null }, %struct._TIFFField { i32 326, i16 1, i16 1, i32 4, i32 0, i32 6, i32 6, i16 66, i8 1, i8 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), %struct._TIFFFieldArray* null }, %struct._TIFFField { i32 327, i16 1, i16 1, i32 3, i32 0, i32 4, i32 4, i16 67, i8 1, i8 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), %struct._TIFFFieldArray* null }, %struct._TIFFField { i32 328, i16 1, i16 1, i32 4, i32 0, i32 6, i32 6, i16 68, i8 1, i8 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0), %struct._TIFFFieldArray* null }], align 16
@.str.4 = private constant [14 x i8] c"InitCCITTFax3\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"Merging common CCITT Fax codec-specific tags failed\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"No space for state block\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"FaxMode\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"FaxFillFunc\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"BadFaxLines\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"CleanFaxData\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"ConsecutiveBadFaxLines\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"  Group 4 Options:\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"%suncompressed data\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"  Group 3 Options:\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"%s2-d encoding\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"%sEOL padding\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c" (%lu = 0x%lx)\0A\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"  Fax Data:\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c" clean\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c" receiver regenerated\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c" uncorrected errors\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c" (%u = 0x%x)\0A\00", align 1
@.str.25 = private unnamed_addr constant [22 x i8] c"  Bad Fax Lines: %lu\0A\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"  Consecutive Bad Fax Lines: %lu\0A\00", align 1
@Fax3SetupState.module = internal constant [15 x i8] c"Fax3SetupState\00", align 1
@.str.27 = private unnamed_addr constant [54 x i8] c"Bits/sample must be 1 for Group 3/4 encoding/decoding\00", align 1
@.str.28 = private unnamed_addr constant [43 x i8] c"Row pixels integer overflow (rowpixels %u)\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"for Group 3/4 run arrays\00", align 1
@.str.30 = private unnamed_addr constant [38 x i8] c"No space for Group 3/4 reference line\00", align 1
@Fax3Decode2D.module = internal constant [13 x i8] c"Fax3Decode2D\00", align 1
@.str.31 = private unnamed_addr constant [36 x i8] c"Fractional scanlines cannot be read\00", align 1
@TIFFFaxWhiteTable = external local_unnamed_addr constant [0 x %struct.TIFFFaxTabEnt], align 4
@TIFFFaxBlackTable = external local_unnamed_addr constant [0 x %struct.TIFFFaxTabEnt], align 4
@TIFFFaxMainTable = external local_unnamed_addr constant [0 x %struct.TIFFFaxTabEnt], align 4
@.str.32 = private unnamed_addr constant [41 x i8] c"Bad code word at line %u of %s %u (x %u)\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"tile\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"Premature EOF at line %u of %s %u (x %u)\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"%s at line %u of %s %u (got %u, expected %u)\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"Premature EOL\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"Line length mismatch\00", align 1
@.str.39 = private unnamed_addr constant [61 x i8] c"Uncompressed data (not supported) at line %u of %s %u (x %u)\00", align 1
@Fax3Decode1D.module = internal constant [13 x i8] c"Fax3Decode1D\00", align 1
@Fax3Encode.module = internal constant [11 x i8] c"Fax3Encode\00", align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"Fractional scanlines cannot be written\00", align 1
@_msbmask = internal unnamed_addr constant [9 x i32] [i32 0, i32 1, i32 3, i32 7, i32 15, i32 31, i32 63, i32 127, i32 255], align 16
@zeroruns = internal unnamed_addr constant <{ [128 x i8], [128 x i8] }> <{ [128 x i8] c"\08\07\06\06\05\05\05\05\04\04\04\04\04\04\04\04\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", [128 x i8] zeroinitializer }>, align 16
@oneruns = internal unnamed_addr constant [256 x i8] calign 16
@vcodes = internal unnamed_addr constant [7 x %struct.tableentry] [%struct.tableentry { i16 7, i16 3, i16 0 }, %struct.tableentry { i16 6, i16 3, i16 0 }, %struct.tableentry { i16 3, i16 3, i16 0 }, %struct.tableentry { i16 1, i16 1, i16 0 }, %struct.tableentry { i16 3, i16 2, i16 0 }, %struct.tableentry { i16 6, i16 2, i16 0 }, %struct.tableentry { i16 7, i16 2, i16 0 }], align 16
@.str.42 = private unnamed_addr constant [14 x i8] c"Group3Options\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"Group4Options\00", align 1
@Fax4Decode.module = internal constant [11 x i8] c"Fax4Decode\00", align 1
@Fax4Encode.module = internal constant [11 x i8] c"Fax4Encode\00", align 1
@Fax3DecodeRLE.module = internal constant [14 x i8] c"Fax3DecodeRLE\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_TIFFFax3fillruns(i8*, i32*, i32*, i32) #0 {
  %5 = ptrtoint i32* %2 to i64
  %6 = ptrtoint i32* %1 to i64
  %7 = sub i64 %5, %6
  %8 = and i64 %7, 4
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 0, i32* %2, align 4
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi i32* [ %11, %10 ], [ %2, %4 ]
  %14 = icmp ugt i32* %13, %1
  br i1 %14, label %15, label %309

15:                                               ; preds = %12, %305
  %16 = phi i32 [ %306, %305 ], [ 0, %12 ]
  %17 = phi i32* [ %307, %305 ], [ %1, %12 ]
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, %16
  %20 = icmp ugt i32 %19, %3
  %21 = icmp ugt i32 %18, %3
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  %24 = sub i32 %3, %16
  store i32 %24, i32* %17, align 4
  br label %25

25:                                               ; preds = %15, %23
  %26 = phi i32 [ %24, %23 ], [ %18, %15 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %162, label %28

28:                                               ; preds = %25
  %29 = lshr i32 %16, 3
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = and i32 %16, 7
  %33 = sub nuw nsw i32 8, %32
  %34 = icmp ugt i32 %26, %33
  br i1 %34, label %35, label %146

35:                                               ; preds = %28
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %35
  %38 = shl i32 255, %33
  %39 = getelementptr inbounds i8, i8* %31, i64 1
  %40 = load i8, i8* %31, align 1
  %41 = trunc i32 %38 to i8
  %42 = and i8 %40, %41
  store i8 %42, i8* %31, align 1
  %43 = sub i32 %26, %33
  br label %44

44:                                               ; preds = %35, %37
  %45 = phi i8* [ %39, %37 ], [ %31, %35 ]
  %46 = phi i32 [ %43, %37 ], [ %26, %35 ]
  %47 = lshr i32 %46, 3
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %137, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i32 %46, 127
  br i1 %50, label %51, label %100

51:                                               ; preds = %49
  %52 = ptrtoint i8* %45 to i64
  %53 = and i64 %52, 7
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %51, %55
  %56 = phi i32 [ %59, %55 ], [ %47, %51 ]
  %57 = phi i8* [ %58, %55 ], [ %45, %51 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8 0, i8* %57, align 1
  %59 = add nsw i32 %56, -1
  %60 = icmp ne i32 %59, 0
  %61 = ptrtoint i8* %58 to i64
  %62 = and i64 %61, 7
  %63 = icmp ne i64 %62, 0
  %64 = and i1 %60, %63
  br i1 %64, label %55, label %65

65:                                               ; preds = %55, %51
  %66 = phi i8* [ %45, %51 ], [ %58, %55 ]
  %67 = phi i32 [ %47, %51 ], [ %59, %55 ]
  %68 = bitcast i8* %66 to i64*
  %69 = ashr i32 %67, 3
  %70 = add nsw i32 %69, -1
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 3
  %73 = add nuw nsw i64 %72, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 %73, i1 false)
  %74 = add nsw i32 %69, -1
  %75 = and i32 %69, 7
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %85, label %77

77:                                               ; preds = %65, %77
  %78 = phi i32 [ %82, %77 ], [ %69, %65 ]
  %79 = phi i64* [ %81, %77 ], [ %68, %65 ]
  %80 = phi i32 [ %83, %77 ], [ %75, %65 ]
  %81 = getelementptr inbounds i64, i64* %79, i64 1
  %82 = add nsw i32 %78, -1
  %83 = add i32 %80, -1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %77, !llvm.loop !2

85:                                               ; preds = %77, %65
  %86 = phi i64* [ undef, %65 ], [ %81, %77 ]
  %87 = phi i32 [ %69, %65 ], [ %82, %77 ]
  %88 = phi i64* [ %68, %65 ], [ %81, %77 ]
  %89 = icmp ult i32 %74, 7
  br i1 %89, label %96, label %90

90:                                               ; preds = %85, %90
  %91 = phi i32 [ %94, %90 ], [ %87, %85 ]
  %92 = phi i64* [ %93, %90 ], [ %88, %85 ]
  %93 = getelementptr inbounds i64, i64* %92, i64 8
  %94 = add nsw i32 %91, -8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %90

96:                                               ; preds = %90, %85
  %97 = phi i64* [ %86, %85 ], [ %93, %90 ]
  %98 = and i32 %67, 7
  %99 = bitcast i64* %97 to i8*
  br label %100

100:                                              ; preds = %96, %49
  %101 = phi i8* [ %99, %96 ], [ %45, %49 ]
  %102 = phi i32 [ %98, %96 ], [ %47, %49 ]
  switch i32 %102, label %134 [
    i32 15, label %103
    i32 14, label %105
    i32 13, label %107
    i32 12, label %109
    i32 11, label %111
    i32 10, label %113
    i32 9, label %115
    i32 8, label %117
    i32 7, label %119
    i32 6, label %121
    i32 5, label %123
    i32 4, label %125
    i32 3, label %127
    i32 2, label %129
    i32 1, label %131
  ]

103:                                              ; preds = %100
  %104 = getelementptr inbounds i8, i8* %101, i64 14
  store i8 0, i8* %104, align 1
  br label %105

105:                                              ; preds = %100, %103
  %106 = getelementptr inbounds i8, i8* %101, i64 13
  store i8 0, i8* %106, align 1
  br label %107

107:                                              ; preds = %100, %105
  %108 = getelementptr inbounds i8, i8* %101, i64 12
  store i8 0, i8* %108, align 1
  br label %109

109:                                              ; preds = %100, %107
  %110 = getelementptr inbounds i8, i8* %101, i64 11
  store i8 0, i8* %110, align 1
  br label %111

111:                                              ; preds = %100, %109
  %112 = getelementptr inbounds i8, i8* %101, i64 10
  store i8 0, i8* %112, align 1
  br label %113

113:                                              ; preds = %100, %111
  %114 = getelementptr inbounds i8, i8* %101, i64 9
  store i8 0, i8* %114, align 1
  br label %115

115:                                              ; preds = %100, %113
  %116 = getelementptr inbounds i8, i8* %101, i64 8
  store i8 0, i8* %116, align 1
  br label %117

117:                                              ; preds = %100, %115
  %118 = getelementptr inbounds i8, i8* %101, i64 7
  store i8 0, i8* %118, align 1
  br label %119

119:                                              ; preds = %100, %117
  %120 = getelementptr inbounds i8, i8* %101, i64 6
  store i8 0, i8* %120, align 1
  br label %121

121:                                              ; preds = %100, %119
  %122 = getelementptr inbounds i8, i8* %101, i64 5
  store i8 0, i8* %122, align 1
  br label %123

123:                                              ; preds = %100, %121
  %124 = getelementptr inbounds i8, i8* %101, i64 4
  store i8 0, i8* %124, align 1
  br label %125

125:                                              ; preds = %100, %123
  %126 = getelementptr inbounds i8, i8* %101, i64 3
  store i8 0, i8* %126, align 1
  br label %127

127:                                              ; preds = %100, %125
  %128 = getelementptr inbounds i8, i8* %101, i64 2
  store i8 0, i8* %128, align 1
  br label %129

129:                                              ; preds = %100, %127
  %130 = getelementptr inbounds i8, i8* %101, i64 1
  store i8 0, i8* %130, align 1
  br label %131

131:                                              ; preds = %100, %129
  store i8 0, i8* %101, align 1
  %132 = zext i32 %102 to i64
  %133 = getelementptr inbounds i8, i8* %101, i64 %132
  br label %134

134:                                              ; preds = %131, %100
  %135 = phi i8* [ %101, %100 ], [ %133, %131 ]
  %136 = and i32 %46, 7
  br label %137

137:                                              ; preds = %44, %134
  %138 = phi i8* [ %135, %134 ], [ %45, %44 ]
  %139 = phi i32 [ %136, %134 ], [ %46, %44 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %159, label %141

141:                                              ; preds = %137
  %142 = lshr i32 255, %139
  %143 = load i8, i8* %138, align 1
  %144 = trunc i32 %142 to i8
  %145 = and i8 %143, %144
  br label %156

146:                                              ; preds = %28
  %147 = zext i32 %26 to i64
  %148 = getelementptr inbounds [9 x i8], [9 x i8]* @_TIFFFax3fillruns._fillmasks, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = lshr i32 %150, %32
  %152 = load i8, i8* %31, align 1
  %153 = trunc i32 %151 to i8
  %154 = xor i8 %153, -1
  %155 = and i8 %152, %154
  br label %156

156:                                              ; preds = %146, %141
  %157 = phi i8* [ %138, %141 ], [ %31, %146 ]
  %158 = phi i8 [ %145, %141 ], [ %155, %146 ]
  store i8 %158, i8* %157, align 1
  br label %159

159:                                              ; preds = %156, %137
  %160 = load i32, i32* %17, align 4
  %161 = add i32 %160, %16
  br label %162

162:                                              ; preds = %25, %159
  %163 = phi i32 [ %161, %159 ], [ %16, %25 ]
  %164 = getelementptr inbounds i32, i32* %17, i64 1
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %165, %163
  %167 = icmp ugt i32 %166, %3
  %168 = icmp ugt i32 %165, %3
  %169 = or i1 %168, %167
  br i1 %169, label %170, label %172

170:                                              ; preds = %162
  %171 = sub i32 %3, %163
  store i32 %171, i32* %164, align 4
  br label %172

172:                                              ; preds = %162, %170
  %173 = phi i32 [ %171, %170 ], [ %165, %162 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %305, label %175

175:                                              ; preds = %172
  %176 = lshr i32 %163, 3
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %0, i64 %177
  %179 = and i32 %163, 7
  %180 = sub nuw nsw i32 8, %179
  %181 = icmp ugt i32 %173, %180
  br i1 %181, label %182, label %290

182:                                              ; preds = %175
  %183 = icmp eq i32 %179, 0
  br i1 %183, label %191, label %184

184:                                              ; preds = %182
  %185 = lshr i32 255, %179
  %186 = getelementptr inbounds i8, i8* %178, i64 1
  %187 = load i8, i8* %178, align 1
  %188 = trunc i32 %185 to i8
  %189 = or i8 %187, %188
  store i8 %189, i8* %178, align 1
  %190 = sub i32 %173, %180
  br label %191

191:                                              ; preds = %182, %184
  %192 = phi i8* [ %186, %184 ], [ %178, %182 ]
  %193 = phi i32 [ %190, %184 ], [ %173, %182 ]
  %194 = lshr i32 %193, 3
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %284, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i32 %193, 127
  br i1 %197, label %198, label %247

198:                                              ; preds = %196
  %199 = ptrtoint i8* %192 to i64
  %200 = and i64 %199, 7
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %212, label %202

202:                                              ; preds = %198, %202
  %203 = phi i32 [ %206, %202 ], [ %194, %198 ]
  %204 = phi i8* [ %205, %202 ], [ %192, %198 ]
  %205 = getelementptr inbounds i8, i8* %204, i64 1
  store i8 -1, i8* %204, align 1
  %206 = add nsw i32 %203, -1
  %207 = icmp ne i32 %206, 0
  %208 = ptrtoint i8* %205 to i64
  %209 = and i64 %208, 7
  %210 = icmp ne i64 %209, 0
  %211 = and i1 %207, %210
  br i1 %211, label %202, label %212

212:                                              ; preds = %202, %198
  %213 = phi i8* [ %192, %198 ], [ %205, %202 ]
  %214 = phi i32 [ %194, %198 ], [ %206, %202 ]
  %215 = bitcast i8* %213 to i64*
  %216 = ashr i32 %214, 3
  %217 = add nsw i32 %216, -1
  %218 = zext i32 %217 to i64
  %219 = shl nuw nsw i64 %218, 3
  %220 = add nuw nsw i64 %219, 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 -1, i64 %220, i1 false)
  %221 = add nsw i32 %216, -1
  %222 = and i32 %216, 7
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %232, label %224

224:                                              ; preds = %212, %224
  %225 = phi i32 [ %229, %224 ], [ %216, %212 ]
  %226 = phi i64* [ %228, %224 ], [ %215, %212 ]
  %227 = phi i32 [ %230, %224 ], [ %222, %212 ]
  %228 = getelementptr inbounds i64, i64* %226, i64 1
  %229 = add nsw i32 %225, -1
  %230 = add i32 %227, -1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %224, !llvm.loop !4

232:                                              ; preds = %224, %212
  %233 = phi i64* [ undef, %212 ], [ %228, %224 ]
  %234 = phi i32 [ %216, %212 ], [ %229, %224 ]
  %235 = phi i64* [ %215, %212 ], [ %228, %224 ]
  %236 = icmp ult i32 %221, 7
  br i1 %236, label %243, label %237

237:                                              ; preds = %232, %237
  %238 = phi i32 [ %241, %237 ], [ %234, %232 ]
  %239 = phi i64* [ %240, %237 ], [ %235, %232 ]
  %240 = getelementptr inbounds i64, i64* %239, i64 8
  %241 = add nsw i32 %238, -8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %237

243:                                              ; preds = %237, %232
  %244 = phi i64* [ %233, %232 ], [ %240, %237 ]
  %245 = and i32 %214, 7
  %246 = bitcast i64* %244 to i8*
  br label %247

247:                                              ; preds = %243, %196
  %248 = phi i8* [ %246, %243 ], [ %192, %196 ]
  %249 = phi i32 [ %245, %243 ], [ %194, %196 ]
  switch i32 %249, label %281 [
    i32 15, label %250
    i32 14, label %252
    i32 13, label %254
    i32 12, label %256
    i32 11, label %258
    i32 10, label %260
    i32 9, label %262
    i32 8, label %264
    i32 7, label %266
    i32 6, label %268
    i32 5, label %270
    i32 4, label %272
    i32 3, label %274
    i32 2, label %276
    i32 1, label %278
  ]

250:                                              ; preds = %247
  %251 = getelementptr inbounds i8, i8* %248, i64 14
  store i8 -1, i8* %251, align 1
  br label %252

252:                                              ; preds = %247, %250
  %253 = getelementptr inbounds i8, i8* %248, i64 13
  store i8 -1, i8* %253, align 1
  br label %254

254:                                              ; preds = %247, %252
  %255 = getelementptr inbounds i8, i8* %248, i64 12
  store i8 -1, i8* %255, align 1
  br label %256

256:                                              ; preds = %247, %254
  %257 = getelementptr inbounds i8, i8* %248, i64 11
  store i8 -1, i8* %257, align 1
  br label %258

258:                                              ; preds = %247, %256
  %259 = getelementptr inbounds i8, i8* %248, i64 10
  store i8 -1, i8* %259, align 1
  br label %260

260:                                              ; preds = %247, %258
  %261 = getelementptr inbounds i8, i8* %248, i64 9
  store i8 -1, i8* %261, align 1
  br label %262

262:                                              ; preds = %247, %260
  %263 = getelementptr inbounds i8, i8* %248, i64 8
  store i8 -1, i8* %263, align 1
  br label %264

264:                                              ; preds = %247, %262
  %265 = getelementptr inbounds i8, i8* %248, i64 7
  store i8 -1, i8* %265, align 1
  br label %266

266:                                              ; preds = %247, %264
  %267 = getelementptr inbounds i8, i8* %248, i64 6
  store i8 -1, i8* %267, align 1
  br label %268

268:                                              ; preds = %247, %266
  %269 = getelementptr inbounds i8, i8* %248, i64 5
  store i8 -1, i8* %269, align 1
  br label %270

270:                                              ; preds = %247, %268
  %271 = getelementptr inbounds i8, i8* %248, i64 4
  store i8 -1, i8* %271, align 1
  br label %272

272:                                              ; preds = %247, %270
  %273 = getelementptr inbounds i8, i8* %248, i64 3
  store i8 -1, i8* %273, align 1
  br label %274

274:                                              ; preds = %247, %272
  %275 = getelementptr inbounds i8, i8* %248, i64 2
  store i8 -1, i8* %275, align 1
  br label %276

276:                                              ; preds = %247, %274
  %277 = getelementptr inbounds i8, i8* %248, i64 1
  store i8 -1, i8* %277, align 1
  br label %278

278:                                              ; preds = %247, %276
  store i8 -1, i8* %248, align 1
  %279 = zext i32 %249 to i64
  %280 = getelementptr inbounds i8, i8* %248, i64 %279
  br label %281

281:                                              ; preds = %278, %247
  %282 = phi i8* [ %248, %247 ], [ %280, %278 ]
  %283 = and i32 %193, 7
  br label %284

284:                                              ; preds = %191, %281
  %285 = phi i8* [ %282, %281 ], [ %192, %191 ]
  %286 = phi i32 [ %283, %281 ], [ %193, %191 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %302, label %288

288:                                              ; preds = %284
  %289 = lshr i32 65280, %286
  br label %296

290:                                              ; preds = %175
  %291 = zext i32 %173 to i64
  %292 = getelementptr inbounds [9 x i8], [9 x i8]* @_TIFFFax3fillruns._fillmasks, i64 0, i64 %291
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i32
  %295 = lshr i32 %294, %179
  br label %296

296:                                              ; preds = %290, %288
  %297 = phi i32 [ %289, %288 ], [ %295, %290 ]
  %298 = phi i8* [ %285, %288 ], [ %178, %290 ]
  %299 = load i8, i8* %298, align 1
  %300 = trunc i32 %297 to i8
  %301 = or i8 %299, %300
  store i8 %301, i8* %298, align 1
  br label %302

302:                                              ; preds = %296, %284
  %303 = load i32, i32* %164, align 4
  %304 = add i32 %303, %163
  br label %305

305:                                              ; preds = %172, %302
  %306 = phi i32 [ %304, %302 ], [ %163, %172 ]
  %307 = getelementptr inbounds i32, i32* %17, i64 2
  %308 = icmp ult i32* %307, %13
  br i1 %308, label %15, label %309

309:                                              ; preds = %305, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFInitCCITTFax3(%struct.tiff*, i32) local_unnamed_addr #1 {
  %3 = tail call fastcc i32 @InitCCITTFax3(%struct.tiff* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @_TIFFMergeFields(%struct.tiff* %0, %struct._TIFFField* getelementptr inbounds ([1 x %struct._TIFFField], [1 x %struct._TIFFField]* @fax3Fields, i64 0, i64 0), i32 1) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %10 = load i8*, i8** %9, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %13

11:                                               ; preds = %5
  %12 = tail call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %0, i32 65536, i32 1) #7
  br label %13

13:                                               ; preds = %2, %11, %8
  %14 = phi i32 [ %12, %11 ], [ 0, %8 ], [ 1, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @InitCCITTFax3(%struct.tiff*) unnamed_addr #1 {
  %2 = tail call i32 @_TIFFMergeFields(%struct.tiff* %0, %struct._TIFFField* getelementptr inbounds ([5 x %struct._TIFFField], [5 x %struct._TIFFField]* @faxFields, i64 0, i64 0), i32 5) #7
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %6 = load i8*, i8** %5, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %64

7:                                                ; preds = %1
  %8 = tail call i8* @_TIFFmalloc(i64 152) #7
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  store i8* %8, i8** %9, align 8
  %10 = icmp eq i8* %8, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %13 = load i8*, i8** %12, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %64

14:                                               ; preds = %7
  tail call void @_TIFFmemset(i8* nonnull %8, i32 0, i64 152) #7
  %15 = bitcast i8** %9 to %struct.Fax3BaseState**
  %16 = load %struct.Fax3BaseState*, %struct.Fax3BaseState** %15, align 8
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %16, i64 0, i32 0
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 65
  %21 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 65, i32 1
  %22 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %16, i64 0, i32 8
  %25 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %24 to i64*
  store i64 %23, i64* %25, align 8
  store i32 (%struct.tiff*, i32, %struct.__va_list_tag*)* @Fax3VGetField, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %21, align 8
  %26 = getelementptr inbounds %struct.TIFFTagMethods, %struct.TIFFTagMethods* %20, i64 0, i32 0
  %27 = bitcast %struct.TIFFTagMethods* %20 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %16, i64 0, i32 9
  %30 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %29 to i64*
  store i64 %28, i64* %30, align 8
  store i32 (%struct.tiff*, i32, %struct.__va_list_tag*)* @Fax3VSetField, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %26, align 8
  %31 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 65, i32 2
  %32 = bitcast void (%struct.tiff*, %struct._IO_FILE*, i64)** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %16, i64 0, i32 10
  %35 = bitcast void (%struct.tiff*, %struct._IO_FILE*, i64)** %34 to i64*
  store i64 %33, i64* %35, align 8
  store void (%struct.tiff*, %struct._IO_FILE*, i64)* @Fax3PrintDir, void (%struct.tiff*, %struct._IO_FILE*, i64)** %31, align 8
  %36 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %16, i64 0, i32 7
  store i32 0, i32* %36, align 8
  %37 = load i32, i32* %19, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %14
  %40 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = or i32 %41, 256
  store i32 %42, i32* %40, align 8
  br label %43

43:                                               ; preds = %39, %14
  %44 = bitcast i8** %9 to %struct.Fax3CodecState**
  %45 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %44, align 8
  %46 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %45, i64 0, i32 6
  store i32* null, i32** %46, align 8
  %47 = tail call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %0, i32 65540, void (i8*, i32*, i32*, i32)* nonnull @_TIFFFax3fillruns) #7
  %48 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %44, align 8
  %49 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %48, i64 0, i32 10
  store i8* null, i8** %49, align 8
  %50 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 24
  %51 = bitcast i32 (%struct.tiff*)** %50 to <2 x i32 (%struct.tiff*)*>*
  store <2 x i32 (%struct.tiff*)*> <i32 (%struct.tiff*)* @Fax3FixupTags, i32 (%struct.tiff*)* @Fax3SetupState>, <2 x i32 (%struct.tiff*)*>* %51, align 8
  %52 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 26
  store i32 (%struct.tiff*, i16)* @Fax3PreDecode, i32 (%struct.tiff*, i16)** %52, align 8
  %53 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  %54 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  %55 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  %56 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 27
  store i32 (%struct.tiff*)* @Fax3SetupState, i32 (%struct.tiff*)** %56, align 8
  %57 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 29
  store i32 (%struct.tiff*, i16)* @Fax3PreEncode, i32 (%struct.tiff*, i16)** %57, align 8
  %58 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 30
  store i32 (%struct.tiff*)* @Fax3PostEncode, i32 (%struct.tiff*)** %58, align 8
  %59 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %53 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Decode1D, i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Encode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %59, align 8
  %60 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %54 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Decode1D, i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Encode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %60, align 8
  %61 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %55 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Decode1D, i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Encode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %61, align 8
  %62 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 37
  store void (%struct.tiff*)* @Fax3Close, void (%struct.tiff*)** %62, align 8
  %63 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 39
  store void (%struct.tiff*)* @Fax3Cleanup, void (%struct.tiff*)** %63, align 8
  br label %64

64:                                               ; preds = %43, %11, %4
  %65 = phi i32 [ 0, %11 ], [ 1, %43 ], [ 0, %4 ]
  ret i32 %65
}

declare i32 @_TIFFMergeFields(%struct.tiff*, %struct._TIFFField*, i32) local_unnamed_addr #2

declare void @TIFFErrorExt(i8*, i8*, i8*, ...) local_unnamed_addr #2

declare i32 @TIFFSetField(%struct.tiff*, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFInitCCITTFax4(%struct.tiff*, i32) local_unnamed_addr #1 {
  %3 = tail call fastcc i32 @InitCCITTFax3(%struct.tiff* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %20, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @_TIFFMergeFields(%struct.tiff* %0, %struct._TIFFField* getelementptr inbounds ([1 x %struct._TIFFField], [1 x %struct._TIFFField]* @fax4Fields, i64 0, i64 0), i32 1) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %10 = load i8*, i8** %9, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %20

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  %13 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  %14 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  %15 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %12 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @Fax4Decode, i32 (%struct.tiff*, i8*, i64, i16)* @Fax4Encode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %15, align 8
  %16 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %13 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @Fax4Decode, i32 (%struct.tiff*, i8*, i64, i16)* @Fax4Encode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %16, align 8
  %17 = bitcast i32 (%struct.tiff*, i8*, i64, i16)** %14 to <2 x i32 (%struct.tiff*, i8*, i64, i16)*>*
  store <2 x i32 (%struct.tiff*, i8*, i64, i16)*> <i32 (%struct.tiff*, i8*, i64, i16)* @Fax4Decode, i32 (%struct.tiff*, i8*, i64, i16)* @Fax4Encode>, <2 x i32 (%struct.tiff*, i8*, i64, i16)*>* %17, align 8
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 30
  store i32 (%struct.tiff*)* @Fax4PostEncode, i32 (%struct.tiff*)** %18, align 8
  %19 = tail call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %0, i32 65536, i32 1) #7
  br label %20

20:                                               ; preds = %2, %11, %8
  %21 = phi i32 [ %19, %11 ], [ 0, %8 ], [ 0, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax4Decode(%struct.tiff*, i8*, i64, i16 zeroext) #1 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.Fax3CodecState**
  %7 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = srem i64 %2, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %18 = load i8*, i8** %17, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0)) #7
  br label %840

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = icmp sgt i64 %2, 0
  br i1 %31, label %32, label %829

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 8
  %34 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 7
  %35 = icmp sgt i32 %9, 0
  %36 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 13
  %37 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %38 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %39 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 21
  %40 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %41 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 5
  %42 = bitcast i32** %33 to i64*
  %43 = bitcast i32** %34 to i64*
  %44 = load i32*, i32** %33, align 8
  %45 = load i32*, i32** %34, align 8
  br label %46

46:                                               ; preds = %32, %764
  %47 = phi i32* [ %45, %32 ], [ %775, %764 ]
  %48 = phi i32* [ %44, %32 ], [ %774, %764 ]
  %49 = phi i32 [ %25, %32 ], [ 0, %764 ]
  %50 = phi i8* [ %27, %32 ], [ %709, %764 ]
  %51 = phi i32 [ %23, %32 ], [ %710, %764 ]
  %52 = phi i32 [ %21, %32 ], [ %711, %764 ]
  %53 = phi i8* [ %1, %32 ], [ %769, %764 ]
  %54 = phi i64 [ %2, %32 ], [ %770, %764 ]
  br i1 %35, label %55, label %707

55:                                               ; preds = %46
  %56 = load i32, i32* %47, align 4
  %57 = getelementptr inbounds i32, i32* %47, i64 1
  %58 = ptrtoint i32* %48 to i64
  br label %59

59:                                               ; preds = %55, %650
  %60 = phi i32 [ 0, %55 ], [ %659, %650 ]
  %61 = phi i32* [ %57, %55 ], [ %658, %650 ]
  %62 = phi i32 [ %56, %55 ], [ %657, %650 ]
  %63 = phi i32* [ %48, %55 ], [ %656, %650 ]
  %64 = phi i8* [ %50, %55 ], [ %655, %650 ]
  %65 = phi i32 [ 0, %55 ], [ %654, %650 ]
  %66 = phi i32 [ %51, %55 ], [ %653, %650 ]
  %67 = phi i32 [ %52, %55 ], [ %652, %650 ]
  %68 = phi i32 [ 0, %55 ], [ %651, %650 ]
  %69 = icmp slt i32 %66, 7
  br i1 %69, label %70, label %84

70:                                               ; preds = %59
  %71 = icmp ult i8* %64, %30
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = icmp eq i32 %66, 0
  br i1 %73, label %584, label %84

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, i8* %64, i64 1
  %76 = load i8, i8* %64, align 1
  %77 = zext i8 %76 to i64
  %78 = getelementptr inbounds i8, i8* %11, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl i32 %80, %66
  %82 = or i32 %81, %67
  %83 = add nsw i32 %66, 8
  br label %84

84:                                               ; preds = %72, %74, %59
  %85 = phi i32 [ %82, %74 ], [ %67, %59 ], [ %67, %72 ]
  %86 = phi i32 [ %83, %74 ], [ %66, %59 ], [ 7, %72 ]
  %87 = phi i8* [ %75, %74 ], [ %64, %59 ], [ %64, %72 ]
  %88 = and i32 %85, 127
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %89, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = sub nsw i32 %86, %92
  %94 = lshr i32 %85, %92
  %95 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %89, i32 0
  %96 = load i8, i8* %95, align 4
  switch i8 %96, label %539 [
    i8 1, label %97
    i8 2, label %126
    i8 3, label %388
    i8 4, label %415
    i8 5, label %446
    i8 6, label %492
    i8 12, label %503
  ]

97:                                               ; preds = %84
  %98 = icmp eq i32* %63, %48
  br i1 %98, label %115, label %99

99:                                               ; preds = %97
  %100 = icmp sle i32 %62, %68
  %101 = icmp slt i32 %62, %9
  %102 = and i1 %100, %101
  br i1 %102, label %103, label %115

103:                                              ; preds = %99, %103
  %104 = phi i32* [ %111, %103 ], [ %61, %99 ]
  %105 = phi i32 [ %110, %103 ], [ %62, %99 ]
  %106 = load i32, i32* %104, align 4
  %107 = getelementptr inbounds i32, i32* %104, i64 1
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %106, %105
  %110 = add i32 %109, %108
  %111 = getelementptr inbounds i32, i32* %104, i64 2
  %112 = icmp sle i32 %110, %68
  %113 = icmp slt i32 %110, %9
  %114 = and i1 %112, %113
  br i1 %114, label %103, label %115

115:                                              ; preds = %103, %99, %97
  %116 = phi i32 [ %62, %97 ], [ %62, %99 ], [ %110, %103 ]
  %117 = phi i32* [ %61, %97 ], [ %61, %99 ], [ %111, %103 ]
  %118 = getelementptr inbounds i32, i32* %117, i64 1
  %119 = load i32, i32* %117, align 4
  %120 = add i32 %119, %116
  %121 = add i32 %65, %60
  %122 = add i32 %121, %120
  %123 = getelementptr inbounds i32, i32* %117, i64 2
  %124 = load i32, i32* %118, align 4
  %125 = add i32 %120, %124
  br label %650

126:                                              ; preds = %84
  %127 = ptrtoint i32* %63 to i64
  %128 = sub i64 %127, %58
  %129 = and i64 %128, 4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %248, label %131

131:                                              ; preds = %126, %185
  %132 = phi i32 [ %188, %185 ], [ %68, %126 ]
  %133 = phi i32 [ %175, %185 ], [ %94, %126 ]
  %134 = phi i32 [ %174, %185 ], [ %93, %126 ]
  %135 = phi i32 [ %189, %185 ], [ %65, %126 ]
  %136 = phi i8* [ %168, %185 ], [ %87, %126 ]
  %137 = icmp slt i32 %134, 13
  br i1 %137, label %138, label %165

138:                                              ; preds = %131
  %139 = icmp ult i8* %136, %30
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = icmp eq i32 %134, 0
  br i1 %141, label %584, label %165

142:                                              ; preds = %138
  %143 = getelementptr inbounds i8, i8* %136, i64 1
  %144 = load i8, i8* %136, align 1
  %145 = zext i8 %144 to i64
  %146 = getelementptr inbounds i8, i8* %11, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = shl i32 %148, %134
  %150 = or i32 %149, %133
  %151 = add nsw i32 %134, 8
  %152 = icmp slt i32 %151, 13
  br i1 %152, label %153, label %165

153:                                              ; preds = %142
  %154 = icmp ult i8* %143, %30
  br i1 %154, label %155, label %165

155:                                              ; preds = %153
  %156 = getelementptr inbounds i8, i8* %136, i64 2
  %157 = load i8, i8* %143, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds i8, i8* %11, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = shl i32 %161, %151
  %163 = or i32 %162, %150
  %164 = add nsw i32 %134, 16
  br label %165

165:                                              ; preds = %153, %140, %155, %142, %131
  %166 = phi i32 [ %163, %155 ], [ %150, %142 ], [ %133, %131 ], [ %133, %140 ], [ %150, %153 ]
  %167 = phi i32 [ %164, %155 ], [ %151, %142 ], [ %134, %131 ], [ 13, %140 ], [ 13, %153 ]
  %168 = phi i8* [ %156, %155 ], [ %143, %142 ], [ %136, %131 ], [ %136, %140 ], [ %143, %153 ]
  %169 = and i32 %166, 8191
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %170, i32 1
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = sub nsw i32 %167, %173
  %175 = lshr i32 %166, %173
  %176 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %170, i32 0
  %177 = load i8, i8* %176, align 4
  switch i8 %177, label %554 [
    i8 8, label %178
    i8 10, label %185
    i8 11, label %185
  ]

178:                                              ; preds = %165
  %179 = zext i32 %169 to i64
  %180 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %179, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, %135
  %183 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %182, i32* %63, align 4
  %184 = add i32 %181, %132
  br label %190

185:                                              ; preds = %165, %165
  %186 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %170, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, %132
  %189 = add i32 %187, %135
  br label %131

190:                                              ; preds = %243, %178
  %191 = phi i32 [ %184, %178 ], [ %246, %243 ]
  %192 = phi i32 [ %175, %178 ], [ %234, %243 ]
  %193 = phi i32 [ %174, %178 ], [ %233, %243 ]
  %194 = phi i32 [ 0, %178 ], [ %247, %243 ]
  %195 = phi i8* [ %168, %178 ], [ %227, %243 ]
  %196 = icmp slt i32 %193, 12
  br i1 %196, label %197, label %224

197:                                              ; preds = %190
  %198 = icmp ult i8* %195, %30
  br i1 %198, label %201, label %199

199:                                              ; preds = %197
  %200 = icmp eq i32 %193, 0
  br i1 %200, label %584, label %224

201:                                              ; preds = %197
  %202 = getelementptr inbounds i8, i8* %195, i64 1
  %203 = load i8, i8* %195, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds i8, i8* %11, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = shl i32 %207, %193
  %209 = or i32 %208, %192
  %210 = add nsw i32 %193, 8
  %211 = icmp slt i32 %210, 12
  br i1 %211, label %212, label %224

212:                                              ; preds = %201
  %213 = icmp ult i8* %202, %30
  br i1 %213, label %214, label %224

214:                                              ; preds = %212
  %215 = getelementptr inbounds i8, i8* %195, i64 2
  %216 = load i8, i8* %202, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds i8, i8* %11, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = shl i32 %220, %210
  %222 = or i32 %221, %209
  %223 = add nsw i32 %193, 16
  br label %224

224:                                              ; preds = %212, %199, %214, %201, %190
  %225 = phi i32 [ %222, %214 ], [ %209, %201 ], [ %192, %190 ], [ %192, %199 ], [ %209, %212 ]
  %226 = phi i32 [ %223, %214 ], [ %210, %201 ], [ %193, %190 ], [ 12, %199 ], [ 12, %212 ]
  %227 = phi i8* [ %215, %214 ], [ %202, %201 ], [ %195, %190 ], [ %195, %199 ], [ %202, %212 ]
  %228 = and i32 %225, 4095
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %229, i32 1
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = sub nsw i32 %226, %232
  %234 = lshr i32 %225, %232
  %235 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %229, i32 0
  %236 = load i8, i8* %235, align 4
  switch i8 %236, label %569 [
    i8 7, label %237
    i8 9, label %243
    i8 11, label %243
  ]

237:                                              ; preds = %224
  %238 = zext i32 %228 to i64
  %239 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %238, i32 2
  %240 = load i32, i32* %239, align 4
  %241 = add i32 %240, %194
  store i32 %241, i32* %183, align 4
  %242 = add i32 %240, %191
  br label %365

243:                                              ; preds = %224, %224
  %244 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %229, i32 2
  %245 = load i32, i32* %244, align 4
  %246 = add i32 %245, %191
  %247 = add i32 %245, %194
  br label %190

248:                                              ; preds = %126, %302
  %249 = phi i32 [ %305, %302 ], [ %68, %126 ]
  %250 = phi i32 [ %292, %302 ], [ %94, %126 ]
  %251 = phi i32 [ %291, %302 ], [ %93, %126 ]
  %252 = phi i32 [ %306, %302 ], [ %65, %126 ]
  %253 = phi i8* [ %285, %302 ], [ %87, %126 ]
  %254 = icmp slt i32 %251, 12
  br i1 %254, label %255, label %282

255:                                              ; preds = %248
  %256 = icmp ult i8* %253, %30
  br i1 %256, label %259, label %257

257:                                              ; preds = %255
  %258 = icmp eq i32 %251, 0
  br i1 %258, label %584, label %282

259:                                              ; preds = %255
  %260 = getelementptr inbounds i8, i8* %253, i64 1
  %261 = load i8, i8* %253, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds i8, i8* %11, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = shl i32 %265, %251
  %267 = or i32 %266, %250
  %268 = add nsw i32 %251, 8
  %269 = icmp slt i32 %268, 12
  br i1 %269, label %270, label %282

270:                                              ; preds = %259
  %271 = icmp ult i8* %260, %30
  br i1 %271, label %272, label %282

272:                                              ; preds = %270
  %273 = getelementptr inbounds i8, i8* %253, i64 2
  %274 = load i8, i8* %260, align 1
  %275 = zext i8 %274 to i64
  %276 = getelementptr inbounds i8, i8* %11, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = shl i32 %278, %268
  %280 = or i32 %279, %267
  %281 = add nsw i32 %251, 16
  br label %282

282:                                              ; preds = %270, %257, %272, %259, %248
  %283 = phi i32 [ %280, %272 ], [ %267, %259 ], [ %250, %248 ], [ %250, %257 ], [ %267, %270 ]
  %284 = phi i32 [ %281, %272 ], [ %268, %259 ], [ %251, %248 ], [ 12, %257 ], [ 12, %270 ]
  %285 = phi i8* [ %273, %272 ], [ %260, %259 ], [ %253, %248 ], [ %253, %257 ], [ %260, %270 ]
  %286 = and i32 %283, 4095
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %287, i32 1
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = sub nsw i32 %284, %290
  %292 = lshr i32 %283, %290
  %293 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %287, i32 0
  %294 = load i8, i8* %293, align 4
  switch i8 %294, label %569 [
    i8 7, label %295
    i8 9, label %302
    i8 11, label %302
  ]

295:                                              ; preds = %282
  %296 = zext i32 %286 to i64
  %297 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %296, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = add i32 %298, %252
  %300 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %299, i32* %63, align 4
  %301 = add i32 %298, %249
  br label %307

302:                                              ; preds = %282, %282
  %303 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %287, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = add i32 %304, %249
  %306 = add i32 %304, %252
  br label %248

307:                                              ; preds = %360, %295
  %308 = phi i32 [ %301, %295 ], [ %363, %360 ]
  %309 = phi i32 [ %292, %295 ], [ %351, %360 ]
  %310 = phi i32 [ %291, %295 ], [ %350, %360 ]
  %311 = phi i32 [ 0, %295 ], [ %364, %360 ]
  %312 = phi i8* [ %285, %295 ], [ %344, %360 ]
  %313 = icmp slt i32 %310, 13
  br i1 %313, label %314, label %341

314:                                              ; preds = %307
  %315 = icmp ult i8* %312, %30
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = icmp eq i32 %310, 0
  br i1 %317, label %584, label %341

318:                                              ; preds = %314
  %319 = getelementptr inbounds i8, i8* %312, i64 1
  %320 = load i8, i8* %312, align 1
  %321 = zext i8 %320 to i64
  %322 = getelementptr inbounds i8, i8* %11, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = shl i32 %324, %310
  %326 = or i32 %325, %309
  %327 = add nsw i32 %310, 8
  %328 = icmp slt i32 %327, 13
  br i1 %328, label %329, label %341

329:                                              ; preds = %318
  %330 = icmp ult i8* %319, %30
  br i1 %330, label %331, label %341

331:                                              ; preds = %329
  %332 = getelementptr inbounds i8, i8* %312, i64 2
  %333 = load i8, i8* %319, align 1
  %334 = zext i8 %333 to i64
  %335 = getelementptr inbounds i8, i8* %11, i64 %334
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i32
  %338 = shl i32 %337, %327
  %339 = or i32 %338, %326
  %340 = add nsw i32 %310, 16
  br label %341

341:                                              ; preds = %329, %316, %331, %318, %307
  %342 = phi i32 [ %339, %331 ], [ %326, %318 ], [ %309, %307 ], [ %309, %316 ], [ %326, %329 ]
  %343 = phi i32 [ %340, %331 ], [ %327, %318 ], [ %310, %307 ], [ 13, %316 ], [ 13, %329 ]
  %344 = phi i8* [ %332, %331 ], [ %319, %318 ], [ %312, %307 ], [ %312, %316 ], [ %319, %329 ]
  %345 = and i32 %342, 8191
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %346, i32 1
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i32
  %350 = sub nsw i32 %343, %349
  %351 = lshr i32 %342, %349
  %352 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %346, i32 0
  %353 = load i8, i8* %352, align 4
  switch i8 %353, label %554 [
    i8 8, label %354
    i8 10, label %360
    i8 11, label %360
  ]

354:                                              ; preds = %341
  %355 = zext i32 %345 to i64
  %356 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %355, i32 2
  %357 = load i32, i32* %356, align 4
  %358 = add i32 %357, %311
  store i32 %358, i32* %300, align 4
  %359 = add i32 %357, %308
  br label %365

360:                                              ; preds = %341, %341
  %361 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %346, i32 2
  %362 = load i32, i32* %361, align 4
  %363 = add i32 %362, %308
  %364 = add i32 %362, %311
  br label %307

365:                                              ; preds = %237, %354
  %366 = phi i32 [ %242, %237 ], [ %359, %354 ]
  %367 = phi i32 [ %234, %237 ], [ %351, %354 ]
  %368 = phi i32 [ %233, %237 ], [ %350, %354 ]
  %369 = phi i8* [ %227, %237 ], [ %344, %354 ]
  %370 = getelementptr inbounds i32, i32* %63, i64 2
  %371 = icmp eq i32* %370, %48
  br i1 %371, label %650, label %372

372:                                              ; preds = %365
  %373 = icmp sle i32 %62, %366
  %374 = icmp slt i32 %62, %9
  %375 = and i1 %373, %374
  br i1 %375, label %376, label %650

376:                                              ; preds = %372, %376
  %377 = phi i32* [ %384, %376 ], [ %61, %372 ]
  %378 = phi i32 [ %383, %376 ], [ %62, %372 ]
  %379 = load i32, i32* %377, align 4
  %380 = getelementptr inbounds i32, i32* %377, i64 1
  %381 = load i32, i32* %380, align 4
  %382 = add i32 %379, %378
  %383 = add i32 %382, %381
  %384 = getelementptr inbounds i32, i32* %377, i64 2
  %385 = icmp sle i32 %383, %366
  %386 = icmp slt i32 %383, %9
  %387 = and i1 %385, %386
  br i1 %387, label %376, label %650

388:                                              ; preds = %84
  %389 = icmp eq i32* %63, %48
  br i1 %389, label %406, label %390

390:                                              ; preds = %388
  %391 = icmp sle i32 %62, %68
  %392 = icmp slt i32 %62, %9
  %393 = and i1 %391, %392
  br i1 %393, label %394, label %406

394:                                              ; preds = %390, %394
  %395 = phi i32* [ %402, %394 ], [ %61, %390 ]
  %396 = phi i32 [ %401, %394 ], [ %62, %390 ]
  %397 = load i32, i32* %395, align 4
  %398 = getelementptr inbounds i32, i32* %395, i64 1
  %399 = load i32, i32* %398, align 4
  %400 = add i32 %397, %396
  %401 = add i32 %400, %399
  %402 = getelementptr inbounds i32, i32* %395, i64 2
  %403 = icmp sle i32 %401, %68
  %404 = icmp slt i32 %401, %9
  %405 = and i1 %403, %404
  br i1 %405, label %394, label %406

406:                                              ; preds = %394, %390, %388
  %407 = phi i32 [ %62, %388 ], [ %62, %390 ], [ %401, %394 ]
  %408 = phi i32* [ %61, %388 ], [ %61, %390 ], [ %402, %394 ]
  %409 = add i32 %65, %60
  %410 = add i32 %409, %407
  %411 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %410, i32* %63, align 4
  %412 = getelementptr inbounds i32, i32* %408, i64 1
  %413 = load i32, i32* %408, align 4
  %414 = add i32 %413, %407
  br label %650

415:                                              ; preds = %84
  %416 = icmp eq i32* %63, %48
  br i1 %416, label %433, label %417

417:                                              ; preds = %415
  %418 = icmp sle i32 %62, %68
  %419 = icmp slt i32 %62, %9
  %420 = and i1 %418, %419
  br i1 %420, label %421, label %433

421:                                              ; preds = %417, %421
  %422 = phi i32* [ %429, %421 ], [ %61, %417 ]
  %423 = phi i32 [ %428, %421 ], [ %62, %417 ]
  %424 = load i32, i32* %422, align 4
  %425 = getelementptr inbounds i32, i32* %422, i64 1
  %426 = load i32, i32* %425, align 4
  %427 = add i32 %424, %423
  %428 = add i32 %427, %426
  %429 = getelementptr inbounds i32, i32* %422, i64 2
  %430 = icmp sle i32 %428, %68
  %431 = icmp slt i32 %428, %9
  %432 = and i1 %430, %431
  br i1 %432, label %421, label %433

433:                                              ; preds = %421, %417, %415
  %434 = phi i32 [ %62, %415 ], [ %62, %417 ], [ %428, %421 ]
  %435 = phi i32* [ %61, %415 ], [ %61, %417 ], [ %429, %421 ]
  %436 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %89, i32 2
  %437 = load i32, i32* %436, align 4
  %438 = add i32 %65, %60
  %439 = add i32 %438, %434
  %440 = add i32 %439, %437
  %441 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %440, i32* %63, align 4
  %442 = add i32 %437, %434
  %443 = getelementptr inbounds i32, i32* %435, i64 1
  %444 = load i32, i32* %435, align 4
  %445 = add i32 %444, %434
  br label %650

446:                                              ; preds = %84
  %447 = icmp ne i32* %63, %48
  br i1 %447, label %448, label %464

448:                                              ; preds = %446
  %449 = icmp sle i32 %62, %68
  %450 = icmp slt i32 %62, %9
  %451 = and i1 %449, %450
  br i1 %451, label %452, label %464

452:                                              ; preds = %448, %452
  %453 = phi i32* [ %460, %452 ], [ %61, %448 ]
  %454 = phi i32 [ %459, %452 ], [ %62, %448 ]
  %455 = load i32, i32* %453, align 4
  %456 = getelementptr inbounds i32, i32* %453, i64 1
  %457 = load i32, i32* %456, align 4
  %458 = add i32 %455, %454
  %459 = add i32 %458, %457
  %460 = getelementptr inbounds i32, i32* %453, i64 2
  %461 = icmp sle i32 %459, %68
  %462 = icmp slt i32 %459, %9
  %463 = and i1 %461, %462
  br i1 %463, label %452, label %464

464:                                              ; preds = %452, %448, %446
  %465 = phi i32 [ %62, %446 ], [ %62, %448 ], [ %459, %452 ]
  %466 = phi i32* [ %61, %446 ], [ %61, %448 ], [ %460, %452 ]
  %467 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %89, i32 2
  %468 = load i32, i32* %467, align 4
  %469 = add i32 %468, %68
  %470 = icmp sle i32 %465, %469
  %471 = icmp slt i32 %465, %469
  %472 = or i1 %447, %471
  %473 = and i1 %470, %472
  br i1 %473, label %474, label %483

474:                                              ; preds = %464
  %475 = load i32, i32* %36, align 8
  %476 = load i8*, i8** %37, align 8
  %477 = load i32, i32* %38, align 8
  %478 = and i32 %477, 1024
  %479 = icmp ne i32 %478, 0
  %480 = select i1 %479, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %481 = select i1 %479, i32* %39, i32* %40
  %482 = load i32, i32* %481, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %476, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %475, i8* %480, i32 %482, i32 %68) #7
  br label %696

483:                                              ; preds = %464
  %484 = sub nsw i32 %465, %68
  %485 = sub i32 %484, %468
  %486 = add i32 %485, %65
  %487 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %486, i32* %63, align 4
  %488 = add i32 %485, %68
  %489 = getelementptr inbounds i32, i32* %466, i64 -1
  %490 = load i32, i32* %489, align 4
  %491 = sub i32 %465, %490
  br label %650

492:                                              ; preds = %84
  %493 = sub nsw i32 %9, %68
  %494 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %493, i32* %63, align 4
  %495 = load i32, i32* %36, align 8
  %496 = load i8*, i8** %37, align 8
  %497 = load i32, i32* %38, align 8
  %498 = and i32 %497, 1024
  %499 = icmp ne i32 %498, 0
  %500 = select i1 %499, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %501 = select i1 %499, i32* %39, i32* %40
  %502 = load i32, i32* %501, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %496, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.39, i64 0, i64 0), i32 %495, i8* %500, i32 %502, i32 %68) #7
  br label %696

503:                                              ; preds = %84
  %504 = sub nsw i32 %9, %68
  %505 = getelementptr inbounds i32, i32* %63, i64 1
  store i32 %504, i32* %63, align 4
  %506 = icmp slt i32 %93, 4
  br i1 %506, label %507, label %521

507:                                              ; preds = %503
  %508 = icmp ult i8* %87, %30
  br i1 %508, label %511, label %509

509:                                              ; preds = %507
  %510 = icmp eq i32 %93, 0
  br i1 %510, label %584, label %521

511:                                              ; preds = %507
  %512 = getelementptr inbounds i8, i8* %87, i64 1
  %513 = load i8, i8* %87, align 1
  %514 = zext i8 %513 to i64
  %515 = getelementptr inbounds i8, i8* %11, i64 %514
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = shl i32 %517, %93
  %519 = or i32 %518, %94
  %520 = add nsw i32 %93, 8
  br label %521

521:                                              ; preds = %509, %511, %503
  %522 = phi i32 [ %519, %511 ], [ %94, %503 ], [ %94, %509 ]
  %523 = phi i32 [ %520, %511 ], [ %93, %503 ], [ 4, %509 ]
  %524 = phi i8* [ %512, %511 ], [ %87, %503 ], [ %87, %509 ]
  %525 = and i32 %522, 15
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %536, label %527

527:                                              ; preds = %521
  %528 = load i32, i32* %36, align 8
  %529 = load i8*, i8** %37, align 8
  %530 = load i32, i32* %38, align 8
  %531 = and i32 %530, 1024
  %532 = icmp ne i32 %531, 0
  %533 = select i1 %532, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %534 = select i1 %532, i32* %39, i32* %40
  %535 = load i32, i32* %534, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %529, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %528, i8* %533, i32 %535, i32 %68) #7
  br label %536

536:                                              ; preds = %521, %527
  %537 = add nsw i32 %523, -4
  %538 = lshr i32 %522, 4
  br label %696

539:                                              ; preds = %84, %682
  %540 = phi i32 [ %651, %682 ], [ %68, %84 ]
  %541 = phi i32 [ %654, %682 ], [ %65, %84 ]
  %542 = phi i32* [ %656, %682 ], [ %63, %84 ]
  %543 = phi i32 [ %683, %682 ], [ %94, %84 ]
  %544 = phi i32 [ %684, %682 ], [ %93, %84 ]
  %545 = phi i8* [ %685, %682 ], [ %87, %84 ]
  %546 = load i32, i32* %36, align 8
  %547 = load i8*, i8** %37, align 8
  %548 = load i32, i32* %38, align 8
  %549 = and i32 %548, 1024
  %550 = icmp ne i32 %549, 0
  %551 = select i1 %550, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %552 = select i1 %550, i32* %39, i32* %40
  %553 = load i32, i32* %552, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %547, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %546, i8* %551, i32 %553, i32 %540) #7
  br label %696

554:                                              ; preds = %165, %341
  %555 = phi i32 [ %308, %341 ], [ %132, %165 ]
  %556 = phi i32 [ %351, %341 ], [ %175, %165 ]
  %557 = phi i32 [ %350, %341 ], [ %174, %165 ]
  %558 = phi i32 [ %311, %341 ], [ %135, %165 ]
  %559 = phi i8* [ %344, %341 ], [ %168, %165 ]
  %560 = phi i32* [ %300, %341 ], [ %63, %165 ]
  %561 = load i32, i32* %36, align 8
  %562 = load i8*, i8** %37, align 8
  %563 = load i32, i32* %38, align 8
  %564 = and i32 %563, 1024
  %565 = icmp ne i32 %564, 0
  %566 = select i1 %565, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %567 = select i1 %565, i32* %39, i32* %40
  %568 = load i32, i32* %567, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %562, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %561, i8* %566, i32 %568, i32 %555) #7
  br label %696

569:                                              ; preds = %224, %282
  %570 = phi i32 [ %249, %282 ], [ %191, %224 ]
  %571 = phi i32 [ %292, %282 ], [ %234, %224 ]
  %572 = phi i32 [ %291, %282 ], [ %233, %224 ]
  %573 = phi i32 [ %252, %282 ], [ %194, %224 ]
  %574 = phi i8* [ %285, %282 ], [ %227, %224 ]
  %575 = phi i32* [ %63, %282 ], [ %183, %224 ]
  %576 = load i32, i32* %36, align 8
  %577 = load i8*, i8** %37, align 8
  %578 = load i32, i32* %38, align 8
  %579 = and i32 %578, 1024
  %580 = icmp ne i32 %579, 0
  %581 = select i1 %580, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %582 = select i1 %580, i32* %39, i32* %40
  %583 = load i32, i32* %582, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %577, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %576, i8* %581, i32 %583, i32 %570) #7
  br label %696

584:                                              ; preds = %670, %509, %72, %140, %199, %257, %316
  %585 = phi i32 [ %308, %316 ], [ %249, %257 ], [ %191, %199 ], [ %132, %140 ], [ %68, %72 ], [ %651, %670 ], [ %68, %509 ]
  %586 = phi i32 [ %309, %316 ], [ %250, %257 ], [ %192, %199 ], [ %133, %140 ], [ %67, %72 ], [ %652, %670 ], [ %94, %509 ]
  %587 = phi i32 [ %311, %316 ], [ %252, %257 ], [ %194, %199 ], [ %135, %140 ], [ %65, %72 ], [ %654, %670 ], [ %65, %509 ]
  %588 = phi i8* [ %312, %316 ], [ %253, %257 ], [ %195, %199 ], [ %136, %140 ], [ %64, %72 ], [ %655, %670 ], [ %87, %509 ]
  %589 = phi i32* [ %300, %316 ], [ %63, %257 ], [ %183, %199 ], [ %63, %140 ], [ %63, %72 ], [ %656, %670 ], [ %505, %509 ]
  %590 = load i32, i32* %36, align 8
  %591 = load i8*, i8** %37, align 8
  %592 = load i32, i32* %38, align 8
  %593 = and i32 %592, 1024
  %594 = icmp ne i32 %593, 0
  %595 = select i1 %594, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %596 = select i1 %594, i32* %39, i32* %40
  %597 = load i32, i32* %596, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %591, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0), i32 %590, i8* %595, i32 %597, i32 %585) #7
  %598 = icmp eq i32 %587, 0
  br i1 %598, label %601, label %599

599:                                              ; preds = %584
  %600 = getelementptr inbounds i32, i32* %589, i64 1
  store i32 %587, i32* %589, align 4
  br label %601

601:                                              ; preds = %584, %599
  %602 = phi i32* [ %600, %599 ], [ %589, %584 ]
  %603 = icmp eq i32 %585, %9
  br i1 %603, label %778, label %604

604:                                              ; preds = %601
  %605 = load i32, i32* %36, align 8
  %606 = load i8*, i8** %37, align 8
  %607 = icmp ult i32 %585, %9
  %608 = select i1 %607, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %609 = load i32, i32* %38, align 8
  %610 = and i32 %609, 1024
  %611 = icmp ne i32 %610, 0
  %612 = select i1 %611, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %613 = select i1 %611, i32* %39, i32* %40
  %614 = load i32, i32* %613, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %606, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %608, i32 %605, i8* %612, i32 %614, i32 %585, i32 %9) #7
  %615 = icmp sgt i32 %585, %9
  %616 = icmp ugt i32* %602, %48
  %617 = and i1 %615, %616
  br i1 %617, label %618, label %627

618:                                              ; preds = %604, %618
  %619 = phi i32* [ %621, %618 ], [ %602, %604 ]
  %620 = phi i32 [ %623, %618 ], [ %585, %604 ]
  %621 = getelementptr inbounds i32, i32* %619, i64 -1
  %622 = load i32, i32* %621, align 4
  %623 = sub i32 %620, %622
  %624 = icmp sgt i32 %623, %9
  %625 = icmp ugt i32* %621, %48
  %626 = and i1 %624, %625
  br i1 %626, label %618, label %627

627:                                              ; preds = %618, %604
  %628 = phi i32 [ %585, %604 ], [ %623, %618 ]
  %629 = phi i32* [ %602, %604 ], [ %621, %618 ]
  %630 = phi i1 [ %615, %604 ], [ %624, %618 ]
  %631 = icmp slt i32 %628, %9
  br i1 %631, label %632, label %646

632:                                              ; preds = %627
  %633 = icmp sgt i32 %628, 0
  %634 = select i1 %633, i32 %628, i32 0
  %635 = ptrtoint i32* %629 to i64
  %636 = ptrtoint i32* %48 to i64
  %637 = sub i64 %635, %636
  %638 = and i64 %637, 4
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %642, label %640

640:                                              ; preds = %632
  %641 = getelementptr inbounds i32, i32* %629, i64 1
  store i32 0, i32* %629, align 4
  br label %642

642:                                              ; preds = %632, %640
  %643 = phi i32* [ %641, %640 ], [ %629, %632 ]
  %644 = sub nsw i32 %9, %634
  %645 = getelementptr inbounds i32, i32* %643, i64 1
  store i32 %644, i32* %643, align 4
  br label %778

646:                                              ; preds = %627
  br i1 %630, label %647, label %778

647:                                              ; preds = %646
  %648 = getelementptr inbounds i32, i32* %629, i64 1
  store i32 %9, i32* %629, align 4
  %649 = getelementptr inbounds i32, i32* %629, i64 2
  store i32 0, i32* %648, align 4
  br label %778

650:                                              ; preds = %376, %372, %365, %483, %433, %406, %115
  %651 = phi i32 [ %488, %483 ], [ %442, %433 ], [ %407, %406 ], [ %366, %365 ], [ %120, %115 ], [ %366, %372 ], [ %366, %376 ]
  %652 = phi i32 [ %94, %483 ], [ %94, %433 ], [ %94, %406 ], [ %367, %365 ], [ %94, %115 ], [ %367, %372 ], [ %367, %376 ]
  %653 = phi i32 [ %93, %483 ], [ %93, %433 ], [ %93, %406 ], [ %368, %365 ], [ %93, %115 ], [ %368, %372 ], [ %368, %376 ]
  %654 = phi i32 [ 0, %483 ], [ 0, %433 ], [ 0, %406 ], [ 0, %365 ], [ %122, %115 ], [ 0, %372 ], [ 0, %376 ]
  %655 = phi i8* [ %87, %483 ], [ %87, %433 ], [ %87, %406 ], [ %369, %365 ], [ %87, %115 ], [ %369, %372 ], [ %369, %376 ]
  %656 = phi i32* [ %487, %483 ], [ %441, %433 ], [ %411, %406 ], [ %48, %365 ], [ %63, %115 ], [ %370, %372 ], [ %370, %376 ]
  %657 = phi i32 [ %491, %483 ], [ %445, %433 ], [ %414, %406 ], [ %62, %365 ], [ %125, %115 ], [ %62, %372 ], [ %383, %376 ]
  %658 = phi i32* [ %489, %483 ], [ %443, %433 ], [ %412, %406 ], [ %61, %365 ], [ %123, %115 ], [ %61, %372 ], [ %384, %376 ]
  %659 = sub i32 0, %651
  %660 = icmp sgt i32 %9, %651
  br i1 %660, label %59, label %661

661:                                              ; preds = %650
  %662 = icmp eq i32 %654, 0
  br i1 %662, label %707, label %663

663:                                              ; preds = %661
  %664 = add nsw i32 %654, %651
  %665 = icmp slt i32 %664, %9
  br i1 %665, label %666, label %691

666:                                              ; preds = %663
  %667 = icmp slt i32 %653, 1
  br i1 %667, label %668, label %682

668:                                              ; preds = %666
  %669 = icmp ult i8* %655, %30
  br i1 %669, label %672, label %670

670:                                              ; preds = %668
  %671 = icmp eq i32 %653, 0
  br i1 %671, label %584, label %682

672:                                              ; preds = %668
  %673 = getelementptr inbounds i8, i8* %655, i64 1
  %674 = load i8, i8* %655, align 1
  %675 = zext i8 %674 to i64
  %676 = getelementptr inbounds i8, i8* %11, i64 %675
  %677 = load i8, i8* %676, align 1
  %678 = zext i8 %677 to i32
  %679 = shl i32 %678, %653
  %680 = or i32 %679, %652
  %681 = add nsw i32 %653, 8
  br label %682

682:                                              ; preds = %670, %672, %666
  %683 = phi i32 [ %680, %672 ], [ %652, %666 ], [ %652, %670 ]
  %684 = phi i32 [ %681, %672 ], [ %653, %666 ], [ 1, %670 ]
  %685 = phi i8* [ %673, %672 ], [ %655, %666 ], [ %655, %670 ]
  %686 = and i32 %683, 1
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %539, label %688

688:                                              ; preds = %682
  %689 = add nsw i32 %684, -1
  %690 = lshr i32 %683, 1
  br label %691

691:                                              ; preds = %663, %688
  %692 = phi i32 [ %690, %688 ], [ %652, %663 ]
  %693 = phi i32 [ %689, %688 ], [ %653, %663 ]
  %694 = phi i8* [ %685, %688 ], [ %655, %663 ]
  %695 = getelementptr inbounds i32, i32* %656, i64 1
  store i32 %654, i32* %656, align 4
  br label %707

696:                                              ; preds = %474, %492, %536, %539, %554, %569
  %697 = phi i32 [ %540, %539 ], [ %68, %536 ], [ %68, %492 ], [ %68, %474 ], [ %555, %554 ], [ %570, %569 ]
  %698 = phi i32 [ %543, %539 ], [ %538, %536 ], [ %94, %492 ], [ %94, %474 ], [ %556, %554 ], [ %571, %569 ]
  %699 = phi i32 [ %544, %539 ], [ %537, %536 ], [ %93, %492 ], [ %93, %474 ], [ %557, %554 ], [ %572, %569 ]
  %700 = phi i32 [ %541, %539 ], [ %65, %536 ], [ %65, %492 ], [ %65, %474 ], [ %558, %554 ], [ %573, %569 ]
  %701 = phi i8* [ %545, %539 ], [ %524, %536 ], [ %87, %492 ], [ %87, %474 ], [ %559, %554 ], [ %574, %569 ]
  %702 = phi i32* [ %542, %539 ], [ %505, %536 ], [ %494, %492 ], [ %63, %474 ], [ %560, %554 ], [ %575, %569 ]
  %703 = phi i32 [ %49, %539 ], [ 1, %536 ], [ %49, %492 ], [ %49, %474 ], [ %49, %554 ], [ %49, %569 ]
  %704 = icmp eq i32 %700, 0
  br i1 %704, label %707, label %705

705:                                              ; preds = %696
  %706 = getelementptr inbounds i32, i32* %702, i64 1
  store i32 %700, i32* %702, align 4
  br label %707

707:                                              ; preds = %46, %661, %691, %696, %705
  %708 = phi i32 [ %703, %705 ], [ %703, %696 ], [ %49, %691 ], [ %49, %661 ], [ %49, %46 ]
  %709 = phi i8* [ %701, %705 ], [ %701, %696 ], [ %694, %691 ], [ %655, %661 ], [ %50, %46 ]
  %710 = phi i32 [ %699, %705 ], [ %699, %696 ], [ %693, %691 ], [ %653, %661 ], [ %51, %46 ]
  %711 = phi i32 [ %698, %705 ], [ %698, %696 ], [ %692, %691 ], [ %652, %661 ], [ %52, %46 ]
  %712 = phi i32 [ %697, %705 ], [ %697, %696 ], [ %651, %691 ], [ %651, %661 ], [ 0, %46 ]
  %713 = phi i32* [ %706, %705 ], [ %702, %696 ], [ %695, %691 ], [ %656, %661 ], [ %48, %46 ]
  %714 = icmp eq i32 %712, %9
  br i1 %714, label %761, label %715

715:                                              ; preds = %707
  %716 = load i32, i32* %36, align 8
  %717 = load i8*, i8** %37, align 8
  %718 = icmp ult i32 %712, %9
  %719 = select i1 %718, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %720 = load i32, i32* %38, align 8
  %721 = and i32 %720, 1024
  %722 = icmp ne i32 %721, 0
  %723 = select i1 %722, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %724 = select i1 %722, i32* %39, i32* %40
  %725 = load i32, i32* %724, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %717, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Decode.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %719, i32 %716, i8* %723, i32 %725, i32 %712, i32 %9) #7
  %726 = icmp sgt i32 %712, %9
  %727 = icmp ugt i32* %713, %48
  %728 = and i1 %726, %727
  br i1 %728, label %729, label %738

729:                                              ; preds = %715, %729
  %730 = phi i32* [ %732, %729 ], [ %713, %715 ]
  %731 = phi i32 [ %734, %729 ], [ %712, %715 ]
  %732 = getelementptr inbounds i32, i32* %730, i64 -1
  %733 = load i32, i32* %732, align 4
  %734 = sub i32 %731, %733
  %735 = icmp sgt i32 %734, %9
  %736 = icmp ugt i32* %732, %48
  %737 = and i1 %735, %736
  br i1 %737, label %729, label %738

738:                                              ; preds = %729, %715
  %739 = phi i32 [ %712, %715 ], [ %734, %729 ]
  %740 = phi i32* [ %713, %715 ], [ %732, %729 ]
  %741 = phi i1 [ %726, %715 ], [ %735, %729 ]
  %742 = icmp slt i32 %739, %9
  br i1 %742, label %743, label %757

743:                                              ; preds = %738
  %744 = icmp sgt i32 %739, 0
  %745 = select i1 %744, i32 %739, i32 0
  %746 = ptrtoint i32* %740 to i64
  %747 = ptrtoint i32* %48 to i64
  %748 = sub i64 %746, %747
  %749 = and i64 %748, 4
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %753, label %751

751:                                              ; preds = %743
  %752 = getelementptr inbounds i32, i32* %740, i64 1
  store i32 0, i32* %740, align 4
  br label %753

753:                                              ; preds = %743, %751
  %754 = phi i32* [ %752, %751 ], [ %740, %743 ]
  %755 = sub nsw i32 %9, %745
  %756 = getelementptr inbounds i32, i32* %754, i64 1
  store i32 %755, i32* %754, align 4
  br label %761

757:                                              ; preds = %738
  br i1 %741, label %758, label %761

758:                                              ; preds = %757
  %759 = getelementptr inbounds i32, i32* %740, i64 1
  store i32 %9, i32* %740, align 4
  %760 = getelementptr inbounds i32, i32* %740, i64 2
  store i32 0, i32* %759, align 4
  br label %761

761:                                              ; preds = %707, %753, %758, %757
  %762 = phi i32* [ %756, %753 ], [ %760, %758 ], [ %740, %757 ], [ %713, %707 ]
  %763 = icmp eq i32 %708, 0
  br i1 %763, label %764, label %776

764:                                              ; preds = %761
  %765 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %41, align 8
  tail call void %765(i8* %53, i32* %48, i32* %762, i32 %9) #7
  store i32 0, i32* %762, align 4
  %766 = load i64, i64* %42, align 8
  %767 = load i64, i64* %43, align 8
  store i64 %767, i64* %42, align 8
  store i64 %766, i64* %43, align 8
  %768 = load i64, i64* %12, align 8
  %769 = getelementptr inbounds i8, i8* %53, i64 %768
  %770 = sub nsw i64 %54, %768
  %771 = load i32, i32* %36, align 8
  %772 = add nsw i32 %771, 1
  store i32 %772, i32* %36, align 8
  %773 = icmp sgt i64 %770, 0
  %774 = inttoptr i64 %767 to i32*
  %775 = inttoptr i64 %766 to i32*
  br i1 %773, label %46, label %829

776:                                              ; preds = %761
  %777 = icmp slt i32 %710, 13
  br i1 %777, label %778, label %811

778:                                              ; preds = %601, %646, %647, %642, %776
  %779 = phi i32 [ %708, %776 ], [ %49, %642 ], [ %49, %647 ], [ %49, %646 ], [ %49, %601 ]
  %780 = phi i32* [ %762, %776 ], [ %645, %642 ], [ %649, %647 ], [ %629, %646 ], [ %602, %601 ]
  %781 = phi i8* [ %709, %776 ], [ %588, %642 ], [ %588, %647 ], [ %588, %646 ], [ %588, %601 ]
  %782 = phi i32 [ %710, %776 ], [ 0, %642 ], [ 0, %647 ], [ 0, %646 ], [ 0, %601 ]
  %783 = phi i32 [ %711, %776 ], [ %586, %642 ], [ %586, %647 ], [ %586, %646 ], [ %586, %601 ]
  %784 = icmp ult i8* %781, %30
  br i1 %784, label %788, label %785

785:                                              ; preds = %778
  %786 = icmp eq i32 %782, 0
  %787 = select i1 %786, i32 0, i32 13
  br label %811

788:                                              ; preds = %778
  %789 = getelementptr inbounds i8, i8* %781, i64 1
  %790 = load i8, i8* %781, align 1
  %791 = zext i8 %790 to i64
  %792 = getelementptr inbounds i8, i8* %11, i64 %791
  %793 = load i8, i8* %792, align 1
  %794 = zext i8 %793 to i32
  %795 = shl i32 %794, %782
  %796 = or i32 %795, %783
  %797 = add nsw i32 %782, 8
  %798 = icmp slt i32 %797, 13
  br i1 %798, label %799, label %811

799:                                              ; preds = %788
  %800 = icmp ult i8* %789, %30
  br i1 %800, label %801, label %811

801:                                              ; preds = %799
  %802 = getelementptr inbounds i8, i8* %781, i64 2
  %803 = load i8, i8* %789, align 1
  %804 = zext i8 %803 to i64
  %805 = getelementptr inbounds i8, i8* %11, i64 %804
  %806 = load i8, i8* %805, align 1
  %807 = zext i8 %806 to i32
  %808 = shl i32 %807, %797
  %809 = or i32 %808, %796
  %810 = add nsw i32 %782, 16
  br label %811

811:                                              ; preds = %785, %799, %801, %788, %776
  %812 = phi i32 [ %779, %801 ], [ %779, %788 ], [ %708, %776 ], [ %779, %785 ], [ %779, %799 ]
  %813 = phi i32* [ %780, %801 ], [ %780, %788 ], [ %762, %776 ], [ %780, %785 ], [ %780, %799 ]
  %814 = phi i32 [ %809, %801 ], [ %796, %788 ], [ %711, %776 ], [ %783, %785 ], [ %796, %799 ]
  %815 = phi i32 [ %810, %801 ], [ %797, %788 ], [ %710, %776 ], [ %787, %785 ], [ 13, %799 ]
  %816 = phi i8* [ %802, %801 ], [ %789, %788 ], [ %709, %776 ], [ %781, %785 ], [ %789, %799 ]
  %817 = add nsw i32 %815, -13
  %818 = lshr i32 %814, 13
  %819 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %41, align 8
  tail call void %819(i8* %53, i32* %48, i32* %813, i32 %9) #7
  store i32 %817, i32* %22, align 4
  store i32 %818, i32* %20, align 8
  store i32 %812, i32* %24, align 8
  %820 = bitcast i8** %26 to i64*
  %821 = load i64, i64* %820, align 8
  %822 = ptrtoint i8* %816 to i64
  %823 = load i64, i64* %28, align 8
  %824 = sub i64 %821, %822
  %825 = add i64 %824, %823
  store i64 %825, i64* %28, align 8
  store i8* %816, i8** %26, align 8
  %826 = load i32, i32* %36, align 8
  %827 = icmp eq i32 %826, 0
  %828 = select i1 %827, i32 -1, i32 1
  br label %840

829:                                              ; preds = %764, %19
  %830 = phi i32 [ %21, %19 ], [ %711, %764 ]
  %831 = phi i32 [ %23, %19 ], [ %710, %764 ]
  %832 = phi i8* [ %27, %19 ], [ %709, %764 ]
  %833 = phi i32 [ %25, %19 ], [ 0, %764 ]
  store i32 %831, i32* %22, align 4
  store i32 %830, i32* %20, align 8
  store i32 %833, i32* %24, align 8
  %834 = bitcast i8** %26 to i64*
  %835 = load i64, i64* %834, align 8
  %836 = ptrtoint i8* %832 to i64
  %837 = load i64, i64* %28, align 8
  %838 = sub i64 %835, %836
  %839 = add i64 %838, %837
  store i64 %839, i64* %28, align 8
  store i8* %832, i8** %26, align 8
  br label %840

840:                                              ; preds = %829, %811, %16
  %841 = phi i32 [ -1, %16 ], [ %828, %811 ], [ 1, %829 ]
  ret i32 %841
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax4Encode(%struct.tiff*, i8*, i64, i16 zeroext) #1 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.Fax3CodecState**
  %7 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = srem i64 %2, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %4
  %13 = icmp sgt i64 %2, 0
  br i1 %13, label %14, label %31

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 10
  %16 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 3
  br label %20

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %19 = load i8*, i8** %18, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %19, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax4Encode.module, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i64 0, i64 0)) #7
  br label %31

20:                                               ; preds = %14, %20
  %21 = phi i64 [ %2, %14 ], [ %29, %20 ]
  %22 = phi i8* [ %1, %14 ], [ %28, %20 ]
  %23 = load i8*, i8** %15, align 8
  %24 = load i32, i32* %16, align 8
  tail call fastcc void @Fax3Encode2DRow(%struct.tiff* %0, i8* %22, i8* %23, i32 %24)
  %25 = load i8*, i8** %15, align 8
  %26 = load i64, i64* %8, align 8
  tail call void @_TIFFmemcpy(i8* %25, i8* %22, i64 %26) #7
  %27 = load i64, i64* %8, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 %27
  %29 = sub nsw i64 %21, %27
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %20, label %31

31:                                               ; preds = %20, %12, %17
  %32 = phi i32 [ 0, %17 ], [ 1, %12 ], [ 1, %20 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax4PostEncode(%struct.tiff*) #1 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.Fax3CodecState**
  %4 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %3, align 8
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 1, i32 12)
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 1, i32 12)
  %5 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 8
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %16

16:                                               ; preds = %8, %14
  %17 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %20, align 8
  store i8 %19, i8* %21, align 1
  %23 = load i64, i64* %9, align 8
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %9, align 8
  store i32 0, i32* %17, align 8
  store i32 8, i32* %5, align 4
  br label %25

25:                                               ; preds = %1, %16
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFInitCCITTRLE(%struct.tiff*, i32) local_unnamed_addr #1 {
  %3 = tail call fastcc i32 @InitCCITTFax3(%struct.tiff* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3DecodeRLE, i32 (%struct.tiff*, i8*, i64, i16)** %6, align 8
  %7 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3DecodeRLE, i32 (%struct.tiff*, i8*, i64, i16)** %7, align 8
  %8 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3DecodeRLE, i32 (%struct.tiff*, i8*, i64, i16)** %8, align 8
  %9 = tail call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %0, i32 65536, i32 7) #7
  br label %10

10:                                               ; preds = %2, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %2 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3DecodeRLE(%struct.tiff*, i8*, i64, i16 zeroext) #1 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.Fax3CodecState**
  %7 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = srem i64 %2, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %20 = load i8*, i8** %19, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @Fax3DecodeRLE.module, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0)) #7
  br label %381

21:                                               ; preds = %4
  %22 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 8
  %34 = load i32*, i32** %33, align 8
  %35 = icmp sgt i64 %2, 0
  br i1 %35, label %36, label %370

36:                                               ; preds = %21
  %37 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 13
  %38 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %39 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %40 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 21
  %41 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %42 = ptrtoint i32* %34 to i64
  %43 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 5
  %44 = and i32 %13, 4
  %45 = icmp eq i32 %44, 0
  %46 = and i32 %13, 8
  %47 = icmp eq i32 %46, 0
  br label %48

48:                                               ; preds = %36, %351
  %49 = phi i8* [ %1, %36 ], [ %356, %351 ]
  %50 = phi i32 [ %27, %36 ], [ %280, %351 ]
  %51 = phi i8* [ %29, %36 ], [ %354, %351 ]
  %52 = phi i32 [ %25, %36 ], [ %353, %351 ]
  %53 = phi i32 [ %23, %36 ], [ %352, %351 ]
  %54 = phi i64 [ %2, %36 ], [ %357, %351 ]
  br label %55

55:                                               ; preds = %48, %199
  %56 = phi i32 [ %183, %199 ], [ 0, %48 ]
  %57 = phi i32 [ %174, %199 ], [ %53, %48 ]
  %58 = phi i32 [ %173, %199 ], [ %52, %48 ]
  %59 = phi i8* [ %167, %199 ], [ %51, %48 ]
  %60 = phi i32* [ %202, %199 ], [ %34, %48 ]
  br label %61

61:                                               ; preds = %116, %55
  %62 = phi i32 [ %56, %55 ], [ %119, %116 ]
  %63 = phi i32 [ %57, %55 ], [ %105, %116 ]
  %64 = phi i32 [ %58, %55 ], [ %104, %116 ]
  %65 = phi i32 [ 0, %55 ], [ %120, %116 ]
  %66 = phi i8* [ %59, %55 ], [ %98, %116 ]
  %67 = icmp slt i32 %64, 12
  br i1 %67, label %68, label %95

68:                                               ; preds = %61
  %69 = icmp ult i8* %66, %32
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = icmp eq i32 %64, 0
  br i1 %71, label %203, label %95

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %66, i64 1
  %74 = load i8, i8* %66, align 1
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds i8, i8* %11, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, %64
  %80 = or i32 %79, %63
  %81 = add nsw i32 %64, 8
  %82 = icmp slt i32 %81, 12
  br i1 %82, label %83, label %95

83:                                               ; preds = %72
  %84 = icmp ult i8* %73, %32
  br i1 %84, label %85, label %95

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %66, i64 2
  %87 = load i8, i8* %73, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds i8, i8* %11, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl i32 %91, %81
  %93 = or i32 %92, %80
  %94 = add nsw i32 %64, 16
  br label %95

95:                                               ; preds = %83, %70, %85, %72, %61
  %96 = phi i32 [ %93, %85 ], [ %80, %72 ], [ %63, %61 ], [ %63, %70 ], [ %80, %83 ]
  %97 = phi i32 [ %94, %85 ], [ %81, %72 ], [ %64, %61 ], [ 12, %70 ], [ 12, %83 ]
  %98 = phi i8* [ %86, %85 ], [ %73, %72 ], [ %66, %61 ], [ %66, %70 ], [ %73, %83 ]
  %99 = and i32 %96, 4095
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %100, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = sub nsw i32 %97, %103
  %105 = lshr i32 %96, %103
  %106 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %100, i32 0
  %107 = load i8, i8* %106, align 4
  switch i8 %107, label %121 [
    i8 12, label %268
    i8 7, label %108
    i8 9, label %116
    i8 11, label %116
  ]

108:                                              ; preds = %95
  %109 = zext i32 %99 to i64
  %110 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %109, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, %65
  %113 = getelementptr inbounds i32, i32* %60, i64 1
  store i32 %112, i32* %60, align 4
  %114 = add i32 %111, %62
  %115 = icmp slt i32 %114, %9
  br i1 %115, label %130, label %279

116:                                              ; preds = %95, %95
  %117 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %100, i32 2
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %62
  %120 = add i32 %118, %65
  br label %61

121:                                              ; preds = %95
  %122 = load i32, i32* %37, align 8
  %123 = load i8*, i8** %38, align 8
  %124 = load i32, i32* %39, align 8
  %125 = and i32 %124, 1024
  %126 = icmp ne i32 %125, 0
  %127 = select i1 %126, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %128 = select i1 %126, i32* %40, i32* %41
  %129 = load i32, i32* %128, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %123, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @Fax3DecodeRLE.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %122, i8* %127, i32 %129, i32 %62) #7
  br label %268

130:                                              ; preds = %108, %185
  %131 = phi i32 [ %188, %185 ], [ %114, %108 ]
  %132 = phi i32 [ %174, %185 ], [ %105, %108 ]
  %133 = phi i32 [ %173, %185 ], [ %104, %108 ]
  %134 = phi i32 [ %189, %185 ], [ 0, %108 ]
  %135 = phi i8* [ %167, %185 ], [ %98, %108 ]
  %136 = icmp slt i32 %133, 13
  br i1 %136, label %137, label %164

137:                                              ; preds = %130
  %138 = icmp ult i8* %135, %32
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = icmp eq i32 %133, 0
  br i1 %140, label %203, label %164

141:                                              ; preds = %137
  %142 = getelementptr inbounds i8, i8* %135, i64 1
  %143 = load i8, i8* %135, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds i8, i8* %11, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = shl i32 %147, %133
  %149 = or i32 %148, %132
  %150 = add nsw i32 %133, 8
  %151 = icmp slt i32 %150, 13
  br i1 %151, label %152, label %164

152:                                              ; preds = %141
  %153 = icmp ult i8* %142, %32
  br i1 %153, label %154, label %164

154:                                              ; preds = %152
  %155 = getelementptr inbounds i8, i8* %135, i64 2
  %156 = load i8, i8* %142, align 1
  %157 = zext i8 %156 to i64
  %158 = getelementptr inbounds i8, i8* %11, i64 %157
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = shl i32 %160, %150
  %162 = or i32 %161, %149
  %163 = add nsw i32 %133, 16
  br label %164

164:                                              ; preds = %152, %139, %154, %141, %130
  %165 = phi i32 [ %162, %154 ], [ %149, %141 ], [ %132, %130 ], [ %132, %139 ], [ %149, %152 ]
  %166 = phi i32 [ %163, %154 ], [ %150, %141 ], [ %133, %130 ], [ 13, %139 ], [ 13, %152 ]
  %167 = phi i8* [ %155, %154 ], [ %142, %141 ], [ %135, %130 ], [ %135, %139 ], [ %142, %152 ]
  %168 = and i32 %165, 8191
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %169, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = sub nsw i32 %166, %172
  %174 = lshr i32 %165, %172
  %175 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %169, i32 0
  %176 = load i8, i8* %175, align 4
  switch i8 %176, label %190 [
    i8 12, label %268
    i8 8, label %177
    i8 10, label %185
    i8 11, label %185
  ]

177:                                              ; preds = %164
  %178 = zext i32 %168 to i64
  %179 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %178, i32 2
  %180 = load i32, i32* %179, align 4
  %181 = add i32 %180, %134
  %182 = getelementptr inbounds i32, i32* %60, i64 2
  store i32 %181, i32* %113, align 4
  %183 = add i32 %180, %131
  %184 = icmp slt i32 %183, %9
  br i1 %184, label %199, label %279

185:                                              ; preds = %164, %164
  %186 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %169, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, %131
  %189 = add i32 %187, %134
  br label %130

190:                                              ; preds = %164
  %191 = load i32, i32* %37, align 8
  %192 = load i8*, i8** %38, align 8
  %193 = load i32, i32* %39, align 8
  %194 = and i32 %193, 1024
  %195 = icmp ne i32 %194, 0
  %196 = select i1 %195, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %197 = select i1 %195, i32* %40, i32* %41
  %198 = load i32, i32* %197, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %192, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @Fax3DecodeRLE.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %191, i8* %196, i32 %198, i32 %131) #7
  br label %268

199:                                              ; preds = %177
  %200 = or i32 %181, %112
  %201 = icmp eq i32 %200, 0
  %202 = select i1 %201, i32* %60, i32* %182
  br label %55

203:                                              ; preds = %70, %139
  %204 = phi i32 [ %131, %139 ], [ %62, %70 ]
  %205 = phi i32 [ %132, %139 ], [ %63, %70 ]
  %206 = phi i32 [ %134, %139 ], [ %65, %70 ]
  %207 = phi i8* [ %135, %139 ], [ %66, %70 ]
  %208 = phi i32* [ %113, %139 ], [ %60, %70 ]
  %209 = load i32, i32* %37, align 8
  %210 = load i8*, i8** %38, align 8
  %211 = load i32, i32* %39, align 8
  %212 = and i32 %211, 1024
  %213 = icmp ne i32 %212, 0
  %214 = select i1 %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %215 = select i1 %213, i32* %40, i32* %41
  %216 = load i32, i32* %215, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %210, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @Fax3DecodeRLE.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0), i32 %209, i8* %214, i32 %216, i32 %204) #7
  %217 = icmp eq i32 %206, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %203
  %219 = getelementptr inbounds i32, i32* %208, i64 1
  store i32 %206, i32* %208, align 4
  br label %220

220:                                              ; preds = %203, %218
  %221 = phi i32* [ %219, %218 ], [ %208, %203 ]
  %222 = icmp eq i32 %204, %9
  br i1 %222, label %361, label %223

223:                                              ; preds = %220
  %224 = load i32, i32* %37, align 8
  %225 = load i8*, i8** %38, align 8
  %226 = icmp ult i32 %204, %9
  %227 = select i1 %226, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %228 = load i32, i32* %39, align 8
  %229 = and i32 %228, 1024
  %230 = icmp ne i32 %229, 0
  %231 = select i1 %230, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %232 = select i1 %230, i32* %40, i32* %41
  %233 = load i32, i32* %232, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %225, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @Fax3DecodeRLE.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %227, i32 %224, i8* %231, i32 %233, i32 %204, i32 %9) #7
  %234 = icmp sgt i32 %204, %9
  %235 = icmp ugt i32* %221, %34
  %236 = and i1 %234, %235
  br i1 %236, label %237, label %246

237:                                              ; preds = %223, %237
  %238 = phi i32* [ %240, %237 ], [ %221, %223 ]
  %239 = phi i32 [ %242, %237 ], [ %204, %223 ]
  %240 = getelementptr inbounds i32, i32* %238, i64 -1
  %241 = load i32, i32* %240, align 4
  %242 = sub i32 %239, %241
  %243 = icmp sgt i32 %242, %9
  %244 = icmp ugt i32* %240, %34
  %245 = and i1 %243, %244
  br i1 %245, label %237, label %246

246:                                              ; preds = %237, %223
  %247 = phi i32 [ %204, %223 ], [ %242, %237 ]
  %248 = phi i32* [ %221, %223 ], [ %240, %237 ]
  %249 = phi i1 [ %234, %223 ], [ %243, %237 ]
  %250 = icmp slt i32 %247, %9
  br i1 %250, label %251, label %264

251:                                              ; preds = %246
  %252 = icmp sgt i32 %247, 0
  %253 = select i1 %252, i32 %247, i32 0
  %254 = ptrtoint i32* %248 to i64
  %255 = sub i64 %254, %42
  %256 = and i64 %255, 4
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %260, label %258

258:                                              ; preds = %251
  %259 = getelementptr inbounds i32, i32* %248, i64 1
  store i32 0, i32* %248, align 4
  br label %260

260:                                              ; preds = %251, %258
  %261 = phi i32* [ %259, %258 ], [ %248, %251 ]
  %262 = sub nsw i32 %9, %253
  %263 = getelementptr inbounds i32, i32* %261, i64 1
  store i32 %262, i32* %261, align 4
  br label %361

264:                                              ; preds = %246
  br i1 %249, label %265, label %361

265:                                              ; preds = %264
  %266 = getelementptr inbounds i32, i32* %248, i64 1
  store i32 %9, i32* %248, align 4
  %267 = getelementptr inbounds i32, i32* %248, i64 2
  store i32 0, i32* %266, align 4
  br label %361

268:                                              ; preds = %95, %164, %121, %190
  %269 = phi i32 [ %62, %121 ], [ %131, %190 ], [ %131, %164 ], [ %62, %95 ]
  %270 = phi i32 [ %105, %121 ], [ %174, %190 ], [ %174, %164 ], [ %105, %95 ]
  %271 = phi i32 [ %104, %121 ], [ %173, %190 ], [ %173, %164 ], [ %104, %95 ]
  %272 = phi i32 [ %65, %121 ], [ %134, %190 ], [ %134, %164 ], [ %65, %95 ]
  %273 = phi i8* [ %98, %121 ], [ %167, %190 ], [ %167, %164 ], [ %98, %95 ]
  %274 = phi i32* [ %60, %121 ], [ %113, %190 ], [ %113, %164 ], [ %60, %95 ]
  %275 = phi i32 [ %50, %121 ], [ %50, %190 ], [ 1, %164 ], [ 1, %95 ]
  %276 = icmp eq i32 %272, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %268
  %278 = getelementptr inbounds i32, i32* %274, i64 1
  store i32 %272, i32* %274, align 4
  br label %279

279:                                              ; preds = %177, %108, %268, %277
  %280 = phi i32 [ %275, %277 ], [ %275, %268 ], [ %50, %108 ], [ %50, %177 ]
  %281 = phi i8* [ %273, %277 ], [ %273, %268 ], [ %167, %177 ], [ %98, %108 ]
  %282 = phi i32 [ %271, %277 ], [ %271, %268 ], [ %173, %177 ], [ %104, %108 ]
  %283 = phi i32 [ %270, %277 ], [ %270, %268 ], [ %174, %177 ], [ %105, %108 ]
  %284 = phi i32 [ %269, %277 ], [ %269, %268 ], [ %183, %177 ], [ %114, %108 ]
  %285 = phi i32* [ %278, %277 ], [ %274, %268 ], [ %182, %177 ], [ %113, %108 ]
  %286 = icmp eq i32 %284, %9
  br i1 %286, label %332, label %287

287:                                              ; preds = %279
  %288 = load i32, i32* %37, align 8
  %289 = load i8*, i8** %38, align 8
  %290 = icmp ult i32 %284, %9
  %291 = select i1 %290, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %292 = load i32, i32* %39, align 8
  %293 = and i32 %292, 1024
  %294 = icmp ne i32 %293, 0
  %295 = select i1 %294, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %296 = select i1 %294, i32* %40, i32* %41
  %297 = load i32, i32* %296, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %289, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @Fax3DecodeRLE.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %291, i32 %288, i8* %295, i32 %297, i32 %284, i32 %9) #7
  %298 = icmp sgt i32 %284, %9
  %299 = icmp ugt i32* %285, %34
  %300 = and i1 %298, %299
  br i1 %300, label %301, label %310

301:                                              ; preds = %287, %301
  %302 = phi i32* [ %304, %301 ], [ %285, %287 ]
  %303 = phi i32 [ %306, %301 ], [ %284, %287 ]
  %304 = getelementptr inbounds i32, i32* %302, i64 -1
  %305 = load i32, i32* %304, align 4
  %306 = sub i32 %303, %305
  %307 = icmp sgt i32 %306, %9
  %308 = icmp ugt i32* %304, %34
  %309 = and i1 %307, %308
  br i1 %309, label %301, label %310

310:                                              ; preds = %301, %287
  %311 = phi i32 [ %284, %287 ], [ %306, %301 ]
  %312 = phi i32* [ %285, %287 ], [ %304, %301 ]
  %313 = phi i1 [ %298, %287 ], [ %307, %301 ]
  %314 = icmp slt i32 %311, %9
  br i1 %314, label %315, label %328

315:                                              ; preds = %310
  %316 = icmp sgt i32 %311, 0
  %317 = select i1 %316, i32 %311, i32 0
  %318 = ptrtoint i32* %312 to i64
  %319 = sub i64 %318, %42
  %320 = and i64 %319, 4
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %315
  %323 = getelementptr inbounds i32, i32* %312, i64 1
  store i32 0, i32* %312, align 4
  br label %324

324:                                              ; preds = %315, %322
  %325 = phi i32* [ %323, %322 ], [ %312, %315 ]
  %326 = sub nsw i32 %9, %317
  %327 = getelementptr inbounds i32, i32* %325, i64 1
  store i32 %326, i32* %325, align 4
  br label %332

328:                                              ; preds = %310
  br i1 %313, label %329, label %332

329:                                              ; preds = %328
  %330 = getelementptr inbounds i32, i32* %312, i64 1
  store i32 %9, i32* %312, align 4
  %331 = getelementptr inbounds i32, i32* %312, i64 2
  store i32 0, i32* %330, align 4
  br label %332

332:                                              ; preds = %279, %324, %329, %328
  %333 = phi i32* [ %327, %324 ], [ %331, %329 ], [ %312, %328 ], [ %285, %279 ]
  %334 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %43, align 8
  tail call void %334(i8* %49, i32* %34, i32* %333, i32 %9) #7
  br i1 %45, label %339, label %335

335:                                              ; preds = %332
  %336 = and i32 %282, -8
  %337 = sub nsw i32 %282, %336
  %338 = lshr i32 %283, %337
  br label %351

339:                                              ; preds = %332
  br i1 %47, label %351, label %340

340:                                              ; preds = %339
  %341 = and i32 %282, -16
  %342 = sub nsw i32 %282, %341
  %343 = lshr i32 %283, %342
  %344 = icmp eq i32 %341, 0
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = ptrtoint i8* %281 to i64
  %347 = and i64 %346, 1
  %348 = icmp eq i64 %347, 0
  %349 = getelementptr inbounds i8, i8* %281, i64 1
  %350 = select i1 %348, i8* %281, i8* %349
  br label %351

351:                                              ; preds = %345, %340, %339, %335
  %352 = phi i32 [ %338, %335 ], [ %283, %339 ], [ %343, %345 ], [ %343, %340 ]
  %353 = phi i32 [ %336, %335 ], [ %282, %339 ], [ 0, %345 ], [ %341, %340 ]
  %354 = phi i8* [ %281, %335 ], [ %281, %339 ], [ %350, %345 ], [ %281, %340 ]
  %355 = load i64, i64* %14, align 8
  %356 = getelementptr inbounds i8, i8* %49, i64 %355
  %357 = sub nsw i64 %54, %355
  %358 = load i32, i32* %37, align 8
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %37, align 8
  %360 = icmp sgt i64 %357, 0
  br i1 %360, label %48, label %370

361:                                              ; preds = %220, %264, %265, %260
  %362 = phi i32* [ %263, %260 ], [ %267, %265 ], [ %248, %264 ], [ %221, %220 ]
  %363 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %43, align 8
  tail call void %363(i8* %49, i32* %34, i32* %362, i32 %9) #7
  store i32 0, i32* %24, align 4
  store i32 %205, i32* %22, align 8
  store i32 %50, i32* %26, align 8
  %364 = bitcast i8** %28 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = ptrtoint i8* %207 to i64
  %367 = load i64, i64* %30, align 8
  %368 = sub i64 %365, %366
  %369 = add i64 %368, %367
  store i64 %369, i64* %30, align 8
  store i8* %207, i8** %28, align 8
  br label %381

370:                                              ; preds = %351, %21
  %371 = phi i32 [ %23, %21 ], [ %352, %351 ]
  %372 = phi i32 [ %25, %21 ], [ %353, %351 ]
  %373 = phi i8* [ %29, %21 ], [ %354, %351 ]
  %374 = phi i32 [ %27, %21 ], [ %280, %351 ]
  store i32 %372, i32* %24, align 4
  store i32 %371, i32* %22, align 8
  store i32 %374, i32* %26, align 8
  %375 = bitcast i8** %28 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = ptrtoint i8* %373 to i64
  %378 = load i64, i64* %30, align 8
  %379 = sub i64 %376, %377
  %380 = add i64 %379, %378
  store i64 %380, i64* %30, align 8
  store i8* %373, i8** %28, align 8
  br label %381

381:                                              ; preds = %370, %361, %18
  %382 = phi i32 [ -1, %18 ], [ -1, %361 ], [ 1, %370 ]
  ret i32 %382
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @TIFFInitCCITTRLEW(%struct.tiff*, i32) local_unnamed_addr #1 {
  %3 = tail call fastcc i32 @InitCCITTFax3(%struct.tiff* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3DecodeRLE, i32 (%struct.tiff*, i8*, i64, i16)** %6, align 8
  %7 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3DecodeRLE, i32 (%struct.tiff*, i8*, i64, i16)** %7, align 8
  %8 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3DecodeRLE, i32 (%struct.tiff*, i8*, i64, i16)** %8, align 8
  %9 = tail call i32 (%struct.tiff*, i32, ...) @TIFFSetField(%struct.tiff* %0, i32 65536, i32 11) #7
  br label %10

10:                                               ; preds = %2, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %2 ]
  ret i32 %11
}

declare i8* @_TIFFmalloc(i64) local_unnamed_addr #2

declare void @_TIFFmemset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3VGetField(%struct.tiff*, i32, %struct.__va_list_tag*) #1 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %5 = bitcast i8** %4 to %struct.Fax3BaseState**
  %6 = load %struct.Fax3BaseState*, %struct.Fax3BaseState** %5, align 8
  switch i32 %1, label %128 [
    i32 65536, label %7
    i32 65540, label %27
    i32 292, label %48
    i32 293, label %48
    i32 326, label %68
    i32 327, label %88
    i32 328, label %108
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 41
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = sext i32 %11 to i64
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = add nuw nsw i32 %11, 8
  store i32 %18, i32* %10, align 8
  br label %23

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr i8, i8* %21, i64 8
  store i8* %22, i8** %20, align 8
  br label %23

23:                                               ; preds = %19, %13
  %24 = phi i8* [ %17, %13 ], [ %21, %19 ]
  %25 = bitcast i8* %24 to i32**
  %26 = load i32*, i32** %25, align 8
  store i32 %9, i32* %26, align 4
  br label %132

27:                                               ; preds = %3
  %28 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 1, i32 5
  %29 = bitcast i32* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %32, 41
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %36 = load i8*, i8** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = add nuw nsw i32 %32, 8
  store i32 %39, i32* %31, align 8
  br label %44

40:                                               ; preds = %27
  %41 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr i8, i8* %42, i64 8
  store i8* %43, i8** %41, align 8
  br label %44

44:                                               ; preds = %40, %34
  %45 = phi i8* [ %38, %34 ], [ %42, %40 ]
  %46 = bitcast i8* %45 to i64**
  %47 = load i64*, i64** %46, align 8
  store i64 %30, i64* %47, align 8
  br label %132

48:                                               ; preds = %3, %3
  %49 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 7
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp ult i32 %52, 41
  br i1 %53, label %54, label %60

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr i8, i8* %56, i64 %57
  %59 = add nuw nsw i32 %52, 8
  store i32 %59, i32* %51, align 8
  br label %64

60:                                               ; preds = %48
  %61 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr i8, i8* %62, i64 8
  store i8* %63, i8** %61, align 8
  br label %64

64:                                               ; preds = %60, %54
  %65 = phi i8* [ %58, %54 ], [ %62, %60 ]
  %66 = bitcast i8* %65 to i32**
  %67 = load i32*, i32** %66, align 8
  store i32 %50, i32* %67, align 4
  br label %132

68:                                               ; preds = %3
  %69 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 6
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp ult i32 %72, 41
  br i1 %73, label %74, label %80

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %76 = load i8*, i8** %75, align 8
  %77 = sext i32 %72 to i64
  %78 = getelementptr i8, i8* %76, i64 %77
  %79 = add nuw nsw i32 %72, 8
  store i32 %79, i32* %71, align 8
  br label %84

80:                                               ; preds = %68
  %81 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr i8, i8* %82, i64 8
  store i8* %83, i8** %81, align 8
  br label %84

84:                                               ; preds = %80, %74
  %85 = phi i8* [ %78, %74 ], [ %82, %80 ]
  %86 = bitcast i8* %85 to i32**
  %87 = load i32*, i32** %86, align 8
  store i32 %70, i32* %87, align 4
  br label %132

88:                                               ; preds = %3
  %89 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 4
  %90 = load i16, i16* %89, align 4
  %91 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp ult i32 %92, 41
  br i1 %93, label %94, label %100

94:                                               ; preds = %88
  %95 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %96 = load i8*, i8** %95, align 8
  %97 = sext i32 %92 to i64
  %98 = getelementptr i8, i8* %96, i64 %97
  %99 = add nuw nsw i32 %92, 8
  store i32 %99, i32* %91, align 8
  br label %104

100:                                              ; preds = %88
  %101 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr i8, i8* %102, i64 8
  store i8* %103, i8** %101, align 8
  br label %104

104:                                              ; preds = %100, %94
  %105 = phi i8* [ %98, %94 ], [ %102, %100 ]
  %106 = bitcast i8* %105 to i16**
  %107 = load i16*, i16** %106, align 8
  store i16 %90, i16* %107, align 2
  br label %132

108:                                              ; preds = %3
  %109 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 5
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp ult i32 %112, 41
  br i1 %113, label %114, label %120

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %116 = load i8*, i8** %115, align 8
  %117 = sext i32 %112 to i64
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = add nuw nsw i32 %112, 8
  store i32 %119, i32* %111, align 8
  br label %124

120:                                              ; preds = %108
  %121 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr i8, i8* %122, i64 8
  store i8* %123, i8** %121, align 8
  br label %124

124:                                              ; preds = %120, %114
  %125 = phi i8* [ %118, %114 ], [ %122, %120 ]
  %126 = bitcast i8* %125 to i32**
  %127 = load i32*, i32** %126, align 8
  store i32 %110, i32* %127, align 4
  br label %132

128:                                              ; preds = %3
  %129 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 8
  %130 = load i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %129, align 8
  %131 = tail call i32 %130(%struct.tiff* %0, i32 %1, %struct.__va_list_tag* %2) #7
  br label %132

132:                                              ; preds = %23, %44, %64, %84, %104, %124, %128
  %133 = phi i32 [ %131, %128 ], [ 1, %124 ], [ 1, %104 ], [ 1, %84 ], [ 1, %64 ], [ 1, %44 ], [ 1, %23 ]
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3VSetField(%struct.tiff*, i32, %struct.__va_list_tag*) #1 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %5 = bitcast i8** %4 to %struct.Fax3BaseState**
  %6 = load %struct.Fax3BaseState*, %struct.Fax3BaseState** %5, align 8
  switch i32 %1, label %152 [
    i32 65536, label %7
    i32 65540, label %26
    i32 292, label %48
    i32 293, label %71
    i32 326, label %94
    i32 327, label %113
    i32 328, label %133
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 41
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %9 to i64
  %15 = getelementptr i8, i8* %13, i64 %14
  %16 = add nuw nsw i32 %9, 8
  store i32 %16, i32* %8, align 8
  br label %21

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %19, i64 8
  store i8* %20, i8** %18, align 8
  br label %21

21:                                               ; preds = %17, %11
  %22 = phi i8* [ %15, %11 ], [ %19, %17 ]
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 1
  store i32 %24, i32* %25, align 4
  br label %174

26:                                               ; preds = %3
  %27 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %28, 41
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = add nuw nsw i32 %28, 8
  store i32 %35, i32* %27, align 8
  br label %40

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr i8, i8* %38, i64 8
  store i8* %39, i8** %37, align 8
  br label %40

40:                                               ; preds = %36, %30
  %41 = phi i8* [ %34, %30 ], [ %38, %36 ]
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast i8** %4 to %struct.Fax3CodecState**
  %45 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %44, align 8
  %46 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %45, i64 0, i32 5
  %47 = bitcast void (i8*, i32*, i32*, i32)** %46 to i64*
  store i64 %43, i64* %47, align 8
  br label %174

48:                                               ; preds = %3
  %49 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %50 = load i16, i16* %49, align 8
  %51 = icmp eq i16 %50, 3
  br i1 %51, label %52, label %156

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp ult i32 %54, 41
  br i1 %55, label %56, label %62

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %58 = load i8*, i8** %57, align 8
  %59 = sext i32 %54 to i64
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = add nuw nsw i32 %54, 8
  store i32 %61, i32* %53, align 8
  br label %66

62:                                               ; preds = %52
  %63 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr i8, i8* %64, i64 8
  store i8* %65, i8** %63, align 8
  br label %66

66:                                               ; preds = %62, %56
  %67 = phi i8* [ %60, %56 ], [ %64, %62 ]
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 7
  store i32 %69, i32* %70, align 8
  br label %156

71:                                               ; preds = %3
  %72 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %73 = load i16, i16* %72, align 8
  %74 = icmp eq i16 %73, 4
  br i1 %74, label %75, label %156

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp ult i32 %77, 41
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = sext i32 %77 to i64
  %83 = getelementptr i8, i8* %81, i64 %82
  %84 = add nuw nsw i32 %77, 8
  store i32 %84, i32* %76, align 8
  br label %89

85:                                               ; preds = %75
  %86 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr i8, i8* %87, i64 8
  store i8* %88, i8** %86, align 8
  br label %89

89:                                               ; preds = %85, %79
  %90 = phi i8* [ %83, %79 ], [ %87, %85 ]
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 7
  store i32 %92, i32* %93, align 8
  br label %156

94:                                               ; preds = %3
  %95 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp ult i32 %96, 41
  br i1 %97, label %98, label %104

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %100 = load i8*, i8** %99, align 8
  %101 = sext i32 %96 to i64
  %102 = getelementptr i8, i8* %100, i64 %101
  %103 = add nuw nsw i32 %96, 8
  store i32 %103, i32* %95, align 8
  br label %108

104:                                              ; preds = %94
  %105 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr i8, i8* %106, i64 8
  store i8* %107, i8** %105, align 8
  br label %108

108:                                              ; preds = %104, %98
  %109 = phi i8* [ %102, %98 ], [ %106, %104 ]
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 6
  store i32 %111, i32* %112, align 4
  br label %156

113:                                              ; preds = %3
  %114 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp ult i32 %115, 41
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %119 = load i8*, i8** %118, align 8
  %120 = sext i32 %115 to i64
  %121 = getelementptr i8, i8* %119, i64 %120
  %122 = add nuw nsw i32 %115, 8
  store i32 %122, i32* %114, align 8
  br label %127

123:                                              ; preds = %113
  %124 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr i8, i8* %125, i64 8
  store i8* %126, i8** %124, align 8
  br label %127

127:                                              ; preds = %123, %117
  %128 = phi i8* [ %121, %117 ], [ %125, %123 ]
  %129 = bitcast i8* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = trunc i32 %130 to i16
  %132 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 4
  store i16 %131, i16* %132, align 4
  br label %156

133:                                              ; preds = %3
  %134 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = icmp ult i32 %135, 41
  br i1 %136, label %137, label %143

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 3
  %139 = load i8*, i8** %138, align 8
  %140 = sext i32 %135 to i64
  %141 = getelementptr i8, i8* %139, i64 %140
  %142 = add nuw nsw i32 %135, 8
  store i32 %142, i32* %134, align 8
  br label %147

143:                                              ; preds = %133
  %144 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %2, i64 0, i32 2
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr i8, i8* %145, i64 8
  store i8* %146, i8** %144, align 8
  br label %147

147:                                              ; preds = %143, %137
  %148 = phi i8* [ %141, %137 ], [ %145, %143 ]
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 5
  store i32 %150, i32* %151, align 8
  br label %156

152:                                              ; preds = %3
  %153 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 9
  %154 = load i32 (%struct.tiff*, i32, %struct.__va_list_tag*)*, i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %153, align 8
  %155 = tail call i32 %154(%struct.tiff* %0, i32 %1, %struct.__va_list_tag* %2) #7
  br label %174

156:                                              ; preds = %71, %89, %48, %66, %147, %127, %108
  %157 = tail call %struct._TIFFField* @TIFFFieldWithTag(%struct.tiff* %0, i32 %1) #7
  %158 = icmp eq %struct._TIFFField* %157, null
  br i1 %158, label %174, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %struct._TIFFField, %struct._TIFFField* %157, i64 0, i32 7
  %161 = load i16, i16* %160, align 8
  %162 = zext i16 %161 to i32
  %163 = and i32 %162, 31
  %164 = zext i32 %163 to i64
  %165 = shl i64 1, %164
  %166 = lshr i32 %162, 5
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 0, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = or i64 %165, %169
  store i64 %170, i64* %168, align 8
  %171 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %172 = load i32, i32* %171, align 8
  %173 = or i32 %172, 8
  store i32 %173, i32* %171, align 8
  br label %174

174:                                              ; preds = %156, %159, %152, %40, %21
  %175 = phi i32 [ %155, %152 ], [ 1, %159 ], [ 1, %40 ], [ 1, %21 ], [ 0, %156 ]
  ret i32 %175
}

; Function Attrs: nounwind ssp uwtable
define internal void @Fax3PrintDir(%struct.tiff*, %struct._IO_FILE*, i64) #1 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %5 = bitcast i8** %4 to %struct.Fax3BaseState**
  %6 = load %struct.Fax3BaseState*, %struct.Fax3BaseState** %5, align 8
  %7 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 0, i64 2
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 512
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %53, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 4
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = tail call i64 @fwrite(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %1)
  %17 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %47, label %21

21:                                               ; preds = %15
  %22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  br label %47

23:                                               ; preds = %11
  %24 = tail call i64 @fwrite(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i64 18, i64 1, %struct._IO_FILE* %1)
  %25 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 7
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  %31 = load i32, i32* %25, align 8
  br label %32

32:                                               ; preds = %23, %29
  %33 = phi i32 [ %31, %29 ], [ %26, %23 ]
  %34 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %29 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), %23 ]
  %35 = and i32 %33, 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %34)
  %39 = load i32, i32* %25, align 8
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi i32 [ %39, %37 ], [ %33, %32 ]
  %42 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), %37 ], [ %34, %32 ]
  %43 = and i32 %41, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* %42)
  br label %47

47:                                               ; preds = %15, %40, %45, %21
  %48 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 7
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i64 %50, i64 %50)
  %52 = load i64, i64* %7, align 8
  br label %53

53:                                               ; preds = %3, %47
  %54 = phi i64 [ %8, %3 ], [ %52, %47 ]
  %55 = and i64 %54, 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %72, label %57

57:                                               ; preds = %53
  %58 = tail call i64 @fwrite(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i64 11, i64 1, %struct._IO_FILE* %1)
  %59 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 4
  %60 = load i16, i16* %59, align 4
  switch i16 %60, label %67 [
    i16 0, label %61
    i16 1, label %63
    i16 2, label %65
  ]

61:                                               ; preds = %57
  %62 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %1)
  br label %67

63:                                               ; preds = %57
  %64 = tail call i64 @fwrite(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0), i64 21, i64 1, %struct._IO_FILE* %1)
  br label %67

65:                                               ; preds = %57
  %66 = tail call i64 @fwrite(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i64 0, i64 0), i64 19, i64 1, %struct._IO_FILE* %1)
  br label %67

67:                                               ; preds = %57, %65, %63, %61
  %68 = load i16, i16* %59, align 4
  %69 = zext i16 %68 to i32
  %70 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i32 %69, i32 %69)
  %71 = load i64, i64* %7, align 8
  br label %72

72:                                               ; preds = %53, %67
  %73 = phi i64 [ %54, %53 ], [ %71, %67 ]
  %74 = and i64 %73, 4
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 6
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25, i64 0, i64 0), i64 %79)
  %81 = load i64, i64* %7, align 8
  br label %82

82:                                               ; preds = %72, %76
  %83 = phi i64 [ %73, %72 ], [ %81, %76 ]
  %84 = and i64 %83, 16
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 5
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0), i64 %89)
  br label %91

91:                                               ; preds = %82, %86
  %92 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %6, i64 0, i32 10
  %93 = load void (%struct.tiff*, %struct._IO_FILE*, i64)*, void (%struct.tiff*, %struct._IO_FILE*, i64)** %92, align 8
  %94 = icmp eq void (%struct.tiff*, %struct._IO_FILE*, i64)* %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %91
  tail call void %93(%struct.tiff* %0, %struct._IO_FILE* %1, i64 %2) #7
  br label %96

96:                                               ; preds = %91, %95
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @Fax3FixupTags(%struct.tiff* nocapture readnone) #3 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3SetupState(%struct.tiff*) #1 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.Fax3BaseState**
  %4 = load %struct.Fax3BaseState*, %struct.Fax3BaseState** %3, align 8
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 8
  %6 = load i16, i16* %5, align 4
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %10 = load i8*, i8** %9, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @Fax3SetupState.module, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27, i64 0, i64 0)) #7
  br label %114

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1024
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = tail call i64 @TIFFTileRowSize(%struct.tiff* %0) #7
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 4
  br label %22

19:                                               ; preds = %11
  %20 = tail call i64 @TIFFScanlineSize(%struct.tiff* %0) #7
  %21 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 1
  br label %22

22:                                               ; preds = %19, %16
  %23 = phi i64 [ %17, %16 ], [ %20, %19 ]
  %24 = phi i32* [ %18, %16 ], [ %21, %19 ]
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 0, i32 2
  store i64 %23, i64* %26, align 8
  %27 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 0, i32 3
  store i32 %25, i32* %27, align 8
  %28 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 1, i32 7
  %34 = bitcast i32* %33 to i32**
  store i32* null, i32** %34, align 8
  %35 = icmp ult i32 %25, -32
  %36 = add i32 %25, 31
  %37 = and i32 %36, -32
  %38 = select i1 %35, i32 %37, i32 0
  br label %49

39:                                               ; preds = %22
  %40 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %41 = load i16, i16* %40, align 8
  %42 = icmp eq i16 %41, 4
  %43 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 1, i32 7
  %44 = bitcast i32* %43 to i32**
  store i32* null, i32** %44, align 8
  %45 = icmp ult i32 %25, -32
  %46 = add i32 %25, 31
  %47 = and i32 %46, -32
  %48 = select i1 %45, i32 %47, i32 0
  br i1 %42, label %49, label %56

49:                                               ; preds = %32, %39
  %50 = phi i32 [ %38, %32 ], [ %48, %39 ]
  %51 = phi i32** [ %34, %32 ], [ %44, %39 ]
  %52 = phi i32* [ %33, %32 ], [ %43, %39 ]
  %53 = shl i32 %50, 1
  %54 = and i32 %50, 2147483616
  %55 = icmp eq i32 %54, %50
  br i1 %55, label %56, label %67

56:                                               ; preds = %49, %39
  %57 = phi i32** [ %44, %39 ], [ %51, %49 ]
  %58 = phi i32* [ %43, %39 ], [ %52, %49 ]
  %59 = phi i1 [ false, %39 ], [ true, %49 ]
  %60 = phi i32 [ %48, %39 ], [ %53, %49 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = shl i32 %60, 1
  %64 = icmp slt i32 %60, 0
  %65 = icmp eq i32 %63, 0
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %49, %62, %56
  %68 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %69, i8* %71, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0), i32 %25) #7
  br label %114

72:                                               ; preds = %62
  %73 = zext i32 %63 to i64
  %74 = tail call i8* @_TIFFCheckMalloc(%struct.tiff* %0, i64 %73, i64 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)) #7
  %75 = bitcast i32* %58 to i8**
  store i8* %74, i8** %75, align 8
  %76 = icmp eq i8* %74, null
  br i1 %76, label %114, label %77

77:                                               ; preds = %72
  %78 = shl nuw nsw i64 %73, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %74, i8 0, i64 %78, i1 false)
  %79 = bitcast i32* %58 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 1, i32 9
  %82 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %81 to i64*
  store i64 %80, i64* %82, align 8
  br i1 %59, label %83, label %87

83:                                               ; preds = %77
  %84 = load i32*, i32** %57, align 8
  %85 = zext i32 %60 to i64
  %86 = getelementptr inbounds i32, i32* %84, i64 %85
  br label %87

87:                                               ; preds = %77, %83
  %88 = phi i32* [ %86, %83 ], [ null, %77 ]
  %89 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 1, i32 8
  %90 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %89 to i32**
  store i32* %88, i32** %90, align 8
  %91 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 10
  %92 = load i16, i16* %91, align 8
  %93 = icmp eq i16 %92, 3
  br i1 %93, label %94, label %102

94:                                               ; preds = %87
  %95 = load i32, i32* %28, align 8
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 31
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Decode2D, i32 (%struct.tiff*, i8*, i64, i16)** %99, align 8
  %100 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 33
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Decode2D, i32 (%struct.tiff*, i8*, i64, i16)** %100, align 8
  %101 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 35
  store i32 (%struct.tiff*, i8*, i64, i16)* @Fax3Decode2D, i32 (%struct.tiff*, i8*, i64, i16)** %101, align 8
  br label %102

102:                                              ; preds = %94, %98, %87
  %103 = bitcast i8** %2 to %struct.Fax3CodecState**
  %104 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %103, align 8
  br i1 %59, label %105, label %112

105:                                              ; preds = %102
  %106 = tail call i8* @_TIFFmalloc(i64 %23) #7
  %107 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %104, i64 0, i32 10
  store i8* %106, i8** %107, align 8
  %108 = icmp eq i8* %106, null
  br i1 %108, label %109, label %114

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %111 = load i8*, i8** %110, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %111, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @Fax3SetupState.module, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0)) #7
  br label %114

112:                                              ; preds = %102
  %113 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %104, i64 0, i32 10
  store i8* null, i8** %113, align 8
  br label %114

114:                                              ; preds = %112, %105, %109, %72, %67, %8
  %115 = phi i32 [ 0, %8 ], [ 0, %67 ], [ 0, %72 ], [ 0, %109 ], [ 1, %105 ], [ 1, %112 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3PreDecode(%struct.tiff* nocapture readonly, i16 zeroext) #1 {
  %3 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %4 = bitcast i8** %3 to %struct.Fax3CodecState**
  %5 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %4, align 8
  %6 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 3
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 13
  %10 = load i16, i16* %9, align 2
  %11 = icmp ne i16 %10, 2
  %12 = zext i1 %11 to i32
  %13 = tail call i8* @TIFFGetBitRevTable(i32 %12) #7
  %14 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 1
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 7
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %16, align 4
  %21 = load i32*, i32** %15, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %2, %18
  %24 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 13
  store i32 0, i32* %24, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3Decode1D(%struct.tiff*, i8*, i64, i16 zeroext) #1 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.Fax3CodecState**
  %7 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = srem i64 %2, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %18 = load i8*, i8** %17, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0)) #7
  br label %457

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 8
  %32 = load i32*, i32** %31, align 8
  %33 = icmp sgt i64 %2, 0
  br i1 %33, label %34, label %446

34:                                               ; preds = %19
  %35 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 13
  %36 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %37 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %38 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 21
  %39 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %40 = ptrtoint i32* %32 to i64
  %41 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 5
  br label %42

42:                                               ; preds = %34, %407
  %43 = phi i32 [ %25, %34 ], [ %355, %407 ]
  %44 = phi i8* [ %27, %34 ], [ %356, %407 ]
  %45 = phi i32 [ %23, %34 ], [ %357, %407 ]
  %46 = phi i32 [ %21, %34 ], [ %358, %407 ]
  %47 = phi i64 [ %2, %34 ], [ %412, %407 ]
  %48 = phi i8* [ %1, %34 ], [ %411, %407 ]
  %49 = icmp eq i32 %43, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %86, %42
  %51 = phi i32 [ %46, %42 ], [ %87, %86 ]
  %52 = phi i32 [ %45, %42 ], [ %88, %86 ]
  %53 = phi i8* [ %44, %42 ], [ %89, %86 ]
  br label %95

54:                                               ; preds = %42, %92
  %55 = phi i32 [ %94, %92 ], [ %46, %42 ]
  %56 = phi i32 [ %93, %92 ], [ %45, %42 ]
  %57 = phi i8* [ %89, %92 ], [ %44, %42 ]
  %58 = icmp slt i32 %56, 11
  br i1 %58, label %59, label %86

59:                                               ; preds = %54
  %60 = icmp ult i8* %57, %30
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = icmp eq i32 %56, 0
  br i1 %62, label %416, label %86

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %57, i64 1
  %65 = load i8, i8* %57, align 1
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds i8, i8* %11, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = shl i32 %69, %56
  %71 = or i32 %70, %55
  %72 = add nsw i32 %56, 8
  %73 = icmp slt i32 %72, 11
  br i1 %73, label %74, label %86

74:                                               ; preds = %63
  %75 = icmp ult i8* %64, %30
  br i1 %75, label %76, label %86

76:                                               ; preds = %74
  %77 = getelementptr inbounds i8, i8* %57, i64 2
  %78 = load i8, i8* %64, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds i8, i8* %11, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl i32 %82, %72
  %84 = or i32 %83, %71
  %85 = add nsw i32 %56, 16
  br label %86

86:                                               ; preds = %74, %61, %76, %63, %54
  %87 = phi i32 [ %84, %76 ], [ %71, %63 ], [ %55, %54 ], [ %55, %61 ], [ %71, %74 ]
  %88 = phi i32 [ %85, %76 ], [ %72, %63 ], [ %56, %54 ], [ 11, %61 ], [ 11, %74 ]
  %89 = phi i8* [ %77, %76 ], [ %64, %63 ], [ %57, %54 ], [ %57, %61 ], [ %64, %74 ]
  %90 = and i32 %87, 2047
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %50, label %92

92:                                               ; preds = %86
  %93 = add nsw i32 %88, -1
  %94 = lshr i32 %87, 1
  br label %54

95:                                               ; preds = %50, %120
  %96 = phi i32 [ %122, %120 ], [ %51, %50 ]
  %97 = phi i32 [ %121, %120 ], [ %52, %50 ]
  %98 = phi i8* [ %117, %120 ], [ %53, %50 ]
  %99 = icmp slt i32 %97, 8
  br i1 %99, label %100, label %114

100:                                              ; preds = %95
  %101 = icmp ult i8* %98, %30
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = icmp eq i32 %97, 0
  br i1 %103, label %416, label %114

104:                                              ; preds = %100
  %105 = getelementptr inbounds i8, i8* %98, i64 1
  %106 = load i8, i8* %98, align 1
  %107 = zext i8 %106 to i64
  %108 = getelementptr inbounds i8, i8* %11, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl i32 %110, %97
  %112 = or i32 %111, %96
  %113 = add nsw i32 %97, 8
  br label %114

114:                                              ; preds = %102, %104, %95
  %115 = phi i32 [ %112, %104 ], [ %96, %95 ], [ %96, %102 ]
  %116 = phi i32 [ %113, %104 ], [ %97, %95 ], [ 8, %102 ]
  %117 = phi i8* [ %105, %104 ], [ %98, %95 ], [ %98, %102 ]
  %118 = and i32 %115, 255
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = add nsw i32 %116, -8
  %122 = lshr i32 %115, 8
  br label %95

123:                                              ; preds = %114, %123
  %124 = phi i32 [ %129, %123 ], [ %115, %114 ]
  %125 = phi i32 [ %128, %123 ], [ %116, %114 ]
  %126 = and i32 %124, 1
  %127 = icmp eq i32 %126, 0
  %128 = add nsw i32 %125, -1
  %129 = lshr i32 %124, 1
  br i1 %127, label %123, label %130

130:                                              ; preds = %123, %274
  %131 = phi i32 [ %258, %274 ], [ 0, %123 ]
  %132 = phi i32 [ %249, %274 ], [ %129, %123 ]
  %133 = phi i32 [ %248, %274 ], [ %128, %123 ]
  %134 = phi i8* [ %242, %274 ], [ %117, %123 ]
  %135 = phi i32* [ %277, %274 ], [ %32, %123 ]
  br label %136

136:                                              ; preds = %191, %130
  %137 = phi i32 [ %131, %130 ], [ %194, %191 ]
  %138 = phi i32 [ %132, %130 ], [ %180, %191 ]
  %139 = phi i32 [ %133, %130 ], [ %179, %191 ]
  %140 = phi i32 [ 0, %130 ], [ %195, %191 ]
  %141 = phi i8* [ %134, %130 ], [ %173, %191 ]
  %142 = icmp slt i32 %139, 12
  br i1 %142, label %143, label %170

143:                                              ; preds = %136
  %144 = icmp ult i8* %141, %30
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = icmp eq i32 %139, 0
  br i1 %146, label %278, label %170

147:                                              ; preds = %143
  %148 = getelementptr inbounds i8, i8* %141, i64 1
  %149 = load i8, i8* %141, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds i8, i8* %11, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = shl i32 %153, %139
  %155 = or i32 %154, %138
  %156 = add nsw i32 %139, 8
  %157 = icmp slt i32 %156, 12
  br i1 %157, label %158, label %170

158:                                              ; preds = %147
  %159 = icmp ult i8* %148, %30
  br i1 %159, label %160, label %170

160:                                              ; preds = %158
  %161 = getelementptr inbounds i8, i8* %141, i64 2
  %162 = load i8, i8* %148, align 1
  %163 = zext i8 %162 to i64
  %164 = getelementptr inbounds i8, i8* %11, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = shl i32 %166, %156
  %168 = or i32 %167, %155
  %169 = add nsw i32 %139, 16
  br label %170

170:                                              ; preds = %158, %145, %160, %147, %136
  %171 = phi i32 [ %168, %160 ], [ %155, %147 ], [ %138, %136 ], [ %138, %145 ], [ %155, %158 ]
  %172 = phi i32 [ %169, %160 ], [ %156, %147 ], [ %139, %136 ], [ 12, %145 ], [ 12, %158 ]
  %173 = phi i8* [ %161, %160 ], [ %148, %147 ], [ %141, %136 ], [ %141, %145 ], [ %148, %158 ]
  %174 = and i32 %171, 4095
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %175, i32 1
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = sub nsw i32 %172, %178
  %180 = lshr i32 %171, %178
  %181 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %175, i32 0
  %182 = load i8, i8* %181, align 4
  switch i8 %182, label %196 [
    i8 12, label %343
    i8 7, label %183
    i8 9, label %191
    i8 11, label %191
  ]

183:                                              ; preds = %170
  %184 = zext i32 %174 to i64
  %185 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %184, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = add i32 %186, %140
  %188 = getelementptr inbounds i32, i32* %135, i64 1
  store i32 %187, i32* %135, align 4
  %189 = add i32 %186, %137
  %190 = icmp slt i32 %189, %9
  br i1 %190, label %205, label %354

191:                                              ; preds = %170, %170
  %192 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %175, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = add i32 %193, %137
  %195 = add i32 %193, %140
  br label %136

196:                                              ; preds = %170
  %197 = load i32, i32* %35, align 8
  %198 = load i8*, i8** %36, align 8
  %199 = load i32, i32* %37, align 8
  %200 = and i32 %199, 1024
  %201 = icmp ne i32 %200, 0
  %202 = select i1 %201, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %203 = select i1 %201, i32* %38, i32* %39
  %204 = load i32, i32* %203, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %198, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %197, i8* %202, i32 %204, i32 %137) #7
  br label %343

205:                                              ; preds = %183, %260
  %206 = phi i32 [ %263, %260 ], [ %189, %183 ]
  %207 = phi i32 [ %249, %260 ], [ %180, %183 ]
  %208 = phi i32 [ %248, %260 ], [ %179, %183 ]
  %209 = phi i32 [ %264, %260 ], [ 0, %183 ]
  %210 = phi i8* [ %242, %260 ], [ %173, %183 ]
  %211 = icmp slt i32 %208, 13
  br i1 %211, label %212, label %239

212:                                              ; preds = %205
  %213 = icmp ult i8* %210, %30
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = icmp eq i32 %208, 0
  br i1 %215, label %278, label %239

216:                                              ; preds = %212
  %217 = getelementptr inbounds i8, i8* %210, i64 1
  %218 = load i8, i8* %210, align 1
  %219 = zext i8 %218 to i64
  %220 = getelementptr inbounds i8, i8* %11, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = shl i32 %222, %208
  %224 = or i32 %223, %207
  %225 = add nsw i32 %208, 8
  %226 = icmp slt i32 %225, 13
  br i1 %226, label %227, label %239

227:                                              ; preds = %216
  %228 = icmp ult i8* %217, %30
  br i1 %228, label %229, label %239

229:                                              ; preds = %227
  %230 = getelementptr inbounds i8, i8* %210, i64 2
  %231 = load i8, i8* %217, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds i8, i8* %11, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = shl i32 %235, %225
  %237 = or i32 %236, %224
  %238 = add nsw i32 %208, 16
  br label %239

239:                                              ; preds = %227, %214, %229, %216, %205
  %240 = phi i32 [ %237, %229 ], [ %224, %216 ], [ %207, %205 ], [ %207, %214 ], [ %224, %227 ]
  %241 = phi i32 [ %238, %229 ], [ %225, %216 ], [ %208, %205 ], [ 13, %214 ], [ 13, %227 ]
  %242 = phi i8* [ %230, %229 ], [ %217, %216 ], [ %210, %205 ], [ %210, %214 ], [ %217, %227 ]
  %243 = and i32 %240, 8191
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %244, i32 1
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = sub nsw i32 %241, %247
  %249 = lshr i32 %240, %247
  %250 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %244, i32 0
  %251 = load i8, i8* %250, align 4
  switch i8 %251, label %265 [
    i8 12, label %343
    i8 8, label %252
    i8 10, label %260
    i8 11, label %260
  ]

252:                                              ; preds = %239
  %253 = zext i32 %243 to i64
  %254 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %253, i32 2
  %255 = load i32, i32* %254, align 4
  %256 = add i32 %255, %209
  %257 = getelementptr inbounds i32, i32* %135, i64 2
  store i32 %256, i32* %188, align 4
  %258 = add i32 %255, %206
  %259 = icmp slt i32 %258, %9
  br i1 %259, label %274, label %354

260:                                              ; preds = %239, %239
  %261 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %244, i32 2
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %262, %206
  %264 = add i32 %262, %209
  br label %205

265:                                              ; preds = %239
  %266 = load i32, i32* %35, align 8
  %267 = load i8*, i8** %36, align 8
  %268 = load i32, i32* %37, align 8
  %269 = and i32 %268, 1024
  %270 = icmp ne i32 %269, 0
  %271 = select i1 %270, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %272 = select i1 %270, i32* %38, i32* %39
  %273 = load i32, i32* %272, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %267, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %266, i8* %271, i32 %273, i32 %206) #7
  br label %343

274:                                              ; preds = %252
  %275 = or i32 %256, %187
  %276 = icmp eq i32 %275, 0
  %277 = select i1 %276, i32* %135, i32* %257
  br label %130

278:                                              ; preds = %145, %214
  %279 = phi i32 [ %206, %214 ], [ %137, %145 ]
  %280 = phi i32 [ %207, %214 ], [ %138, %145 ]
  %281 = phi i32 [ %209, %214 ], [ %140, %145 ]
  %282 = phi i8* [ %210, %214 ], [ %141, %145 ]
  %283 = phi i32* [ %188, %214 ], [ %135, %145 ]
  %284 = load i32, i32* %35, align 8
  %285 = load i8*, i8** %36, align 8
  %286 = load i32, i32* %37, align 8
  %287 = and i32 %286, 1024
  %288 = icmp ne i32 %287, 0
  %289 = select i1 %288, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %290 = select i1 %288, i32* %38, i32* %39
  %291 = load i32, i32* %290, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %285, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0), i32 %284, i8* %289, i32 %291, i32 %279) #7
  %292 = icmp eq i32 %281, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %278
  %294 = getelementptr inbounds i32, i32* %283, i64 1
  store i32 %281, i32* %283, align 4
  br label %295

295:                                              ; preds = %278, %293
  %296 = phi i32* [ %294, %293 ], [ %283, %278 ]
  %297 = icmp eq i32 %279, %9
  br i1 %297, label %434, label %298

298:                                              ; preds = %295
  %299 = load i32, i32* %35, align 8
  %300 = load i8*, i8** %36, align 8
  %301 = icmp ult i32 %279, %9
  %302 = select i1 %301, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %303 = load i32, i32* %37, align 8
  %304 = and i32 %303, 1024
  %305 = icmp ne i32 %304, 0
  %306 = select i1 %305, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %307 = select i1 %305, i32* %38, i32* %39
  %308 = load i32, i32* %307, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %300, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %302, i32 %299, i8* %306, i32 %308, i32 %279, i32 %9) #7
  %309 = icmp sgt i32 %279, %9
  %310 = icmp ugt i32* %296, %32
  %311 = and i1 %309, %310
  br i1 %311, label %312, label %321

312:                                              ; preds = %298, %312
  %313 = phi i32* [ %315, %312 ], [ %296, %298 ]
  %314 = phi i32 [ %317, %312 ], [ %279, %298 ]
  %315 = getelementptr inbounds i32, i32* %313, i64 -1
  %316 = load i32, i32* %315, align 4
  %317 = sub i32 %314, %316
  %318 = icmp sgt i32 %317, %9
  %319 = icmp ugt i32* %315, %32
  %320 = and i1 %318, %319
  br i1 %320, label %312, label %321

321:                                              ; preds = %312, %298
  %322 = phi i32 [ %279, %298 ], [ %317, %312 ]
  %323 = phi i32* [ %296, %298 ], [ %315, %312 ]
  %324 = phi i1 [ %309, %298 ], [ %318, %312 ]
  %325 = icmp slt i32 %322, %9
  br i1 %325, label %326, label %339

326:                                              ; preds = %321
  %327 = icmp sgt i32 %322, 0
  %328 = select i1 %327, i32 %322, i32 0
  %329 = ptrtoint i32* %323 to i64
  %330 = sub i64 %329, %40
  %331 = and i64 %330, 4
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %335, label %333

333:                                              ; preds = %326
  %334 = getelementptr inbounds i32, i32* %323, i64 1
  store i32 0, i32* %323, align 4
  br label %335

335:                                              ; preds = %326, %333
  %336 = phi i32* [ %334, %333 ], [ %323, %326 ]
  %337 = sub nsw i32 %9, %328
  %338 = getelementptr inbounds i32, i32* %336, i64 1
  store i32 %337, i32* %336, align 4
  br label %434

339:                                              ; preds = %321
  br i1 %324, label %340, label %434

340:                                              ; preds = %339
  %341 = getelementptr inbounds i32, i32* %323, i64 1
  store i32 %9, i32* %323, align 4
  %342 = getelementptr inbounds i32, i32* %323, i64 2
  store i32 0, i32* %341, align 4
  br label %434

343:                                              ; preds = %170, %239, %196, %265
  %344 = phi i32 [ %137, %196 ], [ %206, %265 ], [ %206, %239 ], [ %137, %170 ]
  %345 = phi i32 [ %180, %196 ], [ %249, %265 ], [ %249, %239 ], [ %180, %170 ]
  %346 = phi i32 [ %179, %196 ], [ %248, %265 ], [ %248, %239 ], [ %179, %170 ]
  %347 = phi i32 [ %140, %196 ], [ %209, %265 ], [ %209, %239 ], [ %140, %170 ]
  %348 = phi i8* [ %173, %196 ], [ %242, %265 ], [ %242, %239 ], [ %173, %170 ]
  %349 = phi i32* [ %135, %196 ], [ %188, %265 ], [ %188, %239 ], [ %135, %170 ]
  %350 = phi i32 [ 0, %196 ], [ 0, %265 ], [ 1, %239 ], [ 1, %170 ]
  %351 = icmp eq i32 %347, 0
  br i1 %351, label %354, label %352

352:                                              ; preds = %343
  %353 = getelementptr inbounds i32, i32* %349, i64 1
  store i32 %347, i32* %349, align 4
  br label %354

354:                                              ; preds = %252, %183, %343, %352
  %355 = phi i32 [ %350, %352 ], [ %350, %343 ], [ 0, %183 ], [ 0, %252 ]
  %356 = phi i8* [ %348, %352 ], [ %348, %343 ], [ %242, %252 ], [ %173, %183 ]
  %357 = phi i32 [ %346, %352 ], [ %346, %343 ], [ %248, %252 ], [ %179, %183 ]
  %358 = phi i32 [ %345, %352 ], [ %345, %343 ], [ %249, %252 ], [ %180, %183 ]
  %359 = phi i32 [ %344, %352 ], [ %344, %343 ], [ %258, %252 ], [ %189, %183 ]
  %360 = phi i32* [ %353, %352 ], [ %349, %343 ], [ %257, %252 ], [ %188, %183 ]
  %361 = icmp eq i32 %359, %9
  br i1 %361, label %407, label %362

362:                                              ; preds = %354
  %363 = load i32, i32* %35, align 8
  %364 = load i8*, i8** %36, align 8
  %365 = icmp ult i32 %359, %9
  %366 = select i1 %365, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %367 = load i32, i32* %37, align 8
  %368 = and i32 %367, 1024
  %369 = icmp ne i32 %368, 0
  %370 = select i1 %369, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %371 = select i1 %369, i32* %38, i32* %39
  %372 = load i32, i32* %371, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %364, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %366, i32 %363, i8* %370, i32 %372, i32 %359, i32 %9) #7
  %373 = icmp sgt i32 %359, %9
  %374 = icmp ugt i32* %360, %32
  %375 = and i1 %373, %374
  br i1 %375, label %376, label %385

376:                                              ; preds = %362, %376
  %377 = phi i32* [ %379, %376 ], [ %360, %362 ]
  %378 = phi i32 [ %381, %376 ], [ %359, %362 ]
  %379 = getelementptr inbounds i32, i32* %377, i64 -1
  %380 = load i32, i32* %379, align 4
  %381 = sub i32 %378, %380
  %382 = icmp sgt i32 %381, %9
  %383 = icmp ugt i32* %379, %32
  %384 = and i1 %382, %383
  br i1 %384, label %376, label %385

385:                                              ; preds = %376, %362
  %386 = phi i32 [ %359, %362 ], [ %381, %376 ]
  %387 = phi i32* [ %360, %362 ], [ %379, %376 ]
  %388 = phi i1 [ %373, %362 ], [ %382, %376 ]
  %389 = icmp slt i32 %386, %9
  br i1 %389, label %390, label %403

390:                                              ; preds = %385
  %391 = icmp sgt i32 %386, 0
  %392 = select i1 %391, i32 %386, i32 0
  %393 = ptrtoint i32* %387 to i64
  %394 = sub i64 %393, %40
  %395 = and i64 %394, 4
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %399, label %397

397:                                              ; preds = %390
  %398 = getelementptr inbounds i32, i32* %387, i64 1
  store i32 0, i32* %387, align 4
  br label %399

399:                                              ; preds = %390, %397
  %400 = phi i32* [ %398, %397 ], [ %387, %390 ]
  %401 = sub nsw i32 %9, %392
  %402 = getelementptr inbounds i32, i32* %400, i64 1
  store i32 %401, i32* %400, align 4
  br label %407

403:                                              ; preds = %385
  br i1 %388, label %404, label %407

404:                                              ; preds = %403
  %405 = getelementptr inbounds i32, i32* %387, i64 1
  store i32 %9, i32* %387, align 4
  %406 = getelementptr inbounds i32, i32* %387, i64 2
  store i32 0, i32* %405, align 4
  br label %407

407:                                              ; preds = %354, %399, %404, %403
  %408 = phi i32* [ %402, %399 ], [ %406, %404 ], [ %387, %403 ], [ %360, %354 ]
  %409 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %41, align 8
  tail call void %409(i8* %48, i32* %32, i32* %408, i32 %9) #7
  %410 = load i64, i64* %12, align 8
  %411 = getelementptr inbounds i8, i8* %48, i64 %410
  %412 = sub nsw i64 %47, %410
  %413 = load i32, i32* %35, align 8
  %414 = add nsw i32 %413, 1
  store i32 %414, i32* %35, align 8
  %415 = icmp sgt i64 %412, 0
  br i1 %415, label %42, label %446

416:                                              ; preds = %61, %102
  %417 = phi i32 [ %43, %102 ], [ 0, %61 ]
  %418 = phi i32 [ %96, %102 ], [ %55, %61 ]
  %419 = phi i8* [ %98, %102 ], [ %57, %61 ]
  %420 = icmp eq i32 %9, 0
  br i1 %420, label %434, label %421

421:                                              ; preds = %416
  %422 = load i32, i32* %35, align 8
  %423 = load i8*, i8** %36, align 8
  %424 = load i32, i32* %37, align 8
  %425 = and i32 %424, 1024
  %426 = icmp ne i32 %425, 0
  %427 = select i1 %426, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %428 = select i1 %426, i32* %38, i32* %39
  %429 = load i32, i32* %428, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %423, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode1D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i32 %422, i8* %427, i32 %429, i32 0, i32 %9) #7
  %430 = icmp sgt i32 %9, 0
  %431 = getelementptr inbounds i32, i32* %32, i64 1
  store i32 %9, i32* %32, align 4
  br i1 %430, label %434, label %432

432:                                              ; preds = %421
  %433 = getelementptr inbounds i32, i32* %32, i64 2
  store i32 0, i32* %431, align 4
  br label %434

434:                                              ; preds = %421, %416, %295, %432, %339, %340, %335
  %435 = phi i32 [ %418, %432 ], [ %418, %416 ], [ %280, %335 ], [ %280, %340 ], [ %280, %339 ], [ %280, %295 ], [ %418, %421 ]
  %436 = phi i8* [ %419, %432 ], [ %419, %416 ], [ %282, %335 ], [ %282, %340 ], [ %282, %339 ], [ %282, %295 ], [ %419, %421 ]
  %437 = phi i32* [ %433, %432 ], [ %32, %416 ], [ %338, %335 ], [ %342, %340 ], [ %323, %339 ], [ %296, %295 ], [ %431, %421 ]
  %438 = phi i32 [ %417, %432 ], [ %417, %416 ], [ 0, %335 ], [ 0, %340 ], [ 0, %339 ], [ 0, %295 ], [ %417, %421 ]
  %439 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %41, align 8
  tail call void %439(i8* %48, i32* %32, i32* %437, i32 %9) #7
  store i32 0, i32* %22, align 4
  store i32 %435, i32* %20, align 8
  store i32 %438, i32* %24, align 8
  %440 = bitcast i8** %26 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = ptrtoint i8* %436 to i64
  %443 = load i64, i64* %28, align 8
  %444 = sub i64 %441, %442
  %445 = add i64 %444, %443
  store i64 %445, i64* %28, align 8
  store i8* %436, i8** %26, align 8
  br label %457

446:                                              ; preds = %407, %19
  %447 = phi i32 [ %21, %19 ], [ %358, %407 ]
  %448 = phi i32 [ %23, %19 ], [ %357, %407 ]
  %449 = phi i8* [ %27, %19 ], [ %356, %407 ]
  %450 = phi i32 [ %25, %19 ], [ %355, %407 ]
  store i32 %448, i32* %22, align 4
  store i32 %447, i32* %20, align 8
  store i32 %450, i32* %24, align 8
  %451 = bitcast i8** %26 to i64*
  %452 = load i64, i64* %451, align 8
  %453 = ptrtoint i8* %449 to i64
  %454 = load i64, i64* %28, align 8
  %455 = sub i64 %452, %453
  %456 = add i64 %455, %454
  store i64 %456, i64* %28, align 8
  store i8* %449, i8** %26, align 8
  br label %457

457:                                              ; preds = %446, %434, %16
  %458 = phi i32 [ -1, %16 ], [ -1, %434 ], [ 1, %446 ]
  ret i32 %458
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3PreEncode(%struct.tiff* nocapture readonly, i16 zeroext) #1 {
  %3 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %4 = bitcast i8** %3 to %struct.Fax3CodecState**
  %5 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %4, align 8
  %6 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 3
  store i32 8, i32* %6, align 4
  %7 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 9
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 10
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 0, i32 2
  %14 = load i64, i64* %13, align 8
  tail call void @_TIFFmemset(i8* nonnull %10, i32 0, i64 %14) #7
  br label %15

15:                                               ; preds = %2, %12
  %16 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 0, i32 7
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 22
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 9, i32 23
  %24 = load i16, i16* %23, align 8
  %25 = icmp eq i16 %24, 3
  %26 = fmul float %22, 0x400451EB80000000
  %27 = select i1 %25, float %26, float %22
  %28 = fcmp ogt float %27, 1.500000e+02
  %29 = select i1 %28, i32 4, i32 2
  %30 = add nsw i32 %29, -1
  br label %31

31:                                               ; preds = %15, %20
  %32 = phi i32 [ %29, %20 ], [ 0, %15 ]
  %33 = phi i32 [ %30, %20 ], [ 0, %15 ]
  %34 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 12
  store i32 %32, i32* %34, align 4
  %35 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 11
  store i32 %33, i32* %35, align 8
  %36 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %5, i64 0, i32 13
  store i32 0, i32* %36, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3PostEncode(%struct.tiff*) #1 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.Fax3CodecState**
  %4 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %3, align 8
  %5 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 8
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %16

16:                                               ; preds = %8, %14
  %17 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %20, align 8
  store i8 %19, i8* %21, align 1
  %23 = load i64, i64* %9, align 8
  %24 = add nsw i64 %23, 1
  store i64 %24, i64* %9, align 8
  store i32 0, i32* %17, align 8
  store i32 8, i32* %5, align 4
  br label %25

25:                                               ; preds = %1, %16
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3Encode(%struct.tiff*, i8*, i64, i16 zeroext) #1 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.Fax3CodecState**
  %7 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = srem i64 %2, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %4
  %13 = icmp sgt i64 %2, 0
  br i1 %13, label %14, label %201

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %19 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 7
  %20 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 9
  %21 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 10
  %22 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 11
  %24 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 12
  br label %28

25:                                               ; preds = %4
  %26 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %27 = load i8*, i8** %26, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @Fax3Encode.module, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i64 0, i64 0)) #7
  br label %201

28:                                               ; preds = %14, %196
  %29 = phi i64 [ %2, %14 ], [ %199, %196 ]
  %30 = phi i8* [ %1, %14 ], [ %198, %196 ]
  %31 = load i32, i32* %15, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %170

34:                                               ; preds = %28
  %35 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %36 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %35, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %35, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %35, i64 0, i32 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %95, label %44

44:                                               ; preds = %34
  %45 = icmp eq i32 %37, 4
  br i1 %45, label %95, label %46

46:                                               ; preds = %44
  %47 = icmp slt i32 %37, 4
  %48 = select i1 %47, i32 4, i32 -4
  %49 = add nsw i32 %48, %37
  %50 = icmp ugt i32 %49, %37
  br i1 %50, label %51, label %77

51:                                               ; preds = %46
  %52 = trunc i32 %39 to i8
  %53 = load i64, i64* %16, align 8
  %54 = load i64, i64* %17, align 8
  %55 = icmp slt i64 %53, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %58

58:                                               ; preds = %56, %51
  %59 = load i8*, i8** %18, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  store i8* %60, i8** %18, align 8
  store i8 %52, i8* %59, align 1
  %61 = load i64, i64* %16, align 8
  %62 = add nsw i64 %61, 1
  store i64 %62, i64* %16, align 8
  br i1 %47, label %77, label %63

63:                                               ; preds = %58, %71
  %64 = phi i64 [ %75, %71 ], [ %62, %58 ]
  %65 = phi i32 [ %66, %71 ], [ %48, %58 ]
  %66 = add i32 %65, -8
  %67 = load i64, i64* %17, align 8
  %68 = icmp slt i64 %64, %67
  br i1 %68, label %71, label %69

69:                                               ; preds = %63
  %70 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %71

71:                                               ; preds = %69, %63
  %72 = load i8*, i8** %18, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  store i8* %73, i8** %18, align 8
  store i8 0, i8* %72, align 1
  %74 = load i64, i64* %16, align 8
  %75 = add nsw i64 %74, 1
  store i64 %75, i64* %16, align 8
  %76 = icmp ugt i32 %66, 8
  br i1 %76, label %63, label %77, !llvm.loop !5

77:                                               ; preds = %58, %71, %46
  %78 = phi i32 [ %37, %46 ], [ 8, %71 ], [ 8, %58 ]
  %79 = phi i32 [ %39, %46 ], [ 0, %71 ], [ 0, %58 ]
  %80 = phi i32 [ %49, %46 ], [ %48, %58 ], [ %66, %71 ]
  %81 = sub i32 %78, %80
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %77
  %84 = load i64, i64* %16, align 8
  %85 = load i64, i64* %17, align 8
  %86 = icmp slt i64 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %89

89:                                               ; preds = %87, %83
  %90 = trunc i32 %79 to i8
  %91 = load i8*, i8** %18, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  store i8* %92, i8** %18, align 8
  store i8 %90, i8* %91, align 1
  %93 = load i64, i64* %16, align 8
  %94 = add nsw i64 %93, 1
  store i64 %94, i64* %16, align 8
  br label %95

95:                                               ; preds = %89, %77, %44, %34
  %96 = phi i32 [ %37, %34 ], [ 8, %89 ], [ %81, %77 ], [ 4, %44 ]
  %97 = phi i32 [ %39, %34 ], [ 0, %89 ], [ %79, %77 ], [ %39, %44 ]
  %98 = load i32, i32* %40, align 8
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %35, i64 0, i32 9
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  %105 = zext i1 %104 to i32
  %106 = or i32 %105, 2
  br label %107

107:                                              ; preds = %101, %95
  %108 = phi i32 [ %106, %101 ], [ 1, %95 ]
  %109 = phi i32 [ 13, %101 ], [ 12, %95 ]
  %110 = icmp ugt i32 %109, %96
  br i1 %110, label %111, label %143

111:                                              ; preds = %107
  %112 = load i64, i64* %16, align 8
  %113 = sub i32 %109, %96
  %114 = lshr i32 %108, %113
  %115 = or i32 %114, %97
  %116 = load i64, i64* %17, align 8
  %117 = icmp slt i64 %112, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %111
  %119 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %120

120:                                              ; preds = %118, %111
  %121 = trunc i32 %115 to i8
  %122 = load i8*, i8** %18, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  store i8* %123, i8** %18, align 8
  store i8 %121, i8* %122, align 1
  %124 = load i64, i64* %16, align 8
  %125 = add nsw i64 %124, 1
  store i64 %125, i64* %16, align 8
  %126 = icmp ugt i32 %113, 8
  br i1 %126, label %127, label %143

127:                                              ; preds = %120, %136
  %128 = phi i64 [ %141, %136 ], [ %125, %120 ]
  %129 = phi i32 [ %130, %136 ], [ %113, %120 ]
  %130 = add i32 %129, -8
  %131 = lshr i32 %108, %130
  %132 = load i64, i64* %17, align 8
  %133 = icmp slt i64 %128, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %127
  %135 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %136

136:                                              ; preds = %134, %127
  %137 = trunc i32 %131 to i8
  %138 = load i8*, i8** %18, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 1
  store i8* %139, i8** %18, align 8
  store i8 %137, i8* %138, align 1
  %140 = load i64, i64* %16, align 8
  %141 = add nsw i64 %140, 1
  store i64 %141, i64* %16, align 8
  %142 = icmp ugt i32 %130, 8
  br i1 %142, label %127, label %143, !llvm.loop !6

143:                                              ; preds = %120, %136, %107
  %144 = phi i32 [ %96, %107 ], [ 8, %136 ], [ 8, %120 ]
  %145 = phi i32 [ %97, %107 ], [ 0, %136 ], [ 0, %120 ]
  %146 = phi i32 [ %109, %107 ], [ %113, %120 ], [ %130, %136 ]
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [9 x i32], [9 x i32]* @_msbmask, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, %108
  %151 = sub i32 %144, %146
  %152 = shl i32 %150, %151
  %153 = or i32 %152, %145
  %154 = icmp eq i32 %151, 0
  br i1 %154, label %155, label %167

155:                                              ; preds = %143
  %156 = load i64, i64* %16, align 8
  %157 = load i64, i64* %17, align 8
  %158 = icmp slt i64 %156, %157
  br i1 %158, label %161, label %159

159:                                              ; preds = %155
  %160 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %161

161:                                              ; preds = %159, %155
  %162 = trunc i32 %153 to i8
  %163 = load i8*, i8** %18, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 1
  store i8* %164, i8** %18, align 8
  store i8 %162, i8* %163, align 1
  %165 = load i64, i64* %16, align 8
  %166 = add nsw i64 %165, 1
  store i64 %166, i64* %16, align 8
  br label %167

167:                                              ; preds = %143, %161
  %168 = phi i32 [ 8, %161 ], [ %151, %143 ]
  %169 = phi i32 [ 0, %161 ], [ %153, %143 ]
  store i32 %169, i32* %38, align 8
  store i32 %168, i32* %36, align 4
  br label %170

170:                                              ; preds = %167, %28
  %171 = load i32, i32* %19, align 8
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %194, label %174

174:                                              ; preds = %170
  %175 = load i32, i32* %20, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %174
  %178 = load i32, i32* %22, align 8
  tail call fastcc void @Fax3Encode1DRow(%struct.tiff* %0, i8* %30, i32 %178)
  store i32 1, i32* %20, align 8
  %179 = load i32, i32* %23, align 8
  br label %185

180:                                              ; preds = %174
  %181 = load i8*, i8** %21, align 8
  %182 = load i32, i32* %22, align 8
  tail call fastcc void @Fax3Encode2DRow(%struct.tiff* %0, i8* %30, i8* %181, i32 %182)
  %183 = load i32, i32* %23, align 8
  %184 = add nsw i32 %183, -1
  store i32 %184, i32* %23, align 8
  br label %185

185:                                              ; preds = %180, %177
  %186 = phi i32 [ %184, %180 ], [ %179, %177 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %185
  store i32 0, i32* %20, align 8
  %189 = load i32, i32* %24, align 4
  %190 = add nsw i32 %189, -1
  store i32 %190, i32* %23, align 8
  br label %196

191:                                              ; preds = %185
  %192 = load i8*, i8** %21, align 8
  %193 = load i64, i64* %8, align 8
  tail call void @_TIFFmemcpy(i8* %192, i8* %30, i64 %193) #7
  br label %196

194:                                              ; preds = %170
  %195 = load i32, i32* %22, align 8
  tail call fastcc void @Fax3Encode1DRow(%struct.tiff* %0, i8* %30, i32 %195)
  br label %196

196:                                              ; preds = %194, %188, %191
  %197 = load i64, i64* %8, align 8
  %198 = getelementptr inbounds i8, i8* %30, i64 %197
  %199 = sub nsw i64 %29, %197
  %200 = icmp sgt i64 %199, 0
  br i1 %200, label %28, label %201

201:                                              ; preds = %196, %12, %25
  %202 = phi i32 [ 0, %25 ], [ 1, %12 ], [ 1, %196 ]
  ret i32 %202
}

; Function Attrs: nounwind ssp uwtable
define internal void @Fax3Close(%struct.tiff*) #1 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.Fax3BaseState**
  %4 = load %struct.Fax3BaseState*, %struct.Fax3BaseState** %3, align 8
  %5 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %46

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.Fax3BaseState* %4 to %struct.Fax3CodecState*
  %15 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 1, i32 10
  %21 = bitcast void (%struct.tiff*, %struct._IO_FILE*, i64)** %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  %24 = zext i1 %23 to i32
  %25 = or i32 %24, 2
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ %25, %19 ], [ 1, %13 ]
  %28 = phi i32 [ 13, %19 ], [ 12, %13 ]
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %27, i32 %28)
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %27, i32 %28)
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %27, i32 %28)
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %27, i32 %28)
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %27, i32 %28)
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %27, i32 %28)
  %29 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  %35 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %36

36:                                               ; preds = %26, %34
  %37 = getelementptr inbounds %struct.Fax3BaseState, %struct.Fax3BaseState* %4, i64 1, i32 2
  %38 = bitcast i64* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = trunc i32 %39 to i8
  %41 = load i8*, i8** %10, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  store i8* %42, i8** %10, align 8
  store i8 %40, i8* %41, align 1
  %43 = load i64, i64* %29, align 8
  %44 = add nsw i64 %43, 1
  store i64 %44, i64* %29, align 8
  store i32 0, i32* %38, align 8
  %45 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %14, i64 0, i32 3
  store i32 8, i32* %45, align 4
  br label %46

46:                                               ; preds = %9, %36, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @Fax3Cleanup(%struct.tiff*) #1 {
  %2 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %3 = bitcast i8** %2 to %struct.Fax3CodecState**
  %4 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %3, align 8
  %5 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 0, i32 8
  %6 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 65
  %9 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 65, i32 1
  %10 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 0, i32 9
  %12 = bitcast i32 (%struct.tiff*, i32, %struct.__va_list_tag*)** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.TIFFTagMethods* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 0, i32 10
  %16 = bitcast void (%struct.tiff*, %struct._IO_FILE*, i64)** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 65, i32 2
  %19 = bitcast void (%struct.tiff*, %struct._IO_FILE*, i64)** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 6
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %1
  %24 = bitcast i32* %21 to i8*
  tail call void @_TIFFfree(i8* nonnull %24) #7
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %4, i64 0, i32 10
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_TIFFfree(i8* nonnull %27) #7
  br label %30

30:                                               ; preds = %25, %29
  %31 = load i8*, i8** %2, align 8
  tail call void @_TIFFfree(i8* %31) #7
  store i8* null, i8** %2, align 8
  tail call void @_TIFFSetDefaultCompressionState(%struct.tiff* %0) #7
  ret void
}

declare %struct._TIFFField* @TIFFFieldWithTag(%struct.tiff*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #4

declare i64 @TIFFTileRowSize(%struct.tiff*) local_unnamed_addr #2

declare i64 @TIFFScanlineSize(%struct.tiff*) local_unnamed_addr #2

declare i8* @_TIFFCheckMalloc(%struct.tiff*, i64, i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define internal i32 @Fax3Decode2D(%struct.tiff*, i8*, i64, i16 zeroext) #1 {
  %5 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %6 = bitcast i8** %5 to %struct.Fax3CodecState**
  %7 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %6, align 8
  %8 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = srem i64 %2, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %18 = load i8*, i8** %17, align 8
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31, i64 0, i64 0)) #7
  br label %1201

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = icmp sgt i64 %2, 0
  br i1 %31, label %32, label %1190

32:                                               ; preds = %19
  %33 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 8
  %34 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 7
  %35 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 13
  %36 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 55
  %37 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 3
  %38 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 21
  %39 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 15
  %40 = icmp sgt i32 %9, 0
  %41 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %7, i64 0, i32 5
  %42 = bitcast i32** %33 to i64*
  %43 = bitcast i32** %34 to i64*
  %44 = load i32*, i32** %33, align 8
  br label %45

45:                                               ; preds = %32, %1145
  %46 = phi i32* [ %44, %32 ], [ %1160, %1145 ]
  %47 = phi i32 [ %25, %32 ], [ %1150, %1145 ]
  %48 = phi i8* [ %27, %32 ], [ %1148, %1145 ]
  %49 = phi i32 [ %23, %32 ], [ %1147, %1145 ]
  %50 = phi i32 [ %21, %32 ], [ %1146, %1145 ]
  %51 = phi i8* [ %1, %32 ], [ %1155, %1145 ]
  %52 = phi i64 [ %2, %32 ], [ %1156, %1145 ]
  %53 = icmp eq i32 %47, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %90, %45
  %55 = phi i32 [ %50, %45 ], [ %91, %90 ]
  %56 = phi i32 [ %49, %45 ], [ %92, %90 ]
  %57 = phi i8* [ %48, %45 ], [ %93, %90 ]
  br label %99

58:                                               ; preds = %45, %96
  %59 = phi i32 [ %98, %96 ], [ %50, %45 ]
  %60 = phi i32 [ %97, %96 ], [ %49, %45 ]
  %61 = phi i8* [ %93, %96 ], [ %48, %45 ]
  %62 = icmp slt i32 %60, 11
  br i1 %62, label %63, label %90

63:                                               ; preds = %58
  %64 = icmp ult i8* %61, %30
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = icmp eq i32 %60, 0
  br i1 %66, label %1161, label %90

67:                                               ; preds = %63
  %68 = getelementptr inbounds i8, i8* %61, i64 1
  %69 = load i8, i8* %61, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds i8, i8* %11, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl i32 %73, %60
  %75 = or i32 %74, %59
  %76 = add nsw i32 %60, 8
  %77 = icmp slt i32 %76, 11
  br i1 %77, label %78, label %90

78:                                               ; preds = %67
  %79 = icmp ult i8* %68, %30
  br i1 %79, label %80, label %90

80:                                               ; preds = %78
  %81 = getelementptr inbounds i8, i8* %61, i64 2
  %82 = load i8, i8* %68, align 1
  %83 = zext i8 %82 to i64
  %84 = getelementptr inbounds i8, i8* %11, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl i32 %86, %76
  %88 = or i32 %87, %75
  %89 = add nsw i32 %60, 16
  br label %90

90:                                               ; preds = %78, %65, %80, %67, %58
  %91 = phi i32 [ %88, %80 ], [ %75, %67 ], [ %59, %58 ], [ %59, %65 ], [ %75, %78 ]
  %92 = phi i32 [ %89, %80 ], [ %76, %67 ], [ %60, %58 ], [ 11, %65 ], [ 11, %78 ]
  %93 = phi i8* [ %81, %80 ], [ %68, %67 ], [ %61, %58 ], [ %61, %65 ], [ %68, %78 ]
  %94 = and i32 %91, 2047
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %54, label %96

96:                                               ; preds = %90
  %97 = add nsw i32 %92, -1
  %98 = lshr i32 %91, 1
  br label %58

99:                                               ; preds = %54, %124
  %100 = phi i32 [ %126, %124 ], [ %55, %54 ]
  %101 = phi i32 [ %125, %124 ], [ %56, %54 ]
  %102 = phi i8* [ %121, %124 ], [ %57, %54 ]
  %103 = icmp slt i32 %101, 8
  br i1 %103, label %104, label %118

104:                                              ; preds = %99
  %105 = icmp ult i8* %102, %30
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = icmp eq i32 %101, 0
  br i1 %107, label %1161, label %118

108:                                              ; preds = %104
  %109 = getelementptr inbounds i8, i8* %102, i64 1
  %110 = load i8, i8* %102, align 1
  %111 = zext i8 %110 to i64
  %112 = getelementptr inbounds i8, i8* %11, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = shl i32 %114, %101
  %116 = or i32 %115, %100
  %117 = add nsw i32 %101, 8
  br label %118

118:                                              ; preds = %106, %108, %99
  %119 = phi i32 [ %116, %108 ], [ %100, %99 ], [ %100, %106 ]
  %120 = phi i32 [ %117, %108 ], [ %101, %99 ], [ 8, %106 ]
  %121 = phi i8* [ %109, %108 ], [ %102, %99 ], [ %102, %106 ]
  %122 = and i32 %119, 255
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = add nsw i32 %120, -8
  %126 = lshr i32 %119, 8
  br label %99

127:                                              ; preds = %118, %127
  %128 = phi i32 [ %133, %127 ], [ %119, %118 ]
  %129 = phi i32 [ %132, %127 ], [ %120, %118 ]
  %130 = and i32 %128, 1
  %131 = icmp eq i32 %130, 0
  %132 = add nsw i32 %129, -1
  %133 = lshr i32 %128, 1
  br i1 %131, label %127, label %134

134:                                              ; preds = %127
  %135 = icmp slt i32 %129, 2
  br i1 %135, label %136, label %150

136:                                              ; preds = %134
  %137 = icmp ult i8* %121, %30
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = icmp eq i32 %132, 0
  br i1 %139, label %1161, label %150

140:                                              ; preds = %136
  %141 = getelementptr inbounds i8, i8* %121, i64 1
  %142 = load i8, i8* %121, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds i8, i8* %11, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = shl i32 %146, %132
  %148 = or i32 %147, %133
  %149 = add nsw i32 %129, 7
  br label %150

150:                                              ; preds = %138, %140, %134
  %151 = phi i32 [ %148, %140 ], [ %133, %134 ], [ %133, %138 ]
  %152 = phi i32 [ %149, %140 ], [ %132, %134 ], [ 1, %138 ]
  %153 = phi i8* [ %141, %140 ], [ %121, %134 ], [ %121, %138 ]
  %154 = and i32 %151, 1
  %155 = add nsw i32 %152, -1
  %156 = lshr i32 %151, 1
  %157 = load i32*, i32** %34, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 1
  %159 = load i32, i32* %157, align 4
  %160 = icmp eq i32 %154, 0
  br i1 %160, label %161, label %164

161:                                              ; preds = %150
  br i1 %40, label %162, label %1091

162:                                              ; preds = %161
  %163 = ptrtoint i32* %46 to i64
  br label %443

164:                                              ; preds = %150, %308
  %165 = phi i32 [ %292, %308 ], [ 0, %150 ]
  %166 = phi i32 [ %283, %308 ], [ %156, %150 ]
  %167 = phi i32 [ %282, %308 ], [ %155, %150 ]
  %168 = phi i8* [ %276, %308 ], [ %153, %150 ]
  %169 = phi i32* [ %311, %308 ], [ %46, %150 ]
  br label %170

170:                                              ; preds = %225, %164
  %171 = phi i32 [ %165, %164 ], [ %228, %225 ]
  %172 = phi i32 [ %166, %164 ], [ %214, %225 ]
  %173 = phi i32 [ %167, %164 ], [ %213, %225 ]
  %174 = phi i32 [ 0, %164 ], [ %229, %225 ]
  %175 = phi i8* [ %168, %164 ], [ %207, %225 ]
  %176 = icmp slt i32 %173, 12
  br i1 %176, label %177, label %204

177:                                              ; preds = %170
  %178 = icmp ult i8* %175, %30
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = icmp eq i32 %173, 0
  br i1 %180, label %312, label %204

181:                                              ; preds = %177
  %182 = getelementptr inbounds i8, i8* %175, i64 1
  %183 = load i8, i8* %175, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds i8, i8* %11, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = shl i32 %187, %173
  %189 = or i32 %188, %172
  %190 = add nsw i32 %173, 8
  %191 = icmp slt i32 %190, 12
  br i1 %191, label %192, label %204

192:                                              ; preds = %181
  %193 = icmp ult i8* %182, %30
  br i1 %193, label %194, label %204

194:                                              ; preds = %192
  %195 = getelementptr inbounds i8, i8* %175, i64 2
  %196 = load i8, i8* %182, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds i8, i8* %11, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = shl i32 %200, %190
  %202 = or i32 %201, %189
  %203 = add nsw i32 %173, 16
  br label %204

204:                                              ; preds = %192, %179, %194, %181, %170
  %205 = phi i32 [ %202, %194 ], [ %189, %181 ], [ %172, %170 ], [ %172, %179 ], [ %189, %192 ]
  %206 = phi i32 [ %203, %194 ], [ %190, %181 ], [ %173, %170 ], [ 12, %179 ], [ 12, %192 ]
  %207 = phi i8* [ %195, %194 ], [ %182, %181 ], [ %175, %170 ], [ %175, %179 ], [ %182, %192 ]
  %208 = and i32 %205, 4095
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %209, i32 1
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = sub nsw i32 %206, %212
  %214 = lshr i32 %205, %212
  %215 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %209, i32 0
  %216 = load i8, i8* %215, align 4
  switch i8 %216, label %230 [
    i8 12, label %378
    i8 7, label %217
    i8 9, label %225
    i8 11, label %225
  ]

217:                                              ; preds = %204
  %218 = zext i32 %208 to i64
  %219 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %218, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = add i32 %220, %174
  %222 = getelementptr inbounds i32, i32* %169, i64 1
  store i32 %221, i32* %169, align 4
  %223 = add i32 %220, %171
  %224 = icmp slt i32 %223, %9
  br i1 %224, label %239, label %389

225:                                              ; preds = %204, %204
  %226 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %209, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = add i32 %227, %171
  %229 = add i32 %227, %174
  br label %170

230:                                              ; preds = %204
  %231 = load i32, i32* %35, align 8
  %232 = load i8*, i8** %36, align 8
  %233 = load i32, i32* %37, align 8
  %234 = and i32 %233, 1024
  %235 = icmp ne i32 %234, 0
  %236 = select i1 %235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %237 = select i1 %235, i32* %38, i32* %39
  %238 = load i32, i32* %237, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %232, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %231, i8* %236, i32 %238, i32 %171) #7
  br label %378

239:                                              ; preds = %217, %294
  %240 = phi i32 [ %297, %294 ], [ %223, %217 ]
  %241 = phi i32 [ %283, %294 ], [ %214, %217 ]
  %242 = phi i32 [ %282, %294 ], [ %213, %217 ]
  %243 = phi i32 [ %298, %294 ], [ 0, %217 ]
  %244 = phi i8* [ %276, %294 ], [ %207, %217 ]
  %245 = icmp slt i32 %242, 13
  br i1 %245, label %246, label %273

246:                                              ; preds = %239
  %247 = icmp ult i8* %244, %30
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = icmp eq i32 %242, 0
  br i1 %249, label %312, label %273

250:                                              ; preds = %246
  %251 = getelementptr inbounds i8, i8* %244, i64 1
  %252 = load i8, i8* %244, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds i8, i8* %11, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = shl i32 %256, %242
  %258 = or i32 %257, %241
  %259 = add nsw i32 %242, 8
  %260 = icmp slt i32 %259, 13
  br i1 %260, label %261, label %273

261:                                              ; preds = %250
  %262 = icmp ult i8* %251, %30
  br i1 %262, label %263, label %273

263:                                              ; preds = %261
  %264 = getelementptr inbounds i8, i8* %244, i64 2
  %265 = load i8, i8* %251, align 1
  %266 = zext i8 %265 to i64
  %267 = getelementptr inbounds i8, i8* %11, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = shl i32 %269, %259
  %271 = or i32 %270, %258
  %272 = add nsw i32 %242, 16
  br label %273

273:                                              ; preds = %261, %248, %263, %250, %239
  %274 = phi i32 [ %271, %263 ], [ %258, %250 ], [ %241, %239 ], [ %241, %248 ], [ %258, %261 ]
  %275 = phi i32 [ %272, %263 ], [ %259, %250 ], [ %242, %239 ], [ 13, %248 ], [ 13, %261 ]
  %276 = phi i8* [ %264, %263 ], [ %251, %250 ], [ %244, %239 ], [ %244, %248 ], [ %251, %261 ]
  %277 = and i32 %274, 8191
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %278, i32 1
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = sub nsw i32 %275, %281
  %283 = lshr i32 %274, %281
  %284 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %278, i32 0
  %285 = load i8, i8* %284, align 4
  switch i8 %285, label %299 [
    i8 12, label %378
    i8 8, label %286
    i8 10, label %294
    i8 11, label %294
  ]

286:                                              ; preds = %273
  %287 = zext i32 %277 to i64
  %288 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %287, i32 2
  %289 = load i32, i32* %288, align 4
  %290 = add i32 %289, %243
  %291 = getelementptr inbounds i32, i32* %169, i64 2
  store i32 %290, i32* %222, align 4
  %292 = add i32 %289, %240
  %293 = icmp slt i32 %292, %9
  br i1 %293, label %308, label %389

294:                                              ; preds = %273, %273
  %295 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %278, i32 2
  %296 = load i32, i32* %295, align 4
  %297 = add i32 %296, %240
  %298 = add i32 %296, %243
  br label %239

299:                                              ; preds = %273
  %300 = load i32, i32* %35, align 8
  %301 = load i8*, i8** %36, align 8
  %302 = load i32, i32* %37, align 8
  %303 = and i32 %302, 1024
  %304 = icmp ne i32 %303, 0
  %305 = select i1 %304, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %306 = select i1 %304, i32* %38, i32* %39
  %307 = load i32, i32* %306, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %301, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %300, i8* %305, i32 %307, i32 %240) #7
  br label %378

308:                                              ; preds = %286
  %309 = or i32 %290, %221
  %310 = icmp eq i32 %309, 0
  %311 = select i1 %310, i32* %169, i32* %291
  br label %164

312:                                              ; preds = %179, %248
  %313 = phi i32 [ %240, %248 ], [ %171, %179 ]
  %314 = phi i32 [ %241, %248 ], [ %172, %179 ]
  %315 = phi i32 [ %243, %248 ], [ %174, %179 ]
  %316 = phi i8* [ %244, %248 ], [ %175, %179 ]
  %317 = phi i32* [ %222, %248 ], [ %169, %179 ]
  %318 = load i32, i32* %35, align 8
  %319 = load i8*, i8** %36, align 8
  %320 = load i32, i32* %37, align 8
  %321 = and i32 %320, 1024
  %322 = icmp ne i32 %321, 0
  %323 = select i1 %322, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %324 = select i1 %322, i32* %38, i32* %39
  %325 = load i32, i32* %324, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %319, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0), i32 %318, i8* %323, i32 %325, i32 %313) #7
  %326 = icmp eq i32 %315, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %312
  %328 = getelementptr inbounds i32, i32* %317, i64 1
  store i32 %315, i32* %317, align 4
  br label %329

329:                                              ; preds = %312, %327
  %330 = phi i32* [ %328, %327 ], [ %317, %312 ]
  %331 = icmp eq i32 %313, %9
  br i1 %331, label %1178, label %332

332:                                              ; preds = %329
  %333 = load i32, i32* %35, align 8
  %334 = load i8*, i8** %36, align 8
  %335 = icmp ult i32 %313, %9
  %336 = select i1 %335, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %337 = load i32, i32* %37, align 8
  %338 = and i32 %337, 1024
  %339 = icmp ne i32 %338, 0
  %340 = select i1 %339, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %341 = select i1 %339, i32* %38, i32* %39
  %342 = load i32, i32* %341, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %334, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %336, i32 %333, i8* %340, i32 %342, i32 %313, i32 %9) #7
  %343 = icmp sgt i32 %313, %9
  %344 = icmp ugt i32* %330, %46
  %345 = and i1 %343, %344
  br i1 %345, label %346, label %355

346:                                              ; preds = %332, %346
  %347 = phi i32* [ %349, %346 ], [ %330, %332 ]
  %348 = phi i32 [ %351, %346 ], [ %313, %332 ]
  %349 = getelementptr inbounds i32, i32* %347, i64 -1
  %350 = load i32, i32* %349, align 4
  %351 = sub i32 %348, %350
  %352 = icmp sgt i32 %351, %9
  %353 = icmp ugt i32* %349, %46
  %354 = and i1 %352, %353
  br i1 %354, label %346, label %355

355:                                              ; preds = %346, %332
  %356 = phi i32 [ %313, %332 ], [ %351, %346 ]
  %357 = phi i32* [ %330, %332 ], [ %349, %346 ]
  %358 = phi i1 [ %343, %332 ], [ %352, %346 ]
  %359 = icmp slt i32 %356, %9
  br i1 %359, label %360, label %374

360:                                              ; preds = %355
  %361 = icmp sgt i32 %356, 0
  %362 = select i1 %361, i32 %356, i32 0
  %363 = ptrtoint i32* %357 to i64
  %364 = ptrtoint i32* %46 to i64
  %365 = sub i64 %363, %364
  %366 = and i64 %365, 4
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %370, label %368

368:                                              ; preds = %360
  %369 = getelementptr inbounds i32, i32* %357, i64 1
  store i32 0, i32* %357, align 4
  br label %370

370:                                              ; preds = %360, %368
  %371 = phi i32* [ %369, %368 ], [ %357, %360 ]
  %372 = sub nsw i32 %9, %362
  %373 = getelementptr inbounds i32, i32* %371, i64 1
  store i32 %372, i32* %371, align 4
  br label %1178

374:                                              ; preds = %355
  br i1 %358, label %375, label %1178

375:                                              ; preds = %374
  %376 = getelementptr inbounds i32, i32* %357, i64 1
  store i32 %9, i32* %357, align 4
  %377 = getelementptr inbounds i32, i32* %357, i64 2
  store i32 0, i32* %376, align 4
  br label %1178

378:                                              ; preds = %204, %273, %230, %299
  %379 = phi i32 [ %171, %230 ], [ %240, %299 ], [ %240, %273 ], [ %171, %204 ]
  %380 = phi i32 [ %214, %230 ], [ %283, %299 ], [ %283, %273 ], [ %214, %204 ]
  %381 = phi i32 [ %213, %230 ], [ %282, %299 ], [ %282, %273 ], [ %213, %204 ]
  %382 = phi i32 [ %174, %230 ], [ %243, %299 ], [ %243, %273 ], [ %174, %204 ]
  %383 = phi i8* [ %207, %230 ], [ %276, %299 ], [ %276, %273 ], [ %207, %204 ]
  %384 = phi i32* [ %169, %230 ], [ %222, %299 ], [ %222, %273 ], [ %169, %204 ]
  %385 = phi i32 [ 0, %230 ], [ 0, %299 ], [ 1, %273 ], [ 1, %204 ]
  %386 = icmp eq i32 %382, 0
  br i1 %386, label %389, label %387

387:                                              ; preds = %378
  %388 = getelementptr inbounds i32, i32* %384, i64 1
  store i32 %382, i32* %384, align 4
  br label %389

389:                                              ; preds = %286, %217, %378, %387
  %390 = phi i32 [ %385, %387 ], [ %385, %378 ], [ 0, %217 ], [ 0, %286 ]
  %391 = phi i8* [ %383, %387 ], [ %383, %378 ], [ %276, %286 ], [ %207, %217 ]
  %392 = phi i32 [ %381, %387 ], [ %381, %378 ], [ %282, %286 ], [ %213, %217 ]
  %393 = phi i32 [ %380, %387 ], [ %380, %378 ], [ %283, %286 ], [ %214, %217 ]
  %394 = phi i32 [ %379, %387 ], [ %379, %378 ], [ %292, %286 ], [ %223, %217 ]
  %395 = phi i32* [ %388, %387 ], [ %384, %378 ], [ %291, %286 ], [ %222, %217 ]
  %396 = icmp eq i32 %394, %9
  br i1 %396, label %1145, label %397

397:                                              ; preds = %389
  %398 = load i32, i32* %35, align 8
  %399 = load i8*, i8** %36, align 8
  %400 = icmp ult i32 %394, %9
  %401 = select i1 %400, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %402 = load i32, i32* %37, align 8
  %403 = and i32 %402, 1024
  %404 = icmp ne i32 %403, 0
  %405 = select i1 %404, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %406 = select i1 %404, i32* %38, i32* %39
  %407 = load i32, i32* %406, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %399, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %401, i32 %398, i8* %405, i32 %407, i32 %394, i32 %9) #7
  %408 = icmp sgt i32 %394, %9
  %409 = icmp ugt i32* %395, %46
  %410 = and i1 %408, %409
  br i1 %410, label %411, label %420

411:                                              ; preds = %397, %411
  %412 = phi i32* [ %414, %411 ], [ %395, %397 ]
  %413 = phi i32 [ %416, %411 ], [ %394, %397 ]
  %414 = getelementptr inbounds i32, i32* %412, i64 -1
  %415 = load i32, i32* %414, align 4
  %416 = sub i32 %413, %415
  %417 = icmp sgt i32 %416, %9
  %418 = icmp ugt i32* %414, %46
  %419 = and i1 %417, %418
  br i1 %419, label %411, label %420

420:                                              ; preds = %411, %397
  %421 = phi i32 [ %394, %397 ], [ %416, %411 ]
  %422 = phi i32* [ %395, %397 ], [ %414, %411 ]
  %423 = phi i1 [ %408, %397 ], [ %417, %411 ]
  %424 = icmp slt i32 %421, %9
  br i1 %424, label %425, label %439

425:                                              ; preds = %420
  %426 = icmp sgt i32 %421, 0
  %427 = select i1 %426, i32 %421, i32 0
  %428 = ptrtoint i32* %422 to i64
  %429 = ptrtoint i32* %46 to i64
  %430 = sub i64 %428, %429
  %431 = and i64 %430, 4
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %435, label %433

433:                                              ; preds = %425
  %434 = getelementptr inbounds i32, i32* %422, i64 1
  store i32 0, i32* %422, align 4
  br label %435

435:                                              ; preds = %425, %433
  %436 = phi i32* [ %434, %433 ], [ %422, %425 ]
  %437 = sub nsw i32 %9, %427
  %438 = getelementptr inbounds i32, i32* %436, i64 1
  store i32 %437, i32* %436, align 4
  br label %1145

439:                                              ; preds = %420
  br i1 %423, label %440, label %1145

440:                                              ; preds = %439
  %441 = getelementptr inbounds i32, i32* %422, i64 1
  store i32 %9, i32* %422, align 4
  %442 = getelementptr inbounds i32, i32* %422, i64 2
  store i32 0, i32* %441, align 4
  br label %1145

443:                                              ; preds = %162, %1034
  %444 = phi i32 [ 0, %162 ], [ %1043, %1034 ]
  %445 = phi i32* [ %158, %162 ], [ %1042, %1034 ]
  %446 = phi i32 [ %159, %162 ], [ %1041, %1034 ]
  %447 = phi i32* [ %46, %162 ], [ %1040, %1034 ]
  %448 = phi i8* [ %153, %162 ], [ %1039, %1034 ]
  %449 = phi i32 [ 0, %162 ], [ %1038, %1034 ]
  %450 = phi i32 [ %155, %162 ], [ %1037, %1034 ]
  %451 = phi i32 [ %156, %162 ], [ %1036, %1034 ]
  %452 = phi i32 [ 0, %162 ], [ %1035, %1034 ]
  %453 = icmp slt i32 %450, 7
  br i1 %453, label %454, label %468

454:                                              ; preds = %443
  %455 = icmp ult i8* %448, %30
  br i1 %455, label %458, label %456

456:                                              ; preds = %454
  %457 = icmp eq i32 %450, 0
  br i1 %457, label %968, label %468

458:                                              ; preds = %454
  %459 = getelementptr inbounds i8, i8* %448, i64 1
  %460 = load i8, i8* %448, align 1
  %461 = zext i8 %460 to i64
  %462 = getelementptr inbounds i8, i8* %11, i64 %461
  %463 = load i8, i8* %462, align 1
  %464 = zext i8 %463 to i32
  %465 = shl i32 %464, %450
  %466 = or i32 %465, %451
  %467 = add nsw i32 %450, 8
  br label %468

468:                                              ; preds = %456, %458, %443
  %469 = phi i32 [ %466, %458 ], [ %451, %443 ], [ %451, %456 ]
  %470 = phi i32 [ %467, %458 ], [ %450, %443 ], [ 7, %456 ]
  %471 = phi i8* [ %459, %458 ], [ %448, %443 ], [ %448, %456 ]
  %472 = and i32 %469, 127
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %473, i32 1
  %475 = load i8, i8* %474, align 1
  %476 = zext i8 %475 to i32
  %477 = sub nsw i32 %470, %476
  %478 = lshr i32 %469, %476
  %479 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %473, i32 0
  %480 = load i8, i8* %479, align 4
  switch i8 %480, label %923 [
    i8 1, label %481
    i8 2, label %510
    i8 3, label %772
    i8 4, label %799
    i8 5, label %830
    i8 6, label %876
    i8 12, label %887
  ]

481:                                              ; preds = %468
  %482 = icmp eq i32* %447, %46
  br i1 %482, label %499, label %483

483:                                              ; preds = %481
  %484 = icmp sle i32 %446, %452
  %485 = icmp slt i32 %446, %9
  %486 = and i1 %484, %485
  br i1 %486, label %487, label %499

487:                                              ; preds = %483, %487
  %488 = phi i32* [ %495, %487 ], [ %445, %483 ]
  %489 = phi i32 [ %494, %487 ], [ %446, %483 ]
  %490 = load i32, i32* %488, align 4
  %491 = getelementptr inbounds i32, i32* %488, i64 1
  %492 = load i32, i32* %491, align 4
  %493 = add i32 %490, %489
  %494 = add i32 %493, %492
  %495 = getelementptr inbounds i32, i32* %488, i64 2
  %496 = icmp sle i32 %494, %452
  %497 = icmp slt i32 %494, %9
  %498 = and i1 %496, %497
  br i1 %498, label %487, label %499

499:                                              ; preds = %487, %483, %481
  %500 = phi i32 [ %446, %481 ], [ %446, %483 ], [ %494, %487 ]
  %501 = phi i32* [ %445, %481 ], [ %445, %483 ], [ %495, %487 ]
  %502 = getelementptr inbounds i32, i32* %501, i64 1
  %503 = load i32, i32* %501, align 4
  %504 = add i32 %503, %500
  %505 = add i32 %449, %444
  %506 = add i32 %505, %504
  %507 = getelementptr inbounds i32, i32* %501, i64 2
  %508 = load i32, i32* %502, align 4
  %509 = add i32 %504, %508
  br label %1034

510:                                              ; preds = %468
  %511 = ptrtoint i32* %447 to i64
  %512 = sub i64 %511, %163
  %513 = and i64 %512, 4
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %632, label %515

515:                                              ; preds = %510, %569
  %516 = phi i32 [ %572, %569 ], [ %452, %510 ]
  %517 = phi i32 [ %559, %569 ], [ %478, %510 ]
  %518 = phi i32 [ %558, %569 ], [ %477, %510 ]
  %519 = phi i32 [ %573, %569 ], [ %449, %510 ]
  %520 = phi i8* [ %552, %569 ], [ %471, %510 ]
  %521 = icmp slt i32 %518, 13
  br i1 %521, label %522, label %549

522:                                              ; preds = %515
  %523 = icmp ult i8* %520, %30
  br i1 %523, label %526, label %524

524:                                              ; preds = %522
  %525 = icmp eq i32 %518, 0
  br i1 %525, label %968, label %549

526:                                              ; preds = %522
  %527 = getelementptr inbounds i8, i8* %520, i64 1
  %528 = load i8, i8* %520, align 1
  %529 = zext i8 %528 to i64
  %530 = getelementptr inbounds i8, i8* %11, i64 %529
  %531 = load i8, i8* %530, align 1
  %532 = zext i8 %531 to i32
  %533 = shl i32 %532, %518
  %534 = or i32 %533, %517
  %535 = add nsw i32 %518, 8
  %536 = icmp slt i32 %535, 13
  br i1 %536, label %537, label %549

537:                                              ; preds = %526
  %538 = icmp ult i8* %527, %30
  br i1 %538, label %539, label %549

539:                                              ; preds = %537
  %540 = getelementptr inbounds i8, i8* %520, i64 2
  %541 = load i8, i8* %527, align 1
  %542 = zext i8 %541 to i64
  %543 = getelementptr inbounds i8, i8* %11, i64 %542
  %544 = load i8, i8* %543, align 1
  %545 = zext i8 %544 to i32
  %546 = shl i32 %545, %535
  %547 = or i32 %546, %534
  %548 = add nsw i32 %518, 16
  br label %549

549:                                              ; preds = %537, %524, %539, %526, %515
  %550 = phi i32 [ %547, %539 ], [ %534, %526 ], [ %517, %515 ], [ %517, %524 ], [ %534, %537 ]
  %551 = phi i32 [ %548, %539 ], [ %535, %526 ], [ %518, %515 ], [ 13, %524 ], [ 13, %537 ]
  %552 = phi i8* [ %540, %539 ], [ %527, %526 ], [ %520, %515 ], [ %520, %524 ], [ %527, %537 ]
  %553 = and i32 %550, 8191
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %554, i32 1
  %556 = load i8, i8* %555, align 1
  %557 = zext i8 %556 to i32
  %558 = sub nsw i32 %551, %557
  %559 = lshr i32 %550, %557
  %560 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %554, i32 0
  %561 = load i8, i8* %560, align 4
  switch i8 %561, label %938 [
    i8 8, label %562
    i8 10, label %569
    i8 11, label %569
  ]

562:                                              ; preds = %549
  %563 = zext i32 %553 to i64
  %564 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %563, i32 2
  %565 = load i32, i32* %564, align 4
  %566 = add i32 %565, %519
  %567 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %566, i32* %447, align 4
  %568 = add i32 %565, %516
  br label %574

569:                                              ; preds = %549, %549
  %570 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %554, i32 2
  %571 = load i32, i32* %570, align 4
  %572 = add i32 %571, %516
  %573 = add i32 %571, %519
  br label %515

574:                                              ; preds = %627, %562
  %575 = phi i32 [ %568, %562 ], [ %630, %627 ]
  %576 = phi i32 [ %559, %562 ], [ %618, %627 ]
  %577 = phi i32 [ %558, %562 ], [ %617, %627 ]
  %578 = phi i32 [ 0, %562 ], [ %631, %627 ]
  %579 = phi i8* [ %552, %562 ], [ %611, %627 ]
  %580 = icmp slt i32 %577, 12
  br i1 %580, label %581, label %608

581:                                              ; preds = %574
  %582 = icmp ult i8* %579, %30
  br i1 %582, label %585, label %583

583:                                              ; preds = %581
  %584 = icmp eq i32 %577, 0
  br i1 %584, label %968, label %608

585:                                              ; preds = %581
  %586 = getelementptr inbounds i8, i8* %579, i64 1
  %587 = load i8, i8* %579, align 1
  %588 = zext i8 %587 to i64
  %589 = getelementptr inbounds i8, i8* %11, i64 %588
  %590 = load i8, i8* %589, align 1
  %591 = zext i8 %590 to i32
  %592 = shl i32 %591, %577
  %593 = or i32 %592, %576
  %594 = add nsw i32 %577, 8
  %595 = icmp slt i32 %594, 12
  br i1 %595, label %596, label %608

596:                                              ; preds = %585
  %597 = icmp ult i8* %586, %30
  br i1 %597, label %598, label %608

598:                                              ; preds = %596
  %599 = getelementptr inbounds i8, i8* %579, i64 2
  %600 = load i8, i8* %586, align 1
  %601 = zext i8 %600 to i64
  %602 = getelementptr inbounds i8, i8* %11, i64 %601
  %603 = load i8, i8* %602, align 1
  %604 = zext i8 %603 to i32
  %605 = shl i32 %604, %594
  %606 = or i32 %605, %593
  %607 = add nsw i32 %577, 16
  br label %608

608:                                              ; preds = %596, %583, %598, %585, %574
  %609 = phi i32 [ %606, %598 ], [ %593, %585 ], [ %576, %574 ], [ %576, %583 ], [ %593, %596 ]
  %610 = phi i32 [ %607, %598 ], [ %594, %585 ], [ %577, %574 ], [ 12, %583 ], [ 12, %596 ]
  %611 = phi i8* [ %599, %598 ], [ %586, %585 ], [ %579, %574 ], [ %579, %583 ], [ %586, %596 ]
  %612 = and i32 %609, 4095
  %613 = zext i32 %612 to i64
  %614 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %613, i32 1
  %615 = load i8, i8* %614, align 1
  %616 = zext i8 %615 to i32
  %617 = sub nsw i32 %610, %616
  %618 = lshr i32 %609, %616
  %619 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %613, i32 0
  %620 = load i8, i8* %619, align 4
  switch i8 %620, label %953 [
    i8 7, label %621
    i8 9, label %627
    i8 11, label %627
  ]

621:                                              ; preds = %608
  %622 = zext i32 %612 to i64
  %623 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %622, i32 2
  %624 = load i32, i32* %623, align 4
  %625 = add i32 %624, %578
  store i32 %625, i32* %567, align 4
  %626 = add i32 %624, %575
  br label %749

627:                                              ; preds = %608, %608
  %628 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %613, i32 2
  %629 = load i32, i32* %628, align 4
  %630 = add i32 %629, %575
  %631 = add i32 %629, %578
  br label %574

632:                                              ; preds = %510, %686
  %633 = phi i32 [ %689, %686 ], [ %452, %510 ]
  %634 = phi i32 [ %676, %686 ], [ %478, %510 ]
  %635 = phi i32 [ %675, %686 ], [ %477, %510 ]
  %636 = phi i32 [ %690, %686 ], [ %449, %510 ]
  %637 = phi i8* [ %669, %686 ], [ %471, %510 ]
  %638 = icmp slt i32 %635, 12
  br i1 %638, label %639, label %666

639:                                              ; preds = %632
  %640 = icmp ult i8* %637, %30
  br i1 %640, label %643, label %641

641:                                              ; preds = %639
  %642 = icmp eq i32 %635, 0
  br i1 %642, label %968, label %666

643:                                              ; preds = %639
  %644 = getelementptr inbounds i8, i8* %637, i64 1
  %645 = load i8, i8* %637, align 1
  %646 = zext i8 %645 to i64
  %647 = getelementptr inbounds i8, i8* %11, i64 %646
  %648 = load i8, i8* %647, align 1
  %649 = zext i8 %648 to i32
  %650 = shl i32 %649, %635
  %651 = or i32 %650, %634
  %652 = add nsw i32 %635, 8
  %653 = icmp slt i32 %652, 12
  br i1 %653, label %654, label %666

654:                                              ; preds = %643
  %655 = icmp ult i8* %644, %30
  br i1 %655, label %656, label %666

656:                                              ; preds = %654
  %657 = getelementptr inbounds i8, i8* %637, i64 2
  %658 = load i8, i8* %644, align 1
  %659 = zext i8 %658 to i64
  %660 = getelementptr inbounds i8, i8* %11, i64 %659
  %661 = load i8, i8* %660, align 1
  %662 = zext i8 %661 to i32
  %663 = shl i32 %662, %652
  %664 = or i32 %663, %651
  %665 = add nsw i32 %635, 16
  br label %666

666:                                              ; preds = %654, %641, %656, %643, %632
  %667 = phi i32 [ %664, %656 ], [ %651, %643 ], [ %634, %632 ], [ %634, %641 ], [ %651, %654 ]
  %668 = phi i32 [ %665, %656 ], [ %652, %643 ], [ %635, %632 ], [ 12, %641 ], [ 12, %654 ]
  %669 = phi i8* [ %657, %656 ], [ %644, %643 ], [ %637, %632 ], [ %637, %641 ], [ %644, %654 ]
  %670 = and i32 %667, 4095
  %671 = zext i32 %670 to i64
  %672 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %671, i32 1
  %673 = load i8, i8* %672, align 1
  %674 = zext i8 %673 to i32
  %675 = sub nsw i32 %668, %674
  %676 = lshr i32 %667, %674
  %677 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %671, i32 0
  %678 = load i8, i8* %677, align 4
  switch i8 %678, label %953 [
    i8 7, label %679
    i8 9, label %686
    i8 11, label %686
  ]

679:                                              ; preds = %666
  %680 = zext i32 %670 to i64
  %681 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %680, i32 2
  %682 = load i32, i32* %681, align 4
  %683 = add i32 %682, %636
  %684 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %683, i32* %447, align 4
  %685 = add i32 %682, %633
  br label %691

686:                                              ; preds = %666, %666
  %687 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxWhiteTable, i64 0, i64 %671, i32 2
  %688 = load i32, i32* %687, align 4
  %689 = add i32 %688, %633
  %690 = add i32 %688, %636
  br label %632

691:                                              ; preds = %744, %679
  %692 = phi i32 [ %685, %679 ], [ %747, %744 ]
  %693 = phi i32 [ %676, %679 ], [ %735, %744 ]
  %694 = phi i32 [ %675, %679 ], [ %734, %744 ]
  %695 = phi i32 [ 0, %679 ], [ %748, %744 ]
  %696 = phi i8* [ %669, %679 ], [ %728, %744 ]
  %697 = icmp slt i32 %694, 13
  br i1 %697, label %698, label %725

698:                                              ; preds = %691
  %699 = icmp ult i8* %696, %30
  br i1 %699, label %702, label %700

700:                                              ; preds = %698
  %701 = icmp eq i32 %694, 0
  br i1 %701, label %968, label %725

702:                                              ; preds = %698
  %703 = getelementptr inbounds i8, i8* %696, i64 1
  %704 = load i8, i8* %696, align 1
  %705 = zext i8 %704 to i64
  %706 = getelementptr inbounds i8, i8* %11, i64 %705
  %707 = load i8, i8* %706, align 1
  %708 = zext i8 %707 to i32
  %709 = shl i32 %708, %694
  %710 = or i32 %709, %693
  %711 = add nsw i32 %694, 8
  %712 = icmp slt i32 %711, 13
  br i1 %712, label %713, label %725

713:                                              ; preds = %702
  %714 = icmp ult i8* %703, %30
  br i1 %714, label %715, label %725

715:                                              ; preds = %713
  %716 = getelementptr inbounds i8, i8* %696, i64 2
  %717 = load i8, i8* %703, align 1
  %718 = zext i8 %717 to i64
  %719 = getelementptr inbounds i8, i8* %11, i64 %718
  %720 = load i8, i8* %719, align 1
  %721 = zext i8 %720 to i32
  %722 = shl i32 %721, %711
  %723 = or i32 %722, %710
  %724 = add nsw i32 %694, 16
  br label %725

725:                                              ; preds = %713, %700, %715, %702, %691
  %726 = phi i32 [ %723, %715 ], [ %710, %702 ], [ %693, %691 ], [ %693, %700 ], [ %710, %713 ]
  %727 = phi i32 [ %724, %715 ], [ %711, %702 ], [ %694, %691 ], [ 13, %700 ], [ 13, %713 ]
  %728 = phi i8* [ %716, %715 ], [ %703, %702 ], [ %696, %691 ], [ %696, %700 ], [ %703, %713 ]
  %729 = and i32 %726, 8191
  %730 = zext i32 %729 to i64
  %731 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %730, i32 1
  %732 = load i8, i8* %731, align 1
  %733 = zext i8 %732 to i32
  %734 = sub nsw i32 %727, %733
  %735 = lshr i32 %726, %733
  %736 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %730, i32 0
  %737 = load i8, i8* %736, align 4
  switch i8 %737, label %938 [
    i8 8, label %738
    i8 10, label %744
    i8 11, label %744
  ]

738:                                              ; preds = %725
  %739 = zext i32 %729 to i64
  %740 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %739, i32 2
  %741 = load i32, i32* %740, align 4
  %742 = add i32 %741, %695
  store i32 %742, i32* %684, align 4
  %743 = add i32 %741, %692
  br label %749

744:                                              ; preds = %725, %725
  %745 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxBlackTable, i64 0, i64 %730, i32 2
  %746 = load i32, i32* %745, align 4
  %747 = add i32 %746, %692
  %748 = add i32 %746, %695
  br label %691

749:                                              ; preds = %621, %738
  %750 = phi i32 [ %626, %621 ], [ %743, %738 ]
  %751 = phi i32 [ %618, %621 ], [ %735, %738 ]
  %752 = phi i32 [ %617, %621 ], [ %734, %738 ]
  %753 = phi i8* [ %611, %621 ], [ %728, %738 ]
  %754 = getelementptr inbounds i32, i32* %447, i64 2
  %755 = icmp eq i32* %754, %46
  br i1 %755, label %1034, label %756

756:                                              ; preds = %749
  %757 = icmp sle i32 %446, %750
  %758 = icmp slt i32 %446, %9
  %759 = and i1 %757, %758
  br i1 %759, label %760, label %1034

760:                                              ; preds = %756, %760
  %761 = phi i32* [ %768, %760 ], [ %445, %756 ]
  %762 = phi i32 [ %767, %760 ], [ %446, %756 ]
  %763 = load i32, i32* %761, align 4
  %764 = getelementptr inbounds i32, i32* %761, i64 1
  %765 = load i32, i32* %764, align 4
  %766 = add i32 %763, %762
  %767 = add i32 %766, %765
  %768 = getelementptr inbounds i32, i32* %761, i64 2
  %769 = icmp sle i32 %767, %750
  %770 = icmp slt i32 %767, %9
  %771 = and i1 %769, %770
  br i1 %771, label %760, label %1034

772:                                              ; preds = %468
  %773 = icmp eq i32* %447, %46
  br i1 %773, label %790, label %774

774:                                              ; preds = %772
  %775 = icmp sle i32 %446, %452
  %776 = icmp slt i32 %446, %9
  %777 = and i1 %775, %776
  br i1 %777, label %778, label %790

778:                                              ; preds = %774, %778
  %779 = phi i32* [ %786, %778 ], [ %445, %774 ]
  %780 = phi i32 [ %785, %778 ], [ %446, %774 ]
  %781 = load i32, i32* %779, align 4
  %782 = getelementptr inbounds i32, i32* %779, i64 1
  %783 = load i32, i32* %782, align 4
  %784 = add i32 %781, %780
  %785 = add i32 %784, %783
  %786 = getelementptr inbounds i32, i32* %779, i64 2
  %787 = icmp sle i32 %785, %452
  %788 = icmp slt i32 %785, %9
  %789 = and i1 %787, %788
  br i1 %789, label %778, label %790

790:                                              ; preds = %778, %774, %772
  %791 = phi i32 [ %446, %772 ], [ %446, %774 ], [ %785, %778 ]
  %792 = phi i32* [ %445, %772 ], [ %445, %774 ], [ %786, %778 ]
  %793 = add i32 %449, %444
  %794 = add i32 %793, %791
  %795 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %794, i32* %447, align 4
  %796 = getelementptr inbounds i32, i32* %792, i64 1
  %797 = load i32, i32* %792, align 4
  %798 = add i32 %797, %791
  br label %1034

799:                                              ; preds = %468
  %800 = icmp eq i32* %447, %46
  br i1 %800, label %817, label %801

801:                                              ; preds = %799
  %802 = icmp sle i32 %446, %452
  %803 = icmp slt i32 %446, %9
  %804 = and i1 %802, %803
  br i1 %804, label %805, label %817

805:                                              ; preds = %801, %805
  %806 = phi i32* [ %813, %805 ], [ %445, %801 ]
  %807 = phi i32 [ %812, %805 ], [ %446, %801 ]
  %808 = load i32, i32* %806, align 4
  %809 = getelementptr inbounds i32, i32* %806, i64 1
  %810 = load i32, i32* %809, align 4
  %811 = add i32 %808, %807
  %812 = add i32 %811, %810
  %813 = getelementptr inbounds i32, i32* %806, i64 2
  %814 = icmp sle i32 %812, %452
  %815 = icmp slt i32 %812, %9
  %816 = and i1 %814, %815
  br i1 %816, label %805, label %817

817:                                              ; preds = %805, %801, %799
  %818 = phi i32 [ %446, %799 ], [ %446, %801 ], [ %812, %805 ]
  %819 = phi i32* [ %445, %799 ], [ %445, %801 ], [ %813, %805 ]
  %820 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %473, i32 2
  %821 = load i32, i32* %820, align 4
  %822 = add i32 %449, %444
  %823 = add i32 %822, %818
  %824 = add i32 %823, %821
  %825 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %824, i32* %447, align 4
  %826 = add i32 %821, %818
  %827 = getelementptr inbounds i32, i32* %819, i64 1
  %828 = load i32, i32* %819, align 4
  %829 = add i32 %828, %818
  br label %1034

830:                                              ; preds = %468
  %831 = icmp ne i32* %447, %46
  br i1 %831, label %832, label %848

832:                                              ; preds = %830
  %833 = icmp sle i32 %446, %452
  %834 = icmp slt i32 %446, %9
  %835 = and i1 %833, %834
  br i1 %835, label %836, label %848

836:                                              ; preds = %832, %836
  %837 = phi i32* [ %844, %836 ], [ %445, %832 ]
  %838 = phi i32 [ %843, %836 ], [ %446, %832 ]
  %839 = load i32, i32* %837, align 4
  %840 = getelementptr inbounds i32, i32* %837, i64 1
  %841 = load i32, i32* %840, align 4
  %842 = add i32 %839, %838
  %843 = add i32 %842, %841
  %844 = getelementptr inbounds i32, i32* %837, i64 2
  %845 = icmp sle i32 %843, %452
  %846 = icmp slt i32 %843, %9
  %847 = and i1 %845, %846
  br i1 %847, label %836, label %848

848:                                              ; preds = %836, %832, %830
  %849 = phi i32 [ %446, %830 ], [ %446, %832 ], [ %843, %836 ]
  %850 = phi i32* [ %445, %830 ], [ %445, %832 ], [ %844, %836 ]
  %851 = getelementptr inbounds [0 x %struct.TIFFFaxTabEnt], [0 x %struct.TIFFFaxTabEnt]* @TIFFFaxMainTable, i64 0, i64 %473, i32 2
  %852 = load i32, i32* %851, align 4
  %853 = add i32 %852, %452
  %854 = icmp sle i32 %849, %853
  %855 = icmp slt i32 %849, %853
  %856 = or i1 %831, %855
  %857 = and i1 %854, %856
  br i1 %857, label %858, label %867

858:                                              ; preds = %848
  %859 = load i32, i32* %35, align 8
  %860 = load i8*, i8** %36, align 8
  %861 = load i32, i32* %37, align 8
  %862 = and i32 %861, 1024
  %863 = icmp ne i32 %862, 0
  %864 = select i1 %863, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %865 = select i1 %863, i32* %38, i32* %39
  %866 = load i32, i32* %865, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %860, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %859, i8* %864, i32 %866, i32 %452) #7
  br label %1080

867:                                              ; preds = %848
  %868 = sub nsw i32 %849, %452
  %869 = sub i32 %868, %852
  %870 = add i32 %869, %449
  %871 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %870, i32* %447, align 4
  %872 = add i32 %869, %452
  %873 = getelementptr inbounds i32, i32* %850, i64 -1
  %874 = load i32, i32* %873, align 4
  %875 = sub i32 %849, %874
  br label %1034

876:                                              ; preds = %468
  %877 = sub nsw i32 %9, %452
  %878 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %877, i32* %447, align 4
  %879 = load i32, i32* %35, align 8
  %880 = load i8*, i8** %36, align 8
  %881 = load i32, i32* %37, align 8
  %882 = and i32 %881, 1024
  %883 = icmp ne i32 %882, 0
  %884 = select i1 %883, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %885 = select i1 %883, i32* %38, i32* %39
  %886 = load i32, i32* %885, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %880, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.39, i64 0, i64 0), i32 %879, i8* %884, i32 %886, i32 %452) #7
  br label %1080

887:                                              ; preds = %468
  %888 = sub nsw i32 %9, %452
  %889 = getelementptr inbounds i32, i32* %447, i64 1
  store i32 %888, i32* %447, align 4
  %890 = icmp slt i32 %477, 4
  br i1 %890, label %891, label %905

891:                                              ; preds = %887
  %892 = icmp ult i8* %471, %30
  br i1 %892, label %895, label %893

893:                                              ; preds = %891
  %894 = icmp eq i32 %477, 0
  br i1 %894, label %968, label %905

895:                                              ; preds = %891
  %896 = getelementptr inbounds i8, i8* %471, i64 1
  %897 = load i8, i8* %471, align 1
  %898 = zext i8 %897 to i64
  %899 = getelementptr inbounds i8, i8* %11, i64 %898
  %900 = load i8, i8* %899, align 1
  %901 = zext i8 %900 to i32
  %902 = shl i32 %901, %477
  %903 = or i32 %902, %478
  %904 = add nsw i32 %477, 8
  br label %905

905:                                              ; preds = %893, %895, %887
  %906 = phi i32 [ %903, %895 ], [ %478, %887 ], [ %478, %893 ]
  %907 = phi i32 [ %904, %895 ], [ %477, %887 ], [ 4, %893 ]
  %908 = phi i8* [ %896, %895 ], [ %471, %887 ], [ %471, %893 ]
  %909 = and i32 %906, 15
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %920, label %911

911:                                              ; preds = %905
  %912 = load i32, i32* %35, align 8
  %913 = load i8*, i8** %36, align 8
  %914 = load i32, i32* %37, align 8
  %915 = and i32 %914, 1024
  %916 = icmp ne i32 %915, 0
  %917 = select i1 %916, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %918 = select i1 %916, i32* %38, i32* %39
  %919 = load i32, i32* %918, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %913, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %912, i8* %917, i32 %919, i32 %452) #7
  br label %920

920:                                              ; preds = %905, %911
  %921 = add nsw i32 %907, -4
  %922 = lshr i32 %906, 4
  br label %1080

923:                                              ; preds = %468, %1066
  %924 = phi i32 [ %1035, %1066 ], [ %452, %468 ]
  %925 = phi i32 [ %1038, %1066 ], [ %449, %468 ]
  %926 = phi i32* [ %1040, %1066 ], [ %447, %468 ]
  %927 = phi i32 [ %1067, %1066 ], [ %478, %468 ]
  %928 = phi i32 [ %1068, %1066 ], [ %477, %468 ]
  %929 = phi i8* [ %1069, %1066 ], [ %471, %468 ]
  %930 = load i32, i32* %35, align 8
  %931 = load i8*, i8** %36, align 8
  %932 = load i32, i32* %37, align 8
  %933 = and i32 %932, 1024
  %934 = icmp ne i32 %933, 0
  %935 = select i1 %934, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %936 = select i1 %934, i32* %38, i32* %39
  %937 = load i32, i32* %936, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %931, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %930, i8* %935, i32 %937, i32 %924) #7
  br label %1080

938:                                              ; preds = %549, %725
  %939 = phi i32 [ %692, %725 ], [ %516, %549 ]
  %940 = phi i32 [ %735, %725 ], [ %559, %549 ]
  %941 = phi i32 [ %734, %725 ], [ %558, %549 ]
  %942 = phi i32 [ %695, %725 ], [ %519, %549 ]
  %943 = phi i8* [ %728, %725 ], [ %552, %549 ]
  %944 = phi i32* [ %684, %725 ], [ %447, %549 ]
  %945 = load i32, i32* %35, align 8
  %946 = load i8*, i8** %36, align 8
  %947 = load i32, i32* %37, align 8
  %948 = and i32 %947, 1024
  %949 = icmp ne i32 %948, 0
  %950 = select i1 %949, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %951 = select i1 %949, i32* %38, i32* %39
  %952 = load i32, i32* %951, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %946, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %945, i8* %950, i32 %952, i32 %939) #7
  br label %1080

953:                                              ; preds = %608, %666
  %954 = phi i32 [ %633, %666 ], [ %575, %608 ]
  %955 = phi i32 [ %676, %666 ], [ %618, %608 ]
  %956 = phi i32 [ %675, %666 ], [ %617, %608 ]
  %957 = phi i32 [ %636, %666 ], [ %578, %608 ]
  %958 = phi i8* [ %669, %666 ], [ %611, %608 ]
  %959 = phi i32* [ %447, %666 ], [ %567, %608 ]
  %960 = load i32, i32* %35, align 8
  %961 = load i8*, i8** %36, align 8
  %962 = load i32, i32* %37, align 8
  %963 = and i32 %962, 1024
  %964 = icmp ne i32 %963, 0
  %965 = select i1 %964, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %966 = select i1 %964, i32* %38, i32* %39
  %967 = load i32, i32* %966, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFErrorExt(i8* %961, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i32 %960, i8* %965, i32 %967, i32 %954) #7
  br label %1080

968:                                              ; preds = %1054, %893, %456, %524, %583, %641, %700
  %969 = phi i32 [ %692, %700 ], [ %633, %641 ], [ %575, %583 ], [ %516, %524 ], [ %452, %456 ], [ %1035, %1054 ], [ %452, %893 ]
  %970 = phi i32 [ %693, %700 ], [ %634, %641 ], [ %576, %583 ], [ %517, %524 ], [ %451, %456 ], [ %1036, %1054 ], [ %478, %893 ]
  %971 = phi i32 [ %695, %700 ], [ %636, %641 ], [ %578, %583 ], [ %519, %524 ], [ %449, %456 ], [ %1038, %1054 ], [ %449, %893 ]
  %972 = phi i8* [ %696, %700 ], [ %637, %641 ], [ %579, %583 ], [ %520, %524 ], [ %448, %456 ], [ %1039, %1054 ], [ %471, %893 ]
  %973 = phi i32* [ %684, %700 ], [ %447, %641 ], [ %567, %583 ], [ %447, %524 ], [ %447, %456 ], [ %1040, %1054 ], [ %889, %893 ]
  %974 = load i32, i32* %35, align 8
  %975 = load i8*, i8** %36, align 8
  %976 = load i32, i32* %37, align 8
  %977 = and i32 %976, 1024
  %978 = icmp ne i32 %977, 0
  %979 = select i1 %978, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %980 = select i1 %978, i32* %38, i32* %39
  %981 = load i32, i32* %980, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %975, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i64 0, i64 0), i32 %974, i8* %979, i32 %981, i32 %969) #7
  %982 = icmp eq i32 %971, 0
  br i1 %982, label %985, label %983

983:                                              ; preds = %968
  %984 = getelementptr inbounds i32, i32* %973, i64 1
  store i32 %971, i32* %973, align 4
  br label %985

985:                                              ; preds = %968, %983
  %986 = phi i32* [ %984, %983 ], [ %973, %968 ]
  %987 = icmp eq i32 %969, %9
  br i1 %987, label %1178, label %988

988:                                              ; preds = %985
  %989 = load i32, i32* %35, align 8
  %990 = load i8*, i8** %36, align 8
  %991 = icmp ult i32 %969, %9
  %992 = select i1 %991, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %993 = load i32, i32* %37, align 8
  %994 = and i32 %993, 1024
  %995 = icmp ne i32 %994, 0
  %996 = select i1 %995, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %997 = select i1 %995, i32* %38, i32* %39
  %998 = load i32, i32* %997, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %990, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %992, i32 %989, i8* %996, i32 %998, i32 %969, i32 %9) #7
  %999 = icmp sgt i32 %969, %9
  %1000 = icmp ugt i32* %986, %46
  %1001 = and i1 %999, %1000
  br i1 %1001, label %1002, label %1011

1002:                                             ; preds = %988, %1002
  %1003 = phi i32* [ %1005, %1002 ], [ %986, %988 ]
  %1004 = phi i32 [ %1007, %1002 ], [ %969, %988 ]
  %1005 = getelementptr inbounds i32, i32* %1003, i64 -1
  %1006 = load i32, i32* %1005, align 4
  %1007 = sub i32 %1004, %1006
  %1008 = icmp sgt i32 %1007, %9
  %1009 = icmp ugt i32* %1005, %46
  %1010 = and i1 %1008, %1009
  br i1 %1010, label %1002, label %1011

1011:                                             ; preds = %1002, %988
  %1012 = phi i32 [ %969, %988 ], [ %1007, %1002 ]
  %1013 = phi i32* [ %986, %988 ], [ %1005, %1002 ]
  %1014 = phi i1 [ %999, %988 ], [ %1008, %1002 ]
  %1015 = icmp slt i32 %1012, %9
  br i1 %1015, label %1016, label %1030

1016:                                             ; preds = %1011
  %1017 = icmp sgt i32 %1012, 0
  %1018 = select i1 %1017, i32 %1012, i32 0
  %1019 = ptrtoint i32* %1013 to i64
  %1020 = ptrtoint i32* %46 to i64
  %1021 = sub i64 %1019, %1020
  %1022 = and i64 %1021, 4
  %1023 = icmp eq i64 %1022, 0
  br i1 %1023, label %1026, label %1024

1024:                                             ; preds = %1016
  %1025 = getelementptr inbounds i32, i32* %1013, i64 1
  store i32 0, i32* %1013, align 4
  br label %1026

1026:                                             ; preds = %1016, %1024
  %1027 = phi i32* [ %1025, %1024 ], [ %1013, %1016 ]
  %1028 = sub nsw i32 %9, %1018
  %1029 = getelementptr inbounds i32, i32* %1027, i64 1
  store i32 %1028, i32* %1027, align 4
  br label %1178

1030:                                             ; preds = %1011
  br i1 %1014, label %1031, label %1178

1031:                                             ; preds = %1030
  %1032 = getelementptr inbounds i32, i32* %1013, i64 1
  store i32 %9, i32* %1013, align 4
  %1033 = getelementptr inbounds i32, i32* %1013, i64 2
  store i32 0, i32* %1032, align 4
  br label %1178

1034:                                             ; preds = %760, %756, %749, %867, %817, %790, %499
  %1035 = phi i32 [ %872, %867 ], [ %826, %817 ], [ %791, %790 ], [ %750, %749 ], [ %504, %499 ], [ %750, %756 ], [ %750, %760 ]
  %1036 = phi i32 [ %478, %867 ], [ %478, %817 ], [ %478, %790 ], [ %751, %749 ], [ %478, %499 ], [ %751, %756 ], [ %751, %760 ]
  %1037 = phi i32 [ %477, %867 ], [ %477, %817 ], [ %477, %790 ], [ %752, %749 ], [ %477, %499 ], [ %752, %756 ], [ %752, %760 ]
  %1038 = phi i32 [ 0, %867 ], [ 0, %817 ], [ 0, %790 ], [ 0, %749 ], [ %506, %499 ], [ 0, %756 ], [ 0, %760 ]
  %1039 = phi i8* [ %471, %867 ], [ %471, %817 ], [ %471, %790 ], [ %753, %749 ], [ %471, %499 ], [ %753, %756 ], [ %753, %760 ]
  %1040 = phi i32* [ %871, %867 ], [ %825, %817 ], [ %795, %790 ], [ %46, %749 ], [ %447, %499 ], [ %754, %756 ], [ %754, %760 ]
  %1041 = phi i32 [ %875, %867 ], [ %829, %817 ], [ %798, %790 ], [ %446, %749 ], [ %509, %499 ], [ %446, %756 ], [ %767, %760 ]
  %1042 = phi i32* [ %873, %867 ], [ %827, %817 ], [ %796, %790 ], [ %445, %749 ], [ %507, %499 ], [ %445, %756 ], [ %768, %760 ]
  %1043 = sub i32 0, %1035
  %1044 = icmp sgt i32 %9, %1035
  br i1 %1044, label %443, label %1045

1045:                                             ; preds = %1034
  %1046 = icmp eq i32 %1038, 0
  br i1 %1046, label %1091, label %1047

1047:                                             ; preds = %1045
  %1048 = add nsw i32 %1038, %1035
  %1049 = icmp slt i32 %1048, %9
  br i1 %1049, label %1050, label %1075

1050:                                             ; preds = %1047
  %1051 = icmp slt i32 %1037, 1
  br i1 %1051, label %1052, label %1066

1052:                                             ; preds = %1050
  %1053 = icmp ult i8* %1039, %30
  br i1 %1053, label %1056, label %1054

1054:                                             ; preds = %1052
  %1055 = icmp eq i32 %1037, 0
  br i1 %1055, label %968, label %1066

1056:                                             ; preds = %1052
  %1057 = getelementptr inbounds i8, i8* %1039, i64 1
  %1058 = load i8, i8* %1039, align 1
  %1059 = zext i8 %1058 to i64
  %1060 = getelementptr inbounds i8, i8* %11, i64 %1059
  %1061 = load i8, i8* %1060, align 1
  %1062 = zext i8 %1061 to i32
  %1063 = shl i32 %1062, %1037
  %1064 = or i32 %1063, %1036
  %1065 = add nsw i32 %1037, 8
  br label %1066

1066:                                             ; preds = %1054, %1056, %1050
  %1067 = phi i32 [ %1064, %1056 ], [ %1036, %1050 ], [ %1036, %1054 ]
  %1068 = phi i32 [ %1065, %1056 ], [ %1037, %1050 ], [ 1, %1054 ]
  %1069 = phi i8* [ %1057, %1056 ], [ %1039, %1050 ], [ %1039, %1054 ]
  %1070 = and i32 %1067, 1
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %923, label %1072

1072:                                             ; preds = %1066
  %1073 = add nsw i32 %1068, -1
  %1074 = lshr i32 %1067, 1
  br label %1075

1075:                                             ; preds = %1047, %1072
  %1076 = phi i32 [ %1074, %1072 ], [ %1036, %1047 ]
  %1077 = phi i32 [ %1073, %1072 ], [ %1037, %1047 ]
  %1078 = phi i8* [ %1069, %1072 ], [ %1039, %1047 ]
  %1079 = getelementptr inbounds i32, i32* %1040, i64 1
  store i32 %1038, i32* %1040, align 4
  br label %1091

1080:                                             ; preds = %858, %876, %920, %923, %938, %953
  %1081 = phi i32 [ %924, %923 ], [ %452, %920 ], [ %452, %876 ], [ %452, %858 ], [ %939, %938 ], [ %954, %953 ]
  %1082 = phi i32 [ %927, %923 ], [ %922, %920 ], [ %478, %876 ], [ %478, %858 ], [ %940, %938 ], [ %955, %953 ]
  %1083 = phi i32 [ %928, %923 ], [ %921, %920 ], [ %477, %876 ], [ %477, %858 ], [ %941, %938 ], [ %956, %953 ]
  %1084 = phi i32 [ %925, %923 ], [ %449, %920 ], [ %449, %876 ], [ %449, %858 ], [ %942, %938 ], [ %957, %953 ]
  %1085 = phi i8* [ %929, %923 ], [ %908, %920 ], [ %471, %876 ], [ %471, %858 ], [ %943, %938 ], [ %958, %953 ]
  %1086 = phi i32* [ %926, %923 ], [ %889, %920 ], [ %878, %876 ], [ %447, %858 ], [ %944, %938 ], [ %959, %953 ]
  %1087 = phi i32 [ 0, %923 ], [ 1, %920 ], [ 0, %876 ], [ 0, %858 ], [ 0, %938 ], [ 0, %953 ]
  %1088 = icmp eq i32 %1084, 0
  br i1 %1088, label %1091, label %1089

1089:                                             ; preds = %1080
  %1090 = getelementptr inbounds i32, i32* %1086, i64 1
  store i32 %1084, i32* %1086, align 4
  br label %1091

1091:                                             ; preds = %161, %1045, %1075, %1080, %1089
  %1092 = phi i32 [ %1087, %1089 ], [ %1087, %1080 ], [ 0, %1075 ], [ 0, %1045 ], [ 0, %161 ]
  %1093 = phi i8* [ %1085, %1089 ], [ %1085, %1080 ], [ %1078, %1075 ], [ %1039, %1045 ], [ %153, %161 ]
  %1094 = phi i32 [ %1083, %1089 ], [ %1083, %1080 ], [ %1077, %1075 ], [ %1037, %1045 ], [ %155, %161 ]
  %1095 = phi i32 [ %1082, %1089 ], [ %1082, %1080 ], [ %1076, %1075 ], [ %1036, %1045 ], [ %156, %161 ]
  %1096 = phi i32 [ %1081, %1089 ], [ %1081, %1080 ], [ %1035, %1075 ], [ %1035, %1045 ], [ 0, %161 ]
  %1097 = phi i32* [ %1090, %1089 ], [ %1086, %1080 ], [ %1079, %1075 ], [ %1040, %1045 ], [ %46, %161 ]
  %1098 = icmp eq i32 %1096, %9
  br i1 %1098, label %1145, label %1099

1099:                                             ; preds = %1091
  %1100 = load i32, i32* %35, align 8
  %1101 = load i8*, i8** %36, align 8
  %1102 = icmp ult i32 %1096, %9
  %1103 = select i1 %1102, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)
  %1104 = load i32, i32* %37, align 8
  %1105 = and i32 %1104, 1024
  %1106 = icmp ne i32 %1105, 0
  %1107 = select i1 %1106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %1108 = select i1 %1106, i32* %38, i32* %39
  %1109 = load i32, i32* %1108, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %1101, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* %1103, i32 %1100, i8* %1107, i32 %1109, i32 %1096, i32 %9) #7
  %1110 = icmp sgt i32 %1096, %9
  %1111 = icmp ugt i32* %1097, %46
  %1112 = and i1 %1110, %1111
  br i1 %1112, label %1113, label %1122

1113:                                             ; preds = %1099, %1113
  %1114 = phi i32* [ %1116, %1113 ], [ %1097, %1099 ]
  %1115 = phi i32 [ %1118, %1113 ], [ %1096, %1099 ]
  %1116 = getelementptr inbounds i32, i32* %1114, i64 -1
  %1117 = load i32, i32* %1116, align 4
  %1118 = sub i32 %1115, %1117
  %1119 = icmp sgt i32 %1118, %9
  %1120 = icmp ugt i32* %1116, %46
  %1121 = and i1 %1119, %1120
  br i1 %1121, label %1113, label %1122

1122:                                             ; preds = %1113, %1099
  %1123 = phi i32 [ %1096, %1099 ], [ %1118, %1113 ]
  %1124 = phi i32* [ %1097, %1099 ], [ %1116, %1113 ]
  %1125 = phi i1 [ %1110, %1099 ], [ %1119, %1113 ]
  %1126 = icmp slt i32 %1123, %9
  br i1 %1126, label %1127, label %1141

1127:                                             ; preds = %1122
  %1128 = icmp sgt i32 %1123, 0
  %1129 = select i1 %1128, i32 %1123, i32 0
  %1130 = ptrtoint i32* %1124 to i64
  %1131 = ptrtoint i32* %46 to i64
  %1132 = sub i64 %1130, %1131
  %1133 = and i64 %1132, 4
  %1134 = icmp eq i64 %1133, 0
  br i1 %1134, label %1137, label %1135

1135:                                             ; preds = %1127
  %1136 = getelementptr inbounds i32, i32* %1124, i64 1
  store i32 0, i32* %1124, align 4
  br label %1137

1137:                                             ; preds = %1127, %1135
  %1138 = phi i32* [ %1136, %1135 ], [ %1124, %1127 ]
  %1139 = sub nsw i32 %9, %1129
  %1140 = getelementptr inbounds i32, i32* %1138, i64 1
  store i32 %1139, i32* %1138, align 4
  br label %1145

1141:                                             ; preds = %1122
  br i1 %1125, label %1142, label %1145

1142:                                             ; preds = %1141
  %1143 = getelementptr inbounds i32, i32* %1124, i64 1
  store i32 %9, i32* %1124, align 4
  %1144 = getelementptr inbounds i32, i32* %1124, i64 2
  store i32 0, i32* %1143, align 4
  br label %1145

1145:                                             ; preds = %389, %1091, %1141, %1142, %1137, %439, %440, %435
  %1146 = phi i32 [ %393, %435 ], [ %393, %440 ], [ %393, %439 ], [ %393, %389 ], [ %1095, %1137 ], [ %1095, %1142 ], [ %1095, %1141 ], [ %1095, %1091 ]
  %1147 = phi i32 [ %392, %435 ], [ %392, %440 ], [ %392, %439 ], [ %392, %389 ], [ %1094, %1137 ], [ %1094, %1142 ], [ %1094, %1141 ], [ %1094, %1091 ]
  %1148 = phi i8* [ %391, %435 ], [ %391, %440 ], [ %391, %439 ], [ %391, %389 ], [ %1093, %1137 ], [ %1093, %1142 ], [ %1093, %1141 ], [ %1093, %1091 ]
  %1149 = phi i32* [ %438, %435 ], [ %442, %440 ], [ %422, %439 ], [ %395, %389 ], [ %1140, %1137 ], [ %1144, %1142 ], [ %1124, %1141 ], [ %1097, %1091 ]
  %1150 = phi i32 [ %390, %435 ], [ %390, %440 ], [ %390, %439 ], [ %390, %389 ], [ %1092, %1137 ], [ %1092, %1142 ], [ %1092, %1141 ], [ %1092, %1091 ]
  %1151 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %41, align 8
  tail call void %1151(i8* %51, i32* %46, i32* %1149, i32 %9) #7
  store i32 0, i32* %1149, align 4
  %1152 = load i64, i64* %42, align 8
  %1153 = load i64, i64* %43, align 8
  store i64 %1153, i64* %42, align 8
  store i64 %1152, i64* %43, align 8
  %1154 = load i64, i64* %12, align 8
  %1155 = getelementptr inbounds i8, i8* %51, i64 %1154
  %1156 = sub nsw i64 %52, %1154
  %1157 = load i32, i32* %35, align 8
  %1158 = add nsw i32 %1157, 1
  store i32 %1158, i32* %35, align 8
  %1159 = icmp sgt i64 %1156, 0
  %1160 = inttoptr i64 %1153 to i32*
  br i1 %1159, label %45, label %1190

1161:                                             ; preds = %138, %65, %106
  %1162 = phi i32 [ %100, %106 ], [ %59, %65 ], [ %133, %138 ]
  %1163 = phi i8* [ %102, %106 ], [ %61, %65 ], [ %121, %138 ]
  %1164 = phi i32 [ %47, %106 ], [ 0, %65 ], [ 0, %138 ]
  %1165 = icmp eq i32 %9, 0
  br i1 %1165, label %1178, label %1166

1166:                                             ; preds = %1161
  %1167 = load i32, i32* %35, align 8
  %1168 = load i8*, i8** %36, align 8
  %1169 = load i32, i32* %37, align 8
  %1170 = and i32 %1169, 1024
  %1171 = icmp ne i32 %1170, 0
  %1172 = select i1 %1171, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)
  %1173 = select i1 %1171, i32* %38, i32* %39
  %1174 = load i32, i32* %1173, align 4
  tail call void (i8*, i8*, i8*, ...) @TIFFWarningExt(i8* %1168, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @Fax3Decode2D.module, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0), i32 %1167, i8* %1172, i32 %1174, i32 0, i32 %9) #7
  %1175 = getelementptr inbounds i32, i32* %46, i64 1
  store i32 %9, i32* %46, align 4
  br i1 %40, label %1178, label %1176

1176:                                             ; preds = %1166
  %1177 = getelementptr inbounds i32, i32* %46, i64 2
  store i32 0, i32* %1175, align 4
  br label %1178

1178:                                             ; preds = %1166, %1161, %329, %985, %1176, %1030, %1031, %1026, %374, %375, %370
  %1179 = phi i32 [ %1162, %1176 ], [ %1162, %1161 ], [ %314, %370 ], [ %314, %375 ], [ %314, %374 ], [ %314, %329 ], [ %970, %1026 ], [ %970, %1031 ], [ %970, %1030 ], [ %970, %985 ], [ %1162, %1166 ]
  %1180 = phi i8* [ %1163, %1176 ], [ %1163, %1161 ], [ %316, %370 ], [ %316, %375 ], [ %316, %374 ], [ %316, %329 ], [ %972, %1026 ], [ %972, %1031 ], [ %972, %1030 ], [ %972, %985 ], [ %1163, %1166 ]
  %1181 = phi i32* [ %1177, %1176 ], [ %46, %1161 ], [ %373, %370 ], [ %377, %375 ], [ %357, %374 ], [ %330, %329 ], [ %1029, %1026 ], [ %1033, %1031 ], [ %1013, %1030 ], [ %986, %985 ], [ %1175, %1166 ]
  %1182 = phi i32 [ %1164, %1176 ], [ %1164, %1161 ], [ 0, %370 ], [ 0, %375 ], [ 0, %374 ], [ 0, %329 ], [ 0, %1026 ], [ 0, %1031 ], [ 0, %1030 ], [ 0, %985 ], [ %1164, %1166 ]
  %1183 = load void (i8*, i32*, i32*, i32)*, void (i8*, i32*, i32*, i32)** %41, align 8
  tail call void %1183(i8* %51, i32* %46, i32* %1181, i32 %9) #7
  store i32 0, i32* %22, align 4
  store i32 %1179, i32* %20, align 8
  store i32 %1182, i32* %24, align 8
  %1184 = bitcast i8** %26 to i64*
  %1185 = load i64, i64* %1184, align 8
  %1186 = ptrtoint i8* %1180 to i64
  %1187 = load i64, i64* %28, align 8
  %1188 = sub i64 %1185, %1186
  %1189 = add i64 %1188, %1187
  store i64 %1189, i64* %28, align 8
  store i8* %1180, i8** %26, align 8
  br label %1201

1190:                                             ; preds = %1145, %19
  %1191 = phi i32 [ %21, %19 ], [ %1146, %1145 ]
  %1192 = phi i32 [ %23, %19 ], [ %1147, %1145 ]
  %1193 = phi i8* [ %27, %19 ], [ %1148, %1145 ]
  %1194 = phi i32 [ %25, %19 ], [ %1150, %1145 ]
  store i32 %1192, i32* %22, align 4
  store i32 %1191, i32* %20, align 8
  store i32 %1194, i32* %24, align 8
  %1195 = bitcast i8** %26 to i64*
  %1196 = load i64, i64* %1195, align 8
  %1197 = ptrtoint i8* %1193 to i64
  %1198 = load i64, i64* %28, align 8
  %1199 = sub i64 %1196, %1197
  %1200 = add i64 %1199, %1198
  store i64 %1200, i64* %28, align 8
  store i8* %1193, i8** %26, align 8
  br label %1201

1201:                                             ; preds = %1190, %1178, %16
  %1202 = phi i32 [ -1, %16 ], [ -1, %1178 ], [ 1, %1190 ]
  ret i32 %1202
}

declare void @TIFFWarningExt(i8*, i8*, i8*, ...) local_unnamed_addr #2

declare i8* @TIFFGetBitRevTable(i32) local_unnamed_addr #2

declare i32 @TIFFFlushData1(%struct.tiff*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @Fax3Encode1DRow(%struct.tiff*, i8*, i32) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %5 = bitcast i8** %4 to %struct.Fax3CodecState**
  %6 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %5, align 8
  br label %7

7:                                                ; preds = %246, %3
  %8 = phi i32 [ 0, %3 ], [ %248, %246 ]
  %9 = sub nsw i32 %2, %8
  %10 = ashr i32 %8, 3
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = icmp sgt i32 %9, 0
  br i1 %13, label %14, label %125

14:                                               ; preds = %7
  %15 = and i32 %8, 7
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %36, label %17

17:                                               ; preds = %14
  %18 = load i8, i8* %12, align 1
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, %15
  %21 = and i32 %20, 255
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sub nuw nsw i32 8, %15
  %27 = icmp ult i32 %26, %25
  %28 = select i1 %27, i32 %26, i32 %25
  %29 = icmp sgt i32 %28, %9
  %30 = select i1 %29, i32 %9, i32 %28
  %31 = add nuw nsw i32 %30, %15
  %32 = icmp slt i32 %31, 8
  br i1 %32, label %125, label %33

33:                                               ; preds = %17
  %34 = sub nsw i32 %9, %30
  %35 = getelementptr inbounds i8, i8* %12, i64 1
  br label %36

36:                                               ; preds = %33, %14
  %37 = phi i8* [ %35, %33 ], [ %12, %14 ]
  %38 = phi i32 [ %34, %33 ], [ %9, %14 ]
  %39 = phi i32 [ %30, %33 ], [ 0, %14 ]
  %40 = icmp sgt i32 %38, 127
  br i1 %40, label %41, label %89

41:                                               ; preds = %36
  %42 = ptrtoint i8* %37 to i64
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %41
  %46 = bitcast i8* %37 to i64*
  br label %63

47:                                               ; preds = %41, %53
  %48 = phi i32 [ %54, %53 ], [ %39, %41 ]
  %49 = phi i32 [ %55, %53 ], [ %38, %41 ]
  %50 = phi i8* [ %56, %53 ], [ %37, %41 ]
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %83

53:                                               ; preds = %47
  %54 = add nsw i32 %48, 8
  %55 = add nsw i32 %49, -8
  %56 = getelementptr inbounds i8, i8* %50, i64 1
  %57 = ptrtoint i8* %56 to i64
  %58 = and i64 %57, 7
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47

60:                                               ; preds = %53
  %61 = bitcast i8* %56 to i64*
  %62 = icmp sgt i32 %55, 63
  br i1 %62, label %63, label %78

63:                                               ; preds = %60, %45
  %64 = phi i64* [ %61, %60 ], [ %46, %45 ]
  %65 = phi i32 [ %54, %60 ], [ %39, %45 ]
  %66 = phi i32 [ %55, %60 ], [ %38, %45 ]
  br label %67

67:                                               ; preds = %63, %73
  %68 = phi i64* [ %76, %73 ], [ %64, %63 ]
  %69 = phi i32 [ %74, %73 ], [ %65, %63 ]
  %70 = phi i32 [ %75, %73 ], [ %66, %63 ]
  %71 = load i64, i64* %68, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %78

73:                                               ; preds = %67
  %74 = add i32 %69, 64
  %75 = add nsw i32 %70, -64
  %76 = getelementptr inbounds i64, i64* %68, i64 1
  %77 = icmp sgt i32 %75, 63
  br i1 %77, label %67, label %78

78:                                               ; preds = %73, %67, %60
  %79 = phi i32 [ %55, %60 ], [ %75, %73 ], [ %70, %67 ]
  %80 = phi i32 [ %54, %60 ], [ %74, %73 ], [ %69, %67 ]
  %81 = phi i64* [ %61, %60 ], [ %76, %73 ], [ %68, %67 ]
  %82 = bitcast i64* %81 to i8*
  br label %89

83:                                               ; preds = %47
  %84 = zext i8 %51 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = add nsw i32 %48, %87
  br label %125

89:                                               ; preds = %78, %36
  %90 = phi i8* [ %37, %36 ], [ %82, %78 ]
  %91 = phi i32 [ %38, %36 ], [ %79, %78 ]
  %92 = phi i32 [ %39, %36 ], [ %80, %78 ]
  %93 = icmp sgt i32 %91, 7
  br i1 %93, label %94, label %111

94:                                               ; preds = %89, %106
  %95 = phi i32 [ %107, %106 ], [ %92, %89 ]
  %96 = phi i32 [ %108, %106 ], [ %91, %89 ]
  %97 = phi i8* [ %109, %106 ], [ %90, %89 ]
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %94
  %101 = zext i8 %98 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = add nsw i32 %95, %104
  br label %125

106:                                              ; preds = %94
  %107 = add nsw i32 %95, 8
  %108 = add nsw i32 %96, -8
  %109 = getelementptr inbounds i8, i8* %97, i64 1
  %110 = icmp sgt i32 %108, 7
  br i1 %110, label %94, label %111

111:                                              ; preds = %106, %89
  %112 = phi i8* [ %90, %89 ], [ %109, %106 ]
  %113 = phi i32 [ %91, %89 ], [ %108, %106 ]
  %114 = phi i32 [ %92, %89 ], [ %107, %106 ]
  %115 = icmp sgt i32 %113, 0
  br i1 %115, label %116, label %125

116:                                              ; preds = %111
  %117 = load i8, i8* %112, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp slt i32 %113, %121
  %123 = select i1 %122, i32 %113, i32 %121
  %124 = add nsw i32 %123, %114
  br label %125

125:                                              ; preds = %7, %17, %83, %100, %111, %116
  %126 = phi i32 [ %105, %100 ], [ %88, %83 ], [ %30, %17 ], [ %124, %116 ], [ %114, %111 ], [ 0, %7 ]
  tail call fastcc void @putspan(%struct.tiff* %0, i32 %126, %struct.tableentry* getelementptr inbounds ([109 x %struct.tableentry], [109 x %struct.tableentry]* @TIFFFaxWhiteCodes, i64 0, i64 0))
  %127 = add i32 %126, %8
  %128 = icmp ult i32 %127, %2
  br i1 %128, label %129, label %250

129:                                              ; preds = %125
  %130 = sub nsw i32 %2, %127
  %131 = ashr i32 %127, 3
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %1, i64 %132
  %134 = icmp sgt i32 %130, 0
  br i1 %134, label %135, label %246

135:                                              ; preds = %129
  %136 = and i32 %127, 7
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %157, label %138

138:                                              ; preds = %135
  %139 = load i8, i8* %133, align 1
  %140 = zext i8 %139 to i32
  %141 = shl i32 %140, %136
  %142 = and i32 %141, 255
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = sub nuw nsw i32 8, %136
  %148 = icmp ult i32 %147, %146
  %149 = select i1 %148, i32 %147, i32 %146
  %150 = icmp sgt i32 %149, %130
  %151 = select i1 %150, i32 %130, i32 %149
  %152 = add nuw nsw i32 %151, %136
  %153 = icmp slt i32 %152, 8
  br i1 %153, label %246, label %154

154:                                              ; preds = %138
  %155 = sub nsw i32 %130, %151
  %156 = getelementptr inbounds i8, i8* %133, i64 1
  br label %157

157:                                              ; preds = %154, %135
  %158 = phi i8* [ %156, %154 ], [ %133, %135 ]
  %159 = phi i32 [ %155, %154 ], [ %130, %135 ]
  %160 = phi i32 [ %151, %154 ], [ 0, %135 ]
  %161 = icmp sgt i32 %159, 127
  br i1 %161, label %162, label %210

162:                                              ; preds = %157
  %163 = ptrtoint i8* %158 to i64
  %164 = and i64 %163, 7
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %162
  %167 = bitcast i8* %158 to i64*
  br label %184

168:                                              ; preds = %162, %174
  %169 = phi i32 [ %175, %174 ], [ %160, %162 ]
  %170 = phi i32 [ %176, %174 ], [ %159, %162 ]
  %171 = phi i8* [ %177, %174 ], [ %158, %162 ]
  %172 = load i8, i8* %171, align 1
  %173 = icmp eq i8 %172, -1
  br i1 %173, label %174, label %204

174:                                              ; preds = %168
  %175 = add nsw i32 %169, 8
  %176 = add nsw i32 %170, -8
  %177 = getelementptr inbounds i8, i8* %171, i64 1
  %178 = ptrtoint i8* %177 to i64
  %179 = and i64 %178, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %168

181:                                              ; preds = %174
  %182 = bitcast i8* %177 to i64*
  %183 = icmp sgt i32 %176, 63
  br i1 %183, label %184, label %199

184:                                              ; preds = %181, %166
  %185 = phi i64* [ %182, %181 ], [ %167, %166 ]
  %186 = phi i32 [ %175, %181 ], [ %160, %166 ]
  %187 = phi i32 [ %176, %181 ], [ %159, %166 ]
  br label %188

188:                                              ; preds = %184, %194
  %189 = phi i64* [ %197, %194 ], [ %185, %184 ]
  %190 = phi i32 [ %195, %194 ], [ %186, %184 ]
  %191 = phi i32 [ %196, %194 ], [ %187, %184 ]
  %192 = load i64, i64* %189, align 8
  %193 = icmp eq i64 %192, -1
  br i1 %193, label %194, label %199

194:                                              ; preds = %188
  %195 = add i32 %190, 64
  %196 = add nsw i32 %191, -64
  %197 = getelementptr inbounds i64, i64* %189, i64 1
  %198 = icmp sgt i32 %196, 63
  br i1 %198, label %188, label %199

199:                                              ; preds = %194, %188, %181
  %200 = phi i32 [ %176, %181 ], [ %196, %194 ], [ %191, %188 ]
  %201 = phi i32 [ %175, %181 ], [ %195, %194 ], [ %190, %188 ]
  %202 = phi i64* [ %182, %181 ], [ %197, %194 ], [ %189, %188 ]
  %203 = bitcast i64* %202 to i8*
  br label %210

204:                                              ; preds = %168
  %205 = zext i8 %172 to i64
  %206 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = add nsw i32 %169, %208
  br label %246

210:                                              ; preds = %199, %157
  %211 = phi i8* [ %158, %157 ], [ %203, %199 ]
  %212 = phi i32 [ %159, %157 ], [ %200, %199 ]
  %213 = phi i32 [ %160, %157 ], [ %201, %199 ]
  %214 = icmp sgt i32 %212, 7
  br i1 %214, label %215, label %232

215:                                              ; preds = %210, %227
  %216 = phi i32 [ %228, %227 ], [ %213, %210 ]
  %217 = phi i32 [ %229, %227 ], [ %212, %210 ]
  %218 = phi i8* [ %230, %227 ], [ %211, %210 ]
  %219 = load i8, i8* %218, align 1
  %220 = icmp eq i8 %219, -1
  br i1 %220, label %227, label %221

221:                                              ; preds = %215
  %222 = zext i8 %219 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = add nsw i32 %216, %225
  br label %246

227:                                              ; preds = %215
  %228 = add nsw i32 %216, 8
  %229 = add nsw i32 %217, -8
  %230 = getelementptr inbounds i8, i8* %218, i64 1
  %231 = icmp sgt i32 %229, 7
  br i1 %231, label %215, label %232

232:                                              ; preds = %227, %210
  %233 = phi i8* [ %211, %210 ], [ %230, %227 ]
  %234 = phi i32 [ %212, %210 ], [ %229, %227 ]
  %235 = phi i32 [ %213, %210 ], [ %228, %227 ]
  %236 = icmp sgt i32 %234, 0
  br i1 %236, label %237, label %246

237:                                              ; preds = %232
  %238 = load i8, i8* %233, align 1
  %239 = zext i8 %238 to i64
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp slt i32 %234, %242
  %244 = select i1 %243, i32 %234, i32 %242
  %245 = add nsw i32 %244, %235
  br label %246

246:                                              ; preds = %129, %138, %204, %221, %232, %237
  %247 = phi i32 [ %226, %221 ], [ %209, %204 ], [ %151, %138 ], [ %245, %237 ], [ %235, %232 ], [ 0, %129 ]
  tail call fastcc void @putspan(%struct.tiff* %0, i32 %247, %struct.tableentry* getelementptr inbounds ([109 x %struct.tableentry], [109 x %struct.tableentry]* @TIFFFaxBlackCodes, i64 0, i64 0))
  %248 = add i32 %247, %127
  %249 = icmp ult i32 %248, %2
  br i1 %249, label %7, label %250

250:                                              ; preds = %246, %125
  %251 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = and i32 %252, 12
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %305, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 8
  br i1 %258, label %277, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %263 = load i64, i64* %262, align 8
  %264 = icmp slt i64 %261, %263
  br i1 %264, label %267, label %265

265:                                              ; preds = %259
  %266 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %267

267:                                              ; preds = %259, %265
  %268 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = trunc i32 %269 to i8
  %271 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %272 = load i8*, i8** %271, align 8
  %273 = getelementptr inbounds i8, i8* %272, i64 1
  store i8* %273, i8** %271, align 8
  store i8 %270, i8* %272, align 1
  %274 = load i64, i64* %260, align 8
  %275 = add nsw i64 %274, 1
  store i64 %275, i64* %260, align 8
  store i32 0, i32* %268, align 8
  store i32 8, i32* %256, align 4
  %276 = load i32, i32* %251, align 4
  br label %277

277:                                              ; preds = %255, %267
  %278 = phi i32 [ %252, %255 ], [ %276, %267 ]
  %279 = and i32 %278, 8
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %305, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %283 = bitcast i8** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = and i64 %284, 1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %305, label %287

287:                                              ; preds = %281
  %288 = inttoptr i64 %284 to i8*
  %289 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %290 = load i64, i64* %289, align 8
  %291 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %292 = load i64, i64* %291, align 8
  %293 = icmp slt i64 %290, %292
  br i1 %293, label %297, label %294

294:                                              ; preds = %287
  %295 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  %296 = load i8*, i8** %282, align 8
  br label %297

297:                                              ; preds = %287, %294
  %298 = phi i8* [ %288, %287 ], [ %296, %294 ]
  %299 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 2
  %300 = load i32, i32* %299, align 8
  %301 = trunc i32 %300 to i8
  %302 = getelementptr inbounds i8, i8* %298, i64 1
  store i8* %302, i8** %282, align 8
  store i8 %301, i8* %298, align 1
  %303 = load i64, i64* %289, align 8
  %304 = add nsw i64 %303, 1
  store i64 %304, i64* %289, align 8
  store i32 0, i32* %299, align 8
  store i32 8, i32* %256, align 4
  br label %305

305:                                              ; preds = %277, %250, %281, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @Fax3Encode2DRow(%struct.tiff*, i8*, i8*, i32) unnamed_addr #1 {
  %5 = load i8, i8* %1, align 1
  %6 = icmp sgt i8 %5, -1
  %7 = icmp sgt i32 %3, 0
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %99

9:                                                ; preds = %4
  %10 = icmp sgt i32 %3, 127
  br i1 %10, label %11, label %63

11:                                               ; preds = %9
  %12 = ptrtoint i8* %1 to i64
  %13 = and i64 %12, 7
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = icmp eq i8 %5, 0
  br i1 %16, label %19, label %55

17:                                               ; preds = %11
  %18 = bitcast i8* %1 to i64*
  br label %35

19:                                               ; preds = %15, %29
  %20 = phi i8* [ %25, %29 ], [ %1, %15 ]
  %21 = phi i32 [ %24, %29 ], [ %3, %15 ]
  %22 = phi i32 [ %23, %29 ], [ 0, %15 ]
  %23 = add nuw nsw i32 %22, 8
  %24 = add nsw i32 %21, -8
  %25 = getelementptr inbounds i8, i8* %20, i64 1
  %26 = ptrtoint i8* %25 to i64
  %27 = and i64 %26, 7
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %19
  %30 = load i8, i8* %25, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %19, label %55

32:                                               ; preds = %19
  %33 = bitcast i8* %25 to i64*
  %34 = icmp sgt i32 %24, 63
  br i1 %34, label %35, label %50

35:                                               ; preds = %32, %17
  %36 = phi i64* [ %33, %32 ], [ %18, %17 ]
  %37 = phi i32 [ %23, %32 ], [ 0, %17 ]
  %38 = phi i32 [ %24, %32 ], [ %3, %17 ]
  br label %39

39:                                               ; preds = %35, %45
  %40 = phi i64* [ %48, %45 ], [ %36, %35 ]
  %41 = phi i32 [ %46, %45 ], [ %37, %35 ]
  %42 = phi i32 [ %47, %45 ], [ %38, %35 ]
  %43 = load i64, i64* %40, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = add i32 %41, 64
  %47 = add nsw i32 %42, -64
  %48 = getelementptr inbounds i64, i64* %40, i64 1
  %49 = icmp sgt i32 %47, 63
  br i1 %49, label %39, label %50

50:                                               ; preds = %45, %39, %32
  %51 = phi i32 [ %24, %32 ], [ %47, %45 ], [ %42, %39 ]
  %52 = phi i32 [ %23, %32 ], [ %46, %45 ], [ %41, %39 ]
  %53 = phi i64* [ %33, %32 ], [ %48, %45 ], [ %40, %39 ]
  %54 = bitcast i64* %53 to i8*
  br label %63

55:                                               ; preds = %29, %15
  %56 = phi i8 [ %5, %15 ], [ %30, %29 ]
  %57 = phi i32 [ 0, %15 ], [ %23, %29 ]
  %58 = zext i8 %56 to i64
  %59 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = add nuw nsw i32 %57, %61
  br label %99

63:                                               ; preds = %50, %9
  %64 = phi i8* [ %1, %9 ], [ %54, %50 ]
  %65 = phi i32 [ %3, %9 ], [ %51, %50 ]
  %66 = phi i32 [ 0, %9 ], [ %52, %50 ]
  %67 = icmp sgt i32 %65, 7
  br i1 %67, label %68, label %85

68:                                               ; preds = %63, %80
  %69 = phi i32 [ %81, %80 ], [ %66, %63 ]
  %70 = phi i32 [ %82, %80 ], [ %65, %63 ]
  %71 = phi i8* [ %83, %80 ], [ %64, %63 ]
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = zext i8 %72 to i64
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %69, %78
  br label %99

80:                                               ; preds = %68
  %81 = add nsw i32 %69, 8
  %82 = add nsw i32 %70, -8
  %83 = getelementptr inbounds i8, i8* %71, i64 1
  %84 = icmp sgt i32 %82, 7
  br i1 %84, label %68, label %85

85:                                               ; preds = %80, %63
  %86 = phi i8* [ %64, %63 ], [ %83, %80 ]
  %87 = phi i32 [ %65, %63 ], [ %82, %80 ]
  %88 = phi i32 [ %66, %63 ], [ %81, %80 ]
  %89 = icmp sgt i32 %87, 0
  br i1 %89, label %90, label %99

90:                                               ; preds = %85
  %91 = load i8, i8* %86, align 1
  %92 = zext i8 %91 to i64
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp slt i32 %87, %95
  %97 = select i1 %96, i32 %87, i32 %95
  %98 = add nsw i32 %97, %88
  br label %99

99:                                               ; preds = %4, %90, %85, %74, %55
  %100 = phi i32 [ 0, %4 ], [ %79, %74 ], [ %62, %55 ], [ %98, %90 ], [ %88, %85 ]
  %101 = load i8, i8* %2, align 1
  %102 = icmp sgt i8 %101, -1
  %103 = and i1 %7, %102
  br i1 %103, label %104, label %194

104:                                              ; preds = %99
  %105 = icmp sgt i32 %3, 127
  br i1 %105, label %106, label %158

106:                                              ; preds = %104
  %107 = ptrtoint i8* %2 to i64
  %108 = and i64 %107, 7
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %106
  %111 = icmp eq i8 %101, 0
  br i1 %111, label %114, label %150

112:                                              ; preds = %106
  %113 = bitcast i8* %2 to i64*
  br label %130

114:                                              ; preds = %110, %124
  %115 = phi i8* [ %120, %124 ], [ %2, %110 ]
  %116 = phi i32 [ %119, %124 ], [ %3, %110 ]
  %117 = phi i32 [ %118, %124 ], [ 0, %110 ]
  %118 = add nuw nsw i32 %117, 8
  %119 = add nsw i32 %116, -8
  %120 = getelementptr inbounds i8, i8* %115, i64 1
  %121 = ptrtoint i8* %120 to i64
  %122 = and i64 %121, 7
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %114
  %125 = load i8, i8* %120, align 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %114, label %150

127:                                              ; preds = %114
  %128 = bitcast i8* %120 to i64*
  %129 = icmp sgt i32 %119, 63
  br i1 %129, label %130, label %145

130:                                              ; preds = %127, %112
  %131 = phi i64* [ %128, %127 ], [ %113, %112 ]
  %132 = phi i32 [ %118, %127 ], [ 0, %112 ]
  %133 = phi i32 [ %119, %127 ], [ %3, %112 ]
  br label %134

134:                                              ; preds = %130, %140
  %135 = phi i64* [ %143, %140 ], [ %131, %130 ]
  %136 = phi i32 [ %141, %140 ], [ %132, %130 ]
  %137 = phi i32 [ %142, %140 ], [ %133, %130 ]
  %138 = load i64, i64* %135, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %145

140:                                              ; preds = %134
  %141 = add i32 %136, 64
  %142 = add nsw i32 %137, -64
  %143 = getelementptr inbounds i64, i64* %135, i64 1
  %144 = icmp sgt i32 %142, 63
  br i1 %144, label %134, label %145

145:                                              ; preds = %140, %134, %127
  %146 = phi i32 [ %119, %127 ], [ %142, %140 ], [ %137, %134 ]
  %147 = phi i32 [ %118, %127 ], [ %141, %140 ], [ %136, %134 ]
  %148 = phi i64* [ %128, %127 ], [ %143, %140 ], [ %135, %134 ]
  %149 = bitcast i64* %148 to i8*
  br label %158

150:                                              ; preds = %124, %110
  %151 = phi i8 [ %101, %110 ], [ %125, %124 ]
  %152 = phi i32 [ 0, %110 ], [ %118, %124 ]
  %153 = zext i8 %151 to i64
  %154 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = add nuw nsw i32 %152, %156
  br label %194

158:                                              ; preds = %145, %104
  %159 = phi i8* [ %2, %104 ], [ %149, %145 ]
  %160 = phi i32 [ %3, %104 ], [ %146, %145 ]
  %161 = phi i32 [ 0, %104 ], [ %147, %145 ]
  %162 = icmp sgt i32 %160, 7
  br i1 %162, label %163, label %180

163:                                              ; preds = %158, %175
  %164 = phi i32 [ %176, %175 ], [ %161, %158 ]
  %165 = phi i32 [ %177, %175 ], [ %160, %158 ]
  %166 = phi i8* [ %178, %175 ], [ %159, %158 ]
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %175, label %169

169:                                              ; preds = %163
  %170 = zext i8 %167 to i64
  %171 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = add nsw i32 %164, %173
  br label %194

175:                                              ; preds = %163
  %176 = add nsw i32 %164, 8
  %177 = add nsw i32 %165, -8
  %178 = getelementptr inbounds i8, i8* %166, i64 1
  %179 = icmp sgt i32 %177, 7
  br i1 %179, label %163, label %180

180:                                              ; preds = %175, %158
  %181 = phi i8* [ %159, %158 ], [ %178, %175 ]
  %182 = phi i32 [ %160, %158 ], [ %177, %175 ]
  %183 = phi i32 [ %161, %158 ], [ %176, %175 ]
  %184 = icmp sgt i32 %182, 0
  br i1 %184, label %185, label %194

185:                                              ; preds = %180
  %186 = load i8, i8* %181, align 1
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp slt i32 %182, %190
  %192 = select i1 %191, i32 %182, i32 %190
  %193 = add nsw i32 %192, %183
  br label %194

194:                                              ; preds = %99, %185, %180, %169, %150
  %195 = phi i32 [ %157, %150 ], [ %174, %169 ], [ %183, %180 ], [ %193, %185 ], [ 0, %99 ]
  br label %196

196:                                              ; preds = %194, %1456
  %197 = phi i32 [ %733, %1456 ], [ 0, %194 ]
  %198 = phi i32 [ %1458, %1456 ], [ %100, %194 ]
  %199 = phi i32 [ %1460, %1456 ], [ %195, %194 ]
  %200 = icmp ult i32 %199, %3
  br i1 %200, label %201, label %442

201:                                              ; preds = %196
  %202 = lshr i32 %199, 3
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %2, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = and i32 %199, 7
  %208 = xor i32 %207, 7
  %209 = shl i32 1, %208
  %210 = and i32 %209, %206
  %211 = icmp eq i32 %210, 0
  %212 = sub nsw i32 %3, %199
  %213 = ashr i32 %199, 3
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %2, i64 %214
  %216 = icmp sgt i32 %212, 0
  br i1 %211, label %328, label %217

217:                                              ; preds = %201
  br i1 %216, label %218, label %439

218:                                              ; preds = %217
  %219 = icmp eq i32 %207, 0
  br i1 %219, label %239, label %220

220:                                              ; preds = %218
  %221 = load i8, i8* %215, align 1
  %222 = zext i8 %221 to i32
  %223 = shl i32 %222, %207
  %224 = and i32 %223, 255
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = sub nuw nsw i32 8, %207
  %230 = icmp ult i32 %229, %228
  %231 = select i1 %230, i32 %229, i32 %228
  %232 = icmp sgt i32 %231, %212
  %233 = select i1 %232, i32 %212, i32 %231
  %234 = add nuw nsw i32 %233, %207
  %235 = icmp slt i32 %234, 8
  br i1 %235, label %439, label %236

236:                                              ; preds = %220
  %237 = sub nsw i32 %212, %233
  %238 = getelementptr inbounds i8, i8* %215, i64 1
  br label %239

239:                                              ; preds = %236, %218
  %240 = phi i8* [ %238, %236 ], [ %215, %218 ]
  %241 = phi i32 [ %237, %236 ], [ %212, %218 ]
  %242 = phi i32 [ %233, %236 ], [ 0, %218 ]
  %243 = icmp sgt i32 %241, 127
  br i1 %243, label %244, label %292

244:                                              ; preds = %239
  %245 = ptrtoint i8* %240 to i64
  %246 = and i64 %245, 7
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  %249 = bitcast i8* %240 to i64*
  br label %266

250:                                              ; preds = %244, %256
  %251 = phi i32 [ %257, %256 ], [ %242, %244 ]
  %252 = phi i32 [ %258, %256 ], [ %241, %244 ]
  %253 = phi i8* [ %259, %256 ], [ %240, %244 ]
  %254 = load i8, i8* %253, align 1
  %255 = icmp eq i8 %254, -1
  br i1 %255, label %256, label %286

256:                                              ; preds = %250
  %257 = add nsw i32 %251, 8
  %258 = add nsw i32 %252, -8
  %259 = getelementptr inbounds i8, i8* %253, i64 1
  %260 = ptrtoint i8* %259 to i64
  %261 = and i64 %260, 7
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %250

263:                                              ; preds = %256
  %264 = bitcast i8* %259 to i64*
  %265 = icmp sgt i32 %258, 63
  br i1 %265, label %266, label %281

266:                                              ; preds = %263, %248
  %267 = phi i64* [ %264, %263 ], [ %249, %248 ]
  %268 = phi i32 [ %257, %263 ], [ %242, %248 ]
  %269 = phi i32 [ %258, %263 ], [ %241, %248 ]
  br label %270

270:                                              ; preds = %266, %276
  %271 = phi i64* [ %279, %276 ], [ %267, %266 ]
  %272 = phi i32 [ %277, %276 ], [ %268, %266 ]
  %273 = phi i32 [ %278, %276 ], [ %269, %266 ]
  %274 = load i64, i64* %271, align 8
  %275 = icmp eq i64 %274, -1
  br i1 %275, label %276, label %281

276:                                              ; preds = %270
  %277 = add i32 %272, 64
  %278 = add nsw i32 %273, -64
  %279 = getelementptr inbounds i64, i64* %271, i64 1
  %280 = icmp sgt i32 %278, 63
  br i1 %280, label %270, label %281

281:                                              ; preds = %276, %270, %263
  %282 = phi i32 [ %258, %263 ], [ %278, %276 ], [ %273, %270 ]
  %283 = phi i32 [ %257, %263 ], [ %277, %276 ], [ %272, %270 ]
  %284 = phi i64* [ %264, %263 ], [ %279, %276 ], [ %271, %270 ]
  %285 = bitcast i64* %284 to i8*
  br label %292

286:                                              ; preds = %250
  %287 = zext i8 %254 to i64
  %288 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = add nsw i32 %251, %290
  br label %439

292:                                              ; preds = %281, %239
  %293 = phi i8* [ %240, %239 ], [ %285, %281 ]
  %294 = phi i32 [ %241, %239 ], [ %282, %281 ]
  %295 = phi i32 [ %242, %239 ], [ %283, %281 ]
  %296 = icmp sgt i32 %294, 7
  br i1 %296, label %297, label %314

297:                                              ; preds = %292, %309
  %298 = phi i32 [ %310, %309 ], [ %295, %292 ]
  %299 = phi i32 [ %311, %309 ], [ %294, %292 ]
  %300 = phi i8* [ %312, %309 ], [ %293, %292 ]
  %301 = load i8, i8* %300, align 1
  %302 = icmp eq i8 %301, -1
  br i1 %302, label %309, label %303

303:                                              ; preds = %297
  %304 = zext i8 %301 to i64
  %305 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = add nsw i32 %298, %307
  br label %439

309:                                              ; preds = %297
  %310 = add nsw i32 %298, 8
  %311 = add nsw i32 %299, -8
  %312 = getelementptr inbounds i8, i8* %300, i64 1
  %313 = icmp sgt i32 %311, 7
  br i1 %313, label %297, label %314

314:                                              ; preds = %309, %292
  %315 = phi i8* [ %293, %292 ], [ %312, %309 ]
  %316 = phi i32 [ %294, %292 ], [ %311, %309 ]
  %317 = phi i32 [ %295, %292 ], [ %310, %309 ]
  %318 = icmp sgt i32 %316, 0
  br i1 %318, label %319, label %439

319:                                              ; preds = %314
  %320 = load i8, i8* %315, align 1
  %321 = zext i8 %320 to i64
  %322 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = icmp slt i32 %316, %324
  %326 = select i1 %325, i32 %316, i32 %324
  %327 = add nsw i32 %326, %317
  br label %439

328:                                              ; preds = %201
  br i1 %216, label %329, label %439

329:                                              ; preds = %328
  %330 = icmp eq i32 %207, 0
  br i1 %330, label %350, label %331

331:                                              ; preds = %329
  %332 = load i8, i8* %215, align 1
  %333 = zext i8 %332 to i32
  %334 = shl i32 %333, %207
  %335 = and i32 %334, 255
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = sub nuw nsw i32 8, %207
  %341 = icmp ult i32 %340, %339
  %342 = select i1 %341, i32 %340, i32 %339
  %343 = icmp sgt i32 %342, %212
  %344 = select i1 %343, i32 %212, i32 %342
  %345 = add nuw nsw i32 %344, %207
  %346 = icmp slt i32 %345, 8
  br i1 %346, label %439, label %347

347:                                              ; preds = %331
  %348 = sub nsw i32 %212, %344
  %349 = getelementptr inbounds i8, i8* %215, i64 1
  br label %350

350:                                              ; preds = %347, %329
  %351 = phi i8* [ %349, %347 ], [ %215, %329 ]
  %352 = phi i32 [ %348, %347 ], [ %212, %329 ]
  %353 = phi i32 [ %344, %347 ], [ 0, %329 ]
  %354 = icmp sgt i32 %352, 127
  br i1 %354, label %355, label %403

355:                                              ; preds = %350
  %356 = ptrtoint i8* %351 to i64
  %357 = and i64 %356, 7
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %361

359:                                              ; preds = %355
  %360 = bitcast i8* %351 to i64*
  br label %377

361:                                              ; preds = %355, %367
  %362 = phi i32 [ %368, %367 ], [ %353, %355 ]
  %363 = phi i32 [ %369, %367 ], [ %352, %355 ]
  %364 = phi i8* [ %370, %367 ], [ %351, %355 ]
  %365 = load i8, i8* %364, align 1
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %367, label %397

367:                                              ; preds = %361
  %368 = add nsw i32 %362, 8
  %369 = add nsw i32 %363, -8
  %370 = getelementptr inbounds i8, i8* %364, i64 1
  %371 = ptrtoint i8* %370 to i64
  %372 = and i64 %371, 7
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %361

374:                                              ; preds = %367
  %375 = bitcast i8* %370 to i64*
  %376 = icmp sgt i32 %369, 63
  br i1 %376, label %377, label %392

377:                                              ; preds = %374, %359
  %378 = phi i64* [ %375, %374 ], [ %360, %359 ]
  %379 = phi i32 [ %368, %374 ], [ %353, %359 ]
  %380 = phi i32 [ %369, %374 ], [ %352, %359 ]
  br label %381

381:                                              ; preds = %377, %387
  %382 = phi i64* [ %390, %387 ], [ %378, %377 ]
  %383 = phi i32 [ %388, %387 ], [ %379, %377 ]
  %384 = phi i32 [ %389, %387 ], [ %380, %377 ]
  %385 = load i64, i64* %382, align 8
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %387, label %392

387:                                              ; preds = %381
  %388 = add i32 %383, 64
  %389 = add nsw i32 %384, -64
  %390 = getelementptr inbounds i64, i64* %382, i64 1
  %391 = icmp sgt i32 %389, 63
  br i1 %391, label %381, label %392

392:                                              ; preds = %387, %381, %374
  %393 = phi i32 [ %369, %374 ], [ %389, %387 ], [ %384, %381 ]
  %394 = phi i32 [ %368, %374 ], [ %388, %387 ], [ %383, %381 ]
  %395 = phi i64* [ %375, %374 ], [ %390, %387 ], [ %382, %381 ]
  %396 = bitcast i64* %395 to i8*
  br label %403

397:                                              ; preds = %361
  %398 = zext i8 %365 to i64
  %399 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %398
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %400 to i32
  %402 = add nsw i32 %362, %401
  br label %439

403:                                              ; preds = %392, %350
  %404 = phi i8* [ %351, %350 ], [ %396, %392 ]
  %405 = phi i32 [ %352, %350 ], [ %393, %392 ]
  %406 = phi i32 [ %353, %350 ], [ %394, %392 ]
  %407 = icmp sgt i32 %405, 7
  br i1 %407, label %408, label %425

408:                                              ; preds = %403, %420
  %409 = phi i32 [ %421, %420 ], [ %406, %403 ]
  %410 = phi i32 [ %422, %420 ], [ %405, %403 ]
  %411 = phi i8* [ %423, %420 ], [ %404, %403 ]
  %412 = load i8, i8* %411, align 1
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %420, label %414

414:                                              ; preds = %408
  %415 = zext i8 %412 to i64
  %416 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %415
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i32
  %419 = add nsw i32 %409, %418
  br label %439

420:                                              ; preds = %408
  %421 = add nsw i32 %409, 8
  %422 = add nsw i32 %410, -8
  %423 = getelementptr inbounds i8, i8* %411, i64 1
  %424 = icmp sgt i32 %422, 7
  br i1 %424, label %408, label %425

425:                                              ; preds = %420, %403
  %426 = phi i8* [ %404, %403 ], [ %423, %420 ]
  %427 = phi i32 [ %405, %403 ], [ %422, %420 ]
  %428 = phi i32 [ %406, %403 ], [ %421, %420 ]
  %429 = icmp sgt i32 %427, 0
  br i1 %429, label %430, label %439

430:                                              ; preds = %425
  %431 = load i8, i8* %426, align 1
  %432 = zext i8 %431 to i64
  %433 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = icmp slt i32 %427, %435
  %437 = select i1 %436, i32 %427, i32 %435
  %438 = add nsw i32 %437, %428
  br label %439

439:                                              ; preds = %430, %425, %414, %397, %331, %328, %319, %314, %303, %286, %220, %217
  %440 = phi i32 [ %308, %303 ], [ %291, %286 ], [ %233, %220 ], [ %327, %319 ], [ %317, %314 ], [ 0, %217 ], [ %419, %414 ], [ %402, %397 ], [ %344, %331 ], [ %438, %430 ], [ %428, %425 ], [ 0, %328 ]
  %441 = add i32 %440, %199
  br label %442

442:                                              ; preds = %196, %439
  %443 = phi i32 [ %441, %439 ], [ %3, %196 ]
  %444 = icmp ult i32 %443, %198
  br i1 %444, label %731, label %445

445:                                              ; preds = %442
  %446 = icmp ult i32 %199, %198
  br i1 %446, label %450, label %447

447:                                              ; preds = %445
  %448 = sub i32 %199, %198
  %449 = icmp ult i32 %448, 4
  br i1 %449, label %455, label %459

450:                                              ; preds = %445
  %451 = sub i32 %198, %199
  %452 = icmp ult i32 %451, 4
  %453 = sub nsw i32 0, %451
  %454 = select i1 %452, i32 %453, i32 2147483647
  br label %455

455:                                              ; preds = %450, %447
  %456 = phi i32 [ %448, %447 ], [ %454, %450 ]
  %457 = add i32 %456, 3
  %458 = icmp ult i32 %457, 7
  br i1 %458, label %723, label %459

459:                                              ; preds = %447, %455
  %460 = icmp ult i32 %198, %3
  br i1 %460, label %461, label %702

461:                                              ; preds = %459
  %462 = lshr i32 %198, 3
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds i8, i8* %1, i64 %463
  %465 = load i8, i8* %464, align 1
  %466 = zext i8 %465 to i32
  %467 = and i32 %198, 7
  %468 = xor i32 %467, 7
  %469 = shl i32 1, %468
  %470 = and i32 %469, %466
  %471 = icmp eq i32 %470, 0
  %472 = sub nsw i32 %3, %198
  %473 = ashr i32 %198, 3
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i8, i8* %1, i64 %474
  %476 = icmp sgt i32 %472, 0
  br i1 %471, label %588, label %477

477:                                              ; preds = %461
  br i1 %476, label %478, label %699

478:                                              ; preds = %477
  %479 = icmp eq i32 %467, 0
  br i1 %479, label %499, label %480

480:                                              ; preds = %478
  %481 = load i8, i8* %475, align 1
  %482 = zext i8 %481 to i32
  %483 = shl i32 %482, %467
  %484 = and i32 %483, 255
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %485
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = sub nuw nsw i32 8, %467
  %490 = icmp ult i32 %489, %488
  %491 = select i1 %490, i32 %489, i32 %488
  %492 = icmp sgt i32 %491, %472
  %493 = select i1 %492, i32 %472, i32 %491
  %494 = add nuw nsw i32 %493, %467
  %495 = icmp slt i32 %494, 8
  br i1 %495, label %699, label %496

496:                                              ; preds = %480
  %497 = sub nsw i32 %472, %493
  %498 = getelementptr inbounds i8, i8* %475, i64 1
  br label %499

499:                                              ; preds = %496, %478
  %500 = phi i8* [ %498, %496 ], [ %475, %478 ]
  %501 = phi i32 [ %497, %496 ], [ %472, %478 ]
  %502 = phi i32 [ %493, %496 ], [ 0, %478 ]
  %503 = icmp sgt i32 %501, 127
  br i1 %503, label %504, label %552

504:                                              ; preds = %499
  %505 = ptrtoint i8* %500 to i64
  %506 = and i64 %505, 7
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %510

508:                                              ; preds = %504
  %509 = bitcast i8* %500 to i64*
  br label %526

510:                                              ; preds = %504, %516
  %511 = phi i32 [ %517, %516 ], [ %502, %504 ]
  %512 = phi i32 [ %518, %516 ], [ %501, %504 ]
  %513 = phi i8* [ %519, %516 ], [ %500, %504 ]
  %514 = load i8, i8* %513, align 1
  %515 = icmp eq i8 %514, -1
  br i1 %515, label %516, label %546

516:                                              ; preds = %510
  %517 = add nsw i32 %511, 8
  %518 = add nsw i32 %512, -8
  %519 = getelementptr inbounds i8, i8* %513, i64 1
  %520 = ptrtoint i8* %519 to i64
  %521 = and i64 %520, 7
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %510

523:                                              ; preds = %516
  %524 = bitcast i8* %519 to i64*
  %525 = icmp sgt i32 %518, 63
  br i1 %525, label %526, label %541

526:                                              ; preds = %523, %508
  %527 = phi i64* [ %524, %523 ], [ %509, %508 ]
  %528 = phi i32 [ %517, %523 ], [ %502, %508 ]
  %529 = phi i32 [ %518, %523 ], [ %501, %508 ]
  br label %530

530:                                              ; preds = %526, %536
  %531 = phi i64* [ %539, %536 ], [ %527, %526 ]
  %532 = phi i32 [ %537, %536 ], [ %528, %526 ]
  %533 = phi i32 [ %538, %536 ], [ %529, %526 ]
  %534 = load i64, i64* %531, align 8
  %535 = icmp eq i64 %534, -1
  br i1 %535, label %536, label %541

536:                                              ; preds = %530
  %537 = add i32 %532, 64
  %538 = add nsw i32 %533, -64
  %539 = getelementptr inbounds i64, i64* %531, i64 1
  %540 = icmp sgt i32 %538, 63
  br i1 %540, label %530, label %541

541:                                              ; preds = %536, %530, %523
  %542 = phi i32 [ %518, %523 ], [ %538, %536 ], [ %533, %530 ]
  %543 = phi i32 [ %517, %523 ], [ %537, %536 ], [ %532, %530 ]
  %544 = phi i64* [ %524, %523 ], [ %539, %536 ], [ %531, %530 ]
  %545 = bitcast i64* %544 to i8*
  br label %552

546:                                              ; preds = %510
  %547 = zext i8 %514 to i64
  %548 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %547
  %549 = load i8, i8* %548, align 1
  %550 = zext i8 %549 to i32
  %551 = add nsw i32 %511, %550
  br label %699

552:                                              ; preds = %541, %499
  %553 = phi i8* [ %500, %499 ], [ %545, %541 ]
  %554 = phi i32 [ %501, %499 ], [ %542, %541 ]
  %555 = phi i32 [ %502, %499 ], [ %543, %541 ]
  %556 = icmp sgt i32 %554, 7
  br i1 %556, label %557, label %574

557:                                              ; preds = %552, %569
  %558 = phi i32 [ %570, %569 ], [ %555, %552 ]
  %559 = phi i32 [ %571, %569 ], [ %554, %552 ]
  %560 = phi i8* [ %572, %569 ], [ %553, %552 ]
  %561 = load i8, i8* %560, align 1
  %562 = icmp eq i8 %561, -1
  br i1 %562, label %569, label %563

563:                                              ; preds = %557
  %564 = zext i8 %561 to i64
  %565 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %564
  %566 = load i8, i8* %565, align 1
  %567 = zext i8 %566 to i32
  %568 = add nsw i32 %558, %567
  br label %699

569:                                              ; preds = %557
  %570 = add nsw i32 %558, 8
  %571 = add nsw i32 %559, -8
  %572 = getelementptr inbounds i8, i8* %560, i64 1
  %573 = icmp sgt i32 %571, 7
  br i1 %573, label %557, label %574

574:                                              ; preds = %569, %552
  %575 = phi i8* [ %553, %552 ], [ %572, %569 ]
  %576 = phi i32 [ %554, %552 ], [ %571, %569 ]
  %577 = phi i32 [ %555, %552 ], [ %570, %569 ]
  %578 = icmp sgt i32 %576, 0
  br i1 %578, label %579, label %699

579:                                              ; preds = %574
  %580 = load i8, i8* %575, align 1
  %581 = zext i8 %580 to i64
  %582 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %581
  %583 = load i8, i8* %582, align 1
  %584 = zext i8 %583 to i32
  %585 = icmp slt i32 %576, %584
  %586 = select i1 %585, i32 %576, i32 %584
  %587 = add nsw i32 %586, %577
  br label %699

588:                                              ; preds = %461
  br i1 %476, label %589, label %699

589:                                              ; preds = %588
  %590 = icmp eq i32 %467, 0
  br i1 %590, label %610, label %591

591:                                              ; preds = %589
  %592 = load i8, i8* %475, align 1
  %593 = zext i8 %592 to i32
  %594 = shl i32 %593, %467
  %595 = and i32 %594, 255
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %596
  %598 = load i8, i8* %597, align 1
  %599 = zext i8 %598 to i32
  %600 = sub nuw nsw i32 8, %467
  %601 = icmp ult i32 %600, %599
  %602 = select i1 %601, i32 %600, i32 %599
  %603 = icmp sgt i32 %602, %472
  %604 = select i1 %603, i32 %472, i32 %602
  %605 = add nuw nsw i32 %604, %467
  %606 = icmp slt i32 %605, 8
  br i1 %606, label %699, label %607

607:                                              ; preds = %591
  %608 = sub nsw i32 %472, %604
  %609 = getelementptr inbounds i8, i8* %475, i64 1
  br label %610

610:                                              ; preds = %607, %589
  %611 = phi i8* [ %609, %607 ], [ %475, %589 ]
  %612 = phi i32 [ %608, %607 ], [ %472, %589 ]
  %613 = phi i32 [ %604, %607 ], [ 0, %589 ]
  %614 = icmp sgt i32 %612, 127
  br i1 %614, label %615, label %663

615:                                              ; preds = %610
  %616 = ptrtoint i8* %611 to i64
  %617 = and i64 %616, 7
  %618 = icmp eq i64 %617, 0
  br i1 %618, label %619, label %621

619:                                              ; preds = %615
  %620 = bitcast i8* %611 to i64*
  br label %637

621:                                              ; preds = %615, %627
  %622 = phi i32 [ %628, %627 ], [ %613, %615 ]
  %623 = phi i32 [ %629, %627 ], [ %612, %615 ]
  %624 = phi i8* [ %630, %627 ], [ %611, %615 ]
  %625 = load i8, i8* %624, align 1
  %626 = icmp eq i8 %625, 0
  br i1 %626, label %627, label %657

627:                                              ; preds = %621
  %628 = add nsw i32 %622, 8
  %629 = add nsw i32 %623, -8
  %630 = getelementptr inbounds i8, i8* %624, i64 1
  %631 = ptrtoint i8* %630 to i64
  %632 = and i64 %631, 7
  %633 = icmp eq i64 %632, 0
  br i1 %633, label %634, label %621

634:                                              ; preds = %627
  %635 = bitcast i8* %630 to i64*
  %636 = icmp sgt i32 %629, 63
  br i1 %636, label %637, label %652

637:                                              ; preds = %634, %619
  %638 = phi i64* [ %635, %634 ], [ %620, %619 ]
  %639 = phi i32 [ %628, %634 ], [ %613, %619 ]
  %640 = phi i32 [ %629, %634 ], [ %612, %619 ]
  br label %641

641:                                              ; preds = %637, %647
  %642 = phi i64* [ %650, %647 ], [ %638, %637 ]
  %643 = phi i32 [ %648, %647 ], [ %639, %637 ]
  %644 = phi i32 [ %649, %647 ], [ %640, %637 ]
  %645 = load i64, i64* %642, align 8
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %647, label %652

647:                                              ; preds = %641
  %648 = add i32 %643, 64
  %649 = add nsw i32 %644, -64
  %650 = getelementptr inbounds i64, i64* %642, i64 1
  %651 = icmp sgt i32 %649, 63
  br i1 %651, label %641, label %652

652:                                              ; preds = %647, %641, %634
  %653 = phi i32 [ %629, %634 ], [ %649, %647 ], [ %644, %641 ]
  %654 = phi i32 [ %628, %634 ], [ %648, %647 ], [ %643, %641 ]
  %655 = phi i64* [ %635, %634 ], [ %650, %647 ], [ %642, %641 ]
  %656 = bitcast i64* %655 to i8*
  br label %663

657:                                              ; preds = %621
  %658 = zext i8 %625 to i64
  %659 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %658
  %660 = load i8, i8* %659, align 1
  %661 = zext i8 %660 to i32
  %662 = add nsw i32 %622, %661
  br label %699

663:                                              ; preds = %652, %610
  %664 = phi i8* [ %611, %610 ], [ %656, %652 ]
  %665 = phi i32 [ %612, %610 ], [ %653, %652 ]
  %666 = phi i32 [ %613, %610 ], [ %654, %652 ]
  %667 = icmp sgt i32 %665, 7
  br i1 %667, label %668, label %685

668:                                              ; preds = %663, %680
  %669 = phi i32 [ %681, %680 ], [ %666, %663 ]
  %670 = phi i32 [ %682, %680 ], [ %665, %663 ]
  %671 = phi i8* [ %683, %680 ], [ %664, %663 ]
  %672 = load i8, i8* %671, align 1
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %680, label %674

674:                                              ; preds = %668
  %675 = zext i8 %672 to i64
  %676 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %675
  %677 = load i8, i8* %676, align 1
  %678 = zext i8 %677 to i32
  %679 = add nsw i32 %669, %678
  br label %699

680:                                              ; preds = %668
  %681 = add nsw i32 %669, 8
  %682 = add nsw i32 %670, -8
  %683 = getelementptr inbounds i8, i8* %671, i64 1
  %684 = icmp sgt i32 %682, 7
  br i1 %684, label %668, label %685

685:                                              ; preds = %680, %663
  %686 = phi i8* [ %664, %663 ], [ %683, %680 ]
  %687 = phi i32 [ %665, %663 ], [ %682, %680 ]
  %688 = phi i32 [ %666, %663 ], [ %681, %680 ]
  %689 = icmp sgt i32 %687, 0
  br i1 %689, label %690, label %699

690:                                              ; preds = %685
  %691 = load i8, i8* %686, align 1
  %692 = zext i8 %691 to i64
  %693 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %692
  %694 = load i8, i8* %693, align 1
  %695 = zext i8 %694 to i32
  %696 = icmp slt i32 %687, %695
  %697 = select i1 %696, i32 %687, i32 %695
  %698 = add nsw i32 %697, %688
  br label %699

699:                                              ; preds = %690, %685, %674, %657, %591, %588, %579, %574, %563, %546, %480, %477
  %700 = phi i32 [ %568, %563 ], [ %551, %546 ], [ %493, %480 ], [ %587, %579 ], [ %577, %574 ], [ 0, %477 ], [ %679, %674 ], [ %662, %657 ], [ %604, %591 ], [ %698, %690 ], [ %688, %685 ], [ 0, %588 ]
  %701 = add i32 %700, %198
  br label %702

702:                                              ; preds = %459, %699
  %703 = phi i32 [ %701, %699 ], [ %3, %459 ]
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 1, i32 3)
  %704 = sub i32 0, %198
  %705 = icmp eq i32 %197, %704
  br i1 %705, label %717, label %706

706:                                              ; preds = %702
  %707 = lshr i32 %197, 3
  %708 = zext i32 %707 to i64
  %709 = getelementptr inbounds i8, i8* %1, i64 %708
  %710 = load i8, i8* %709, align 1
  %711 = zext i8 %710 to i32
  %712 = and i32 %197, 7
  %713 = xor i32 %712, 7
  %714 = shl i32 1, %713
  %715 = and i32 %714, %711
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %717, label %720

717:                                              ; preds = %706, %702
  %718 = sub i32 %198, %197
  tail call fastcc void @putspan(%struct.tiff* %0, i32 %718, %struct.tableentry* getelementptr inbounds ([109 x %struct.tableentry], [109 x %struct.tableentry]* @TIFFFaxWhiteCodes, i64 0, i64 0))
  %719 = sub i32 %703, %198
  tail call fastcc void @putspan(%struct.tiff* %0, i32 %719, %struct.tableentry* getelementptr inbounds ([109 x %struct.tableentry], [109 x %struct.tableentry]* @TIFFFaxBlackCodes, i64 0, i64 0))
  br label %732

720:                                              ; preds = %706
  %721 = sub i32 %198, %197
  tail call fastcc void @putspan(%struct.tiff* %0, i32 %721, %struct.tableentry* getelementptr inbounds ([109 x %struct.tableentry], [109 x %struct.tableentry]* @TIFFFaxBlackCodes, i64 0, i64 0))
  %722 = sub i32 %703, %198
  tail call fastcc void @putspan(%struct.tiff* %0, i32 %722, %struct.tableentry* getelementptr inbounds ([109 x %struct.tableentry], [109 x %struct.tableentry]* @TIFFFaxWhiteCodes, i64 0, i64 0))
  br label %732

723:                                              ; preds = %455
  %724 = sext i32 %457 to i64
  %725 = getelementptr inbounds [7 x %struct.tableentry], [7 x %struct.tableentry]* @vcodes, i64 0, i64 %724, i32 1
  %726 = load i16, i16* %725, align 2
  %727 = zext i16 %726 to i32
  %728 = getelementptr inbounds [7 x %struct.tableentry], [7 x %struct.tableentry]* @vcodes, i64 0, i64 %724, i32 0
  %729 = load i16, i16* %728, align 2
  %730 = zext i16 %729 to i32
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 %727, i32 %730)
  br label %732

731:                                              ; preds = %442
  tail call fastcc void @Fax3PutBits(%struct.tiff* %0, i32 1, i32 4)
  br label %732

732:                                              ; preds = %723, %720, %717, %731
  %733 = phi i32 [ %443, %731 ], [ %198, %723 ], [ %703, %720 ], [ %703, %717 ]
  %734 = icmp ult i32 %733, %3
  br i1 %734, label %735, label %1461

735:                                              ; preds = %732
  %736 = lshr i32 %733, 3
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds i8, i8* %1, i64 %737
  %739 = load i8, i8* %738, align 1
  %740 = zext i8 %739 to i32
  %741 = and i32 %733, 7
  %742 = xor i32 %741, 7
  %743 = shl i32 1, %742
  %744 = and i32 %743, %740
  %745 = icmp eq i32 %744, 0
  %746 = sub nsw i32 %3, %733
  %747 = ashr i32 %733, 3
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, i8* %1, i64 %748
  %750 = icmp sgt i32 %746, 0
  br i1 %745, label %862, label %751

751:                                              ; preds = %735
  br i1 %750, label %752, label %976

752:                                              ; preds = %751
  %753 = icmp eq i32 %741, 0
  br i1 %753, label %773, label %754

754:                                              ; preds = %752
  %755 = load i8, i8* %749, align 1
  %756 = zext i8 %755 to i32
  %757 = shl i32 %756, %741
  %758 = and i32 %757, 255
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %759
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i32
  %763 = sub nuw nsw i32 8, %741
  %764 = icmp ult i32 %763, %762
  %765 = select i1 %764, i32 %763, i32 %762
  %766 = icmp sgt i32 %765, %746
  %767 = select i1 %766, i32 %746, i32 %765
  %768 = add nuw nsw i32 %767, %741
  %769 = icmp slt i32 %768, 8
  br i1 %769, label %976, label %770

770:                                              ; preds = %754
  %771 = sub nsw i32 %746, %767
  %772 = getelementptr inbounds i8, i8* %749, i64 1
  br label %773

773:                                              ; preds = %770, %752
  %774 = phi i8* [ %772, %770 ], [ %749, %752 ]
  %775 = phi i32 [ %771, %770 ], [ %746, %752 ]
  %776 = phi i32 [ %767, %770 ], [ 0, %752 ]
  %777 = icmp sgt i32 %775, 127
  br i1 %777, label %778, label %826

778:                                              ; preds = %773
  %779 = ptrtoint i8* %774 to i64
  %780 = and i64 %779, 7
  %781 = icmp eq i64 %780, 0
  br i1 %781, label %782, label %784

782:                                              ; preds = %778
  %783 = bitcast i8* %774 to i64*
  br label %800

784:                                              ; preds = %778, %790
  %785 = phi i32 [ %791, %790 ], [ %776, %778 ]
  %786 = phi i32 [ %792, %790 ], [ %775, %778 ]
  %787 = phi i8* [ %793, %790 ], [ %774, %778 ]
  %788 = load i8, i8* %787, align 1
  %789 = icmp eq i8 %788, -1
  br i1 %789, label %790, label %820

790:                                              ; preds = %784
  %791 = add nsw i32 %785, 8
  %792 = add nsw i32 %786, -8
  %793 = getelementptr inbounds i8, i8* %787, i64 1
  %794 = ptrtoint i8* %793 to i64
  %795 = and i64 %794, 7
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %797, label %784

797:                                              ; preds = %790
  %798 = bitcast i8* %793 to i64*
  %799 = icmp sgt i32 %792, 63
  br i1 %799, label %800, label %815

800:                                              ; preds = %797, %782
  %801 = phi i64* [ %798, %797 ], [ %783, %782 ]
  %802 = phi i32 [ %791, %797 ], [ %776, %782 ]
  %803 = phi i32 [ %792, %797 ], [ %775, %782 ]
  br label %804

804:                                              ; preds = %800, %810
  %805 = phi i64* [ %813, %810 ], [ %801, %800 ]
  %806 = phi i32 [ %811, %810 ], [ %802, %800 ]
  %807 = phi i32 [ %812, %810 ], [ %803, %800 ]
  %808 = load i64, i64* %805, align 8
  %809 = icmp eq i64 %808, -1
  br i1 %809, label %810, label %815

810:                                              ; preds = %804
  %811 = add i32 %806, 64
  %812 = add nsw i32 %807, -64
  %813 = getelementptr inbounds i64, i64* %805, i64 1
  %814 = icmp sgt i32 %812, 63
  br i1 %814, label %804, label %815

815:                                              ; preds = %810, %804, %797
  %816 = phi i32 [ %792, %797 ], [ %812, %810 ], [ %807, %804 ]
  %817 = phi i32 [ %791, %797 ], [ %811, %810 ], [ %806, %804 ]
  %818 = phi i64* [ %798, %797 ], [ %813, %810 ], [ %805, %804 ]
  %819 = bitcast i64* %818 to i8*
  br label %826

820:                                              ; preds = %784
  %821 = zext i8 %788 to i64
  %822 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %821
  %823 = load i8, i8* %822, align 1
  %824 = zext i8 %823 to i32
  %825 = add nsw i32 %785, %824
  br label %979

826:                                              ; preds = %815, %773
  %827 = phi i8* [ %774, %773 ], [ %819, %815 ]
  %828 = phi i32 [ %775, %773 ], [ %816, %815 ]
  %829 = phi i32 [ %776, %773 ], [ %817, %815 ]
  %830 = icmp sgt i32 %828, 7
  br i1 %830, label %831, label %848

831:                                              ; preds = %826, %843
  %832 = phi i32 [ %844, %843 ], [ %829, %826 ]
  %833 = phi i32 [ %845, %843 ], [ %828, %826 ]
  %834 = phi i8* [ %846, %843 ], [ %827, %826 ]
  %835 = load i8, i8* %834, align 1
  %836 = icmp eq i8 %835, -1
  br i1 %836, label %843, label %837

837:                                              ; preds = %831
  %838 = zext i8 %835 to i64
  %839 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %838
  %840 = load i8, i8* %839, align 1
  %841 = zext i8 %840 to i32
  %842 = add nsw i32 %832, %841
  br label %979

843:                                              ; preds = %831
  %844 = add nsw i32 %832, 8
  %845 = add nsw i32 %833, -8
  %846 = getelementptr inbounds i8, i8* %834, i64 1
  %847 = icmp sgt i32 %845, 7
  br i1 %847, label %831, label %848

848:                                              ; preds = %843, %826
  %849 = phi i8* [ %827, %826 ], [ %846, %843 ]
  %850 = phi i32 [ %828, %826 ], [ %845, %843 ]
  %851 = phi i32 [ %829, %826 ], [ %844, %843 ]
  %852 = icmp sgt i32 %850, 0
  br i1 %852, label %853, label %979

853:                                              ; preds = %848
  %854 = load i8, i8* %849, align 1
  %855 = zext i8 %854 to i64
  %856 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %855
  %857 = load i8, i8* %856, align 1
  %858 = zext i8 %857 to i32
  %859 = icmp slt i32 %850, %858
  %860 = select i1 %859, i32 %850, i32 %858
  %861 = add nsw i32 %860, %851
  br label %979

862:                                              ; preds = %735
  br i1 %750, label %863, label %973

863:                                              ; preds = %862
  %864 = icmp eq i32 %741, 0
  br i1 %864, label %884, label %865

865:                                              ; preds = %863
  %866 = load i8, i8* %749, align 1
  %867 = zext i8 %866 to i32
  %868 = shl i32 %867, %741
  %869 = and i32 %868, 255
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %870
  %872 = load i8, i8* %871, align 1
  %873 = zext i8 %872 to i32
  %874 = sub nuw nsw i32 8, %741
  %875 = icmp ult i32 %874, %873
  %876 = select i1 %875, i32 %874, i32 %873
  %877 = icmp sgt i32 %876, %746
  %878 = select i1 %877, i32 %746, i32 %876
  %879 = add nuw nsw i32 %878, %741
  %880 = icmp slt i32 %879, 8
  br i1 %880, label %973, label %881

881:                                              ; preds = %865
  %882 = sub nsw i32 %746, %878
  %883 = getelementptr inbounds i8, i8* %749, i64 1
  br label %884

884:                                              ; preds = %881, %863
  %885 = phi i8* [ %883, %881 ], [ %749, %863 ]
  %886 = phi i32 [ %882, %881 ], [ %746, %863 ]
  %887 = phi i32 [ %878, %881 ], [ 0, %863 ]
  %888 = icmp sgt i32 %886, 127
  br i1 %888, label %889, label %937

889:                                              ; preds = %884
  %890 = ptrtoint i8* %885 to i64
  %891 = and i64 %890, 7
  %892 = icmp eq i64 %891, 0
  br i1 %892, label %893, label %895

893:                                              ; preds = %889
  %894 = bitcast i8* %885 to i64*
  br label %911

895:                                              ; preds = %889, %901
  %896 = phi i32 [ %902, %901 ], [ %887, %889 ]
  %897 = phi i32 [ %903, %901 ], [ %886, %889 ]
  %898 = phi i8* [ %904, %901 ], [ %885, %889 ]
  %899 = load i8, i8* %898, align 1
  %900 = icmp eq i8 %899, 0
  br i1 %900, label %901, label %931

901:                                              ; preds = %895
  %902 = add nsw i32 %896, 8
  %903 = add nsw i32 %897, -8
  %904 = getelementptr inbounds i8, i8* %898, i64 1
  %905 = ptrtoint i8* %904 to i64
  %906 = and i64 %905, 7
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %908, label %895

908:                                              ; preds = %901
  %909 = bitcast i8* %904 to i64*
  %910 = icmp sgt i32 %903, 63
  br i1 %910, label %911, label %926

911:                                              ; preds = %908, %893
  %912 = phi i64* [ %909, %908 ], [ %894, %893 ]
  %913 = phi i32 [ %902, %908 ], [ %887, %893 ]
  %914 = phi i32 [ %903, %908 ], [ %886, %893 ]
  br label %915

915:                                              ; preds = %911, %921
  %916 = phi i64* [ %924, %921 ], [ %912, %911 ]
  %917 = phi i32 [ %922, %921 ], [ %913, %911 ]
  %918 = phi i32 [ %923, %921 ], [ %914, %911 ]
  %919 = load i64, i64* %916, align 8
  %920 = icmp eq i64 %919, 0
  br i1 %920, label %921, label %926

921:                                              ; preds = %915
  %922 = add i32 %917, 64
  %923 = add nsw i32 %918, -64
  %924 = getelementptr inbounds i64, i64* %916, i64 1
  %925 = icmp sgt i32 %923, 63
  br i1 %925, label %915, label %926

926:                                              ; preds = %921, %915, %908
  %927 = phi i32 [ %903, %908 ], [ %923, %921 ], [ %918, %915 ]
  %928 = phi i32 [ %902, %908 ], [ %922, %921 ], [ %917, %915 ]
  %929 = phi i64* [ %909, %908 ], [ %924, %921 ], [ %916, %915 ]
  %930 = bitcast i64* %929 to i8*
  br label %937

931:                                              ; preds = %895
  %932 = zext i8 %899 to i64
  %933 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %932
  %934 = load i8, i8* %933, align 1
  %935 = zext i8 %934 to i32
  %936 = add nsw i32 %896, %935
  br label %979

937:                                              ; preds = %926, %884
  %938 = phi i8* [ %885, %884 ], [ %930, %926 ]
  %939 = phi i32 [ %886, %884 ], [ %927, %926 ]
  %940 = phi i32 [ %887, %884 ], [ %928, %926 ]
  %941 = icmp sgt i32 %939, 7
  br i1 %941, label %942, label %959

942:                                              ; preds = %937, %954
  %943 = phi i32 [ %955, %954 ], [ %940, %937 ]
  %944 = phi i32 [ %956, %954 ], [ %939, %937 ]
  %945 = phi i8* [ %957, %954 ], [ %938, %937 ]
  %946 = load i8, i8* %945, align 1
  %947 = icmp eq i8 %946, 0
  br i1 %947, label %954, label %948

948:                                              ; preds = %942
  %949 = zext i8 %946 to i64
  %950 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %949
  %951 = load i8, i8* %950, align 1
  %952 = zext i8 %951 to i32
  %953 = add nsw i32 %943, %952
  br label %979

954:                                              ; preds = %942
  %955 = add nsw i32 %943, 8
  %956 = add nsw i32 %944, -8
  %957 = getelementptr inbounds i8, i8* %945, i64 1
  %958 = icmp sgt i32 %956, 7
  br i1 %958, label %942, label %959

959:                                              ; preds = %954, %937
  %960 = phi i8* [ %938, %937 ], [ %957, %954 ]
  %961 = phi i32 [ %939, %937 ], [ %956, %954 ]
  %962 = phi i32 [ %940, %937 ], [ %955, %954 ]
  %963 = icmp sgt i32 %961, 0
  br i1 %963, label %964, label %979

964:                                              ; preds = %959
  %965 = load i8, i8* %960, align 1
  %966 = zext i8 %965 to i64
  %967 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %966
  %968 = load i8, i8* %967, align 1
  %969 = zext i8 %968 to i32
  %970 = icmp slt i32 %961, %969
  %971 = select i1 %970, i32 %961, i32 %969
  %972 = add nsw i32 %971, %962
  br label %979

973:                                              ; preds = %865, %862
  %974 = phi i32 [ 0, %862 ], [ %878, %865 ]
  %975 = add i32 %974, %733
  br label %982

976:                                              ; preds = %754, %751
  %977 = phi i32 [ 0, %751 ], [ %767, %754 ]
  %978 = add i32 %977, %733
  br label %1095

979:                                              ; preds = %964, %959, %948, %931, %853, %848, %837, %820
  %980 = phi i32 [ %842, %837 ], [ %825, %820 ], [ %861, %853 ], [ %851, %848 ], [ %953, %948 ], [ %936, %931 ], [ %972, %964 ], [ %962, %959 ]
  %981 = add i32 %980, %733
  br i1 %745, label %982, label %1095

982:                                              ; preds = %973, %979
  %983 = phi i32 [ %975, %973 ], [ %981, %979 ]
  %984 = getelementptr inbounds i8, i8* %2, i64 %748
  br i1 %750, label %985, label %1208

985:                                              ; preds = %982
  %986 = icmp eq i32 %741, 0
  br i1 %986, label %1006, label %987

987:                                              ; preds = %985
  %988 = load i8, i8* %984, align 1
  %989 = zext i8 %988 to i32
  %990 = shl i32 %989, %741
  %991 = and i32 %990, 255
  %992 = zext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %992
  %994 = load i8, i8* %993, align 1
  %995 = zext i8 %994 to i32
  %996 = sub nuw nsw i32 8, %741
  %997 = icmp ult i32 %996, %995
  %998 = select i1 %997, i32 %996, i32 %995
  %999 = icmp sgt i32 %998, %746
  %1000 = select i1 %999, i32 %746, i32 %998
  %1001 = add nuw nsw i32 %1000, %741
  %1002 = icmp slt i32 %1001, 8
  br i1 %1002, label %1208, label %1003

1003:                                             ; preds = %987
  %1004 = sub nsw i32 %746, %1000
  %1005 = getelementptr inbounds i8, i8* %984, i64 1
  br label %1006

1006:                                             ; preds = %1003, %985
  %1007 = phi i8* [ %1005, %1003 ], [ %984, %985 ]
  %1008 = phi i32 [ %1004, %1003 ], [ %746, %985 ]
  %1009 = phi i32 [ %1000, %1003 ], [ 0, %985 ]
  %1010 = icmp sgt i32 %1008, 127
  br i1 %1010, label %1011, label %1059

1011:                                             ; preds = %1006
  %1012 = ptrtoint i8* %1007 to i64
  %1013 = and i64 %1012, 7
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %1011
  %1016 = bitcast i8* %1007 to i64*
  br label %1033

1017:                                             ; preds = %1011, %1023
  %1018 = phi i32 [ %1024, %1023 ], [ %1009, %1011 ]
  %1019 = phi i32 [ %1025, %1023 ], [ %1008, %1011 ]
  %1020 = phi i8* [ %1026, %1023 ], [ %1007, %1011 ]
  %1021 = load i8, i8* %1020, align 1
  %1022 = icmp eq i8 %1021, -1
  br i1 %1022, label %1023, label %1053

1023:                                             ; preds = %1017
  %1024 = add nsw i32 %1018, 8
  %1025 = add nsw i32 %1019, -8
  %1026 = getelementptr inbounds i8, i8* %1020, i64 1
  %1027 = ptrtoint i8* %1026 to i64
  %1028 = and i64 %1027, 7
  %1029 = icmp eq i64 %1028, 0
  br i1 %1029, label %1030, label %1017

1030:                                             ; preds = %1023
  %1031 = bitcast i8* %1026 to i64*
  %1032 = icmp sgt i32 %1025, 63
  br i1 %1032, label %1033, label %1048

1033:                                             ; preds = %1030, %1015
  %1034 = phi i64* [ %1031, %1030 ], [ %1016, %1015 ]
  %1035 = phi i32 [ %1024, %1030 ], [ %1009, %1015 ]
  %1036 = phi i32 [ %1025, %1030 ], [ %1008, %1015 ]
  br label %1037

1037:                                             ; preds = %1033, %1043
  %1038 = phi i64* [ %1046, %1043 ], [ %1034, %1033 ]
  %1039 = phi i32 [ %1044, %1043 ], [ %1035, %1033 ]
  %1040 = phi i32 [ %1045, %1043 ], [ %1036, %1033 ]
  %1041 = load i64, i64* %1038, align 8
  %1042 = icmp eq i64 %1041, -1
  br i1 %1042, label %1043, label %1048

1043:                                             ; preds = %1037
  %1044 = add i32 %1039, 64
  %1045 = add nsw i32 %1040, -64
  %1046 = getelementptr inbounds i64, i64* %1038, i64 1
  %1047 = icmp sgt i32 %1045, 63
  br i1 %1047, label %1037, label %1048

1048:                                             ; preds = %1043, %1037, %1030
  %1049 = phi i32 [ %1025, %1030 ], [ %1045, %1043 ], [ %1040, %1037 ]
  %1050 = phi i32 [ %1024, %1030 ], [ %1044, %1043 ], [ %1039, %1037 ]
  %1051 = phi i64* [ %1031, %1030 ], [ %1046, %1043 ], [ %1038, %1037 ]
  %1052 = bitcast i64* %1051 to i8*
  br label %1059

1053:                                             ; preds = %1017
  %1054 = zext i8 %1021 to i64
  %1055 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1054
  %1056 = load i8, i8* %1055, align 1
  %1057 = zext i8 %1056 to i32
  %1058 = add nsw i32 %1018, %1057
  br label %1214

1059:                                             ; preds = %1048, %1006
  %1060 = phi i8* [ %1007, %1006 ], [ %1052, %1048 ]
  %1061 = phi i32 [ %1008, %1006 ], [ %1049, %1048 ]
  %1062 = phi i32 [ %1009, %1006 ], [ %1050, %1048 ]
  %1063 = icmp sgt i32 %1061, 7
  br i1 %1063, label %1064, label %1081

1064:                                             ; preds = %1059, %1076
  %1065 = phi i32 [ %1077, %1076 ], [ %1062, %1059 ]
  %1066 = phi i32 [ %1078, %1076 ], [ %1061, %1059 ]
  %1067 = phi i8* [ %1079, %1076 ], [ %1060, %1059 ]
  %1068 = load i8, i8* %1067, align 1
  %1069 = icmp eq i8 %1068, -1
  br i1 %1069, label %1076, label %1070

1070:                                             ; preds = %1064
  %1071 = zext i8 %1068 to i64
  %1072 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1071
  %1073 = load i8, i8* %1072, align 1
  %1074 = zext i8 %1073 to i32
  %1075 = add nsw i32 %1065, %1074
  br label %1214

1076:                                             ; preds = %1064
  %1077 = add nsw i32 %1065, 8
  %1078 = add nsw i32 %1066, -8
  %1079 = getelementptr inbounds i8, i8* %1067, i64 1
  %1080 = icmp sgt i32 %1078, 7
  br i1 %1080, label %1064, label %1081

1081:                                             ; preds = %1076, %1059
  %1082 = phi i8* [ %1060, %1059 ], [ %1079, %1076 ]
  %1083 = phi i32 [ %1061, %1059 ], [ %1078, %1076 ]
  %1084 = phi i32 [ %1062, %1059 ], [ %1077, %1076 ]
  %1085 = icmp sgt i32 %1083, 0
  br i1 %1085, label %1086, label %1214

1086:                                             ; preds = %1081
  %1087 = load i8, i8* %1082, align 1
  %1088 = zext i8 %1087 to i64
  %1089 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1088
  %1090 = load i8, i8* %1089, align 1
  %1091 = zext i8 %1090 to i32
  %1092 = icmp slt i32 %1083, %1091
  %1093 = select i1 %1092, i32 %1083, i32 %1091
  %1094 = add nsw i32 %1093, %1084
  br label %1214

1095:                                             ; preds = %976, %979
  %1096 = phi i32 [ %978, %976 ], [ %981, %979 ]
  %1097 = getelementptr inbounds i8, i8* %2, i64 %748
  br i1 %750, label %1098, label %1211

1098:                                             ; preds = %1095
  %1099 = icmp eq i32 %741, 0
  br i1 %1099, label %1119, label %1100

1100:                                             ; preds = %1098
  %1101 = load i8, i8* %1097, align 1
  %1102 = zext i8 %1101 to i32
  %1103 = shl i32 %1102, %741
  %1104 = and i32 %1103, 255
  %1105 = zext i32 %1104 to i64
  %1106 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1105
  %1107 = load i8, i8* %1106, align 1
  %1108 = zext i8 %1107 to i32
  %1109 = sub nuw nsw i32 8, %741
  %1110 = icmp ult i32 %1109, %1108
  %1111 = select i1 %1110, i32 %1109, i32 %1108
  %1112 = icmp sgt i32 %1111, %746
  %1113 = select i1 %1112, i32 %746, i32 %1111
  %1114 = add nuw nsw i32 %1113, %741
  %1115 = icmp slt i32 %1114, 8
  br i1 %1115, label %1211, label %1116

1116:                                             ; preds = %1100
  %1117 = sub nsw i32 %746, %1113
  %1118 = getelementptr inbounds i8, i8* %1097, i64 1
  br label %1119

1119:                                             ; preds = %1116, %1098
  %1120 = phi i8* [ %1118, %1116 ], [ %1097, %1098 ]
  %1121 = phi i32 [ %1117, %1116 ], [ %746, %1098 ]
  %1122 = phi i32 [ %1113, %1116 ], [ 0, %1098 ]
  %1123 = icmp sgt i32 %1121, 127
  br i1 %1123, label %1124, label %1172

1124:                                             ; preds = %1119
  %1125 = ptrtoint i8* %1120 to i64
  %1126 = and i64 %1125, 7
  %1127 = icmp eq i64 %1126, 0
  br i1 %1127, label %1128, label %1130

1128:                                             ; preds = %1124
  %1129 = bitcast i8* %1120 to i64*
  br label %1146

1130:                                             ; preds = %1124, %1136
  %1131 = phi i32 [ %1137, %1136 ], [ %1122, %1124 ]
  %1132 = phi i32 [ %1138, %1136 ], [ %1121, %1124 ]
  %1133 = phi i8* [ %1139, %1136 ], [ %1120, %1124 ]
  %1134 = load i8, i8* %1133, align 1
  %1135 = icmp eq i8 %1134, 0
  br i1 %1135, label %1136, label %1166

1136:                                             ; preds = %1130
  %1137 = add nsw i32 %1131, 8
  %1138 = add nsw i32 %1132, -8
  %1139 = getelementptr inbounds i8, i8* %1133, i64 1
  %1140 = ptrtoint i8* %1139 to i64
  %1141 = and i64 %1140, 7
  %1142 = icmp eq i64 %1141, 0
  br i1 %1142, label %1143, label %1130

1143:                                             ; preds = %1136
  %1144 = bitcast i8* %1139 to i64*
  %1145 = icmp sgt i32 %1138, 63
  br i1 %1145, label %1146, label %1161

1146:                                             ; preds = %1143, %1128
  %1147 = phi i64* [ %1144, %1143 ], [ %1129, %1128 ]
  %1148 = phi i32 [ %1137, %1143 ], [ %1122, %1128 ]
  %1149 = phi i32 [ %1138, %1143 ], [ %1121, %1128 ]
  br label %1150

1150:                                             ; preds = %1146, %1156
  %1151 = phi i64* [ %1159, %1156 ], [ %1147, %1146 ]
  %1152 = phi i32 [ %1157, %1156 ], [ %1148, %1146 ]
  %1153 = phi i32 [ %1158, %1156 ], [ %1149, %1146 ]
  %1154 = load i64, i64* %1151, align 8
  %1155 = icmp eq i64 %1154, 0
  br i1 %1155, label %1156, label %1161

1156:                                             ; preds = %1150
  %1157 = add i32 %1152, 64
  %1158 = add nsw i32 %1153, -64
  %1159 = getelementptr inbounds i64, i64* %1151, i64 1
  %1160 = icmp sgt i32 %1158, 63
  br i1 %1160, label %1150, label %1161

1161:                                             ; preds = %1156, %1150, %1143
  %1162 = phi i32 [ %1138, %1143 ], [ %1158, %1156 ], [ %1153, %1150 ]
  %1163 = phi i32 [ %1137, %1143 ], [ %1157, %1156 ], [ %1152, %1150 ]
  %1164 = phi i64* [ %1144, %1143 ], [ %1159, %1156 ], [ %1151, %1150 ]
  %1165 = bitcast i64* %1164 to i8*
  br label %1172

1166:                                             ; preds = %1130
  %1167 = zext i8 %1134 to i64
  %1168 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1167
  %1169 = load i8, i8* %1168, align 1
  %1170 = zext i8 %1169 to i32
  %1171 = add nsw i32 %1131, %1170
  br label %1214

1172:                                             ; preds = %1161, %1119
  %1173 = phi i8* [ %1120, %1119 ], [ %1165, %1161 ]
  %1174 = phi i32 [ %1121, %1119 ], [ %1162, %1161 ]
  %1175 = phi i32 [ %1122, %1119 ], [ %1163, %1161 ]
  %1176 = icmp sgt i32 %1174, 7
  br i1 %1176, label %1177, label %1194

1177:                                             ; preds = %1172, %1189
  %1178 = phi i32 [ %1190, %1189 ], [ %1175, %1172 ]
  %1179 = phi i32 [ %1191, %1189 ], [ %1174, %1172 ]
  %1180 = phi i8* [ %1192, %1189 ], [ %1173, %1172 ]
  %1181 = load i8, i8* %1180, align 1
  %1182 = icmp eq i8 %1181, 0
  br i1 %1182, label %1189, label %1183

1183:                                             ; preds = %1177
  %1184 = zext i8 %1181 to i64
  %1185 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1184
  %1186 = load i8, i8* %1185, align 1
  %1187 = zext i8 %1186 to i32
  %1188 = add nsw i32 %1178, %1187
  br label %1214

1189:                                             ; preds = %1177
  %1190 = add nsw i32 %1178, 8
  %1191 = add nsw i32 %1179, -8
  %1192 = getelementptr inbounds i8, i8* %1180, i64 1
  %1193 = icmp sgt i32 %1191, 7
  br i1 %1193, label %1177, label %1194

1194:                                             ; preds = %1189, %1172
  %1195 = phi i8* [ %1173, %1172 ], [ %1192, %1189 ]
  %1196 = phi i32 [ %1174, %1172 ], [ %1191, %1189 ]
  %1197 = phi i32 [ %1175, %1172 ], [ %1190, %1189 ]
  %1198 = icmp sgt i32 %1196, 0
  br i1 %1198, label %1199, label %1214

1199:                                             ; preds = %1194
  %1200 = load i8, i8* %1195, align 1
  %1201 = zext i8 %1200 to i64
  %1202 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1201
  %1203 = load i8, i8* %1202, align 1
  %1204 = zext i8 %1203 to i32
  %1205 = icmp slt i32 %1196, %1204
  %1206 = select i1 %1205, i32 %1196, i32 %1204
  %1207 = add nsw i32 %1206, %1197
  br label %1214

1208:                                             ; preds = %987, %982
  %1209 = phi i32 [ 0, %982 ], [ %1000, %987 ]
  %1210 = add i32 %1209, %733
  br label %1337

1211:                                             ; preds = %1100, %1095
  %1212 = phi i32 [ 0, %1095 ], [ %1113, %1100 ]
  %1213 = add i32 %1212, %733
  br label %1218

1214:                                             ; preds = %1199, %1194, %1183, %1166, %1086, %1081, %1070, %1053
  %1215 = phi i32 [ %983, %1053 ], [ %983, %1070 ], [ %983, %1081 ], [ %983, %1086 ], [ %1096, %1166 ], [ %1096, %1183 ], [ %1096, %1194 ], [ %1096, %1199 ]
  %1216 = phi i32 [ %1058, %1053 ], [ %1075, %1070 ], [ %1084, %1081 ], [ %1094, %1086 ], [ %1171, %1166 ], [ %1188, %1183 ], [ %1197, %1194 ], [ %1207, %1199 ]
  %1217 = add i32 %1216, %733
  br i1 %745, label %1337, label %1218

1218:                                             ; preds = %1211, %1214
  %1219 = phi i32 [ %1213, %1211 ], [ %1217, %1214 ]
  %1220 = phi i32 [ %1096, %1211 ], [ %1215, %1214 ]
  %1221 = sub nsw i32 %3, %1219
  %1222 = ashr i32 %1219, 3
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds i8, i8* %2, i64 %1223
  %1225 = icmp sgt i32 %1221, 0
  br i1 %1225, label %1226, label %1456

1226:                                             ; preds = %1218
  %1227 = and i32 %1219, 7
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1248, label %1229

1229:                                             ; preds = %1226
  %1230 = load i8, i8* %1224, align 1
  %1231 = zext i8 %1230 to i32
  %1232 = shl i32 %1231, %1227
  %1233 = and i32 %1232, 255
  %1234 = zext i32 %1233 to i64
  %1235 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1234
  %1236 = load i8, i8* %1235, align 1
  %1237 = zext i8 %1236 to i32
  %1238 = sub nuw nsw i32 8, %1227
  %1239 = icmp ult i32 %1238, %1237
  %1240 = select i1 %1239, i32 %1238, i32 %1237
  %1241 = icmp sgt i32 %1240, %1221
  %1242 = select i1 %1241, i32 %1221, i32 %1240
  %1243 = add nuw nsw i32 %1242, %1227
  %1244 = icmp slt i32 %1243, 8
  br i1 %1244, label %1456, label %1245

1245:                                             ; preds = %1229
  %1246 = sub nsw i32 %1221, %1242
  %1247 = getelementptr inbounds i8, i8* %1224, i64 1
  br label %1248

1248:                                             ; preds = %1245, %1226
  %1249 = phi i8* [ %1247, %1245 ], [ %1224, %1226 ]
  %1250 = phi i32 [ %1246, %1245 ], [ %1221, %1226 ]
  %1251 = phi i32 [ %1242, %1245 ], [ 0, %1226 ]
  %1252 = icmp sgt i32 %1250, 127
  br i1 %1252, label %1253, label %1301

1253:                                             ; preds = %1248
  %1254 = ptrtoint i8* %1249 to i64
  %1255 = and i64 %1254, 7
  %1256 = icmp eq i64 %1255, 0
  br i1 %1256, label %1257, label %1259

1257:                                             ; preds = %1253
  %1258 = bitcast i8* %1249 to i64*
  br label %1275

1259:                                             ; preds = %1253, %1265
  %1260 = phi i32 [ %1266, %1265 ], [ %1251, %1253 ]
  %1261 = phi i32 [ %1267, %1265 ], [ %1250, %1253 ]
  %1262 = phi i8* [ %1268, %1265 ], [ %1249, %1253 ]
  %1263 = load i8, i8* %1262, align 1
  %1264 = icmp eq i8 %1263, -1
  br i1 %1264, label %1265, label %1295

1265:                                             ; preds = %1259
  %1266 = add nsw i32 %1260, 8
  %1267 = add nsw i32 %1261, -8
  %1268 = getelementptr inbounds i8, i8* %1262, i64 1
  %1269 = ptrtoint i8* %1268 to i64
  %1270 = and i64 %1269, 7
  %1271 = icmp eq i64 %1270, 0
  br i1 %1271, label %1272, label %1259

1272:                                             ; preds = %1265
  %1273 = bitcast i8* %1268 to i64*
  %1274 = icmp sgt i32 %1267, 63
  br i1 %1274, label %1275, label %1290

1275:                                             ; preds = %1272, %1257
  %1276 = phi i64* [ %1273, %1272 ], [ %1258, %1257 ]
  %1277 = phi i32 [ %1266, %1272 ], [ %1251, %1257 ]
  %1278 = phi i32 [ %1267, %1272 ], [ %1250, %1257 ]
  br label %1279

1279:                                             ; preds = %1275, %1285
  %1280 = phi i64* [ %1288, %1285 ], [ %1276, %1275 ]
  %1281 = phi i32 [ %1286, %1285 ], [ %1277, %1275 ]
  %1282 = phi i32 [ %1287, %1285 ], [ %1278, %1275 ]
  %1283 = load i64, i64* %1280, align 8
  %1284 = icmp eq i64 %1283, -1
  br i1 %1284, label %1285, label %1290

1285:                                             ; preds = %1279
  %1286 = add i32 %1281, 64
  %1287 = add nsw i32 %1282, -64
  %1288 = getelementptr inbounds i64, i64* %1280, i64 1
  %1289 = icmp sgt i32 %1287, 63
  br i1 %1289, label %1279, label %1290

1290:                                             ; preds = %1285, %1279, %1272
  %1291 = phi i32 [ %1267, %1272 ], [ %1287, %1285 ], [ %1282, %1279 ]
  %1292 = phi i32 [ %1266, %1272 ], [ %1286, %1285 ], [ %1281, %1279 ]
  %1293 = phi i64* [ %1273, %1272 ], [ %1288, %1285 ], [ %1280, %1279 ]
  %1294 = bitcast i64* %1293 to i8*
  br label %1301

1295:                                             ; preds = %1259
  %1296 = zext i8 %1263 to i64
  %1297 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1296
  %1298 = load i8, i8* %1297, align 1
  %1299 = zext i8 %1298 to i32
  %1300 = add nsw i32 %1260, %1299
  br label %1456

1301:                                             ; preds = %1290, %1248
  %1302 = phi i8* [ %1249, %1248 ], [ %1294, %1290 ]
  %1303 = phi i32 [ %1250, %1248 ], [ %1291, %1290 ]
  %1304 = phi i32 [ %1251, %1248 ], [ %1292, %1290 ]
  %1305 = icmp sgt i32 %1303, 7
  br i1 %1305, label %1306, label %1323

1306:                                             ; preds = %1301, %1318
  %1307 = phi i32 [ %1319, %1318 ], [ %1304, %1301 ]
  %1308 = phi i32 [ %1320, %1318 ], [ %1303, %1301 ]
  %1309 = phi i8* [ %1321, %1318 ], [ %1302, %1301 ]
  %1310 = load i8, i8* %1309, align 1
  %1311 = icmp eq i8 %1310, -1
  br i1 %1311, label %1318, label %1312

1312:                                             ; preds = %1306
  %1313 = zext i8 %1310 to i64
  %1314 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1313
  %1315 = load i8, i8* %1314, align 1
  %1316 = zext i8 %1315 to i32
  %1317 = add nsw i32 %1307, %1316
  br label %1456

1318:                                             ; preds = %1306
  %1319 = add nsw i32 %1307, 8
  %1320 = add nsw i32 %1308, -8
  %1321 = getelementptr inbounds i8, i8* %1309, i64 1
  %1322 = icmp sgt i32 %1320, 7
  br i1 %1322, label %1306, label %1323

1323:                                             ; preds = %1318, %1301
  %1324 = phi i8* [ %1302, %1301 ], [ %1321, %1318 ]
  %1325 = phi i32 [ %1303, %1301 ], [ %1320, %1318 ]
  %1326 = phi i32 [ %1304, %1301 ], [ %1319, %1318 ]
  %1327 = icmp sgt i32 %1325, 0
  br i1 %1327, label %1328, label %1456

1328:                                             ; preds = %1323
  %1329 = load i8, i8* %1324, align 1
  %1330 = zext i8 %1329 to i64
  %1331 = getelementptr inbounds [256 x i8], [256 x i8]* @oneruns, i64 0, i64 %1330
  %1332 = load i8, i8* %1331, align 1
  %1333 = zext i8 %1332 to i32
  %1334 = icmp slt i32 %1325, %1333
  %1335 = select i1 %1334, i32 %1325, i32 %1333
  %1336 = add nsw i32 %1335, %1326
  br label %1456

1337:                                             ; preds = %1208, %1214
  %1338 = phi i32 [ %1210, %1208 ], [ %1217, %1214 ]
  %1339 = phi i32 [ %983, %1208 ], [ %1215, %1214 ]
  %1340 = sub nsw i32 %3, %1338
  %1341 = ashr i32 %1338, 3
  %1342 = sext i32 %1341 to i64
  %1343 = getelementptr inbounds i8, i8* %2, i64 %1342
  %1344 = icmp sgt i32 %1340, 0
  br i1 %1344, label %1345, label %1456

1345:                                             ; preds = %1337
  %1346 = and i32 %1338, 7
  %1347 = icmp eq i32 %1346, 0
  br i1 %1347, label %1367, label %1348

1348:                                             ; preds = %1345
  %1349 = load i8, i8* %1343, align 1
  %1350 = zext i8 %1349 to i32
  %1351 = shl i32 %1350, %1346
  %1352 = and i32 %1351, 255
  %1353 = zext i32 %1352 to i64
  %1354 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1353
  %1355 = load i8, i8* %1354, align 1
  %1356 = zext i8 %1355 to i32
  %1357 = sub nuw nsw i32 8, %1346
  %1358 = icmp ult i32 %1357, %1356
  %1359 = select i1 %1358, i32 %1357, i32 %1356
  %1360 = icmp sgt i32 %1359, %1340
  %1361 = select i1 %1360, i32 %1340, i32 %1359
  %1362 = add nuw nsw i32 %1361, %1346
  %1363 = icmp slt i32 %1362, 8
  br i1 %1363, label %1456, label %1364

1364:                                             ; preds = %1348
  %1365 = sub nsw i32 %1340, %1361
  %1366 = getelementptr inbounds i8, i8* %1343, i64 1
  br label %1367

1367:                                             ; preds = %1364, %1345
  %1368 = phi i8* [ %1366, %1364 ], [ %1343, %1345 ]
  %1369 = phi i32 [ %1365, %1364 ], [ %1340, %1345 ]
  %1370 = phi i32 [ %1361, %1364 ], [ 0, %1345 ]
  %1371 = icmp sgt i32 %1369, 127
  br i1 %1371, label %1372, label %1420

1372:                                             ; preds = %1367
  %1373 = ptrtoint i8* %1368 to i64
  %1374 = and i64 %1373, 7
  %1375 = icmp eq i64 %1374, 0
  br i1 %1375, label %1376, label %1378

1376:                                             ; preds = %1372
  %1377 = bitcast i8* %1368 to i64*
  br label %1394

1378:                                             ; preds = %1372, %1384
  %1379 = phi i32 [ %1385, %1384 ], [ %1370, %1372 ]
  %1380 = phi i32 [ %1386, %1384 ], [ %1369, %1372 ]
  %1381 = phi i8* [ %1387, %1384 ], [ %1368, %1372 ]
  %1382 = load i8, i8* %1381, align 1
  %1383 = icmp eq i8 %1382, 0
  br i1 %1383, label %1384, label %1414

1384:                                             ; preds = %1378
  %1385 = add nsw i32 %1379, 8
  %1386 = add nsw i32 %1380, -8
  %1387 = getelementptr inbounds i8, i8* %1381, i64 1
  %1388 = ptrtoint i8* %1387 to i64
  %1389 = and i64 %1388, 7
  %1390 = icmp eq i64 %1389, 0
  br i1 %1390, label %1391, label %1378

1391:                                             ; preds = %1384
  %1392 = bitcast i8* %1387 to i64*
  %1393 = icmp sgt i32 %1386, 63
  br i1 %1393, label %1394, label %1409

1394:                                             ; preds = %1391, %1376
  %1395 = phi i64* [ %1392, %1391 ], [ %1377, %1376 ]
  %1396 = phi i32 [ %1385, %1391 ], [ %1370, %1376 ]
  %1397 = phi i32 [ %1386, %1391 ], [ %1369, %1376 ]
  br label %1398

1398:                                             ; preds = %1394, %1404
  %1399 = phi i64* [ %1407, %1404 ], [ %1395, %1394 ]
  %1400 = phi i32 [ %1405, %1404 ], [ %1396, %1394 ]
  %1401 = phi i32 [ %1406, %1404 ], [ %1397, %1394 ]
  %1402 = load i64, i64* %1399, align 8
  %1403 = icmp eq i64 %1402, 0
  br i1 %1403, label %1404, label %1409

1404:                                             ; preds = %1398
  %1405 = add i32 %1400, 64
  %1406 = add nsw i32 %1401, -64
  %1407 = getelementptr inbounds i64, i64* %1399, i64 1
  %1408 = icmp sgt i32 %1406, 63
  br i1 %1408, label %1398, label %1409

1409:                                             ; preds = %1404, %1398, %1391
  %1410 = phi i32 [ %1386, %1391 ], [ %1406, %1404 ], [ %1401, %1398 ]
  %1411 = phi i32 [ %1385, %1391 ], [ %1405, %1404 ], [ %1400, %1398 ]
  %1412 = phi i64* [ %1392, %1391 ], [ %1407, %1404 ], [ %1399, %1398 ]
  %1413 = bitcast i64* %1412 to i8*
  br label %1420

1414:                                             ; preds = %1378
  %1415 = zext i8 %1382 to i64
  %1416 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1415
  %1417 = load i8, i8* %1416, align 1
  %1418 = zext i8 %1417 to i32
  %1419 = add nsw i32 %1379, %1418
  br label %1456

1420:                                             ; preds = %1409, %1367
  %1421 = phi i8* [ %1368, %1367 ], [ %1413, %1409 ]
  %1422 = phi i32 [ %1369, %1367 ], [ %1410, %1409 ]
  %1423 = phi i32 [ %1370, %1367 ], [ %1411, %1409 ]
  %1424 = icmp sgt i32 %1422, 7
  br i1 %1424, label %1425, label %1442

1425:                                             ; preds = %1420, %1437
  %1426 = phi i32 [ %1438, %1437 ], [ %1423, %1420 ]
  %1427 = phi i32 [ %1439, %1437 ], [ %1422, %1420 ]
  %1428 = phi i8* [ %1440, %1437 ], [ %1421, %1420 ]
  %1429 = load i8, i8* %1428, align 1
  %1430 = icmp eq i8 %1429, 0
  br i1 %1430, label %1437, label %1431

1431:                                             ; preds = %1425
  %1432 = zext i8 %1429 to i64
  %1433 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1432
  %1434 = load i8, i8* %1433, align 1
  %1435 = zext i8 %1434 to i32
  %1436 = add nsw i32 %1426, %1435
  br label %1456

1437:                                             ; preds = %1425
  %1438 = add nsw i32 %1426, 8
  %1439 = add nsw i32 %1427, -8
  %1440 = getelementptr inbounds i8, i8* %1428, i64 1
  %1441 = icmp sgt i32 %1439, 7
  br i1 %1441, label %1425, label %1442

1442:                                             ; preds = %1437, %1420
  %1443 = phi i8* [ %1421, %1420 ], [ %1440, %1437 ]
  %1444 = phi i32 [ %1422, %1420 ], [ %1439, %1437 ]
  %1445 = phi i32 [ %1423, %1420 ], [ %1438, %1437 ]
  %1446 = icmp sgt i32 %1444, 0
  br i1 %1446, label %1447, label %1456

1447:                                             ; preds = %1442
  %1448 = load i8, i8* %1443, align 1
  %1449 = zext i8 %1448 to i64
  %1450 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @zeroruns to [256 x i8]*), i64 0, i64 %1449
  %1451 = load i8, i8* %1450, align 1
  %1452 = zext i8 %1451 to i32
  %1453 = icmp slt i32 %1444, %1452
  %1454 = select i1 %1453, i32 %1444, i32 %1452
  %1455 = add nsw i32 %1454, %1445
  br label %1456

1456:                                             ; preds = %1447, %1442, %1431, %1414, %1348, %1337, %1328, %1323, %1312, %1295, %1229, %1218
  %1457 = phi i32 [ %1219, %1218 ], [ %1219, %1229 ], [ %1219, %1295 ], [ %1219, %1312 ], [ %1219, %1323 ], [ %1219, %1328 ], [ %1338, %1337 ], [ %1338, %1348 ], [ %1338, %1414 ], [ %1338, %1431 ], [ %1338, %1442 ], [ %1338, %1447 ]
  %1458 = phi i32 [ %1220, %1218 ], [ %1220, %1229 ], [ %1220, %1295 ], [ %1220, %1312 ], [ %1220, %1323 ], [ %1220, %1328 ], [ %1339, %1337 ], [ %1339, %1348 ], [ %1339, %1414 ], [ %1339, %1431 ], [ %1339, %1442 ], [ %1339, %1447 ]
  %1459 = phi i32 [ 0, %1218 ], [ %1242, %1229 ], [ %1300, %1295 ], [ %1317, %1312 ], [ %1326, %1323 ], [ %1336, %1328 ], [ 0, %1337 ], [ %1361, %1348 ], [ %1419, %1414 ], [ %1436, %1431 ], [ %1445, %1442 ], [ %1455, %1447 ]
  %1460 = add i32 %1459, %1457
  br label %196

1461:                                             ; preds = %732
  ret void
}

declare void @_TIFFmemcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @putspan(%struct.tiff*, i32, %struct.tableentry* nocapture readonly) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %5 = bitcast i8** %4 to %struct.Fax3CodecState**
  %6 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %5, align 8
  %7 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %1, 2623
  br i1 %11, label %12, label %91

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 103, i32 1
  %14 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 103, i32 0
  %15 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %16 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %17 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %18 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 103, i32 2
  br label %19

19:                                               ; preds = %12, %84
  %20 = phi i32 [ %10, %12 ], [ %86, %84 ]
  %21 = phi i32 [ %8, %12 ], [ %85, %84 ]
  %22 = phi i32 [ %1, %12 ], [ %89, %84 ]
  %23 = load i16, i16* %13, align 2
  %24 = zext i16 %23 to i32
  %25 = load i16, i16* %14, align 2
  %26 = zext i16 %25 to i32
  %27 = icmp ult i32 %21, %26
  br i1 %27, label %28, label %60

28:                                               ; preds = %19
  %29 = load i64, i64* %15, align 8
  %30 = sub i32 %26, %21
  %31 = lshr i32 %24, %30
  %32 = or i32 %31, %20
  %33 = load i64, i64* %16, align 8
  %34 = icmp slt i64 %29, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %28
  %36 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %37

37:                                               ; preds = %35, %28
  %38 = trunc i32 %32 to i8
  %39 = load i8*, i8** %17, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 1
  store i8* %40, i8** %17, align 8
  store i8 %38, i8* %39, align 1
  %41 = load i64, i64* %15, align 8
  %42 = add nsw i64 %41, 1
  store i64 %42, i64* %15, align 8
  %43 = icmp ugt i32 %30, 8
  br i1 %43, label %44, label %60

44:                                               ; preds = %37, %53
  %45 = phi i64 [ %58, %53 ], [ %42, %37 ]
  %46 = phi i32 [ %47, %53 ], [ %30, %37 ]
  %47 = add i32 %46, -8
  %48 = lshr i32 %24, %47
  %49 = load i64, i64* %16, align 8
  %50 = icmp slt i64 %45, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  %52 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %53

53:                                               ; preds = %44, %51
  %54 = trunc i32 %48 to i8
  %55 = load i8*, i8** %17, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 1
  store i8* %56, i8** %17, align 8
  store i8 %54, i8* %55, align 1
  %57 = load i64, i64* %15, align 8
  %58 = add nsw i64 %57, 1
  store i64 %58, i64* %15, align 8
  %59 = icmp ugt i32 %47, 8
  br i1 %59, label %44, label %60, !llvm.loop !7

60:                                               ; preds = %37, %53, %19
  %61 = phi i32 [ %21, %19 ], [ 8, %53 ], [ 8, %37 ]
  %62 = phi i32 [ %20, %19 ], [ 0, %53 ], [ 0, %37 ]
  %63 = phi i32 [ %26, %19 ], [ %30, %37 ], [ %47, %53 ]
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [9 x i32], [9 x i32]* @_msbmask, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, %24
  %68 = sub i32 %61, %63
  %69 = shl i32 %67, %68
  %70 = or i32 %69, %62
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %60
  %73 = load i64, i64* %15, align 8
  %74 = load i64, i64* %16, align 8
  %75 = icmp slt i64 %73, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %78

78:                                               ; preds = %72, %76
  %79 = trunc i32 %70 to i8
  %80 = load i8*, i8** %17, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  store i8* %81, i8** %17, align 8
  store i8 %79, i8* %80, align 1
  %82 = load i64, i64* %15, align 8
  %83 = add nsw i64 %82, 1
  store i64 %83, i64* %15, align 8
  br label %84

84:                                               ; preds = %78, %60
  %85 = phi i32 [ 8, %78 ], [ %68, %60 ]
  %86 = phi i32 [ 0, %78 ], [ %70, %60 ]
  %87 = load i16, i16* %18, align 2
  %88 = sext i16 %87 to i32
  %89 = sub nsw i32 %22, %88
  %90 = icmp sgt i32 %89, 2623
  br i1 %90, label %19, label %91

91:                                               ; preds = %84, %3
  %92 = phi i32 [ %1, %3 ], [ %89, %84 ]
  %93 = phi i32 [ %8, %3 ], [ %85, %84 ]
  %94 = phi i32 [ %10, %3 ], [ %86, %84 ]
  %95 = icmp sgt i32 %92, 63
  br i1 %95, label %96, label %176

96:                                               ; preds = %91
  %97 = lshr i32 %92, 6
  %98 = add nuw nsw i32 %97, 63
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 %99, i32 1
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 %99, i32 0
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = icmp ult i32 %93, %105
  br i1 %106, label %107, label %142

107:                                              ; preds = %96
  %108 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %109 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %110 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %111 = load i64, i64* %108, align 8
  %112 = sub i32 %105, %93
  %113 = lshr i32 %102, %112
  %114 = or i32 %113, %94
  %115 = load i64, i64* %109, align 8
  %116 = icmp slt i64 %111, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %119

119:                                              ; preds = %117, %107
  %120 = trunc i32 %114 to i8
  %121 = load i8*, i8** %110, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  store i8* %122, i8** %110, align 8
  store i8 %120, i8* %121, align 1
  %123 = load i64, i64* %108, align 8
  %124 = add nsw i64 %123, 1
  store i64 %124, i64* %108, align 8
  %125 = icmp ugt i32 %112, 8
  br i1 %125, label %126, label %142

126:                                              ; preds = %119, %135
  %127 = phi i64 [ %140, %135 ], [ %124, %119 ]
  %128 = phi i32 [ %129, %135 ], [ %112, %119 ]
  %129 = add i32 %128, -8
  %130 = lshr i32 %102, %129
  %131 = load i64, i64* %109, align 8
  %132 = icmp slt i64 %127, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %126
  %134 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %135

135:                                              ; preds = %126, %133
  %136 = trunc i32 %130 to i8
  %137 = load i8*, i8** %110, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  store i8* %138, i8** %110, align 8
  store i8 %136, i8* %137, align 1
  %139 = load i64, i64* %108, align 8
  %140 = add nsw i64 %139, 1
  store i64 %140, i64* %108, align 8
  %141 = icmp ugt i32 %129, 8
  br i1 %141, label %126, label %142, !llvm.loop !8

142:                                              ; preds = %119, %135, %96
  %143 = phi i32 [ %93, %96 ], [ 8, %135 ], [ 8, %119 ]
  %144 = phi i32 [ %94, %96 ], [ 0, %135 ], [ 0, %119 ]
  %145 = phi i32 [ %105, %96 ], [ %112, %119 ], [ %129, %135 ]
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [9 x i32], [9 x i32]* @_msbmask, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = and i32 %148, %102
  %150 = sub i32 %143, %145
  %151 = shl i32 %149, %150
  %152 = or i32 %151, %144
  %153 = icmp eq i32 %150, 0
  br i1 %153, label %154, label %169

154:                                              ; preds = %142
  %155 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %158 = load i64, i64* %157, align 8
  %159 = icmp slt i64 %156, %158
  br i1 %159, label %162, label %160

160:                                              ; preds = %154
  %161 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %162

162:                                              ; preds = %154, %160
  %163 = trunc i32 %152 to i8
  %164 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 1
  store i8* %166, i8** %164, align 8
  store i8 %163, i8* %165, align 1
  %167 = load i64, i64* %155, align 8
  %168 = add nsw i64 %167, 1
  store i64 %168, i64* %155, align 8
  br label %169

169:                                              ; preds = %162, %142
  %170 = phi i32 [ 8, %162 ], [ %150, %142 ]
  %171 = phi i32 [ 0, %162 ], [ %152, %142 ]
  %172 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 %99, i32 2
  %173 = load i16, i16* %172, align 2
  %174 = sext i16 %173 to i32
  %175 = sub nsw i32 %92, %174
  br label %176

176:                                              ; preds = %169, %91
  %177 = phi i32 [ %175, %169 ], [ %92, %91 ]
  %178 = phi i32 [ %170, %169 ], [ %93, %91 ]
  %179 = phi i32 [ %171, %169 ], [ %94, %91 ]
  %180 = sext i32 %177 to i64
  %181 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 %180, i32 1
  %182 = load i16, i16* %181, align 2
  %183 = zext i16 %182 to i32
  %184 = getelementptr inbounds %struct.tableentry, %struct.tableentry* %2, i64 %180, i32 0
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i32
  %187 = icmp ult i32 %178, %186
  br i1 %187, label %188, label %223

188:                                              ; preds = %176
  %189 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %190 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %191 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %192 = load i64, i64* %189, align 8
  %193 = sub i32 %186, %178
  %194 = lshr i32 %183, %193
  %195 = or i32 %194, %179
  %196 = load i64, i64* %190, align 8
  %197 = icmp slt i64 %192, %196
  br i1 %197, label %200, label %198

198:                                              ; preds = %188
  %199 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %200

200:                                              ; preds = %198, %188
  %201 = trunc i32 %195 to i8
  %202 = load i8*, i8** %191, align 8
  %203 = getelementptr inbounds i8, i8* %202, i64 1
  store i8* %203, i8** %191, align 8
  store i8 %201, i8* %202, align 1
  %204 = load i64, i64* %189, align 8
  %205 = add nsw i64 %204, 1
  store i64 %205, i64* %189, align 8
  %206 = icmp ugt i32 %193, 8
  br i1 %206, label %207, label %223

207:                                              ; preds = %200, %216
  %208 = phi i64 [ %221, %216 ], [ %205, %200 ]
  %209 = phi i32 [ %210, %216 ], [ %193, %200 ]
  %210 = add i32 %209, -8
  %211 = lshr i32 %183, %210
  %212 = load i64, i64* %190, align 8
  %213 = icmp slt i64 %208, %212
  br i1 %213, label %216, label %214

214:                                              ; preds = %207
  %215 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %216

216:                                              ; preds = %207, %214
  %217 = trunc i32 %211 to i8
  %218 = load i8*, i8** %191, align 8
  %219 = getelementptr inbounds i8, i8* %218, i64 1
  store i8* %219, i8** %191, align 8
  store i8 %217, i8* %218, align 1
  %220 = load i64, i64* %189, align 8
  %221 = add nsw i64 %220, 1
  store i64 %221, i64* %189, align 8
  %222 = icmp ugt i32 %210, 8
  br i1 %222, label %207, label %223, !llvm.loop !9

223:                                              ; preds = %200, %216, %176
  %224 = phi i32 [ %178, %176 ], [ 8, %216 ], [ 8, %200 ]
  %225 = phi i32 [ %179, %176 ], [ 0, %216 ], [ 0, %200 ]
  %226 = phi i32 [ %186, %176 ], [ %193, %200 ], [ %210, %216 ]
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [9 x i32], [9 x i32]* @_msbmask, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = and i32 %229, %183
  %231 = sub i32 %224, %226
  %232 = shl i32 %230, %231
  %233 = or i32 %232, %225
  %234 = icmp eq i32 %231, 0
  br i1 %234, label %235, label %250

235:                                              ; preds = %223
  %236 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %237 = load i64, i64* %236, align 8
  %238 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %239 = load i64, i64* %238, align 8
  %240 = icmp slt i64 %237, %239
  br i1 %240, label %243, label %241

241:                                              ; preds = %235
  %242 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %243

243:                                              ; preds = %235, %241
  %244 = trunc i32 %233 to i8
  %245 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds i8, i8* %246, i64 1
  store i8* %247, i8** %245, align 8
  store i8 %244, i8* %246, align 1
  %248 = load i64, i64* %236, align 8
  %249 = add nsw i64 %248, 1
  store i64 %249, i64* %236, align 8
  br label %250

250:                                              ; preds = %243, %223
  %251 = phi i32 [ 8, %243 ], [ %231, %223 ]
  %252 = phi i32 [ 0, %243 ], [ %233, %223 ]
  store i32 %252, i32* %9, align 8
  store i32 %251, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @Fax3PutBits(%struct.tiff*, i32, i32) unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 42
  %5 = bitcast i8** %4 to %struct.Fax3CodecState**
  %6 = load %struct.Fax3CodecState*, %struct.Fax3CodecState** %5, align 8
  %7 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.Fax3CodecState, %struct.Fax3CodecState* %6, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %8, %2
  br i1 %11, label %12, label %47

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %14 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %15 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %16 = load i64, i64* %13, align 8
  %17 = sub i32 %2, %8
  %18 = lshr i32 %1, %17
  %19 = or i32 %18, %10
  %20 = load i64, i64* %14, align 8
  %21 = icmp slt i64 %16, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %12
  %23 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %24

24:                                               ; preds = %22, %12
  %25 = trunc i32 %19 to i8
  %26 = load i8*, i8** %15, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %15, align 8
  store i8 %25, i8* %26, align 1
  %28 = load i64, i64* %13, align 8
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %13, align 8
  %30 = icmp ugt i32 %17, 8
  br i1 %30, label %31, label %47

31:                                               ; preds = %24, %40
  %32 = phi i64 [ %45, %40 ], [ %29, %24 ]
  %33 = phi i32 [ %34, %40 ], [ %17, %24 ]
  %34 = add i32 %33, -8
  %35 = lshr i32 %1, %34
  %36 = load i64, i64* %14, align 8
  %37 = icmp slt i64 %32, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %40

40:                                               ; preds = %31, %38
  %41 = trunc i32 %35 to i8
  %42 = load i8*, i8** %15, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  store i8* %43, i8** %15, align 8
  store i8 %41, i8* %42, align 1
  %44 = load i64, i64* %13, align 8
  %45 = add nsw i64 %44, 1
  store i64 %45, i64* %13, align 8
  %46 = icmp ugt i32 %34, 8
  br i1 %46, label %31, label %47, !llvm.loop !10

47:                                               ; preds = %24, %40, %3
  %48 = phi i32 [ %2, %3 ], [ %17, %24 ], [ %34, %40 ]
  %49 = phi i32 [ %8, %3 ], [ 8, %40 ], [ 8, %24 ]
  %50 = phi i32 [ %10, %3 ], [ 0, %40 ], [ 0, %24 ]
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds [9 x i32], [9 x i32]* @_msbmask, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, %1
  %55 = sub i32 %49, %48
  %56 = shl i32 %54, %55
  %57 = or i32 %56, %50
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %59, label %74

59:                                               ; preds = %47
  %60 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 50
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 46
  %63 = load i64, i64* %62, align 8
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = tail call i32 @TIFFFlushData1(%struct.tiff* %0) #7
  br label %67

67:                                               ; preds = %59, %65
  %68 = trunc i32 %57 to i8
  %69 = getelementptr inbounds %struct.tiff, %struct.tiff* %0, i64 0, i32 49
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  store i8* %71, i8** %69, align 8
  store i8 %68, i8* %70, align 1
  %72 = load i64, i64* %60, align 8
  %73 = add nsw i64 %72, 1
  store i64 %73, i64* %60, align 8
  br label %74

74:                                               ; preds = %67, %47
  %75 = phi i32 [ 8, %67 ], [ %55, %47 ]
  %76 = phi i32 [ 0, %67 ], [ %57, %47 ]
  store i32 %76, i32* %9, align 8
  store i32 %75, i32* %7, align 4
  ret void
}

declare void @_TIFFfree(i8*) local_unnamed_addr #2

declare void @_TIFFSetDefaultCompressionState(%struct.tiff*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
