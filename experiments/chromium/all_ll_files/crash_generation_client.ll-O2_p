; ModuleID = '../../third_party/breakpad/breakpad/src/client/linux/crash_generation/crash_generation_client.cc'
source_filename = "../../third_party/breakpad/breakpad/src/client/linux/crash_generation/crash_generation_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.google_breakpad::CrashGenerationClient" = type { i32 (...)** }
%"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl" = type <{ %"class.google_breakpad::CrashGenerationClient", i32, [4 x i8] }>
%struct.kernel_iovec = type { i8*, i64 }
%struct.kernel_msghdr = type { i8*, i32, %struct.kernel_iovec*, i64, i8*, i64, i32 }

$_ZN15google_breakpad21CrashGenerationClientD2Ev = comdat any

@_ZTVN15google_breakpad12_GLOBAL__N_125CrashGenerationClientImplE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.google_breakpad::CrashGenerationClient"*)* @_ZN15google_breakpad21CrashGenerationClientD2Ev to i8*), i8* bitcast (void (%"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl"*)* @_ZN15google_breakpad12_GLOBAL__N_125CrashGenerationClientImplD0Ev to i8*), i8* bitcast (i1 (%"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl"*, i8*, i64)* @_ZN15google_breakpad12_GLOBAL__N_125CrashGenerationClientImpl11RequestDumpEPKvm to i8*)] }, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %"class.google_breakpad::CrashGenerationClient"* @_ZN15google_breakpad21CrashGenerationClient9TryCreateEi(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp slt i32 %0, 0
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @_Znwm(i64 16) #6
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN15google_breakpad12_GLOBAL__N_125CrashGenerationClientImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 %0, i32* %7, align 8
  %8 = bitcast i8* %4 to %"class.google_breakpad::CrashGenerationClient"*
  br label %9

9:                                                ; preds = %1, %3
  %10 = phi %"class.google_breakpad::CrashGenerationClient"* [ %8, %3 ], [ null, %1 ]
  ret %"class.google_breakpad::CrashGenerationClient"* %10
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15google_breakpad21CrashGenerationClientD2Ev(%"class.google_breakpad::CrashGenerationClient"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN15google_breakpad12_GLOBAL__N_125CrashGenerationClientImplD0Ev(%"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN15google_breakpad12_GLOBAL__N_125CrashGenerationClientImpl11RequestDumpEPKvm(%"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl"* nocapture readonly, i8*, i64) unnamed_addr #2 align 2 {
  %4 = alloca [2 x i32], align 4
  %5 = alloca %struct.kernel_iovec, align 8
  %6 = alloca %struct.kernel_msghdr, align 8
  %7 = alloca [24 x i8], align 16
  %8 = alloca i8, align 1
  %9 = bitcast [2 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  store i32 -1431655766, i32* %10, align 4
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 1
  store i32 -1431655766, i32* %11, align 4
  %12 = ptrtoint [2 x i32]* %4 to i64
  %13 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 22, i64 %12) #7, !srcloc !2
  %14 = icmp ugt i64 %13, -4096
  %15 = trunc i64 %13 to i32
  br i1 %14, label %16, label %19

16:                                               ; preds = %3
  %17 = sub nsw i32 0, %15
  %18 = tail call i32* @__errno_location() #8
  store i32 %17, i32* %18, align 4
  br label %105

19:                                               ; preds = %3
  %20 = icmp slt i32 %15, 0
  br i1 %20, label %105, label %21

21:                                               ; preds = %19
  %22 = bitcast %struct.kernel_iovec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %23 = getelementptr inbounds %struct.kernel_iovec, %struct.kernel_iovec* %5, i64 0, i32 0
  %24 = getelementptr inbounds %struct.kernel_iovec, %struct.kernel_iovec* %5, i64 0, i32 1
  store i8* %1, i8** %23, align 8
  store i64 %2, i64* %24, align 8
  %25 = bitcast %struct.kernel_msghdr* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 56, i1 false)
  %26 = getelementptr inbounds %struct.kernel_msghdr, %struct.kernel_msghdr* %6, i64 0, i32 2
  store %struct.kernel_iovec* %5, %struct.kernel_iovec** %26, align 8
  %27 = getelementptr inbounds %struct.kernel_msghdr, %struct.kernel_msghdr* %6, i64 0, i32 3
  store i64 1, i64* %27, align 8
  %28 = getelementptr inbounds [24 x i8], [24 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 0, i64 24, i1 false)
  %29 = getelementptr inbounds %struct.kernel_msghdr, %struct.kernel_msghdr* %6, i64 0, i32 4
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %struct.kernel_msghdr, %struct.kernel_msghdr* %6, i64 0, i32 5
  store i64 24, i64* %30, align 8
  %31 = getelementptr inbounds [24 x i8], [24 x i8]* %7, i64 0, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 8
  %33 = getelementptr inbounds [24 x i8], [24 x i8]* %7, i64 0, i64 12
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 4
  %35 = bitcast [24 x i8]* %7 to i64*
  store i64 20, i64* %35, align 16
  %36 = getelementptr inbounds [24 x i8], [24 x i8]* %7, i64 0, i64 16
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %11, align 4
  store i32 %38, i32* %37, align 16
  %39 = getelementptr inbounds %"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl", %"class.google_breakpad::(anonymous namespace)::CrashGenerationClientImpl"* %0, i64 0, i32 1
  %40 = ptrtoint %struct.kernel_msghdr* %6 to i64
  br label %41

41:                                               ; preds = %55, %21
  %42 = load i32, i32* %39, align 8
  %43 = sext i32 %42 to i64
  %44 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 46, i64 %43, i64 %40, i64 0) #7, !srcloc !3
  %45 = icmp ugt i64 %44, -4096
  %46 = trunc i64 %44 to i32
  br i1 %45, label %47, label %50

47:                                               ; preds = %41
  %48 = sub nsw i32 0, %46
  %49 = tail call i32* @__errno_location() #8
  store i32 %48, i32* %49, align 4
  br label %55

50:                                               ; preds = %41
  %51 = icmp eq i32 %46, -1
  br i1 %51, label %52, label %58

52:                                               ; preds = %50
  %53 = tail call i32* @__errno_location() #8
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %41, label %60

58:                                               ; preds = %50
  %59 = trunc i64 %44 to i32
  br label %60

60:                                               ; preds = %55, %58
  %61 = phi i32 [ %59, %58 ], [ -1, %55 ]
  %62 = load i32, i32* %11, align 4
  %63 = sext i32 %62 to i64
  %64 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %63) #7, !srcloc !4
  %65 = icmp ugt i64 %64, -4096
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = trunc i64 %64 to i32
  %68 = sub nsw i32 0, %67
  %69 = tail call i32* @__errno_location() #8
  store i32 %68, i32* %69, align 4
  br label %70

70:                                               ; preds = %60, %66
  %71 = icmp slt i32 %61, 0
  br i1 %71, label %72, label %81

72:                                               ; preds = %70
  %73 = load i32, i32* %10, align 4
  %74 = sext i32 %73 to i64
  %75 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %74) #7, !srcloc !4
  %76 = icmp ugt i64 %75, -4096
  br i1 %76, label %77, label %103

77:                                               ; preds = %72
  %78 = trunc i64 %75 to i32
  %79 = sub nsw i32 0, %78
  %80 = tail call i32* @__errno_location() #8
  store i32 %79, i32* %80, align 4
  br label %103

81:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #7
  store i8 -86, i8* %8, align 1
  %82 = ptrtoint i8* %8 to i64
  br label %83

83:                                               ; preds = %88, %81
  %84 = load i32, i32* %10, align 4
  %85 = sext i32 %84 to i64
  %86 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},{si},{dx},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 0, i64 %85, i64 %82, i64 1) #7, !srcloc !5
  %87 = icmp ugt i64 %86, -4096
  br i1 %87, label %88, label %93

88:                                               ; preds = %83
  %89 = trunc i64 %86 to i32
  %90 = sub nsw i32 0, %89
  %91 = tail call i32* @__errno_location() #8
  store i32 %90, i32* %91, align 4
  %92 = icmp eq i32 %90, 4
  br i1 %92, label %83, label %93

93:                                               ; preds = %83, %88
  %94 = load i32, i32* %10, align 4
  %95 = sext i32 %94 to i64
  %96 = call i64 asm sideeffect "syscall\0A", "={ax},0,{di},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 3, i64 %95) #7, !srcloc !4
  %97 = icmp ugt i64 %96, -4096
  br i1 %97, label %98, label %102

98:                                               ; preds = %93
  %99 = trunc i64 %96 to i32
  %100 = sub nsw i32 0, %99
  %101 = tail call i32* @__errno_location() #8
  store i32 %100, i32* %101, align 4
  br label %102

102:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #7
  br label %103

103:                                              ; preds = %77, %72, %102
  %104 = phi i1 [ true, %102 ], [ false, %72 ], [ false, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  br label %105

105:                                              ; preds = %16, %19, %103
  %106 = phi i1 [ %104, %103 ], [ false, %19 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret i1 %106
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2144387191}
!3 = !{i32 -2144422986}
!4 = !{i32 -2144594518}
!5 = !{i32 -2144487535}
