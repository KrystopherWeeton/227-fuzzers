; ModuleID = '../../third_party/icu/source/i18n/collationkeys.cpp'
source_filename = "../../third_party/icu/source/i18n/collationkeys.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::SortKeyByteSink" = type <{ %"class.icu_69::ByteSink", i8*, i32, i32, i32, [4 x i8] }>
%"class.icu_69::ByteSink" = type { i32 (...)** }
%"class.icu_69::CollationKeys::LevelCallback" = type { i32 (...)** }
%"class.icu_69::CollationIterator" = type <{ %"class.icu_69::UObject", %struct.UTrie2*, %"struct.icu_69::CollationData"*, %"class.icu_69::CollationIterator::CEBuffer", i32, [4 x i8], %"class.icu_69::SkippedState"*, i32, i8, [3 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%"struct.icu_69::CollationData" = type <{ %struct.UTrie2*, i32*, i64*, i16*, %"struct.icu_69::CollationData"*, i32*, %"class.icu_69::Normalizer2Impl"*, i32, i32, i32, i32, i8*, %"class.icu_69::UnicodeSet"*, i16*, i32, i32, i16*, i16*, i32, [4 x i8], i32*, i32, [4 x i8] }>
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::CollationIterator::CEBuffer" = type { i32, %"class.icu_69::MaybeStackArray.1" }
%"class.icu_69::MaybeStackArray.1" = type { i64*, i32, i8, [40 x i64] }
%"class.icu_69::SkippedState" = type opaque
%"struct.icu_69::CollationSettings" = type <{ %"class.icu_69::SharedObject", i32, i32, i8*, i32, [4 x i8], i32*, i32, [4 x i8], i32*, i32, i32, i32, [384 x i16], [4 x i8] }>
%"class.icu_69::SharedObject" = type { %"class.icu_69::UObject", i32, %"struct.std::__1::atomic", %"class.icu_69::UnifiedCacheBase"* }
%"class.icu_69::UnifiedCacheBase" = type { %"class.icu_69::UObject" }
%"class.icu_69::(anonymous namespace)::SortKeyLevel" = type <{ %"class.icu_69::MaybeStackArray.2", i32, i8, [3 x i8] }>
%"class.icu_69::MaybeStackArray.2" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZN6icu_6917CollationIterator6nextCEER10UErrorCode = comdat any

$_ZTSN6icu_697UMemoryE = comdat any

$_ZTIN6icu_697UMemoryE = comdat any

@_ZN6icu_69L10levelMasksE = internal unnamed_addr constant [16 x i32] [i32 2, i32 6, i32 22, i32 54, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 54], align 16
@_ZTVN6icu_6915SortKeyByteSinkE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6915SortKeyByteSinkE to i8*), i8* bitcast (void (%"class.icu_69::SortKeyByteSink"*)* @_ZN6icu_6915SortKeyByteSinkD2Ev to i8*), i8* bitcast (void (%"class.icu_69::SortKeyByteSink"*)* @_ZN6icu_6915SortKeyByteSinkD0Ev to i8*), i8* bitcast (void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)* @_ZN6icu_6915SortKeyByteSink6AppendEPKci to i8*), i8* bitcast (i8* (%"class.icu_69::SortKeyByteSink"*, i32, i32, i8*, i32, i32*)* @_ZN6icu_6915SortKeyByteSink15GetAppendBufferEiiPciPi to i8*), i8* bitcast (void (%"class.icu_69::ByteSink"*)* @_ZN6icu_698ByteSink5FlushEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6915SortKeyByteSinkE = hidden constant [27 x i8] c"N6icu_6915SortKeyByteSinkE\00", align 1
@_ZTIN6icu_698ByteSinkE = external constant i8*
@_ZTIN6icu_6915SortKeyByteSinkE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6icu_6915SortKeyByteSinkE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_698ByteSinkE to i8*) }, align 8
@_ZTVN6icu_6913CollationKeys13LevelCallbackE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6913CollationKeys13LevelCallbackE to i8*), i8* bitcast (void (%"class.icu_69::CollationKeys::LevelCallback"*)* @_ZN6icu_6913CollationKeys13LevelCallbackD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CollationKeys::LevelCallback"*)* @_ZN6icu_6913CollationKeys13LevelCallbackD0Ev to i8*), i8* bitcast (i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)* @_ZN6icu_6913CollationKeys13LevelCallback11needToWriteENS_9Collation5LevelE to i8*)] }, align 8
@_ZTSN6icu_6913CollationKeys13LevelCallbackE = hidden constant [40 x i8] c"N6icu_6913CollationKeys13LevelCallbackE\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_697UMemoryE = linkonce_odr hidden constant [18 x i8] c"N6icu_697UMemoryE\00", comdat, align 1
@_ZTIN6icu_697UMemoryE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN6icu_697UMemoryE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6icu_6913CollationKeys13LevelCallbackE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_ZTSN6icu_6913CollationKeys13LevelCallbackE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_697UMemoryE to i8*) }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6915SortKeyByteSinkD1Ev = hidden unnamed_addr alias void (%"class.icu_69::SortKeyByteSink"*), void (%"class.icu_69::SortKeyByteSink"*)* @_ZN6icu_6915SortKeyByteSinkD2Ev
@_ZN6icu_6913CollationKeys13LevelCallbackD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CollationKeys::LevelCallback"*), void (%"class.icu_69::CollationKeys::LevelCallback"*)* @_ZN6icu_6913CollationKeys13LevelCallbackD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #10
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #10
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #10
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #10
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #10
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_698ByteSinkD2Ev(%"class.icu_69::ByteSink"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6915SortKeyByteSinkD2Ev(%"class.icu_69::SortKeyByteSink"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 0
  tail call void @_ZN6icu_698ByteSinkD2Ev(%"class.icu_69::ByteSink"* %2) #10
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6915SortKeyByteSinkD0Ev(%"class.icu_69::SortKeyByteSink"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6915SortKeyByteSink6AppendEPKci(%"class.icu_69::SortKeyByteSink"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %2, 1
  %5 = icmp eq i8* %1, null
  %6 = or i1 %5, %4
  br i1 %6, label %42, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = sub nsw i32 %9, %2
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = sext i32 %9 to i64
  %16 = getelementptr inbounds i8, i8* %1, i64 %15
  %17 = sub nsw i32 0, %12
  store i32 0, i32* %8, align 8
  br label %19

18:                                               ; preds = %11
  store i32 %12, i32* %8, align 8
  br label %42

19:                                               ; preds = %14, %7
  %20 = phi i32 [ %2, %7 ], [ %17, %14 ]
  %21 = phi i8* [ %1, %7 ], [ %16, %14 ]
  %22 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, %20
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = sext i32 %23 to i64
  %28 = getelementptr inbounds i8, i8* %26, i64 %27
  %29 = icmp eq i8* %28, %21
  br i1 %29, label %42, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = sub nsw i32 %32, %23
  %34 = icmp sgt i32 %20, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = sext i32 %20 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %21, i64 %36, i1 false)
  br label %42

37:                                               ; preds = %30
  %38 = bitcast %"class.icu_69::SortKeyByteSink"* %0 to void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)***
  %39 = load void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)**, void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)*, void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)** %39, i64 5
  %41 = load void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)*, void (%"class.icu_69::SortKeyByteSink"*, i8*, i32, i32)** %40, align 8
  tail call void %41(%"class.icu_69::SortKeyByteSink"* %0, i8* %21, i32 %20, i32 %23) #10
  br label %42

42:                                               ; preds = %18, %19, %37, %35, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6icu_6915SortKeyByteSink15GetAppendBufferEiiPciPi(%"class.icu_69::SortKeyByteSink"*, i32, i32, i8* readnone, i32, i32* nocapture) unnamed_addr #0 align 2 {
  %7 = icmp slt i32 %1, 1
  %8 = icmp slt i32 %4, %1
  %9 = or i1 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 0, i32* %5, align 4
  br label %46

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i32 %4, i32* %5, align 4
  br label %46

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %18, %20
  %22 = icmp slt i32 %21, %1
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  store i32 %21, i32* %5, align 4
  %24 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = load i32, i32* %19, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  br label %46

29:                                               ; preds = %16
  %30 = bitcast %"class.icu_69::SortKeyByteSink"* %0 to i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)***
  %31 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %30, align 8
  %32 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %31, i64 6
  %33 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %32, align 8
  %34 = tail call signext i8 %33(%"class.icu_69::SortKeyByteSink"* %0, i32 %2, i32 %20) #10
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %29
  %37 = load i32, i32* %17, align 8
  %38 = load i32, i32* %19, align 4
  %39 = sub nsw i32 %37, %38
  store i32 %39, i32* %5, align 4
  %40 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %0, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  %42 = load i32, i32* %19, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  br label %46

45:                                               ; preds = %29
  store i32 %4, i32* %5, align 4
  br label %46

46:                                               ; preds = %23, %36, %45, %15, %10
  %47 = phi i8* [ null, %10 ], [ %3, %15 ], [ %28, %23 ], [ %44, %36 ], [ %3, %45 ]
  ret i8* %47
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6913CollationKeys13LevelCallbackD2Ev(%"class.icu_69::CollationKeys::LevelCallback"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913CollationKeys13LevelCallbackD0Ev(%"class.icu_69::CollationKeys::LevelCallback"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.icu_69::CollationKeys::LevelCallback"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN6icu_6913CollationKeys13LevelCallback11needToWriteENS_9Collation5LevelE(%"class.icu_69::CollationKeys::LevelCallback"* nocapture readnone, i32) unnamed_addr #8 align 2 {
  ret i8 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913CollationKeys26writeSortKeyUpToQuaternaryERNS_17CollationIteratorEPKaRKNS_17CollationSettingsERNS_15SortKeyByteSinkENS_9Collation5LevelERNS0_13LevelCallbackEaR10UErrorCode(%"class.icu_69::CollationIterator"* dereferenceable(392), i8* nocapture readonly, %"struct.icu_69::CollationSettings"* dereferenceable(856), %"class.icu_69::SortKeyByteSink"* dereferenceable(32), i32, %"class.icu_69::CollationKeys::LevelCallback"* dereferenceable(8), i8 signext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.icu_69::(anonymous namespace)::SortKeyLevel", align 8
  %10 = alloca %"class.icu_69::(anonymous namespace)::SortKeyLevel", align 8
  %11 = alloca %"class.icu_69::(anonymous namespace)::SortKeyLevel", align 8
  %12 = alloca %"class.icu_69::(anonymous namespace)::SortKeyLevel", align 8
  %13 = alloca [3 x i8], align 1
  %14 = load i32, i32* %7, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %2201

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = ashr i32 %18, 12
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [16 x i32], [16 x i32]* @_ZN6icu_69L10levelMasksE, i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = lshr i32 %18, 7
  %24 = and i32 %23, 8
  %25 = or i32 %24, %22
  %26 = shl nsw i32 -1, %4
  %27 = and i32 %25, %26
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %2201, label %29

29:                                               ; preds = %16
  %30 = and i32 %18, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, 1
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi i32 [ %35, %32 ], [ 0, %29 ]
  %38 = and i32 %18, 1536
  %39 = icmp eq i32 %38, 512
  %40 = select i1 %39, i32 65343, i32 16191
  %41 = bitcast %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %41) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 64, i1 false)
  %42 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9, i64 0, i32 0, i32 3, i64 0
  store i8* %43, i8** %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9, i64 0, i32 0, i32 1
  store i32 40, i32* %44, align 8
  %45 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9, i64 0, i32 0, i32 2
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9, i64 0, i32 1
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %9, i64 0, i32 2
  store i8 1, i8* %47, align 4
  %48 = bitcast %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %48) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 64, i1 false)
  %49 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10, i64 0, i32 0, i32 3, i64 0
  store i8* %50, i8** %49, align 8
  %51 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10, i64 0, i32 0, i32 1
  store i32 40, i32* %51, align 8
  %52 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10, i64 0, i32 0, i32 2
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10, i64 0, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %10, i64 0, i32 2
  store i8 1, i8* %54, align 4
  %55 = bitcast %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %55) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 64, i1 false)
  %56 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11, i64 0, i32 0, i32 3, i64 0
  store i8* %57, i8** %56, align 8
  %58 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11, i64 0, i32 0, i32 1
  store i32 40, i32* %58, align 8
  %59 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11, i64 0, i32 0, i32 2
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11, i64 0, i32 1
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %11, i64 0, i32 2
  store i8 1, i8* %61, align 4
  %62 = bitcast %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %62) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 64, i1 false)
  %63 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12, i64 0, i32 0, i32 3, i64 0
  store i8* %64, i8** %63, align 8
  %65 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12, i64 0, i32 0, i32 1
  store i32 40, i32* %65, align 8
  %66 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12, i64 0, i32 0, i32 2
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12, i64 0, i32 1
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.icu_69::(anonymous namespace)::SortKeyLevel", %"class.icu_69::(anonymous namespace)::SortKeyLevel"* %12, i64 0, i32 2
  store i8 1, i8* %68, align 4
  %69 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %70 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %71 = and i32 %27, 32
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"struct.icu_69::CollationSettings", %"struct.icu_69::CollationSettings"* %2, i64 0, i32 3
  %74 = and i32 %27, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 4
  %77 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 3
  %78 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 2
  %79 = bitcast %"class.icu_69::SortKeyByteSink"* %3 to i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)***
  %80 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 1
  %81 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  %82 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 1
  %83 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 2
  %84 = bitcast %"class.icu_69::SortKeyByteSink"* %3 to void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)***
  %85 = icmp eq i8 %6, 0
  %86 = and i32 %27, 4
  %87 = icmp eq i32 %86, 0
  %88 = and i32 %18, 2048
  %89 = icmp eq i32 %88, 0
  %90 = and i32 %27, 8
  %91 = icmp eq i32 %90, 0
  %92 = icmp eq i32 %19, 0
  %93 = and i32 %18, 256
  %94 = icmp eq i32 %93, 0
  %95 = and i32 %27, 16
  %96 = icmp eq i32 %95, 0
  %97 = trunc i32 %40 to i16
  %98 = icmp sgt i16 %97, -1
  br label %99

99:                                               ; preds = %1925, %36
  %100 = phi i32 [ %537, %1925 ], [ 0, %36 ]
  %101 = phi i32 [ %1233, %1925 ], [ 0, %36 ]
  %102 = phi i32 [ %944, %1925 ], [ 0, %36 ]
  %103 = phi i32 [ %1734, %1925 ], [ 0, %36 ]
  %104 = phi i32 [ %1926, %1925 ], [ 0, %36 ]
  %105 = phi i32 [ %945, %1925 ], [ 0, %36 ]
  %106 = phi i32 [ %946, %1925 ], [ 0, %36 ]
  br label %107

107:                                              ; preds = %99, %536
  %108 = phi i32 [ %537, %536 ], [ %100, %99 ]
  %109 = phi i32 [ %390, %536 ], [ %104, %99 ]
  %110 = load i32, i32* %69, align 8
  %111 = load i32, i32* %70, align 8
  %112 = icmp eq i32 %110, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %107
  store i32 0, i32* %70, align 8
  store i32 0, i32* %69, align 8
  br label %114

114:                                              ; preds = %107, %113
  %115 = call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %7)
  %116 = lshr i64 %115, 32
  %117 = trunc i64 %116 to i32
  %118 = icmp ugt i32 %37, %117
  %119 = icmp ugt i32 %117, 33554432
  %120 = and i1 %118, %119
  br i1 %120, label %121, label %389

121:                                              ; preds = %114
  %122 = icmp eq i32 %109, 0
  br i1 %122, label %225, label %123

123:                                              ; preds = %121
  %124 = add nsw i32 %109, -1
  %125 = icmp sgt i32 %124, 112
  %126 = load i32, i32* %67, align 8
  %127 = load i32, i32* %65, align 8
  %128 = icmp slt i32 %126, %127
  br i1 %125, label %129, label %179

129:                                              ; preds = %123, %173
  %130 = phi i1 [ %178, %173 ], [ %128, %123 ]
  %131 = phi i32 [ %177, %173 ], [ %127, %123 ]
  %132 = phi i32 [ %176, %173 ], [ %126, %123 ]
  %133 = phi i32 [ %174, %173 ], [ %124, %123 ]
  br i1 %130, label %134, label %136

134:                                              ; preds = %129
  %135 = load i8*, i8** %63, align 8
  br label %167

136:                                              ; preds = %129
  %137 = load i8, i8* %68, align 4
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %173, label %139

139:                                              ; preds = %136
  %140 = shl nsw i32 %131, 1
  %141 = add nsw i32 %132, 2
  %142 = icmp slt i32 %140, %141
  %143 = select i1 %142, i32 %141, i32 %140
  %144 = icmp sgt i32 %143, 200
  %145 = select i1 %144, i32 %143, i32 200
  %146 = zext i32 %145 to i64
  %147 = call noalias i8* @uprv_malloc_69(i64 %146) #9
  %148 = icmp eq i8* %147, null
  br i1 %148, label %164, label %149

149:                                              ; preds = %139
  %150 = icmp sgt i32 %132, 0
  br i1 %150, label %151, label %159

151:                                              ; preds = %149
  %152 = load i32, i32* %65, align 8
  %153 = icmp slt i32 %152, %132
  %154 = select i1 %153, i32 %152, i32 %132
  %155 = icmp sgt i32 %154, %145
  %156 = select i1 %155, i32 %145, i32 %154
  %157 = load i8*, i8** %63, align 8
  %158 = sext i32 %156 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %147, i8* align 1 %157, i64 %158, i1 false) #10
  br label %159

159:                                              ; preds = %151, %149
  %160 = load i8, i8* %66, align 4
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %165, label %162

162:                                              ; preds = %159
  %163 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %163) #10
  br label %165

164:                                              ; preds = %139
  store i8 0, i8* %68, align 4
  br label %173

165:                                              ; preds = %162, %159
  store i8* %147, i8** %63, align 8
  store i32 %145, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %166 = load i32, i32* %67, align 8
  br label %167

167:                                              ; preds = %134, %165
  %168 = phi i8* [ %147, %165 ], [ %135, %134 ]
  %169 = phi i32 [ %166, %165 ], [ %132, %134 ]
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %67, align 8
  %171 = sext i32 %169 to i64
  %172 = getelementptr inbounds i8, i8* %168, i64 %171
  store i8 -116, i8* %172, align 1
  br label %173

173:                                              ; preds = %164, %136, %167
  %174 = add nsw i32 %133, -113
  %175 = icmp sgt i32 %174, 112
  %176 = load i32, i32* %67, align 8
  %177 = load i32, i32* %65, align 8
  %178 = icmp slt i32 %176, %177
  br i1 %175, label %129, label %179

179:                                              ; preds = %173, %123
  %180 = phi i32 [ %124, %123 ], [ %174, %173 ]
  %181 = phi i32 [ %126, %123 ], [ %176, %173 ]
  %182 = phi i32 [ %127, %123 ], [ %177, %173 ]
  %183 = phi i1 [ %128, %123 ], [ %178, %173 ]
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = load i8*, i8** %63, align 8
  br label %217

186:                                              ; preds = %179
  %187 = load i8, i8* %68, align 4
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %225, label %189

189:                                              ; preds = %186
  %190 = shl nsw i32 %182, 1
  %191 = add nsw i32 %181, 2
  %192 = icmp slt i32 %190, %191
  %193 = select i1 %192, i32 %191, i32 %190
  %194 = icmp sgt i32 %193, 200
  %195 = select i1 %194, i32 %193, i32 200
  %196 = zext i32 %195 to i64
  %197 = call noalias i8* @uprv_malloc_69(i64 %196) #9
  %198 = icmp eq i8* %197, null
  br i1 %198, label %214, label %199

199:                                              ; preds = %189
  %200 = icmp sgt i32 %181, 0
  br i1 %200, label %201, label %209

201:                                              ; preds = %199
  %202 = load i32, i32* %65, align 8
  %203 = icmp slt i32 %202, %181
  %204 = select i1 %203, i32 %202, i32 %181
  %205 = icmp sgt i32 %204, %195
  %206 = select i1 %205, i32 %195, i32 %204
  %207 = load i8*, i8** %63, align 8
  %208 = sext i32 %206 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %197, i8* align 1 %207, i64 %208, i1 false) #10
  br label %209

209:                                              ; preds = %201, %199
  %210 = load i8, i8* %66, align 4
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %215, label %212

212:                                              ; preds = %209
  %213 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %213) #10
  br label %215

214:                                              ; preds = %189
  store i8 0, i8* %68, align 4
  br label %225

215:                                              ; preds = %212, %209
  store i8* %197, i8** %63, align 8
  store i32 %195, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %216 = load i32, i32* %67, align 8
  br label %217

217:                                              ; preds = %184, %215
  %218 = phi i8* [ %197, %215 ], [ %185, %184 ]
  %219 = phi i32 [ %216, %215 ], [ %181, %184 ]
  %220 = trunc i32 %180 to i8
  %221 = add i8 %220, 28
  %222 = add nsw i32 %219, 1
  store i32 %222, i32* %67, align 8
  %223 = sext i32 %219 to i64
  %224 = getelementptr inbounds i8, i8* %218, i64 %223
  store i8 %221, i8* %224, align 1
  br label %225

225:                                              ; preds = %214, %186, %217, %121
  br label %226

226:                                              ; preds = %225, %382
  %227 = phi i32 [ %383, %382 ], [ %117, %225 ]
  br i1 %72, label %377, label %228

228:                                              ; preds = %226
  %229 = load i8*, i8** %73, align 8
  %230 = icmp eq i8* %229, null
  br i1 %230, label %246, label %231

231:                                              ; preds = %228
  %232 = lshr i32 %227, 24
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds i8, i8* %229, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = icmp ne i8 %235, 0
  %237 = icmp ult i32 %227, 2
  %238 = or i1 %237, %236
  br i1 %238, label %239, label %244

239:                                              ; preds = %231
  %240 = zext i8 %235 to i32
  %241 = shl nuw i32 %240, 24
  %242 = and i32 %227, 16777215
  %243 = or i32 %241, %242
  br label %246

244:                                              ; preds = %231
  %245 = call i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"* %2, i32 %227) #10
  br label %246

246:                                              ; preds = %244, %239, %228
  %247 = phi i32 [ %227, %228 ], [ %243, %239 ], [ %245, %244 ]
  %248 = icmp ugt i32 %247, 452984831
  br i1 %248, label %249, label %292

249:                                              ; preds = %246
  %250 = load i32, i32* %67, align 8
  %251 = load i32, i32* %65, align 8
  %252 = icmp slt i32 %250, %251
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  %254 = load i8*, i8** %63, align 8
  br label %286

255:                                              ; preds = %249
  %256 = load i8, i8* %68, align 4
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %292, label %258

258:                                              ; preds = %255
  %259 = shl nsw i32 %251, 1
  %260 = add nsw i32 %250, 2
  %261 = icmp slt i32 %259, %260
  %262 = select i1 %261, i32 %260, i32 %259
  %263 = icmp sgt i32 %262, 200
  %264 = select i1 %263, i32 %262, i32 200
  %265 = zext i32 %264 to i64
  %266 = call noalias i8* @uprv_malloc_69(i64 %265) #9
  %267 = icmp eq i8* %266, null
  br i1 %267, label %283, label %268

268:                                              ; preds = %258
  %269 = icmp sgt i32 %250, 0
  br i1 %269, label %270, label %278

270:                                              ; preds = %268
  %271 = load i32, i32* %65, align 8
  %272 = icmp slt i32 %271, %250
  %273 = select i1 %272, i32 %271, i32 %250
  %274 = icmp sgt i32 %273, %264
  %275 = select i1 %274, i32 %264, i32 %273
  %276 = load i8*, i8** %63, align 8
  %277 = sext i32 %275 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %266, i8* align 1 %276, i64 %277, i1 false) #10
  br label %278

278:                                              ; preds = %270, %268
  %279 = load i8, i8* %66, align 4
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %278
  %282 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %282) #10
  br label %284

283:                                              ; preds = %258
  store i8 0, i8* %68, align 4
  br label %292

284:                                              ; preds = %281, %278
  store i8* %266, i8** %63, align 8
  store i32 %264, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %285 = load i32, i32* %67, align 8
  br label %286

286:                                              ; preds = %253, %284
  %287 = phi i8* [ %266, %284 ], [ %254, %253 ]
  %288 = phi i32 [ %285, %284 ], [ %250, %253 ]
  %289 = add nsw i32 %288, 1
  store i32 %289, i32* %67, align 8
  %290 = sext i32 %288 to i64
  %291 = getelementptr inbounds i8, i8* %287, i64 %290
  store i8 27, i8* %291, align 1
  br label %292

292:                                              ; preds = %283, %255, %286, %246
  %293 = lshr i32 %247, 24
  %294 = trunc i32 %293 to i8
  %295 = lshr i32 %247, 16
  %296 = trunc i32 %295 to i8
  %297 = lshr i32 %247, 8
  %298 = trunc i32 %297 to i8
  %299 = trunc i32 %247 to i8
  %300 = and i32 %247, 16711680
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %309, label %302

302:                                              ; preds = %292
  %303 = and i32 %247, 65280
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %302
  %306 = and i32 %247, 255
  %307 = icmp eq i32 %306, 0
  %308 = select i1 %307, i32 3, i32 4
  br label %309

309:                                              ; preds = %305, %302, %292
  %310 = phi i32 [ 1, %292 ], [ %308, %305 ], [ 2, %302 ]
  %311 = load i32, i32* %67, align 8
  %312 = add nsw i32 %311, %310
  %313 = load i32, i32* %65, align 8
  %314 = icmp sgt i32 %312, %313
  br i1 %314, label %317, label %315

315:                                              ; preds = %309
  %316 = load i8*, i8** %63, align 8
  br label %349

317:                                              ; preds = %309
  %318 = load i8, i8* %68, align 4
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %377, label %320

320:                                              ; preds = %317
  %321 = shl nsw i32 %313, 1
  %322 = shl nuw nsw i32 %310, 1
  %323 = add nsw i32 %311, %322
  %324 = icmp slt i32 %321, %323
  %325 = select i1 %324, i32 %323, i32 %321
  %326 = icmp sgt i32 %325, 200
  %327 = select i1 %326, i32 %325, i32 200
  %328 = zext i32 %327 to i64
  %329 = call noalias i8* @uprv_malloc_69(i64 %328) #9
  %330 = icmp eq i8* %329, null
  br i1 %330, label %346, label %331

331:                                              ; preds = %320
  %332 = icmp sgt i32 %311, 0
  br i1 %332, label %333, label %341

333:                                              ; preds = %331
  %334 = load i32, i32* %65, align 8
  %335 = icmp slt i32 %334, %311
  %336 = select i1 %335, i32 %334, i32 %311
  %337 = icmp sgt i32 %336, %327
  %338 = select i1 %337, i32 %327, i32 %336
  %339 = load i8*, i8** %63, align 8
  %340 = sext i32 %338 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %329, i8* align 1 %339, i64 %340, i1 false) #10
  br label %341

341:                                              ; preds = %333, %331
  %342 = load i8, i8* %66, align 4
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %347, label %344

344:                                              ; preds = %341
  %345 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %345) #10
  br label %347

346:                                              ; preds = %320
  store i8 0, i8* %68, align 4
  br label %377

347:                                              ; preds = %344, %341
  store i8* %329, i8** %63, align 8
  store i32 %327, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %348 = load i32, i32* %67, align 8
  br label %349

349:                                              ; preds = %347, %315
  %350 = phi i8* [ %329, %347 ], [ %316, %315 ]
  %351 = phi i32 [ %348, %347 ], [ %311, %315 ]
  %352 = add nsw i32 %351, 1
  store i32 %352, i32* %67, align 8
  %353 = sext i32 %351 to i64
  %354 = getelementptr inbounds i8, i8* %350, i64 %353
  store i8 %294, i8* %354, align 1
  br i1 %301, label %377, label %355

355:                                              ; preds = %349
  %356 = load i32, i32* %67, align 8
  %357 = add nsw i32 %356, 1
  store i32 %357, i32* %67, align 8
  %358 = sext i32 %356 to i64
  %359 = load i8*, i8** %63, align 8
  %360 = getelementptr inbounds i8, i8* %359, i64 %358
  store i8 %296, i8* %360, align 1
  %361 = and i32 %247, 65280
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %377, label %363

363:                                              ; preds = %355
  %364 = load i32, i32* %67, align 8
  %365 = add nsw i32 %364, 1
  store i32 %365, i32* %67, align 8
  %366 = sext i32 %364 to i64
  %367 = load i8*, i8** %63, align 8
  %368 = getelementptr inbounds i8, i8* %367, i64 %366
  store i8 %298, i8* %368, align 1
  %369 = and i32 %247, 255
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %377, label %371

371:                                              ; preds = %363
  %372 = load i32, i32* %67, align 8
  %373 = add nsw i32 %372, 1
  store i32 %373, i32* %67, align 8
  %374 = sext i32 %372 to i64
  %375 = load i8*, i8** %63, align 8
  %376 = getelementptr inbounds i8, i8* %375, i64 %374
  store i8 %299, i8* %376, align 1
  br label %377

377:                                              ; preds = %371, %363, %355, %349, %346, %317, %226
  br label %378

378:                                              ; preds = %377, %378
  %379 = call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %7)
  %380 = lshr i64 %379, 32
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %378, label %382

382:                                              ; preds = %378
  %383 = trunc i64 %380 to i32
  %384 = icmp ugt i32 %37, %383
  %385 = icmp ugt i32 %383, 33554432
  %386 = and i1 %384, %385
  br i1 %386, label %226, label %387

387:                                              ; preds = %382
  %388 = trunc i64 %380 to i32
  br label %389

389:                                              ; preds = %387, %114
  %390 = phi i32 [ %109, %114 ], [ 0, %387 ]
  %391 = phi i64 [ %115, %114 ], [ %379, %387 ]
  %392 = phi i32 [ %117, %114 ], [ %388, %387 ]
  %393 = icmp ult i32 %392, 2
  %394 = or i1 %75, %393
  br i1 %394, label %536, label %395

395:                                              ; preds = %389
  %396 = lshr i32 %392, 24
  %397 = zext i32 %396 to i64
  %398 = getelementptr inbounds i8, i8* %1, i64 %397
  %399 = load i8, i8* %398, align 1
  %400 = load i8*, i8** %73, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %413, label %402

402:                                              ; preds = %395
  %403 = getelementptr inbounds i8, i8* %400, i64 %397
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %411, label %406

406:                                              ; preds = %402
  %407 = zext i8 %404 to i32
  %408 = shl nuw i32 %407, 24
  %409 = and i32 %392, 16777215
  %410 = or i32 %408, %409
  br label %413

411:                                              ; preds = %402
  %412 = call i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"* %2, i32 %392) #10
  br label %413

413:                                              ; preds = %411, %406, %395
  %414 = phi i32 [ %392, %395 ], [ %410, %406 ], [ %412, %411 ]
  %415 = lshr i32 %414, 24
  %416 = icmp ne i8 %399, 0
  %417 = lshr i32 %108, 24
  %418 = icmp eq i32 %415, %417
  %419 = and i1 %416, %418
  br i1 %419, label %506, label %420

420:                                              ; preds = %413
  %421 = icmp eq i32 %108, 0
  br i1 %421, label %476, label %422

422:                                              ; preds = %420
  %423 = icmp ult i32 %414, %108
  br i1 %423, label %424, label %451

424:                                              ; preds = %422
  %425 = icmp ugt i32 %414, 50331647
  br i1 %425, label %426, label %476

426:                                              ; preds = %424
  %427 = load i32, i32* %76, align 8
  %428 = icmp sgt i32 %427, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %426
  %430 = add nsw i32 %427, -1
  store i32 %430, i32* %76, align 8
  br label %478

431:                                              ; preds = %426
  %432 = load i32, i32* %77, align 4
  %433 = load i32, i32* %78, align 8
  %434 = icmp slt i32 %432, %433
  br i1 %434, label %443, label %435

435:                                              ; preds = %431
  %436 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %437 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %436, i64 6
  %438 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %437, align 8
  %439 = call signext i8 %438(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %432) #10
  %440 = icmp eq i8 %439, 0
  br i1 %440, label %448, label %441

441:                                              ; preds = %435
  %442 = load i32, i32* %77, align 4
  br label %443

443:                                              ; preds = %441, %431
  %444 = phi i32 [ %442, %441 ], [ %432, %431 ]
  %445 = load i8*, i8** %80, align 8
  %446 = sext i32 %444 to i64
  %447 = getelementptr inbounds i8, i8* %445, i64 %446
  store i8 3, i8* %447, align 1
  br label %448

448:                                              ; preds = %443, %435
  %449 = load i32, i32* %77, align 4
  %450 = add nsw i32 %449, 1
  store i32 %450, i32* %77, align 4
  br label %476

451:                                              ; preds = %422
  %452 = load i32, i32* %76, align 8
  %453 = icmp sgt i32 %452, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %451
  %455 = add nsw i32 %452, -1
  store i32 %455, i32* %76, align 8
  br label %478

456:                                              ; preds = %451
  %457 = load i32, i32* %77, align 4
  %458 = load i32, i32* %78, align 8
  %459 = icmp slt i32 %457, %458
  br i1 %459, label %468, label %460

460:                                              ; preds = %456
  %461 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %462 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %461, i64 6
  %463 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %462, align 8
  %464 = call signext i8 %463(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %457) #10
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %473, label %466

466:                                              ; preds = %460
  %467 = load i32, i32* %77, align 4
  br label %468

468:                                              ; preds = %466, %456
  %469 = phi i32 [ %467, %466 ], [ %457, %456 ]
  %470 = load i8*, i8** %80, align 8
  %471 = sext i32 %469 to i64
  %472 = getelementptr inbounds i8, i8* %470, i64 %471
  store i8 -1, i8* %472, align 1
  br label %473

473:                                              ; preds = %468, %460
  %474 = load i32, i32* %77, align 4
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* %77, align 4
  br label %476

476:                                              ; preds = %424, %420, %448, %473
  %477 = load i32, i32* %76, align 8
  br label %478

478:                                              ; preds = %476, %454, %429
  %479 = phi i32 [ %477, %476 ], [ %455, %454 ], [ %430, %429 ]
  %480 = icmp sgt i32 %479, 0
  br i1 %480, label %481, label %483

481:                                              ; preds = %478
  %482 = add nsw i32 %479, -1
  store i32 %482, i32* %76, align 8
  br label %504

483:                                              ; preds = %478
  %484 = load i32, i32* %77, align 4
  %485 = load i32, i32* %78, align 8
  %486 = icmp slt i32 %484, %485
  br i1 %486, label %495, label %487

487:                                              ; preds = %483
  %488 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %489 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %488, i64 6
  %490 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %489, align 8
  %491 = call signext i8 %490(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %484) #10
  %492 = icmp eq i8 %491, 0
  br i1 %492, label %501, label %493

493:                                              ; preds = %487
  %494 = load i32, i32* %77, align 4
  br label %495

495:                                              ; preds = %493, %483
  %496 = phi i32 [ %494, %493 ], [ %484, %483 ]
  %497 = trunc i32 %415 to i8
  %498 = load i8*, i8** %80, align 8
  %499 = sext i32 %496 to i64
  %500 = getelementptr inbounds i8, i8* %498, i64 %499
  store i8 %497, i8* %500, align 1
  br label %501

501:                                              ; preds = %495, %487
  %502 = load i32, i32* %77, align 4
  %503 = add nsw i32 %502, 1
  store i32 %503, i32* %77, align 4
  br label %504

504:                                              ; preds = %481, %501
  %505 = select i1 %416, i32 %414, i32 0
  br label %506

506:                                              ; preds = %504, %413
  %507 = phi i32 [ %108, %413 ], [ %505, %504 ]
  %508 = and i32 %414, 16711680
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %524, label %510

510:                                              ; preds = %506
  %511 = lshr i32 %414, 16
  %512 = trunc i32 %511 to i8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %81) #10
  store i8 %512, i8* %81, align 1
  %513 = lshr i32 %414, 8
  %514 = trunc i32 %513 to i8
  store i8 %514, i8* %82, align 1
  %515 = trunc i32 %414 to i8
  store i8 %515, i8* %83, align 1
  %516 = and i32 %414, 65280
  %517 = icmp eq i32 %516, 0
  %518 = icmp eq i8 %515, 0
  %519 = select i1 %518, i32 2, i32 3
  %520 = select i1 %517, i32 1, i32 %519
  %521 = load void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)**, void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)*** %84, align 8
  %522 = getelementptr inbounds void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)*, void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)** %521, i64 2
  %523 = load void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)*, void (%"class.icu_69::SortKeyByteSink"*, i8*, i32)** %522, align 8
  call void %523(%"class.icu_69::SortKeyByteSink"* %3, i8* nonnull %81, i32 %520) #10
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %81) #10
  br label %524

524:                                              ; preds = %506, %510
  br i1 %85, label %525, label %536

525:                                              ; preds = %524
  %526 = load i32, i32* %77, align 4
  %527 = load i32, i32* %78, align 8
  %528 = icmp sgt i32 %526, %527
  br i1 %528, label %529, label %536

529:                                              ; preds = %525
  %530 = load i32, i32* %7, align 4
  %531 = icmp sgt i32 %530, 0
  br i1 %531, label %2180, label %532

532:                                              ; preds = %529
  %533 = load i8*, i8** %80, align 8
  %534 = icmp eq i8* %533, null
  br i1 %534, label %535, label %2180

535:                                              ; preds = %532
  store i32 7, i32* %7, align 4
  br label %2180

536:                                              ; preds = %525, %524, %389
  %537 = phi i32 [ %108, %389 ], [ %507, %524 ], [ %507, %525 ]
  %538 = phi i32 [ %392, %389 ], [ %414, %524 ], [ %414, %525 ]
  %539 = trunc i64 %391 to i32
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %107, label %541

541:                                              ; preds = %536
  %542 = trunc i64 %391 to i32
  br i1 %87, label %943, label %543

543:                                              ; preds = %541
  %544 = lshr i32 %542, 16
  %545 = trunc i32 %544 to i16
  switch i16 %545, label %551 [
    i16 0, label %943
    i16 1280, label %546
  ]

546:                                              ; preds = %543
  %547 = icmp ne i32 %538, 33554432
  %548 = or i1 %89, %547
  br i1 %548, label %549, label %551

549:                                              ; preds = %546
  %550 = add nsw i32 %102, 1
  br label %943

551:                                              ; preds = %543, %546
  %552 = icmp ne i32 %102, 0
  br i1 %89, label %553, label %710

553:                                              ; preds = %551
  br i1 %552, label %554, label %653

554:                                              ; preds = %553
  %555 = add nsw i32 %102, -1
  %556 = icmp sgt i32 %555, 32
  br i1 %556, label %557, label %604

557:                                              ; preds = %554, %601
  %558 = phi i32 [ %602, %601 ], [ %555, %554 ]
  %559 = load i32, i32* %53, align 8
  %560 = load i32, i32* %51, align 8
  %561 = icmp slt i32 %559, %560
  br i1 %561, label %562, label %564

562:                                              ; preds = %557
  %563 = load i8*, i8** %49, align 8
  br label %595

564:                                              ; preds = %557
  %565 = load i8, i8* %54, align 4
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %601, label %567

567:                                              ; preds = %564
  %568 = shl nsw i32 %560, 1
  %569 = add nsw i32 %559, 2
  %570 = icmp slt i32 %568, %569
  %571 = select i1 %570, i32 %569, i32 %568
  %572 = icmp sgt i32 %571, 200
  %573 = select i1 %572, i32 %571, i32 200
  %574 = zext i32 %573 to i64
  %575 = call noalias i8* @uprv_malloc_69(i64 %574) #9
  %576 = icmp eq i8* %575, null
  br i1 %576, label %592, label %577

577:                                              ; preds = %567
  %578 = icmp sgt i32 %559, 0
  br i1 %578, label %579, label %587

579:                                              ; preds = %577
  %580 = load i32, i32* %51, align 8
  %581 = icmp slt i32 %580, %559
  %582 = select i1 %581, i32 %580, i32 %559
  %583 = icmp sgt i32 %582, %573
  %584 = select i1 %583, i32 %573, i32 %582
  %585 = load i8*, i8** %49, align 8
  %586 = sext i32 %584 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %575, i8* align 1 %585, i64 %586, i1 false) #10
  br label %587

587:                                              ; preds = %579, %577
  %588 = load i8, i8* %52, align 4
  %589 = icmp eq i8 %588, 0
  br i1 %589, label %593, label %590

590:                                              ; preds = %587
  %591 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %591) #10
  br label %593

592:                                              ; preds = %567
  store i8 0, i8* %54, align 4
  br label %601

593:                                              ; preds = %590, %587
  store i8* %575, i8** %49, align 8
  store i32 %573, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %594 = load i32, i32* %53, align 8
  br label %595

595:                                              ; preds = %562, %593
  %596 = phi i8* [ %575, %593 ], [ %563, %562 ]
  %597 = phi i32 [ %594, %593 ], [ %559, %562 ]
  %598 = add nsw i32 %597, 1
  store i32 %598, i32* %53, align 8
  %599 = sext i32 %597 to i64
  %600 = getelementptr inbounds i8, i8* %596, i64 %599
  store i8 37, i8* %600, align 1
  br label %601

601:                                              ; preds = %592, %564, %595
  %602 = add nsw i32 %558, -33
  %603 = icmp sgt i32 %602, 32
  br i1 %603, label %557, label %604

604:                                              ; preds = %601, %554
  %605 = phi i32 [ %555, %554 ], [ %602, %601 ]
  %606 = icmp ult i32 %542, 83886080
  %607 = add nsw i32 %605, 5
  %608 = sub i32 69, %605
  %609 = select i1 %606, i32 %607, i32 %608
  %610 = load i32, i32* %53, align 8
  %611 = load i32, i32* %51, align 8
  %612 = icmp slt i32 %610, %611
  br i1 %612, label %613, label %615

613:                                              ; preds = %604
  %614 = load i8*, i8** %49, align 8
  br label %646

615:                                              ; preds = %604
  %616 = load i8, i8* %54, align 4
  %617 = icmp eq i8 %616, 0
  br i1 %617, label %653, label %618

618:                                              ; preds = %615
  %619 = shl nsw i32 %611, 1
  %620 = add nsw i32 %610, 2
  %621 = icmp slt i32 %619, %620
  %622 = select i1 %621, i32 %620, i32 %619
  %623 = icmp sgt i32 %622, 200
  %624 = select i1 %623, i32 %622, i32 200
  %625 = zext i32 %624 to i64
  %626 = call noalias i8* @uprv_malloc_69(i64 %625) #9
  %627 = icmp eq i8* %626, null
  br i1 %627, label %643, label %628

628:                                              ; preds = %618
  %629 = icmp sgt i32 %610, 0
  br i1 %629, label %630, label %638

630:                                              ; preds = %628
  %631 = load i32, i32* %51, align 8
  %632 = icmp slt i32 %631, %610
  %633 = select i1 %632, i32 %631, i32 %610
  %634 = icmp sgt i32 %633, %624
  %635 = select i1 %634, i32 %624, i32 %633
  %636 = load i8*, i8** %49, align 8
  %637 = sext i32 %635 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %626, i8* align 1 %636, i64 %637, i1 false) #10
  br label %638

638:                                              ; preds = %630, %628
  %639 = load i8, i8* %52, align 4
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %644, label %641

641:                                              ; preds = %638
  %642 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %642) #10
  br label %644

643:                                              ; preds = %618
  store i8 0, i8* %54, align 4
  br label %653

644:                                              ; preds = %641, %638
  store i8* %626, i8** %49, align 8
  store i32 %624, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %645 = load i32, i32* %53, align 8
  br label %646

646:                                              ; preds = %613, %644
  %647 = phi i8* [ %626, %644 ], [ %614, %613 ]
  %648 = phi i32 [ %645, %644 ], [ %610, %613 ]
  %649 = trunc i32 %609 to i8
  %650 = add nsw i32 %648, 1
  store i32 %650, i32* %53, align 8
  %651 = sext i32 %648 to i64
  %652 = getelementptr inbounds i8, i8* %647, i64 %651
  store i8 %649, i8* %652, align 1
  br label %653

653:                                              ; preds = %643, %615, %646, %553
  %654 = lshr i32 %542, 24
  %655 = trunc i32 %654 to i8
  %656 = trunc i32 %544 to i8
  %657 = and i32 %542, 16711680
  %658 = icmp eq i32 %657, 0
  %659 = select i1 %658, i32 1, i32 2
  %660 = load i32, i32* %53, align 8
  %661 = add nsw i32 %660, %659
  %662 = load i32, i32* %51, align 8
  %663 = icmp sgt i32 %661, %662
  br i1 %663, label %666, label %664

664:                                              ; preds = %653
  %665 = load i8*, i8** %49, align 8
  br label %698

666:                                              ; preds = %653
  %667 = load i8, i8* %54, align 4
  %668 = icmp eq i8 %667, 0
  br i1 %668, label %943, label %669

669:                                              ; preds = %666
  %670 = shl nsw i32 %662, 1
  %671 = shl nuw nsw i32 %659, 1
  %672 = add nsw i32 %660, %671
  %673 = icmp slt i32 %670, %672
  %674 = select i1 %673, i32 %672, i32 %670
  %675 = icmp sgt i32 %674, 200
  %676 = select i1 %675, i32 %674, i32 200
  %677 = zext i32 %676 to i64
  %678 = call noalias i8* @uprv_malloc_69(i64 %677) #9
  %679 = icmp eq i8* %678, null
  br i1 %679, label %695, label %680

680:                                              ; preds = %669
  %681 = icmp sgt i32 %660, 0
  br i1 %681, label %682, label %690

682:                                              ; preds = %680
  %683 = load i32, i32* %51, align 8
  %684 = icmp slt i32 %683, %660
  %685 = select i1 %684, i32 %683, i32 %660
  %686 = icmp sgt i32 %685, %676
  %687 = select i1 %686, i32 %676, i32 %685
  %688 = load i8*, i8** %49, align 8
  %689 = sext i32 %687 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %678, i8* align 1 %688, i64 %689, i1 false) #10
  br label %690

690:                                              ; preds = %682, %680
  %691 = load i8, i8* %52, align 4
  %692 = icmp eq i8 %691, 0
  br i1 %692, label %696, label %693

693:                                              ; preds = %690
  %694 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %694) #10
  br label %696

695:                                              ; preds = %669
  store i8 0, i8* %54, align 4
  br label %943

696:                                              ; preds = %693, %690
  store i8* %678, i8** %49, align 8
  store i32 %676, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %697 = load i32, i32* %53, align 8
  br label %698

698:                                              ; preds = %664, %696
  %699 = phi i8* [ %678, %696 ], [ %665, %664 ]
  %700 = phi i32 [ %697, %696 ], [ %660, %664 ]
  %701 = add nsw i32 %700, 1
  store i32 %701, i32* %53, align 8
  %702 = sext i32 %700 to i64
  %703 = getelementptr inbounds i8, i8* %699, i64 %702
  store i8 %655, i8* %703, align 1
  br i1 %658, label %943, label %704

704:                                              ; preds = %698
  %705 = load i32, i32* %53, align 8
  %706 = add nsw i32 %705, 1
  store i32 %706, i32* %53, align 8
  %707 = sext i32 %705 to i64
  %708 = load i8*, i8** %49, align 8
  %709 = getelementptr inbounds i8, i8* %708, i64 %707
  store i8 %656, i8* %709, align 1
  br label %943

710:                                              ; preds = %551
  br i1 %552, label %711, label %811

711:                                              ; preds = %710
  %712 = add nsw i32 %102, -1
  %713 = srem i32 %712, 33
  %714 = icmp ult i32 %105, 1280
  %715 = add nsw i32 %713, 5
  %716 = sub nsw i32 69, %713
  %717 = select i1 %714, i32 %715, i32 %716
  %718 = load i32, i32* %53, align 8
  %719 = load i32, i32* %51, align 8
  %720 = icmp slt i32 %718, %719
  br i1 %720, label %721, label %723

721:                                              ; preds = %711
  %722 = load i8*, i8** %49, align 8
  br label %754

723:                                              ; preds = %711
  %724 = load i8, i8* %54, align 4
  %725 = icmp eq i8 %724, 0
  br i1 %725, label %761, label %726

726:                                              ; preds = %723
  %727 = shl nsw i32 %719, 1
  %728 = add nsw i32 %718, 2
  %729 = icmp slt i32 %727, %728
  %730 = select i1 %729, i32 %728, i32 %727
  %731 = icmp sgt i32 %730, 200
  %732 = select i1 %731, i32 %730, i32 200
  %733 = zext i32 %732 to i64
  %734 = call noalias i8* @uprv_malloc_69(i64 %733) #9
  %735 = icmp eq i8* %734, null
  br i1 %735, label %751, label %736

736:                                              ; preds = %726
  %737 = icmp sgt i32 %718, 0
  br i1 %737, label %738, label %746

738:                                              ; preds = %736
  %739 = load i32, i32* %51, align 8
  %740 = icmp slt i32 %739, %718
  %741 = select i1 %740, i32 %739, i32 %718
  %742 = icmp sgt i32 %741, %732
  %743 = select i1 %742, i32 %732, i32 %741
  %744 = load i8*, i8** %49, align 8
  %745 = sext i32 %743 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %734, i8* align 1 %744, i64 %745, i1 false) #10
  br label %746

746:                                              ; preds = %738, %736
  %747 = load i8, i8* %52, align 4
  %748 = icmp eq i8 %747, 0
  br i1 %748, label %752, label %749

749:                                              ; preds = %746
  %750 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %750) #10
  br label %752

751:                                              ; preds = %726
  store i8 0, i8* %54, align 4
  br label %761

752:                                              ; preds = %749, %746
  store i8* %734, i8** %49, align 8
  store i32 %732, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %753 = load i32, i32* %53, align 8
  br label %754

754:                                              ; preds = %721, %752
  %755 = phi i8* [ %734, %752 ], [ %722, %721 ]
  %756 = phi i32 [ %753, %752 ], [ %718, %721 ]
  %757 = trunc i32 %717 to i8
  %758 = add nsw i32 %756, 1
  store i32 %758, i32* %53, align 8
  %759 = sext i32 %756 to i64
  %760 = getelementptr inbounds i8, i8* %755, i64 %759
  store i8 %757, i8* %760, align 1
  br label %761

761:                                              ; preds = %751, %723, %754
  %762 = sub nsw i32 %712, %713
  %763 = icmp sgt i32 %762, 0
  br i1 %763, label %764, label %811

764:                                              ; preds = %761, %808
  %765 = phi i32 [ %809, %808 ], [ %762, %761 ]
  %766 = load i32, i32* %53, align 8
  %767 = load i32, i32* %51, align 8
  %768 = icmp slt i32 %766, %767
  br i1 %768, label %769, label %771

769:                                              ; preds = %764
  %770 = load i8*, i8** %49, align 8
  br label %802

771:                                              ; preds = %764
  %772 = load i8, i8* %54, align 4
  %773 = icmp eq i8 %772, 0
  br i1 %773, label %808, label %774

774:                                              ; preds = %771
  %775 = shl nsw i32 %767, 1
  %776 = add nsw i32 %766, 2
  %777 = icmp slt i32 %775, %776
  %778 = select i1 %777, i32 %776, i32 %775
  %779 = icmp sgt i32 %778, 200
  %780 = select i1 %779, i32 %778, i32 200
  %781 = zext i32 %780 to i64
  %782 = call noalias i8* @uprv_malloc_69(i64 %781) #9
  %783 = icmp eq i8* %782, null
  br i1 %783, label %799, label %784

784:                                              ; preds = %774
  %785 = icmp sgt i32 %766, 0
  br i1 %785, label %786, label %794

786:                                              ; preds = %784
  %787 = load i32, i32* %51, align 8
  %788 = icmp slt i32 %787, %766
  %789 = select i1 %788, i32 %787, i32 %766
  %790 = icmp sgt i32 %789, %780
  %791 = select i1 %790, i32 %780, i32 %789
  %792 = load i8*, i8** %49, align 8
  %793 = sext i32 %791 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %782, i8* align 1 %792, i64 %793, i1 false) #10
  br label %794

794:                                              ; preds = %786, %784
  %795 = load i8, i8* %52, align 4
  %796 = icmp eq i8 %795, 0
  br i1 %796, label %800, label %797

797:                                              ; preds = %794
  %798 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %798) #10
  br label %800

799:                                              ; preds = %774
  store i8 0, i8* %54, align 4
  br label %808

800:                                              ; preds = %797, %794
  store i8* %782, i8** %49, align 8
  store i32 %780, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %801 = load i32, i32* %53, align 8
  br label %802

802:                                              ; preds = %769, %800
  %803 = phi i8* [ %782, %800 ], [ %770, %769 ]
  %804 = phi i32 [ %801, %800 ], [ %766, %769 ]
  %805 = add nsw i32 %804, 1
  store i32 %805, i32* %53, align 8
  %806 = sext i32 %804 to i64
  %807 = getelementptr inbounds i8, i8* %803, i64 %806
  store i8 37, i8* %807, align 1
  br label %808

808:                                              ; preds = %799, %771, %802
  %809 = add nsw i32 %765, -33
  %810 = icmp sgt i32 %809, 0
  br i1 %810, label %764, label %811

811:                                              ; preds = %808, %761, %710
  %812 = phi i32 [ 0, %710 ], [ %762, %761 ], [ %809, %808 ]
  %813 = add i32 %538, -1
  %814 = icmp ult i32 %813, 33554432
  br i1 %814, label %815, label %882

815:                                              ; preds = %811
  %816 = load i8*, i8** %49, align 8
  %817 = load i32, i32* %53, align 8
  %818 = add nsw i32 %817, -1
  %819 = icmp slt i32 %106, %818
  br i1 %819, label %820, label %835

820:                                              ; preds = %815
  %821 = sext i32 %106 to i64
  %822 = getelementptr inbounds i8, i8* %816, i64 %821
  %823 = sext i32 %818 to i64
  %824 = getelementptr inbounds i8, i8* %816, i64 %823
  br label %825

825:                                              ; preds = %825, %820
  %826 = phi i8* [ %822, %820 ], [ %830, %825 ]
  %827 = phi i8* [ %824, %820 ], [ %831, %825 ]
  %828 = load i8, i8* %826, align 1
  %829 = load i8, i8* %827, align 1
  %830 = getelementptr inbounds i8, i8* %826, i64 1
  store i8 %829, i8* %826, align 1
  %831 = getelementptr inbounds i8, i8* %827, i64 -1
  store i8 %828, i8* %827, align 1
  %832 = icmp ult i8* %830, %831
  br i1 %832, label %825, label %833

833:                                              ; preds = %825
  %834 = load i32, i32* %53, align 8
  br label %835

835:                                              ; preds = %833, %815
  %836 = phi i32 [ %834, %833 ], [ %817, %815 ]
  %837 = icmp eq i32 %538, 1
  %838 = select i1 %837, i8 1, i8 2
  %839 = load i32, i32* %51, align 8
  %840 = icmp slt i32 %836, %839
  br i1 %840, label %841, label %843

841:                                              ; preds = %835
  %842 = load i8*, i8** %49, align 8
  br label %874

843:                                              ; preds = %835
  %844 = load i8, i8* %54, align 4
  %845 = icmp eq i8 %844, 0
  br i1 %845, label %880, label %846

846:                                              ; preds = %843
  %847 = shl nsw i32 %839, 1
  %848 = add nsw i32 %836, 2
  %849 = icmp slt i32 %847, %848
  %850 = select i1 %849, i32 %848, i32 %847
  %851 = icmp sgt i32 %850, 200
  %852 = select i1 %851, i32 %850, i32 200
  %853 = zext i32 %852 to i64
  %854 = call noalias i8* @uprv_malloc_69(i64 %853) #9
  %855 = icmp eq i8* %854, null
  br i1 %855, label %871, label %856

856:                                              ; preds = %846
  %857 = icmp sgt i32 %836, 0
  br i1 %857, label %858, label %866

858:                                              ; preds = %856
  %859 = load i32, i32* %51, align 8
  %860 = icmp slt i32 %859, %836
  %861 = select i1 %860, i32 %859, i32 %836
  %862 = icmp sgt i32 %861, %852
  %863 = select i1 %862, i32 %852, i32 %861
  %864 = load i8*, i8** %49, align 8
  %865 = sext i32 %863 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %854, i8* align 1 %864, i64 %865, i1 false) #10
  br label %866

866:                                              ; preds = %858, %856
  %867 = load i8, i8* %52, align 4
  %868 = icmp eq i8 %867, 0
  br i1 %868, label %872, label %869

869:                                              ; preds = %866
  %870 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %870) #10
  br label %872

871:                                              ; preds = %846
  store i8 0, i8* %54, align 4
  br label %880

872:                                              ; preds = %869, %866
  store i8* %854, i8** %49, align 8
  store i32 %852, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %873 = load i32, i32* %53, align 8
  br label %874

874:                                              ; preds = %841, %872
  %875 = phi i8* [ %854, %872 ], [ %842, %841 ]
  %876 = phi i32 [ %873, %872 ], [ %836, %841 ]
  %877 = add nsw i32 %876, 1
  store i32 %877, i32* %53, align 8
  %878 = sext i32 %876 to i64
  %879 = getelementptr inbounds i8, i8* %875, i64 %878
  store i8 %838, i8* %879, align 1
  br label %880

880:                                              ; preds = %871, %843, %874
  %881 = load i32, i32* %53, align 8
  br label %943

882:                                              ; preds = %811
  %883 = lshr i32 %542, 24
  %884 = trunc i32 %883 to i8
  %885 = trunc i32 %544 to i8
  %886 = and i32 %542, 16711680
  %887 = icmp eq i32 %886, 0
  %888 = select i1 %887, i32 1, i32 2
  %889 = load i32, i32* %53, align 8
  %890 = add nsw i32 %889, %888
  %891 = load i32, i32* %51, align 8
  %892 = icmp sgt i32 %890, %891
  br i1 %892, label %893, label %925

893:                                              ; preds = %882
  %894 = load i8, i8* %54, align 4
  %895 = icmp eq i8 %894, 0
  br i1 %895, label %943, label %896

896:                                              ; preds = %893
  %897 = shl nsw i32 %891, 1
  %898 = shl nuw nsw i32 %888, 1
  %899 = add nsw i32 %889, %898
  %900 = icmp slt i32 %897, %899
  %901 = select i1 %900, i32 %899, i32 %897
  %902 = icmp sgt i32 %901, 200
  %903 = select i1 %902, i32 %901, i32 200
  %904 = zext i32 %903 to i64
  %905 = call noalias i8* @uprv_malloc_69(i64 %904) #9
  %906 = icmp eq i8* %905, null
  br i1 %906, label %922, label %907

907:                                              ; preds = %896
  %908 = icmp sgt i32 %889, 0
  br i1 %908, label %909, label %917

909:                                              ; preds = %907
  %910 = load i32, i32* %51, align 8
  %911 = icmp slt i32 %910, %889
  %912 = select i1 %911, i32 %910, i32 %889
  %913 = icmp sgt i32 %912, %903
  %914 = select i1 %913, i32 %903, i32 %912
  %915 = load i8*, i8** %49, align 8
  %916 = sext i32 %914 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %905, i8* align 1 %915, i64 %916, i1 false) #10
  br label %917

917:                                              ; preds = %909, %907
  %918 = load i8, i8* %52, align 4
  %919 = icmp eq i8 %918, 0
  br i1 %919, label %923, label %920

920:                                              ; preds = %917
  %921 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %921) #10
  br label %923

922:                                              ; preds = %896
  store i8 0, i8* %54, align 4
  br label %943

923:                                              ; preds = %920, %917
  store i8* %905, i8** %49, align 8
  store i32 %903, i32* %51, align 8
  store i8 1, i8* %52, align 4
  %924 = load i32, i32* %53, align 8
  br label %925

925:                                              ; preds = %923, %882
  %926 = phi i32 [ %924, %923 ], [ %889, %882 ]
  br i1 %887, label %927, label %932

927:                                              ; preds = %925
  %928 = add nsw i32 %926, 1
  store i32 %928, i32* %53, align 8
  %929 = sext i32 %926 to i64
  %930 = load i8*, i8** %49, align 8
  %931 = getelementptr inbounds i8, i8* %930, i64 %929
  store i8 %884, i8* %931, align 1
  br label %943

932:                                              ; preds = %925
  %933 = sext i32 %926 to i64
  %934 = load i8*, i8** %49, align 8
  %935 = getelementptr inbounds i8, i8* %934, i64 %933
  store i8 %885, i8* %935, align 1
  %936 = load i32, i32* %53, align 8
  %937 = add nsw i32 %936, 1
  %938 = sext i32 %937 to i64
  %939 = load i8*, i8** %49, align 8
  %940 = getelementptr inbounds i8, i8* %939, i64 %938
  store i8 %884, i8* %940, align 1
  %941 = load i32, i32* %53, align 8
  %942 = add nsw i32 %941, 2
  store i32 %942, i32* %53, align 8
  br label %943

943:                                              ; preds = %695, %666, %932, %927, %922, %893, %704, %698, %880, %549, %543, %541
  %944 = phi i32 [ %102, %541 ], [ %102, %543 ], [ %550, %549 ], [ %812, %880 ], [ 0, %698 ], [ 0, %704 ], [ %812, %893 ], [ %812, %922 ], [ %812, %927 ], [ %812, %932 ], [ 0, %666 ], [ 0, %695 ]
  %945 = phi i32 [ %105, %541 ], [ %105, %543 ], [ %105, %549 ], [ 0, %880 ], [ %105, %698 ], [ %105, %704 ], [ %544, %893 ], [ %544, %922 ], [ %544, %927 ], [ %544, %932 ], [ %105, %666 ], [ %105, %695 ]
  %946 = phi i32 [ %106, %541 ], [ %106, %543 ], [ %106, %549 ], [ %881, %880 ], [ %106, %698 ], [ %106, %704 ], [ %106, %893 ], [ %106, %922 ], [ %106, %927 ], [ %106, %932 ], [ %106, %666 ], [ %106, %695 ]
  br i1 %91, label %1232, label %947

947:                                              ; preds = %943
  br i1 %92, label %948, label %950

948:                                              ; preds = %947
  %949 = icmp eq i32 %538, 0
  br i1 %949, label %1232, label %952

950:                                              ; preds = %947
  %951 = icmp ult i32 %542, 65536
  br i1 %951, label %1232, label %952

952:                                              ; preds = %950, %948
  %953 = lshr i32 %542, 8
  %954 = and i32 %953, 255
  %955 = and i32 %542, 49152
  %956 = icmp eq i32 %955, 0
  %957 = icmp ugt i32 %954, 1
  %958 = and i1 %956, %957
  br i1 %958, label %959, label %961

959:                                              ; preds = %952
  %960 = add nsw i32 %101, 1
  br label %1232

961:                                              ; preds = %952
  %962 = icmp ne i32 %101, 0
  br i1 %94, label %963, label %1074

963:                                              ; preds = %961
  br i1 %962, label %964, label %1069

964:                                              ; preds = %963
  %965 = xor i1 %957, true
  %966 = load i32, i32* %46, align 8
  %967 = icmp eq i32 %966, 0
  %968 = and i1 %967, %965
  br i1 %968, label %1186, label %969

969:                                              ; preds = %964
  %970 = add nsw i32 %101, -1
  %971 = icmp sgt i32 %970, 6
  br i1 %971, label %972, label %1019

972:                                              ; preds = %969, %1016
  %973 = phi i32 [ %1017, %1016 ], [ %970, %969 ]
  %974 = load i32, i32* %46, align 8
  %975 = load i32, i32* %44, align 8
  %976 = icmp slt i32 %974, %975
  br i1 %976, label %977, label %979

977:                                              ; preds = %972
  %978 = load i8*, i8** %42, align 8
  br label %1010

979:                                              ; preds = %972
  %980 = load i8, i8* %47, align 4
  %981 = icmp eq i8 %980, 0
  br i1 %981, label %1016, label %982

982:                                              ; preds = %979
  %983 = shl nsw i32 %975, 1
  %984 = add nsw i32 %974, 2
  %985 = icmp slt i32 %983, %984
  %986 = select i1 %985, i32 %984, i32 %983
  %987 = icmp sgt i32 %986, 200
  %988 = select i1 %987, i32 %986, i32 200
  %989 = zext i32 %988 to i64
  %990 = call noalias i8* @uprv_malloc_69(i64 %989) #9
  %991 = icmp eq i8* %990, null
  br i1 %991, label %1007, label %992

992:                                              ; preds = %982
  %993 = icmp sgt i32 %974, 0
  br i1 %993, label %994, label %1002

994:                                              ; preds = %992
  %995 = load i32, i32* %44, align 8
  %996 = icmp slt i32 %995, %974
  %997 = select i1 %996, i32 %995, i32 %974
  %998 = icmp sgt i32 %997, %988
  %999 = select i1 %998, i32 %988, i32 %997
  %1000 = load i8*, i8** %42, align 8
  %1001 = sext i32 %999 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %990, i8* align 1 %1000, i64 %1001, i1 false) #10
  br label %1002

1002:                                             ; preds = %994, %992
  %1003 = load i8, i8* %45, align 4
  %1004 = icmp eq i8 %1003, 0
  br i1 %1004, label %1008, label %1005

1005:                                             ; preds = %1002
  %1006 = load i8*, i8** %42, align 8
  call void @uprv_free_69(i8* %1006) #10
  br label %1008

1007:                                             ; preds = %982
  store i8 0, i8* %47, align 4
  br label %1016

1008:                                             ; preds = %1005, %1002
  store i8* %990, i8** %42, align 8
  store i32 %988, i32* %44, align 8
  store i8 1, i8* %45, align 4
  %1009 = load i32, i32* %46, align 8
  br label %1010

1010:                                             ; preds = %977, %1008
  %1011 = phi i8* [ %990, %1008 ], [ %978, %977 ]
  %1012 = phi i32 [ %1009, %1008 ], [ %974, %977 ]
  %1013 = add nsw i32 %1012, 1
  store i32 %1013, i32* %46, align 8
  %1014 = sext i32 %1012 to i64
  %1015 = getelementptr inbounds i8, i8* %1011, i64 %1014
  store i8 112, i8* %1015, align 1
  br label %1016

1016:                                             ; preds = %1007, %979, %1010
  %1017 = add nsw i32 %973, -7
  %1018 = icmp sgt i32 %1017, 6
  br i1 %1018, label %972, label %1019

1019:                                             ; preds = %1016, %969
  %1020 = phi i32 [ %970, %969 ], [ %1017, %1016 ]
  %1021 = icmp ult i32 %954, 2
  %1022 = add nsw i32 %1020, 1
  %1023 = sub i32 13, %1020
  %1024 = select i1 %1021, i32 %1022, i32 %1023
  %1025 = load i32, i32* %46, align 8
  %1026 = load i32, i32* %44, align 8
  %1027 = icmp slt i32 %1025, %1026
  br i1 %1027, label %1028, label %1030

1028:                                             ; preds = %1019
  %1029 = load i8*, i8** %42, align 8
  br label %1061

1030:                                             ; preds = %1019
  %1031 = load i8, i8* %47, align 4
  %1032 = icmp eq i8 %1031, 0
  br i1 %1032, label %1069, label %1033

1033:                                             ; preds = %1030
  %1034 = shl nsw i32 %1026, 1
  %1035 = add nsw i32 %1025, 2
  %1036 = icmp slt i32 %1034, %1035
  %1037 = select i1 %1036, i32 %1035, i32 %1034
  %1038 = icmp sgt i32 %1037, 200
  %1039 = select i1 %1038, i32 %1037, i32 200
  %1040 = zext i32 %1039 to i64
  %1041 = call noalias i8* @uprv_malloc_69(i64 %1040) #9
  %1042 = icmp eq i8* %1041, null
  br i1 %1042, label %1058, label %1043

1043:                                             ; preds = %1033
  %1044 = icmp sgt i32 %1025, 0
  br i1 %1044, label %1045, label %1053

1045:                                             ; preds = %1043
  %1046 = load i32, i32* %44, align 8
  %1047 = icmp slt i32 %1046, %1025
  %1048 = select i1 %1047, i32 %1046, i32 %1025
  %1049 = icmp sgt i32 %1048, %1039
  %1050 = select i1 %1049, i32 %1039, i32 %1048
  %1051 = load i8*, i8** %42, align 8
  %1052 = sext i32 %1050 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1041, i8* align 1 %1051, i64 %1052, i1 false) #10
  br label %1053

1053:                                             ; preds = %1045, %1043
  %1054 = load i8, i8* %45, align 4
  %1055 = icmp eq i8 %1054, 0
  br i1 %1055, label %1059, label %1056

1056:                                             ; preds = %1053
  %1057 = load i8*, i8** %42, align 8
  call void @uprv_free_69(i8* %1057) #10
  br label %1059

1058:                                             ; preds = %1033
  store i8 0, i8* %47, align 4
  br label %1069

1059:                                             ; preds = %1056, %1053
  store i8* %1041, i8** %42, align 8
  store i32 %1039, i32* %44, align 8
  store i8 1, i8* %45, align 4
  %1060 = load i32, i32* %46, align 8
  br label %1061

1061:                                             ; preds = %1028, %1059
  %1062 = phi i8* [ %1041, %1059 ], [ %1029, %1028 ]
  %1063 = phi i32 [ %1060, %1059 ], [ %1025, %1028 ]
  %1064 = trunc i32 %1024 to i8
  %1065 = shl i8 %1064, 4
  %1066 = add nsw i32 %1063, 1
  store i32 %1066, i32* %46, align 8
  %1067 = sext i32 %1063 to i64
  %1068 = getelementptr inbounds i8, i8* %1062, i64 %1067
  store i8 %1065, i8* %1068, align 1
  br label %1069

1069:                                             ; preds = %1058, %1030, %1061, %963
  br i1 %957, label %1070, label %1183

1070:                                             ; preds = %1069
  %1071 = lshr i32 %954, 6
  %1072 = shl nuw nsw i32 %1071, 4
  %1073 = add nuw nsw i32 %1072, 208
  br label %1183

1074:                                             ; preds = %961
  br i1 %962, label %1075, label %1178

1075:                                             ; preds = %1074
  %1076 = add nsw i32 %101, -1
  %1077 = icmp sgt i32 %1076, 12
  %1078 = load i32, i32* %46, align 8
  %1079 = load i32, i32* %44, align 8
  %1080 = icmp slt i32 %1078, %1079
  br i1 %1077, label %1081, label %1131

1081:                                             ; preds = %1075, %1125
  %1082 = phi i1 [ %1130, %1125 ], [ %1080, %1075 ]
  %1083 = phi i32 [ %1129, %1125 ], [ %1079, %1075 ]
  %1084 = phi i32 [ %1128, %1125 ], [ %1078, %1075 ]
  %1085 = phi i32 [ %1126, %1125 ], [ %1076, %1075 ]
  br i1 %1082, label %1086, label %1088

1086:                                             ; preds = %1081
  %1087 = load i8*, i8** %42, align 8
  br label %1119

1088:                                             ; preds = %1081
  %1089 = load i8, i8* %47, align 4
  %1090 = icmp eq i8 %1089, 0
  br i1 %1090, label %1125, label %1091

1091:                                             ; preds = %1088
  %1092 = shl nsw i32 %1083, 1
  %1093 = add nsw i32 %1084, 2
  %1094 = icmp slt i32 %1092, %1093
  %1095 = select i1 %1094, i32 %1093, i32 %1092
  %1096 = icmp sgt i32 %1095, 200
  %1097 = select i1 %1096, i32 %1095, i32 200
  %1098 = zext i32 %1097 to i64
  %1099 = call noalias i8* @uprv_malloc_69(i64 %1098) #9
  %1100 = icmp eq i8* %1099, null
  br i1 %1100, label %1116, label %1101

1101:                                             ; preds = %1091
  %1102 = icmp sgt i32 %1084, 0
  br i1 %1102, label %1103, label %1111

1103:                                             ; preds = %1101
  %1104 = load i32, i32* %44, align 8
  %1105 = icmp slt i32 %1104, %1084
  %1106 = select i1 %1105, i32 %1104, i32 %1084
  %1107 = icmp sgt i32 %1106, %1097
  %1108 = select i1 %1107, i32 %1097, i32 %1106
  %1109 = load i8*, i8** %42, align 8
  %1110 = sext i32 %1108 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1099, i8* align 1 %1109, i64 %1110, i1 false) #10
  br label %1111

1111:                                             ; preds = %1103, %1101
  %1112 = load i8, i8* %45, align 4
  %1113 = icmp eq i8 %1112, 0
  br i1 %1113, label %1117, label %1114

1114:                                             ; preds = %1111
  %1115 = load i8*, i8** %42, align 8
  call void @uprv_free_69(i8* %1115) #10
  br label %1117

1116:                                             ; preds = %1091
  store i8 0, i8* %47, align 4
  br label %1125

1117:                                             ; preds = %1114, %1111
  store i8* %1099, i8** %42, align 8
  store i32 %1097, i32* %44, align 8
  store i8 1, i8* %45, align 4
  %1118 = load i32, i32* %46, align 8
  br label %1119

1119:                                             ; preds = %1086, %1117
  %1120 = phi i8* [ %1099, %1117 ], [ %1087, %1086 ]
  %1121 = phi i32 [ %1118, %1117 ], [ %1084, %1086 ]
  %1122 = add nsw i32 %1121, 1
  store i32 %1122, i32* %46, align 8
  %1123 = sext i32 %1121 to i64
  %1124 = getelementptr inbounds i8, i8* %1120, i64 %1123
  store i8 48, i8* %1124, align 1
  br label %1125

1125:                                             ; preds = %1116, %1088, %1119
  %1126 = add nsw i32 %1085, -13
  %1127 = icmp sgt i32 %1126, 12
  %1128 = load i32, i32* %46, align 8
  %1129 = load i32, i32* %44, align 8
  %1130 = icmp slt i32 %1128, %1129
  br i1 %1127, label %1081, label %1131

1131:                                             ; preds = %1125, %1075
  %1132 = phi i32 [ %1076, %1075 ], [ %1126, %1125 ]
  %1133 = phi i32 [ %1078, %1075 ], [ %1128, %1125 ]
  %1134 = phi i32 [ %1079, %1075 ], [ %1129, %1125 ]
  %1135 = phi i1 [ %1080, %1075 ], [ %1130, %1125 ]
  br i1 %1135, label %1136, label %1138

1136:                                             ; preds = %1131
  %1137 = load i8*, i8** %42, align 8
  br label %1169

1138:                                             ; preds = %1131
  %1139 = load i8, i8* %47, align 4
  %1140 = icmp eq i8 %1139, 0
  br i1 %1140, label %1178, label %1141

1141:                                             ; preds = %1138
  %1142 = shl nsw i32 %1134, 1
  %1143 = add nsw i32 %1133, 2
  %1144 = icmp slt i32 %1142, %1143
  %1145 = select i1 %1144, i32 %1143, i32 %1142
  %1146 = icmp sgt i32 %1145, 200
  %1147 = select i1 %1146, i32 %1145, i32 200
  %1148 = zext i32 %1147 to i64
  %1149 = call noalias i8* @uprv_malloc_69(i64 %1148) #9
  %1150 = icmp eq i8* %1149, null
  br i1 %1150, label %1166, label %1151

1151:                                             ; preds = %1141
  %1152 = icmp sgt i32 %1133, 0
  br i1 %1152, label %1153, label %1161

1153:                                             ; preds = %1151
  %1154 = load i32, i32* %44, align 8
  %1155 = icmp slt i32 %1154, %1133
  %1156 = select i1 %1155, i32 %1154, i32 %1133
  %1157 = icmp sgt i32 %1156, %1147
  %1158 = select i1 %1157, i32 %1147, i32 %1156
  %1159 = load i8*, i8** %42, align 8
  %1160 = sext i32 %1158 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1149, i8* align 1 %1159, i64 %1160, i1 false) #10
  br label %1161

1161:                                             ; preds = %1153, %1151
  %1162 = load i8, i8* %45, align 4
  %1163 = icmp eq i8 %1162, 0
  br i1 %1163, label %1167, label %1164

1164:                                             ; preds = %1161
  %1165 = load i8*, i8** %42, align 8
  call void @uprv_free_69(i8* %1165) #10
  br label %1167

1166:                                             ; preds = %1141
  store i8 0, i8* %47, align 4
  br label %1178

1167:                                             ; preds = %1164, %1161
  store i8* %1149, i8** %42, align 8
  store i32 %1147, i32* %44, align 8
  store i8 1, i8* %45, align 4
  %1168 = load i32, i32* %46, align 8
  br label %1169

1169:                                             ; preds = %1136, %1167
  %1170 = phi i8* [ %1149, %1167 ], [ %1137, %1136 ]
  %1171 = phi i32 [ %1168, %1167 ], [ %1133, %1136 ]
  %1172 = trunc i32 %1132 to i8
  %1173 = shl i8 %1172, 4
  %1174 = add i8 %1173, 48
  %1175 = add nsw i32 %1171, 1
  store i32 %1175, i32* %46, align 8
  %1176 = sext i32 %1171 to i64
  %1177 = getelementptr inbounds i8, i8* %1170, i64 %1176
  store i8 %1174, i8* %1177, align 1
  br label %1178

1178:                                             ; preds = %1166, %1138, %1169, %1074
  br i1 %957, label %1179, label %1183

1179:                                             ; preds = %1178
  %1180 = lshr i32 %954, 6
  %1181 = shl nuw nsw i32 %1180, 4
  %1182 = xor i32 %1181, 48
  br label %1183

1183:                                             ; preds = %1070, %1069, %1179, %1178
  %1184 = phi i32 [ %954, %1178 ], [ %1182, %1179 ], [ %954, %1069 ], [ %1073, %1070 ]
  %1185 = load i32, i32* %46, align 8
  br label %1186

1186:                                             ; preds = %964, %1183
  %1187 = phi i32 [ %1185, %1183 ], [ 0, %964 ]
  %1188 = phi i32 [ 0, %1183 ], [ %101, %964 ]
  %1189 = phi i32 [ %1184, %1183 ], [ %954, %964 ]
  %1190 = load i32, i32* %44, align 8
  %1191 = icmp slt i32 %1187, %1190
  br i1 %1191, label %1192, label %1194

1192:                                             ; preds = %1186
  %1193 = load i8*, i8** %42, align 8
  br label %1225

1194:                                             ; preds = %1186
  %1195 = load i8, i8* %47, align 4
  %1196 = icmp eq i8 %1195, 0
  br i1 %1196, label %1232, label %1197

1197:                                             ; preds = %1194
  %1198 = shl nsw i32 %1190, 1
  %1199 = add nsw i32 %1187, 2
  %1200 = icmp slt i32 %1198, %1199
  %1201 = select i1 %1200, i32 %1199, i32 %1198
  %1202 = icmp sgt i32 %1201, 200
  %1203 = select i1 %1202, i32 %1201, i32 200
  %1204 = zext i32 %1203 to i64
  %1205 = call noalias i8* @uprv_malloc_69(i64 %1204) #9
  %1206 = icmp eq i8* %1205, null
  br i1 %1206, label %1222, label %1207

1207:                                             ; preds = %1197
  %1208 = icmp sgt i32 %1187, 0
  br i1 %1208, label %1209, label %1217

1209:                                             ; preds = %1207
  %1210 = load i32, i32* %44, align 8
  %1211 = icmp slt i32 %1210, %1187
  %1212 = select i1 %1211, i32 %1210, i32 %1187
  %1213 = icmp sgt i32 %1212, %1203
  %1214 = select i1 %1213, i32 %1203, i32 %1212
  %1215 = load i8*, i8** %42, align 8
  %1216 = sext i32 %1214 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1205, i8* align 1 %1215, i64 %1216, i1 false) #10
  br label %1217

1217:                                             ; preds = %1209, %1207
  %1218 = load i8, i8* %45, align 4
  %1219 = icmp eq i8 %1218, 0
  br i1 %1219, label %1223, label %1220

1220:                                             ; preds = %1217
  %1221 = load i8*, i8** %42, align 8
  call void @uprv_free_69(i8* %1221) #10
  br label %1223

1222:                                             ; preds = %1197
  store i8 0, i8* %47, align 4
  br label %1232

1223:                                             ; preds = %1220, %1217
  store i8* %1205, i8** %42, align 8
  store i32 %1203, i32* %44, align 8
  store i8 1, i8* %45, align 4
  %1224 = load i32, i32* %46, align 8
  br label %1225

1225:                                             ; preds = %1192, %1223
  %1226 = phi i8* [ %1205, %1223 ], [ %1193, %1192 ]
  %1227 = phi i32 [ %1224, %1223 ], [ %1187, %1192 ]
  %1228 = trunc i32 %1189 to i8
  %1229 = add nsw i32 %1227, 1
  store i32 %1229, i32* %46, align 8
  %1230 = sext i32 %1227 to i64
  %1231 = getelementptr inbounds i8, i8* %1226, i64 %1230
  store i8 %1228, i8* %1231, align 1
  br label %1232

1232:                                             ; preds = %1222, %1194, %1225, %959, %943, %950, %948
  %1233 = phi i32 [ %101, %948 ], [ %101, %950 ], [ %101, %943 ], [ %960, %959 ], [ %1188, %1225 ], [ %1188, %1194 ], [ %1188, %1222 ]
  br i1 %96, label %1733, label %1234

1234:                                             ; preds = %1232
  %1235 = and i32 %40, %542
  %1236 = icmp eq i32 %1235, 1280
  br i1 %1236, label %1237, label %1239

1237:                                             ; preds = %1234
  %1238 = add nsw i32 %103, 1
  br label %1733

1239:                                             ; preds = %1234
  br i1 %98, label %1240, label %1401

1240:                                             ; preds = %1239
  %1241 = icmp eq i32 %103, 0
  br i1 %1241, label %1341, label %1242

1242:                                             ; preds = %1240
  %1243 = add nsw i32 %103, -1
  %1244 = icmp sgt i32 %1243, 96
  br i1 %1244, label %1245, label %1292

1245:                                             ; preds = %1242, %1289
  %1246 = phi i32 [ %1290, %1289 ], [ %1243, %1242 ]
  %1247 = load i32, i32* %60, align 8
  %1248 = load i32, i32* %58, align 8
  %1249 = icmp slt i32 %1247, %1248
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1245
  %1251 = load i8*, i8** %56, align 8
  br label %1283

1252:                                             ; preds = %1245
  %1253 = load i8, i8* %61, align 4
  %1254 = icmp eq i8 %1253, 0
  br i1 %1254, label %1289, label %1255

1255:                                             ; preds = %1252
  %1256 = shl nsw i32 %1248, 1
  %1257 = add nsw i32 %1247, 2
  %1258 = icmp slt i32 %1256, %1257
  %1259 = select i1 %1258, i32 %1257, i32 %1256
  %1260 = icmp sgt i32 %1259, 200
  %1261 = select i1 %1260, i32 %1259, i32 200
  %1262 = zext i32 %1261 to i64
  %1263 = call noalias i8* @uprv_malloc_69(i64 %1262) #9
  %1264 = icmp eq i8* %1263, null
  br i1 %1264, label %1280, label %1265

1265:                                             ; preds = %1255
  %1266 = icmp sgt i32 %1247, 0
  br i1 %1266, label %1267, label %1275

1267:                                             ; preds = %1265
  %1268 = load i32, i32* %58, align 8
  %1269 = icmp slt i32 %1268, %1247
  %1270 = select i1 %1269, i32 %1268, i32 %1247
  %1271 = icmp sgt i32 %1270, %1261
  %1272 = select i1 %1271, i32 %1261, i32 %1270
  %1273 = load i8*, i8** %56, align 8
  %1274 = sext i32 %1272 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1263, i8* align 1 %1273, i64 %1274, i1 false) #10
  br label %1275

1275:                                             ; preds = %1267, %1265
  %1276 = load i8, i8* %59, align 4
  %1277 = icmp eq i8 %1276, 0
  br i1 %1277, label %1281, label %1278

1278:                                             ; preds = %1275
  %1279 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1279) #10
  br label %1281

1280:                                             ; preds = %1255
  store i8 0, i8* %61, align 4
  br label %1289

1281:                                             ; preds = %1278, %1275
  store i8* %1263, i8** %56, align 8
  store i32 %1261, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1282 = load i32, i32* %60, align 8
  br label %1283

1283:                                             ; preds = %1250, %1281
  %1284 = phi i8* [ %1263, %1281 ], [ %1251, %1250 ]
  %1285 = phi i32 [ %1282, %1281 ], [ %1247, %1250 ]
  %1286 = add nsw i32 %1285, 1
  store i32 %1286, i32* %60, align 8
  %1287 = sext i32 %1285 to i64
  %1288 = getelementptr inbounds i8, i8* %1284, i64 %1287
  store i8 101, i8* %1288, align 1
  br label %1289

1289:                                             ; preds = %1280, %1252, %1283
  %1290 = add nsw i32 %1246, -97
  %1291 = icmp sgt i32 %1290, 96
  br i1 %1291, label %1245, label %1292

1292:                                             ; preds = %1289, %1242
  %1293 = phi i32 [ %1243, %1242 ], [ %1290, %1289 ]
  %1294 = icmp ult i32 %1235, 1280
  %1295 = add nsw i32 %1293, 5
  %1296 = sub i32 197, %1293
  %1297 = select i1 %1294, i32 %1295, i32 %1296
  %1298 = load i32, i32* %60, align 8
  %1299 = load i32, i32* %58, align 8
  %1300 = icmp slt i32 %1298, %1299
  br i1 %1300, label %1301, label %1303

1301:                                             ; preds = %1292
  %1302 = load i8*, i8** %56, align 8
  br label %1334

1303:                                             ; preds = %1292
  %1304 = load i8, i8* %61, align 4
  %1305 = icmp eq i8 %1304, 0
  br i1 %1305, label %1341, label %1306

1306:                                             ; preds = %1303
  %1307 = shl nsw i32 %1299, 1
  %1308 = add nsw i32 %1298, 2
  %1309 = icmp slt i32 %1307, %1308
  %1310 = select i1 %1309, i32 %1308, i32 %1307
  %1311 = icmp sgt i32 %1310, 200
  %1312 = select i1 %1311, i32 %1310, i32 200
  %1313 = zext i32 %1312 to i64
  %1314 = call noalias i8* @uprv_malloc_69(i64 %1313) #9
  %1315 = icmp eq i8* %1314, null
  br i1 %1315, label %1331, label %1316

1316:                                             ; preds = %1306
  %1317 = icmp sgt i32 %1298, 0
  br i1 %1317, label %1318, label %1326

1318:                                             ; preds = %1316
  %1319 = load i32, i32* %58, align 8
  %1320 = icmp slt i32 %1319, %1298
  %1321 = select i1 %1320, i32 %1319, i32 %1298
  %1322 = icmp sgt i32 %1321, %1312
  %1323 = select i1 %1322, i32 %1312, i32 %1321
  %1324 = load i8*, i8** %56, align 8
  %1325 = sext i32 %1323 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1314, i8* align 1 %1324, i64 %1325, i1 false) #10
  br label %1326

1326:                                             ; preds = %1318, %1316
  %1327 = load i8, i8* %59, align 4
  %1328 = icmp eq i8 %1327, 0
  br i1 %1328, label %1332, label %1329

1329:                                             ; preds = %1326
  %1330 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1330) #10
  br label %1332

1331:                                             ; preds = %1306
  store i8 0, i8* %61, align 4
  br label %1341

1332:                                             ; preds = %1329, %1326
  store i8* %1314, i8** %56, align 8
  store i32 %1312, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1333 = load i32, i32* %60, align 8
  br label %1334

1334:                                             ; preds = %1301, %1332
  %1335 = phi i8* [ %1314, %1332 ], [ %1302, %1301 ]
  %1336 = phi i32 [ %1333, %1332 ], [ %1298, %1301 ]
  %1337 = trunc i32 %1297 to i8
  %1338 = add nsw i32 %1336, 1
  store i32 %1338, i32* %60, align 8
  %1339 = sext i32 %1336 to i64
  %1340 = getelementptr inbounds i8, i8* %1335, i64 %1339
  store i8 %1337, i8* %1340, align 1
  br label %1341

1341:                                             ; preds = %1331, %1303, %1334, %1240
  %1342 = icmp ugt i32 %1235, 1280
  %1343 = add nuw nsw i32 %1235, 49152
  %1344 = select i1 %1342, i32 %1343, i32 %1235
  %1345 = lshr i32 %1344, 8
  %1346 = trunc i32 %1345 to i8
  %1347 = trunc i32 %1344 to i8
  %1348 = and i32 %1344, 63
  %1349 = icmp eq i32 %1348, 0
  %1350 = select i1 %1349, i32 1, i32 2
  %1351 = load i32, i32* %60, align 8
  %1352 = add nsw i32 %1351, %1350
  %1353 = load i32, i32* %58, align 8
  %1354 = icmp sgt i32 %1352, %1353
  br i1 %1354, label %1357, label %1355

1355:                                             ; preds = %1341
  %1356 = load i8*, i8** %56, align 8
  br label %1389

1357:                                             ; preds = %1341
  %1358 = load i8, i8* %61, align 4
  %1359 = icmp eq i8 %1358, 0
  br i1 %1359, label %1733, label %1360

1360:                                             ; preds = %1357
  %1361 = shl nsw i32 %1353, 1
  %1362 = shl nuw nsw i32 %1350, 1
  %1363 = add nsw i32 %1351, %1362
  %1364 = icmp slt i32 %1361, %1363
  %1365 = select i1 %1364, i32 %1363, i32 %1361
  %1366 = icmp sgt i32 %1365, 200
  %1367 = select i1 %1366, i32 %1365, i32 200
  %1368 = zext i32 %1367 to i64
  %1369 = call noalias i8* @uprv_malloc_69(i64 %1368) #9
  %1370 = icmp eq i8* %1369, null
  br i1 %1370, label %1386, label %1371

1371:                                             ; preds = %1360
  %1372 = icmp sgt i32 %1351, 0
  br i1 %1372, label %1373, label %1381

1373:                                             ; preds = %1371
  %1374 = load i32, i32* %58, align 8
  %1375 = icmp slt i32 %1374, %1351
  %1376 = select i1 %1375, i32 %1374, i32 %1351
  %1377 = icmp sgt i32 %1376, %1367
  %1378 = select i1 %1377, i32 %1367, i32 %1376
  %1379 = load i8*, i8** %56, align 8
  %1380 = sext i32 %1378 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1369, i8* align 1 %1379, i64 %1380, i1 false) #10
  br label %1381

1381:                                             ; preds = %1373, %1371
  %1382 = load i8, i8* %59, align 4
  %1383 = icmp eq i8 %1382, 0
  br i1 %1383, label %1387, label %1384

1384:                                             ; preds = %1381
  %1385 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1385) #10
  br label %1387

1386:                                             ; preds = %1360
  store i8 0, i8* %61, align 4
  br label %1733

1387:                                             ; preds = %1384, %1381
  store i8* %1369, i8** %56, align 8
  store i32 %1367, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1388 = load i32, i32* %60, align 8
  br label %1389

1389:                                             ; preds = %1355, %1387
  %1390 = phi i8* [ %1369, %1387 ], [ %1356, %1355 ]
  %1391 = phi i32 [ %1388, %1387 ], [ %1351, %1355 ]
  %1392 = add nsw i32 %1391, 1
  store i32 %1392, i32* %60, align 8
  %1393 = sext i32 %1391 to i64
  %1394 = getelementptr inbounds i8, i8* %1390, i64 %1393
  store i8 %1346, i8* %1394, align 1
  br i1 %1349, label %1733, label %1395

1395:                                             ; preds = %1389
  %1396 = load i32, i32* %60, align 8
  %1397 = add nsw i32 %1396, 1
  store i32 %1397, i32* %60, align 8
  %1398 = sext i32 %1396 to i64
  %1399 = load i8*, i8** %56, align 8
  %1400 = getelementptr inbounds i8, i8* %1399, i64 %1398
  store i8 %1347, i8* %1400, align 1
  br label %1733

1401:                                             ; preds = %1239
  br i1 %94, label %1402, label %1563

1402:                                             ; preds = %1401
  %1403 = icmp eq i32 %103, 0
  br i1 %1403, label %1503, label %1404

1404:                                             ; preds = %1402
  %1405 = add nsw i32 %103, -1
  %1406 = icmp sgt i32 %1405, 32
  br i1 %1406, label %1407, label %1454

1407:                                             ; preds = %1404, %1451
  %1408 = phi i32 [ %1452, %1451 ], [ %1405, %1404 ]
  %1409 = load i32, i32* %60, align 8
  %1410 = load i32, i32* %58, align 8
  %1411 = icmp slt i32 %1409, %1410
  br i1 %1411, label %1412, label %1414

1412:                                             ; preds = %1407
  %1413 = load i8*, i8** %56, align 8
  br label %1445

1414:                                             ; preds = %1407
  %1415 = load i8, i8* %61, align 4
  %1416 = icmp eq i8 %1415, 0
  br i1 %1416, label %1451, label %1417

1417:                                             ; preds = %1414
  %1418 = shl nsw i32 %1410, 1
  %1419 = add nsw i32 %1409, 2
  %1420 = icmp slt i32 %1418, %1419
  %1421 = select i1 %1420, i32 %1419, i32 %1418
  %1422 = icmp sgt i32 %1421, 200
  %1423 = select i1 %1422, i32 %1421, i32 200
  %1424 = zext i32 %1423 to i64
  %1425 = call noalias i8* @uprv_malloc_69(i64 %1424) #9
  %1426 = icmp eq i8* %1425, null
  br i1 %1426, label %1442, label %1427

1427:                                             ; preds = %1417
  %1428 = icmp sgt i32 %1409, 0
  br i1 %1428, label %1429, label %1437

1429:                                             ; preds = %1427
  %1430 = load i32, i32* %58, align 8
  %1431 = icmp slt i32 %1430, %1409
  %1432 = select i1 %1431, i32 %1430, i32 %1409
  %1433 = icmp sgt i32 %1432, %1423
  %1434 = select i1 %1433, i32 %1423, i32 %1432
  %1435 = load i8*, i8** %56, align 8
  %1436 = sext i32 %1434 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1425, i8* align 1 %1435, i64 %1436, i1 false) #10
  br label %1437

1437:                                             ; preds = %1429, %1427
  %1438 = load i8, i8* %59, align 4
  %1439 = icmp eq i8 %1438, 0
  br i1 %1439, label %1443, label %1440

1440:                                             ; preds = %1437
  %1441 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1441) #10
  br label %1443

1442:                                             ; preds = %1417
  store i8 0, i8* %61, align 4
  br label %1451

1443:                                             ; preds = %1440, %1437
  store i8* %1425, i8** %56, align 8
  store i32 %1423, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1444 = load i32, i32* %60, align 8
  br label %1445

1445:                                             ; preds = %1412, %1443
  %1446 = phi i8* [ %1425, %1443 ], [ %1413, %1412 ]
  %1447 = phi i32 [ %1444, %1443 ], [ %1409, %1412 ]
  %1448 = add nsw i32 %1447, 1
  store i32 %1448, i32* %60, align 8
  %1449 = sext i32 %1447 to i64
  %1450 = getelementptr inbounds i8, i8* %1446, i64 %1449
  store i8 37, i8* %1450, align 1
  br label %1451

1451:                                             ; preds = %1442, %1414, %1445
  %1452 = add nsw i32 %1408, -33
  %1453 = icmp sgt i32 %1452, 32
  br i1 %1453, label %1407, label %1454

1454:                                             ; preds = %1451, %1404
  %1455 = phi i32 [ %1405, %1404 ], [ %1452, %1451 ]
  %1456 = icmp ult i32 %1235, 1280
  %1457 = add nsw i32 %1455, 5
  %1458 = sub i32 69, %1455
  %1459 = select i1 %1456, i32 %1457, i32 %1458
  %1460 = load i32, i32* %60, align 8
  %1461 = load i32, i32* %58, align 8
  %1462 = icmp slt i32 %1460, %1461
  br i1 %1462, label %1463, label %1465

1463:                                             ; preds = %1454
  %1464 = load i8*, i8** %56, align 8
  br label %1496

1465:                                             ; preds = %1454
  %1466 = load i8, i8* %61, align 4
  %1467 = icmp eq i8 %1466, 0
  br i1 %1467, label %1503, label %1468

1468:                                             ; preds = %1465
  %1469 = shl nsw i32 %1461, 1
  %1470 = add nsw i32 %1460, 2
  %1471 = icmp slt i32 %1469, %1470
  %1472 = select i1 %1471, i32 %1470, i32 %1469
  %1473 = icmp sgt i32 %1472, 200
  %1474 = select i1 %1473, i32 %1472, i32 200
  %1475 = zext i32 %1474 to i64
  %1476 = call noalias i8* @uprv_malloc_69(i64 %1475) #9
  %1477 = icmp eq i8* %1476, null
  br i1 %1477, label %1493, label %1478

1478:                                             ; preds = %1468
  %1479 = icmp sgt i32 %1460, 0
  br i1 %1479, label %1480, label %1488

1480:                                             ; preds = %1478
  %1481 = load i32, i32* %58, align 8
  %1482 = icmp slt i32 %1481, %1460
  %1483 = select i1 %1482, i32 %1481, i32 %1460
  %1484 = icmp sgt i32 %1483, %1474
  %1485 = select i1 %1484, i32 %1474, i32 %1483
  %1486 = load i8*, i8** %56, align 8
  %1487 = sext i32 %1485 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1476, i8* align 1 %1486, i64 %1487, i1 false) #10
  br label %1488

1488:                                             ; preds = %1480, %1478
  %1489 = load i8, i8* %59, align 4
  %1490 = icmp eq i8 %1489, 0
  br i1 %1490, label %1494, label %1491

1491:                                             ; preds = %1488
  %1492 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1492) #10
  br label %1494

1493:                                             ; preds = %1468
  store i8 0, i8* %61, align 4
  br label %1503

1494:                                             ; preds = %1491, %1488
  store i8* %1476, i8** %56, align 8
  store i32 %1474, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1495 = load i32, i32* %60, align 8
  br label %1496

1496:                                             ; preds = %1463, %1494
  %1497 = phi i8* [ %1476, %1494 ], [ %1464, %1463 ]
  %1498 = phi i32 [ %1495, %1494 ], [ %1460, %1463 ]
  %1499 = trunc i32 %1459 to i8
  %1500 = add nsw i32 %1498, 1
  store i32 %1500, i32* %60, align 8
  %1501 = sext i32 %1498 to i64
  %1502 = getelementptr inbounds i8, i8* %1497, i64 %1501
  store i8 %1499, i8* %1502, align 1
  br label %1503

1503:                                             ; preds = %1493, %1465, %1496, %1402
  %1504 = icmp ugt i32 %1235, 1280
  %1505 = add nuw nsw i32 %1235, 16384
  %1506 = select i1 %1504, i32 %1505, i32 %1235
  %1507 = lshr i32 %1506, 8
  %1508 = trunc i32 %1507 to i8
  %1509 = trunc i32 %1506 to i8
  %1510 = and i32 %1506, 63
  %1511 = icmp eq i32 %1510, 0
  %1512 = select i1 %1511, i32 1, i32 2
  %1513 = load i32, i32* %60, align 8
  %1514 = add nsw i32 %1513, %1512
  %1515 = load i32, i32* %58, align 8
  %1516 = icmp sgt i32 %1514, %1515
  br i1 %1516, label %1519, label %1517

1517:                                             ; preds = %1503
  %1518 = load i8*, i8** %56, align 8
  br label %1551

1519:                                             ; preds = %1503
  %1520 = load i8, i8* %61, align 4
  %1521 = icmp eq i8 %1520, 0
  br i1 %1521, label %1733, label %1522

1522:                                             ; preds = %1519
  %1523 = shl nsw i32 %1515, 1
  %1524 = shl nuw nsw i32 %1512, 1
  %1525 = add nsw i32 %1513, %1524
  %1526 = icmp slt i32 %1523, %1525
  %1527 = select i1 %1526, i32 %1525, i32 %1523
  %1528 = icmp sgt i32 %1527, 200
  %1529 = select i1 %1528, i32 %1527, i32 200
  %1530 = zext i32 %1529 to i64
  %1531 = call noalias i8* @uprv_malloc_69(i64 %1530) #9
  %1532 = icmp eq i8* %1531, null
  br i1 %1532, label %1548, label %1533

1533:                                             ; preds = %1522
  %1534 = icmp sgt i32 %1513, 0
  br i1 %1534, label %1535, label %1543

1535:                                             ; preds = %1533
  %1536 = load i32, i32* %58, align 8
  %1537 = icmp slt i32 %1536, %1513
  %1538 = select i1 %1537, i32 %1536, i32 %1513
  %1539 = icmp sgt i32 %1538, %1529
  %1540 = select i1 %1539, i32 %1529, i32 %1538
  %1541 = load i8*, i8** %56, align 8
  %1542 = sext i32 %1540 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1531, i8* align 1 %1541, i64 %1542, i1 false) #10
  br label %1543

1543:                                             ; preds = %1535, %1533
  %1544 = load i8, i8* %59, align 4
  %1545 = icmp eq i8 %1544, 0
  br i1 %1545, label %1549, label %1546

1546:                                             ; preds = %1543
  %1547 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1547) #10
  br label %1549

1548:                                             ; preds = %1522
  store i8 0, i8* %61, align 4
  br label %1733

1549:                                             ; preds = %1546, %1543
  store i8* %1531, i8** %56, align 8
  store i32 %1529, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1550 = load i32, i32* %60, align 8
  br label %1551

1551:                                             ; preds = %1517, %1549
  %1552 = phi i8* [ %1531, %1549 ], [ %1518, %1517 ]
  %1553 = phi i32 [ %1550, %1549 ], [ %1513, %1517 ]
  %1554 = add nsw i32 %1553, 1
  store i32 %1554, i32* %60, align 8
  %1555 = sext i32 %1553 to i64
  %1556 = getelementptr inbounds i8, i8* %1552, i64 %1555
  store i8 %1508, i8* %1556, align 1
  br i1 %1511, label %1733, label %1557

1557:                                             ; preds = %1551
  %1558 = load i32, i32* %60, align 8
  %1559 = add nsw i32 %1558, 1
  store i32 %1559, i32* %60, align 8
  %1560 = sext i32 %1558 to i64
  %1561 = load i8*, i8** %56, align 8
  %1562 = getelementptr inbounds i8, i8* %1561, i64 %1560
  store i8 %1509, i8* %1562, align 1
  br label %1733

1563:                                             ; preds = %1401
  %1564 = icmp ult i32 %1235, 257
  br i1 %1564, label %1574, label %1565

1565:                                             ; preds = %1563
  %1566 = icmp ugt i32 %542, 65535
  br i1 %1566, label %1567, label %1572

1567:                                             ; preds = %1565
  %1568 = xor i32 %1235, 49152
  %1569 = icmp ult i32 %1568, 50432
  %1570 = add nsw i32 %1568, -16384
  %1571 = select i1 %1569, i32 %1570, i32 %1568
  br label %1574

1572:                                             ; preds = %1565
  %1573 = add nuw nsw i32 %1235, 16384
  br label %1574

1574:                                             ; preds = %1567, %1572, %1563
  %1575 = phi i32 [ %1235, %1563 ], [ %1573, %1572 ], [ %1571, %1567 ]
  %1576 = icmp eq i32 %103, 0
  br i1 %1576, label %1676, label %1577

1577:                                             ; preds = %1574
  %1578 = add nsw i32 %103, -1
  %1579 = icmp sgt i32 %1578, 32
  br i1 %1579, label %1580, label %1627

1580:                                             ; preds = %1577, %1624
  %1581 = phi i32 [ %1625, %1624 ], [ %1578, %1577 ]
  %1582 = load i32, i32* %60, align 8
  %1583 = load i32, i32* %58, align 8
  %1584 = icmp slt i32 %1582, %1583
  br i1 %1584, label %1585, label %1587

1585:                                             ; preds = %1580
  %1586 = load i8*, i8** %56, align 8
  br label %1618

1587:                                             ; preds = %1580
  %1588 = load i8, i8* %61, align 4
  %1589 = icmp eq i8 %1588, 0
  br i1 %1589, label %1624, label %1590

1590:                                             ; preds = %1587
  %1591 = shl nsw i32 %1583, 1
  %1592 = add nsw i32 %1582, 2
  %1593 = icmp slt i32 %1591, %1592
  %1594 = select i1 %1593, i32 %1592, i32 %1591
  %1595 = icmp sgt i32 %1594, 200
  %1596 = select i1 %1595, i32 %1594, i32 200
  %1597 = zext i32 %1596 to i64
  %1598 = call noalias i8* @uprv_malloc_69(i64 %1597) #9
  %1599 = icmp eq i8* %1598, null
  br i1 %1599, label %1615, label %1600

1600:                                             ; preds = %1590
  %1601 = icmp sgt i32 %1582, 0
  br i1 %1601, label %1602, label %1610

1602:                                             ; preds = %1600
  %1603 = load i32, i32* %58, align 8
  %1604 = icmp slt i32 %1603, %1582
  %1605 = select i1 %1604, i32 %1603, i32 %1582
  %1606 = icmp sgt i32 %1605, %1596
  %1607 = select i1 %1606, i32 %1596, i32 %1605
  %1608 = load i8*, i8** %56, align 8
  %1609 = sext i32 %1607 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1598, i8* align 1 %1608, i64 %1609, i1 false) #10
  br label %1610

1610:                                             ; preds = %1602, %1600
  %1611 = load i8, i8* %59, align 4
  %1612 = icmp eq i8 %1611, 0
  br i1 %1612, label %1616, label %1613

1613:                                             ; preds = %1610
  %1614 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1614) #10
  br label %1616

1615:                                             ; preds = %1590
  store i8 0, i8* %61, align 4
  br label %1624

1616:                                             ; preds = %1613, %1610
  store i8* %1598, i8** %56, align 8
  store i32 %1596, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1617 = load i32, i32* %60, align 8
  br label %1618

1618:                                             ; preds = %1585, %1616
  %1619 = phi i8* [ %1598, %1616 ], [ %1586, %1585 ]
  %1620 = phi i32 [ %1617, %1616 ], [ %1582, %1585 ]
  %1621 = add nsw i32 %1620, 1
  store i32 %1621, i32* %60, align 8
  %1622 = sext i32 %1620 to i64
  %1623 = getelementptr inbounds i8, i8* %1619, i64 %1622
  store i8 -91, i8* %1623, align 1
  br label %1624

1624:                                             ; preds = %1615, %1587, %1618
  %1625 = add nsw i32 %1581, -33
  %1626 = icmp sgt i32 %1625, 32
  br i1 %1626, label %1580, label %1627

1627:                                             ; preds = %1624, %1577
  %1628 = phi i32 [ %1578, %1577 ], [ %1625, %1624 ]
  %1629 = icmp ult i32 %1575, 34048
  %1630 = add nsw i32 %1628, 133
  %1631 = sub i32 197, %1628
  %1632 = select i1 %1629, i32 %1630, i32 %1631
  %1633 = load i32, i32* %60, align 8
  %1634 = load i32, i32* %58, align 8
  %1635 = icmp slt i32 %1633, %1634
  br i1 %1635, label %1636, label %1638

1636:                                             ; preds = %1627
  %1637 = load i8*, i8** %56, align 8
  br label %1669

1638:                                             ; preds = %1627
  %1639 = load i8, i8* %61, align 4
  %1640 = icmp eq i8 %1639, 0
  br i1 %1640, label %1676, label %1641

1641:                                             ; preds = %1638
  %1642 = shl nsw i32 %1634, 1
  %1643 = add nsw i32 %1633, 2
  %1644 = icmp slt i32 %1642, %1643
  %1645 = select i1 %1644, i32 %1643, i32 %1642
  %1646 = icmp sgt i32 %1645, 200
  %1647 = select i1 %1646, i32 %1645, i32 200
  %1648 = zext i32 %1647 to i64
  %1649 = call noalias i8* @uprv_malloc_69(i64 %1648) #9
  %1650 = icmp eq i8* %1649, null
  br i1 %1650, label %1666, label %1651

1651:                                             ; preds = %1641
  %1652 = icmp sgt i32 %1633, 0
  br i1 %1652, label %1653, label %1661

1653:                                             ; preds = %1651
  %1654 = load i32, i32* %58, align 8
  %1655 = icmp slt i32 %1654, %1633
  %1656 = select i1 %1655, i32 %1654, i32 %1633
  %1657 = icmp sgt i32 %1656, %1647
  %1658 = select i1 %1657, i32 %1647, i32 %1656
  %1659 = load i8*, i8** %56, align 8
  %1660 = sext i32 %1658 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1649, i8* align 1 %1659, i64 %1660, i1 false) #10
  br label %1661

1661:                                             ; preds = %1653, %1651
  %1662 = load i8, i8* %59, align 4
  %1663 = icmp eq i8 %1662, 0
  br i1 %1663, label %1667, label %1664

1664:                                             ; preds = %1661
  %1665 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1665) #10
  br label %1667

1666:                                             ; preds = %1641
  store i8 0, i8* %61, align 4
  br label %1676

1667:                                             ; preds = %1664, %1661
  store i8* %1649, i8** %56, align 8
  store i32 %1647, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1668 = load i32, i32* %60, align 8
  br label %1669

1669:                                             ; preds = %1636, %1667
  %1670 = phi i8* [ %1649, %1667 ], [ %1637, %1636 ]
  %1671 = phi i32 [ %1668, %1667 ], [ %1633, %1636 ]
  %1672 = trunc i32 %1632 to i8
  %1673 = add nsw i32 %1671, 1
  store i32 %1673, i32* %60, align 8
  %1674 = sext i32 %1671 to i64
  %1675 = getelementptr inbounds i8, i8* %1670, i64 %1674
  store i8 %1672, i8* %1675, align 1
  br label %1676

1676:                                             ; preds = %1666, %1638, %1669, %1574
  %1677 = lshr i32 %1575, 8
  %1678 = trunc i32 %1677 to i8
  %1679 = trunc i32 %1575 to i8
  %1680 = and i32 %1575, 255
  %1681 = icmp eq i32 %1680, 0
  %1682 = select i1 %1681, i32 1, i32 2
  %1683 = load i32, i32* %60, align 8
  %1684 = add nsw i32 %1683, %1682
  %1685 = load i32, i32* %58, align 8
  %1686 = icmp sgt i32 %1684, %1685
  br i1 %1686, label %1689, label %1687

1687:                                             ; preds = %1676
  %1688 = load i8*, i8** %56, align 8
  br label %1721

1689:                                             ; preds = %1676
  %1690 = load i8, i8* %61, align 4
  %1691 = icmp eq i8 %1690, 0
  br i1 %1691, label %1733, label %1692

1692:                                             ; preds = %1689
  %1693 = shl nsw i32 %1685, 1
  %1694 = shl nuw nsw i32 %1682, 1
  %1695 = add nsw i32 %1683, %1694
  %1696 = icmp slt i32 %1693, %1695
  %1697 = select i1 %1696, i32 %1695, i32 %1693
  %1698 = icmp sgt i32 %1697, 200
  %1699 = select i1 %1698, i32 %1697, i32 200
  %1700 = zext i32 %1699 to i64
  %1701 = call noalias i8* @uprv_malloc_69(i64 %1700) #9
  %1702 = icmp eq i8* %1701, null
  br i1 %1702, label %1718, label %1703

1703:                                             ; preds = %1692
  %1704 = icmp sgt i32 %1683, 0
  br i1 %1704, label %1705, label %1713

1705:                                             ; preds = %1703
  %1706 = load i32, i32* %58, align 8
  %1707 = icmp slt i32 %1706, %1683
  %1708 = select i1 %1707, i32 %1706, i32 %1683
  %1709 = icmp sgt i32 %1708, %1699
  %1710 = select i1 %1709, i32 %1699, i32 %1708
  %1711 = load i8*, i8** %56, align 8
  %1712 = sext i32 %1710 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1701, i8* align 1 %1711, i64 %1712, i1 false) #10
  br label %1713

1713:                                             ; preds = %1705, %1703
  %1714 = load i8, i8* %59, align 4
  %1715 = icmp eq i8 %1714, 0
  br i1 %1715, label %1719, label %1716

1716:                                             ; preds = %1713
  %1717 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %1717) #10
  br label %1719

1718:                                             ; preds = %1692
  store i8 0, i8* %61, align 4
  br label %1733

1719:                                             ; preds = %1716, %1713
  store i8* %1701, i8** %56, align 8
  store i32 %1699, i32* %58, align 8
  store i8 1, i8* %59, align 4
  %1720 = load i32, i32* %60, align 8
  br label %1721

1721:                                             ; preds = %1687, %1719
  %1722 = phi i8* [ %1701, %1719 ], [ %1688, %1687 ]
  %1723 = phi i32 [ %1720, %1719 ], [ %1683, %1687 ]
  %1724 = add nsw i32 %1723, 1
  store i32 %1724, i32* %60, align 8
  %1725 = sext i32 %1723 to i64
  %1726 = getelementptr inbounds i8, i8* %1722, i64 %1725
  store i8 %1678, i8* %1726, align 1
  br i1 %1681, label %1733, label %1727

1727:                                             ; preds = %1721
  %1728 = load i32, i32* %60, align 8
  %1729 = add nsw i32 %1728, 1
  store i32 %1729, i32* %60, align 8
  %1730 = sext i32 %1728 to i64
  %1731 = load i8*, i8** %56, align 8
  %1732 = getelementptr inbounds i8, i8* %1731, i64 %1730
  store i8 %1679, i8* %1732, align 1
  br label %1733

1733:                                             ; preds = %1718, %1689, %1548, %1519, %1386, %1357, %1727, %1721, %1557, %1551, %1395, %1389, %1237, %1232
  %1734 = phi i32 [ %103, %1232 ], [ %1238, %1237 ], [ 0, %1389 ], [ 0, %1395 ], [ 0, %1551 ], [ 0, %1557 ], [ 0, %1721 ], [ 0, %1727 ], [ 0, %1357 ], [ 0, %1386 ], [ 0, %1519 ], [ 0, %1548 ], [ 0, %1689 ], [ 0, %1718 ]
  br i1 %72, label %1925, label %1735

1735:                                             ; preds = %1733
  %1736 = and i32 %542, 65535
  %1737 = and i32 %542, 192
  %1738 = icmp eq i32 %1737, 0
  %1739 = icmp ugt i32 %1736, 256
  %1740 = and i1 %1738, %1739
  br i1 %1740, label %1741, label %1743

1741:                                             ; preds = %1735
  %1742 = add nsw i32 %390, 1
  br label %1925

1743:                                             ; preds = %1735
  %1744 = icmp eq i32 %1736, 256
  %1745 = load i32, i32* %67, align 8
  %1746 = or i32 %30, %1745
  %1747 = icmp eq i32 %1746, 0
  %1748 = and i1 %1747, %1744
  br i1 %1748, label %1749, label %1774

1749:                                             ; preds = %1743
  %1750 = load i32, i32* %65, align 8
  %1751 = icmp sgt i32 %1750, 0
  br i1 %1751, label %1752, label %1754

1752:                                             ; preds = %1749
  %1753 = load i8*, i8** %63, align 8
  br label %1768

1754:                                             ; preds = %1749
  %1755 = load i8, i8* %68, align 4
  %1756 = icmp eq i8 %1755, 0
  br i1 %1756, label %1925, label %1757

1757:                                             ; preds = %1754
  %1758 = call noalias i8* @uprv_malloc_69(i64 200) #9
  %1759 = icmp eq i8* %1758, null
  br i1 %1759, label %1765, label %1760

1760:                                             ; preds = %1757
  %1761 = load i8, i8* %66, align 4
  %1762 = icmp eq i8 %1761, 0
  br i1 %1762, label %1766, label %1763

1763:                                             ; preds = %1760
  %1764 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %1764) #10
  br label %1766

1765:                                             ; preds = %1757
  store i8 0, i8* %68, align 4
  br label %1925

1766:                                             ; preds = %1763, %1760
  store i8* %1758, i8** %63, align 8
  store i32 200, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %1767 = load i32, i32* %67, align 8
  br label %1768

1768:                                             ; preds = %1752, %1766
  %1769 = phi i8* [ %1758, %1766 ], [ %1753, %1752 ]
  %1770 = phi i32 [ %1767, %1766 ], [ 0, %1752 ]
  %1771 = add nsw i32 %1770, 1
  store i32 %1771, i32* %67, align 8
  %1772 = sext i32 %1770 to i64
  %1773 = getelementptr inbounds i8, i8* %1769, i64 %1772
  store i8 1, i8* %1773, align 1
  br label %1925

1774:                                             ; preds = %1743
  br i1 %1744, label %1779, label %1775

1775:                                             ; preds = %1774
  %1776 = lshr i32 %542, 6
  %1777 = and i32 %1776, 3
  %1778 = or i32 %1777, 252
  br label %1779

1779:                                             ; preds = %1774, %1775
  %1780 = phi i32 [ %1778, %1775 ], [ 1, %1774 ]
  %1781 = icmp eq i32 %390, 0
  br i1 %1781, label %1881, label %1782

1782:                                             ; preds = %1779
  %1783 = add nsw i32 %390, -1
  %1784 = icmp sgt i32 %1783, 112
  br i1 %1784, label %1785, label %1832

1785:                                             ; preds = %1782, %1829
  %1786 = phi i32 [ %1830, %1829 ], [ %1783, %1782 ]
  %1787 = load i32, i32* %67, align 8
  %1788 = load i32, i32* %65, align 8
  %1789 = icmp slt i32 %1787, %1788
  br i1 %1789, label %1790, label %1792

1790:                                             ; preds = %1785
  %1791 = load i8*, i8** %63, align 8
  br label %1823

1792:                                             ; preds = %1785
  %1793 = load i8, i8* %68, align 4
  %1794 = icmp eq i8 %1793, 0
  br i1 %1794, label %1829, label %1795

1795:                                             ; preds = %1792
  %1796 = shl nsw i32 %1788, 1
  %1797 = add nsw i32 %1787, 2
  %1798 = icmp slt i32 %1796, %1797
  %1799 = select i1 %1798, i32 %1797, i32 %1796
  %1800 = icmp sgt i32 %1799, 200
  %1801 = select i1 %1800, i32 %1799, i32 200
  %1802 = zext i32 %1801 to i64
  %1803 = call noalias i8* @uprv_malloc_69(i64 %1802) #9
  %1804 = icmp eq i8* %1803, null
  br i1 %1804, label %1820, label %1805

1805:                                             ; preds = %1795
  %1806 = icmp sgt i32 %1787, 0
  br i1 %1806, label %1807, label %1815

1807:                                             ; preds = %1805
  %1808 = load i32, i32* %65, align 8
  %1809 = icmp slt i32 %1808, %1787
  %1810 = select i1 %1809, i32 %1808, i32 %1787
  %1811 = icmp sgt i32 %1810, %1801
  %1812 = select i1 %1811, i32 %1801, i32 %1810
  %1813 = load i8*, i8** %63, align 8
  %1814 = sext i32 %1812 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1803, i8* align 1 %1813, i64 %1814, i1 false) #10
  br label %1815

1815:                                             ; preds = %1807, %1805
  %1816 = load i8, i8* %66, align 4
  %1817 = icmp eq i8 %1816, 0
  br i1 %1817, label %1821, label %1818

1818:                                             ; preds = %1815
  %1819 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %1819) #10
  br label %1821

1820:                                             ; preds = %1795
  store i8 0, i8* %68, align 4
  br label %1829

1821:                                             ; preds = %1818, %1815
  store i8* %1803, i8** %63, align 8
  store i32 %1801, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %1822 = load i32, i32* %67, align 8
  br label %1823

1823:                                             ; preds = %1790, %1821
  %1824 = phi i8* [ %1803, %1821 ], [ %1791, %1790 ]
  %1825 = phi i32 [ %1822, %1821 ], [ %1787, %1790 ]
  %1826 = add nsw i32 %1825, 1
  store i32 %1826, i32* %67, align 8
  %1827 = sext i32 %1825 to i64
  %1828 = getelementptr inbounds i8, i8* %1824, i64 %1827
  store i8 -116, i8* %1828, align 1
  br label %1829

1829:                                             ; preds = %1820, %1792, %1823
  %1830 = add nsw i32 %1786, -113
  %1831 = icmp sgt i32 %1830, 112
  br i1 %1831, label %1785, label %1832

1832:                                             ; preds = %1829, %1782
  %1833 = phi i32 [ %1783, %1782 ], [ %1830, %1829 ]
  %1834 = icmp ult i32 %1780, 28
  %1835 = add nsw i32 %1833, 28
  %1836 = sub i32 252, %1833
  %1837 = select i1 %1834, i32 %1835, i32 %1836
  %1838 = load i32, i32* %67, align 8
  %1839 = load i32, i32* %65, align 8
  %1840 = icmp slt i32 %1838, %1839
  br i1 %1840, label %1841, label %1843

1841:                                             ; preds = %1832
  %1842 = load i8*, i8** %63, align 8
  br label %1874

1843:                                             ; preds = %1832
  %1844 = load i8, i8* %68, align 4
  %1845 = icmp eq i8 %1844, 0
  br i1 %1845, label %1881, label %1846

1846:                                             ; preds = %1843
  %1847 = shl nsw i32 %1839, 1
  %1848 = add nsw i32 %1838, 2
  %1849 = icmp slt i32 %1847, %1848
  %1850 = select i1 %1849, i32 %1848, i32 %1847
  %1851 = icmp sgt i32 %1850, 200
  %1852 = select i1 %1851, i32 %1850, i32 200
  %1853 = zext i32 %1852 to i64
  %1854 = call noalias i8* @uprv_malloc_69(i64 %1853) #9
  %1855 = icmp eq i8* %1854, null
  br i1 %1855, label %1871, label %1856

1856:                                             ; preds = %1846
  %1857 = icmp sgt i32 %1838, 0
  br i1 %1857, label %1858, label %1866

1858:                                             ; preds = %1856
  %1859 = load i32, i32* %65, align 8
  %1860 = icmp slt i32 %1859, %1838
  %1861 = select i1 %1860, i32 %1859, i32 %1838
  %1862 = icmp sgt i32 %1861, %1852
  %1863 = select i1 %1862, i32 %1852, i32 %1861
  %1864 = load i8*, i8** %63, align 8
  %1865 = sext i32 %1863 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1854, i8* align 1 %1864, i64 %1865, i1 false) #10
  br label %1866

1866:                                             ; preds = %1858, %1856
  %1867 = load i8, i8* %66, align 4
  %1868 = icmp eq i8 %1867, 0
  br i1 %1868, label %1872, label %1869

1869:                                             ; preds = %1866
  %1870 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %1870) #10
  br label %1872

1871:                                             ; preds = %1846
  store i8 0, i8* %68, align 4
  br label %1881

1872:                                             ; preds = %1869, %1866
  store i8* %1854, i8** %63, align 8
  store i32 %1852, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %1873 = load i32, i32* %67, align 8
  br label %1874

1874:                                             ; preds = %1841, %1872
  %1875 = phi i8* [ %1854, %1872 ], [ %1842, %1841 ]
  %1876 = phi i32 [ %1873, %1872 ], [ %1838, %1841 ]
  %1877 = trunc i32 %1837 to i8
  %1878 = add nsw i32 %1876, 1
  store i32 %1878, i32* %67, align 8
  %1879 = sext i32 %1876 to i64
  %1880 = getelementptr inbounds i8, i8* %1875, i64 %1879
  store i8 %1877, i8* %1880, align 1
  br label %1881

1881:                                             ; preds = %1871, %1843, %1874, %1779
  %1882 = load i32, i32* %67, align 8
  %1883 = load i32, i32* %65, align 8
  %1884 = icmp slt i32 %1882, %1883
  br i1 %1884, label %1885, label %1887

1885:                                             ; preds = %1881
  %1886 = load i8*, i8** %63, align 8
  br label %1918

1887:                                             ; preds = %1881
  %1888 = load i8, i8* %68, align 4
  %1889 = icmp eq i8 %1888, 0
  br i1 %1889, label %1925, label %1890

1890:                                             ; preds = %1887
  %1891 = shl nsw i32 %1883, 1
  %1892 = add nsw i32 %1882, 2
  %1893 = icmp slt i32 %1891, %1892
  %1894 = select i1 %1893, i32 %1892, i32 %1891
  %1895 = icmp sgt i32 %1894, 200
  %1896 = select i1 %1895, i32 %1894, i32 200
  %1897 = zext i32 %1896 to i64
  %1898 = call noalias i8* @uprv_malloc_69(i64 %1897) #9
  %1899 = icmp eq i8* %1898, null
  br i1 %1899, label %1915, label %1900

1900:                                             ; preds = %1890
  %1901 = icmp sgt i32 %1882, 0
  br i1 %1901, label %1902, label %1910

1902:                                             ; preds = %1900
  %1903 = load i32, i32* %65, align 8
  %1904 = icmp slt i32 %1903, %1882
  %1905 = select i1 %1904, i32 %1903, i32 %1882
  %1906 = icmp sgt i32 %1905, %1896
  %1907 = select i1 %1906, i32 %1896, i32 %1905
  %1908 = load i8*, i8** %63, align 8
  %1909 = sext i32 %1907 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1898, i8* align 1 %1908, i64 %1909, i1 false) #10
  br label %1910

1910:                                             ; preds = %1902, %1900
  %1911 = load i8, i8* %66, align 4
  %1912 = icmp eq i8 %1911, 0
  br i1 %1912, label %1916, label %1913

1913:                                             ; preds = %1910
  %1914 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %1914) #10
  br label %1916

1915:                                             ; preds = %1890
  store i8 0, i8* %68, align 4
  br label %1925

1916:                                             ; preds = %1913, %1910
  store i8* %1898, i8** %63, align 8
  store i32 %1896, i32* %65, align 8
  store i8 1, i8* %66, align 4
  %1917 = load i32, i32* %67, align 8
  br label %1918

1918:                                             ; preds = %1885, %1916
  %1919 = phi i8* [ %1898, %1916 ], [ %1886, %1885 ]
  %1920 = phi i32 [ %1917, %1916 ], [ %1882, %1885 ]
  %1921 = trunc i32 %1780 to i8
  %1922 = add nsw i32 %1920, 1
  store i32 %1922, i32* %67, align 8
  %1923 = sext i32 %1920 to i64
  %1924 = getelementptr inbounds i8, i8* %1919, i64 %1923
  store i8 %1921, i8* %1924, align 1
  br label %1925

1925:                                             ; preds = %1915, %1887, %1765, %1754, %1918, %1768, %1741, %1733
  %1926 = phi i32 [ %390, %1733 ], [ %1742, %1741 ], [ %390, %1768 ], [ 0, %1918 ], [ %390, %1754 ], [ %390, %1765 ], [ 0, %1887 ], [ 0, %1915 ]
  %1927 = and i32 %542, -16777216
  %1928 = icmp eq i32 %1927, 16777216
  br i1 %1928, label %1929, label %99

1929:                                             ; preds = %1925
  %1930 = load i32, i32* %7, align 4
  %1931 = icmp slt i32 %1930, 1
  br i1 %1931, label %1932, label %2180

1932:                                             ; preds = %1929
  br i1 %87, label %1976, label %1933

1933:                                             ; preds = %1932
  %1934 = bitcast %"class.icu_69::CollationKeys::LevelCallback"* %5 to i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)***
  %1935 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)**, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*** %1934, align 8
  %1936 = getelementptr inbounds i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %1935, i64 2
  %1937 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %1936, align 8
  %1938 = call signext i8 %1937(%"class.icu_69::CollationKeys::LevelCallback"* %5, i32 2) #10
  %1939 = icmp eq i8 %1938, 0
  br i1 %1939, label %2180, label %1940

1940:                                             ; preds = %1933
  %1941 = load i8, i8* %54, align 4
  %1942 = and i8 %1941, 1
  %1943 = load i32, i32* %76, align 8
  %1944 = icmp sgt i32 %1943, 0
  br i1 %1944, label %1945, label %1947

1945:                                             ; preds = %1940
  %1946 = add nsw i32 %1943, -1
  store i32 %1946, i32* %76, align 8
  br label %1967

1947:                                             ; preds = %1940
  %1948 = load i32, i32* %77, align 4
  %1949 = load i32, i32* %78, align 8
  %1950 = icmp slt i32 %1948, %1949
  br i1 %1950, label %1959, label %1951

1951:                                             ; preds = %1947
  %1952 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %1953 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %1952, i64 6
  %1954 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %1953, align 8
  %1955 = call signext i8 %1954(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %1948) #10
  %1956 = icmp eq i8 %1955, 0
  br i1 %1956, label %1964, label %1957

1957:                                             ; preds = %1951
  %1958 = load i32, i32* %77, align 4
  br label %1959

1959:                                             ; preds = %1957, %1947
  %1960 = phi i32 [ %1958, %1957 ], [ %1948, %1947 ]
  %1961 = load i8*, i8** %80, align 8
  %1962 = sext i32 %1960 to i64
  %1963 = getelementptr inbounds i8, i8* %1961, i64 %1962
  store i8 1, i8* %1963, align 1
  br label %1964

1964:                                             ; preds = %1959, %1951
  %1965 = load i32, i32* %77, align 4
  %1966 = add nsw i32 %1965, 1
  store i32 %1966, i32* %77, align 4
  br label %1967

1967:                                             ; preds = %1945, %1964
  %1968 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 0
  %1969 = load i8*, i8** %49, align 8
  %1970 = load i32, i32* %53, align 8
  %1971 = add nsw i32 %1970, -1
  %1972 = bitcast %"class.icu_69::SortKeyByteSink"* %3 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %1973 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1972, align 8
  %1974 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1973, i64 2
  %1975 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1974, align 8
  call void %1975(%"class.icu_69::ByteSink"* %1968, i8* %1969, i32 %1971) #10
  br label %1976

1976:                                             ; preds = %1932, %1967
  %1977 = phi i8 [ %1942, %1967 ], [ 1, %1932 ]
  br i1 %91, label %2083, label %1978

1978:                                             ; preds = %1976
  %1979 = bitcast %"class.icu_69::CollationKeys::LevelCallback"* %5 to i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)***
  %1980 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)**, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*** %1979, align 8
  %1981 = getelementptr inbounds i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %1980, i64 2
  %1982 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %1981, align 8
  %1983 = call signext i8 %1982(%"class.icu_69::CollationKeys::LevelCallback"* %5, i32 3) #10
  %1984 = icmp eq i8 %1983, 0
  br i1 %1984, label %2180, label %1985

1985:                                             ; preds = %1978
  %1986 = load i8, i8* %47, align 4
  %1987 = and i8 %1986, %1977
  %1988 = load i32, i32* %76, align 8
  %1989 = icmp sgt i32 %1988, 0
  br i1 %1989, label %1990, label %1992

1990:                                             ; preds = %1985
  %1991 = add nsw i32 %1988, -1
  store i32 %1991, i32* %76, align 8
  br label %2012

1992:                                             ; preds = %1985
  %1993 = load i32, i32* %77, align 4
  %1994 = load i32, i32* %78, align 8
  %1995 = icmp slt i32 %1993, %1994
  br i1 %1995, label %2004, label %1996

1996:                                             ; preds = %1992
  %1997 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %1998 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %1997, i64 6
  %1999 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %1998, align 8
  %2000 = call signext i8 %1999(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %1993) #10
  %2001 = icmp eq i8 %2000, 0
  br i1 %2001, label %2009, label %2002

2002:                                             ; preds = %1996
  %2003 = load i32, i32* %77, align 4
  br label %2004

2004:                                             ; preds = %2002, %1992
  %2005 = phi i32 [ %2003, %2002 ], [ %1993, %1992 ]
  %2006 = load i8*, i8** %80, align 8
  %2007 = sext i32 %2005 to i64
  %2008 = getelementptr inbounds i8, i8* %2006, i64 %2007
  store i8 1, i8* %2008, align 1
  br label %2009

2009:                                             ; preds = %2004, %1996
  %2010 = load i32, i32* %77, align 4
  %2011 = add nsw i32 %2010, 1
  store i32 %2011, i32* %77, align 4
  br label %2012

2012:                                             ; preds = %1990, %2009
  %2013 = load i32, i32* %46, align 8
  %2014 = add i32 %2013, -1
  %2015 = icmp sgt i32 %2014, 0
  br i1 %2015, label %2016, label %2083

2016:                                             ; preds = %2012
  %2017 = zext i32 %2014 to i64
  br label %2020

2018:                                             ; preds = %2054
  %2019 = icmp eq i8 %2055, 0
  br i1 %2019, label %2083, label %2058

2020:                                             ; preds = %2054, %2016
  %2021 = phi i64 [ 0, %2016 ], [ %2056, %2054 ]
  %2022 = phi i8 [ 0, %2016 ], [ %2055, %2054 ]
  %2023 = load i8*, i8** %42, align 8
  %2024 = getelementptr inbounds i8, i8* %2023, i64 %2021
  %2025 = load i8, i8* %2024, align 1
  %2026 = icmp eq i8 %2022, 0
  br i1 %2026, label %2054, label %2027

2027:                                             ; preds = %2020
  %2028 = lshr i8 %2025, 4
  %2029 = or i8 %2028, %2022
  %2030 = load i32, i32* %76, align 8
  %2031 = icmp sgt i32 %2030, 0
  br i1 %2031, label %2032, label %2034

2032:                                             ; preds = %2027
  %2033 = add nsw i32 %2030, -1
  store i32 %2033, i32* %76, align 8
  br label %2054

2034:                                             ; preds = %2027
  %2035 = load i32, i32* %77, align 4
  %2036 = load i32, i32* %78, align 8
  %2037 = icmp slt i32 %2035, %2036
  br i1 %2037, label %2046, label %2038

2038:                                             ; preds = %2034
  %2039 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %2040 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2039, i64 6
  %2041 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2040, align 8
  %2042 = call signext i8 %2041(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %2035) #10
  %2043 = icmp eq i8 %2042, 0
  br i1 %2043, label %2051, label %2044

2044:                                             ; preds = %2038
  %2045 = load i32, i32* %77, align 4
  br label %2046

2046:                                             ; preds = %2044, %2034
  %2047 = phi i32 [ %2045, %2044 ], [ %2035, %2034 ]
  %2048 = load i8*, i8** %80, align 8
  %2049 = sext i32 %2047 to i64
  %2050 = getelementptr inbounds i8, i8* %2048, i64 %2049
  store i8 %2029, i8* %2050, align 1
  br label %2051

2051:                                             ; preds = %2046, %2038
  %2052 = load i32, i32* %77, align 4
  %2053 = add nsw i32 %2052, 1
  store i32 %2053, i32* %77, align 4
  br label %2054

2054:                                             ; preds = %2051, %2032, %2020
  %2055 = phi i8 [ %2025, %2020 ], [ 0, %2032 ], [ 0, %2051 ]
  %2056 = add nuw nsw i64 %2021, 1
  %2057 = icmp eq i64 %2056, %2017
  br i1 %2057, label %2018, label %2020

2058:                                             ; preds = %2018
  %2059 = load i32, i32* %76, align 8
  %2060 = icmp sgt i32 %2059, 0
  br i1 %2060, label %2061, label %2063

2061:                                             ; preds = %2058
  %2062 = add nsw i32 %2059, -1
  store i32 %2062, i32* %76, align 8
  br label %2083

2063:                                             ; preds = %2058
  %2064 = load i32, i32* %77, align 4
  %2065 = load i32, i32* %78, align 8
  %2066 = icmp slt i32 %2064, %2065
  br i1 %2066, label %2075, label %2067

2067:                                             ; preds = %2063
  %2068 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %2069 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2068, i64 6
  %2070 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2069, align 8
  %2071 = call signext i8 %2070(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %2064) #10
  %2072 = icmp eq i8 %2071, 0
  br i1 %2072, label %2080, label %2073

2073:                                             ; preds = %2067
  %2074 = load i32, i32* %77, align 4
  br label %2075

2075:                                             ; preds = %2073, %2063
  %2076 = phi i32 [ %2074, %2073 ], [ %2064, %2063 ]
  %2077 = load i8*, i8** %80, align 8
  %2078 = sext i32 %2076 to i64
  %2079 = getelementptr inbounds i8, i8* %2077, i64 %2078
  store i8 %2055, i8* %2079, align 1
  br label %2080

2080:                                             ; preds = %2075, %2067
  %2081 = load i32, i32* %77, align 4
  %2082 = add nsw i32 %2081, 1
  store i32 %2082, i32* %77, align 4
  br label %2083

2083:                                             ; preds = %2012, %2080, %2061, %2018, %1976
  %2084 = phi i8 [ %1977, %1976 ], [ %1987, %2018 ], [ %1987, %2061 ], [ %1987, %2080 ], [ %1987, %2012 ]
  br i1 %96, label %2128, label %2085

2085:                                             ; preds = %2083
  %2086 = bitcast %"class.icu_69::CollationKeys::LevelCallback"* %5 to i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)***
  %2087 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)**, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*** %2086, align 8
  %2088 = getelementptr inbounds i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %2087, i64 2
  %2089 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %2088, align 8
  %2090 = call signext i8 %2089(%"class.icu_69::CollationKeys::LevelCallback"* %5, i32 4) #10
  %2091 = icmp eq i8 %2090, 0
  br i1 %2091, label %2180, label %2092

2092:                                             ; preds = %2085
  %2093 = load i8, i8* %61, align 4
  %2094 = and i8 %2093, %2084
  %2095 = load i32, i32* %76, align 8
  %2096 = icmp sgt i32 %2095, 0
  br i1 %2096, label %2097, label %2099

2097:                                             ; preds = %2092
  %2098 = add nsw i32 %2095, -1
  store i32 %2098, i32* %76, align 8
  br label %2119

2099:                                             ; preds = %2092
  %2100 = load i32, i32* %77, align 4
  %2101 = load i32, i32* %78, align 8
  %2102 = icmp slt i32 %2100, %2101
  br i1 %2102, label %2111, label %2103

2103:                                             ; preds = %2099
  %2104 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %2105 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2104, i64 6
  %2106 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2105, align 8
  %2107 = call signext i8 %2106(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %2100) #10
  %2108 = icmp eq i8 %2107, 0
  br i1 %2108, label %2116, label %2109

2109:                                             ; preds = %2103
  %2110 = load i32, i32* %77, align 4
  br label %2111

2111:                                             ; preds = %2109, %2099
  %2112 = phi i32 [ %2110, %2109 ], [ %2100, %2099 ]
  %2113 = load i8*, i8** %80, align 8
  %2114 = sext i32 %2112 to i64
  %2115 = getelementptr inbounds i8, i8* %2113, i64 %2114
  store i8 1, i8* %2115, align 1
  br label %2116

2116:                                             ; preds = %2111, %2103
  %2117 = load i32, i32* %77, align 4
  %2118 = add nsw i32 %2117, 1
  store i32 %2118, i32* %77, align 4
  br label %2119

2119:                                             ; preds = %2097, %2116
  %2120 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 0
  %2121 = load i8*, i8** %56, align 8
  %2122 = load i32, i32* %60, align 8
  %2123 = add nsw i32 %2122, -1
  %2124 = bitcast %"class.icu_69::SortKeyByteSink"* %3 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %2125 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %2124, align 8
  %2126 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %2125, i64 2
  %2127 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %2126, align 8
  call void %2127(%"class.icu_69::ByteSink"* %2120, i8* %2121, i32 %2123) #10
  br label %2128

2128:                                             ; preds = %2083, %2119
  %2129 = phi i8 [ %2094, %2119 ], [ %2084, %2083 ]
  br i1 %72, label %2173, label %2130

2130:                                             ; preds = %2128
  %2131 = bitcast %"class.icu_69::CollationKeys::LevelCallback"* %5 to i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)***
  %2132 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)**, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*** %2131, align 8
  %2133 = getelementptr inbounds i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %2132, i64 2
  %2134 = load i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)*, i8 (%"class.icu_69::CollationKeys::LevelCallback"*, i32)** %2133, align 8
  %2135 = call signext i8 %2134(%"class.icu_69::CollationKeys::LevelCallback"* %5, i32 5) #10
  %2136 = icmp eq i8 %2135, 0
  br i1 %2136, label %2180, label %2137

2137:                                             ; preds = %2130
  %2138 = load i8, i8* %68, align 4
  %2139 = and i8 %2138, %2129
  %2140 = load i32, i32* %76, align 8
  %2141 = icmp sgt i32 %2140, 0
  br i1 %2141, label %2142, label %2144

2142:                                             ; preds = %2137
  %2143 = add nsw i32 %2140, -1
  store i32 %2143, i32* %76, align 8
  br label %2164

2144:                                             ; preds = %2137
  %2145 = load i32, i32* %77, align 4
  %2146 = load i32, i32* %78, align 8
  %2147 = icmp slt i32 %2145, %2146
  br i1 %2147, label %2156, label %2148

2148:                                             ; preds = %2144
  %2149 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)**, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*** %79, align 8
  %2150 = getelementptr inbounds i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2149, i64 6
  %2151 = load i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)*, i8 (%"class.icu_69::SortKeyByteSink"*, i32, i32)** %2150, align 8
  %2152 = call signext i8 %2151(%"class.icu_69::SortKeyByteSink"* %3, i32 1, i32 %2145) #10
  %2153 = icmp eq i8 %2152, 0
  br i1 %2153, label %2161, label %2154

2154:                                             ; preds = %2148
  %2155 = load i32, i32* %77, align 4
  br label %2156

2156:                                             ; preds = %2154, %2144
  %2157 = phi i32 [ %2155, %2154 ], [ %2145, %2144 ]
  %2158 = load i8*, i8** %80, align 8
  %2159 = sext i32 %2157 to i64
  %2160 = getelementptr inbounds i8, i8* %2158, i64 %2159
  store i8 1, i8* %2160, align 1
  br label %2161

2161:                                             ; preds = %2156, %2148
  %2162 = load i32, i32* %77, align 4
  %2163 = add nsw i32 %2162, 1
  store i32 %2163, i32* %77, align 4
  br label %2164

2164:                                             ; preds = %2142, %2161
  %2165 = getelementptr inbounds %"class.icu_69::SortKeyByteSink", %"class.icu_69::SortKeyByteSink"* %3, i64 0, i32 0
  %2166 = load i8*, i8** %63, align 8
  %2167 = load i32, i32* %67, align 8
  %2168 = add nsw i32 %2167, -1
  %2169 = bitcast %"class.icu_69::SortKeyByteSink"* %3 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %2170 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %2169, align 8
  %2171 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %2170, i64 2
  %2172 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %2171, align 8
  call void %2172(%"class.icu_69::ByteSink"* %2165, i8* %2166, i32 %2168) #10
  br label %2173

2173:                                             ; preds = %2128, %2164
  %2174 = phi i8 [ %2139, %2164 ], [ %2129, %2128 ]
  %2175 = icmp eq i8 %2174, 0
  br i1 %2175, label %2179, label %2176

2176:                                             ; preds = %2173
  %2177 = load i8*, i8** %80, align 8
  %2178 = icmp eq i8* %2177, null
  br i1 %2178, label %2179, label %2180

2179:                                             ; preds = %2176, %2173
  store i32 7, i32* %7, align 4
  br label %2180

2180:                                             ; preds = %532, %529, %535, %1933, %1978, %2085, %2130, %2176, %2179, %1929
  %2181 = load i8, i8* %66, align 4
  %2182 = icmp eq i8 %2181, 0
  br i1 %2182, label %2185, label %2183

2183:                                             ; preds = %2180
  %2184 = load i8*, i8** %63, align 8
  call void @uprv_free_69(i8* %2184) #10
  br label %2185

2185:                                             ; preds = %2180, %2183
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %62) #10
  %2186 = load i8, i8* %59, align 4
  %2187 = icmp eq i8 %2186, 0
  br i1 %2187, label %2190, label %2188

2188:                                             ; preds = %2185
  %2189 = load i8*, i8** %56, align 8
  call void @uprv_free_69(i8* %2189) #10
  br label %2190

2190:                                             ; preds = %2185, %2188
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %55) #10
  %2191 = load i8, i8* %52, align 4
  %2192 = icmp eq i8 %2191, 0
  br i1 %2192, label %2195, label %2193

2193:                                             ; preds = %2190
  %2194 = load i8*, i8** %49, align 8
  call void @uprv_free_69(i8* %2194) #10
  br label %2195

2195:                                             ; preds = %2190, %2193
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %48) #10
  %2196 = load i8, i8* %45, align 4
  %2197 = icmp eq i8 %2196, 0
  br i1 %2197, label %2200, label %2198

2198:                                             ; preds = %2195
  %2199 = load i8*, i8** %42, align 8
  call void @uprv_free_69(i8* %2199) #10
  br label %2200

2200:                                             ; preds = %2195, %2198
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %41) #10
  br label %2201

2201:                                             ; preds = %2200, %16, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %5, %8
  br i1 %9, label %10, label %17

10:                                               ; preds = %2
  %11 = add nsw i32 %5, 1
  store i32 %11, i32* %4, align 8
  %12 = sext i32 %5 to i64
  %13 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds i64, i64* %14, i64 %12
  %16 = load i64, i64* %15, align 8
  br label %177

17:                                               ; preds = %2
  %18 = icmp slt i32 %8, 40
  br i1 %18, label %24, label %19

19:                                               ; preds = %17
  %20 = tail call signext i8 @_ZN6icu_6917CollationIterator8CEBuffer20ensureAppendCapacityEiR10UErrorCode(%"class.icu_69::CollationIterator::CEBuffer"* %6, i32 1, i32* dereferenceable(4) %1) #10
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %177, label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %7, align 8
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i32 [ %23, %22 ], [ %8, %17 ]
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 8
  %27 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #10
  store i32 -1431655766, i32* %3, align 4
  %28 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)***
  %29 = load i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)** %29, i64 8
  %31 = load i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)** %30, align 8
  %32 = call i32 %31(%"class.icu_69::CollationIterator"* %0, i32* nonnull dereferenceable(4) %3, i32* dereferenceable(4) %1) #10
  %33 = and i32 %32, 255
  %34 = icmp ult i32 %33, 192
  br i1 %34, label %35, label %52

35:                                               ; preds = %24
  %36 = load i32, i32* %4, align 8
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %4, align 8
  %38 = and i32 %32, -65536
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = shl i32 %32, 16
  %42 = and i32 %41, -16777216
  %43 = zext i32 %42 to i64
  %44 = or i64 %40, %43
  %45 = shl nuw nsw i32 %33, 8
  %46 = zext i32 %45 to i64
  %47 = or i64 %44, %46
  %48 = sext i32 %36 to i64
  %49 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 %48
  store i64 %47, i64* %51, align 8
  br label %175

52:                                               ; preds = %24
  %53 = icmp eq i32 %33, 192
  br i1 %53, label %54, label %153

54:                                               ; preds = %52
  %55 = load i32, i32* %3, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  %58 = load i32, i32* %4, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %4, align 8
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 %60
  store i64 4311744768, i64* %63, align 8
  br label %175

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %66 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %65, align 8
  %67 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %66, i64 0, i32 4
  %68 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %67, align 8
  %69 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %68, i64 0, i32 0
  %70 = load %struct.UTrie2*, %struct.UTrie2** %69, align 8
  %71 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 2
  %72 = load i32*, i32** %71, align 8
  %73 = icmp ult i32 %55, 55296
  br i1 %73, label %74, label %85

74:                                               ; preds = %64
  %75 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = lshr i32 %55, 5
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %76, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = shl nuw nsw i32 %81, 2
  %83 = and i32 %55, 31
  %84 = add nuw nsw i32 %82, %83
  br label %129

85:                                               ; preds = %64
  %86 = icmp ult i32 %55, 65536
  br i1 %86, label %87, label %101

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 0
  %89 = load i16*, i16** %88, align 8
  %90 = icmp slt i32 %55, 56320
  %91 = select i1 %90, i32 320, i32 0
  %92 = lshr i32 %55, 5
  %93 = add nuw nsw i32 %91, %92
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %89, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = shl nuw nsw i32 %97, 2
  %99 = and i32 %55, 31
  %100 = add nuw nsw i32 %98, %99
  br label %129

101:                                              ; preds = %85
  %102 = icmp ugt i32 %55, 1114111
  br i1 %102, label %129, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 9
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, %55
  br i1 %106, label %110, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 10
  %109 = load i32, i32* %108, align 8
  br label %129

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %70, i64 0, i32 0
  %112 = load i16*, i16** %111, align 8
  %113 = lshr i32 %55, 11
  %114 = add nuw nsw i32 %113, 2080
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %112, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i32
  %119 = lshr i32 %55, 5
  %120 = and i32 %119, 63
  %121 = add nuw nsw i32 %120, %118
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %112, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = shl nuw nsw i32 %125, 2
  %127 = and i32 %55, 31
  %128 = add nuw nsw i32 %126, %127
  br label %129

129:                                              ; preds = %74, %87, %101, %107, %110
  %130 = phi i32 [ %84, %74 ], [ %100, %87 ], [ 128, %101 ], [ %109, %107 ], [ %128, %110 ]
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i32, i32* %72, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, 255
  %135 = icmp ult i32 %134, 192
  br i1 %135, label %136, label %156

136:                                              ; preds = %129
  %137 = load i32, i32* %4, align 8
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %4, align 8
  %139 = and i32 %133, -65536
  %140 = zext i32 %139 to i64
  %141 = shl nuw i64 %140, 32
  %142 = shl i32 %133, 16
  %143 = and i32 %142, -16777216
  %144 = zext i32 %143 to i64
  %145 = or i64 %141, %144
  %146 = shl nuw nsw i32 %134, 8
  %147 = zext i32 %146 to i64
  %148 = or i64 %145, %147
  %149 = sext i32 %137 to i64
  %150 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = getelementptr inbounds i64, i64* %151, i64 %149
  store i64 %148, i64* %152, align 8
  br label %175

153:                                              ; preds = %52
  %154 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %155 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %154, align 8
  br label %156

156:                                              ; preds = %129, %153
  %157 = phi i32 [ %133, %129 ], [ %32, %153 ]
  %158 = phi i32 [ %134, %129 ], [ %33, %153 ]
  %159 = phi %"struct.icu_69::CollationData"* [ %68, %129 ], [ %155, %153 ]
  %160 = icmp eq i32 %158, 193
  br i1 %160, label %161, label %172

161:                                              ; preds = %156
  %162 = load i32, i32* %4, align 8
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %4, align 8
  %164 = add i32 %157, -193
  %165 = zext i32 %164 to i64
  %166 = shl nuw i64 %165, 32
  %167 = or i64 %166, 83887360
  %168 = sext i32 %162 to i64
  %169 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds i64, i64* %170, i64 %168
  store i64 %167, i64* %171, align 8
  br label %175

172:                                              ; preds = %156
  %173 = load i32, i32* %3, align 4
  %174 = call i64 @_ZN6icu_6917CollationIterator14nextCEFromCE32EPKNS_13CollationDataEijR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %159, i32 %173, i32 %157, i32* dereferenceable(4) %1) #10
  br label %175

175:                                              ; preds = %57, %136, %161, %172, %35
  %176 = phi i64 [ %47, %35 ], [ 4311744768, %57 ], [ %148, %136 ], [ %167, %161 ], [ %174, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #10
  br label %177

177:                                              ; preds = %19, %175, %10
  %178 = phi i64 [ %16, %10 ], [ %176, %175 ], [ 4311744768, %19 ]
  ret i64 %178
}

declare void @_ZN6icu_698ByteSink5FlushEv(%"class.icu_69::ByteSink"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

declare i64 @_ZN6icu_6917CollationIterator14nextCEFromCE32EPKNS_13CollationDataEijR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare signext i8 @_ZN6icu_6917CollationIterator8CEBuffer20ensureAppendCapacityEiR10UErrorCode(%"class.icu_69::CollationIterator::CEBuffer"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare i32 @_ZNK6icu_6917CollationSettings9reorderExEj(%"struct.icu_69::CollationSettings"*, i32) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
