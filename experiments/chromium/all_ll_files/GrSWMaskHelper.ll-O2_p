; ModuleID = '../../third_party/skia/src/gpu/GrSWMaskHelper.cpp'
source_filename = "../../third_party/skia/src/gpu/GrSWMaskHelper.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSimpleMatrixProvider = type { %class.SkMatrixProvider }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.6, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.6 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.8 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.GrSWMaskHelper = type { %struct.SkPoint, %class.SkAutoPixmapStorage*, %class.SkAutoPixmapStorage, %class.SkDraw, %class.SkRasterClip }
%struct.SkPoint = type { float, float }
%class.SkAutoPixmapStorage = type { %class.SkPixmap, i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkDraw = type { %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkPixmap, %class.SkMatrixProvider*, %class.SkRasterClip*, %class.SkPixmap* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.6 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%struct.SkRect = type { float, float, float, float }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.GrStyledShape = type { %class.GrShape, %class.GrStyle, i32, i8, i8, %class.SkTLazy, %class.SkAutoSTArray.21 }
%class.GrShape = type { %union.anon.11, i8, i8, i8, i8, [4 x i8] }
%union.anon.11 = type { %class.SkRRect, [4 x i8] }
%class.GrStyle = type { %class.SkStrokeRec, %class.sk_sp.7, %"struct.GrStyle::DashInfo" }
%class.SkStrokeRec = type { float, float, float, i32 }
%"struct.GrStyle::DashInfo" = type { i32, float, %class.SkAutoSTArray }
%class.SkAutoSTArray = type { i32, float*, [16 x i8] }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%class.SkPath = type <{ %class.sk_sp.12, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.12 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.13, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.14, %class.SkTDArray.15, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.14 = type { i8*, i32, i32 }
%class.SkTDArray.15 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.16 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.16 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.17", [3 x i8] }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%class.SkAutoSTArray.21 = type { i32, i32*, [32 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.76, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.76 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.77, %class.sk_sp.78, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.128" }
%class.SkNVRefCnt.77 = type { %"struct.std::__1::atomic" }
%class.sk_sp.78 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.82 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.79, [4 x i8] }>
%union.anon.79 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.80, i8* }
%class.sk_sp.80 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.81, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.81 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.82 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.83, void (i8*)*, i8* }
%class.SkNVRefCnt.83 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.84, i32, [4 x i8] }
%union.anon.84 = type { %struct.anon.85 }
%struct.anon.85 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.78, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.125, %class.sk_sp.127, %class.sk_sp.127 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.95, %class.SkTMultiMap, %class.SkTDynamicHash.105, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.116, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.87 }
%class.SkTHashTable.87 = type { i32, i32, %class.SkAutoTArray.88 }
%class.SkAutoTArray.88 = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.23 }
%class.sk_sp.23 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.95 }
%class.SkTDArray.95 = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.96, i32, [4 x i8] }>
%class.SkTDynamicHash.96 = type { %class.SkTHashTable.97 }
%class.SkTHashTable.97 = type { i32, i32, %class.SkAutoTArray.98 }
%class.SkAutoTArray.98 = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.105 = type { %class.SkTHashTable.106 }
%class.SkTHashTable.106 = type { i32, i32, %class.SkAutoTArray.107 }
%class.SkAutoTArray.107 = type { %"class.std::__1::unique_ptr.108" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.114, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.114 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.115, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.115 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.116 = type { %class.SkTHashTable.117 }
%class.SkTHashTable.117 = type { i32, i32, %class.SkAutoTArray.118 }
%class.SkAutoTArray.118 = type { %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.125 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.126, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.126 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.127 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__cxx_atomic_impl.131" }
%"struct.std::__1::__cxx_atomic_impl.131" = type { %"struct.std::__1::__cxx_atomic_base_impl.132" }
%"struct.std::__1::__cxx_atomic_base_impl.132" = type { i64 }
%class.GrSwizzle = type { i16 }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.24", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.178" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.32, %class.SkTArray.41, %class.SkTArray.43, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.27"*, i64 }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.43, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.44 }
%class.sk_sp.44 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.32 = type { %class.SkTHashTable.33 }
%class.SkTHashTable.33 = type { i32, i32, %class.SkAutoTArray.34 }
%class.SkAutoTArray.34 = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.192" }
%"struct.std::__1::pair.192" = type { i32, %class.SkTArray.193* }
%class.SkTArray.193 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.41 = type { %"class.std::__1::unique_ptr.42"*, i64 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.193, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%class.SkTArray.43 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.57 }
%class.SkFibBlockSizes.57 = type { i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.64, %class.SkTArray.73, %class.GrOpsTask*, %class.SkSTArray.143, %class.SkSTArray.146, %"class.std::__1::unique_ptr.148", %class.sk_sp.164, %class.GrTokenTracker, i8, i8, %class.SkTArray.165, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.64 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.65", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.68, i8, [7 x i8] }>
%class.sk_sp.68 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.69, i8*, i64 }
%class.GrNonAtomicRef.69 = type { i32 }
%class.SkTArray.73 = type { %class.sk_sp.74*, i64 }
%class.sk_sp.74 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.133, i32, i32, %class.SkSTArray.140, %class.SkSTArray.140, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.75 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.75 = type { %class.sk_sp.76*, i64 }
%class.SkTArray.133 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.134", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.140 = type { %class.SkAlignedSTStorage.141, %class.SkTArray.142 }
%class.SkAlignedSTStorage.141 = type { [8 x i8] }
%class.SkTArray.142 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type opaque
%class.SkSTArray.143 = type { %class.SkAlignedSTStorage.144, %class.SkTArray.145 }
%class.SkAlignedSTStorage.144 = type { [32 x i8] }
%class.SkTArray.145 = type { i32*, i64 }
%class.SkSTArray.146 = type { %class.SkAlignedSTStorage.147, %class.SkTArray.73 }
%class.SkAlignedSTStorage.147 = type { [32 x i8] }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.151, %"class.std::__1::unique_ptr.155", %class.GrPathRenderer* }
%class.SkSTArray.151 = type { %class.SkAlignedSTStorage.152, %class.SkTArray.153 }
%class.SkAlignedSTStorage.152 = type { [64 x i8] }
%class.SkTArray.153 = type { %class.sk_sp.154*, i64 }
%class.sk_sp.154 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.164 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.165 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.166, i32, %class.GrRenderTask** }
%class.SkTHashMap.166 = type { %class.SkTHashTable.167 }
%class.SkTHashTable.167 = type { i32, i32, %class.SkAutoTArray.168 }
%class.SkAutoTArray.168 = type { %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.GrProxyProvider* }
%class.SkBitmap = type { %class.sk_sp.184, %class.SkPixmap, %class.sk_sp.185 }
%class.sk_sp.184 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.185 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.186", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.186" = type { i32 }

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN22SkSimpleMatrixProviderD0Ev = comdat any

$_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZTV22SkSimpleMatrixProvider = comdat any

@__const._ZN14GrSWMaskHelper9drawShapeERK7GrShapeRK8SkMatrixN8SkRegion2OpE4GrAAh.matrixProvider = private unnamed_addr constant %class.SkSimpleMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } } }, align 8
@_ZTV22SkSimpleMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkSimpleMatrixProvider*)* @_ZN22SkSimpleMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*, i32, %class.SkM44*)* @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*)* @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@__const._ZL9get_paintN8SkRegion2OpE4GrAAh.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.7 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.6 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.8 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.9 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.10 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZL10op_to_modeN8SkRegion2OpEE7modeMap = internal unnamed_addr constant [6 x i32] [i32 8, i32 13, i32 3, i32 11, i32 0, i32 1], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrSWMaskHelper8drawRectERK6SkRectRK8SkMatrixN8SkRegion2OpE4GrAAh(%class.GrSWMaskHelper*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* nocapture readonly dereferenceable(40), i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %class.SkSimpleMatrixProvider, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #6
  %11 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %11, i64 40, i1 false)
  %12 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 0
  %13 = load float, float* %12, align 8
  %14 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %7, float %13, float %15) #6
  %17 = bitcast %class.SkSimpleMatrixProvider* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZN14GrSWMaskHelper9drawShapeERK7GrShapeRK8SkMatrixN8SkRegion2OpE4GrAAh.matrixProvider to i8*), i64 112, i1 false)
  %18 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1
  %20 = bitcast %class.SkMatrix* %7 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 2
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 5
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 6
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 7
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %class.SkM44* %19 to i32*
  store i32 %21, i32* %46, align 8
  %47 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 1
  %48 = bitcast float* %47 to i32*
  store i32 %30, i32* %48, align 4
  %49 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %49, align 8
  %50 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 3
  %51 = bitcast float* %50 to i32*
  store i32 %39, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 4
  %53 = bitcast float* %52 to i32*
  store i32 %24, i32* %53, align 8
  %54 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 5
  %55 = bitcast float* %54 to i32*
  store i32 %33, i32* %55, align 4
  %56 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %56, align 8
  %57 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 7
  %58 = bitcast float* %57 to i32*
  store i32 %42, i32* %58, align 4
  %59 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 8
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %60, align 8
  %61 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 12
  %62 = bitcast float* %61 to i32*
  store i32 %27, i32* %62, align 8
  %63 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 13
  %64 = bitcast float* %63 to i32*
  store i32 %36, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %65, align 8
  %66 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 15
  %67 = bitcast float* %66 to i32*
  store i32 %45, i32* %67, align 4
  %68 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 2
  %69 = bitcast %class.SkMatrix* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 4 %10, i64 40, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %70 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0
  %71 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3
  %72 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 2
  store %class.SkMatrixProvider* %70, %class.SkMatrixProvider** %72, align 8
  %73 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %73) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 bitcast (%class.SkPaint* @__const._ZL9get_paintN8SkRegion2OpE4GrAAh.paint to i8*), i64 72, i1 false) #6
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #6
  %74 = zext i32 %3 to i64
  %75 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZZL10op_to_modeN8SkRegion2OpEE7modeMap, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 8, i32 0, i32 0
  %78 = load i32, i32* %77, align 8, !alias.scope !2
  %79 = shl i32 %76, 10
  %80 = and i32 %79, 261120
  %81 = and i32 %78, -261122
  %82 = zext i1 %4 to i32
  %83 = or i32 %80, %82
  %84 = or i32 %83, %81
  store i32 %84, i32* %77, align 8, !alias.scope !2
  %85 = zext i8 %5 to i32
  %86 = shl nuw i32 %85, 24
  %87 = or i32 %86, 16777215
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %9, i32 %87) #6
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* %71, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %9, %class.SkMatrix* null, %struct.SkRect* null) #6
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %73) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrSWMaskHelper9drawRRectERK7SkRRectRK8SkMatrixN8SkRegion2OpE4GrAAh(%class.GrSWMaskHelper*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* nocapture readonly dereferenceable(40), i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %class.SkSimpleMatrixProvider, align 8
  %9 = alloca %class.SkPaint, align 8
  %10 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #6
  %11 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %11, i64 40, i1 false)
  %12 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 0
  %13 = load float, float* %12, align 8
  %14 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %7, float %13, float %15) #6
  %17 = bitcast %class.SkSimpleMatrixProvider* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZN14GrSWMaskHelper9drawShapeERK7GrShapeRK8SkMatrixN8SkRegion2OpE4GrAAh.matrixProvider to i8*), i64 112, i1 false)
  %18 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1
  %20 = bitcast %class.SkMatrix* %7 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 2
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 5
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 6
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 7
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %class.SkM44* %19 to i32*
  store i32 %21, i32* %46, align 8
  %47 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 1
  %48 = bitcast float* %47 to i32*
  store i32 %30, i32* %48, align 4
  %49 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %49, align 8
  %50 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 3
  %51 = bitcast float* %50 to i32*
  store i32 %39, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 4
  %53 = bitcast float* %52 to i32*
  store i32 %24, i32* %53, align 8
  %54 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 5
  %55 = bitcast float* %54 to i32*
  store i32 %33, i32* %55, align 4
  %56 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %56, align 8
  %57 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 7
  %58 = bitcast float* %57 to i32*
  store i32 %42, i32* %58, align 4
  %59 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 8
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %60, align 8
  %61 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 12
  %62 = bitcast float* %61 to i32*
  store i32 %27, i32* %62, align 8
  %63 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 13
  %64 = bitcast float* %63 to i32*
  store i32 %36, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %65, align 8
  %66 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 15
  %67 = bitcast float* %66 to i32*
  store i32 %45, i32* %67, align 4
  %68 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 2
  %69 = bitcast %class.SkMatrix* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* nonnull align 4 %10, i64 40, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %70 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0
  %71 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3
  %72 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 2
  store %class.SkMatrixProvider* %70, %class.SkMatrixProvider** %72, align 8
  %73 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %73) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 bitcast (%class.SkPaint* @__const._ZL9get_paintN8SkRegion2OpE4GrAAh.paint to i8*), i64 72, i1 false) #6
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #6
  %74 = zext i32 %3 to i64
  %75 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZZL10op_to_modeN8SkRegion2OpEE7modeMap, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 8, i32 0, i32 0
  %78 = load i32, i32* %77, align 8, !alias.scope !5
  %79 = shl i32 %76, 10
  %80 = and i32 %79, 261120
  %81 = and i32 %78, -261122
  %82 = zext i1 %4 to i32
  %83 = or i32 %80, %82
  %84 = or i32 %83, %81
  store i32 %84, i32* %77, align 8, !alias.scope !5
  %85 = zext i8 %5 to i32
  %86 = shl nuw i32 %85, 24
  %87 = or i32 %86, 16777215
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %9, i32 %87) #6
  call void @_ZNK6SkDraw9drawRRectERK7SkRRectRK7SkPaint(%class.SkDraw* %71, %class.SkRRect* dereferenceable(52) %1, %class.SkPaint* nonnull dereferenceable(72) %9) #6
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %73) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #6
  ret void
}

declare void @_ZNK6SkDraw9drawRRectERK7SkRRectRK7SkPaint(%class.SkDraw*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrSWMaskHelper9drawShapeERK13GrStyledShapeRK8SkMatrixN8SkRegion2OpE4GrAAh(%class.GrSWMaskHelper*, %class.GrStyledShape* dereferenceable(208), %class.SkMatrix* nocapture readonly dereferenceable(40), i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.sk_sp.7, align 8
  %9 = alloca %class.SkMatrix, align 4
  %10 = alloca %class.SkSimpleMatrixProvider, align 8
  %11 = alloca %class.SkPath, align 8
  %12 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast (%class.SkPaint* @__const._ZL9get_paintN8SkRegion2OpE4GrAAh.paint to i8*), i64 72, i1 false) #6
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #6
  %13 = zext i32 %3 to i64
  %14 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZZL10op_to_modeN8SkRegion2OpEE7modeMap, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %17 = load i32, i32* %16, align 8, !alias.scope !8
  %18 = shl i32 %15, 10
  %19 = and i32 %18, 261120
  %20 = and i32 %17, -261122
  %21 = zext i1 %4 to i32
  %22 = or i32 %19, %21
  %23 = or i32 %22, %20
  store i32 %23, i32* %16, align 8, !alias.scope !8
  %24 = zext i8 %5 to i32
  %25 = shl nuw i32 %24, 24
  %26 = or i32 %25, 16777215
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %7, i32 %26) #6
  %27 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %8, i64 0, i32 0
  %28 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %1, i64 0, i32 1, i32 1, i32 0
  %29 = load %class.SkPathEffect*, %class.SkPathEffect** %28, align 8, !noalias !11
  %30 = icmp eq %class.SkPathEffect* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %6
  %32 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic, !noalias !11
  br label %34

34:                                               ; preds = %6, %31
  store %class.SkPathEffect* %29, %class.SkPathEffect** %27, align 8, !alias.scope !11
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %7, %class.sk_sp.7* nonnull %8) #6
  %35 = load %class.SkPathEffect*, %class.SkPathEffect** %27, align 8
  %36 = icmp eq %class.SkPathEffect* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkPathEffect* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkPathEffect* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #6
  br label %47

47:                                               ; preds = %34, %37, %41
  %48 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %1, i64 0, i32 1, i32 0
  call void @_ZNK11SkStrokeRec12applyToPaintEP7SkPaint(%class.SkStrokeRec* %48, %class.SkPaint* nonnull %7) #6
  %49 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #6
  %50 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 %50, i64 40, i1 false)
  %51 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 0
  %52 = load float, float* %51, align 8
  %53 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %9, float %52, float %54) #6
  %56 = bitcast %class.SkSimpleMatrixProvider* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %56) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZN14GrSWMaskHelper9drawShapeERK7GrShapeRK8SkMatrixN8SkRegion2OpE4GrAAh.matrixProvider to i8*), i64 112, i1 false)
  %57 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1
  %59 = bitcast %class.SkMatrix* %9 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 1
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 2
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 3
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 5
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 6
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 7
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = bitcast %class.SkM44* %58 to i32*
  store i32 %60, i32* %85, align 8
  %86 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 1
  %87 = bitcast float* %86 to i32*
  store i32 %69, i32* %87, align 4
  %88 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %88, align 8
  %89 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 3
  %90 = bitcast float* %89 to i32*
  store i32 %78, i32* %90, align 4
  %91 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 4
  %92 = bitcast float* %91 to i32*
  store i32 %63, i32* %92, align 8
  %93 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 5
  %94 = bitcast float* %93 to i32*
  store i32 %72, i32* %94, align 4
  %95 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %95, align 8
  %96 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 7
  %97 = bitcast float* %96 to i32*
  store i32 %81, i32* %97, align 4
  %98 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 8
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %99, align 8
  %100 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 12
  %101 = bitcast float* %100 to i32*
  store i32 %66, i32* %101, align 8
  %102 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 13
  %103 = bitcast float* %102 to i32*
  store i32 %75, i32* %103, align 4
  %104 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %104, align 8
  %105 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 1, i32 0, i64 15
  %106 = bitcast float* %105 to i32*
  store i32 %84, i32* %106, align 4
  %107 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0, i32 2
  %108 = bitcast %class.SkMatrix* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 4 %49, i64 40, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %109 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %10, i64 0, i32 0
  %110 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3
  %111 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 2
  store %class.SkMatrixProvider* %109, %class.SkMatrixProvider** %111, align 8
  %112 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #6
  %113 = bitcast %class.SkPath* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %11) #6
  %114 = getelementptr inbounds %class.GrStyledShape, %class.GrStyledShape* %1, i64 0, i32 0
  %115 = call i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec* %48) #6
  %116 = icmp eq i32 %115, 1
  %117 = load %class.SkPathEffect*, %class.SkPathEffect** %28, align 8
  %118 = icmp eq %class.SkPathEffect* %117, null
  %119 = and i1 %116, %118
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %114, %class.SkPath* nonnull %11, i1 zeroext %119) #6
  %120 = icmp eq i32 %3, 5
  %121 = icmp eq i8 %5, -1
  %122 = and i1 %120, %121
  br i1 %122, label %123, label %131

123:                                              ; preds = %47
  %124 = load i32, i32* %16, align 8
  %125 = and i32 %124, 192
  %126 = icmp ne i32 %125, 64
  %127 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 6
  %128 = load float, float* %127, align 8
  %129 = fcmp ule float %128, 0.000000e+00
  %130 = or i1 %129, %126
  br label %131

131:                                              ; preds = %47, %123
  %132 = phi i1 [ %130, %123 ], [ false, %47 ]
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %110, %class.SkPath* nonnull dereferenceable(16) %11, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* null, i1 zeroext false, i1 zeroext %132, %class.SkBlitter* null) #6
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %56) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #6
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #6
  ret void
}

declare void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint*, %class.sk_sp.7*) local_unnamed_addr #2

declare void @_ZNK11SkStrokeRec12applyToPaintEP7SkPaint(%class.SkStrokeRec*, %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrSWMaskHelper9drawShapeERK7GrShapeRK8SkMatrixN8SkRegion2OpE4GrAAh(%class.GrSWMaskHelper*, %class.GrShape* dereferenceable(64), %class.SkMatrix* nocapture readonly dereferenceable(40), i32, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca %class.SkSimpleMatrixProvider, align 8
  %10 = alloca %class.SkPath, align 8
  %11 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%class.SkPaint* @__const._ZL9get_paintN8SkRegion2OpE4GrAAh.paint to i8*), i64 72, i1 false) #6
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #6
  %12 = zext i32 %3 to i64
  %13 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZZL10op_to_modeN8SkRegion2OpEE7modeMap, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %16 = load i32, i32* %15, align 8, !alias.scope !14
  %17 = shl i32 %14, 10
  %18 = and i32 %17, 261120
  %19 = and i32 %16, -261122
  %20 = zext i1 %4 to i32
  %21 = or i32 %18, %20
  %22 = or i32 %21, %19
  store i32 %22, i32* %15, align 8, !alias.scope !14
  %23 = zext i8 %5 to i32
  %24 = shl nuw i32 %23, 24
  %25 = or i32 %24, 16777215
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %7, i32 %25) #6
  %26 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #6
  %27 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %27, i64 40, i1 false)
  %28 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 0
  %29 = load float, float* %28, align 8
  %30 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %8, float %29, float %31) #6
  %33 = bitcast %class.SkSimpleMatrixProvider* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %33) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZN14GrSWMaskHelper9drawShapeERK7GrShapeRK8SkMatrixN8SkRegion2OpE4GrAAh.matrixProvider to i8*), i64 112, i1 false)
  %34 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1
  %36 = bitcast %class.SkMatrix* %8 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 2
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 3
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 5
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 6
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 7
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %60 = bitcast float* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = bitcast %class.SkM44* %35 to i32*
  store i32 %37, i32* %62, align 8
  %63 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 1
  %64 = bitcast float* %63 to i32*
  store i32 %46, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %65, align 8
  %66 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 3
  %67 = bitcast float* %66 to i32*
  store i32 %55, i32* %67, align 4
  %68 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 4
  %69 = bitcast float* %68 to i32*
  store i32 %40, i32* %69, align 8
  %70 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 5
  %71 = bitcast float* %70 to i32*
  store i32 %49, i32* %71, align 4
  %72 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %72, align 8
  %73 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 7
  %74 = bitcast float* %73 to i32*
  store i32 %58, i32* %74, align 4
  %75 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 8
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %76, align 8
  %77 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 12
  %78 = bitcast float* %77 to i32*
  store i32 %43, i32* %78, align 8
  %79 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 13
  %80 = bitcast float* %79 to i32*
  store i32 %52, i32* %80, align 4
  %81 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %81, align 8
  %82 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 1, i32 0, i64 15
  %83 = bitcast float* %82 to i32*
  store i32 %61, i32* %83, align 4
  %84 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0, i32 2
  %85 = bitcast %class.SkMatrix* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 4 %26, i64 40, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %86 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %9, i64 0, i32 0
  %87 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3
  %88 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 2
  store %class.SkMatrixProvider* %86, %class.SkMatrixProvider** %88, align 8
  %89 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 1
  %90 = load i8, i8* %89, align 8
  %91 = icmp eq i8 %90, 4
  %92 = bitcast %class.GrShape* %1 to %class.SkPath*
  %93 = getelementptr inbounds %class.SkPath, %class.SkPath* %92, i64 0, i32 4
  %94 = load i8, i8* %93, align 2
  %95 = and i8 %94, 2
  %96 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 4
  %97 = load i8, i8* %96, align 1
  %98 = select i1 %91, i8 %95, i8 %97
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %6
  switch i8 %90, label %107 [
    i8 6, label %101
    i8 1, label %101
    i8 0, label %101
  ]

101:                                              ; preds = %100, %100, %100
  call void @_ZNK6SkDraw9drawPaintERK7SkPaint(%class.SkDraw* %87, %class.SkPaint* nonnull dereferenceable(72) %7) #6
  br label %123

102:                                              ; preds = %6
  switch i8 %90, label %107 [
    i8 6, label %123
    i8 1, label %123
    i8 0, label %123
    i8 2, label %103
    i8 3, label %105
  ]

103:                                              ; preds = %102
  %104 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* %87, %struct.SkRect* dereferenceable(16) %104, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* null, %struct.SkRect* null) #6
  br label %123

105:                                              ; preds = %102
  %106 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 0, i32 0
  call void @_ZNK6SkDraw9drawRRectERK7SkRRectRK7SkPaint(%class.SkDraw* %87, %class.SkRRect* dereferenceable(52) %106, %class.SkPaint* nonnull dereferenceable(72) %7) #6
  br label %123

107:                                              ; preds = %102, %100
  %108 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #6
  %109 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %10) #6
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %1, %class.SkPath* nonnull %10, i1 zeroext true) #6
  %110 = icmp eq i32 %3, 5
  %111 = icmp eq i8 %5, -1
  %112 = and i1 %110, %111
  br i1 %112, label %113, label %121

113:                                              ; preds = %107
  %114 = load i32, i32* %15, align 8
  %115 = and i32 %114, 192
  %116 = icmp ne i32 %115, 64
  %117 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 6
  %118 = load float, float* %117, align 8
  %119 = fcmp ule float %118, 0.000000e+00
  %120 = or i1 %119, %116
  br label %121

121:                                              ; preds = %107, %113
  %122 = phi i1 [ %120, %113 ], [ false, %107 ]
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %87, %class.SkPath* nonnull dereferenceable(16) %10, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkMatrix* null, i1 zeroext false, i1 zeroext %122, %class.SkBlitter* null) #6
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #6
  br label %123

123:                                              ; preds = %102, %102, %102, %121, %105, %103, %101
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #6
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #6
  ret void
}

declare void @_ZNK6SkDraw9drawPaintERK7SkPaint(%class.SkDraw*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape*, %class.SkPath*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14GrSWMaskHelper4initERK7SkIRect(%class.GrSWMaskHelper*, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %struct.SkImageInfo, align 16
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sitofp i32 %8 to float
  %10 = fsub float -0.000000e+00, %9
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = fsub float -0.000000e+00, %13
  %15 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 0
  store float %10, float* %15, align 8
  %16 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 0, i32 1
  store float %14, float* %16, align 4
  %17 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #6
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %7, align 4
  %22 = sub i32 %20, %21
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* %11, align 4
  %26 = sub i32 %24, %25
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %22 to i64
  %30 = or i64 %28, %29
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %31, align 8
  store i64 %30, i64* %18, align 8
  %32 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #6
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %34 = zext i32 %22 to i64
  %35 = or i64 %28, %34
  %36 = bitcast %struct.SkImageInfo* %6 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %36, align 16, !alias.scope !17
  %37 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %38 = bitcast %struct.SkISize* %37 to i64*
  store i64 %35, i64* %38, align 16, !alias.scope !17
  %39 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 1
  %40 = load %class.SkAutoPixmapStorage*, %class.SkAutoPixmapStorage** %39, align 8
  %41 = call zeroext i1 @_ZN19SkAutoPixmapStorage8tryAllocERK11SkImageInfo(%class.SkAutoPixmapStorage* %40, %struct.SkImageInfo* nonnull dereferenceable(24) %6) #6
  br i1 %41, label %42, label %94

42:                                               ; preds = %2
  %43 = bitcast %class.SkAutoPixmapStorage** %39 to %class.SkPixmap**
  %44 = load %class.SkPixmap*, %class.SkPixmap** %43, align 8
  %45 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %46 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #6
  %47 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %44, i64 0, i32 2, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %44, i64 0, i32 2, i32 1, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %48 to i64
  %54 = or i64 %52, %53
  %55 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %54, i64* %56, align 8
  %57 = call zeroext i1 @_ZNK8SkPixmap5eraseEjRK7SkIRect(%class.SkPixmap* %44, i32 0, %struct.SkIRect* nonnull dereferenceable(16) %45) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #6
  %58 = load %class.SkPixmap*, %class.SkPixmap** %43, align 8
  %59 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 1
  %60 = bitcast %class.SkPixmap* %59 to i8*
  %61 = bitcast %class.SkPixmap* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 16, i1 false) #6
  %62 = icmp eq %class.SkPixmap* %59, %58
  br i1 %62, label %80, label %63

63:                                               ; preds = %42
  %64 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %58, i64 0, i32 2, i32 0, i32 0, i32 0
  %65 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %66 = icmp eq %class.SkColorSpace* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %67, %63
  %71 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %72 = load %class.SkColorSpace*, %class.SkColorSpace** %71, align 8
  store %class.SkColorSpace* %65, %class.SkColorSpace** %71, align 8
  %73 = icmp eq %class.SkColorSpace* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = bitcast %class.SkColorSpace* %72 to i8*
  call void @_ZdlPv(i8* %79) #7
  br label %80

80:                                               ; preds = %42, %70, %74, %78
  %81 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 1, i32 2, i32 0, i32 1
  %82 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %58, i64 0, i32 2, i32 0, i32 1
  %83 = bitcast i32* %82 to i64*
  %84 = bitcast i32* %81 to i64*
  %85 = load i64, i64* %83, align 8
  store i64 %85, i64* %84, align 8
  %86 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 1, i32 2, i32 1
  %87 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %58, i64 0, i32 2, i32 1
  %88 = bitcast %struct.SkISize* %87 to i64*
  %89 = bitcast %struct.SkISize* %86 to i64*
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 4
  %92 = call zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip* %91, %struct.SkIRect* nonnull dereferenceable(16) %5) #6
  %93 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %0, i64 0, i32 3, i32 3
  store %class.SkRasterClip* %91, %class.SkRasterClip** %93, align 8
  br label %94

94:                                               ; preds = %2, %80
  %95 = phi i1 [ true, %80 ], [ false, %2 ]
  %96 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 16
  %97 = icmp eq %class.SkColorSpace* %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = bitcast %class.SkColorSpace* %96 to i8*
  call void @_ZdlPv(i8* %103) #7
  br label %104

104:                                              ; preds = %94, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #6
  ret i1 %95
}

declare zeroext i1 @_ZN19SkAutoPixmapStorage8tryAllocERK11SkImageInfo(%class.SkAutoPixmapStorage*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrSWMaskHelper13toTextureViewEP18GrRecordingContext12SkBackingFit(%class.GrSurfaceProxyView* noalias nocapture sret, %class.GrSWMaskHelper* nocapture readonly, %class.GrRecordingContext*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.GrSWMaskHelper, %class.GrSWMaskHelper* %1, i64 0, i32 1
  %11 = bitcast %class.SkAutoPixmapStorage** %10 to %class.SkPixmap**
  %12 = load %class.SkPixmap*, %class.SkPixmap** %11, align 8
  %13 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %12, i64 0, i32 2, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %12, i64 0, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = shl nuw i64 %17, 32
  %19 = zext i32 %14 to i64
  %20 = or i64 %18, %19
  %21 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %21, align 16, !alias.scope !22
  %22 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %23 = bitcast %struct.SkISize* %22 to i64*
  store i64 %20, i64* %23, align 16, !alias.scope !22
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %12, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %26) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #6
  %27 = load %class.SkAutoPixmapStorage*, %class.SkAutoPixmapStorage** %10, align 8
  %28 = call i8* @_ZN19SkAutoPixmapStorage12detachPixelsEv(%class.SkAutoPixmapStorage* %27) #6
  %29 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i8* %28, i64 %25, void (i8*, i8*)* nonnull @"_ZZN14GrSWMaskHelper13toTextureViewEP18GrRecordingContext12SkBackingFitEN3$_08__invokeEPvS4_", i8* null) #6
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %6) #6
  %30 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* nonnull sret %7, %class.GrRecordingContext* %2, %class.SkBitmap* nonnull dereferenceable(56) %6, i1 zeroext false, i32 %3, i1 zeroext true) #6
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::tuple"* %7 to i64*
  %33 = load i64, i64* %32, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %31, align 8
  %34 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %40 = load i16, i16* %39, align 4
  store i16 %40, i16* %38, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %26) #6
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 16
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %4
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorSpace* %41 to i8*
  call void @_ZdlPv(i8* %48) #7
  br label %49

49:                                               ; preds = %4, %43, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare i8* @_ZN19SkAutoPixmapStorage12detachPixelsEv(%class.SkAutoPixmapStorage*) local_unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

declare void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSimpleMatrixProviderD0Ev(%class.SkSimpleMatrixProvider*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %class.SkSimpleMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkSimpleMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkSimpleMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #2

declare i32 @_ZNK11SkStrokeRec8getStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

declare void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, i1 zeroext, i1 zeroext, %class.SkBlitter*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkPixmap5eraseEjRK7SkIRect(%class.SkPixmap*, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN14GrSWMaskHelper13toTextureViewEP18GrRecordingContext12SkBackingFitEN3$_08__invokeEPvS4_"(i8*, i8* nocapture readnone) #4 align 2 {
  tail call void @_Z7sk_freePv(i8* %0) #6
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL9get_paintN8SkRegion2OpE4GrAAh: argument 0"}
!4 = distinct !{!4, !"_ZL9get_paintN8SkRegion2OpE4GrAAh"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZL9get_paintN8SkRegion2OpE4GrAAh: argument 0"}
!7 = distinct !{!7, !"_ZL9get_paintN8SkRegion2OpE4GrAAh"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZL9get_paintN8SkRegion2OpE4GrAAh: argument 0"}
!10 = distinct !{!10, !"_ZL9get_paintN8SkRegion2OpE4GrAAh"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK7GrStyle13refPathEffectEv: argument 0"}
!13 = distinct !{!13, !"_ZNK7GrStyle13refPathEffectEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZL9get_paintN8SkRegion2OpE4GrAAh: argument 0"}
!16 = distinct !{!16, !"_ZL9get_paintN8SkRegion2OpE4GrAAh"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!19 = distinct !{!19, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo6MakeA8Eii"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!24 = distinct !{!24, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!25 = distinct !{!25, !26, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!26 = distinct !{!26, !"_ZN11SkImageInfo6MakeA8Eii"}
