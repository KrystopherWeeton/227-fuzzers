; ModuleID = '../../media/base/stream_parser_buffer.cc'
source_filename = "../../media/base/stream_parser_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::StreamParserBuffer" = type <{ %"class.media::DecoderBuffer.base", [7 x i8], %"class.media::DecodeTimestamp", i32, i32, i32, [4 x i8], %class.scoped_refptr, i8, [7 x i8] }>
%"class.media::DecoderBuffer.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", %"class.base::TimeDelta", %"class.base::TimeDelta", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"struct.std::__1::pair", i8 }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.media::ReadOnlyUnalignedMapping"* }
%"class.media::ReadOnlyUnalignedMapping" = type { %"class.base::ReadOnlySharedMemoryMapping", i64, i64 }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.media::UnalignedSharedMemory"* }
%"class.media::UnalignedSharedMemory" = type { %"class.base::subtle::PlatformSharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping", i8, i64, i8* }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.media::DecryptConfig"* }
%"class.media::DecryptConfig" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.absl::optional", [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair.20" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.media::SubsampleEntry"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.media::EncryptionPattern" }
%"class.media::EncryptionPattern" = type { i32, i32 }
%"struct.std::__1::pair" = type { %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.media::DecodeTimestamp" = type { %"class.base::TimeDelta" }
%class.scoped_refptr = type { %"class.media::StreamParserBuffer"* }
%"class.media::DecoderBuffer" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr", %"class.base::TimeDelta", %"class.base::TimeDelta", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"struct.std::__1::pair", i8, [7 x i8] }>

@_ZTVN5media18StreamParserBufferE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::StreamParserBuffer"*, i64)* @_ZN5media18StreamParserBuffer13set_timestampEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.media::StreamParserBuffer"*)* @_ZN5media18StreamParserBufferD2Ev to i8*), i8* bitcast (void (%"class.media::StreamParserBuffer"*)* @_ZN5media18StreamParserBufferD0Ev to i8*)] }, align 8

@_ZN5media18StreamParserBufferC1EPKhiS2_ibNS_13DemuxerStream4TypeEi = hidden unnamed_addr alias void (%"class.media::StreamParserBuffer"*, i8*, i32, i8*, i32, i1, i32, i32), void (%"class.media::StreamParserBuffer"*, i8*, i32, i8*, i32, i1, i32, i32)* @_ZN5media18StreamParserBufferC2EPKhiS2_ibNS_13DemuxerStream4TypeEi
@_ZN5media18StreamParserBufferD1Ev = hidden unnamed_addr alias void (%"class.media::StreamParserBuffer"*), void (%"class.media::StreamParserBuffer"*)* @_ZN5media18StreamParserBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.media::StreamParserBuffer"* @_ZN5media18StreamParserBuffer15CreateEOSBufferEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 152) #7
  %2 = bitcast i8* %1 to %"class.media::StreamParserBuffer"*
  %3 = bitcast i8* %1 to %"class.media::DecoderBuffer"*
  tail call void @_ZN5media13DecoderBufferC2EPKhmS2_m(%"class.media::DecoderBuffer"* nonnull %3, i8* null, i64 0, i8* null, i64 0) #8
  %4 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media18StreamParserBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 112
  %6 = bitcast i8* %5 to i64*
  store i64 -9223372036854775808, i64* %6, align 8, !alias.scope !2
  %7 = getelementptr inbounds i8, i8* %1, i64 120
  %8 = bitcast i8* %7 to i32*
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 124
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %1, i64 128
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %1, i64 136
  %14 = bitcast i8* %13 to %"class.media::StreamParserBuffer"**
  store %"class.media::StreamParserBuffer"* null, %"class.media::StreamParserBuffer"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %1, i64 144
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds i8, i8* %1, i64 8
  %17 = bitcast i8* %16 to i32*
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  ret %"class.media::StreamParserBuffer"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.media::StreamParserBuffer"* @_ZN5media18StreamParserBuffer8CopyFromEPKhibNS_13DemuxerStream4TypeEi(i8*, i32, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 152) #7
  %7 = bitcast i8* %6 to %"class.media::StreamParserBuffer"*
  %8 = bitcast i8* %6 to %"class.media::DecoderBuffer"*
  %9 = sext i32 %1 to i64
  tail call void @_ZN5media13DecoderBufferC2EPKhmS2_m(%"class.media::DecoderBuffer"* nonnull %8, i8* %0, i64 %9, i8* null, i64 0) #8
  %10 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media18StreamParserBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 112
  %12 = bitcast i8* %11 to i64*
  store i64 -9223372036854775808, i64* %12, align 8, !alias.scope !7
  %13 = getelementptr inbounds i8, i8* %6, i64 120
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 124
  %16 = bitcast i8* %15 to i32*
  store i32 %3, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %6, i64 128
  %18 = bitcast i8* %17 to i32*
  store i32 %4, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 136
  %20 = bitcast i8* %19 to %"class.media::StreamParserBuffer"**
  store %"class.media::StreamParserBuffer"* null, %"class.media::StreamParserBuffer"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 144
  store i8 0, i8* %21, align 8
  %22 = icmp eq i8* %0, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds i8, i8* %6, i64 32
  %25 = bitcast i8* %24 to i64*
  store i64 -9223372036854775808, i64* %25, align 8
  br label %26

26:                                               ; preds = %23, %5
  br i1 %2, label %27, label %29

27:                                               ; preds = %26
  %28 = getelementptr inbounds i8, i8* %6, i64 104
  store i8 1, i8* %28, align 8
  br label %29

29:                                               ; preds = %26, %27
  %30 = getelementptr inbounds i8, i8* %6, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  ret %"class.media::StreamParserBuffer"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.media::StreamParserBuffer"* @_ZN5media18StreamParserBuffer8CopyFromEPKhiS2_ibNS_13DemuxerStream4TypeEi(i8*, i32, i8*, i32, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = tail call i8* @_Znwm(i64 152) #7
  %9 = bitcast i8* %8 to %"class.media::StreamParserBuffer"*
  %10 = bitcast i8* %8 to %"class.media::DecoderBuffer"*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  tail call void @_ZN5media13DecoderBufferC2EPKhmS2_m(%"class.media::DecoderBuffer"* nonnull %10, i8* %0, i64 %11, i8* %2, i64 %12) #8
  %13 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media18StreamParserBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 112
  %15 = bitcast i8* %14 to i64*
  store i64 -9223372036854775808, i64* %15, align 8, !alias.scope !12
  %16 = getelementptr inbounds i8, i8* %8, i64 120
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 124
  %19 = bitcast i8* %18 to i32*
  store i32 %5, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %8, i64 128
  %21 = bitcast i8* %20 to i32*
  store i32 %6, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 136
  %23 = bitcast i8* %22 to %"class.media::StreamParserBuffer"**
  store %"class.media::StreamParserBuffer"* null, %"class.media::StreamParserBuffer"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %8, i64 144
  store i8 0, i8* %24, align 8
  %25 = icmp eq i8* %0, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %7
  %27 = getelementptr inbounds i8, i8* %8, i64 32
  %28 = bitcast i8* %27 to i64*
  store i64 -9223372036854775808, i64* %28, align 8
  br label %29

29:                                               ; preds = %26, %7
  br i1 %4, label %30, label %32

30:                                               ; preds = %29
  %31 = getelementptr inbounds i8, i8* %8, i64 104
  store i8 1, i8* %31, align 8
  br label %32

32:                                               ; preds = %29, %30
  %33 = getelementptr inbounds i8, i8* %8, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  ret %"class.media::StreamParserBuffer"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media18StreamParserBuffer18GetDecodeTimestampEv(%"class.media::DecodeTimestamp"* noalias nocapture sret, %"class.media::StreamParserBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %1, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, -9223372036854775808
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %1, i64 0, i32 0, i32 4, i32 0
  %8 = load i64, i64* %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i64 [ %8, %6 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.media::DecodeTimestamp", %"class.media::DecodeTimestamp"* %0, i64 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBuffer18SetDecodeTimestampENS_15DecodeTimestampE(%"class.media::StreamParserBuffer"*, %"class.media::DecodeTimestamp"* readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.media::DecodeTimestamp", align 8
  %4 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 2
  %5 = icmp eq %"class.media::DecodeTimestamp"* %4, %1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.media::DecodeTimestamp", %"class.media::DecodeTimestamp"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.media::DecodeTimestamp", %"class.media::DecodeTimestamp"* %4, i64 0, i32 0, i32 0
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  br label %10

10:                                               ; preds = %2, %6
  %11 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 7, i32 0
  %12 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %11, align 8
  %13 = icmp eq %"class.media::StreamParserBuffer"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.media::DecodeTimestamp", %"class.media::DecodeTimestamp"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.media::DecodeTimestamp", %"class.media::DecodeTimestamp"* %3, i64 0, i32 0, i32 0
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  call void @_ZN5media18StreamParserBuffer18SetDecodeTimestampENS_15DecodeTimestampE(%"class.media::StreamParserBuffer"* nonnull %12, %"class.media::DecodeTimestamp"* nonnull %3)
  br label %18

18:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBufferC2EPKhiS2_ibNS_13DemuxerStream4TypeEi(%"class.media::StreamParserBuffer"*, i8*, i32, i8*, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.media::StreamParserBuffer"* %0 to %"class.media::DecoderBuffer"*
  %10 = sext i32 %2 to i64
  %11 = sext i32 %4 to i64
  tail call void @_ZN5media13DecoderBufferC2EPKhmS2_m(%"class.media::DecoderBuffer"* %9, i8* %1, i64 %10, i8* %3, i64 %11) #8
  %12 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media18StreamParserBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 -9223372036854775808, i64* %13, align 8, !alias.scope !17
  %14 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 3
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 4
  store i32 %6, i32* %15, align 4
  %16 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 5
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 7, i32 0
  store %"class.media::StreamParserBuffer"* null, %"class.media::StreamParserBuffer"** %17, align 8
  %18 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 8
  store i8 0, i8* %18, align 8
  %19 = icmp eq i8* %1, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 0, i32 5, i32 0
  store i64 -9223372036854775808, i64* %21, align 8
  br label %22

22:                                               ; preds = %8, %20
  br i1 %5, label %23, label %25

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 0, i32 13
  store i8 1, i8* %24, align 8
  br label %25

25:                                               ; preds = %23, %22
  ret void
}

declare void @_ZN5media13DecoderBufferC2EPKhmS2_m(%"class.media::DecoderBuffer"*, i8*, i64, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBufferD2Ev(%"class.media::StreamParserBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media18StreamParserBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %3, align 8
  %5 = icmp eq %"class.media::StreamParserBuffer"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.media::DecoderBuffer"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.media::DecoderBuffer"*)***
  %15 = load void (%"class.media::DecoderBuffer"*)**, void (%"class.media::DecoderBuffer"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.media::DecoderBuffer"*)*, void (%"class.media::DecoderBuffer"*)** %15, i64 2
  %17 = load void (%"class.media::DecoderBuffer"*)*, void (%"class.media::DecoderBuffer"*)** %16, align 8
  tail call void %17(%"class.media::DecoderBuffer"* nonnull %13) #8
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.media::StreamParserBuffer"* %0 to %"class.media::DecoderBuffer"*
  tail call void @_ZN5media13DecoderBufferD2Ev(%"class.media::DecoderBuffer"* %19) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media13DecoderBufferD2Ev(%"class.media::DecoderBuffer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBufferD0Ev(%"class.media::StreamParserBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media18StreamParserBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 7, i32 0
  %4 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %3, align 8
  %5 = icmp eq %"class.media::StreamParserBuffer"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.media::DecoderBuffer"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.media::DecoderBuffer"*)***
  %15 = load void (%"class.media::DecoderBuffer"*)**, void (%"class.media::DecoderBuffer"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.media::DecoderBuffer"*)*, void (%"class.media::DecoderBuffer"*)** %15, i64 2
  %17 = load void (%"class.media::DecoderBuffer"*)*, void (%"class.media::DecoderBuffer"*)** %16, align 8
  tail call void %17(%"class.media::DecoderBuffer"* nonnull %13) #8
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.media::StreamParserBuffer"* %0 to %"class.media::DecoderBuffer"*
  tail call void @_ZN5media13DecoderBufferD2Ev(%"class.media::DecoderBuffer"* %19) #8
  %20 = bitcast %"class.media::StreamParserBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5media18StreamParserBuffer11GetConfigIdEv(%"class.media::StreamParserBuffer"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBuffer11SetConfigIdEi(%"class.media::StreamParserBuffer"* nocapture, i32) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = phi %"class.media::StreamParserBuffer"* [ %0, %2 ], [ %7, %3 ]
  %5 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %4, i64 0, i32 3
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %4, i64 0, i32 7, i32 0
  %7 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %6, align 8
  %8 = icmp eq %"class.media::StreamParserBuffer"* %7, null
  br i1 %8, label %9, label %3

9:                                                ; preds = %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5media18StreamParserBuffer11GetTypeNameEv(%"class.media::StreamParserBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = tail call i8* @_ZN5media13DemuxerStream11GetTypeNameENS0_4TypeE(i32 %3) #8
  ret i8* %4
}

declare i8* @_ZN5media13DemuxerStream11GetTypeNameENS0_4TypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBuffer16SetPrerollBufferE13scoped_refptrIS0_E(%"class.media::StreamParserBuffer"* nocapture, %"class.media::StreamParserBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.media::DecodeTimestamp", align 8
  %4 = ptrtoint %"class.media::StreamParserBuffer"* %1 to i64
  %5 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 7
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %8 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.media::StreamParserBuffer"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.media::DecoderBuffer"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.media::DecoderBuffer"*)***
  %19 = load void (%"class.media::DecoderBuffer"*)**, void (%"class.media::DecoderBuffer"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.media::DecoderBuffer"*)*, void (%"class.media::DecoderBuffer"*)** %19, i64 2
  %21 = load void (%"class.media::DecoderBuffer"*)*, void (%"class.media::DecoderBuffer"*)** %20, align 8
  tail call void %21(%"class.media::DecoderBuffer"* nonnull %17) #8
  br label %22

22:                                               ; preds = %2, %10, %15
  %23 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %7, align 8
  %24 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 0, i32 4, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.media::StreamParserBuffer"* %23 to void (%"class.media::StreamParserBuffer"*, i64)***
  %27 = load void (%"class.media::StreamParserBuffer"*, i64)**, void (%"class.media::StreamParserBuffer"*, i64)*** %26, align 8
  %28 = load void (%"class.media::StreamParserBuffer"*, i64)*, void (%"class.media::StreamParserBuffer"*, i64)** %27, align 8
  tail call void %28(%"class.media::StreamParserBuffer"* %23, i64 %25) #8
  %29 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %7, align 8
  %30 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %32, %22
  %33 = phi %"class.media::StreamParserBuffer"* [ %29, %22 ], [ %36, %32 ]
  %34 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %33, i64 0, i32 3
  store i32 %31, i32* %34, align 8
  %35 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %33, i64 0, i32 7, i32 0
  %36 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %35, align 8
  %37 = icmp eq %"class.media::StreamParserBuffer"* %36, null
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %7, align 8
  %40 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8, !noalias !22
  %42 = icmp eq i64 %41, -9223372036854775808
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = load i64, i64* %24, align 8, !noalias !22
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i64 [ %44, %43 ], [ %41, %38 ]
  %47 = getelementptr inbounds %"class.media::DecodeTimestamp", %"class.media::DecodeTimestamp"* %3, i64 0, i32 0, i32 0
  store i64 %46, i64* %47, align 8, !alias.scope !22
  call void @_ZN5media18StreamParserBuffer18SetDecodeTimestampENS_15DecodeTimestampE(%"class.media::StreamParserBuffer"* %39, %"class.media::DecodeTimestamp"* nonnull %3)
  %48 = bitcast %class.scoped_refptr* %5 to %"class.media::DecoderBuffer"**
  %49 = load %"class.media::DecoderBuffer"*, %"class.media::DecoderBuffer"** %48, align 8
  %50 = getelementptr inbounds %"class.media::DecoderBuffer", %"class.media::DecoderBuffer"* %49, i64 0, i32 12, i32 0, i32 0
  %51 = bitcast i64* %50 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %51, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media18StreamParserBuffer13set_timestampEN4base9TimeDeltaE(%"class.media::StreamParserBuffer"*, i64) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.media::StreamParserBuffer"* %0 to %"class.media::DecoderBuffer"*
  tail call void @_ZN5media13DecoderBuffer13set_timestampEN4base9TimeDeltaE(%"class.media::DecoderBuffer"* %3, i64 %1) #8
  %4 = getelementptr inbounds %"class.media::StreamParserBuffer", %"class.media::StreamParserBuffer"* %0, i64 0, i32 7, i32 0
  %5 = load %"class.media::StreamParserBuffer"*, %"class.media::StreamParserBuffer"** %4, align 8
  %6 = icmp eq %"class.media::StreamParserBuffer"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.media::StreamParserBuffer"* %5 to void (%"class.media::StreamParserBuffer"*, i64)***
  %9 = load void (%"class.media::StreamParserBuffer"*, i64)**, void (%"class.media::StreamParserBuffer"*, i64)*** %8, align 8
  %10 = load void (%"class.media::StreamParserBuffer"*, i64)*, void (%"class.media::StreamParserBuffer"*, i64)** %9, align 8
  tail call void %10(%"class.media::StreamParserBuffer"* nonnull %5, i64 %1) #8
  br label %11

11:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN5media13DecoderBuffer13set_timestampEN4base9TimeDeltaE(%"class.media::DecoderBuffer"*, i64) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE: argument 0"}
!4 = distinct !{!4, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE"}
!5 = distinct !{!5, !6, !"_ZN5media18kNoDecodeTimestampEv: argument 0"}
!6 = distinct !{!6, !"_ZN5media18kNoDecodeTimestampEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE: argument 0"}
!9 = distinct !{!9, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE"}
!10 = distinct !{!10, !11, !"_ZN5media18kNoDecodeTimestampEv: argument 0"}
!11 = distinct !{!11, !"_ZN5media18kNoDecodeTimestampEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE: argument 0"}
!14 = distinct !{!14, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE"}
!15 = distinct !{!15, !16, !"_ZN5media18kNoDecodeTimestampEv: argument 0"}
!16 = distinct !{!16, !"_ZN5media18kNoDecodeTimestampEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE: argument 0"}
!19 = distinct !{!19, !"_ZN5media15DecodeTimestamp20FromPresentationTimeEN4base9TimeDeltaE"}
!20 = distinct !{!20, !21, !"_ZN5media18kNoDecodeTimestampEv: argument 0"}
!21 = distinct !{!21, !"_ZN5media18kNoDecodeTimestampEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5media18StreamParserBuffer18GetDecodeTimestampEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5media18StreamParserBuffer18GetDecodeTimestampEv"}
