; ModuleID = '../../third_party/libpng/intel/filter_sse2_intrinsics.c'
source_filename = "../../third_party/libpng/intel/filter_sse2_intrinsics.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_read_filter_row_sub3_sse2(%struct.png_row_info_struct* nocapture readonly, i8* nocapture, i8* nocapture readnone) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 3
  br i1 %6, label %7, label %23

7:                                                ; preds = %3, %7
  %8 = phi <16 x i8> [ %15, %7 ], [ zeroinitializer, %3 ]
  %9 = phi i64 [ %21, %7 ], [ %5, %3 ]
  %10 = phi i8* [ %20, %7 ], [ %1, %3 ]
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 1
  %13 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %12, i32 0
  %14 = bitcast <4 x i32> %13 to <16 x i8>
  %15 = add <16 x i8> %8, %14
  %16 = bitcast <16 x i8> %15 to <4 x i32>
  %17 = extractelement <4 x i32> %16, i32 0
  %18 = bitcast i8* %10 to i24*
  %19 = trunc i32 %17 to i24
  store i24 %19, i24* %18, align 1
  %20 = getelementptr inbounds i8, i8* %10, i64 3
  %21 = add i64 %9, -3
  %22 = icmp ugt i64 %21, 3
  br i1 %22, label %7, label %25

23:                                               ; preds = %3
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %7, %23
  %26 = phi <16 x i8> [ zeroinitializer, %23 ], [ %15, %7 ]
  %27 = phi i8* [ %1, %23 ], [ %20, %7 ]
  %28 = bitcast i8* %27 to i24*
  %29 = load i24, i24* %28, align 1
  %30 = zext i24 %29 to i32
  %31 = insertelement <4 x i32> undef, i32 %30, i32 0
  %32 = bitcast <4 x i32> %31 to <16 x i8>
  %33 = add <16 x i8> %26, %32
  %34 = bitcast <16 x i8> %33 to <4 x i32>
  %35 = extractelement <4 x i32> %34, i32 0
  %36 = trunc i32 %35 to i24
  store i24 %36, i24* %28, align 1
  br label %37

37:                                               ; preds = %23, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_read_filter_row_sub4_sse2(%struct.png_row_info_struct* nocapture readonly, i8* nocapture, i8* nocapture readnone) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = icmp ugt i64 %6, 4
  br i1 %7, label %8, label %45

8:                                                ; preds = %3
  %9 = add i64 %5, -1
  %10 = and i64 %9, 4
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = bitcast i8* %1 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %14, i32 0
  %16 = bitcast <4 x i32> %15 to <16 x i8>
  %17 = getelementptr inbounds i8, i8* %1, i64 4
  br label %18

18:                                               ; preds = %12, %8
  %19 = phi <16 x i8> [ zeroinitializer, %8 ], [ %16, %12 ]
  %20 = phi i64 [ %6, %8 ], [ %5, %12 ]
  %21 = phi i8* [ %1, %8 ], [ %17, %12 ]
  %22 = icmp ult i64 %9, 4
  br i1 %22, label %45, label %23

23:                                               ; preds = %18, %23
  %24 = phi <16 x i8> [ %39, %23 ], [ %19, %18 ]
  %25 = phi i64 [ %43, %23 ], [ %20, %18 ]
  %26 = phi i8* [ %42, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 1
  %29 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %28, i32 0
  %30 = bitcast <4 x i32> %29 to <16 x i8>
  %31 = add <16 x i8> %24, %30
  %32 = bitcast <16 x i8> %31 to <4 x i32>
  %33 = extractelement <4 x i32> %32, i32 0
  store i32 %33, i32* %27, align 1
  %34 = getelementptr inbounds i8, i8* %26, i64 4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %36, i32 0
  %38 = bitcast <4 x i32> %37 to <16 x i8>
  %39 = add <16 x i8> %31, %38
  %40 = bitcast <16 x i8> %39 to <4 x i32>
  %41 = extractelement <4 x i32> %40, i32 0
  store i32 %41, i32* %35, align 1
  %42 = getelementptr inbounds i8, i8* %26, i64 8
  %43 = add i64 %25, -8
  %44 = icmp ugt i64 %43, 4
  br i1 %44, label %23, label %45

45:                                               ; preds = %18, %23, %3
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @cr_png_read_filter_row_avg3_sse2(%struct.png_row_info_struct* nocapture readonly, i8* nocapture, i8* nocapture readonly) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 3
  br i1 %6, label %7, label %37

7:                                                ; preds = %3, %7
  %8 = phi i8* [ %34, %7 ], [ %1, %3 ]
  %9 = phi i8* [ %33, %7 ], [ %2, %3 ]
  %10 = phi <2 x i64> [ %28, %7 ], [ zeroinitializer, %3 ]
  %11 = phi <16 x i8> [ %27, %7 ], [ zeroinitializer, %3 ]
  %12 = phi i64 [ %35, %7 ], [ %5, %3 ]
  %13 = bitcast i8* %9 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %14, i32 0
  %16 = bitcast <4 x i32> %15 to <2 x i64>
  %17 = bitcast i8* %8 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %18, i32 0
  %20 = bitcast <4 x i32> %15 to <16 x i8>
  %21 = tail call <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8> %11, <16 x i8> %20) #3
  %22 = xor <2 x i64> %10, %16
  %23 = bitcast <2 x i64> %22 to <16 x i8>
  %24 = and <16 x i8> %23, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %25 = sub <16 x i8> %21, %24
  %26 = bitcast <4 x i32> %19 to <16 x i8>
  %27 = add <16 x i8> %25, %26
  %28 = bitcast <16 x i8> %27 to <2 x i64>
  %29 = bitcast <16 x i8> %27 to <4 x i32>
  %30 = extractelement <4 x i32> %29, i32 0
  %31 = bitcast i8* %8 to i24*
  %32 = trunc i32 %30 to i24
  store i24 %32, i24* %31, align 1
  %33 = getelementptr inbounds i8, i8* %9, i64 3
  %34 = getelementptr inbounds i8, i8* %8, i64 3
  %35 = add i64 %12, -3
  %36 = icmp ugt i64 %35, 3
  br i1 %36, label %7, label %39

37:                                               ; preds = %3
  %38 = icmp eq i64 %5, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %7, %37
  %40 = phi i8* [ %1, %37 ], [ %34, %7 ]
  %41 = phi i8* [ %2, %37 ], [ %33, %7 ]
  %42 = phi <2 x i64> [ zeroinitializer, %37 ], [ %28, %7 ]
  %43 = phi <16 x i8> [ zeroinitializer, %37 ], [ %27, %7 ]
  %44 = bitcast i8* %41 to i24*
  %45 = load i24, i24* %44, align 1
  %46 = zext i24 %45 to i32
  %47 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %46, i32 0
  %48 = bitcast <4 x i32> %47 to <2 x i64>
  %49 = bitcast i8* %40 to i24*
  %50 = load i24, i24* %49, align 1
  %51 = zext i24 %50 to i32
  %52 = insertelement <4 x i32> undef, i32 %51, i32 0
  %53 = bitcast <4 x i32> %47 to <16 x i8>
  %54 = tail call <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8> %43, <16 x i8> %53) #3
  %55 = xor <2 x i64> %42, %48
  %56 = bitcast <2 x i64> %55 to <16 x i8>
  %57 = and <16 x i8> %56, <i8 1, i8 1, i8 1, i8 1, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>
  %58 = bitcast <4 x i32> %52 to <16 x i8>
  %59 = add <16 x i8> %54, %58
  %60 = sub <16 x i8> %59, %57
  %61 = bitcast <16 x i8> %60 to <4 x i32>
  %62 = extractelement <4 x i32> %61, i32 0
  %63 = trunc i32 %62 to i24
  store i24 %63, i24* %49, align 1
  br label %64

64:                                               ; preds = %37, %39
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @cr_png_read_filter_row_avg4_sse2(%struct.png_row_info_struct* nocapture readonly, i8* nocapture, i8* nocapture readonly) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = icmp ugt i64 %6, 4
  br i1 %7, label %8, label %36

8:                                                ; preds = %3, %8
  %9 = phi i8* [ %33, %8 ], [ %1, %3 ]
  %10 = phi <2 x i64> [ %29, %8 ], [ zeroinitializer, %3 ]
  %11 = phi <16 x i8> [ %28, %8 ], [ zeroinitializer, %3 ]
  %12 = phi i8* [ %32, %8 ], [ %2, %3 ]
  %13 = phi i64 [ %34, %8 ], [ %6, %3 ]
  %14 = bitcast i8* %12 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %15, i32 0
  %17 = bitcast <4 x i32> %16 to <2 x i64>
  %18 = bitcast i8* %9 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %19, i32 0
  %21 = bitcast <4 x i32> %16 to <16 x i8>
  %22 = tail call <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8> %11, <16 x i8> %21) #3
  %23 = xor <2 x i64> %10, %17
  %24 = bitcast <2 x i64> %23 to <16 x i8>
  %25 = and <16 x i8> %24, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %26 = sub <16 x i8> %22, %25
  %27 = bitcast <4 x i32> %20 to <16 x i8>
  %28 = add <16 x i8> %26, %27
  %29 = bitcast <16 x i8> %28 to <2 x i64>
  %30 = bitcast <16 x i8> %28 to <4 x i32>
  %31 = extractelement <4 x i32> %30, i32 0
  store i32 %31, i32* %18, align 1
  %32 = getelementptr inbounds i8, i8* %12, i64 4
  %33 = getelementptr inbounds i8, i8* %9, i64 4
  %34 = add i64 %13, -4
  %35 = icmp ugt i64 %34, 4
  br i1 %35, label %8, label %36

36:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @cr_png_read_filter_row_paeth3_sse2(%struct.png_row_info_struct* nocapture readonly, i8* nocapture, i8* nocapture readonly) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 3
  br i1 %6, label %7, label %70

7:                                                ; preds = %3, %7
  %8 = phi i8* [ %67, %7 ], [ %1, %3 ]
  %9 = phi i8* [ %66, %7 ], [ %2, %3 ]
  %10 = phi i64 [ %68, %7 ], [ %5, %3 ]
  %11 = phi <2 x i64> [ %18, %7 ], [ zeroinitializer, %3 ]
  %12 = phi <2 x i64> [ %59, %7 ], [ zeroinitializer, %3 ]
  %13 = bitcast i8* %9 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = insertelement <4 x i32> <i32 undef, i32 0, i32 undef, i32 undef>, i32 %14, i32 0
  %16 = bitcast <4 x i32> %15 to <16 x i8>
  %17 = shufflevector <16 x i8> %16, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %18 = bitcast <16 x i8> %17 to <2 x i64>
  %19 = bitcast i8* %8 to i32*
  %20 = load i32, i32* %19, align 1
  %21 = insertelement <4 x i32> <i32 undef, i32 0, i32 undef, i32 undef>, i32 %20, i32 0
  %22 = bitcast <4 x i32> %21 to <16 x i8>
  %23 = shufflevector <16 x i8> %22, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %24 = bitcast <16 x i8> %17 to <8 x i16>
  %25 = bitcast <2 x i64> %11 to <8 x i16>
  %26 = sub <8 x i16> %24, %25
  %27 = bitcast <2 x i64> %12 to <8 x i16>
  %28 = sub <8 x i16> %27, %25
  %29 = add <8 x i16> %26, %28
  %30 = icmp slt <8 x i16> %26, zeroinitializer
  %31 = sub <8 x i16> zeroinitializer, %26
  %32 = select <8 x i1> %30, <8 x i16> %31, <8 x i16> %26
  %33 = icmp slt <8 x i16> %28, zeroinitializer
  %34 = sub <8 x i16> zeroinitializer, %28
  %35 = select <8 x i1> %33, <8 x i16> %34, <8 x i16> %28
  %36 = icmp slt <8 x i16> %29, zeroinitializer
  %37 = sub <8 x i16> zeroinitializer, %29
  %38 = select <8 x i1> %36, <8 x i16> %37, <8 x i16> %29
  %39 = icmp slt <8 x i16> %32, %35
  %40 = select <8 x i1> %39, <8 x i16> %32, <8 x i16> %35
  %41 = icmp slt <8 x i16> %38, %40
  %42 = select <8 x i1> %41, <8 x i16> %38, <8 x i16> %40
  %43 = icmp eq <8 x i16> %42, %32
  %44 = sext <8 x i1> %43 to <8 x i16>
  %45 = bitcast <8 x i16> %44 to <2 x i64>
  %46 = icmp eq <8 x i16> %42, %35
  %47 = sext <8 x i1> %46 to <8 x i16>
  %48 = bitcast <8 x i16> %47 to <2 x i64>
  %49 = and <2 x i64> %48, %18
  %50 = xor <2 x i64> %48, <i64 -1, i64 -1>
  %51 = and <2 x i64> %11, %50
  %52 = or <2 x i64> %51, %49
  %53 = and <2 x i64> %12, %45
  %54 = xor <2 x i64> %45, <i64 -1, i64 -1>
  %55 = and <2 x i64> %52, %54
  %56 = or <2 x i64> %55, %53
  %57 = bitcast <2 x i64> %56 to <16 x i8>
  %58 = add <16 x i8> %23, %57
  %59 = bitcast <16 x i8> %58 to <2 x i64>
  %60 = bitcast <16 x i8> %58 to <8 x i16>
  %61 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %60, <8 x i16> undef) #3
  %62 = bitcast <16 x i8> %61 to <4 x i32>
  %63 = extractelement <4 x i32> %62, i32 0
  %64 = bitcast i8* %8 to i24*
  %65 = trunc i32 %63 to i24
  store i24 %65, i24* %64, align 1
  %66 = getelementptr inbounds i8, i8* %9, i64 3
  %67 = getelementptr inbounds i8, i8* %8, i64 3
  %68 = add i64 %10, -3
  %69 = icmp ugt i64 %68, 3
  br i1 %69, label %7, label %72

70:                                               ; preds = %3
  %71 = icmp eq i64 %5, 0
  br i1 %71, label %130, label %72

72:                                               ; preds = %7, %70
  %73 = phi i8* [ %1, %70 ], [ %67, %7 ]
  %74 = phi i8* [ %2, %70 ], [ %66, %7 ]
  %75 = phi <2 x i64> [ zeroinitializer, %70 ], [ %18, %7 ]
  %76 = phi <2 x i64> [ zeroinitializer, %70 ], [ %59, %7 ]
  %77 = bitcast i8* %74 to i24*
  %78 = load i24, i24* %77, align 1
  %79 = zext i24 %78 to i32
  %80 = insertelement <4 x i32> <i32 undef, i32 0, i32 undef, i32 undef>, i32 %79, i32 0
  %81 = bitcast <4 x i32> %80 to <16 x i8>
  %82 = shufflevector <16 x i8> %81, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %83 = bitcast <16 x i8> %82 to <2 x i64>
  %84 = bitcast i8* %73 to i24*
  %85 = load i24, i24* %84, align 1
  %86 = zext i24 %85 to i32
  %87 = insertelement <4 x i32> undef, i32 %86, i32 0
  %88 = bitcast <4 x i32> %87 to <16 x i8>
  %89 = shufflevector <16 x i8> %88, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %90 = bitcast <16 x i8> %82 to <8 x i16>
  %91 = bitcast <2 x i64> %75 to <8 x i16>
  %92 = sub <8 x i16> %90, %91
  %93 = bitcast <2 x i64> %76 to <8 x i16>
  %94 = sub <8 x i16> %93, %91
  %95 = add <8 x i16> %92, %94
  %96 = icmp slt <8 x i16> %92, zeroinitializer
  %97 = sub <8 x i16> zeroinitializer, %92
  %98 = select <8 x i1> %96, <8 x i16> %97, <8 x i16> %92
  %99 = icmp slt <8 x i16> %94, zeroinitializer
  %100 = sub <8 x i16> zeroinitializer, %94
  %101 = select <8 x i1> %99, <8 x i16> %100, <8 x i16> %94
  %102 = icmp slt <8 x i16> %95, zeroinitializer
  %103 = sub <8 x i16> zeroinitializer, %95
  %104 = select <8 x i1> %102, <8 x i16> %103, <8 x i16> %95
  %105 = icmp slt <8 x i16> %98, %101
  %106 = select <8 x i1> %105, <8 x i16> %98, <8 x i16> %101
  %107 = icmp slt <8 x i16> %104, %106
  %108 = select <8 x i1> %107, <8 x i16> %104, <8 x i16> %106
  %109 = icmp eq <8 x i16> %108, %98
  %110 = sext <8 x i1> %109 to <8 x i16>
  %111 = bitcast <8 x i16> %110 to <2 x i64>
  %112 = icmp eq <8 x i16> %108, %101
  %113 = sext <8 x i1> %112 to <8 x i16>
  %114 = bitcast <8 x i16> %113 to <2 x i64>
  %115 = and <2 x i64> %114, %83
  %116 = xor <2 x i64> %114, <i64 -1, i64 undef>
  %117 = and <2 x i64> %75, %116
  %118 = or <2 x i64> %117, %115
  %119 = and <2 x i64> %76, %111
  %120 = xor <2 x i64> %111, <i64 -1, i64 undef>
  %121 = and <2 x i64> %118, %120
  %122 = or <2 x i64> %121, %119
  %123 = bitcast <2 x i64> %122 to <16 x i8>
  %124 = add <16 x i8> %89, %123
  %125 = bitcast <16 x i8> %124 to <8 x i16>
  %126 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %125, <8 x i16> undef) #3
  %127 = bitcast <16 x i8> %126 to <4 x i32>
  %128 = extractelement <4 x i32> %127, i32 0
  %129 = trunc i32 %128 to i24
  store i24 %129, i24* %84, align 1
  br label %130

130:                                              ; preds = %70, %72
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @cr_png_read_filter_row_paeth4_sse2(%struct.png_row_info_struct* nocapture readonly, i8* nocapture, i8* nocapture readonly) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 4
  %7 = icmp ugt i64 %6, 4
  br i1 %7, label %8, label %69

8:                                                ; preds = %3, %8
  %9 = phi <2 x i64> [ %60, %8 ], [ zeroinitializer, %3 ]
  %10 = phi <2 x i64> [ %19, %8 ], [ zeroinitializer, %3 ]
  %11 = phi i64 [ %67, %8 ], [ %6, %3 ]
  %12 = phi i8* [ %65, %8 ], [ %2, %3 ]
  %13 = phi i8* [ %66, %8 ], [ %1, %3 ]
  %14 = bitcast i8* %12 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = insertelement <4 x i32> <i32 undef, i32 0, i32 undef, i32 undef>, i32 %15, i32 0
  %17 = bitcast <4 x i32> %16 to <16 x i8>
  %18 = shufflevector <16 x i8> %17, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %19 = bitcast <16 x i8> %18 to <2 x i64>
  %20 = bitcast i8* %13 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = insertelement <4 x i32> <i32 undef, i32 0, i32 undef, i32 undef>, i32 %21, i32 0
  %23 = bitcast <4 x i32> %22 to <16 x i8>
  %24 = shufflevector <16 x i8> %23, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>
  %25 = bitcast <16 x i8> %18 to <8 x i16>
  %26 = bitcast <2 x i64> %10 to <8 x i16>
  %27 = sub <8 x i16> %25, %26
  %28 = bitcast <2 x i64> %9 to <8 x i16>
  %29 = sub <8 x i16> %28, %26
  %30 = add <8 x i16> %27, %29
  %31 = icmp slt <8 x i16> %27, zeroinitializer
  %32 = sub <8 x i16> zeroinitializer, %27
  %33 = select <8 x i1> %31, <8 x i16> %32, <8 x i16> %27
  %34 = icmp slt <8 x i16> %29, zeroinitializer
  %35 = sub <8 x i16> zeroinitializer, %29
  %36 = select <8 x i1> %34, <8 x i16> %35, <8 x i16> %29
  %37 = icmp slt <8 x i16> %30, zeroinitializer
  %38 = sub <8 x i16> zeroinitializer, %30
  %39 = select <8 x i1> %37, <8 x i16> %38, <8 x i16> %30
  %40 = icmp slt <8 x i16> %33, %36
  %41 = select <8 x i1> %40, <8 x i16> %33, <8 x i16> %36
  %42 = icmp slt <8 x i16> %39, %41
  %43 = select <8 x i1> %42, <8 x i16> %39, <8 x i16> %41
  %44 = icmp eq <8 x i16> %43, %33
  %45 = sext <8 x i1> %44 to <8 x i16>
  %46 = bitcast <8 x i16> %45 to <2 x i64>
  %47 = icmp eq <8 x i16> %43, %36
  %48 = sext <8 x i1> %47 to <8 x i16>
  %49 = bitcast <8 x i16> %48 to <2 x i64>
  %50 = and <2 x i64> %49, %19
  %51 = xor <2 x i64> %49, <i64 -1, i64 -1>
  %52 = and <2 x i64> %10, %51
  %53 = or <2 x i64> %52, %50
  %54 = and <2 x i64> %9, %46
  %55 = xor <2 x i64> %46, <i64 -1, i64 -1>
  %56 = and <2 x i64> %53, %55
  %57 = or <2 x i64> %56, %54
  %58 = bitcast <2 x i64> %57 to <16 x i8>
  %59 = add <16 x i8> %24, %58
  %60 = bitcast <16 x i8> %59 to <2 x i64>
  %61 = bitcast <16 x i8> %59 to <8 x i16>
  %62 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %61, <8 x i16> undef) #3
  %63 = bitcast <16 x i8> %62 to <4 x i32>
  %64 = extractelement <4 x i32> %63, i32 0
  store i32 %64, i32* %20, align 1
  %65 = getelementptr inbounds i8, i8* %12, i64 4
  %66 = getelementptr inbounds i8, i8* %13, i64 4
  %67 = add i64 %11, -4
  %68 = icmp ugt i64 %67, 4
  br i1 %68, label %8, label %69

69:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.pavg.b(<16 x i8>, <16 x i8>) #2

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
