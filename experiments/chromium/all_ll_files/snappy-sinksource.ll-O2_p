; ModuleID = '../../third_party/snappy/src/snappy-sinksource.cc'
source_filename = "../../third_party/snappy/src/snappy-sinksource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.snappy::Source" = type { i32 (...)** }
%"class.snappy::Sink" = type { i32 (...)** }
%"class.snappy::ByteArraySource" = type { %"class.snappy::Source", i8*, i64 }
%"class.snappy::UncheckedByteArraySink" = type { %"class.snappy::Sink", i8* }

@_ZTVN6snappy4SinkE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.snappy::Sink"*)* @_ZN6snappy4SinkD2Ev to i8*), i8* bitcast (void (%"class.snappy::Sink"*)* @_ZN6snappy4SinkD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8* (%"class.snappy::Sink"*, i64, i8*)* @_ZN6snappy4Sink15GetAppendBufferEmPc to i8*), i8* bitcast (void (%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)* @_ZN6snappy4Sink22AppendAndTakeOwnershipEPcmPFvPvPKcmES2_ to i8*), i8* bitcast (i8* (%"class.snappy::Sink"*, i64, i64, i8*, i64, i64*)* @_ZN6snappy4Sink23GetAppendBufferVariableEmmPcmPm to i8*)] }, align 8
@_ZTVN6snappy6SourceE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.snappy::Source"*)* @_ZN6snappy6SourceD2Ev to i8*), i8* bitcast (void (%"class.snappy::Source"*)* @_ZN6snappy6SourceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6snappy15ByteArraySourceE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.snappy::Source"*)* @_ZN6snappy6SourceD2Ev to i8*), i8* bitcast (void (%"class.snappy::ByteArraySource"*)* @_ZN6snappy15ByteArraySourceD0Ev to i8*), i8* bitcast (i64 (%"class.snappy::ByteArraySource"*)* @_ZNK6snappy15ByteArraySource9AvailableEv to i8*), i8* bitcast (i8* (%"class.snappy::ByteArraySource"*, i64*)* @_ZN6snappy15ByteArraySource4PeekEPm to i8*), i8* bitcast (void (%"class.snappy::ByteArraySource"*, i64)* @_ZN6snappy15ByteArraySource4SkipEm to i8*)] }, align 8
@_ZTVN6snappy22UncheckedByteArraySinkE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.snappy::Sink"*)* @_ZN6snappy4SinkD2Ev to i8*), i8* bitcast (void (%"class.snappy::UncheckedByteArraySink"*)* @_ZN6snappy22UncheckedByteArraySinkD0Ev to i8*), i8* bitcast (void (%"class.snappy::UncheckedByteArraySink"*, i8*, i64)* @_ZN6snappy22UncheckedByteArraySink6AppendEPKcm to i8*), i8* bitcast (i8* (%"class.snappy::UncheckedByteArraySink"*, i64, i8*)* @_ZN6snappy22UncheckedByteArraySink15GetAppendBufferEmPc to i8*), i8* bitcast (void (%"class.snappy::UncheckedByteArraySink"*, i8*, i64, void (i8*, i8*, i64)*, i8*)* @_ZN6snappy22UncheckedByteArraySink22AppendAndTakeOwnershipEPcmPFvPvPKcmES2_ to i8*), i8* bitcast (i8* (%"class.snappy::UncheckedByteArraySink"*, i64, i64, i8*, i64, i64*)* @_ZN6snappy22UncheckedByteArraySink23GetAppendBufferVariableEmmPcmPm to i8*)] }, align 8

@_ZN6snappy6SourceD1Ev = hidden unnamed_addr alias void (%"class.snappy::Source"*), void (%"class.snappy::Source"*)* @_ZN6snappy6SourceD2Ev
@_ZN6snappy4SinkD1Ev = hidden unnamed_addr alias void (%"class.snappy::Sink"*), void (%"class.snappy::Sink"*)* @_ZN6snappy4SinkD2Ev
@_ZN6snappy15ByteArraySourceD2Ev = hidden unnamed_addr alias void (%"class.snappy::ByteArraySource"*), bitcast (void (%"class.snappy::Source"*)* @_ZN6snappy6SourceD2Ev to void (%"class.snappy::ByteArraySource"*)*)
@_ZN6snappy15ByteArraySourceD1Ev = hidden unnamed_addr alias void (%"class.snappy::ByteArraySource"*), bitcast (void (%"class.snappy::Source"*)* @_ZN6snappy6SourceD2Ev to void (%"class.snappy::ByteArraySource"*)*)
@_ZN6snappy22UncheckedByteArraySinkD2Ev = hidden unnamed_addr alias void (%"class.snappy::UncheckedByteArraySink"*), bitcast (void (%"class.snappy::Sink"*)* @_ZN6snappy4SinkD2Ev to void (%"class.snappy::UncheckedByteArraySink"*)*)
@_ZN6snappy22UncheckedByteArraySinkD1Ev = hidden unnamed_addr alias void (%"class.snappy::UncheckedByteArraySink"*), bitcast (void (%"class.snappy::Sink"*)* @_ZN6snappy4SinkD2Ev to void (%"class.snappy::UncheckedByteArraySink"*)*)

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6snappy6SourceD2Ev(%"class.snappy::Source"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6snappy6SourceD0Ev(%"class.snappy::Source"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6snappy4SinkD2Ev(%"class.snappy::Sink"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6snappy4SinkD0Ev(%"class.snappy::Sink"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN6snappy4Sink15GetAppendBufferEmPc(%"class.snappy::Sink"* nocapture readnone, i64, i8* readnone returned) unnamed_addr #0 align 2 {
  ret i8* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN6snappy4Sink23GetAppendBufferVariableEmmPcmPm(%"class.snappy::Sink"* nocapture readnone, i64, i64, i8* readnone returned, i64, i64* nocapture) unnamed_addr #3 align 2 {
  store i64 %4, i64* %5, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy4Sink22AppendAndTakeOwnershipEPcmPFvPvPKcmES2_(%"class.snappy::Sink"*, i8*, i64, void (i8*, i8*, i64)* nocapture, i8*) unnamed_addr #4 align 2 {
  %6 = bitcast %"class.snappy::Sink"* %0 to void (%"class.snappy::Sink"*, i8*, i64)***
  %7 = load void (%"class.snappy::Sink"*, i8*, i64)**, void (%"class.snappy::Sink"*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %7, i64 2
  %9 = load void (%"class.snappy::Sink"*, i8*, i64)*, void (%"class.snappy::Sink"*, i8*, i64)** %8, align 8
  tail call void %9(%"class.snappy::Sink"* %0, i8* %1, i64 %2) #10
  tail call void %3(i8* %4, i8* %1, i64 %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy15ByteArraySourceD0Ev(%"class.snappy::ByteArraySource"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.snappy::ByteArraySource"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6snappy15ByteArraySource9AvailableEv(%"class.snappy::ByteArraySource"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN6snappy15ByteArraySource4PeekEPm(%"class.snappy::ByteArraySource"* nocapture readonly, i64* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %1, align 8
  %5 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6snappy15ByteArraySource4SkipEm(%"class.snappy::ByteArraySource"* nocapture, i64) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.snappy::ByteArraySource", %"class.snappy::ByteArraySource"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 %1
  store i8* %8, i8** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy22UncheckedByteArraySinkD0Ev(%"class.snappy::UncheckedByteArraySink"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.snappy::UncheckedByteArraySink"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy22UncheckedByteArraySink6AppendEPKcm(%"class.snappy::UncheckedByteArraySink"* nocapture, i8* readonly, i64) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, %1
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %1, i64 %2, i1 false)
  %8 = load i8*, i8** %4, align 8
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi i8* [ %1, %3 ], [ %8, %7 ]
  %11 = getelementptr inbounds i8, i8* %10, i64 %2
  store i8* %11, i8** %4, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN6snappy22UncheckedByteArraySink15GetAppendBufferEmPc(%"class.snappy::UncheckedByteArraySink"* nocapture readonly, i64, i8* nocapture readnone) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6snappy22UncheckedByteArraySink22AppendAndTakeOwnershipEPcmPFvPvPKcmES2_(%"class.snappy::UncheckedByteArraySink"* nocapture, i8*, i64, void (i8*, i8*, i64)* nocapture, i8*) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, %1
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %1, i64 %2, i1 false)
  tail call void %3(i8* %4, i8* %1, i64 %2) #10
  %10 = load i8*, i8** %6, align 8
  br label %11

11:                                               ; preds = %5, %9
  %12 = phi i8* [ %1, %5 ], [ %10, %9 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 %2
  store i8* %13, i8** %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN6snappy22UncheckedByteArraySink23GetAppendBufferVariableEmmPcmPm(%"class.snappy::UncheckedByteArraySink"* nocapture readonly, i64, i64, i8* nocapture readnone, i64, i64* nocapture) unnamed_addr #7 align 2 {
  store i64 %2, i64* %5, align 8
  %7 = getelementptr inbounds %"class.snappy::UncheckedByteArraySink", %"class.snappy::UncheckedByteArraySink"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  ret i8* %8
}

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
