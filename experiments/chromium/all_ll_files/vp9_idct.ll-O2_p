; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/common/vp9_idct.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/common/vp9_idct.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.transform_2d = type { void (i32*, i32*)*, void (i32*, i32*)* }
%struct.highbd_transform_2d = type { void (i32*, i32*, i32)*, void (i32*, i32*, i32)* }

@vp9_iht4x4_16_add_c.IHT_4 = internal unnamed_addr constant [4 x %struct.transform_2d] [%struct.transform_2d { void (i32*, i32*)* @idct4_c, void (i32*, i32*)* @idct4_c }, %struct.transform_2d { void (i32*, i32*)* @iadst4_c, void (i32*, i32*)* @idct4_c }, %struct.transform_2d { void (i32*, i32*)* @idct4_c, void (i32*, i32*)* @iadst4_c }, %struct.transform_2d { void (i32*, i32*)* @iadst4_c, void (i32*, i32*)* @iadst4_c }], align 16
@IHT_8 = internal unnamed_addr constant [4 x %struct.transform_2d] [%struct.transform_2d { void (i32*, i32*)* @idct8_c, void (i32*, i32*)* @idct8_c }, %struct.transform_2d { void (i32*, i32*)* @iadst8_c, void (i32*, i32*)* @idct8_c }, %struct.transform_2d { void (i32*, i32*)* @idct8_c, void (i32*, i32*)* @iadst8_c }, %struct.transform_2d { void (i32*, i32*)* @iadst8_c, void (i32*, i32*)* @iadst8_c }], align 16
@IHT_16 = internal unnamed_addr constant [4 x %struct.transform_2d] [%struct.transform_2d { void (i32*, i32*)* @idct16_c, void (i32*, i32*)* @idct16_c }, %struct.transform_2d { void (i32*, i32*)* @iadst16_c, void (i32*, i32*)* @idct16_c }, %struct.transform_2d { void (i32*, i32*)* @idct16_c, void (i32*, i32*)* @iadst16_c }, %struct.transform_2d { void (i32*, i32*)* @iadst16_c, void (i32*, i32*)* @iadst16_c }], align 16
@vpx_idct8x8_12_add = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@vpx_idct32x32_34_add = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@vpx_idct32x32_135_add = external local_unnamed_addr global void (i32*, i8*, i32)*, align 8
@vp9_highbd_iht4x4_16_add_c.IHT_4 = internal unnamed_addr constant [4 x %struct.highbd_transform_2d] [%struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_idct4_c, void (i32*, i32*, i32)* @vpx_highbd_idct4_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_iadst4_c, void (i32*, i32*, i32)* @vpx_highbd_idct4_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_idct4_c, void (i32*, i32*, i32)* @vpx_highbd_iadst4_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_iadst4_c, void (i32*, i32*, i32)* @vpx_highbd_iadst4_c }], align 16
@HIGH_IHT_8 = internal unnamed_addr constant [4 x %struct.highbd_transform_2d] [%struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_idct8_c, void (i32*, i32*, i32)* @vpx_highbd_idct8_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_iadst8_c, void (i32*, i32*, i32)* @vpx_highbd_idct8_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_idct8_c, void (i32*, i32*, i32)* @vpx_highbd_iadst8_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_iadst8_c, void (i32*, i32*, i32)* @vpx_highbd_iadst8_c }], align 16
@HIGH_IHT_16 = internal unnamed_addr constant [4 x %struct.highbd_transform_2d] [%struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_idct16_c, void (i32*, i32*, i32)* @vpx_highbd_idct16_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_iadst16_c, void (i32*, i32*, i32)* @vpx_highbd_idct16_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_idct16_c, void (i32*, i32*, i32)* @vpx_highbd_iadst16_c }, %struct.highbd_transform_2d { void (i32*, i32*, i32)* @vpx_highbd_iadst16_c, void (i32*, i32*, i32)* @vpx_highbd_iadst16_c }], align 16
@vpx_highbd_idct4x4_16_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct8x8_12_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct8x8_64_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct16x16_10_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct16x16_38_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct16x16_256_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct32x32_34_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct32x32_135_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vpx_highbd_idct32x32_1024_add = external local_unnamed_addr global void (i32*, i16*, i32, i32)*, align 8
@vp9_highbd_iht4x4_16_add = external local_unnamed_addr global void (i32*, i16*, i32, i32, i32)*, align 8
@vp9_highbd_iht8x8_64_add = external local_unnamed_addr global void (i32*, i16*, i32, i32, i32)*, align 8
@vp9_highbd_iht16x16_256_add = external local_unnamed_addr global void (i32*, i16*, i32, i32, i32)*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iht4x4_16_add_c(i32*, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %5 = alloca [16 x i32], align 16
  %6 = alloca [4 x i32], align 16
  %7 = alloca [4 x i32], align 16
  %8 = bitcast [16 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 64, i1 false)
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 0
  %10 = bitcast [4 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  %11 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 0
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 1
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 2
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 3
  %15 = bitcast [4 x i32]* %7 to i8*
  %16 = bitcast [4 x i32]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #3
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %19 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  %21 = sext i32 %3 to i64
  %22 = getelementptr inbounds [4 x %struct.transform_2d], [4 x %struct.transform_2d]* @vp9_iht4x4_16_add_c.IHT_4, i64 0, i64 %21, i32 1
  %23 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 16, i1 false)
  %24 = load void (i32*, i32*)*, void (i32*, i32*)** %22, align 8
  call void %24(i32* %0, i32* nonnull %9) #3
  %25 = getelementptr inbounds i32, i32* %0, i64 4
  %26 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 4
  call void %24(i32* %25, i32* %26) #3
  %27 = getelementptr inbounds i32, i32* %0, i64 8
  %28 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 8
  call void %24(i32* %27, i32* %28) #3
  %29 = getelementptr inbounds i32, i32* %0, i64 12
  %30 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 12
  call void %24(i32* %29, i32* %30) #3
  %31 = getelementptr inbounds [4 x %struct.transform_2d], [4 x %struct.transform_2d]* @vp9_iht4x4_16_add_c.IHT_4, i64 0, i64 %21, i32 0
  %32 = load void (i32*, i32*)*, void (i32*, i32*)** %31, align 16
  %33 = sext i32 %2 to i64
  %34 = shl nsw i64 %33, 1
  %35 = mul nsw i64 %33, 3
  br label %36

36:                                               ; preds = %36, %4
  %37 = phi i64 [ 0, %4 ], [ %100, %36 ]
  %38 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %11, align 16
  %40 = add nuw nsw i64 %37, 4
  %41 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %12, align 4
  %43 = add nuw nsw i64 %37, 8
  %44 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 %43
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %13, align 8
  %46 = add nuw nsw i64 %37, 12
  %47 = getelementptr inbounds [16 x i32], [16 x i32]* %5, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %14, align 4
  call void %32(i32* nonnull %11, i32* nonnull %17) #3
  %49 = getelementptr inbounds i8, i8* %1, i64 %37
  %50 = load i8, i8* %49, align 1
  %51 = load i32, i32* %17, align 16
  %52 = add nsw i32 %51, 8
  %53 = ashr i32 %52, 4
  %54 = zext i8 %50 to i32
  %55 = add nsw i32 %53, %54
  %56 = icmp sgt i32 %55, 0
  %57 = select i1 %56, i32 %55, i32 0
  %58 = icmp slt i32 %57, 255
  %59 = select i1 %58, i32 %57, i32 255
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %49, align 1
  %61 = add nsw i64 %37, %33
  %62 = getelementptr inbounds i8, i8* %1, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = load i32, i32* %18, align 4
  %65 = add nsw i32 %64, 8
  %66 = ashr i32 %65, 4
  %67 = zext i8 %63 to i32
  %68 = add nsw i32 %66, %67
  %69 = icmp sgt i32 %68, 0
  %70 = select i1 %69, i32 %68, i32 0
  %71 = icmp slt i32 %70, 255
  %72 = select i1 %71, i32 %70, i32 255
  %73 = trunc i32 %72 to i8
  store i8 %73, i8* %62, align 1
  %74 = add nsw i64 %34, %37
  %75 = getelementptr inbounds i8, i8* %1, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = load i32, i32* %19, align 8
  %78 = add nsw i32 %77, 8
  %79 = ashr i32 %78, 4
  %80 = zext i8 %76 to i32
  %81 = add nsw i32 %79, %80
  %82 = icmp sgt i32 %81, 0
  %83 = select i1 %82, i32 %81, i32 0
  %84 = icmp slt i32 %83, 255
  %85 = select i1 %84, i32 %83, i32 255
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %75, align 1
  %87 = add nsw i64 %35, %37
  %88 = getelementptr inbounds i8, i8* %1, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = load i32, i32* %20, align 4
  %91 = add nsw i32 %90, 8
  %92 = ashr i32 %91, 4
  %93 = zext i8 %89 to i32
  %94 = add nsw i32 %92, %93
  %95 = icmp sgt i32 %94, 0
  %96 = select i1 %95, i32 %94, i32 0
  %97 = icmp slt i32 %96, 255
  %98 = select i1 %97, i32 %96, i32 255
  %99 = trunc i32 %98 to i8
  store i8 %99, i8* %88, align 1
  %100 = add nuw nsw i64 %37, 1
  %101 = icmp eq i64 %100, 4
  br i1 %101, label %102, label %36

102:                                              ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #3
  ret void
}

declare void @idct4_c(i32*, i32*) #1

declare void @iadst4_c(i32*, i32*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iht8x8_64_add_c(i32*, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %5 = alloca [64 x i32], align 16
  %6 = alloca [8 x i32], align 16
  %7 = alloca [8 x i32], align 16
  %8 = bitcast [64 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 0
  %10 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #3
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %17 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %18 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %19 = bitcast [8 x i32]* %7 to i8*
  %20 = bitcast [8 x i32]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #3
  %21 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 0
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 1
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 2
  %24 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 3
  %25 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 4
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 5
  %27 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 6
  %28 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 7
  %29 = sext i32 %3 to i64
  %30 = getelementptr inbounds [4 x %struct.transform_2d], [4 x %struct.transform_2d]* @IHT_8, i64 0, i64 %29, i32 0
  %31 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 32, i1 false)
  %32 = load void (i32*, i32*)*, void (i32*, i32*)** %30, align 16
  %33 = getelementptr inbounds [4 x %struct.transform_2d], [4 x %struct.transform_2d]* @IHT_8, i64 0, i64 %29, i32 1
  %34 = load void (i32*, i32*)*, void (i32*, i32*)** %33, align 8
  call void %34(i32* %0, i32* nonnull %9) #3
  %35 = getelementptr inbounds i32, i32* %0, i64 8
  %36 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 8
  call void %34(i32* %35, i32* %36) #3
  %37 = getelementptr inbounds i32, i32* %0, i64 16
  %38 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 16
  call void %34(i32* %37, i32* %38) #3
  %39 = getelementptr inbounds i32, i32* %0, i64 24
  %40 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 24
  call void %34(i32* %39, i32* %40) #3
  %41 = getelementptr inbounds i32, i32* %0, i64 32
  %42 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 32
  call void %34(i32* %41, i32* %42) #3
  %43 = getelementptr inbounds i32, i32* %0, i64 40
  %44 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 40
  call void %34(i32* %43, i32* %44) #3
  %45 = getelementptr inbounds i32, i32* %0, i64 48
  %46 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 48
  call void %34(i32* %45, i32* %46) #3
  %47 = getelementptr inbounds i32, i32* %0, i64 56
  %48 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 56
  call void %34(i32* %47, i32* %48) #3
  %49 = sext i32 %2 to i64
  %50 = shl nsw i64 %49, 1
  %51 = mul nsw i64 %49, 3
  %52 = shl nsw i64 %49, 2
  %53 = mul nsw i64 %49, 5
  %54 = mul nsw i64 %49, 6
  %55 = mul nsw i64 %49, 7
  br label %56

56:                                               ; preds = %56, %4
  %57 = phi i64 [ 0, %4 ], [ %184, %56 ]
  %58 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %11, align 16
  %60 = add nuw nsw i64 %57, 8
  %61 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %12, align 4
  %63 = add nuw nsw i64 %57, 16
  %64 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %13, align 8
  %66 = add nuw nsw i64 %57, 24
  %67 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %14, align 4
  %69 = add nuw nsw i64 %57, 32
  %70 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %15, align 16
  %72 = add nuw nsw i64 %57, 40
  %73 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %16, align 4
  %75 = add nuw nsw i64 %57, 48
  %76 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %17, align 8
  %78 = add nuw nsw i64 %57, 56
  %79 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %78
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %18, align 4
  call void %32(i32* nonnull %11, i32* nonnull %21) #3
  %81 = getelementptr inbounds i8, i8* %1, i64 %57
  %82 = load i8, i8* %81, align 1
  %83 = load i32, i32* %21, align 16
  %84 = add nsw i32 %83, 16
  %85 = ashr i32 %84, 5
  %86 = zext i8 %82 to i32
  %87 = add nsw i32 %85, %86
  %88 = icmp sgt i32 %87, 0
  %89 = select i1 %88, i32 %87, i32 0
  %90 = icmp slt i32 %89, 255
  %91 = select i1 %90, i32 %89, i32 255
  %92 = trunc i32 %91 to i8
  store i8 %92, i8* %81, align 1
  %93 = add nsw i64 %57, %49
  %94 = getelementptr inbounds i8, i8* %1, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = load i32, i32* %22, align 4
  %97 = add nsw i32 %96, 16
  %98 = ashr i32 %97, 5
  %99 = zext i8 %95 to i32
  %100 = add nsw i32 %98, %99
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  %103 = icmp slt i32 %102, 255
  %104 = select i1 %103, i32 %102, i32 255
  %105 = trunc i32 %104 to i8
  store i8 %105, i8* %94, align 1
  %106 = add nsw i64 %50, %57
  %107 = getelementptr inbounds i8, i8* %1, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = load i32, i32* %23, align 8
  %110 = add nsw i32 %109, 16
  %111 = ashr i32 %110, 5
  %112 = zext i8 %108 to i32
  %113 = add nsw i32 %111, %112
  %114 = icmp sgt i32 %113, 0
  %115 = select i1 %114, i32 %113, i32 0
  %116 = icmp slt i32 %115, 255
  %117 = select i1 %116, i32 %115, i32 255
  %118 = trunc i32 %117 to i8
  store i8 %118, i8* %107, align 1
  %119 = add nsw i64 %51, %57
  %120 = getelementptr inbounds i8, i8* %1, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = load i32, i32* %24, align 4
  %123 = add nsw i32 %122, 16
  %124 = ashr i32 %123, 5
  %125 = zext i8 %121 to i32
  %126 = add nsw i32 %124, %125
  %127 = icmp sgt i32 %126, 0
  %128 = select i1 %127, i32 %126, i32 0
  %129 = icmp slt i32 %128, 255
  %130 = select i1 %129, i32 %128, i32 255
  %131 = trunc i32 %130 to i8
  store i8 %131, i8* %120, align 1
  %132 = add nsw i64 %52, %57
  %133 = getelementptr inbounds i8, i8* %1, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = load i32, i32* %25, align 16
  %136 = add nsw i32 %135, 16
  %137 = ashr i32 %136, 5
  %138 = zext i8 %134 to i32
  %139 = add nsw i32 %137, %138
  %140 = icmp sgt i32 %139, 0
  %141 = select i1 %140, i32 %139, i32 0
  %142 = icmp slt i32 %141, 255
  %143 = select i1 %142, i32 %141, i32 255
  %144 = trunc i32 %143 to i8
  store i8 %144, i8* %133, align 1
  %145 = add nsw i64 %53, %57
  %146 = getelementptr inbounds i8, i8* %1, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = load i32, i32* %26, align 4
  %149 = add nsw i32 %148, 16
  %150 = ashr i32 %149, 5
  %151 = zext i8 %147 to i32
  %152 = add nsw i32 %150, %151
  %153 = icmp sgt i32 %152, 0
  %154 = select i1 %153, i32 %152, i32 0
  %155 = icmp slt i32 %154, 255
  %156 = select i1 %155, i32 %154, i32 255
  %157 = trunc i32 %156 to i8
  store i8 %157, i8* %146, align 1
  %158 = add nsw i64 %54, %57
  %159 = getelementptr inbounds i8, i8* %1, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = load i32, i32* %27, align 8
  %162 = add nsw i32 %161, 16
  %163 = ashr i32 %162, 5
  %164 = zext i8 %160 to i32
  %165 = add nsw i32 %163, %164
  %166 = icmp sgt i32 %165, 0
  %167 = select i1 %166, i32 %165, i32 0
  %168 = icmp slt i32 %167, 255
  %169 = select i1 %168, i32 %167, i32 255
  %170 = trunc i32 %169 to i8
  store i8 %170, i8* %159, align 1
  %171 = add nsw i64 %55, %57
  %172 = getelementptr inbounds i8, i8* %1, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = load i32, i32* %28, align 4
  %175 = add nsw i32 %174, 16
  %176 = ashr i32 %175, 5
  %177 = zext i8 %173 to i32
  %178 = add nsw i32 %176, %177
  %179 = icmp sgt i32 %178, 0
  %180 = select i1 %179, i32 %178, i32 0
  %181 = icmp slt i32 %180, 255
  %182 = select i1 %181, i32 %180, i32 255
  %183 = trunc i32 %182 to i8
  store i8 %183, i8* %172, align 1
  %184 = add nuw nsw i64 %57, 1
  %185 = icmp eq i64 %184, 8
  br i1 %185, label %186, label %56

186:                                              ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iht16x16_256_add_c(i32*, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %5 = alloca [256 x i32], align 16
  %6 = alloca [16 x i32], align 16
  %7 = alloca [16 x i32], align 16
  %8 = bitcast [256 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  %9 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 0
  %10 = bitcast [16 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 64, i1 false)
  %11 = bitcast [16 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 64, i1 false)
  %12 = sext i32 %3 to i64
  %13 = getelementptr inbounds [4 x %struct.transform_2d], [4 x %struct.transform_2d]* @IHT_16, i64 0, i64 %12, i32 0
  %14 = load void (i32*, i32*)*, void (i32*, i32*)** %13, align 16
  %15 = getelementptr inbounds [4 x %struct.transform_2d], [4 x %struct.transform_2d]* @IHT_16, i64 0, i64 %12, i32 1
  %16 = load void (i32*, i32*)*, void (i32*, i32*)** %15, align 8
  call void %16(i32* %0, i32* nonnull %9) #3
  %17 = getelementptr inbounds i32, i32* %0, i64 16
  %18 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 16
  call void %16(i32* %17, i32* %18) #3
  %19 = getelementptr inbounds i32, i32* %0, i64 32
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 32
  call void %16(i32* %19, i32* %20) #3
  %21 = getelementptr inbounds i32, i32* %0, i64 48
  %22 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 48
  call void %16(i32* %21, i32* %22) #3
  %23 = getelementptr inbounds i32, i32* %0, i64 64
  %24 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 64
  call void %16(i32* %23, i32* %24) #3
  %25 = getelementptr inbounds i32, i32* %0, i64 80
  %26 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 80
  call void %16(i32* %25, i32* %26) #3
  %27 = getelementptr inbounds i32, i32* %0, i64 96
  %28 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 96
  call void %16(i32* %27, i32* %28) #3
  %29 = getelementptr inbounds i32, i32* %0, i64 112
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 112
  call void %16(i32* %29, i32* %30) #3
  %31 = getelementptr inbounds i32, i32* %0, i64 128
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 128
  call void %16(i32* %31, i32* %32) #3
  %33 = getelementptr inbounds i32, i32* %0, i64 144
  %34 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 144
  call void %16(i32* %33, i32* %34) #3
  %35 = getelementptr inbounds i32, i32* %0, i64 160
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 160
  call void %16(i32* %35, i32* %36) #3
  %37 = getelementptr inbounds i32, i32* %0, i64 176
  %38 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 176
  call void %16(i32* %37, i32* %38) #3
  %39 = getelementptr inbounds i32, i32* %0, i64 192
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 192
  call void %16(i32* %39, i32* %40) #3
  %41 = getelementptr inbounds i32, i32* %0, i64 208
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 208
  call void %16(i32* %41, i32* %42) #3
  %43 = getelementptr inbounds i32, i32* %0, i64 224
  %44 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 224
  call void %16(i32* %43, i32* %44) #3
  %45 = getelementptr inbounds i32, i32* %0, i64 240
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 240
  call void %16(i32* %45, i32* %46) #3
  %47 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 0
  %48 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 0
  %49 = sext i32 %2 to i64
  %50 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 1
  %51 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 2
  %52 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 3
  %53 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 4
  %54 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 5
  %55 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 6
  %56 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 7
  %57 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 8
  %58 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 9
  %59 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 10
  %60 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 11
  %61 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 12
  %62 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 13
  %63 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 14
  %64 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 15
  %65 = icmp eq i32 %2, 1
  %66 = bitcast [16 x i32]* %7 to <4 x i32>*
  %67 = shl nsw i64 %49, 2
  %68 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = shl nsw i64 %49, 3
  %71 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 8
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = mul nsw i64 %49, 12
  %74 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 12
  %75 = bitcast i32* %74 to <4 x i32>*
  br label %76

76:                                               ; preds = %204, %4
  %77 = phi i64 [ 0, %4 ], [ %205, %204 ]
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %47, align 16
  %80 = add nuw nsw i64 %77, 16
  %81 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %50, align 4
  %83 = add nuw nsw i64 %77, 32
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %51, align 8
  %86 = add nuw nsw i64 %77, 48
  %87 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %86
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %52, align 4
  %89 = add nuw nsw i64 %77, 64
  %90 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %53, align 16
  %92 = add nuw nsw i64 %77, 80
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %54, align 4
  %95 = add nuw nsw i64 %77, 96
  %96 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %55, align 8
  %98 = add nuw nsw i64 %77, 112
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %56, align 4
  %101 = add nuw nsw i64 %77, 128
  %102 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  store i32 %103, i32* %57, align 16
  %104 = add nuw nsw i64 %77, 144
  %105 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* %58, align 4
  %107 = add nuw nsw i64 %77, 160
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %59, align 8
  %110 = add nuw nsw i64 %77, 176
  %111 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %60, align 4
  %113 = add nuw nsw i64 %77, 192
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %61, align 16
  %116 = add nuw nsw i64 %77, 208
  %117 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %116
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %62, align 4
  %119 = add nuw nsw i64 %77, 224
  %120 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  store i32 %121, i32* %63, align 8
  %122 = add nuw nsw i64 %77, 240
  %123 = getelementptr inbounds [256 x i32], [256 x i32]* %5, i64 0, i64 %122
  %124 = load i32, i32* %123, align 4
  store i32 %124, i32* %64, align 4
  call void %14(i32* nonnull %47, i32* nonnull %48) #3
  br i1 %65, label %125, label %185

125:                                              ; preds = %76
  %126 = getelementptr inbounds i8, i8* %1, i64 %77
  %127 = bitcast i8* %126 to <4 x i8>*
  %128 = load <4 x i8>, <4 x i8>* %127, align 1
  %129 = load <4 x i32>, <4 x i32>* %66, align 16
  %130 = add nsw <4 x i32> %129, <i32 32, i32 32, i32 32, i32 32>
  %131 = ashr <4 x i32> %130, <i32 6, i32 6, i32 6, i32 6>
  %132 = zext <4 x i8> %128 to <4 x i32>
  %133 = add nsw <4 x i32> %131, %132
  %134 = icmp sgt <4 x i32> %133, zeroinitializer
  %135 = select <4 x i1> %134, <4 x i32> %133, <4 x i32> zeroinitializer
  %136 = icmp slt <4 x i32> %135, <i32 255, i32 255, i32 255, i32 255>
  %137 = select <4 x i1> %136, <4 x i32> %135, <4 x i32> <i32 255, i32 255, i32 255, i32 255>
  %138 = trunc <4 x i32> %137 to <4 x i8>
  %139 = bitcast i8* %126 to <4 x i8>*
  store <4 x i8> %138, <4 x i8>* %139, align 1
  %140 = add nsw i64 %67, %77
  %141 = getelementptr inbounds i8, i8* %1, i64 %140
  %142 = bitcast i8* %141 to <4 x i8>*
  %143 = load <4 x i8>, <4 x i8>* %142, align 1
  %144 = load <4 x i32>, <4 x i32>* %69, align 16
  %145 = add nsw <4 x i32> %144, <i32 32, i32 32, i32 32, i32 32>
  %146 = ashr <4 x i32> %145, <i32 6, i32 6, i32 6, i32 6>
  %147 = zext <4 x i8> %143 to <4 x i32>
  %148 = add nsw <4 x i32> %146, %147
  %149 = icmp sgt <4 x i32> %148, zeroinitializer
  %150 = select <4 x i1> %149, <4 x i32> %148, <4 x i32> zeroinitializer
  %151 = icmp slt <4 x i32> %150, <i32 255, i32 255, i32 255, i32 255>
  %152 = select <4 x i1> %151, <4 x i32> %150, <4 x i32> <i32 255, i32 255, i32 255, i32 255>
  %153 = trunc <4 x i32> %152 to <4 x i8>
  %154 = bitcast i8* %141 to <4 x i8>*
  store <4 x i8> %153, <4 x i8>* %154, align 1
  %155 = add nsw i64 %70, %77
  %156 = getelementptr inbounds i8, i8* %1, i64 %155
  %157 = bitcast i8* %156 to <4 x i8>*
  %158 = load <4 x i8>, <4 x i8>* %157, align 1
  %159 = load <4 x i32>, <4 x i32>* %72, align 16
  %160 = add nsw <4 x i32> %159, <i32 32, i32 32, i32 32, i32 32>
  %161 = ashr <4 x i32> %160, <i32 6, i32 6, i32 6, i32 6>
  %162 = zext <4 x i8> %158 to <4 x i32>
  %163 = add nsw <4 x i32> %161, %162
  %164 = icmp sgt <4 x i32> %163, zeroinitializer
  %165 = select <4 x i1> %164, <4 x i32> %163, <4 x i32> zeroinitializer
  %166 = icmp slt <4 x i32> %165, <i32 255, i32 255, i32 255, i32 255>
  %167 = select <4 x i1> %166, <4 x i32> %165, <4 x i32> <i32 255, i32 255, i32 255, i32 255>
  %168 = trunc <4 x i32> %167 to <4 x i8>
  %169 = bitcast i8* %156 to <4 x i8>*
  store <4 x i8> %168, <4 x i8>* %169, align 1
  %170 = add nsw i64 %73, %77
  %171 = getelementptr inbounds i8, i8* %1, i64 %170
  %172 = bitcast i8* %171 to <4 x i8>*
  %173 = load <4 x i8>, <4 x i8>* %172, align 1
  %174 = load <4 x i32>, <4 x i32>* %75, align 16
  %175 = add nsw <4 x i32> %174, <i32 32, i32 32, i32 32, i32 32>
  %176 = ashr <4 x i32> %175, <i32 6, i32 6, i32 6, i32 6>
  %177 = zext <4 x i8> %173 to <4 x i32>
  %178 = add nsw <4 x i32> %176, %177
  %179 = icmp sgt <4 x i32> %178, zeroinitializer
  %180 = select <4 x i1> %179, <4 x i32> %178, <4 x i32> zeroinitializer
  %181 = icmp slt <4 x i32> %180, <i32 255, i32 255, i32 255, i32 255>
  %182 = select <4 x i1> %181, <4 x i32> %180, <4 x i32> <i32 255, i32 255, i32 255, i32 255>
  %183 = trunc <4 x i32> %182 to <4 x i8>
  %184 = bitcast i8* %171 to <4 x i8>*
  store <4 x i8> %183, <4 x i8>* %184, align 1
  br label %204

185:                                              ; preds = %76, %185
  %186 = phi i64 [ %202, %185 ], [ 0, %76 ]
  %187 = mul nsw i64 %186, %49
  %188 = add nsw i64 %187, %77
  %189 = getelementptr inbounds i8, i8* %1, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 %186
  %192 = load i32, i32* %191, align 4
  %193 = add nsw i32 %192, 32
  %194 = ashr i32 %193, 6
  %195 = zext i8 %190 to i32
  %196 = add nsw i32 %194, %195
  %197 = icmp sgt i32 %196, 0
  %198 = select i1 %197, i32 %196, i32 0
  %199 = icmp slt i32 %198, 255
  %200 = select i1 %199, i32 %198, i32 255
  %201 = trunc i32 %200 to i8
  store i8 %201, i8* %189, align 1
  %202 = add nuw nsw i64 %186, 1
  %203 = icmp eq i64 %202, 16
  br i1 %203, label %204, label %185, !llvm.loop !2

204:                                              ; preds = %185, %125
  %205 = add nuw nsw i64 %77, 1
  %206 = icmp eq i64 %205, 16
  br i1 %206, label %207, label %76

207:                                              ; preds = %204
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_idct4x4_add(i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @vpx_idct4x4_16_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %8

7:                                                ; preds = %4
  tail call void @vpx_idct4x4_1_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %8

8:                                                ; preds = %7, %6
  ret void
}

declare void @vpx_idct4x4_16_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_idct4x4_1_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iwht4x4_add(i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %3, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @vpx_iwht4x4_16_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %8

7:                                                ; preds = %4
  tail call void @vpx_iwht4x4_1_add_c(i32* %0, i8* %1, i32 %2) #3
  br label %8

8:                                                ; preds = %7, %6
  ret void
}

declare void @vpx_iwht4x4_16_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_iwht4x4_1_add_c(i32*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_idct8x8_add(i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @vpx_idct8x8_1_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %12

7:                                                ; preds = %4
  %8 = icmp slt i32 %3, 13
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @vpx_idct8x8_12_add, align 8
  tail call void %10(i32* %0, i8* %1, i32 %2) #3
  br label %12

11:                                               ; preds = %7
  tail call void @vpx_idct8x8_64_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %12

12:                                               ; preds = %9, %11, %6
  ret void
}

declare void @vpx_idct8x8_1_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_idct8x8_64_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_idct16x16_add(i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @vpx_idct16x16_1_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %14

7:                                                ; preds = %4
  %8 = icmp slt i32 %3, 11
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @vpx_idct16x16_10_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %14

10:                                               ; preds = %7
  %11 = icmp slt i32 %3, 39
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @vpx_idct16x16_38_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %14

13:                                               ; preds = %10
  tail call void @vpx_idct16x16_256_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %14

14:                                               ; preds = %9, %13, %12, %6
  ret void
}

declare void @vpx_idct16x16_1_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_idct16x16_10_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_idct16x16_38_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_idct16x16_256_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_idct32x32_add(i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 1
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @vpx_idct32x32_1_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %16

7:                                                ; preds = %4
  %8 = icmp slt i32 %3, 35
  br i1 %8, label %9, label %11

9:                                                ; preds = %7
  %10 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @vpx_idct32x32_34_add, align 8
  tail call void %10(i32* %0, i8* %1, i32 %2) #3
  br label %16

11:                                               ; preds = %7
  %12 = icmp slt i32 %3, 136
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @vpx_idct32x32_135_add, align 8
  tail call void %14(i32* %0, i8* %1, i32 %2) #3
  br label %16

15:                                               ; preds = %11
  tail call void @vpx_idct32x32_1024_add_sse2(i32* %0, i8* %1, i32 %2) #3
  br label %16

16:                                               ; preds = %9, %15, %13, %6
  ret void
}

declare void @vpx_idct32x32_1_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

declare void @vpx_idct32x32_1024_add_sse2(i32*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iht4x4_add(i32, i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = icmp sgt i32 %4, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @vpx_idct4x4_16_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %12

10:                                               ; preds = %7
  tail call void @vpx_idct4x4_1_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %12

11:                                               ; preds = %5
  tail call void @vp9_iht4x4_16_add_sse2(i32* %1, i8* %2, i32 %3, i32 %0) #3
  br label %12

12:                                               ; preds = %10, %9, %11
  ret void
}

declare void @vp9_iht4x4_16_add_sse2(i32*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iht8x8_add(i32, i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %5
  %8 = icmp eq i32 %4, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @vpx_idct8x8_1_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %16

10:                                               ; preds = %7
  %11 = icmp slt i32 %4, 13
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = load void (i32*, i8*, i32)*, void (i32*, i8*, i32)** @vpx_idct8x8_12_add, align 8
  tail call void %13(i32* %1, i8* %2, i32 %3) #3
  br label %16

14:                                               ; preds = %10
  tail call void @vpx_idct8x8_64_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %16

15:                                               ; preds = %5
  tail call void @vp9_iht8x8_64_add_sse2(i32* %1, i8* %2, i32 %3, i32 %0) #3
  br label %16

16:                                               ; preds = %14, %12, %9, %15
  ret void
}

declare void @vp9_iht8x8_64_add_sse2(i32*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_iht16x16_add(i32, i32*, i8*, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %0, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %5
  %8 = icmp eq i32 %4, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  tail call void @vpx_idct16x16_1_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %18

10:                                               ; preds = %7
  %11 = icmp slt i32 %4, 11
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @vpx_idct16x16_10_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %18

13:                                               ; preds = %10
  %14 = icmp slt i32 %4, 39
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @vpx_idct16x16_38_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %18

16:                                               ; preds = %13
  tail call void @vpx_idct16x16_256_add_sse2(i32* %1, i8* %2, i32 %3) #3
  br label %18

17:                                               ; preds = %5
  tail call void @vp9_iht16x16_256_add_sse2(i32* %1, i8* %2, i32 %3, i32 %0) #3
  br label %18

18:                                               ; preds = %16, %15, %12, %9, %17
  ret void
}

declare void @vp9_iht16x16_256_add_sse2(i32*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iht4x4_16_add_c(i32*, i16* nocapture, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [16 x i32], align 16
  %7 = alloca [4 x i32], align 16
  %8 = alloca [4 x i32], align 16
  %9 = bitcast [16 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 0
  %11 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #3
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 0
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 1
  %14 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 2
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 3
  %16 = bitcast [4 x i32]* %8 to i8*
  %17 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #3
  %18 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %19 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 1
  %20 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 2
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 3
  %22 = sext i32 %3 to i64
  %23 = getelementptr inbounds [4 x %struct.highbd_transform_2d], [4 x %struct.highbd_transform_2d]* @vp9_highbd_iht4x4_16_add_c.IHT_4, i64 0, i64 %22, i32 1
  %24 = bitcast [4 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 16, i1 false)
  %25 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %23, align 8
  call void %25(i32* %0, i32* nonnull %10, i32 %4) #3
  %26 = getelementptr inbounds i32, i32* %0, i64 4
  %27 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 4
  call void %25(i32* %26, i32* %27, i32 %4) #3
  %28 = getelementptr inbounds i32, i32* %0, i64 8
  %29 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 8
  call void %25(i32* %28, i32* %29, i32 %4) #3
  %30 = getelementptr inbounds i32, i32* %0, i64 12
  %31 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 12
  call void %25(i32* %30, i32* %31, i32 %4) #3
  %32 = getelementptr inbounds [4 x %struct.highbd_transform_2d], [4 x %struct.highbd_transform_2d]* @vp9_highbd_iht4x4_16_add_c.IHT_4, i64 0, i64 %22, i32 0
  %33 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %32, align 16
  %34 = sext i32 %2 to i64
  %35 = shl nsw i64 %34, 1
  %36 = mul nsw i64 %34, 3
  %37 = shl nsw i64 %34, 1
  %38 = mul nsw i64 %34, 3
  %39 = shl nsw i64 %34, 1
  %40 = mul nsw i64 %34, 3
  br label %41

41:                                               ; preds = %188, %5
  %42 = phi i64 [ 0, %5 ], [ %194, %188 ]
  %43 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %12, align 16
  %45 = add nuw nsw i64 %42, 4
  %46 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %13, align 4
  %48 = add nuw nsw i64 %42, 8
  %49 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %14, align 8
  %51 = add nuw nsw i64 %42, 12
  %52 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %15, align 4
  call void %33(i32* nonnull %12, i32* nonnull %18, i32 %4) #3
  %54 = getelementptr inbounds i16, i16* %1, i64 %42
  %55 = load i16, i16* %54, align 2
  %56 = load i32, i32* %18, align 16
  %57 = add nsw i32 %56, 8
  %58 = ashr i32 %57, 4
  %59 = zext i16 %55 to i32
  %60 = add nsw i32 %58, %59
  switch i32 %4, label %145 [
    i32 12, label %103
    i32 10, label %61
  ]

61:                                               ; preds = %41
  %62 = icmp slt i32 %60, 1023
  %63 = select i1 %62, i32 %60, i32 1023
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  %66 = trunc i32 %65 to i16
  store i16 %66, i16* %54, align 2
  %67 = add nsw i64 %42, %34
  %68 = getelementptr inbounds i16, i16* %1, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = load i32, i32* %19, align 4
  %71 = add nsw i32 %70, 8
  %72 = ashr i32 %71, 4
  %73 = zext i16 %69 to i32
  %74 = add nsw i32 %72, %73
  %75 = icmp slt i32 %74, 1023
  %76 = select i1 %75, i32 %74, i32 1023
  %77 = icmp sgt i32 %76, 0
  %78 = select i1 %77, i32 %76, i32 0
  %79 = trunc i32 %78 to i16
  store i16 %79, i16* %68, align 2
  %80 = add nsw i64 %35, %42
  %81 = getelementptr inbounds i16, i16* %1, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = load i32, i32* %20, align 8
  %84 = add nsw i32 %83, 8
  %85 = ashr i32 %84, 4
  %86 = zext i16 %82 to i32
  %87 = add nsw i32 %85, %86
  %88 = icmp slt i32 %87, 1023
  %89 = select i1 %88, i32 %87, i32 1023
  %90 = icmp sgt i32 %89, 0
  %91 = select i1 %90, i32 %89, i32 0
  %92 = trunc i32 %91 to i16
  store i16 %92, i16* %81, align 2
  %93 = add nsw i64 %36, %42
  %94 = getelementptr inbounds i16, i16* %1, i64 %93
  %95 = load i16, i16* %94, align 2
  %96 = load i32, i32* %21, align 4
  %97 = add nsw i32 %96, 8
  %98 = ashr i32 %97, 4
  %99 = zext i16 %95 to i32
  %100 = add nsw i32 %98, %99
  %101 = icmp slt i32 %100, 1023
  %102 = select i1 %101, i32 %100, i32 1023
  br label %188

103:                                              ; preds = %41
  %104 = icmp slt i32 %60, 4095
  %105 = select i1 %104, i32 %60, i32 4095
  %106 = icmp sgt i32 %105, 0
  %107 = select i1 %106, i32 %105, i32 0
  %108 = trunc i32 %107 to i16
  store i16 %108, i16* %54, align 2
  %109 = add nsw i64 %42, %34
  %110 = getelementptr inbounds i16, i16* %1, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = load i32, i32* %19, align 4
  %113 = add nsw i32 %112, 8
  %114 = ashr i32 %113, 4
  %115 = zext i16 %111 to i32
  %116 = add nsw i32 %114, %115
  %117 = icmp slt i32 %116, 4095
  %118 = select i1 %117, i32 %116, i32 4095
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 0
  %121 = trunc i32 %120 to i16
  store i16 %121, i16* %110, align 2
  %122 = add nsw i64 %39, %42
  %123 = getelementptr inbounds i16, i16* %1, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = load i32, i32* %20, align 8
  %126 = add nsw i32 %125, 8
  %127 = ashr i32 %126, 4
  %128 = zext i16 %124 to i32
  %129 = add nsw i32 %127, %128
  %130 = icmp slt i32 %129, 4095
  %131 = select i1 %130, i32 %129, i32 4095
  %132 = icmp sgt i32 %131, 0
  %133 = select i1 %132, i32 %131, i32 0
  %134 = trunc i32 %133 to i16
  store i16 %134, i16* %123, align 2
  %135 = add nsw i64 %40, %42
  %136 = getelementptr inbounds i16, i16* %1, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = load i32, i32* %21, align 4
  %139 = add nsw i32 %138, 8
  %140 = ashr i32 %139, 4
  %141 = zext i16 %137 to i32
  %142 = add nsw i32 %140, %141
  %143 = icmp slt i32 %142, 4095
  %144 = select i1 %143, i32 %142, i32 4095
  br label %188

145:                                              ; preds = %41
  %146 = icmp slt i32 %60, 255
  %147 = select i1 %146, i32 %60, i32 255
  %148 = icmp sgt i32 %147, 0
  %149 = select i1 %148, i32 %147, i32 0
  %150 = trunc i32 %149 to i16
  store i16 %150, i16* %54, align 2
  %151 = add nsw i64 %42, %34
  %152 = getelementptr inbounds i16, i16* %1, i64 %151
  %153 = load i16, i16* %152, align 2
  %154 = load i32, i32* %19, align 4
  %155 = add nsw i32 %154, 8
  %156 = ashr i32 %155, 4
  %157 = zext i16 %153 to i32
  %158 = add nsw i32 %156, %157
  %159 = icmp slt i32 %158, 255
  %160 = select i1 %159, i32 %158, i32 255
  %161 = icmp sgt i32 %160, 0
  %162 = select i1 %161, i32 %160, i32 0
  %163 = trunc i32 %162 to i16
  store i16 %163, i16* %152, align 2
  %164 = add nsw i64 %37, %42
  %165 = getelementptr inbounds i16, i16* %1, i64 %164
  %166 = load i16, i16* %165, align 2
  %167 = load i32, i32* %20, align 8
  %168 = add nsw i32 %167, 8
  %169 = ashr i32 %168, 4
  %170 = zext i16 %166 to i32
  %171 = add nsw i32 %169, %170
  %172 = icmp slt i32 %171, 255
  %173 = select i1 %172, i32 %171, i32 255
  %174 = icmp sgt i32 %173, 0
  %175 = select i1 %174, i32 %173, i32 0
  %176 = trunc i32 %175 to i16
  store i16 %176, i16* %165, align 2
  %177 = add nsw i64 %38, %42
  %178 = getelementptr inbounds i16, i16* %1, i64 %177
  %179 = load i16, i16* %178, align 2
  %180 = load i32, i32* %21, align 4
  %181 = add nsw i32 %180, 8
  %182 = ashr i32 %181, 4
  %183 = zext i16 %179 to i32
  %184 = add nsw i32 %182, %183
  %185 = icmp slt i32 %184, 255
  %186 = select i1 %185, i32 %184, i32 255
  br label %188

187:                                              ; preds = %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #3
  ret void

188:                                              ; preds = %145, %103, %61
  %189 = phi i32 [ %186, %145 ], [ %144, %103 ], [ %102, %61 ]
  %190 = phi i16* [ %178, %145 ], [ %136, %103 ], [ %94, %61 ]
  %191 = icmp sgt i32 %189, 0
  %192 = select i1 %191, i32 %189, i32 0
  %193 = trunc i32 %192 to i16
  store i16 %193, i16* %190, align 2
  %194 = add nuw nsw i64 %42, 1
  %195 = icmp eq i64 %194, 4
  br i1 %195, label %187, label %41
}

declare void @vpx_highbd_idct4_c(i32*, i32*, i32) #1

declare void @vpx_highbd_iadst4_c(i32*, i32*, i32) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iht8x8_64_add_c(i32*, i16* nocapture, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [64 x i32], align 16
  %7 = alloca [8 x i32], align 16
  %8 = alloca [8 x i32], align 16
  %9 = bitcast [64 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %9) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 256, i1 false)
  %10 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 0
  %11 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #3
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 0
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 1
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 2
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 3
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 4
  %17 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 5
  %18 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 6
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 7
  %20 = bitcast [8 x i32]* %8 to i8*
  %21 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #3
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 0
  %23 = sext i32 %3 to i64
  %24 = getelementptr inbounds [4 x %struct.highbd_transform_2d], [4 x %struct.highbd_transform_2d]* @HIGH_IHT_8, i64 0, i64 %23, i32 0
  %25 = bitcast [8 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 32, i1 false)
  %26 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %24, align 16
  %27 = getelementptr inbounds [4 x %struct.highbd_transform_2d], [4 x %struct.highbd_transform_2d]* @HIGH_IHT_8, i64 0, i64 %23, i32 1
  %28 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %27, align 8
  call void %28(i32* %0, i32* nonnull %10, i32 %4) #3
  %29 = getelementptr inbounds i32, i32* %0, i64 8
  %30 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 8
  call void %28(i32* %29, i32* %30, i32 %4) #3
  %31 = getelementptr inbounds i32, i32* %0, i64 16
  %32 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 16
  call void %28(i32* %31, i32* %32, i32 %4) #3
  %33 = getelementptr inbounds i32, i32* %0, i64 24
  %34 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 24
  call void %28(i32* %33, i32* %34, i32 %4) #3
  %35 = getelementptr inbounds i32, i32* %0, i64 32
  %36 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 32
  call void %28(i32* %35, i32* %36, i32 %4) #3
  %37 = getelementptr inbounds i32, i32* %0, i64 40
  %38 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 40
  call void %28(i32* %37, i32* %38, i32 %4) #3
  %39 = getelementptr inbounds i32, i32* %0, i64 48
  %40 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 48
  call void %28(i32* %39, i32* %40, i32 %4) #3
  %41 = getelementptr inbounds i32, i32* %0, i64 56
  %42 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 56
  call void %28(i32* %41, i32* %42, i32 %4) #3
  %43 = sext i32 %2 to i64
  %44 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 0
  %45 = icmp eq i32 %4, 10
  %46 = select i1 %45, i32 1023, i32 255
  %47 = icmp eq i32 %4, 12
  %48 = select i1 %47, i32 4095, i32 %46
  %49 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 1
  %50 = icmp eq i32 %4, 10
  %51 = select i1 %50, i32 1023, i32 255
  %52 = icmp eq i32 %4, 12
  %53 = select i1 %52, i32 4095, i32 %51
  %54 = shl nsw i64 %43, 1
  %55 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 2
  %56 = icmp eq i32 %4, 10
  %57 = select i1 %56, i32 1023, i32 255
  %58 = icmp eq i32 %4, 12
  %59 = select i1 %58, i32 4095, i32 %57
  %60 = mul nsw i64 %43, 3
  %61 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 3
  %62 = icmp eq i32 %4, 10
  %63 = select i1 %62, i32 1023, i32 255
  %64 = icmp eq i32 %4, 12
  %65 = select i1 %64, i32 4095, i32 %63
  %66 = shl nsw i64 %43, 2
  %67 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 4
  %68 = icmp eq i32 %4, 10
  %69 = select i1 %68, i32 1023, i32 255
  %70 = icmp eq i32 %4, 12
  %71 = select i1 %70, i32 4095, i32 %69
  %72 = mul nsw i64 %43, 5
  %73 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 5
  %74 = icmp eq i32 %4, 10
  %75 = select i1 %74, i32 1023, i32 255
  %76 = icmp eq i32 %4, 12
  %77 = select i1 %76, i32 4095, i32 %75
  %78 = mul nsw i64 %43, 6
  %79 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 6
  %80 = icmp eq i32 %4, 10
  %81 = select i1 %80, i32 1023, i32 255
  %82 = icmp eq i32 %4, 12
  %83 = select i1 %82, i32 4095, i32 %81
  %84 = mul nsw i64 %43, 7
  %85 = getelementptr inbounds [8 x i32], [8 x i32]* %8, i64 0, i64 7
  %86 = icmp eq i32 %4, 10
  %87 = select i1 %86, i32 1023, i32 255
  %88 = icmp eq i32 %4, 12
  %89 = select i1 %88, i32 4095, i32 %87
  br label %90

90:                                               ; preds = %90, %5
  %91 = phi i64 [ 0, %5 ], [ %218, %90 ]
  %92 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %91
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %12, align 16
  %94 = add nuw nsw i64 %91, 8
  %95 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %94
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %13, align 4
  %97 = add nuw nsw i64 %91, 16
  %98 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %14, align 8
  %100 = add nuw nsw i64 %91, 24
  %101 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %15, align 4
  %103 = add nuw nsw i64 %91, 32
  %104 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %16, align 16
  %106 = add nuw nsw i64 %91, 40
  %107 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  store i32 %108, i32* %17, align 4
  %109 = add nuw nsw i64 %91, 48
  %110 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %18, align 8
  %112 = add nuw nsw i64 %91, 56
  %113 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %19, align 4
  call void %26(i32* nonnull %12, i32* nonnull %22, i32 %4) #3
  %115 = getelementptr inbounds i16, i16* %1, i64 %91
  %116 = load i16, i16* %115, align 2
  %117 = load i32, i32* %44, align 16
  %118 = add nsw i32 %117, 16
  %119 = ashr i32 %118, 5
  %120 = zext i16 %116 to i32
  %121 = add nsw i32 %119, %120
  %122 = icmp slt i32 %121, %48
  %123 = select i1 %122, i32 %121, i32 %48
  %124 = icmp sgt i32 %123, 0
  %125 = select i1 %124, i32 %123, i32 0
  %126 = trunc i32 %125 to i16
  store i16 %126, i16* %115, align 2
  %127 = add nsw i64 %91, %43
  %128 = getelementptr inbounds i16, i16* %1, i64 %127
  %129 = load i16, i16* %128, align 2
  %130 = load i32, i32* %49, align 4
  %131 = add nsw i32 %130, 16
  %132 = ashr i32 %131, 5
  %133 = zext i16 %129 to i32
  %134 = add nsw i32 %132, %133
  %135 = icmp slt i32 %134, %53
  %136 = select i1 %135, i32 %134, i32 %53
  %137 = icmp sgt i32 %136, 0
  %138 = select i1 %137, i32 %136, i32 0
  %139 = trunc i32 %138 to i16
  store i16 %139, i16* %128, align 2
  %140 = add nsw i64 %54, %91
  %141 = getelementptr inbounds i16, i16* %1, i64 %140
  %142 = load i16, i16* %141, align 2
  %143 = load i32, i32* %55, align 8
  %144 = add nsw i32 %143, 16
  %145 = ashr i32 %144, 5
  %146 = zext i16 %142 to i32
  %147 = add nsw i32 %145, %146
  %148 = icmp slt i32 %147, %59
  %149 = select i1 %148, i32 %147, i32 %59
  %150 = icmp sgt i32 %149, 0
  %151 = select i1 %150, i32 %149, i32 0
  %152 = trunc i32 %151 to i16
  store i16 %152, i16* %141, align 2
  %153 = add nsw i64 %60, %91
  %154 = getelementptr inbounds i16, i16* %1, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = load i32, i32* %61, align 4
  %157 = add nsw i32 %156, 16
  %158 = ashr i32 %157, 5
  %159 = zext i16 %155 to i32
  %160 = add nsw i32 %158, %159
  %161 = icmp slt i32 %160, %65
  %162 = select i1 %161, i32 %160, i32 %65
  %163 = icmp sgt i32 %162, 0
  %164 = select i1 %163, i32 %162, i32 0
  %165 = trunc i32 %164 to i16
  store i16 %165, i16* %154, align 2
  %166 = add nsw i64 %66, %91
  %167 = getelementptr inbounds i16, i16* %1, i64 %166
  %168 = load i16, i16* %167, align 2
  %169 = load i32, i32* %67, align 16
  %170 = add nsw i32 %169, 16
  %171 = ashr i32 %170, 5
  %172 = zext i16 %168 to i32
  %173 = add nsw i32 %171, %172
  %174 = icmp slt i32 %173, %71
  %175 = select i1 %174, i32 %173, i32 %71
  %176 = icmp sgt i32 %175, 0
  %177 = select i1 %176, i32 %175, i32 0
  %178 = trunc i32 %177 to i16
  store i16 %178, i16* %167, align 2
  %179 = add nsw i64 %72, %91
  %180 = getelementptr inbounds i16, i16* %1, i64 %179
  %181 = load i16, i16* %180, align 2
  %182 = load i32, i32* %73, align 4
  %183 = add nsw i32 %182, 16
  %184 = ashr i32 %183, 5
  %185 = zext i16 %181 to i32
  %186 = add nsw i32 %184, %185
  %187 = icmp slt i32 %186, %77
  %188 = select i1 %187, i32 %186, i32 %77
  %189 = icmp sgt i32 %188, 0
  %190 = select i1 %189, i32 %188, i32 0
  %191 = trunc i32 %190 to i16
  store i16 %191, i16* %180, align 2
  %192 = add nsw i64 %78, %91
  %193 = getelementptr inbounds i16, i16* %1, i64 %192
  %194 = load i16, i16* %193, align 2
  %195 = load i32, i32* %79, align 8
  %196 = add nsw i32 %195, 16
  %197 = ashr i32 %196, 5
  %198 = zext i16 %194 to i32
  %199 = add nsw i32 %197, %198
  %200 = icmp slt i32 %199, %83
  %201 = select i1 %200, i32 %199, i32 %83
  %202 = icmp sgt i32 %201, 0
  %203 = select i1 %202, i32 %201, i32 0
  %204 = trunc i32 %203 to i16
  store i16 %204, i16* %193, align 2
  %205 = add nsw i64 %84, %91
  %206 = getelementptr inbounds i16, i16* %1, i64 %205
  %207 = load i16, i16* %206, align 2
  %208 = load i32, i32* %85, align 4
  %209 = add nsw i32 %208, 16
  %210 = ashr i32 %209, 5
  %211 = zext i16 %207 to i32
  %212 = add nsw i32 %210, %211
  %213 = icmp slt i32 %212, %89
  %214 = select i1 %213, i32 %212, i32 %89
  %215 = icmp sgt i32 %214, 0
  %216 = select i1 %215, i32 %214, i32 0
  %217 = trunc i32 %216 to i16
  store i16 %217, i16* %206, align 2
  %218 = add nuw nsw i64 %91, 1
  %219 = icmp eq i64 %218, 8
  br i1 %219, label %220, label %90

220:                                              ; preds = %90
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %9) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iht16x16_256_add_c(i32*, i16* nocapture, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [256 x i32], align 16
  %7 = alloca [16 x i32], align 16
  %8 = alloca [16 x i32], align 16
  %9 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %9) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 1024, i1 false)
  %10 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 0
  %11 = bitcast [16 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 64, i1 false)
  %12 = bitcast [16 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 64, i1 false)
  %13 = sext i32 %3 to i64
  %14 = getelementptr inbounds [4 x %struct.highbd_transform_2d], [4 x %struct.highbd_transform_2d]* @HIGH_IHT_16, i64 0, i64 %13, i32 0
  %15 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %14, align 16
  %16 = getelementptr inbounds [4 x %struct.highbd_transform_2d], [4 x %struct.highbd_transform_2d]* @HIGH_IHT_16, i64 0, i64 %13, i32 1
  %17 = load void (i32*, i32*, i32)*, void (i32*, i32*, i32)** %16, align 8
  call void %17(i32* %0, i32* nonnull %10, i32 %4) #3
  %18 = getelementptr inbounds i32, i32* %0, i64 16
  %19 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 16
  call void %17(i32* %18, i32* %19, i32 %4) #3
  %20 = getelementptr inbounds i32, i32* %0, i64 32
  %21 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 32
  call void %17(i32* %20, i32* %21, i32 %4) #3
  %22 = getelementptr inbounds i32, i32* %0, i64 48
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 48
  call void %17(i32* %22, i32* %23, i32 %4) #3
  %24 = getelementptr inbounds i32, i32* %0, i64 64
  %25 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 64
  call void %17(i32* %24, i32* %25, i32 %4) #3
  %26 = getelementptr inbounds i32, i32* %0, i64 80
  %27 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 80
  call void %17(i32* %26, i32* %27, i32 %4) #3
  %28 = getelementptr inbounds i32, i32* %0, i64 96
  %29 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 96
  call void %17(i32* %28, i32* %29, i32 %4) #3
  %30 = getelementptr inbounds i32, i32* %0, i64 112
  %31 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 112
  call void %17(i32* %30, i32* %31, i32 %4) #3
  %32 = getelementptr inbounds i32, i32* %0, i64 128
  %33 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 128
  call void %17(i32* %32, i32* %33, i32 %4) #3
  %34 = getelementptr inbounds i32, i32* %0, i64 144
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 144
  call void %17(i32* %34, i32* %35, i32 %4) #3
  %36 = getelementptr inbounds i32, i32* %0, i64 160
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 160
  call void %17(i32* %36, i32* %37, i32 %4) #3
  %38 = getelementptr inbounds i32, i32* %0, i64 176
  %39 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 176
  call void %17(i32* %38, i32* %39, i32 %4) #3
  %40 = getelementptr inbounds i32, i32* %0, i64 192
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 192
  call void %17(i32* %40, i32* %41, i32 %4) #3
  %42 = getelementptr inbounds i32, i32* %0, i64 208
  %43 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 208
  call void %17(i32* %42, i32* %43, i32 %4) #3
  %44 = getelementptr inbounds i32, i32* %0, i64 224
  %45 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 224
  call void %17(i32* %44, i32* %45, i32 %4) #3
  %46 = getelementptr inbounds i32, i32* %0, i64 240
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 240
  call void %17(i32* %46, i32* %47, i32 %4) #3
  %48 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 0
  %49 = getelementptr inbounds [16 x i32], [16 x i32]* %8, i64 0, i64 0
  %50 = sext i32 %2 to i64
  %51 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 1
  %52 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 2
  %53 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 3
  %54 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 4
  %55 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 5
  %56 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 6
  %57 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 7
  %58 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 8
  %59 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 9
  %60 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 10
  %61 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 11
  %62 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 12
  %63 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 13
  %64 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 14
  %65 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 15
  %66 = icmp eq i32 %4, 10
  %67 = select i1 %66, i32 1023, i32 255
  %68 = icmp eq i32 %4, 12
  %69 = select i1 %68, i32 4095, i32 %67
  br label %70

70:                                               ; preds = %138, %5
  %71 = phi i64 [ 0, %5 ], [ %139, %138 ]
  %72 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %48, align 16
  %74 = add nuw nsw i64 %71, 16
  %75 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %51, align 4
  %77 = add nuw nsw i64 %71, 32
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %52, align 8
  %80 = add nuw nsw i64 %71, 48
  %81 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %53, align 4
  %83 = add nuw nsw i64 %71, 64
  %84 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %83
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %54, align 16
  %86 = add nuw nsw i64 %71, 80
  %87 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %86
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %55, align 4
  %89 = add nuw nsw i64 %71, 96
  %90 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %56, align 8
  %92 = add nuw nsw i64 %71, 112
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  store i32 %94, i32* %57, align 4
  %95 = add nuw nsw i64 %71, 128
  %96 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %95
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %58, align 16
  %98 = add nuw nsw i64 %71, 144
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %59, align 4
  %101 = add nuw nsw i64 %71, 160
  %102 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  store i32 %103, i32* %60, align 8
  %104 = add nuw nsw i64 %71, 176
  %105 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* %61, align 4
  %107 = add nuw nsw i64 %71, 192
  %108 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %62, align 16
  %110 = add nuw nsw i64 %71, 208
  %111 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %63, align 4
  %113 = add nuw nsw i64 %71, 224
  %114 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %113
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %64, align 8
  %116 = add nuw nsw i64 %71, 240
  %117 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %116
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %65, align 4
  call void %15(i32* nonnull %48, i32* nonnull %49, i32 %4) #3
  br label %119

119:                                              ; preds = %119, %70
  %120 = phi i64 [ 0, %70 ], [ %136, %119 ]
  %121 = mul nsw i64 %120, %50
  %122 = add nsw i64 %121, %71
  %123 = getelementptr inbounds i16, i16* %1, i64 %122
  %124 = load i16, i16* %123, align 2
  %125 = getelementptr inbounds [16 x i32], [16 x i32]* %8, i64 0, i64 %120
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %126, 32
  %128 = ashr i32 %127, 6
  %129 = zext i16 %124 to i32
  %130 = add nsw i32 %128, %129
  %131 = icmp slt i32 %130, %69
  %132 = select i1 %131, i32 %130, i32 %69
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  %135 = trunc i32 %134 to i16
  store i16 %135, i16* %123, align 2
  %136 = add nuw nsw i64 %120, 1
  %137 = icmp eq i64 %136, 16
  br i1 %137, label %138, label %119

138:                                              ; preds = %119
  %139 = add nuw nsw i64 %71, 1
  %140 = icmp eq i64 %139, 16
  br i1 %140, label %141, label %70

141:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %9) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_idct4x4_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %3, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct4x4_16_add, align 8
  tail call void %8(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %10

9:                                                ; preds = %5
  tail call void @vpx_highbd_idct4x4_1_add_sse2(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %10

10:                                               ; preds = %9, %7
  ret void
}

declare void @vpx_highbd_idct4x4_1_add_sse2(i32*, i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iwht4x4_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp sgt i32 %3, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @vpx_highbd_iwht4x4_16_add_c(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %9

8:                                                ; preds = %5
  tail call void @vpx_highbd_iwht4x4_1_add_c(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

declare void @vpx_highbd_iwht4x4_16_add_c(i32*, i16*, i32, i32) local_unnamed_addr #1

declare void @vpx_highbd_iwht4x4_1_add_c(i32*, i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_idct8x8_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @vpx_highbd_idct8x8_1_add_sse2(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %14

8:                                                ; preds = %5
  %9 = icmp slt i32 %3, 13
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct8x8_12_add, align 8
  tail call void %11(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %14

12:                                               ; preds = %8
  %13 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct8x8_64_add, align 8
  tail call void %13(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %14

14:                                               ; preds = %10, %12, %7
  ret void
}

declare void @vpx_highbd_idct8x8_1_add_sse2(i32*, i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_idct16x16_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @vpx_highbd_idct16x16_1_add_sse2(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

8:                                                ; preds = %5
  %9 = icmp slt i32 %3, 11
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct16x16_10_add, align 8
  tail call void %11(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

12:                                               ; preds = %8
  %13 = icmp slt i32 %3, 39
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct16x16_38_add, align 8
  tail call void %15(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

16:                                               ; preds = %12
  %17 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct16x16_256_add, align 8
  tail call void %17(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

18:                                               ; preds = %10, %16, %14, %7
  ret void
}

declare void @vpx_highbd_idct16x16_1_add_sse2(i32*, i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_idct32x32_add(i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @vpx_highbd_idct32x32_1_add_sse2(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

8:                                                ; preds = %5
  %9 = icmp slt i32 %3, 35
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct32x32_34_add, align 8
  tail call void %11(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

12:                                               ; preds = %8
  %13 = icmp slt i32 %3, 136
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct32x32_135_add, align 8
  tail call void %15(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

16:                                               ; preds = %12
  %17 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct32x32_1024_add, align 8
  tail call void %17(i32* %0, i16* %1, i32 %2, i32 %4) #3
  br label %18

18:                                               ; preds = %10, %16, %14, %7
  ret void
}

declare void @vpx_highbd_idct32x32_1_add_sse2(i32*, i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iht4x4_add(i32, i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %6
  %9 = icmp sgt i32 %4, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct4x4_16_add, align 8
  tail call void %11(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %15

12:                                               ; preds = %8
  tail call void @vpx_highbd_idct4x4_1_add_sse2(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %15

13:                                               ; preds = %6
  %14 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** @vp9_highbd_iht4x4_16_add, align 8
  tail call void %14(i32* %1, i16* %2, i32 %3, i32 %0, i32 %5) #3
  br label %15

15:                                               ; preds = %12, %10, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iht8x8_add(i32, i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %6
  %9 = icmp eq i32 %4, 1
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @vpx_highbd_idct8x8_1_add_sse2(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %19

11:                                               ; preds = %8
  %12 = icmp slt i32 %4, 13
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct8x8_12_add, align 8
  tail call void %14(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %19

15:                                               ; preds = %11
  %16 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct8x8_64_add, align 8
  tail call void %16(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %19

17:                                               ; preds = %6
  %18 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** @vp9_highbd_iht8x8_64_add, align 8
  tail call void %18(i32* %1, i16* %2, i32 %3, i32 %0, i32 %5) #3
  br label %19

19:                                               ; preds = %15, %13, %10, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp9_highbd_iht16x16_add(i32, i32*, i16*, i32, i32, i32) local_unnamed_addr #0 {
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %6
  %9 = icmp eq i32 %4, 1
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @vpx_highbd_idct16x16_1_add_sse2(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %23

11:                                               ; preds = %8
  %12 = icmp slt i32 %4, 11
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct16x16_10_add, align 8
  tail call void %14(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %23

15:                                               ; preds = %11
  %16 = icmp slt i32 %4, 39
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct16x16_38_add, align 8
  tail call void %18(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %23

19:                                               ; preds = %15
  %20 = load void (i32*, i16*, i32, i32)*, void (i32*, i16*, i32, i32)** @vpx_highbd_idct16x16_256_add, align 8
  tail call void %20(i32* %1, i16* %2, i32 %3, i32 %5) #3
  br label %23

21:                                               ; preds = %6
  %22 = load void (i32*, i16*, i32, i32, i32)*, void (i32*, i16*, i32, i32, i32)** @vp9_highbd_iht16x16_256_add, align 8
  tail call void %22(i32* %1, i16* %2, i32 %3, i32 %0, i32 %5) #3
  br label %23

23:                                               ; preds = %19, %17, %13, %10, %21
  ret void
}

declare void @idct8_c(i32*, i32*) #1

declare void @iadst8_c(i32*, i32*) #1

declare void @idct16_c(i32*, i32*) #1

declare void @iadst16_c(i32*, i32*) #1

declare void @vpx_highbd_idct8_c(i32*, i32*, i32) #1

declare void @vpx_highbd_iadst8_c(i32*, i32*, i32) #1

declare void @vpx_highbd_idct16_c(i32*, i32*, i32) #1

declare void @vpx_highbd_iadst16_c(i32*, i32*, i32) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
