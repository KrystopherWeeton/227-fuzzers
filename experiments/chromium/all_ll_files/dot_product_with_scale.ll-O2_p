; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/dot_product_with_scale.cc'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/dot_product_with_scale.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtcSpl_DotProductWithScale(i16* nocapture readonly, i16* nocapture readonly, i64, i32) local_unnamed_addr #0 {
  %5 = icmp ugt i64 %2, 3
  br i1 %5, label %33, label %6

6:                                                ; preds = %33, %4
  %7 = phi i64 [ 0, %4 ], [ %78, %33 ]
  %8 = phi i64 [ 0, %4 ], [ %79, %33 ]
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %108

10:                                               ; preds = %6
  %11 = sub i64 %2, %8
  %12 = xor i64 %8, -1
  %13 = and i64 %11, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds i16, i16* %0, i64 %8
  %17 = load i16, i16* %16, align 2
  %18 = sext i16 %17 to i32
  %19 = getelementptr inbounds i16, i16* %1, i64 %8
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = mul nsw i32 %21, %18
  %23 = ashr i32 %22, %3
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %7, %24
  %26 = add nuw i64 %8, 1
  br label %27

27:                                               ; preds = %10, %15
  %28 = phi i64 [ undef, %10 ], [ %25, %15 ]
  %29 = phi i64 [ %8, %10 ], [ %26, %15 ]
  %30 = phi i64 [ %7, %10 ], [ %25, %15 ]
  %31 = sub i64 0, %2
  %32 = icmp eq i64 %12, %31
  br i1 %32, label %108, label %82

33:                                               ; preds = %4, %33
  %34 = phi i64 [ %80, %33 ], [ 3, %4 ]
  %35 = phi i64 [ %79, %33 ], [ 0, %4 ]
  %36 = phi i64 [ %78, %33 ], [ 0, %4 ]
  %37 = getelementptr inbounds i16, i16* %0, i64 %35
  %38 = load i16, i16* %37, align 2
  %39 = sext i16 %38 to i32
  %40 = getelementptr inbounds i16, i16* %1, i64 %35
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i32
  %43 = mul nsw i32 %42, %39
  %44 = ashr i32 %43, %3
  %45 = sext i32 %44 to i64
  %46 = add nsw i64 %36, %45
  %47 = or i64 %35, 1
  %48 = getelementptr inbounds i16, i16* %0, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = sext i16 %49 to i32
  %51 = getelementptr inbounds i16, i16* %1, i64 %47
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = mul nsw i32 %53, %50
  %55 = ashr i32 %54, %3
  %56 = sext i32 %55 to i64
  %57 = add nsw i64 %46, %56
  %58 = or i64 %35, 2
  %59 = getelementptr inbounds i16, i16* %0, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = getelementptr inbounds i16, i16* %1, i64 %58
  %63 = load i16, i16* %62, align 2
  %64 = sext i16 %63 to i32
  %65 = mul nsw i32 %64, %61
  %66 = ashr i32 %65, %3
  %67 = sext i32 %66 to i64
  %68 = add nsw i64 %57, %67
  %69 = getelementptr inbounds i16, i16* %0, i64 %34
  %70 = load i16, i16* %69, align 2
  %71 = sext i16 %70 to i32
  %72 = getelementptr inbounds i16, i16* %1, i64 %34
  %73 = load i16, i16* %72, align 2
  %74 = sext i16 %73 to i32
  %75 = mul nsw i32 %74, %71
  %76 = ashr i32 %75, %3
  %77 = sext i32 %76 to i64
  %78 = add nsw i64 %68, %77
  %79 = add i64 %35, 4
  %80 = or i64 %79, 3
  %81 = icmp ult i64 %80, %2
  br i1 %81, label %33, label %6

82:                                               ; preds = %27, %82
  %83 = phi i64 [ %106, %82 ], [ %29, %27 ]
  %84 = phi i64 [ %105, %82 ], [ %30, %27 ]
  %85 = getelementptr inbounds i16, i16* %0, i64 %83
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i32
  %88 = getelementptr inbounds i16, i16* %1, i64 %83
  %89 = load i16, i16* %88, align 2
  %90 = sext i16 %89 to i32
  %91 = mul nsw i32 %90, %87
  %92 = ashr i32 %91, %3
  %93 = sext i32 %92 to i64
  %94 = add nsw i64 %84, %93
  %95 = add nuw i64 %83, 1
  %96 = getelementptr inbounds i16, i16* %0, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = sext i16 %97 to i32
  %99 = getelementptr inbounds i16, i16* %1, i64 %95
  %100 = load i16, i16* %99, align 2
  %101 = sext i16 %100 to i32
  %102 = mul nsw i32 %101, %98
  %103 = ashr i32 %102, %3
  %104 = sext i32 %103 to i64
  %105 = add nsw i64 %94, %104
  %106 = add nuw i64 %83, 2
  %107 = icmp eq i64 %106, %2
  br i1 %107, label %108, label %82

108:                                              ; preds = %27, %82, %6
  %109 = phi i64 [ %7, %6 ], [ %28, %27 ], [ %105, %82 ]
  %110 = icmp sgt i64 %109, 2147483647
  %111 = select i1 %110, i32 2, i32 0
  %112 = icmp slt i64 %109, -2147483648
  %113 = zext i1 %112 to i32
  %114 = or i32 %111, %113
  switch i32 %114, label %119 [
    i32 0, label %115
    i32 1, label %120
    i32 2, label %117
    i32 3, label %118
  ]

115:                                              ; preds = %108
  %116 = trunc i64 %109 to i32
  br label %120

117:                                              ; preds = %108
  br label %120

118:                                              ; preds = %108
  tail call void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() #2
  unreachable

119:                                              ; preds = %108
  unreachable

120:                                              ; preds = %108, %115, %117
  %121 = phi i32 [ 2147483647, %117 ], [ %116, %115 ], [ -2147483648, %108 ]
  ret i32 %121
}

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
