; ModuleID = '../../net/dns/dns_hosts.cc'
source_filename = "../../net/dns/dns_hosts.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::pair" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::tuple.21" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::(anonymous namespace)::HostsParser" = type { %"class.base::BasicStringPiece", i8*, i64, i64, %"class.base::BasicStringPiece", i8, i32 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE25__emplace_unique_key_argsISB_JRKNS_21piecewise_construct_tENS_5tupleIJRKSB_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm = comdat any

@.str = private unnamed_addr constant [27 x i8] c"../../net/dns/dns_hosts.cc\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"dns_hosts\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c" ,\09\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c" \09\0A\0D#\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c" ,\09\0A\0D#\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net33ParseHostsWithCommaModeForTestingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_13unordered_mapINS0_4pairIS6_NS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS0_8equal_toISC_EENS4_INSA_IKSC_SD_EEEEEENS_19ParseHostsCommaModeE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unordered_map"*, i32) local_unnamed_addr #0 {
  tail call fastcc void @_ZN3net12_GLOBAL__N_123ParseHostsWithCommaModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_13unordered_mapINS1_4pairIS7_NS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS1_8equal_toISD_EENS5_INSB_IKSD_SE_EEEEEENS_19ParseHostsCommaModeE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::unordered_map"* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_123ParseHostsWithCommaModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_13unordered_mapINS1_4pairIS7_NS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS1_8equal_toISD_EENS5_INSB_IKSD_SE_EEEEEENS_19ParseHostsCommaModeE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unordered_map"*, i32) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.21", align 1
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.net::IPAddress", align 1
  %8 = alloca %"class.net::(anonymous namespace)::HostsParser", align 8
  %9 = alloca %"class.net::IPAddress", align 1
  %10 = alloca %"struct.std::__1::pair", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::BasicStringPiece", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = icmp eq %"class.std::__1::unordered_map"* %1, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 136, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %3, %15
  %19 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %7, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %19, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %7) #10
  %20 = bitcast %"class.net::(anonymous namespace)::HostsParser"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 64, i1 false)
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = select i1 %24, i8* %26, i8* %27
  %29 = ptrtoint i8* %28 to i64
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %23 to i64
  %33 = select i1 %24, i64 %31, i64 %32
  %34 = bitcast %"class.net::(anonymous namespace)::HostsParser"* %8 to i64*
  store i64 %29, i64* %34, align 8
  %35 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 0, i32 1
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  store i64 %29, i64* %37, align 8
  %38 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 2
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 3
  %40 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 6
  %41 = bitcast i64* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 25, i1 false) #10
  store i32 %2, i32* %40, align 4
  %42 = icmp eq i64 %33, 0
  br i1 %42, label %243, label %43

43:                                               ; preds = %18
  %44 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 0
  %45 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 4, i32 0
  %47 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 4, i32 1
  %48 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 5
  %49 = bitcast %"struct.std::__1::pair"* %10 to i8*
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = bitcast %"class.base::BasicStringPiece"* %12 to i8*
  %60 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %61 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %64 = getelementptr inbounds %"class.net::(anonymous namespace)::HostsParser", %"class.net::(anonymous namespace)::HostsParser"* %8, i64 0, i32 4
  %65 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %9, i64 0, i32 0, i32 0, i32 0, i64 0
  %66 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %67 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0
  %68 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %69 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::tuple.21", %"class.std::__1::tuple.21"* %5, i64 0, i32 0
  %71 = bitcast %"struct.std::__1::pair"* %10 to i8*
  br label %72

72:                                               ; preds = %43, %234
  %73 = phi i64 [ 0, %43 ], [ %238, %234 ]
  %74 = phi i8* [ null, %43 ], [ %237, %234 ]
  %75 = phi i64 [ 0, %43 ], [ %236, %234 ]
  %76 = phi i32 [ 1, %43 ], [ %235, %234 ]
  br label %88

77:                                               ; preds = %195
  %78 = load i8, i8* %62, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #10
  %83 = load i64, i64* %39, align 8
  %84 = load i64, i64* %38, align 8
  %85 = icmp uge i64 %83, %84
  %86 = icmp eq i64 %83, -1
  %87 = or i1 %86, %85
  br i1 %87, label %243, label %88

88:                                               ; preds = %72, %82
  %89 = phi i64 [ %73, %72 ], [ %83, %82 ]
  %90 = icmp eq i64 %89, 0
  %91 = zext i1 %90 to i8
  br label %92

92:                                               ; preds = %153, %88
  %93 = phi i64 [ %89, %88 ], [ %154, %153 ]
  %94 = phi i8 [ %91, %88 ], [ %155, %153 ]
  %95 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %44, i64 %93) #10
  %96 = load i8, i8* %95, align 1
  %97 = sext i8 %96 to i32
  switch i32 %97, label %98 [
    i32 32, label %100
    i32 9, label %100
    i32 13, label %114
    i32 10, label %114
    i32 35, label %117
    i32 44, label %122
  ]

98:                                               ; preds = %92
  %99 = load i32, i32* %40, align 4
  br label %130

100:                                              ; preds = %92, %92
  %101 = load i32, i32* %40, align 4
  switch i32 %101, label %102 [
    i32 0, label %104
    i32 1, label %109
  ]

102:                                              ; preds = %100
  %103 = load i64, i64* %39, align 8
  br label %153

104:                                              ; preds = %100
  %105 = load i64, i64* %39, align 8
  %106 = load i8*, i8** %45, align 8
  %107 = load i64, i64* %35, align 8
  %108 = call i64 @_ZN4base8internal17find_first_not_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %106, i64 %107, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2, i64 %105) #10
  store i64 %108, i64* %39, align 8
  br label %153

109:                                              ; preds = %100
  %110 = load i64, i64* %39, align 8
  %111 = load i8*, i8** %45, align 8
  %112 = load i64, i64* %35, align 8
  %113 = call i64 @_ZN4base8internal17find_first_not_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %111, i64 %112, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i64 %110) #10
  store i64 %113, i64* %39, align 8
  br label %153

114:                                              ; preds = %92, %92
  %115 = load i64, i64* %39, align 8
  %116 = add i64 %115, 1
  store i64 %116, i64* %39, align 8
  br label %153

117:                                              ; preds = %92
  %118 = load i64, i64* %39, align 8
  %119 = load i8*, i8** %45, align 8
  %120 = load i64, i64* %35, align 8
  %121 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %119, i64 %120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1, i64 %118) #10
  store i64 %121, i64* %39, align 8
  br label %153

122:                                              ; preds = %92
  %123 = load i32, i32* %40, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %130

125:                                              ; preds = %122
  %126 = load i64, i64* %39, align 8
  %127 = load i8*, i8** %45, align 8
  %128 = load i64, i64* %35, align 8
  %129 = call i64 @_ZN4base8internal17find_first_not_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %127, i64 %128, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i64 %126) #10
  store i64 %129, i64* %39, align 8
  br label %153

130:                                              ; preds = %122, %98
  %131 = phi i32 [ %99, %98 ], [ %123, %122 ]
  %132 = load i64, i64* %39, align 8
  switch i32 %131, label %143 [
    i32 0, label %133
    i32 1, label %137
  ]

133:                                              ; preds = %130
  %134 = load i8*, i8** %45, align 8
  %135 = load i64, i64* %35, align 8
  %136 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %134, i64 %135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i64 5, i64 %132) #10
  br label %141

137:                                              ; preds = %130
  %138 = load i8*, i8** %45, align 8
  %139 = load i64, i64* %35, align 8
  %140 = call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %138, i64 %139, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6, i64 %132) #10
  br label %141

141:                                              ; preds = %133, %137
  %142 = phi i64 [ %140, %137 ], [ %136, %133 ]
  store i64 %142, i64* %39, align 8
  br label %143

143:                                              ; preds = %141, %130
  %144 = phi i64 [ %132, %130 ], [ %142, %141 ]
  %145 = icmp eq i64 %144, -1
  %146 = load i64, i64* %38, align 8
  %147 = select i1 %145, i64 %146, i64 %144
  %148 = load i8*, i8** %36, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 %132
  %150 = sub i64 %147, %132
  store i8* %149, i8** %46, align 8
  store i64 %150, i64* %47, align 8
  %151 = and i8 %94, 1
  store i8 %151, i8* %48, align 8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %179, label %160

153:                                              ; preds = %125, %117, %114, %109, %104, %102
  %154 = phi i64 [ %129, %125 ], [ %121, %117 ], [ %116, %114 ], [ %103, %102 ], [ %108, %104 ], [ %113, %109 ]
  %155 = phi i8 [ %94, %125 ], [ %94, %117 ], [ 1, %114 ], [ %94, %102 ], [ %94, %104 ], [ %94, %109 ]
  %156 = load i64, i64* %38, align 8
  %157 = icmp uge i64 %154, %156
  %158 = icmp eq i64 %154, -1
  %159 = or i1 %158, %157
  br i1 %159, label %243, label %92

160:                                              ; preds = %143
  %161 = icmp eq i64 %150, %75
  br i1 %161, label %162, label %165

162:                                              ; preds = %160
  %163 = call i32 @bcmp(i8* %149, i8* %74, i64 %75) #10
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %234, label %165

165:                                              ; preds = %162, %160
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %65) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %65, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %9) #10
  %166 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %9, %"class.base::BasicStringPiece"* dereferenceable(16) %64) #10
  br i1 %166, label %167, label %170

167:                                              ; preds = %165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* nonnull align 1 %65, i64 17, i1 false)
  %168 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* nonnull %7) #10
  %169 = select i1 %168, i32 1, i32 2
  br label %175

170:                                              ; preds = %165
  %171 = load i64, i64* %39, align 8
  %172 = load i8*, i8** %45, align 8
  %173 = load i64, i64* %35, align 8
  %174 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %172, i64 %173, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1, i64 %171) #10
  store i64 %174, i64* %39, align 8
  br label %175

175:                                              ; preds = %170, %167
  %176 = phi i32 [ %169, %167 ], [ %76, %170 ]
  %177 = phi i64 [ %150, %167 ], [ %75, %170 ]
  %178 = phi i8* [ %149, %167 ], [ %74, %170 ]
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %65) #10
  br label %234

179:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #10
  %180 = icmp ugt i64 %150, -17
  br i1 %180, label %181, label %183

181:                                              ; preds = %179
  %182 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %182) #12
  unreachable

183:                                              ; preds = %179
  %184 = icmp ult i64 %150, 23
  br i1 %184, label %190, label %185

185:                                              ; preds = %183
  %186 = add nuw i64 %150, 16
  %187 = and i64 %186, -16
  %188 = call i8* @_Znwm(i64 %187) #11
  store i8* %188, i8** %54, align 8, !alias.scope !2
  %189 = or i64 %187, -9223372036854775808
  store i64 %189, i64* %55, align 8, !alias.scope !2
  store i64 %150, i64* %56, align 8, !alias.scope !2
  br label %193

190:                                              ; preds = %183
  %191 = trunc i64 %150 to i8
  store i8 %191, i8* %58, align 1, !alias.scope !2
  %192 = icmp eq i64 %150, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %190, %185
  %194 = phi i8* [ %188, %185 ], [ %53, %190 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* align 1 %149, i64 %150, i1 false) #10
  br label %195

195:                                              ; preds = %190, %193
  %196 = phi i8* [ %53, %190 ], [ %194, %193 ]
  %197 = getelementptr inbounds i8, i8* %196, i64 %150
  store i8 0, i8* %197, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %53, i64 24, i1 false) #10
  store i32 %76, i32* %52, align 8
  %198 = load i8, i8* %62, align 1
  %199 = load i8*, i8** %50, align 8
  %200 = load i64, i64* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %201 = icmp slt i8 %198, 0
  %202 = select i1 %201, i8* %199, i8* %49
  store i8* %202, i8** %60, align 8
  %203 = zext i8 %198 to i64
  %204 = select i1 %201, i64 %200, i64 %203
  store i64 %204, i64* %63, align 8
  %205 = call zeroext i1 @_ZN3net16IsValidDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  br i1 %205, label %206, label %77

206:                                              ; preds = %195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %207 = load i8, i8* %62, align 1
  %208 = icmp slt i8 %207, 0
  %209 = load i8*, i8** %50, align 8
  %210 = select i1 %208, i8* %209, i8* %49
  %211 = load i64, i64* %51, align 8
  %212 = zext i8 %207 to i64
  %213 = select i1 %208, i64 %211, i64 %212
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %13, i8* %210, i64 %213) #10
  %214 = load i8, i8* %62, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %206
  %217 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %217) #11
  br label %218

218:                                              ; preds = %216, %206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %66, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #10
  store %"struct.std::__1::pair"* %10, %"struct.std::__1::pair"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #10
  %219 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE25__emplace_unique_key_argsISB_JRKNS_21piecewise_construct_tENS_5tupleIJRKSB_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %67, %"struct.std::__1::pair"* nonnull dereferenceable(32) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.21"* nonnull dereferenceable(1) %5) #10
  %220 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %219, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #10
  %221 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %220, i64 8
  %222 = bitcast %"struct.std::__1::__hash_node_base"* %221 to i8*
  %223 = load i8, i8* %222, align 1
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %228

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %220, i64 6
  %227 = bitcast %"struct.std::__1::__hash_node_base"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %227, i8* nonnull align 1 %19, i64 17, i1 false)
  br label %228

228:                                              ; preds = %218, %225
  %229 = load i8, i8* %62, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %228
  %232 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %232) #11
  br label %233

233:                                              ; preds = %228, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #10
  br label %234

234:                                              ; preds = %162, %233, %175
  %235 = phi i32 [ %176, %175 ], [ %76, %162 ], [ %76, %233 ]
  %236 = phi i64 [ %177, %175 ], [ %75, %162 ], [ %75, %233 ]
  %237 = phi i8* [ %178, %175 ], [ %74, %162 ], [ %74, %233 ]
  %238 = load i64, i64* %39, align 8
  %239 = load i64, i64* %38, align 8
  %240 = icmp uge i64 %238, %239
  %241 = icmp eq i64 %238, -1
  %242 = or i1 %241, %240
  br i1 %242, label %243, label %72

243:                                              ; preds = %234, %82, %153, %18
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #10
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %19) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10ParseHostsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_13unordered_mapINS0_4pairIS6_NS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS0_8equal_toISC_EENS4_INSA_IKSC_SD_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::unordered_map"*) local_unnamed_addr #0 {
  tail call fastcc void @_ZN3net12_GLOBAL__N_123ParseHostsWithCommaModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_13unordered_mapINS1_4pairIS7_NS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS1_8equal_toISD_EENS5_INSB_IKSD_SE_EEEEEENS_19ParseHostsCommaModeE(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::unordered_map"* %1, i32 0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14ParseHostsFileERKN4base8FilePathEPNSt3__113unordered_mapINS4_4pairINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS4_8equal_toISE_EENSA_INS6_IKSE_SF_EEEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::unordered_map"*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %69, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %8, %26
  %13 = phi %"struct.std::__1::__hash_node_base"* [ %15, %26 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 2
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 6
  %18 = bitcast %"struct.std::__1::__hash_node_base"* %17 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %18) #10
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %12
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %16 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %23, %12
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %13 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %15, null
  br i1 %28, label %29, label %12

29:                                               ; preds = %26, %8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %9, align 8
  %30 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %51, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = add i64 %31, -1
  %36 = and i64 %31, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = sub i64 %31, %36
  br label %52

40:                                               ; preds = %52, %33
  %41 = phi i64 [ 0, %33 ], [ %66, %52 ]
  %42 = icmp eq i64 %36, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %40, %43
  %44 = phi i64 [ %48, %43 ], [ %41, %40 ]
  %45 = phi i64 [ %49, %43 ], [ %36, %40 ]
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = add nuw i64 %44, 1
  %49 = add i64 %45, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %43, !llvm.loop !5

51:                                               ; preds = %40, %43, %29
  store i64 0, i64* %5, align 8
  br label %69

52:                                               ; preds = %52, %38
  %53 = phi i64 [ 0, %38 ], [ %66, %52 ]
  %54 = phi i64 [ %39, %38 ], [ %67, %52 ]
  %55 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, i64 %53
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %56, align 8
  %57 = or i64 %53, 1
  %58 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, i64 %57
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %59, align 8
  %60 = or i64 %53, 2
  %61 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %62, align 8
  %63 = or i64 %53, 3
  %64 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %64, i64 %63
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %65, align 8
  %66 = add nuw i64 %53, 4
  %67 = add i64 %54, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %40, label %52

69:                                               ; preds = %2, %51
  %70 = tail call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %0) #10
  br i1 %70, label %71, label %94

71:                                               ; preds = %69
  %72 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  store i64 -6148914691236517206, i64* %3, align 8
  %73 = call zeroext i1 @_ZN4base11GetFileSizeERKNS_8FilePathEPl(%"class.base::FilePath"* dereferenceable(24) %0, i64* nonnull %3) #10
  %74 = xor i1 %73, true
  %75 = load i64, i64* %3, align 8
  %76 = icmp sgt i64 %75, 33554432
  %77 = or i1 %76, %74
  br i1 %77, label %92, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #10
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #10
  %81 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %0, %"class.std::__1::basic_string"* nonnull %4) #10
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call fastcc void @_ZN3net12_GLOBAL__N_123ParseHostsWithCommaModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_13unordered_mapINS1_4pairIS7_NS_13AddressFamilyEEENS_9IPAddressENS_15DnsHostsKeyHashENS1_8equal_toISD_EENS5_INSB_IKSD_SE_EEEEEENS_19ParseHostsCommaModeE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::unordered_map"* %1, i32 0) #10
  br label %83

83:                                               ; preds = %78, %82
  %84 = phi i1 [ true, %82 ], [ false, %78 ]
  %85 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %83, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #10
  br label %92

92:                                               ; preds = %71, %91
  %93 = phi i1 [ false, %71 ], [ %84, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  br label %94

94:                                               ; preds = %69, %92
  %95 = phi i1 [ %93, %92 ], [ true, %69 ]
  ret i1 %95
}

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11GetFileSizeERKNS_8FilePathEPl(%"class.base::FilePath"* dereferenceable(24), i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

declare zeroext i1 @_ZN3net16IsValidDNSDomainERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare i64 @_ZN4base8internal17find_first_not_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

declare i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE25__emplace_unique_key_argsISB_JRKNS_21piecewise_construct_tENS_5tupleIJRKSB_EEENSR_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.std::__1::pair"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.21"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"struct.std::__1::pair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %13 = select i1 %9, i8* %11, i8* %12
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %87, label %19

19:                                               ; preds = %5
  %20 = add i64 %17, -1
  %21 = and i64 %17, 7
  %22 = icmp ult i64 %20, 7
  br i1 %22, label %71, label %23

23:                                               ; preds = %19
  %24 = sub i64 %17, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %67, %25 ]
  %27 = phi i8* [ %13, %23 ], [ %68, %25 ]
  %28 = phi i64 [ %24, %23 ], [ %69, %25 ]
  %29 = load i8, i8* %27, align 1
  %30 = mul i64 %26, 131
  %31 = sext i8 %29 to i64
  %32 = add i64 %30, %31
  %33 = getelementptr inbounds i8, i8* %27, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = mul i64 %32, 131
  %36 = sext i8 %34 to i64
  %37 = add i64 %35, %36
  %38 = getelementptr inbounds i8, i8* %27, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = mul i64 %37, 131
  %41 = sext i8 %39 to i64
  %42 = add i64 %40, %41
  %43 = getelementptr inbounds i8, i8* %27, i64 3
  %44 = load i8, i8* %43, align 1
  %45 = mul i64 %42, 131
  %46 = sext i8 %44 to i64
  %47 = add i64 %45, %46
  %48 = getelementptr inbounds i8, i8* %27, i64 4
  %49 = load i8, i8* %48, align 1
  %50 = mul i64 %47, 131
  %51 = sext i8 %49 to i64
  %52 = add i64 %50, %51
  %53 = getelementptr inbounds i8, i8* %27, i64 5
  %54 = load i8, i8* %53, align 1
  %55 = mul i64 %52, 131
  %56 = sext i8 %54 to i64
  %57 = add i64 %55, %56
  %58 = getelementptr inbounds i8, i8* %27, i64 6
  %59 = load i8, i8* %58, align 1
  %60 = mul i64 %57, 131
  %61 = sext i8 %59 to i64
  %62 = add i64 %60, %61
  %63 = getelementptr inbounds i8, i8* %27, i64 7
  %64 = load i8, i8* %63, align 1
  %65 = mul i64 %62, 131
  %66 = sext i8 %64 to i64
  %67 = add i64 %65, %66
  %68 = getelementptr inbounds i8, i8* %27, i64 8
  %69 = add i64 %28, -8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %25

71:                                               ; preds = %25, %19
  %72 = phi i64 [ undef, %19 ], [ %67, %25 ]
  %73 = phi i64 [ 0, %19 ], [ %67, %25 ]
  %74 = phi i8* [ %13, %19 ], [ %68, %25 ]
  %75 = icmp eq i64 %21, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %71, %76
  %77 = phi i64 [ %83, %76 ], [ %73, %71 ]
  %78 = phi i8* [ %84, %76 ], [ %74, %71 ]
  %79 = phi i64 [ %85, %76 ], [ %21, %71 ]
  %80 = load i8, i8* %78, align 1
  %81 = mul i64 %77, 131
  %82 = sext i8 %80 to i64
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 1
  %85 = add i64 %79, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %76, !llvm.loop !7

87:                                               ; preds = %71, %76, %5
  %88 = phi i64 [ 0, %5 ], [ %72, %71 ], [ %83, %76 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = zext i32 %90 to i64
  %92 = add i64 %88, %91
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %183, label %96

96:                                               ; preds = %87
  %97 = tail call i64 @llvm.ctpop.i64(i64 %94) #10, !range !8
  %98 = icmp ugt i64 %97, 1
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = add i64 %94, -1
  %101 = and i64 %100, %92
  br label %106

102:                                              ; preds = %96
  %103 = icmp ult i64 %92, %94
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %92, %94
  br label %106

106:                                              ; preds = %99, %102, %104
  %107 = phi i64 [ %101, %99 ], [ %105, %104 ], [ %92, %102 ]
  %108 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, i64 %107
  %111 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %111, null
  br i1 %112, label %183, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %111, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %183, label %117

117:                                              ; preds = %113
  %118 = add i64 %94, -1
  br label %119

119:                                              ; preds = %117, %179
  %120 = phi %"struct.std::__1::__hash_node_base"* [ %115, %117 ], [ %181, %179 ]
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 1
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, %92
  br i1 %124, label %135, label %125

125:                                              ; preds = %119
  br i1 %98, label %128, label %126

126:                                              ; preds = %125
  %127 = and i64 %123, %118
  br label %132

128:                                              ; preds = %125
  %129 = icmp ult i64 %123, %94
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = urem i64 %123, %94
  br label %132

132:                                              ; preds = %126, %128, %130
  %133 = phi i64 [ %127, %126 ], [ %131, %130 ], [ %123, %128 ]
  %134 = icmp eq i64 %133, %107
  br i1 %134, label %135, label %183

135:                                              ; preds = %119, %132
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 3
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = zext i8 %139 to i64
  %145 = select i1 %140, i64 %143, i64 %144
  %146 = icmp eq i64 %145, %17
  br i1 %146, label %147, label %179

147:                                              ; preds = %135
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i8*
  %151 = select i1 %140, i8* %149, i8* %150
  br i1 %140, label %158, label %152

152:                                              ; preds = %147
  br i1 %18, label %174, label %153

153:                                              ; preds = %152
  %154 = ptrtoint i8* %149 to i64
  %155 = trunc i64 %154 to i8
  %156 = load i8, i8* %13, align 1
  %157 = icmp eq i8 %156, %155
  br i1 %157, label %159, label %179

158:                                              ; preds = %147
  br i1 %18, label %174, label %171

159:                                              ; preds = %153, %166
  %160 = phi i64 [ %163, %166 ], [ %144, %153 ]
  %161 = phi i8* [ %164, %166 ], [ %150, %153 ]
  %162 = phi i8* [ %167, %166 ], [ %13, %153 ]
  %163 = add i64 %160, -1
  %164 = getelementptr inbounds i8, i8* %161, i64 1
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %174, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds i8, i8* %162, i64 1
  %168 = load i8, i8* %164, align 1
  %169 = load i8, i8* %167, align 1
  %170 = icmp eq i8 %168, %169
  br i1 %170, label %159, label %179

171:                                              ; preds = %158
  %172 = tail call i32 @bcmp(i8* %151, i8* %13, i64 %17) #10
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %179

174:                                              ; preds = %159, %171, %158, %152
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 5
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %175 to i32*
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, %90
  br i1 %178, label %289, label %179

179:                                              ; preds = %166, %171, %153, %135, %174
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %120, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"* %181, null
  br i1 %182, label %183, label %119

183:                                              ; preds = %132, %179, %113, %106, %87
  %184 = phi i64 [ %107, %106 ], [ -6148914691236517206, %87 ], [ %107, %113 ], [ %107, %179 ], [ %107, %132 ]
  %185 = tail call i8* @_Znwm(i64 72) #11, !noalias !9
  %186 = getelementptr inbounds i8, i8* %185, i64 16
  %187 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %187, align 8, !noalias !9
  %189 = bitcast %"struct.std::__1::pair"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1, !noalias !9
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %183
  %194 = bitcast %"struct.std::__1::pair"* %188 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %194, i64 24, i1 false) #10, !noalias !9
  br label %201

195:                                              ; preds = %183
  %196 = bitcast i8* %186 to %"class.std::__1::basic_string"*
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8, !noalias !9
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8, !noalias !9
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %196, i8* %198, i64 %200) #10, !noalias !9
  br label %201

201:                                              ; preds = %193, %195
  %202 = getelementptr inbounds i8, i8* %185, i64 40
  %203 = bitcast i8* %202 to i32*
  %204 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %188, i64 0, i32 1
  %205 = load i32, i32* %204, align 8, !noalias !9
  store i32 %205, i32* %203, align 8, !noalias !9
  %206 = getelementptr inbounds i8, i8* %185, i64 48
  %207 = bitcast i8* %206 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* %207) #10, !noalias !9
  %208 = getelementptr inbounds i8, i8* %185, i64 8
  %209 = bitcast i8* %208 to i64*
  store i64 %92, i64* %209, align 8, !noalias !9
  %210 = bitcast i8* %185 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %210, align 8, !noalias !9
  %211 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 1
  %214 = uitofp i64 %213 to float
  %215 = uitofp i64 %94 to float
  %216 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %217 = load float, float* %216, align 4
  %218 = fmul float %217, %215
  %219 = fcmp olt float %218, %214
  %220 = or i1 %95, %219
  br i1 %220, label %221, label %244

221:                                              ; preds = %201
  %222 = shl i64 %94, 1
  %223 = icmp ult i64 %94, 3
  %224 = tail call i64 @llvm.ctpop.i64(i64 %94) #10, !range !8
  %225 = icmp ugt i64 %224, 1
  %226 = or i1 %223, %225
  %227 = zext i1 %226 to i64
  %228 = or i64 %222, %227
  %229 = fdiv float %214, %217
  %230 = tail call float @llvm.ceil.f32(float %229) #10
  %231 = fptoui float %230 to i64
  %232 = icmp ult i64 %228, %231
  %233 = select i1 %232, i64 %231, i64 %228
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %233)
  %234 = load i64, i64* %93, align 8
  %235 = tail call i64 @llvm.ctpop.i64(i64 %234) #10, !range !8
  %236 = icmp ugt i64 %235, 1
  br i1 %236, label %240, label %237

237:                                              ; preds = %221
  %238 = add i64 %234, -1
  %239 = and i64 %238, %92
  br label %244

240:                                              ; preds = %221
  %241 = icmp ult i64 %92, %234
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = urem i64 %92, %234
  br label %244

244:                                              ; preds = %242, %240, %237, %201
  %245 = phi i64 [ %94, %201 ], [ %234, %237 ], [ %234, %240 ], [ %234, %242 ]
  %246 = phi i64 [ %184, %201 ], [ %239, %237 ], [ %92, %240 ], [ %243, %242 ]
  %247 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %248 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %247, align 8
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %248, i64 %246
  %250 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %249, align 8
  %251 = icmp eq %"struct.std::__1::__hash_node_base"* %250, null
  br i1 %251, label %252, label %278

252:                                              ; preds = %244
  %253 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %254 = bitcast %"struct.std::__1::__hash_node_base"* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast i8* %185 to i64*
  store i64 %255, i64* %256, align 8
  %257 = bitcast %"struct.std::__1::__hash_node_base"* %253 to i8**
  store i8* %185, i8** %257, align 8
  store %"struct.std::__1::__hash_node_base"* %253, %"struct.std::__1::__hash_node_base"** %249, align 8
  %258 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %210, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base"* %258, null
  br i1 %259, label %285, label %260

260:                                              ; preds = %252
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %258, i64 1
  %262 = bitcast %"struct.std::__1::__hash_node_base"* %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = tail call i64 @llvm.ctpop.i64(i64 %245) #10, !range !8
  %265 = icmp ugt i64 %264, 1
  br i1 %265, label %269, label %266

266:                                              ; preds = %260
  %267 = add i64 %245, -1
  %268 = and i64 %263, %267
  br label %273

269:                                              ; preds = %260
  %270 = icmp ult i64 %263, %245
  br i1 %270, label %273, label %271

271:                                              ; preds = %269
  %272 = urem i64 %263, %245
  br label %273

273:                                              ; preds = %266, %269, %271
  %274 = phi i64 [ %268, %266 ], [ %272, %271 ], [ %263, %269 ]
  %275 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %247, align 8
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %275, i64 %274
  %277 = bitcast %"struct.std::__1::__hash_node_base"** %276 to i8**
  br label %283

278:                                              ; preds = %244
  %279 = bitcast %"struct.std::__1::__hash_node_base"* %250 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = bitcast i8* %185 to i64*
  store i64 %280, i64* %281, align 8
  %282 = bitcast %"struct.std::__1::__hash_node_base"* %250 to i8**
  br label %283

283:                                              ; preds = %273, %278
  %284 = phi i8** [ %282, %278 ], [ %277, %273 ]
  store i8* %185, i8** %284, align 8
  br label %285

285:                                              ; preds = %283, %252
  %286 = bitcast i8* %185 to %"struct.std::__1::__hash_node_base"*
  %287 = load i64, i64* %211, align 8
  %288 = add i64 %287, 1
  store i64 %288, i64* %211, align 8
  br label %289

289:                                              ; preds = %174, %285
  %290 = phi i8 [ 1, %285 ], [ 0, %174 ]
  %291 = phi %"struct.std::__1::__hash_node_base"* [ %286, %285 ], [ %120, %174 ]
  %292 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %291, 0
  %293 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %292, i8 %290, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %293
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %188, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !12

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %196, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %196, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %182
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %186, %182 ]
  %81 = phi i64 [ %71, %77 ], [ %184, %182 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %183, %182 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %182, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 3
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8**
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i8*
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 5
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i32*
  br label %111

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %182

111:                                              ; preds = %100, %163
  %112 = phi %"struct.std::__1::__hash_node_base"* [ %114, %163 ], [ %80, %100 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %169, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 2
  %118 = load i8, i8* %103, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i64, i64* %105, align 8
  %121 = zext i8 %118 to i64
  %122 = select i1 %119, i64 %120, i64 %121
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %117 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %122, %131
  br i1 %132, label %133, label %169

133:                                              ; preds = %116
  %134 = load i8*, i8** %106, align 8
  %135 = select i1 %119, i8* %134, i8* %107
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  %140 = icmp eq i64 %122, 0
  br i1 %119, label %147, label %141

141:                                              ; preds = %133
  br i1 %140, label %163, label %142

142:                                              ; preds = %141
  %143 = ptrtoint i8* %134 to i64
  %144 = trunc i64 %143 to i8
  %145 = load i8, i8* %139, align 1
  %146 = icmp eq i8 %145, %144
  br i1 %146, label %148, label %169

147:                                              ; preds = %133
  br i1 %140, label %163, label %160

148:                                              ; preds = %142, %155
  %149 = phi i64 [ %152, %155 ], [ %121, %142 ]
  %150 = phi i8* [ %153, %155 ], [ %107, %142 ]
  %151 = phi i8* [ %156, %155 ], [ %139, %142 ]
  %152 = add i64 %149, -1
  %153 = getelementptr inbounds i8, i8* %150, i64 1
  %154 = icmp eq i64 %152, 0
  br i1 %154, label %163, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds i8, i8* %151, i64 1
  %157 = load i8, i8* %153, align 1
  %158 = load i8, i8* %156, align 1
  %159 = icmp eq i8 %157, %158
  br i1 %159, label %148, label %169

160:                                              ; preds = %147
  %161 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %122) #10
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %148, %141, %147, %160
  %164 = load i32, i32* %109, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 5
  %166 = bitcast %"struct.std::__1::__hash_node_base"* %165 to i32*
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %164, %167
  br i1 %168, label %111, label %169

169:                                              ; preds = %142, %116, %160, %111, %163, %155
  %170 = ptrtoint %"struct.std::__1::__hash_node_base"* %114 to i64
  %171 = bitcast %"struct.std::__1::__hash_node_base"* %112 to i64*
  %172 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %170, i64* %172, align 8
  %173 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %173, i64 %93
  %175 = bitcast %"struct.std::__1::__hash_node_base"** %174 to i64**
  %176 = load i64*, i64** %175, align 8
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %171, align 8
  %178 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %178, i64 %93
  %180 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %179, align 8
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %180, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %181, align 8
  br label %182

182:                                              ; preds = %92, %169, %110
  %183 = phi %"struct.std::__1::__hash_node_base"* [ %80, %110 ], [ %82, %169 ], [ %80, %92 ]
  %184 = phi i64 [ %93, %110 ], [ %81, %169 ], [ %81, %92 ]
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %183, i64 0, i32 0
  %186 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %185, align 8
  %187 = icmp eq %"struct.std::__1::__hash_node_base"* %186, null
  br i1 %187, label %196, label %79

188:                                              ; preds = %2
  %189 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %189, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %189, align 8
  %191 = icmp eq %"struct.std::__1::__hash_node_base"** %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = bitcast %"struct.std::__1::__hash_node_base"** %190 to i8*
  tail call void @_ZdlPv(i8* %193) #11
  br label %194

194:                                              ; preds = %188, %192
  %195 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %195, align 8
  br label %196

196:                                              ; preds = %182, %70, %35, %194
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = !{i64 0, i64 65}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKSB_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINS6_ISZ_EEEEEEmOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3net13AddressFamilyEEENS9_9IPAddressEEENS_22__unordered_map_hasherISB_SD_NS9_15DnsHostsKeyHashENS_8equal_toISB_EELb1EEENS_21__unordered_map_equalISB_SD_SH_SF_Lb1EEENS6_ISD_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKSB_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINS6_ISZ_EEEEEEmOT_DpOT0_"}
!12 = distinct !{!12, !6}
