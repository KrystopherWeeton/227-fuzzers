; ModuleID = '../../ui/views/controls/webview/unhandled_keyboard_event_handler.cc'
source_filename = "../../ui/views/controls/webview/unhandled_keyboard_event_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::UnhandledKeyboardEventHandler" = type { i8 }
%"struct.content::NativeWebKeyboardEvent" = type <{ %"class.blink::WebKeyboardEvent.base", [6 x i8], %"class.ui::Event"*, i8, [7 x i8] }>
%"class.blink::WebKeyboardEvent.base" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::Event" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.7", i32, [4 x i8], %"class.base::ObserverList", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.views::Widget" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.views::View" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.13" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }

@_ZN5views29UnhandledKeyboardEventHandlerC1Ev = hidden unnamed_addr alias void (%"class.views::UnhandledKeyboardEventHandler"*), void (%"class.views::UnhandledKeyboardEventHandler"*)* @_ZN5views29UnhandledKeyboardEventHandlerC2Ev
@_ZN5views29UnhandledKeyboardEventHandlerD1Ev = hidden unnamed_addr alias void (%"class.views::UnhandledKeyboardEventHandler"*), void (%"class.views::UnhandledKeyboardEventHandler"*)* @_ZN5views29UnhandledKeyboardEventHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views29UnhandledKeyboardEventHandlerC2Ev(%"class.views::UnhandledKeyboardEventHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::UnhandledKeyboardEventHandler", %"class.views::UnhandledKeyboardEventHandler"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views29UnhandledKeyboardEventHandlerD2Ev(%"class.views::UnhandledKeyboardEventHandler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5views29UnhandledKeyboardEventHandler19HandleKeyboardEventERKN7content22NativeWebKeyboardEventEPNS_12FocusManagerE(%"class.views::UnhandledKeyboardEventHandler"* nocapture, %"struct.content::NativeWebKeyboardEvent"* dereferenceable(96), %"class.views::FocusManager"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.ui::Accelerator", align 8
  %5 = icmp eq %"class.views::FocusManager"* %2, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 10
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.views::UnhandledKeyboardEventHandler", %"class.views::UnhandledKeyboardEventHandler"* %0, i64 0, i32 0
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store i8 0, i8* %11, align 1
  br label %34

15:                                               ; preds = %10, %6
  %16 = getelementptr inbounds %"class.views::UnhandledKeyboardEventHandler", %"class.views::UnhandledKeyboardEventHandler"* %0, i64 0, i32 0
  store i8 0, i8* %16, align 1
  %17 = load i32, i32* %7, align 8
  %18 = icmp eq i32 %17, 7
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = bitcast %"class.ui::Accelerator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @_ZN2ui40GetAcceleratorFromNativeWebKeyboardEventERKN7content22NativeWebKeyboardEventE(%"class.ui::Accelerator"* nonnull sret %4, %"struct.content::NativeWebKeyboardEvent"* dereferenceable(96) %1) #6
  store i8 1, i8* %16, align 1
  %21 = call zeroext i1 @_ZN5views12FocusManager18ProcessAcceleratorERKN2ui11AcceleratorE(%"class.views::FocusManager"* nonnull %2, %"class.ui::Accelerator"* nonnull dereferenceable(32) %4) #6
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  store i8 0, i8* %16, align 1
  call void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  br label %24

23:                                               ; preds = %19
  call void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #6
  br label %34

24:                                               ; preds = %22, %15
  %25 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 2
  %26 = load %"class.ui::Event"*, %"class.ui::Event"** %25, align 8
  %27 = icmp eq %"class.ui::Event"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = call zeroext i1 @_ZN5views29UnhandledKeyboardEventHandler25HandleNativeKeyboardEventEPN2ui5EventEPNS_12FocusManagerE(%"class.ui::Event"* nonnull %26, %"class.views::FocusManager"* nonnull %2) #6
  br label %34

34:                                               ; preds = %24, %28, %23, %3, %32, %14
  %35 = phi i1 [ false, %14 ], [ %33, %32 ], [ true, %23 ], [ false, %3 ], [ false, %28 ], [ false, %24 ]
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2ui40GetAcceleratorFromNativeWebKeyboardEventERKN7content22NativeWebKeyboardEventE(%"class.ui::Accelerator"* sret, %"struct.content::NativeWebKeyboardEvent"* dereferenceable(96)) local_unnamed_addr #4

declare zeroext i1 @_ZN5views12FocusManager18ProcessAcceleratorERKN2ui11AcceleratorE(%"class.views::FocusManager"*, %"class.ui::Accelerator"* dereferenceable(32)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN5views29UnhandledKeyboardEventHandler25HandleNativeKeyboardEventEPN2ui5EventEPNS_12FocusManagerE(%"class.ui::Event"*, %"class.views::FocusManager"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
