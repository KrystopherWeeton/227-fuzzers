; ModuleID = '../../ui/gl/gl_image_memory.cc'
source_filename = "../../ui/gl/gl_image_memory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::GLImageMemory" = type <{ %"class.gl::GLImage", %"class.gfx::Size", i8*, i32, [4 x i8], i64, i32, [4 x i8], %"class.base::WeakPtr", %"class.base::WeakPtr.6", i64, i32, [4 x i8] }>
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::WeakPtr.6" = type { %"class.base::internal::WeakPtrBase" }
%"class.ui::ScopedMakeCurrent" = type <{ %class.scoped_refptr.7, %class.scoped_refptr.66, %class.scoped_refptr.7, %class.scoped_refptr.66, i8, [7 x i8] }>
%class.scoped_refptr.7 = type { %"class.gl::GLContext"* }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.8", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.38", %"class.gl::RealGLApi"*, %class.scoped_refptr.44, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", i8, [7 x i8] }>
%"class.base::RefCounted.8" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.44 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.45", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.45" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.66 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.67", %"class.base::SupportsWeakPtr.68" }
%"class.base::RefCounted.67" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.68" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gl::ScopedBufferBinder" = type { %"class.gl::GLStateRestorer"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { i8* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.75, i8, [7 x i8] }>
%class.scoped_refptr.75 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.76", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.76" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.77" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.81 }
%class.scoped_refptr.81 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.82", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.82" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.91", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.93", i64, i64 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.103" }
%"class.std::__1::list.103" = type { %"class.std::__1::__list_imp.104" }
%"class.std::__1::__list_imp.104" = type { %"struct.std::__1::__list_node_base.105", %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::__list_node_base.105" = type { %"struct.std::__1::__list_node_base.105"*, %"struct.std::__1::__list_node_base.105"* }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::tuple.116" = type { %"struct.std::__1::__tuple_impl.117" }
%"struct.std::__1::__tuple_impl.117" = type { %"class.std::__1::__tuple_leaf.118", %"class.std::__1::__tuple_leaf.119", %"class.std::__1::__tuple_leaf.120", %"class.std::__1::__tuple_leaf.121", %"class.std::__1::__tuple_leaf.122", %"class.std::__1::__tuple_leaf.123" }
%"class.std::__1::__tuple_leaf.118" = type { i8* }
%"class.std::__1::__tuple_leaf.119" = type { i8* }
%"class.std::__1::__tuple_leaf.120" = type { i64 }
%"class.std::__1::__tuple_leaf.121" = type { i32 }
%"class.std::__1::__tuple_leaf.122" = type { i32 }
%"class.std::__1::__tuple_leaf.123" = type { %"class.base::RepeatingCallback"* }

$_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN2gl13GLImageMemory15ReleaseTexImageEj = comdat any

$_ZN2gl13GLImageMemory5FlushEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJS4_S5_miiS9_EEES7_E7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJS3_S4_miiS8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN2gl13GLImageMemoryE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32)* @_ZN2gl13GLImageMemory12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImageMemory"*, i32)* @_ZN2gl13GLImageMemory15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32)* @_ZN2gl13GLImageMemory12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl13GLImageMemory15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (i1 (%"class.gl::GLImageMemory"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl13GLImageMemory20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.gfx::ColorSpace"*)* @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemory5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl7GLImage12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageMemory"*)* @_ZNK2gl13GLImageMemory7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (void ()* @_ZN2gl7GLImage15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemoryD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemoryD0Ev to i8*)] }, align 8
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@.str = private unnamed_addr constant [31 x i8] c"../../ui/gl/gl_image_memory.cc\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Invalid format: \00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"Invalid stride: \00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [28 x i8] c"GLImageMemory::CopyTexImage\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"CopyTexImage\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"GLImageMemory::CopyTexSubImage\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"GL_ARB_pixel_buffer_object\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"GL_EXT_pixel_buffer_object\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"GL_NV_pixel_buffer_object\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"GL_OES_mapbuffer\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"GL_EXT_map_buffer_range\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"GLES2Data\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"GLES2RGBData\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"GLES2RGB565Data\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN2gl13GLImageMemory13GetDataFormatEv = private unnamed_addr constant [5 x i32] [i32 6408, i32 6408, i32 32993, i32 32993, i32 6408], align 4

@_ZN2gl13GLImageMemoryC1ERKN3gfx4SizeE = hidden unnamed_addr alias void (%"class.gl::GLImageMemory"*, %"class.gfx::Size"*), void (%"class.gl::GLImageMemory"*, %"class.gfx::Size"*)* @_ZN2gl13GLImageMemoryC2ERKN3gfx4SizeE
@_ZN2gl13GLImageMemoryD1Ev = hidden unnamed_addr alias void (%"class.gl::GLImageMemory"*), void (%"class.gl::GLImageMemory"*)* @_ZN2gl13GLImageMemoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLImageMemoryC2ERKN3gfx4SizeE(%"class.gl::GLImageMemory"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 68, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl13GLImageMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1
  %7 = bitcast %"class.gfx::Size"* %1 to i64*
  %8 = bitcast %"class.gfx::Size"* %6 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 2
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  store i32 6, i32* %11, align 8
  %12 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 5
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %14) #13
  %15 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %15) #13
  %16 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 10
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 11
  store i32 0, i32* %17, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLImageMemoryD2Ev(%"class.gl::GLImageMemory"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.ui::ScopedMakeCurrent", align 8
  %3 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl13GLImageMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %44, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %9, label %10, label %44

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.gl::GLContext"**
  %13 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %12, align 8
  %14 = icmp eq %"class.gl::GLContext"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 9, i32 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %16) #13
  br i1 %17, label %18, label %44

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 9, i32 0, i32 1
  %20 = bitcast i64* %19 to %"class.gl::GLSurface"**
  %21 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %20, align 8
  %22 = icmp eq %"class.gl::GLSurface"* %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.ui::ScopedMakeCurrent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false)
  %25 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #13
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %12, align 8
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi %"class.gl::GLContext"* [ %27, %26 ], [ null, %23 ]
  %30 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %16) #13
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = load %"class.gl::GLSurface"*, %"class.gl::GLSurface"** %20, align 8
  br label %33

33:                                               ; preds = %28, %31
  %34 = phi %"class.gl::GLSurface"* [ %32, %31 ], [ null, %28 ]
  call void @_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"* nonnull %2, %"class.gl::GLContext"* %29, %"class.gl::GLSurface"* %34) #13
  %35 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %36 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %35, i64 0, i32 0
  %37 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %36) #13
  %38 = bitcast i8* %37 to %"class.gl::GLApi"**
  %39 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %38, align 8
  %40 = bitcast %"class.gl::GLApi"* %39 to void (%"class.gl::GLApi"*, i32, i32*)***
  %41 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %41, i64 82
  %43 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %42, align 8
  call void %43(%"class.gl::GLApi"* %39, i32 1, i32* %4) #13
  call void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #13
  br label %44

44:                                               ; preds = %18, %10, %15, %7, %1, %33
  %45 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 9, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %45) #13
  %46 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %46) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2ui17ScopedMakeCurrentC1EPN2gl9GLContextEPNS1_9GLSurfaceE(%"class.ui::ScopedMakeCurrent"*, %"class.gl::GLContext"*, %"class.gl::GLSurface"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui17ScopedMakeCurrentD1Ev(%"class.ui::ScopedMakeCurrent"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLImageMemoryD0Ev(%"class.gl::GLImageMemory"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2gl13GLImageMemoryD2Ev(%"class.gl::GLImageMemory"* %0) #13
  %2 = bitcast %"class.gl::GLImageMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GLImageMemory"* @_ZN2gl13GLImageMemory11FromGLImageEPNS_7GLImageE(%"class.gl::GLImage"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.gl::GLImage"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.gl::GLImage"* %0 to i32 (%"class.gl::GLImage"*)***
  %5 = load i32 (%"class.gl::GLImage"*)**, i32 (%"class.gl::GLImage"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gl::GLImage"*)*, i32 (%"class.gl::GLImage"*)** %5, i64 17
  %7 = load i32 (%"class.gl::GLImage"*)*, i32 (%"class.gl::GLImage"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gl::GLImage"* nonnull %0) #13
  %9 = icmp eq i32 %8, 1
  %10 = bitcast %"class.gl::GLImage"* %0 to %"class.gl::GLImageMemory"*
  %11 = select i1 %9, %"class.gl::GLImageMemory"* %10, %"class.gl::GLImageMemory"* null
  ret %"class.gl::GLImageMemory"* %11

12:                                               ; preds = %1
  ret %"class.gl::GLImageMemory"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl13GLImageMemory10InitializeEPKhN3gfx12BufferFormatEm(%"class.gl::GLImageMemory"*, i8*, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::internal::WeakReference", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca %"class.gl::ScopedBufferBinder", align 8
  %10 = alloca %"class.base::WeakPtr", align 8
  %11 = alloca %"class.base::WeakPtr.6", align 8
  %12 = icmp ult i32 %2, 12
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %14, label %15, label %177

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %16) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i32 250, i32 2) #13
  %17 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16) #13
  %20 = call i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32 %2) #13
  %21 = call i64 @strlen(i8* %20) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* %20, i64 %21) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %16) #13
  br label %177

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = tail call i64 @_ZN3gfx22RowSizeForBufferFormatEmNS_12BufferFormatEm(i64 %26, i32 %2, i64 0) #13
  %28 = icmp ule i64 %27, %3
  %29 = and i64 %3, 3
  %30 = icmp eq i64 %29, 0
  %31 = and i1 %30, %28
  br i1 %31, label %40, label %32

32:                                               ; preds = %23
  %33 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %33, label %34, label %177

34:                                               ; preds = %32
  %35 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %35) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i32 255, i32 2) #13
  %36 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %36 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 16) #13
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %38, i64 %3) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %35) #13
  br label %177

40:                                               ; preds = %23
  %41 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 2
  store i8* %1, i8** %41, align 8
  %42 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  store i32 %2, i32* %42, align 8
  %43 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 5
  store i64 %3, i64* %43, align 8
  %44 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #13
  %45 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %44) #13
  %46 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %45, i64 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %45, i64 0, i32 8
  %50 = load i32, i32* %49, align 8
  %51 = icmp ugt i32 %50, 2
  br i1 %48, label %52, label %59

52:                                               ; preds = %40
  br i1 %51, label %66, label %53

53:                                               ; preds = %52
  %54 = icmp eq i32 %50, 2
  br i1 %54, label %55, label %60

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %45, i64 0, i32 9
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %66

59:                                               ; preds = %40
  br i1 %51, label %66, label %60

60:                                               ; preds = %59, %55, %53
  %61 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %44, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #13
  br i1 %61, label %66, label %62

62:                                               ; preds = %60
  %63 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %44, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #13
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %44, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #13
  br i1 %65, label %66, label %177

66:                                               ; preds = %52, %59, %55, %60, %62, %64
  %67 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %44) #13
  %68 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %67, i64 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %67, i64 0, i32 8
  %73 = load i32, i32* %72, align 8
  %74 = icmp ugt i32 %73, 1
  br i1 %74, label %88, label %75

75:                                               ; preds = %66, %71
  %76 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #13
  br i1 %76, label %88, label %77

77:                                               ; preds = %75
  %78 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %44) #13
  %79 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %78, i64 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %78, i64 0, i32 8
  %84 = load i32, i32* %83, align 8
  %85 = icmp ugt i32 %84, 2
  br i1 %85, label %88, label %86

86:                                               ; preds = %77, %82
  %87 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %44, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0)) #13
  br i1 %87, label %88, label %177

88:                                               ; preds = %82, %71, %86, %75
  %89 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = mul i64 %91, %3
  %93 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 10
  store i64 %92, i64* %93, align 8
  %94 = lshr i64 %92, 20
  %95 = tail call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #13
  %96 = sext i32 %95 to i64
  %97 = icmp ugt i64 %94, %96
  %98 = select i1 %97, i64 %96, i64 %94
  %99 = trunc i64 %98 to i32
  %100 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 11
  store i32 %99, i32* %100, align 8
  %101 = icmp sgt i32 %99, 1
  br i1 %101, label %102, label %177

102:                                              ; preds = %88
  %103 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %104 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %103, i64 0, i32 0
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #13
  %106 = bitcast i8* %105 to %"class.gl::GLApi"**
  %107 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %106, align 8
  %108 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 6
  %109 = bitcast %"class.gl::GLApi"* %107 to void (%"class.gl::GLApi"*, i32, i32*)***
  %110 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %110, i64 145
  %112 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %111, align 8
  tail call void %112(%"class.gl::GLApi"* %107, i32 1, i32* %108) #13
  %113 = bitcast %"class.gl::ScopedBufferBinder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #13
  %114 = bitcast %"class.gl::ScopedBufferBinder"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 16, i1 false)
  %115 = load i32, i32* %108, align 8
  call void @_ZN2gl18ScopedBufferBinderC1Ejj(%"class.gl::ScopedBufferBinder"* nonnull %9, i32 35052, i32 %115) #13
  %116 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %117 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %116, i64 0, i32 0
  %118 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %117) #13
  %119 = bitcast i8* %118 to %"class.gl::GLApi"**
  %120 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %119, align 8
  %121 = load i64, i64* %93, align 8
  %122 = bitcast %"class.gl::GLApi"* %120 to void (%"class.gl::GLApi"*, i32, i64, i8*, i32)***
  %123 = load void (%"class.gl::GLApi"*, i32, i64, i8*, i32)**, void (%"class.gl::GLApi"*, i32, i64, i8*, i32)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i64, i8*, i32)*, void (%"class.gl::GLApi"*, i32, i64, i8*, i32)** %123, i64 36
  %125 = load void (%"class.gl::GLApi"*, i32, i64, i8*, i32)*, void (%"class.gl::GLApi"*, i32, i64, i8*, i32)** %124, align 8
  call void %125(%"class.gl::GLApi"* %120, i32 35052, i64 %121, i8* null, i32 35048) #13
  %126 = bitcast %"class.base::WeakPtr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #13
  %127 = getelementptr inbounds %"class.gl::GLContext", %"class.gl::GLContext"* %44, i64 0, i32 3
  %128 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #13, !noalias !3
  %129 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %127, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %129) #13, !noalias !3
  %130 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %127, i64 -2
  %131 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  %132 = ptrtoint %"class.base::SupportsWeakPtr"* %130 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %131, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %132) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #13, !noalias !3
  %133 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8
  %134 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.base::WeakPtr"* %10 to i64*
  %136 = load i64, i64* %135, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %134, align 8
  %137 = bitcast %"class.base::WeakPtr"* %133 to i64*
  %138 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %133, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %138, align 8
  store i64 %136, i64* %137, align 8
  %140 = icmp eq %"class.base::internal::WeakReference::Flag"* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %102
  %142 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw sub i32* %142, i32 1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %139) #13
  %146 = bitcast %"class.base::internal::WeakReference::Flag"* %139 to i8*
  call void @_ZdlPv(i8* %146) #14
  br label %147

147:                                              ; preds = %102, %141, %145
  %148 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0, i32 1
  store i64 %149, i64* %150, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %131) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #13
  %151 = call %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() #13
  %152 = bitcast %"class.base::WeakPtr.6"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #13
  %153 = getelementptr inbounds %"class.gl::GLSurface", %"class.gl::GLSurface"* %151, i64 0, i32 2
  %154 = bitcast %"class.base::internal::WeakReference"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #13, !noalias !6
  %155 = getelementptr inbounds %"class.base::SupportsWeakPtr.68", %"class.base::SupportsWeakPtr.68"* %153, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %6, %"class.base::internal::WeakReferenceOwner"* %155) #13, !noalias !6
  %156 = getelementptr inbounds %"class.base::SupportsWeakPtr.68", %"class.base::SupportsWeakPtr.68"* %153, i64 -2
  %157 = getelementptr inbounds %"class.base::WeakPtr.6", %"class.base::WeakPtr.6"* %11, i64 0, i32 0
  %158 = ptrtoint %"class.base::SupportsWeakPtr.68"* %156 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %157, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %6, i64 %158) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #13, !noalias !6
  %159 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 9
  %160 = getelementptr inbounds %"class.base::WeakPtr.6", %"class.base::WeakPtr.6"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.base::WeakPtr.6"* %11 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %160, align 8
  %163 = bitcast %"class.base::WeakPtr.6"* %159 to i64*
  %164 = getelementptr inbounds %"class.base::WeakPtr.6", %"class.base::WeakPtr.6"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %164, align 8
  store i64 %162, i64* %163, align 8
  %166 = icmp eq %"class.base::internal::WeakReference::Flag"* %165, null
  br i1 %166, label %173, label %167

167:                                              ; preds = %147
  %168 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw sub i32* %168, i32 1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %173

171:                                              ; preds = %167
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %165) #13
  %172 = bitcast %"class.base::internal::WeakReference::Flag"* %165 to i8*
  call void @_ZdlPv(i8* %172) #14
  br label %173

173:                                              ; preds = %147, %167, %171
  %174 = getelementptr inbounds %"class.base::WeakPtr.6", %"class.base::WeakPtr.6"* %11, i64 0, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 9, i32 0, i32 1
  store i64 %175, i64* %176, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %157) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #13
  call void @_ZN2gl18ScopedBufferBinderD1Ev(%"class.gl::ScopedBufferBinder"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #13
  br label %177

177:                                              ; preds = %34, %32, %15, %13, %64, %86, %173, %88
  %178 = phi i1 [ true, %88 ], [ true, %173 ], [ true, %86 ], [ true, %64 ], [ false, %13 ], [ false, %15 ], [ false, %32 ], [ false, %34 ]
  ret i1 %178
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl13GLImageMemory11ValidFormatEN3gfx12BufferFormatE(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp ult i32 %0, 15
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i32 %0 to i15
  %5 = lshr i15 4095, %4
  %6 = and i15 %5, 1
  %7 = icmp ne i15 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare i64 @_ZN3gfx22RowSizeForBufferFormatEmNS_12BufferFormatEm(i64, i32, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #2

declare i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #2

declare void @_ZN2gl18ScopedBufferBinderC1Ejj(%"class.gl::ScopedBufferBinder"*, i32, i32) unnamed_addr #2

declare %"class.gl::GLSurface"* @_ZN2gl9GLSurface10GetCurrentEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl18ScopedBufferBinderD1Ev(%"class.gl::ScopedBufferBinder"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl13GLImageMemory7GetSizeEv(%"class.gl::GLImageMemory"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLImageMemory17GetInternalFormatEv(%"class.gl::GLImageMemory"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32 %3) #13
  ret i32 %4
}

declare i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLImageMemory13GetDataFormatEv(%"class.gl::GLImageMemory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -5
  %5 = icmp ult i32 %4, 5
  br i1 %5, label %9, label %6

6:                                                ; preds = %9, %1
  %7 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 0
  %8 = tail call i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"* %7) #13
  ret i32 %8

9:                                                ; preds = %1
  %10 = trunc i32 %4 to i8
  %11 = lshr i8 29, %10
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %6, label %14

14:                                               ; preds = %9
  %15 = sext i32 %4 to i64
  %16 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2gl13GLImageMemory13GetDataFormatEv, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  ret i32 %17
}

declare i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLImageMemory11GetDataTypeEv(%"class.gl::GLImageMemory"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @_ZN2gl24BufferFormatToGLDataTypeEN3gfx12BufferFormatE(i32 %3) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ 33636, %1 ]
  ret i32 %8
}

declare i32 @_ZN2gl24BufferFormatToGLDataTypeEN3gfx12BufferFormatE(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl13GLImageMemory16ShouldBindOrCopyEv(%"class.gl::GLImageMemory"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl13GLImageMemory12BindTexImageEj(%"class.gl::GLImageMemory"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl13GLImageMemory12CopyTexImageEj(%"class.gl::GLImageMemory"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.absl::optional", align 8
  %9 = alloca %"class.gl::ScopedBufferBinder", align 8
  %10 = alloca %"class.base::WaitableEvent", align 8
  %11 = alloca %"class.base::RepeatingCallback", align 8
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = alloca %"class.base::Location", align 8
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %26, label %18, !prof !9

18:                                               ; preds = %2
  %19 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %3, align 4
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %4, align 4
  %25 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  br label %26

26:                                               ; preds = %2, %18
  %27 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %18 ]
  %28 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), %18 ]
  %29 = phi i64 [ -6148914691236517206, %2 ], [ %25, %18 ]
  %30 = icmp eq i32 %1, 36197
  br i1 %30, label %336, label %31

31:                                               ; preds = %26
  %32 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #13
  %33 = bitcast %"class.gl::GLImageMemory"* %0 to i32 (%"class.gl::GLImageMemory"*)***
  %34 = load i32 (%"class.gl::GLImageMemory"*)**, i32 (%"class.gl::GLImageMemory"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %34, i64 2
  %36 = load i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %35, align 8
  %37 = call i32 %36(%"class.gl::GLImageMemory"* %0) #13
  store i32 %37, i32* %5, align 4
  %38 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #13
  %39 = load i32 (%"class.gl::GLImageMemory"*)**, i32 (%"class.gl::GLImageMemory"*)*** %33, align 8
  %40 = getelementptr inbounds i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %39, i64 3
  %41 = load i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %40, align 8
  %42 = call i32 %41(%"class.gl::GLImageMemory"* %0) #13
  store i32 %42, i32* %6, align 4
  %43 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #13
  store i32 -1431655766, i32* %7, align 4
  %44 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 5
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  switch i32 %47, label %71 [
    i32 2, label %48
    i32 1, label %48
    i32 3, label %48
    i32 4, label %48
    i32 5, label %54
    i32 6, label %54
    i32 7, label %54
    i32 8, label %54
    i32 9, label %54
    i32 10, label %54
    i32 11, label %60
    i32 0, label %66
  ]

48:                                               ; preds = %31, %31, %31, %31
  %49 = icmp ult i64 %45, 2147483648
  br i1 %49, label %51, label %50, !prof !9

50:                                               ; preds = %48
  call void @llvm.trap() #13
  unreachable

51:                                               ; preds = %48
  %52 = trunc i64 %45 to i32
  %53 = sdiv i32 %52, 2
  br label %71

54:                                               ; preds = %31, %31, %31, %31, %31, %31
  %55 = icmp ult i64 %45, 2147483648
  br i1 %55, label %57, label %56, !prof !9

56:                                               ; preds = %54
  call void @llvm.trap() #13
  unreachable

57:                                               ; preds = %54
  %58 = trunc i64 %45 to i32
  %59 = sdiv i32 %58, 4
  br label %71

60:                                               ; preds = %31
  %61 = icmp ult i64 %45, 2147483648
  br i1 %61, label %63, label %62, !prof !9

62:                                               ; preds = %60
  call void @llvm.trap() #13
  unreachable

63:                                               ; preds = %60
  %64 = trunc i64 %45 to i32
  %65 = sdiv i32 %64, 8
  br label %71

66:                                               ; preds = %31
  %67 = icmp ult i64 %45, 2147483648
  br i1 %67, label %69, label %68, !prof !9

68:                                               ; preds = %66
  call void @llvm.trap() #13
  unreachable

69:                                               ; preds = %66
  %70 = trunc i64 %45 to i32
  br label %71

71:                                               ; preds = %31, %51, %57, %63, %69
  %72 = phi i32 [ %70, %69 ], [ %65, %63 ], [ %59, %57 ], [ %53, %51 ], [ 0, %31 ]
  store i32 %72, i32* %7, align 4
  %73 = call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #13
  %74 = call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %73) #13
  %75 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %74, i64 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %108, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1
  %81 = load i32, i32* %46, align 8
  %82 = load i64, i64* %44, align 8
  %83 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 2
  %84 = load i8*, i8** %83, align 8
  call fastcc void @_ZN2gl12_GLOBAL__N_19GLES2DataERKN3gfx4SizeENS1_12BufferFormatEmPKhPjS8_Pi(%"class.absl::optional"* nonnull sret %8, %"class.gfx::Size"* dereferenceable(8) %80, i32 %81, i64 %82, i8* %84, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7)
  %85 = load i8, i8* %79, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.std::__1::vector"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %92 = bitcast i8** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.std::__1::vector"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #13
  %95 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %87
  %99 = ptrtoint i8* %96 to i64
  %100 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %101 = bitcast i8** %100 to i64*
  store i64 %99, i64* %101, align 8
  call void @_ZdlPv(i8* nonnull %96) #14
  br label %102

102:                                              ; preds = %98, %87
  store i8 0, i8* %79, align 8
  br label %103

103:                                              ; preds = %78, %102
  %104 = phi i64 [ %90, %102 ], [ 0, %78 ]
  %105 = phi i64 [ %93, %102 ], [ 0, %78 ]
  %106 = phi i8 [ 1, %102 ], [ 0, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #13
  %107 = load i32, i32* %7, align 4
  br label %108

108:                                              ; preds = %71, %103
  %109 = phi i32 [ %72, %71 ], [ %107, %103 ]
  %110 = phi i8 [ 0, %71 ], [ %106, %103 ]
  %111 = phi i64 [ 0, %71 ], [ %105, %103 ]
  %112 = phi i64 [ 0, %71 ], [ %104, %103 ]
  %113 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %109, %114
  br i1 %115, label %126, label %116

116:                                              ; preds = %108
  %117 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %118 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %117, i64 0, i32 0
  %119 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %118) #13
  %120 = bitcast i8* %119 to %"class.gl::GLApi"**
  %121 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %120, align 8
  %122 = bitcast %"class.gl::GLApi"* %121 to void (%"class.gl::GLApi"*, i32, i32)***
  %123 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %123, i64 328
  %125 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %124, align 8
  call void %125(%"class.gl::GLApi"* %121, i32 3314, i32 %109) #13
  br label %126

126:                                              ; preds = %108, %116
  %127 = icmp eq i8 %110, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = sub i64 %111, %112
  br label %136

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 2
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 10
  %135 = load i64, i64* %134, align 8
  br label %136

136:                                              ; preds = %130, %128
  %137 = phi i64 [ %112, %128 ], [ %133, %130 ]
  %138 = phi i64 [ %129, %128 ], [ %135, %130 ]
  %139 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %297, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0, i32 0
  %144 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %143) #13
  br i1 %144, label %145, label %149

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 8, i32 0, i32 1
  %147 = bitcast i64* %146 to %"class.gl::GLContext"**
  %148 = load %"class.gl::GLContext"*, %"class.gl::GLContext"** %147, align 8
  br label %149

149:                                              ; preds = %142, %145
  %150 = phi %"class.gl::GLContext"* [ %148, %145 ], [ null, %142 ]
  %151 = icmp eq %"class.gl::GLContext"* %150, %73
  br i1 %151, label %152, label %297

152:                                              ; preds = %149
  %153 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %154 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %153, i64 0, i32 0
  %155 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %154) #13
  %156 = bitcast i8* %155 to %"class.gl::GLApi"**
  %157 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %156, align 8
  %158 = load i32 (%"class.gl::GLImageMemory"*)**, i32 (%"class.gl::GLImageMemory"*)*** %33, align 8
  %159 = getelementptr inbounds i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %158, i64 1
  %160 = load i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %159, align 8
  %161 = call i32 %160(%"class.gl::GLImageMemory"* %0) #13
  %162 = load i32, i32* %113, align 4
  %163 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = load i32, i32* %5, align 4
  %166 = load i32, i32* %6, align 4
  %167 = bitcast %"class.gl::GLApi"* %157 to void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %168 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %168, i64 420
  %170 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %169, align 8
  call void %170(%"class.gl::GLApi"* %157, i32 %1, i32 0, i32 %161, i32 %162, i32 %164, i32 0, i32 %165, i32 %166, i8* null) #13
  %171 = bitcast %"class.gl::ScopedBufferBinder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #13
  %172 = bitcast %"class.gl::ScopedBufferBinder"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 16, i1 false)
  %173 = load i32, i32* %139, align 8
  call void @_ZN2gl18ScopedBufferBinderC1Ejj(%"class.gl::ScopedBufferBinder"* nonnull %9, i32 35052, i32 %173) #13
  %174 = call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %73) #13
  %175 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %174, i64 0, i32 0
  %176 = load i8, i8* %175, align 8, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %152
  %179 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %174, i64 0, i32 8
  %180 = load i32, i32* %179, align 8
  %181 = icmp ugt i32 %180, 1
  br i1 %181, label %184, label %182

182:                                              ; preds = %178, %152
  %183 = call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %73, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0)) #13
  br label %184

184:                                              ; preds = %178, %182
  %185 = phi i1 [ %183, %182 ], [ true, %178 ]
  %186 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %187 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %186, i64 0, i32 0
  %188 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %187) #13
  %189 = bitcast i8* %188 to %"class.gl::GLApi"**
  %190 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %189, align 8
  br i1 %185, label %191, label %197

191:                                              ; preds = %184
  %192 = bitcast %"class.gl::GLApi"* %190 to i8* (%"class.gl::GLApi"*, i32, i32)***
  %193 = load i8* (%"class.gl::GLApi"*, i32, i32)**, i8* (%"class.gl::GLApi"*, i32, i32)*** %192, align 8
  %194 = getelementptr inbounds i8* (%"class.gl::GLApi"*, i32, i32)*, i8* (%"class.gl::GLApi"*, i32, i32)** %193, i64 305
  %195 = load i8* (%"class.gl::GLApi"*, i32, i32)*, i8* (%"class.gl::GLApi"*, i32, i32)** %194, align 8
  %196 = call i8* %195(%"class.gl::GLApi"* %190, i32 35052, i32 35001) #13
  br label %203

197:                                              ; preds = %184
  %198 = bitcast %"class.gl::GLApi"* %190 to i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)***
  %199 = load i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)**, i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)*** %198, align 8
  %200 = getelementptr inbounds i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)*, i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)** %199, i64 306
  %201 = load i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)*, i8* (%"class.gl::GLApi"*, i32, i64, i64, i32)** %200, align 8
  %202 = call i8* %201(%"class.gl::GLApi"* %190, i32 35052, i64 0, i64 %138, i32 2) #13
  br label %203

203:                                              ; preds = %197, %191
  %204 = phi i8* [ %202, %197 ], [ %196, %191 ]
  %205 = ptrtoint i8* %204 to i64
  %206 = icmp eq i8* %204, null
  br i1 %206, label %287, label %207

207:                                              ; preds = %203
  %208 = bitcast %"class.base::WaitableEvent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #13
  %209 = bitcast %"class.base::WaitableEvent"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %10, i32 0, i32 1) #13
  %210 = bitcast %"class.base::RepeatingCallback"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #13
  %211 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %211, align 8
  %212 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 11
  %213 = load i32, i32* %212, align 8
  %214 = ptrtoint %"class.base::WaitableEvent"* %10 to i64
  %215 = call i8* @_Znwm(i64 56) #14, !noalias !10
  %216 = bitcast i8* %215 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %216, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !10
  %217 = getelementptr inbounds i8, i8* %215, i64 32
  %218 = bitcast i8* %217 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::WaitableEvent"*)* @_ZN4base13WaitableEvent6SignalEv to i64), i64 0>, <2 x i64>* %218, align 8, !noalias !10
  %219 = getelementptr inbounds i8, i8* %215, i64 48
  %220 = bitcast i8* %219 to i64*
  store i64 %214, i64* %220, align 8, !noalias !10
  %221 = bitcast %"class.base::OnceCallback"* %12 to i8**
  store i8* %215, i8** %221, align 8, !alias.scope !10
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %11, i32 %213, %"class.base::OnceCallback"* nonnull %12) #13
  %222 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %222) #13
  %223 = load i32, i32* %212, align 8
  %224 = icmp sgt i32 %223, 1
  br i1 %224, label %225, label %230

225:                                              ; preds = %207
  %226 = bitcast %"class.base::Location"* %13 to i8*
  %227 = ptrtoint %"class.base::RepeatingCallback"* %11 to i64
  %228 = bitcast %"class.base::OnceCallback"* %14 to i8**
  %229 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  br label %264

230:                                              ; preds = %264, %207
  %231 = phi i32 [ %223, %207 ], [ %285, %264 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234, !prof !15

233:                                              ; preds = %230
  call void @llvm.trap() #13
  unreachable

234:                                              ; preds = %230
  %235 = sext i32 %231 to i64
  %236 = inttoptr i64 %137 to i8*
  %237 = udiv i64 %138, %235
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 %236, i64 %237, i1 false) #13
  %238 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %211, align 8
  %239 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %238, i64 0, i32 1
  %240 = bitcast void ()** %239 to void (%"class.base::internal::BindStateBase"*)**
  %241 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %240, align 8
  call void %241(%"class.base::internal::BindStateBase"* %238) #13
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %10) #13
  %242 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %243 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %242, i64 0, i32 0
  %244 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %243) #13
  %245 = bitcast i8* %244 to %"class.gl::GLApi"**
  %246 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %245, align 8
  %247 = bitcast %"class.gl::GLApi"* %246 to i8 (%"class.gl::GLApi"*, i32)***
  %248 = load i8 (%"class.gl::GLApi"*, i32)**, i8 (%"class.gl::GLApi"*, i32)*** %247, align 8
  %249 = getelementptr inbounds i8 (%"class.gl::GLApi"*, i32)*, i8 (%"class.gl::GLApi"*, i32)** %248, i64 477
  %250 = load i8 (%"class.gl::GLApi"*, i32)*, i8 (%"class.gl::GLApi"*, i32)** %249, align 8
  %251 = call zeroext i8 %250(%"class.gl::GLApi"* %246, i32 35052) #13
  %252 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %253 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %252, i64 0, i32 0
  %254 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %253) #13
  %255 = bitcast i8* %254 to %"class.gl::GLApi"**
  %256 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %255, align 8
  %257 = load i32, i32* %113, align 4
  %258 = load i32, i32* %163, align 4
  %259 = bitcast %"class.gl::GLApi"* %256 to void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %260 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %260, i64 438
  %262 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %261, align 8
  call void %262(%"class.gl::GLApi"* %256, i32 %1, i32 0, i32 0, i32 0, i32 %257, i32 %258, i32 %165, i32 %166, i8* null) #13
  %263 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %263) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #13
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #13
  call void @_ZN2gl18ScopedBufferBinderD1Ev(%"class.gl::ScopedBufferBinder"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #13
  br label %317

264:                                              ; preds = %225, %264
  %265 = phi i32 [ 1, %225 ], [ %284, %264 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %226) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i32 387) #13
  %266 = call i8* @_Znwm(i64 80) #14, !noalias !16
  %267 = bitcast i8* %266 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %267, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJS4_S5_miiS9_EEES7_E7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJS3_S4_miiS8_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !16
  %268 = getelementptr inbounds i8, i8* %266, i64 32
  %269 = bitcast i8* %268 to i64*
  store i64 ptrtoint (void (i8*, i8*, i64, i64, i64, %"class.base::RepeatingCallback"*)* @_ZN2gl12_GLOBAL__N_110MemcpyTaskEPKvPvmmmPN4base17RepeatingCallbackIFvvEEE to i64), i64* %269, align 8, !noalias !16
  %270 = getelementptr inbounds i8, i8* %266, i64 40
  %271 = bitcast i8* %270 to i64*
  store i64 %137, i64* %271, align 8, !noalias !16
  %272 = getelementptr inbounds i8, i8* %266, i64 48
  %273 = bitcast i8* %272 to i64*
  store i64 %205, i64* %273, align 8, !noalias !16
  %274 = getelementptr inbounds i8, i8* %266, i64 56
  %275 = bitcast i8* %274 to i64*
  store i64 %138, i64* %275, align 8, !noalias !16
  %276 = getelementptr inbounds i8, i8* %266, i64 64
  %277 = bitcast i8* %276 to i32*
  store i32 %265, i32* %277, align 4, !noalias !16
  %278 = getelementptr inbounds i8, i8* %266, i64 68
  %279 = bitcast i8* %278 to i32*
  %280 = load i32, i32* %212, align 4, !noalias !16
  store i32 %280, i32* %279, align 4, !noalias !16
  %281 = getelementptr inbounds i8, i8* %266, i64 72
  %282 = bitcast i8* %281 to i64*
  store i64 %227, i64* %282, align 8, !noalias !16
  store i8* %266, i8** %228, align 8, !alias.scope !16
  %283 = call zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %13, %"class.base::OnceCallback"* nonnull %14) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %229) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %226) #13
  %284 = add nuw nsw i32 %265, 1
  %285 = load i32, i32* %212, align 8
  %286 = icmp slt i32 %284, %285
  br i1 %286, label %264, label %230

287:                                              ; preds = %203
  %288 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %289 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %288, i64 0, i32 0
  %290 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %289) #13
  %291 = bitcast i8* %290 to %"class.gl::GLApi"**
  %292 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %291, align 8
  %293 = bitcast %"class.gl::GLApi"* %292 to void (%"class.gl::GLApi"*, i32, i32*)***
  %294 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %293, align 8
  %295 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %294, i64 82
  %296 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %295, align 8
  call void %296(%"class.gl::GLApi"* %292, i32 1, i32* %139) #13
  store i32 0, i32* %139, align 8
  call void @_ZN2gl18ScopedBufferBinderD1Ev(%"class.gl::ScopedBufferBinder"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #13
  br label %297

297:                                              ; preds = %136, %149, %287
  %298 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %299 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %298, i64 0, i32 0
  %300 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %299) #13
  %301 = bitcast i8* %300 to %"class.gl::GLApi"**
  %302 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %301, align 8
  %303 = load i32 (%"class.gl::GLImageMemory"*)**, i32 (%"class.gl::GLImageMemory"*)*** %33, align 8
  %304 = getelementptr inbounds i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %303, i64 1
  %305 = load i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %304, align 8
  %306 = call i32 %305(%"class.gl::GLImageMemory"* %0) #13
  %307 = load i32, i32* %113, align 4
  %308 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 1
  %309 = load i32, i32* %308, align 4
  %310 = load i32, i32* %5, align 4
  %311 = load i32, i32* %6, align 4
  %312 = inttoptr i64 %137 to i8*
  %313 = bitcast %"class.gl::GLApi"* %302 to void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %314 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %314, i64 420
  %316 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %315, align 8
  call void %316(%"class.gl::GLApi"* %302, i32 %1, i32 0, i32 %306, i32 %307, i32 %309, i32 0, i32 %310, i32 %311, i8* %312) #13
  br label %317

317:                                              ; preds = %234, %297
  %318 = load i32, i32* %113, align 4
  %319 = icmp eq i32 %109, %318
  br i1 %319, label %330, label %320

320:                                              ; preds = %317
  %321 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %322 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %321, i64 0, i32 0
  %323 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %322) #13
  %324 = bitcast i8* %323 to %"class.gl::GLApi"**
  %325 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %324, align 8
  %326 = bitcast %"class.gl::GLApi"* %325 to void (%"class.gl::GLApi"*, i32, i32)***
  %327 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %327, i64 328
  %329 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %328, align 8
  call void %329(%"class.gl::GLApi"* %325, i32 3314, i32 0) #13
  br label %330

330:                                              ; preds = %317, %320
  %331 = icmp eq i64 %112, 0
  %332 = or i1 %127, %331
  br i1 %332, label %335, label %333

333:                                              ; preds = %330
  %334 = inttoptr i64 %112 to i8*
  call void @_ZdlPv(i8* nonnull %334) #14
  br label %335

335:                                              ; preds = %333, %330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #13
  br label %336

336:                                              ; preds = %26, %335
  %337 = phi i1 [ true, %335 ], [ false, %26 ]
  %338 = icmp eq i8* %27, null
  br i1 %338, label %343, label %339

339:                                              ; preds = %336
  %340 = load i8, i8* %27, align 1
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %343, label %342

342:                                              ; preds = %339
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %28, i64 %29) #13
  br label %343

343:                                              ; preds = %336, %339, %342
  ret i1 %337
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #13
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247504638, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #13
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #13
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #13
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #13
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #13
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #14
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret i64 %28
}

declare %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2gl12_GLOBAL__N_19GLES2DataERKN3gfx4SizeENS1_12BufferFormatEmPKhPjS8_Pi(%"class.absl::optional"* noalias sret, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i64, i8* nocapture readonly, i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::vector", align 16
  %18 = alloca %"class.std::__1::vector", align 16
  %19 = alloca %"class.std::__1::vector", align 16
  %20 = alloca %"class.std::__1::vector", align 8
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %22 = and i8 %21, 25
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24, !prof !9

24:                                               ; preds = %8
  %25 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %15, align 4
  %28 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %16, align 4
  %31 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  br label %32

32:                                               ; preds = %8, %24
  %33 = phi i64 [ -6148914691236517206, %8 ], [ %31, %24 ]
  %34 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %8 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), %24 ]
  %35 = phi i8* [ null, %8 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %24 ]
  switch i32 %2, label %443 [
    i32 5, label %36
    i32 3, label %137
    i32 7, label %237
    i32 4, label %338
    i32 6, label %338
    i32 8, label %338
    i32 9, label %338
    i32 10, label %338
    i32 11, label %338
    i32 0, label %338
    i32 1, label %338
    i32 2, label %338
    i32 12, label %439
    i32 13, label %439
    i32 14, label %439
  ]

36:                                               ; preds = %32
  %37 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16, !noalias !21
  %39 = and i8 %38, 25
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %49, label %41, !prof !9

41:                                               ; preds = %36
  %42 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #13, !noalias !21
  %43 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %44 = load i32, i32* %43, align 4, !noalias !21
  store i32 %44, i32* %13, align 4, !noalias !21
  %45 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #13, !noalias !21
  %46 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %47 = load i32, i32* %46, align 4, !noalias !21
  store i32 %47, i32* %14, align 4, !noalias !21
  %48 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %14) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #13, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #13, !noalias !21
  br label %49

49:                                               ; preds = %41, %36
  %50 = phi i64 [ -6148914691236517206, %36 ], [ %48, %41 ]
  %51 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %36 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), %41 ]
  %52 = phi i8* [ null, %36 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %41 ]
  %53 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %54 = load i32, i32* %53, align 4, !noalias !21
  %55 = mul nsw i32 %54, 3
  %56 = add nsw i32 %55, 3
  %57 = and i32 %56, -4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 4, !noalias !21
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %58, %64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 24, i1 false) #13, !alias.scope !21
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %80, label %67

67:                                               ; preds = %49
  %68 = icmp slt i64 %65, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %70) #15
  unreachable

71:                                               ; preds = %67
  %72 = call i8* @_Znwm(i64 %65) #14
  store i8* %72, i8** %59, align 16, !alias.scope !21
  %73 = getelementptr inbounds i8, i8* %72, i64 %65
  store i8* %73, i8** %61, align 16, !alias.scope !21
  %74 = bitcast i8** %60 to i64*
  %75 = ptrtoint i8* %72 to i64
  %76 = sub i64 %65, %75
  %77 = getelementptr i8, i8* %72, i64 %76
  %78 = ptrtoint i8* %77 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %72, i8 0, i64 %78, i1 false) #13, !noalias !21
  %79 = ptrtoint i8* %73 to i64
  store i64 %79, i64* %74, align 8, !alias.scope !21
  br label %80

80:                                               ; preds = %71, %49
  %81 = icmp sgt i32 %63, 0
  br i1 %81, label %82, label %90

82:                                               ; preds = %80, %99
  %83 = phi i32 [ %100, %99 ], [ %63, %80 ]
  %84 = phi i32 [ %101, %99 ], [ %54, %80 ]
  %85 = phi i64 [ %102, %99 ], [ 0, %80 ]
  %86 = icmp sgt i32 %84, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = mul i64 %85, %3
  %89 = mul nsw i64 %85, %58
  br label %105

90:                                               ; preds = %99, %80
  store i32 6407, i32* %5, align 4, !noalias !21
  store i32 5121, i32* %6, align 4, !noalias !21
  %91 = load i32, i32* %53, align 4, !noalias !21
  store i32 %91, i32* %7, align 4, !noalias !21
  %92 = icmp eq i8* %52, null
  br i1 %92, label %127, label %93

93:                                               ; preds = %90
  %94 = load i8, i8* %52, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %127, label %96

96:                                               ; preds = %93
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %52, i8* %51, i64 %50) #13
  br label %127

97:                                               ; preds = %105
  %98 = load i32, i32* %62, align 4, !noalias !21
  br label %99

99:                                               ; preds = %97, %82
  %100 = phi i32 [ %98, %97 ], [ %83, %82 ]
  %101 = phi i32 [ %124, %97 ], [ %84, %82 ]
  %102 = add nuw nsw i64 %85, 1
  %103 = sext i32 %100 to i64
  %104 = icmp slt i64 %102, %103
  br i1 %104, label %82, label %90

105:                                              ; preds = %105, %87
  %106 = phi i64 [ 0, %87 ], [ %123, %105 ]
  %107 = shl i64 %106, 2
  %108 = and i64 %107, 4294967292
  %109 = add i64 %108, %88
  %110 = getelementptr inbounds i8, i8* %4, i64 %109
  %111 = mul nuw nsw i64 %106, 3
  %112 = and i64 %111, 4294967295
  %113 = add i64 %112, %89
  %114 = load i8*, i8** %59, align 16, !alias.scope !21
  %115 = getelementptr inbounds i8, i8* %114, i64 %113
  %116 = load i8, i8* %110, align 1, !noalias !21
  store i8 %116, i8* %115, align 1
  %117 = getelementptr inbounds i8, i8* %110, i64 1
  %118 = load i8, i8* %117, align 1, !noalias !21
  %119 = getelementptr inbounds i8, i8* %115, i64 1
  store i8 %118, i8* %119, align 1
  %120 = getelementptr inbounds i8, i8* %110, i64 2
  %121 = load i8, i8* %120, align 1, !noalias !21
  %122 = getelementptr inbounds i8, i8* %115, i64 2
  store i8 %121, i8* %122, align 1
  %123 = add nuw nsw i64 %106, 1
  %124 = load i32, i32* %53, align 4, !noalias !21
  %125 = sext i32 %124 to i64
  %126 = icmp slt i64 %123, %125
  br i1 %126, label %105, label %97

127:                                              ; preds = %96, %93, %90
  %128 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %128, align 8, !alias.scope !24
  %129 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %130 = bitcast %"class.std::__1::vector"* %17 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 16, !noalias !24
  %132 = bitcast %"class.std::__1::vector"* %129 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %132, align 8, !alias.scope !24
  %133 = bitcast i8** %61 to i64*
  %134 = load i64, i64* %133, align 16, !noalias !24
  %135 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %136 = bitcast i8** %135 to i64*
  store i64 %134, i64* %136, align 8, !alias.scope !24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br label %447

137:                                              ; preds = %32
  %138 = bitcast %"class.std::__1::vector"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #13
  %139 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16, !noalias !27
  %140 = and i8 %139, 25
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %150, label %142, !prof !9

142:                                              ; preds = %137
  %143 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #13, !noalias !27
  %144 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %145 = load i32, i32* %144, align 4, !noalias !27
  store i32 %145, i32* %11, align 4, !noalias !27
  %146 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %146) #13, !noalias !27
  %147 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %148 = load i32, i32* %147, align 4, !noalias !27
  store i32 %148, i32* %12, align 4, !noalias !27
  %149 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %146) #13, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #13, !noalias !27
  br label %150

150:                                              ; preds = %142, %137
  %151 = phi i64 [ -6148914691236517206, %137 ], [ %149, %142 ]
  %152 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %137 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), %142 ]
  %153 = phi i8* [ null, %137 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %142 ]
  %154 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %155 = load i32, i32* %154, align 4, !noalias !27
  %156 = shl i32 %155, 1
  %157 = add nsw i32 %156, 3
  %158 = and i32 %157, -4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 1
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %163 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %164 = load i32, i32* %163, align 4, !noalias !27
  %165 = sext i32 %164 to i64
  %166 = mul nsw i64 %159, %165
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 0, i64 24, i1 false) #13, !alias.scope !27
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %181, label %168

168:                                              ; preds = %150
  %169 = icmp slt i64 %166, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %168
  %171 = bitcast %"class.std::__1::vector"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %171) #15
  unreachable

172:                                              ; preds = %168
  %173 = call i8* @_Znwm(i64 %166) #14
  store i8* %173, i8** %160, align 16, !alias.scope !27
  %174 = getelementptr inbounds i8, i8* %173, i64 %166
  store i8* %174, i8** %162, align 16, !alias.scope !27
  %175 = bitcast i8** %161 to i64*
  %176 = ptrtoint i8* %173 to i64
  %177 = sub i64 %166, %176
  %178 = getelementptr i8, i8* %173, i64 %177
  %179 = ptrtoint i8* %178 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %173, i8 0, i64 %179, i1 false) #13, !noalias !27
  %180 = ptrtoint i8* %174 to i64
  store i64 %180, i64* %175, align 8, !alias.scope !27
  br label %181

181:                                              ; preds = %172, %150
  %182 = icmp sgt i32 %164, 0
  br i1 %182, label %183, label %191

183:                                              ; preds = %181, %200
  %184 = phi i32 [ %201, %200 ], [ %164, %181 ]
  %185 = phi i32 [ %202, %200 ], [ %155, %181 ]
  %186 = phi i64 [ %203, %200 ], [ 0, %181 ]
  %187 = icmp sgt i32 %185, 0
  br i1 %187, label %188, label %200

188:                                              ; preds = %183
  %189 = mul i64 %186, %3
  %190 = mul nsw i64 %186, %159
  br label %206

191:                                              ; preds = %200, %181
  store i32 6407, i32* %5, align 4, !noalias !27
  store i32 33635, i32* %6, align 4, !noalias !27
  %192 = load i32, i32* %154, align 4, !noalias !27
  store i32 %192, i32* %7, align 4, !noalias !27
  %193 = icmp eq i8* %153, null
  br i1 %193, label %227, label %194

194:                                              ; preds = %191
  %195 = load i8, i8* %153, align 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %227, label %197

197:                                              ; preds = %194
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %153, i8* %152, i64 %151) #13
  br label %227

198:                                              ; preds = %206
  %199 = load i32, i32* %163, align 4, !noalias !27
  br label %200

200:                                              ; preds = %198, %183
  %201 = phi i32 [ %199, %198 ], [ %184, %183 ]
  %202 = phi i32 [ %224, %198 ], [ %185, %183 ]
  %203 = add nuw nsw i64 %186, 1
  %204 = sext i32 %201 to i64
  %205 = icmp slt i64 %203, %204
  br i1 %205, label %183, label %191

206:                                              ; preds = %206, %188
  %207 = phi i64 [ 0, %188 ], [ %223, %206 ]
  %208 = shl nuw nsw i64 %207, 1
  %209 = add i64 %208, %189
  %210 = getelementptr inbounds i8, i8* %4, i64 %209
  %211 = bitcast i8* %210 to i16*
  %212 = add nsw i64 %208, %190
  %213 = load i8*, i8** %160, align 16, !alias.scope !27
  %214 = getelementptr inbounds i8, i8* %213, i64 %212
  %215 = bitcast i8* %214 to i16*
  %216 = load i16, i16* %211, align 2, !noalias !27
  %217 = shl i16 %216, 11
  %218 = and i16 %216, 2016
  %219 = or i16 %217, %218
  %220 = lshr i16 %216, 11
  %221 = shl nuw nsw i16 %220, 5
  %222 = or i16 %219, %221
  store i16 %222, i16* %215, align 2
  %223 = add nuw nsw i64 %207, 1
  %224 = load i32, i32* %154, align 4, !noalias !27
  %225 = sext i32 %224 to i64
  %226 = icmp slt i64 %223, %225
  br i1 %226, label %206, label %198

227:                                              ; preds = %197, %194, %191
  %228 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %228, align 8, !alias.scope !30
  %229 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %230 = bitcast %"class.std::__1::vector"* %18 to <2 x i64>*
  %231 = load <2 x i64>, <2 x i64>* %230, align 16, !noalias !30
  %232 = bitcast %"class.std::__1::vector"* %229 to <2 x i64>*
  store <2 x i64> %231, <2 x i64>* %232, align 8, !alias.scope !30
  %233 = bitcast i8** %162 to i64*
  %234 = load i64, i64* %233, align 16, !noalias !30
  %235 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %236 = bitcast i8** %235 to i64*
  store i64 %234, i64* %236, align 8, !alias.scope !30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #13
  br label %447

237:                                              ; preds = %32
  %238 = bitcast %"class.std::__1::vector"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #13
  %239 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16, !noalias !33
  %240 = and i8 %239, 25
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %250, label %242, !prof !9

242:                                              ; preds = %237
  %243 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %243) #13, !noalias !33
  %244 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %245 = load i32, i32* %244, align 4, !noalias !33
  store i32 %245, i32* %9, align 4, !noalias !33
  %246 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246) #13, !noalias !33
  %247 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %248 = load i32, i32* %247, align 4, !noalias !33
  store i32 %248, i32* %10, align 4, !noalias !33
  %249 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246) #13, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %243) #13, !noalias !33
  br label %250

250:                                              ; preds = %242, %237
  %251 = phi i64 [ -6148914691236517206, %237 ], [ %249, %242 ]
  %252 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %237 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), %242 ]
  %253 = phi i8* [ null, %237 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %242 ]
  %254 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %255 = load i32, i32* %254, align 4, !noalias !33
  %256 = mul nsw i32 %255, 3
  %257 = add nsw i32 %256, 3
  %258 = and i32 %257, -4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 1
  %262 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %263 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %264 = load i32, i32* %263, align 4, !noalias !33
  %265 = sext i32 %264 to i64
  %266 = mul nsw i64 %259, %265
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %238, i8 0, i64 24, i1 false) #13, !alias.scope !33
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %281, label %268

268:                                              ; preds = %250
  %269 = icmp slt i64 %266, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %271) #15
  unreachable

272:                                              ; preds = %268
  %273 = call i8* @_Znwm(i64 %266) #14
  store i8* %273, i8** %260, align 16, !alias.scope !33
  %274 = getelementptr inbounds i8, i8* %273, i64 %266
  store i8* %274, i8** %262, align 16, !alias.scope !33
  %275 = bitcast i8** %261 to i64*
  %276 = ptrtoint i8* %273 to i64
  %277 = sub i64 %266, %276
  %278 = getelementptr i8, i8* %273, i64 %277
  %279 = ptrtoint i8* %278 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %273, i8 0, i64 %279, i1 false) #13, !noalias !33
  %280 = ptrtoint i8* %274 to i64
  store i64 %280, i64* %275, align 8, !alias.scope !33
  br label %281

281:                                              ; preds = %272, %250
  %282 = icmp sgt i32 %264, 0
  br i1 %282, label %283, label %291

283:                                              ; preds = %281, %300
  %284 = phi i32 [ %301, %300 ], [ %264, %281 ]
  %285 = phi i32 [ %302, %300 ], [ %255, %281 ]
  %286 = phi i64 [ %303, %300 ], [ 0, %281 ]
  %287 = icmp sgt i32 %285, 0
  br i1 %287, label %288, label %300

288:                                              ; preds = %283
  %289 = mul i64 %286, %3
  %290 = mul nsw i64 %286, %259
  br label %306

291:                                              ; preds = %300, %281
  store i32 6407, i32* %5, align 4, !noalias !33
  store i32 5121, i32* %6, align 4, !noalias !33
  %292 = load i32, i32* %254, align 4, !noalias !33
  store i32 %292, i32* %7, align 4, !noalias !33
  %293 = icmp eq i8* %253, null
  br i1 %293, label %328, label %294

294:                                              ; preds = %291
  %295 = load i8, i8* %253, align 1
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %328, label %297

297:                                              ; preds = %294
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %253, i8* %252, i64 %251) #13
  br label %328

298:                                              ; preds = %306
  %299 = load i32, i32* %263, align 4, !noalias !33
  br label %300

300:                                              ; preds = %298, %283
  %301 = phi i32 [ %299, %298 ], [ %284, %283 ]
  %302 = phi i32 [ %325, %298 ], [ %285, %283 ]
  %303 = add nuw nsw i64 %286, 1
  %304 = sext i32 %301 to i64
  %305 = icmp slt i64 %303, %304
  br i1 %305, label %283, label %291

306:                                              ; preds = %306, %288
  %307 = phi i64 [ 0, %288 ], [ %324, %306 ]
  %308 = shl i64 %307, 2
  %309 = and i64 %308, 4294967292
  %310 = add i64 %309, %289
  %311 = getelementptr inbounds i8, i8* %4, i64 %310
  %312 = mul nuw nsw i64 %307, 3
  %313 = and i64 %312, 4294967295
  %314 = add i64 %313, %290
  %315 = load i8*, i8** %260, align 16, !alias.scope !33
  %316 = getelementptr inbounds i8, i8* %315, i64 %314
  %317 = getelementptr inbounds i8, i8* %311, i64 2
  %318 = load i8, i8* %317, align 1, !noalias !33
  store i8 %318, i8* %316, align 1
  %319 = getelementptr inbounds i8, i8* %311, i64 1
  %320 = load i8, i8* %319, align 1, !noalias !33
  %321 = getelementptr inbounds i8, i8* %316, i64 1
  store i8 %320, i8* %321, align 1
  %322 = load i8, i8* %311, align 1, !noalias !33
  %323 = getelementptr inbounds i8, i8* %316, i64 2
  store i8 %322, i8* %323, align 1
  %324 = add nuw nsw i64 %307, 1
  %325 = load i32, i32* %254, align 4, !noalias !33
  %326 = sext i32 %325 to i64
  %327 = icmp slt i64 %324, %326
  br i1 %327, label %306, label %298

328:                                              ; preds = %297, %294, %291
  %329 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %329, align 8, !alias.scope !36
  %330 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %331 = bitcast %"class.std::__1::vector"* %19 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 16, !noalias !36
  %333 = bitcast %"class.std::__1::vector"* %330 to <2 x i64>*
  store <2 x i64> %332, <2 x i64>* %333, align 8, !alias.scope !36
  %334 = bitcast i8** %262 to i64*
  %335 = load i64, i64* %334, align 16, !noalias !36
  %336 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %337 = bitcast i8** %336 to i64*
  store i64 %335, i64* %337, align 8, !alias.scope !36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #13
  br label %447

338:                                              ; preds = %32, %32, %32, %32, %32, %32, %32, %32, %32
  %339 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = sext i32 %340 to i64
  %342 = call i64 @_ZN3gfx22RowSizeForBufferFormatEmNS_12BufferFormatEm(i64 %341, i32 %2, i64 0) #13
  %343 = icmp eq i64 %342, %3
  br i1 %343, label %354, label %344

344:                                              ; preds = %338
  %345 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %346 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %345, i64 0, i32 0
  %347 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %346) #13
  %348 = getelementptr inbounds i8, i8* %347, i64 8
  %349 = bitcast i8* %348 to %"struct.gl::DriverGL"**
  %350 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %349, align 8
  %351 = getelementptr inbounds %"struct.gl::DriverGL", %"struct.gl::DriverGL"* %350, i64 0, i32 1, i32 80
  %352 = load i8, i8* %351, align 8, !range !2
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %358, label %354

354:                                              ; preds = %344, %338
  %355 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %355, align 8
  %356 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %357 = bitcast %union.anon.69* %356 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %357, i8 0, i64 24, i1 false) #13
  br label %447

358:                                              ; preds = %344
  %359 = bitcast %"class.std::__1::vector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #13
  %360 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %361 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %362 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %363 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %364 = load i32, i32* %363, align 4
  %365 = sext i32 %364 to i64
  %366 = mul i64 %342, %365
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %359, i8 0, i64 24, i1 false) #13
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %381, label %368

368:                                              ; preds = %358
  %369 = icmp slt i64 %366, 0
  br i1 %369, label %370, label %372

370:                                              ; preds = %368
  %371 = bitcast %"class.std::__1::vector"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %371) #15
  unreachable

372:                                              ; preds = %368
  %373 = call i8* @_Znwm(i64 %366) #14
  store i8* %373, i8** %360, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 %366
  store i8* %374, i8** %362, align 8
  %375 = bitcast i8** %361 to i64*
  %376 = ptrtoint i8* %373 to i64
  %377 = sub i64 %366, %376
  %378 = getelementptr i8, i8* %373, i64 %377
  %379 = ptrtoint i8* %378 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %373, i8 0, i64 %379, i1 false) #13
  %380 = ptrtoint i8* %374 to i64
  store i64 %380, i64* %375, align 8
  br label %381

381:                                              ; preds = %358, %372
  %382 = phi i64 [ 0, %358 ], [ %376, %372 ]
  %383 = phi i64 [ 0, %358 ], [ %380, %372 ]
  %384 = phi i8* [ null, %358 ], [ %373, %372 ]
  %385 = icmp sgt i32 %364, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %384, i8* align 1 %4, i64 %342, i1 false)
  %387 = load i32, i32* %363, align 4
  %388 = icmp sgt i32 %387, 1
  br i1 %388, label %428, label %392

389:                                              ; preds = %381
  %390 = bitcast i8** %361 to i64*
  %391 = inttoptr i64 %382 to i8*
  br label %398

392:                                              ; preds = %428, %386
  %393 = bitcast i8** %361 to i64*
  %394 = load i64, i64* %393, align 8, !noalias !39
  %395 = bitcast %"class.std::__1::vector"* %20 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = inttoptr i64 %396 to i8*
  br label %398

398:                                              ; preds = %389, %392
  %399 = phi i8* [ %391, %389 ], [ %397, %392 ]
  %400 = phi i64* [ %390, %389 ], [ %393, %392 ]
  %401 = phi i8* [ %384, %389 ], [ %397, %392 ]
  %402 = phi i64 [ %382, %389 ], [ %396, %392 ]
  %403 = phi i64 [ %383, %389 ], [ %394, %392 ]
  %404 = load i32, i32* %339, align 4
  store i32 %404, i32* %7, align 4
  %405 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %405, align 8, !alias.scope !39
  %406 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %407 = bitcast %"class.std::__1::vector"* %406 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %407, i8 0, i64 24, i1 false) #13, !alias.scope !39
  %408 = sub i64 %403, %402
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %422, label %410

410:                                              ; preds = %398
  %411 = icmp slt i64 %408, 0
  br i1 %411, label %412, label %414

412:                                              ; preds = %410
  %413 = bitcast %"class.std::__1::vector"* %406 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %413) #15
  unreachable

414:                                              ; preds = %410
  %415 = call i8* @_Znwm(i64 %408) #14
  %416 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store i8* %415, i8** %416, align 8, !alias.scope !39
  %417 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %406, i64 0, i32 0, i32 0
  store i8* %415, i8** %417, align 8, !alias.scope !39
  %418 = getelementptr inbounds i8, i8* %415, i64 %408
  %419 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %418, i8** %419, align 8, !alias.scope !39
  %420 = bitcast i8** %416 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %415, i8* align 1 %399, i64 %408, i1 false) #13
  %421 = ptrtoint i8* %418 to i64
  store i64 %421, i64* %420, align 8, !alias.scope !39
  br label %422

422:                                              ; preds = %398, %414
  %423 = phi i8* [ %399, %398 ], [ %401, %414 ]
  %424 = icmp eq i8* %423, null
  br i1 %424, label %427, label %425

425:                                              ; preds = %422
  %426 = ptrtoint i8* %423 to i64
  store i64 %426, i64* %400, align 8
  call void @_ZdlPv(i8* nonnull %423) #14
  br label %427

427:                                              ; preds = %422, %425
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #13
  br label %447

428:                                              ; preds = %386, %428
  %429 = phi i64 [ %435, %428 ], [ 1, %386 ]
  %430 = load i8*, i8** %360, align 8
  %431 = mul i64 %342, %429
  %432 = getelementptr inbounds i8, i8* %430, i64 %431
  %433 = mul i64 %429, %3
  %434 = getelementptr inbounds i8, i8* %4, i64 %433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %432, i8* align 1 %434, i64 %342, i1 false)
  %435 = add nuw nsw i64 %429, 1
  %436 = load i32, i32* %363, align 4
  %437 = sext i32 %436 to i64
  %438 = icmp slt i64 %435, %437
  br i1 %438, label %428, label %392

439:                                              ; preds = %32, %32, %32
  %440 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %440, align 8
  %441 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %442 = bitcast %union.anon.69* %441 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %442, i8 0, i64 24, i1 false) #13
  br label %447

443:                                              ; preds = %32
  %444 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %444, align 8
  %445 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %446 = bitcast %union.anon.69* %445 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %446, i8 0, i64 24, i1 false) #13
  br label %447

447:                                              ; preds = %354, %427, %443, %439, %328, %227, %127
  %448 = icmp eq i8* %35, null
  br i1 %448, label %453, label %449

449:                                              ; preds = %447
  %450 = load i8, i8* %35, align 1
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %453, label %452

452:                                              ; preds = %449
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %35, i8* %34, i64 %33) #13
  br label %453

453:                                              ; preds = %447, %449, %452
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #2

declare void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* sret, i32, %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) #2

declare zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2gl12_GLOBAL__N_110MemcpyTaskEPKvPvmmmPN4base17RepeatingCallbackIFvvEEE(i8* nocapture readonly, i8* nocapture, i64, i64, i64, %"class.base::RepeatingCallback"* nocapture readonly) #0 {
  %7 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 %3) #13
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = icmp eq i64 %4, 0
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %12, !prof !15

11:                                               ; preds = %6
  tail call void @llvm.trap() #13
  unreachable

12:                                               ; preds = %6
  %13 = extractvalue { i64, i1 } %7, 0
  %14 = udiv i64 %13, %4
  %15 = add i64 %3, 1
  %16 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 %15) #13
  %17 = extractvalue { i64, i1 } %16, 1
  br i1 %17, label %18, label %19, !prof !15

18:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

19:                                               ; preds = %12
  %20 = extractvalue { i64, i1 } %16, 0
  %21 = udiv i64 %20, %4
  %22 = getelementptr inbounds i8, i8* %1, i64 %14
  %23 = getelementptr inbounds i8, i8* %0, i64 %14
  %24 = sub i64 %21, %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %23, i64 %24, i1 false)
  %25 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %28 = bitcast void ()** %27 to void (%"class.base::internal::BindStateBase"*)**
  %29 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %28, align 8
  tail call void %29(%"class.base::internal::BindStateBase"* %26) #13
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl13GLImageMemory15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImageMemory"*, i32, %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.absl::optional", align 8
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %22, label %14, !prof !9

14:                                               ; preds = %4
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %5, align 4
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %6, align 4
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventIiiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32* nonnull dereferenceable(4) %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  br label %22

22:                                               ; preds = %4, %14
  %23 = phi i64 [ -6148914691236517206, %4 ], [ %21, %14 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), %14 ]
  %25 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 59, i32 0), %14 ]
  %26 = icmp eq i32 %1, 36197
  br i1 %26, label %167, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %167

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 5
  %40 = load i64, i64* %39, align 8
  %41 = mul i64 %40, %38
  %42 = getelementptr inbounds i8, i8* %35, i64 %41
  %43 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #13
  %44 = bitcast %"class.gl::GLImageMemory"* %0 to i32 (%"class.gl::GLImageMemory"*)***
  %45 = load i32 (%"class.gl::GLImageMemory"*)**, i32 (%"class.gl::GLImageMemory"*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %45, i64 2
  %47 = load i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %46, align 8
  %48 = call i32 %47(%"class.gl::GLImageMemory"* %0) #13
  store i32 %48, i32* %7, align 4
  %49 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #13
  %50 = load i32 (%"class.gl::GLImageMemory"*)**, i32 (%"class.gl::GLImageMemory"*)*** %44, align 8
  %51 = getelementptr inbounds i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %50, i64 3
  %52 = load i32 (%"class.gl::GLImageMemory"*)*, i32 (%"class.gl::GLImageMemory"*)** %51, align 8
  %53 = call i32 %52(%"class.gl::GLImageMemory"* %0) #13
  store i32 %53, i32* %8, align 4
  %54 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #13
  store i32 -1431655766, i32* %9, align 4
  %55 = load i64, i64* %39, align 8
  %56 = getelementptr inbounds %"class.gl::GLImageMemory", %"class.gl::GLImageMemory"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  switch i32 %57, label %81 [
    i32 2, label %58
    i32 1, label %58
    i32 3, label %58
    i32 4, label %58
    i32 5, label %64
    i32 6, label %64
    i32 7, label %64
    i32 8, label %64
    i32 9, label %64
    i32 10, label %64
    i32 11, label %70
    i32 0, label %76
  ]

58:                                               ; preds = %33, %33, %33, %33
  %59 = icmp ult i64 %55, 2147483648
  br i1 %59, label %61, label %60, !prof !9

60:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

61:                                               ; preds = %58
  %62 = trunc i64 %55 to i32
  %63 = sdiv i32 %62, 2
  br label %81

64:                                               ; preds = %33, %33, %33, %33, %33, %33
  %65 = icmp ult i64 %55, 2147483648
  br i1 %65, label %67, label %66, !prof !9

66:                                               ; preds = %64
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %64
  %68 = trunc i64 %55 to i32
  %69 = sdiv i32 %68, 4
  br label %81

70:                                               ; preds = %33
  %71 = icmp ult i64 %55, 2147483648
  br i1 %71, label %73, label %72, !prof !9

72:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

73:                                               ; preds = %70
  %74 = trunc i64 %55 to i32
  %75 = sdiv i32 %74, 8
  br label %81

76:                                               ; preds = %33
  %77 = icmp ult i64 %55, 2147483648
  br i1 %77, label %79, label %78, !prof !9

78:                                               ; preds = %76
  call void @llvm.trap() #13
  unreachable

79:                                               ; preds = %76
  %80 = trunc i64 %55 to i32
  br label %81

81:                                               ; preds = %33, %61, %67, %73, %79
  %82 = phi i32 [ %80, %79 ], [ %75, %73 ], [ %69, %67 ], [ %63, %61 ], [ 0, %33 ]
  store i32 %82, i32* %9, align 4
  %83 = call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #13
  %84 = call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %83) #13
  %85 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %84, i64 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %112, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %91 = load i32, i32* %56, align 8
  %92 = load i64, i64* %39, align 8
  call fastcc void @_ZN2gl12_GLOBAL__N_19GLES2DataERKN3gfx4SizeENS1_12BufferFormatEmPKhPjS8_Pi(%"class.absl::optional"* nonnull sret %10, %"class.gfx::Size"* dereferenceable(8) %90, i32 %91, i64 %92, i8* %42, i32* nonnull %7, i32* nonnull %8, i32* nonnull %9)
  %93 = load i8, i8* %89, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = bitcast %"class.std::__1::vector"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector"* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #13
  %100 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %101, null
  br i1 %102, label %107, label %103

103:                                              ; preds = %95
  %104 = ptrtoint i8* %101 to i64
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %106 = bitcast i8** %105 to i64*
  store i64 %104, i64* %106, align 8
  call void @_ZdlPv(i8* nonnull %101) #14
  br label %107

107:                                              ; preds = %103, %95
  store i8 0, i8* %89, align 8
  br label %108

108:                                              ; preds = %88, %107
  %109 = phi i8 [ 1, %107 ], [ 0, %88 ]
  %110 = phi i64 [ %98, %107 ], [ 0, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #13
  %111 = load i32, i32* %9, align 4
  br label %112

112:                                              ; preds = %81, %108
  %113 = phi i32 [ %82, %81 ], [ %111, %108 ]
  %114 = phi i64 [ 0, %81 ], [ %110, %108 ]
  %115 = phi i8 [ 0, %81 ], [ %109, %108 ]
  %116 = load i32, i32* %28, align 4
  %117 = icmp eq i32 %113, %116
  br i1 %117, label %128, label %118

118:                                              ; preds = %112
  %119 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %120 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %119, i64 0, i32 0
  %121 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %120) #13
  %122 = bitcast i8* %121 to %"class.gl::GLApi"**
  %123 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %122, align 8
  %124 = bitcast %"class.gl::GLApi"* %123 to void (%"class.gl::GLApi"*, i32, i32)***
  %125 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %125, i64 328
  %127 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %126, align 8
  call void %127(%"class.gl::GLApi"* %123, i32 3314, i32 %113) #13
  br label %128

128:                                              ; preds = %112, %118
  %129 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %130 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %129, i64 0, i32 0
  %131 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %130) #13
  %132 = bitcast i8* %131 to %"class.gl::GLApi"**
  %133 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %132, align 8
  %134 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = load i32, i32* %28, align 4
  %139 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = load i32, i32* %7, align 4
  %142 = load i32, i32* %8, align 4
  %143 = icmp eq i8 %115, 0
  %144 = inttoptr i64 %114 to i8*
  %145 = select i1 %143, i8* %42, i8* %144
  %146 = bitcast %"class.gl::GLApi"* %133 to void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %147 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %147, i64 438
  %149 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %148, align 8
  call void %149(%"class.gl::GLApi"* %133, i32 %1, i32 0, i32 %135, i32 %137, i32 %138, i32 %140, i32 %141, i32 %142, i8* %145) #13
  %150 = load i32, i32* %28, align 4
  %151 = icmp eq i32 %113, %150
  br i1 %151, label %162, label %152

152:                                              ; preds = %128
  %153 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %154 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %153, i64 0, i32 0
  %155 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %154) #13
  %156 = bitcast i8* %155 to %"class.gl::GLApi"**
  %157 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %156, align 8
  %158 = bitcast %"class.gl::GLApi"* %157 to void (%"class.gl::GLApi"*, i32, i32)***
  %159 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %159, i64 328
  %161 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %160, align 8
  call void %161(%"class.gl::GLApi"* %157, i32 3314, i32 0) #13
  br label %162

162:                                              ; preds = %128, %152
  %163 = icmp eq i64 %114, 0
  %164 = or i1 %163, %143
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  call void @_ZdlPv(i8* nonnull %144) #14
  br label %166

166:                                              ; preds = %165, %162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #13
  br label %167

167:                                              ; preds = %27, %22, %166
  %168 = phi i1 [ true, %166 ], [ false, %22 ], [ false, %27 ]
  %169 = icmp eq i8* %25, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %167
  %171 = load i8, i8* %25, align 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %170
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %24, i64 %23) #13
  br label %174

174:                                              ; preds = %167, %170, %173
  ret i1 %168
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl13GLImageMemory20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE(%"class.gl::GLImageMemory"* nocapture readnone, i32, i32, i32, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::RectF"* nocapture readnone dereferenceable(16), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = inttoptr i64 %7 to %"class.gfx::GpuFence"*
  tail call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %11) #13
  %12 = inttoptr i64 %7 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %8, %10
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2gl13GLImageMemory7GetTypeEv(%"class.gl::GLImageMemory"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

declare zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl13GLImageMemory15ReleaseTexImageEj(%"class.gl::GLImageMemory"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImage"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl13GLImageMemory5FlushEv(%"class.gl::GLImageMemory"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2gl7GLImage12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImage"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #2

declare void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"*) unnamed_addr #2

declare void @_ZN2gl7GLImage15GetNativePixmapEv() unnamed_addr

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.base::WaitableEvent"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.base::WaitableEvent"*)**
  %21 = load void (%"class.base::WaitableEvent"*)*, void (%"class.base::WaitableEvent"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.base::WaitableEvent"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.base::WaitableEvent"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.base::WaitableEvent"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJS4_S5_miiS9_EEES7_E7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (i8*, i8*, i64, i64, i64, %"class.base::RepeatingCallback"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.std::__1::tuple.116"*
  %6 = bitcast void ()** %4 to i8**
  %7 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %8 = bitcast void ()** %7 to i8**
  %9 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %10 = bitcast void ()** %9 to i64*
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %12 = bitcast void ()** %11 to i32*
  %13 = getelementptr inbounds %"class.std::__1::tuple.116", %"class.std::__1::tuple.116"* %5, i64 0, i32 0, i32 4, i32 0
  %14 = getelementptr inbounds void ()*, void ()** %4, i64 4
  %15 = bitcast void ()** %14 to %"class.base::RepeatingCallback"**
  %16 = load void (i8*, i8*, i64, i64, i64, %"class.base::RepeatingCallback"*)*, void (i8*, i8*, i64, i64, i64, %"class.base::RepeatingCallback"*)** %3, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = load i8*, i8** %8, align 8
  %19 = load i64, i64* %10, align 8
  %20 = load i32, i32* %12, align 4
  %21 = sext i32 %20 to i64
  %22 = load i32, i32* %13, align 4
  %23 = sext i32 %22 to i64
  %24 = load %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback"** %15, align 8
  tail call void %16(i8* %17, i8* %18, i64 %19, i64 %21, i64 %23, %"class.base::RepeatingCallback"* %24) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJS3_S4_miiS8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4base15SupportsWeakPtrIN2gl9GLContextEE9AsWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZN4base15SupportsWeakPtrIN2gl9GLContextEE9AsWeakPtrEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4base15SupportsWeakPtrIN2gl9GLSurfaceEE9AsWeakPtrEv: argument 0"}
!8 = distinct !{!8, !"_ZN4base15SupportsWeakPtrIN2gl9GLSurfaceEE9AsWeakPtrEv"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_13WaitableEventEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMNS_13WaitableEventEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMNS_13WaitableEventEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!15 = !{!"branch_weights", i32 2002, i32 2000}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJRS4_RS5_RmRiSF_S9_EEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJRS4_RS5_RmRiSF_S9_EEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJRS2_RS3_RmRiSD_S7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIPFvPKvPvmmmPNS_17RepeatingCallbackIFvvEEEEJRS2_RS3_RmRiSD_S7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN2gl12_GLOBAL__N_112GLES2RGBDataIZNS0_9GLES2DataERKN3gfx4SizeENS2_12BufferFormatEmPKhPjS9_PiE3$_0EENSt3__16vectorIhNSC_9allocatorIhEEEES5_mS8_RKT_S9_S9_SA_: argument 0"}
!23 = distinct !{!23, !"_ZN2gl12_GLOBAL__N_112GLES2RGBDataIZNS0_9GLES2DataERKN3gfx4SizeENS2_12BufferFormatEmPKhPjS9_PiE3$_0EENSt3__16vectorIhNSC_9allocatorIhEEEES5_mS8_RKT_S9_S9_SA_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4absl13make_optionalINSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS8_: argument 0"}
!26 = distinct !{!26, !"_ZN4absl13make_optionalINSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS8_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN2gl12_GLOBAL__N_115GLES2RGB565DataERKN3gfx4SizeEmPKhPjS7_Pi: argument 0"}
!29 = distinct !{!29, !"_ZN2gl12_GLOBAL__N_115GLES2RGB565DataERKN3gfx4SizeEmPKhPjS7_Pi"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4absl13make_optionalINSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS8_: argument 0"}
!32 = distinct !{!32, !"_ZN4absl13make_optionalINSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS8_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN2gl12_GLOBAL__N_112GLES2RGBDataIZNS0_9GLES2DataERKN3gfx4SizeENS2_12BufferFormatEmPKhPjS9_PiE3$_1EENSt3__16vectorIhNSC_9allocatorIhEEEES5_mS8_RKT_S9_S9_SA_: argument 0"}
!35 = distinct !{!35, !"_ZN2gl12_GLOBAL__N_112GLES2RGBDataIZNS0_9GLES2DataERKN3gfx4SizeENS2_12BufferFormatEmPKhPjS9_PiE3$_1EENSt3__16vectorIhNSC_9allocatorIhEEEES5_mS8_RKT_S9_S9_SA_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4absl13make_optionalINSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS8_: argument 0"}
!38 = distinct !{!38, !"_ZN4absl13make_optionalINSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS8_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4absl13make_optionalIRNSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS9_: argument 0"}
!41 = distinct !{!41, !"_ZN4absl13make_optionalIRNSt3__16vectorIhNS1_9allocatorIhEEEEEENS_8optionalINS1_5decayIT_E4typeEEEOS9_"}
