; ModuleID = '../../third_party/icu/source/i18n/number_affixutils.cpp'
source_filename = "../../third_party/icu/source/i18n/number_affixutils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::number::impl::TokenConsumer" = type { i32 (...)** }
%"class.icu_69::number::impl::SymbolProvider" = type { i32 (...)** }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.0, [32 x i8] }
%struct.anon.0 = type { i16, i32, i32, i16* }
%"class.icu_69::FormattedStringBuilder" = type { i8, %"union.icu_69::FormattedStringBuilder::ValueOrHeapArray", %"union.icu_69::FormattedStringBuilder::ValueOrHeapArray.2", i32, i32 }
%"union.icu_69::FormattedStringBuilder::ValueOrHeapArray" = type { %struct.anon.1, [64 x i8] }
%struct.anon.1 = type { i16*, i32 }
%"union.icu_69::FormattedStringBuilder::ValueOrHeapArray.2" = type { %struct.anon.3, [24 x i8] }
%struct.anon.3 = type { %"struct.icu_69::FormattedStringBuilder::Field"*, i32 }
%"struct.icu_69::FormattedStringBuilder::Field" = type { i8 }
%struct.anon = type { i16, [27 x i16] }
%"struct.icu_69::number::impl::AffixTag" = type { i32, i32, i32, i32 }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque

@.str = private unnamed_addr constant [3 x i16] [i16 39, i16 39, i16 0], align 2
@_ZTVN6icu_696number4impl13TokenConsumerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_696number4impl13TokenConsumerE to i8*), i8* bitcast (void (%"class.icu_69::number::impl::TokenConsumer"*)* @_ZN6icu_696number4impl13TokenConsumerD2Ev to i8*), i8* bitcast (void (%"class.icu_69::number::impl::TokenConsumer"*)* @_ZN6icu_696number4impl13TokenConsumerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN6icu_696number4impl13TokenConsumerE = hidden constant [37 x i8] c"N6icu_696number4impl13TokenConsumerE\00", align 1
@_ZTIN6icu_696number4impl13TokenConsumerE = hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSN6icu_696number4impl13TokenConsumerE, i32 0, i32 0) }, align 8
@_ZTVN6icu_696number4impl14SymbolProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN6icu_696number4impl14SymbolProviderE to i8*), i8* bitcast (void (%"class.icu_69::number::impl::SymbolProvider"*)* @_ZN6icu_696number4impl14SymbolProviderD2Ev to i8*), i8* bitcast (void (%"class.icu_69::number::impl::SymbolProvider"*)* @_ZN6icu_696number4impl14SymbolProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTSN6icu_696number4impl14SymbolProviderE = hidden constant [38 x i8] c"N6icu_696number4impl14SymbolProviderE\00", align 1
@_ZTIN6icu_696number4impl14SymbolProviderE = hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZTSN6icu_696number4impl14SymbolProviderE, i32 0, i32 0) }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8
@switch.table._ZN6icu_696number4impl10AffixUtils8unescapeERKNS_13UnicodeStringERNS_22FormattedStringBuilderEiRKNS1_14SymbolProviderENS6_5FieldER10UErrorCode = private unnamed_addr constant [15 x i8] c"'*****''''')(**", align 1

@_ZN6icu_696number4impl13TokenConsumerD1Ev = hidden unnamed_addr alias void (%"class.icu_69::number::impl::TokenConsumer"*), void (%"class.icu_69::number::impl::TokenConsumer"*)* @_ZN6icu_696number4impl13TokenConsumerD2Ev
@_ZN6icu_696number4impl14SymbolProviderD1Ev = hidden unnamed_addr alias void (%"class.icu_69::number::impl::SymbolProvider"*), void (%"class.icu_69::number::impl::SymbolProvider"*)* @_ZN6icu_696number4impl14SymbolProviderD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_696number4impl13TokenConsumerD2Ev(%"class.icu_69::number::impl::TokenConsumer"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl13TokenConsumerD0Ev(%"class.icu_69::number::impl::TokenConsumer"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_696number4impl14SymbolProviderD2Ev(%"class.icu_69::number::impl::SymbolProvider"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl14SymbolProviderD0Ev(%"class.icu_69::number::impl::SymbolProvider"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_696number4impl10AffixUtils14estimateLengthERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = icmp slt i16 %4, 0
  %6 = lshr i16 %4, 5
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %9, i32 %7
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %55

12:                                               ; preds = %2, %38
  %13 = phi i32 [ %40, %38 ], [ 0, %2 ]
  %14 = phi i32 [ %43, %38 ], [ 0, %2 ]
  %15 = phi i32 [ %39, %38 ], [ 0, %2 ]
  %16 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %0, i32 %14) #10
  switch i32 %15, label %37 [
    i32 0, label %17
    i32 1, label %23
    i32 2, label %27
    i32 3, label %33
  ]

17:                                               ; preds = %12
  %18 = icmp eq i32 %16, 39
  %19 = zext i1 %18 to i32
  %20 = xor i1 %18, true
  %21 = zext i1 %20 to i32
  %22 = add nsw i32 %13, %21
  br label %38

23:                                               ; preds = %12
  %24 = icmp eq i32 %16, 39
  %25 = add nsw i32 %13, 1
  %26 = select i1 %24, i32 0, i32 2
  br label %38

27:                                               ; preds = %12
  %28 = icmp eq i32 %16, 39
  %29 = select i1 %28, i32 3, i32 2
  %30 = xor i1 %28, true
  %31 = zext i1 %30 to i32
  %32 = add nsw i32 %13, %31
  br label %38

33:                                               ; preds = %12
  %34 = icmp eq i32 %16, 39
  %35 = add nsw i32 %13, 1
  %36 = select i1 %34, i32 2, i32 3
  br label %38

37:                                               ; preds = %12
  tail call void @abort() #9
  unreachable

38:                                               ; preds = %27, %17, %33, %23
  %39 = phi i32 [ %26, %23 ], [ %36, %33 ], [ %19, %17 ], [ %29, %27 ]
  %40 = phi i32 [ %25, %23 ], [ %35, %33 ], [ %22, %17 ], [ %32, %27 ]
  %41 = icmp ult i32 %16, 65536
  %42 = select i1 %41, i32 1, i32 2
  %43 = add nuw nsw i32 %42, %14
  %44 = load i16, i16* %3, align 8
  %45 = icmp slt i16 %44, 0
  %46 = lshr i16 %44, 5
  %47 = zext i16 %46 to i32
  %48 = load i32, i32* %8, align 4
  %49 = select i1 %45, i32 %48, i32 %47
  %50 = icmp slt i32 %43, %49
  br i1 %50, label %12, label %51

51:                                               ; preds = %38
  %52 = add nsw i32 %39, -1
  %53 = icmp ult i32 %52, 2
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  store i32 1, i32* %1, align 4
  br label %55

55:                                               ; preds = %2, %51, %54
  %56 = phi i32 [ %40, %51 ], [ %40, %54 ], [ 0, %2 ]
  ret i32 %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl10AffixUtils6escapeERKNS_13UnicodeStringE(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #3 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 64, i1 false)
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp slt i16 %10, 0
  %12 = lshr i16 %10, 5
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = select i1 %11, i32 %15, i32 %13
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %58

18:                                               ; preds = %2
  %19 = bitcast i16* %3 to i8*
  %20 = bitcast i16* %4 to i8*
  br label %21

21:                                               ; preds = %18, %41
  %22 = phi i32 [ 0, %18 ], [ %45, %41 ]
  %23 = phi i32 [ 0, %18 ], [ %42, %41 ]
  %24 = call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %1, i32 %22) #10
  switch i32 %24, label %34 [
    i32 39, label %25
    i32 45, label %27
    i32 43, label %27
    i32 37, label %27
    i32 8240, label %27
    i32 164, label %27
  ]

25:                                               ; preds = %21
  %26 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str, i64 0, i64 0), i32 0, i32 -1) #10
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str, i64 0, i64 0)) #10, !srcloc !2
  br label %41

27:                                               ; preds = %21, %21, %21, %21, %21
  %28 = icmp eq i32 %23, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %19)
  store i16 39, i16* %3, align 2
  %30 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %3, i32 0, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %19)
  %31 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %24) #10
  br label %41

32:                                               ; preds = %27
  %33 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %24) #10
  br label %41

34:                                               ; preds = %21
  %35 = icmp eq i32 %23, 2
  br i1 %35, label %36, label %39

36:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %20)
  store i16 39, i16* %4, align 2
  %37 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %4, i32 0, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %20)
  %38 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %24) #10
  br label %41

39:                                               ; preds = %34
  %40 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %0, i32 %24) #10
  br label %41

41:                                               ; preds = %36, %39, %29, %32, %25
  %42 = phi i32 [ 0, %36 ], [ %23, %39 ], [ 2, %29 ], [ %23, %32 ], [ %23, %25 ]
  %43 = icmp ult i32 %24, 65536
  %44 = select i1 %43, i32 1, i32 2
  %45 = add nuw nsw i32 %44, %22
  %46 = load i16, i16* %9, align 8
  %47 = icmp slt i16 %46, 0
  %48 = lshr i16 %46, 5
  %49 = zext i16 %48 to i32
  %50 = load i32, i32* %14, align 4
  %51 = select i1 %47, i32 %50, i32 %49
  %52 = icmp slt i32 %45, %51
  br i1 %52, label %21, label %53

53:                                               ; preds = %41
  %54 = icmp eq i32 %42, 2
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %56)
  store i16 39, i16* %5, align 2
  %57 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* %0, i16* nonnull %5, i32 0, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %56)
  br label %58

58:                                               ; preds = %2, %53, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN6icu_696number4impl10AffixUtils15getFieldForTypeENS1_16AffixPatternTypeE(i32) local_unnamed_addr #3 align 2 {
  %2 = add i32 %0, 15
  %3 = icmp ult i32 %2, 15
  br i1 %3, label %5, label %4

4:                                                ; preds = %5, %1
  tail call void @abort() #9
  unreachable

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16
  %7 = lshr i16 32705, %6
  %8 = and i16 %7, 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %4, label %10

10:                                               ; preds = %5
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds [15 x i8], [15 x i8]* @switch.table._ZN6icu_696number4impl10AffixUtils8unescapeERKNS_13UnicodeStringERNS_22FormattedStringBuilderEiRKNS1_14SymbolProviderENS6_5FieldER10UErrorCode, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  ret i8 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_696number4impl10AffixUtils8unescapeERKNS_13UnicodeStringERNS_22FormattedStringBuilderEiRKNS1_14SymbolProviderENS6_5FieldER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::FormattedStringBuilder"* dereferenceable(136), i32, %"class.icu_69::number::impl::SymbolProvider"* dereferenceable(8), i8, i32* dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %7 = alloca %"class.icu_69::UnicodeString", align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1
  %11 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %10 to %struct.anon*
  %12 = getelementptr inbounds %struct.anon, %struct.anon* %11, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 3
  %14 = bitcast %"class.icu_69::UnicodeString"* %7 to i8*
  %15 = bitcast %"class.icu_69::number::impl::SymbolProvider"* %3 to void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)***
  br label %16

16:                                               ; preds = %6, %101
  %17 = phi i32 [ 0, %6 ], [ %103, %101 ]
  %18 = phi i64 [ 2863311530, %6 ], [ %68, %101 ]
  %19 = phi i64 [ -6148914694099828736, %6 ], [ %66, %101 ]
  %20 = phi i32 [ 0, %6 ], [ %67, %101 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %16
  %23 = load i16, i16* %8, align 8
  %24 = icmp slt i16 %23, 0
  %25 = lshr i16 %23, 5
  %26 = zext i16 %25 to i32
  %27 = load i32, i32* %9, align 4
  %28 = select i1 %24, i32 %27, i32 %26
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %60, label %105

30:                                               ; preds = %16
  %31 = trunc i64 %19 to i32
  switch i32 %31, label %60 [
    i32 2, label %32
    i32 0, label %52
  ]

32:                                               ; preds = %30
  %33 = load i16, i16* %8, align 8
  %34 = icmp slt i16 %33, 0
  %35 = lshr i16 %33, 5
  %36 = zext i16 %35 to i32
  %37 = load i32, i32* %9, align 4
  %38 = select i1 %34, i32 %37, i32 %36
  %39 = add nsw i32 %38, -1
  %40 = icmp eq i32 %20, %39
  %41 = icmp ugt i32 %38, %20
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %60

43:                                               ; preds = %32
  %44 = and i16 %33, 2
  %45 = icmp eq i16 %44, 0
  %46 = load i16*, i16** %13, align 8
  %47 = select i1 %45, i16* %46, i16* %12
  %48 = sext i32 %20 to i64
  %49 = getelementptr inbounds i16, i16* %47, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 39
  br i1 %51, label %105, label %60

52:                                               ; preds = %30
  %53 = load i16, i16* %8, align 8
  %54 = icmp slt i16 %53, 0
  %55 = lshr i16 %53, 5
  %56 = zext i16 %55 to i32
  %57 = load i32, i32* %9, align 4
  %58 = select i1 %54, i32 %57, i32 %56
  %59 = icmp slt i32 %20, %58
  br i1 %59, label %60, label %105

60:                                               ; preds = %32, %43, %30, %22, %52
  %61 = shl nuw i64 %18, 32
  %62 = zext i32 %20 to i64
  %63 = or i64 %61, %62
  %64 = call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %63, i64 %19, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, i32* dereferenceable(4) %5)
  %65 = extractvalue { i64, i64 } %64, 0
  %66 = extractvalue { i64, i64 } %64, 1
  %67 = trunc i64 %65 to i32
  %68 = lshr i64 %65, 32
  %69 = trunc i64 %68 to i32
  %70 = load i32, i32* %5, align 4
  %71 = icmp slt i32 %70, 1
  br i1 %71, label %72, label %105

72:                                               ; preds = %60
  %73 = lshr i64 %66, 32
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %74, -15
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = add nsw i32 %17, %2
  %78 = call i32 @_ZN6icu_6922FormattedStringBuilder15insertCodePointEiiNS0_5FieldER10UErrorCode(%"class.icu_69::FormattedStringBuilder"* %1, i32 %77, i32 65533, i8 39, i32* dereferenceable(4) %5) #10
  br label %101

79:                                               ; preds = %72
  %80 = icmp slt i32 %74, 0
  %81 = add nsw i32 %17, %2
  br i1 %80, label %82, label %99

82:                                               ; preds = %79
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #10
  %83 = load void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)**, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)*** %15, align 8
  %84 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)*, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)** %83, i64 2
  %85 = load void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)*, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)** %84, align 8
  call void %85(%"class.icu_69::UnicodeString"* nonnull sret %7, %"class.icu_69::number::impl::SymbolProvider"* %3, i32 %74) #10
  %86 = add i32 %74, 15
  %87 = icmp ult i32 %86, 15
  br i1 %87, label %89, label %88

88:                                               ; preds = %89, %82
  call void @abort() #9
  unreachable

89:                                               ; preds = %82
  %90 = trunc i32 %86 to i16
  %91 = lshr i16 32705, %90
  %92 = and i16 %91, 1
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %88, label %94

94:                                               ; preds = %89
  %95 = sext i32 %86 to i64
  %96 = getelementptr inbounds [15 x i8], [15 x i8]* @switch.table._ZN6icu_696number4impl10AffixUtils8unescapeERKNS_13UnicodeStringERNS_22FormattedStringBuilderEiRKNS1_14SymbolProviderENS6_5FieldER10UErrorCode, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = call i32 @_ZN6icu_6922FormattedStringBuilder6insertEiRKNS_13UnicodeStringENS0_5FieldER10UErrorCode(%"class.icu_69::FormattedStringBuilder"* %1, i32 %81, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %7, i8 %97, i32* dereferenceable(4) %5) #10
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #10
  br label %101

99:                                               ; preds = %79
  %100 = call i32 @_ZN6icu_6922FormattedStringBuilder15insertCodePointEiiNS0_5FieldER10UErrorCode(%"class.icu_69::FormattedStringBuilder"* %1, i32 %81, i32 %69, i8 %4, i32* dereferenceable(4) %5) #10
  br label %101

101:                                              ; preds = %94, %99, %76
  %102 = phi i32 [ %78, %76 ], [ %98, %94 ], [ %100, %99 ]
  %103 = add nsw i32 %102, %17
  %104 = icmp slt i32 %67, 0
  br i1 %104, label %105, label %16

105:                                              ; preds = %43, %101, %22, %52, %60
  %106 = phi i32 [ %17, %43 ], [ %103, %101 ], [ %17, %22 ], [ %17, %52 ], [ %17, %60 ]
  ret i32 %106
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6icu_696number4impl10AffixUtils7hasNextERKNS1_8AffixTagERKNS_13UnicodeStringE(%"struct.icu_69::number::impl::AffixTag"* nocapture readonly dereferenceable(16), %"class.icu_69::UnicodeString"* nocapture readonly dereferenceable(64)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.icu_69::number::impl::AffixTag", %"struct.icu_69::number::impl::AffixTag"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp slt i16 %10, 0
  %12 = lshr i16 %10, 5
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = select i1 %11, i32 %15, i32 %13
  %17 = icmp sgt i32 %16, 0
  br label %58

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.icu_69::number::impl::AffixTag", %"struct.icu_69::number::impl::AffixTag"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %58 [
    i32 2, label %21
    i32 0, label %48
  ]

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp slt i16 %23, 0
  %25 = lshr i16 %23, 5
  %26 = zext i16 %25 to i32
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = select i1 %24, i32 %28, i32 %26
  %30 = add nsw i32 %29, -1
  %31 = icmp eq i32 %4, %30
  %32 = icmp ugt i32 %29, %4
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %47

34:                                               ; preds = %21
  %35 = and i16 %23, 2
  %36 = icmp eq i16 %35, 0
  %37 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %38 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %37 to %struct.anon*
  %39 = getelementptr inbounds %struct.anon, %struct.anon* %38, i64 0, i32 1, i64 0
  %40 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %41 = load i16*, i16** %40, align 8
  %42 = select i1 %36, i16* %41, i16* %39
  %43 = sext i32 %4 to i64
  %44 = getelementptr inbounds i16, i16* %42, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = icmp eq i16 %45, 39
  br i1 %46, label %58, label %47

47:                                               ; preds = %34, %21
  br label %58

48:                                               ; preds = %18
  %49 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %50 = load i16, i16* %49, align 8
  %51 = icmp slt i16 %50, 0
  %52 = lshr i16 %50, 5
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = select i1 %51, i32 %55, i32 %53
  %57 = icmp slt i32 %4, %56
  br label %58

58:                                               ; preds = %18, %47, %34, %2, %48, %8
  %59 = phi i1 [ %17, %8 ], [ %57, %48 ], [ false, %2 ], [ false, %34 ], [ true, %47 ], [ true, %18 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64, i64, %"class.icu_69::UnicodeString"* dereferenceable(64), i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %5 = trunc i64 %0 to i32
  %6 = trunc i64 %1 to i32
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %8 = load i16, i16* %7, align 8
  %9 = icmp slt i16 %8, 0
  %10 = lshr i16 %8, 5
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = select i1 %9, i32 %13, i32 %11
  %15 = icmp sgt i32 %14, %5
  br i1 %15, label %16, label %83

16:                                               ; preds = %4, %73
  %17 = phi i32 [ %75, %73 ], [ %6, %4 ]
  %18 = phi i32 [ %74, %73 ], [ %5, %4 ]
  %19 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %2, i32 %18) #10
  %20 = icmp ult i32 %19, 65536
  %21 = select i1 %20, i32 1, i32 2
  switch i32 %17, label %72 [
    i32 0, label %22
    i32 1, label %37
    i32 2, label %41
    i32 3, label %44
    i32 4, label %48
    i32 5, label %52
    i32 6, label %56
    i32 7, label %60
    i32 8, label %64
    i32 9, label %68
  ]

22:                                               ; preds = %16
  switch i32 %19, label %35 [
    i32 39, label %23
    i32 45, label %25
    i32 43, label %27
    i32 37, label %29
    i32 8240, label %31
    i32 164, label %33
  ]

23:                                               ; preds = %22
  %24 = add nsw i32 %21, %18
  br label %73

25:                                               ; preds = %22
  %26 = add nsw i32 %21, %18
  br label %94

27:                                               ; preds = %22
  %28 = add nsw i32 %21, %18
  br label %94

29:                                               ; preds = %22
  %30 = add nsw i32 %21, %18
  br label %94

31:                                               ; preds = %22
  %32 = add nsw i32 %21, %18
  br label %94

33:                                               ; preds = %22
  %34 = add nsw i32 %21, %18
  br label %73

35:                                               ; preds = %22
  %36 = add nsw i32 %21, %18
  br label %94

37:                                               ; preds = %16
  %38 = icmp eq i32 %19, 39
  %39 = add nsw i32 %21, %18
  %40 = select i1 %38, i64 0, i64 2
  br label %94

41:                                               ; preds = %16
  %42 = icmp eq i32 %19, 39
  %43 = add nsw i32 %21, %18
  br i1 %42, label %73, label %94

44:                                               ; preds = %16
  %45 = icmp eq i32 %19, 39
  br i1 %45, label %46, label %73

46:                                               ; preds = %44
  %47 = add nsw i32 %21, %18
  br label %94

48:                                               ; preds = %16
  %49 = icmp eq i32 %19, 164
  br i1 %49, label %50, label %94

50:                                               ; preds = %48
  %51 = add nsw i32 %21, %18
  br label %73

52:                                               ; preds = %16
  %53 = icmp eq i32 %19, 164
  br i1 %53, label %54, label %94

54:                                               ; preds = %52
  %55 = add nsw i32 %21, %18
  br label %73

56:                                               ; preds = %16
  %57 = icmp eq i32 %19, 164
  br i1 %57, label %58, label %94

58:                                               ; preds = %56
  %59 = add nsw i32 %21, %18
  br label %73

60:                                               ; preds = %16
  %61 = icmp eq i32 %19, 164
  br i1 %61, label %62, label %94

62:                                               ; preds = %60
  %63 = add nsw i32 %21, %18
  br label %73

64:                                               ; preds = %16
  %65 = icmp eq i32 %19, 164
  br i1 %65, label %66, label %94

66:                                               ; preds = %64
  %67 = add nsw i32 %21, %18
  br label %73

68:                                               ; preds = %16
  %69 = icmp eq i32 %19, 164
  br i1 %69, label %70, label %94

70:                                               ; preds = %68
  %71 = add nsw i32 %21, %18
  br label %73

72:                                               ; preds = %16
  tail call void @abort() #9
  unreachable

73:                                               ; preds = %50, %54, %58, %62, %66, %70, %33, %23, %41, %44
  %74 = phi i32 [ %71, %70 ], [ %67, %66 ], [ %63, %62 ], [ %59, %58 ], [ %55, %54 ], [ %51, %50 ], [ %34, %33 ], [ %24, %23 ], [ %43, %41 ], [ %18, %44 ]
  %75 = phi i32 [ 9, %70 ], [ 9, %66 ], [ 8, %62 ], [ 7, %58 ], [ 6, %54 ], [ 5, %50 ], [ 4, %33 ], [ 1, %23 ], [ 3, %41 ], [ 0, %44 ]
  %76 = load i16, i16* %7, align 8
  %77 = icmp slt i16 %76, 0
  %78 = lshr i16 %76, 5
  %79 = zext i16 %78 to i32
  %80 = load i32, i32* %12, align 4
  %81 = select i1 %77, i32 %80, i32 %79
  %82 = icmp slt i32 %74, %81
  br i1 %82, label %16, label %83

83:                                               ; preds = %73, %4
  %84 = phi i32 [ %5, %4 ], [ %74, %73 ]
  %85 = phi i32 [ %6, %4 ], [ %75, %73 ]
  switch i32 %85, label %93 [
    i32 0, label %94
    i32 1, label %86
    i32 2, label %86
    i32 3, label %94
    i32 4, label %87
    i32 5, label %88
    i32 6, label %89
    i32 7, label %90
    i32 8, label %91
    i32 9, label %92
  ]

86:                                               ; preds = %83, %83
  store i32 1, i32* %3, align 4
  br label %94

87:                                               ; preds = %83
  br label %94

88:                                               ; preds = %83
  br label %94

89:                                               ; preds = %83
  br label %94

90:                                               ; preds = %83
  br label %94

91:                                               ; preds = %83
  br label %94

92:                                               ; preds = %83
  br label %94

93:                                               ; preds = %83
  tail call void @abort() #9
  unreachable

94:                                               ; preds = %68, %64, %60, %56, %52, %48, %41, %37, %25, %27, %29, %31, %35, %46, %83, %83, %92, %91, %90, %89, %88, %87, %86
  %95 = phi i64 [ -64424509440, %92 ], [ -38654705664, %91 ], [ -34359738368, %90 ], [ -30064771072, %89 ], [ -25769803776, %88 ], [ -21474836480, %87 ], [ undef, %86 ], [ undef, %83 ], [ undef, %83 ], [ -4294967296, %25 ], [ -8589934592, %27 ], [ -12884901888, %29 ], [ -17179869184, %31 ], [ 0, %35 ], [ 2, %46 ], [ %40, %37 ], [ -64424509440, %68 ], [ -38654705664, %64 ], [ -34359738368, %60 ], [ -30064771072, %56 ], [ -25769803776, %52 ], [ -21474836480, %48 ], [ 2, %41 ]
  %96 = phi i32 [ 0, %92 ], [ 0, %91 ], [ 0, %90 ], [ 0, %89 ], [ 0, %88 ], [ 0, %87 ], [ undef, %86 ], [ undef, %83 ], [ undef, %83 ], [ 0, %25 ], [ 0, %27 ], [ 0, %29 ], [ 0, %31 ], [ %19, %35 ], [ 39, %46 ], [ %19, %37 ], [ 0, %68 ], [ 0, %64 ], [ 0, %60 ], [ 0, %56 ], [ 0, %52 ], [ 0, %48 ], [ %19, %41 ]
  %97 = phi i32 [ %84, %92 ], [ %84, %91 ], [ %84, %90 ], [ %84, %89 ], [ %84, %88 ], [ %84, %87 ], [ -1, %86 ], [ -1, %83 ], [ -1, %83 ], [ %26, %25 ], [ %28, %27 ], [ %30, %29 ], [ %32, %31 ], [ %36, %35 ], [ %47, %46 ], [ %39, %37 ], [ %18, %68 ], [ %18, %64 ], [ %18, %60 ], [ %18, %56 ], [ %18, %52 ], [ %18, %48 ], [ %43, %41 ]
  %98 = zext i32 %96 to i64
  %99 = shl nuw i64 %98, 32
  %100 = zext i32 %97 to i64
  %101 = or i64 %99, %100
  %102 = insertvalue { i64, i64 } undef, i64 %101, 0
  %103 = insertvalue { i64, i64 } %102, i64 %95, 1
  ret { i64, i64 } %103
}

declare i32 @_ZN6icu_6922FormattedStringBuilder15insertCodePointEiiNS0_5FieldER10UErrorCode(%"class.icu_69::FormattedStringBuilder"*, i32, i32, i8, i32* dereferenceable(4)) local_unnamed_addr #5

declare i32 @_ZN6icu_6922FormattedStringBuilder6insertEiRKNS_13UnicodeStringENS0_5FieldER10UErrorCode(%"class.icu_69::FormattedStringBuilder"*, i32, %"class.icu_69::UnicodeString"* dereferenceable(64), i8, i32* dereferenceable(4)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_696number4impl10AffixUtils23unescapedCodePointCountERKNS_13UnicodeStringERKNS1_14SymbolProviderER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::number::impl::SymbolProvider"* dereferenceable(8), i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.icu_69::UnicodeString", align 8
  %5 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1
  %8 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %7 to %struct.anon*
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %8, i64 0, i32 1, i64 0
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 3
  %11 = bitcast %"class.icu_69::UnicodeString"* %4 to i8*
  %12 = bitcast %"class.icu_69::number::impl::SymbolProvider"* %1 to void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)***
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 1
  br label %15

15:                                               ; preds = %3, %94
  %16 = phi i32 [ 0, %3 ], [ %95, %94 ]
  %17 = phi i64 [ -6148914694099828736, %3 ], [ %65, %94 ]
  %18 = phi i32 [ 0, %3 ], [ %66, %94 ]
  %19 = phi i64 [ 2863311530, %3 ], [ %67, %94 ]
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %15
  %22 = load i16, i16* %5, align 8
  %23 = icmp slt i16 %22, 0
  %24 = lshr i16 %22, 5
  %25 = zext i16 %24 to i32
  %26 = load i32, i32* %6, align 4
  %27 = select i1 %23, i32 %26, i32 %25
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %59, label %97

29:                                               ; preds = %15
  %30 = trunc i64 %17 to i32
  switch i32 %30, label %59 [
    i32 2, label %31
    i32 0, label %51
  ]

31:                                               ; preds = %29
  %32 = load i16, i16* %5, align 8
  %33 = icmp slt i16 %32, 0
  %34 = lshr i16 %32, 5
  %35 = zext i16 %34 to i32
  %36 = load i32, i32* %6, align 4
  %37 = select i1 %33, i32 %36, i32 %35
  %38 = add nsw i32 %37, -1
  %39 = icmp eq i32 %18, %38
  %40 = icmp ugt i32 %37, %18
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %59

42:                                               ; preds = %31
  %43 = and i16 %32, 2
  %44 = icmp eq i16 %43, 0
  %45 = load i16*, i16** %10, align 8
  %46 = select i1 %44, i16* %45, i16* %9
  %47 = sext i32 %18 to i64
  %48 = getelementptr inbounds i16, i16* %46, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 39
  br i1 %50, label %97, label %59

51:                                               ; preds = %29
  %52 = load i16, i16* %5, align 8
  %53 = icmp slt i16 %52, 0
  %54 = lshr i16 %52, 5
  %55 = zext i16 %54 to i32
  %56 = load i32, i32* %6, align 4
  %57 = select i1 %53, i32 %56, i32 %55
  %58 = icmp slt i32 %18, %57
  br i1 %58, label %59, label %97

59:                                               ; preds = %31, %42, %29, %21, %51
  %60 = shl nuw i64 %19, 32
  %61 = zext i32 %18 to i64
  %62 = or i64 %60, %61
  %63 = call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %62, i64 %17, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, i32* dereferenceable(4) %2)
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = trunc i64 %64 to i32
  %67 = lshr i64 %64, 32
  %68 = trunc i64 %67 to i32
  %69 = load i32, i32* %2, align 4
  %70 = icmp slt i32 %69, 1
  br i1 %70, label %71, label %97

71:                                               ; preds = %59
  %72 = lshr i64 %65, 32
  %73 = trunc i64 %72 to i32
  %74 = icmp eq i32 %73, -15
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = add nsw i32 %16, 1
  br label %94

77:                                               ; preds = %71
  %78 = icmp slt i32 %73, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %77
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #10
  %80 = load void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)**, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)*** %12, align 8
  %81 = getelementptr inbounds void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)*, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)** %80, i64 2
  %82 = load void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)*, void (%"class.icu_69::UnicodeString"*, %"class.icu_69::number::impl::SymbolProvider"*, i32)** %81, align 8
  call void %82(%"class.icu_69::UnicodeString"* nonnull sret %4, %"class.icu_69::number::impl::SymbolProvider"* %1, i32 %73) #10
  %83 = load i16, i16* %13, align 8
  %84 = icmp slt i16 %83, 0
  %85 = lshr i16 %83, 5
  %86 = zext i16 %85 to i32
  %87 = load i32, i32* %14, align 4
  %88 = select i1 %84, i32 %87, i32 %86
  %89 = add nsw i32 %88, %16
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #10
  br label %94

90:                                               ; preds = %77
  %91 = icmp ult i32 %68, 65536
  %92 = select i1 %91, i32 1, i32 2
  %93 = add nsw i32 %92, %16
  br label %94

94:                                               ; preds = %79, %90, %75
  %95 = phi i32 [ %76, %75 ], [ %89, %79 ], [ %93, %90 ]
  %96 = icmp slt i32 %66, 0
  br i1 %96, label %97, label %15

97:                                               ; preds = %42, %94, %21, %51, %59
  %98 = phi i32 [ %16, %42 ], [ %95, %94 ], [ %16, %21 ], [ %16, %51 ], [ %16, %59 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6icu_696number4impl10AffixUtils12containsTypeERKNS_13UnicodeStringENS1_16AffixPatternTypeER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp slt i16 %5, 0
  %7 = lshr i16 %5, 5
  %8 = zext i16 %7 to i32
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = select i1 %6, i32 %10, i32 %8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %77, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1
  %15 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %14 to %struct.anon*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 3
  br label %18

18:                                               ; preds = %13, %71
  %19 = phi i64 [ %72, %71 ], [ -6148914694099828736, %13 ]
  %20 = phi i32 [ %73, %71 ], [ 0, %13 ]
  %21 = phi i64 [ %68, %71 ], [ -6148914694099828736, %13 ]
  %22 = icmp slt i32 %20, 0
  br i1 %22, label %77, label %23

23:                                               ; preds = %18
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %23
  %26 = load i16, i16* %4, align 8
  %27 = icmp slt i16 %26, 0
  %28 = lshr i16 %26, 5
  %29 = zext i16 %28 to i32
  %30 = load i32, i32* %9, align 4
  %31 = select i1 %27, i32 %30, i32 %29
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %63, label %77

33:                                               ; preds = %23
  %34 = trunc i64 %21 to i32
  switch i32 %34, label %63 [
    i32 2, label %35
    i32 0, label %55
  ]

35:                                               ; preds = %33
  %36 = load i16, i16* %4, align 8
  %37 = icmp slt i16 %36, 0
  %38 = lshr i16 %36, 5
  %39 = zext i16 %38 to i32
  %40 = load i32, i32* %9, align 4
  %41 = select i1 %37, i32 %40, i32 %39
  %42 = add nsw i32 %41, -1
  %43 = icmp eq i32 %20, %42
  %44 = icmp ugt i32 %41, %20
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %63

46:                                               ; preds = %35
  %47 = and i16 %36, 2
  %48 = icmp eq i16 %47, 0
  %49 = load i16*, i16** %17, align 8
  %50 = select i1 %48, i16* %49, i16* %16
  %51 = sext i32 %20 to i64
  %52 = getelementptr inbounds i16, i16* %50, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = icmp eq i16 %53, 39
  br i1 %54, label %77, label %63

55:                                               ; preds = %33
  %56 = load i16, i16* %4, align 8
  %57 = icmp slt i16 %56, 0
  %58 = lshr i16 %56, 5
  %59 = zext i16 %58 to i32
  %60 = load i32, i32* %9, align 4
  %61 = select i1 %57, i32 %60, i32 %59
  %62 = icmp slt i32 %20, %61
  br i1 %62, label %63, label %77

63:                                               ; preds = %35, %46, %33, %25, %55
  %64 = zext i32 %20 to i64
  %65 = or i64 %19, %64
  %66 = tail call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %65, i64 %21, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, i32* dereferenceable(4) %2)
  %67 = extractvalue { i64, i64 } %66, 0
  %68 = extractvalue { i64, i64 } %66, 1
  %69 = load i32, i32* %2, align 4
  %70 = icmp slt i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %63
  %72 = and i64 %67, -4294967296
  %73 = trunc i64 %67 to i32
  %74 = lshr i64 %68, 32
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, %1
  br i1 %76, label %77, label %18

77:                                               ; preds = %46, %18, %63, %71, %55, %25, %3
  %78 = phi i1 [ false, %3 ], [ false, %46 ], [ false, %18 ], [ false, %25 ], [ false, %55 ], [ true, %71 ], [ false, %63 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6icu_696number4impl10AffixUtils18hasCurrencySymbolsERKNS_13UnicodeStringER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = icmp slt i16 %4, 0
  %6 = lshr i16 %4, 5
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %9, i32 %7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %78, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1
  %14 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %13 to %struct.anon*
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %14, i64 0, i32 1, i64 0
  %16 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 3
  br label %17

17:                                               ; preds = %12, %76
  %18 = phi i64 [ -6148914694099828736, %12 ], [ %67, %76 ]
  %19 = phi i32 [ 0, %12 ], [ %66, %76 ]
  %20 = phi i64 [ -6148914694099828736, %12 ], [ %65, %76 ]
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %17
  %23 = load i16, i16* %3, align 8
  %24 = icmp slt i16 %23, 0
  %25 = lshr i16 %23, 5
  %26 = zext i16 %25 to i32
  %27 = load i32, i32* %8, align 4
  %28 = select i1 %24, i32 %27, i32 %26
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %60, label %78

30:                                               ; preds = %17
  %31 = trunc i64 %20 to i32
  switch i32 %31, label %60 [
    i32 2, label %32
    i32 0, label %52
  ]

32:                                               ; preds = %30
  %33 = load i16, i16* %3, align 8
  %34 = icmp slt i16 %33, 0
  %35 = lshr i16 %33, 5
  %36 = zext i16 %35 to i32
  %37 = load i32, i32* %8, align 4
  %38 = select i1 %34, i32 %37, i32 %36
  %39 = add nsw i32 %38, -1
  %40 = icmp eq i32 %19, %39
  %41 = icmp ugt i32 %38, %19
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %60

43:                                               ; preds = %32
  %44 = and i16 %33, 2
  %45 = icmp eq i16 %44, 0
  %46 = load i16*, i16** %16, align 8
  %47 = select i1 %45, i16* %46, i16* %15
  %48 = sext i32 %19 to i64
  %49 = getelementptr inbounds i16, i16* %47, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 39
  br i1 %51, label %78, label %60

52:                                               ; preds = %30
  %53 = load i16, i16* %3, align 8
  %54 = icmp slt i16 %53, 0
  %55 = lshr i16 %53, 5
  %56 = zext i16 %55 to i32
  %57 = load i32, i32* %8, align 4
  %58 = select i1 %54, i32 %57, i32 %56
  %59 = icmp slt i32 %19, %58
  br i1 %59, label %60, label %78

60:                                               ; preds = %32, %43, %30, %22, %52
  %61 = zext i32 %19 to i64
  %62 = or i64 %18, %61
  %63 = tail call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %62, i64 %20, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, i32* dereferenceable(4) %1)
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = trunc i64 %64 to i32
  %67 = and i64 %64, -4294967296
  %68 = load i32, i32* %1, align 4
  %69 = icmp slt i32 %68, 1
  br i1 %69, label %70, label %78

70:                                               ; preds = %60
  %71 = lshr i64 %65, 32
  %72 = trunc i64 %71 to i32
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  switch i32 %72, label %75 [
    i32 -1, label %76
    i32 -2, label %76
    i32 -3, label %76
    i32 -4, label %76
    i32 -5, label %78
    i32 -6, label %78
    i32 -7, label %78
    i32 -8, label %78
    i32 -9, label %78
    i32 -15, label %78
  ]

75:                                               ; preds = %74
  tail call void @abort() #9
  unreachable

76:                                               ; preds = %74, %74, %70, %74, %74
  %77 = icmp slt i32 %66, 0
  br i1 %77, label %78, label %17

78:                                               ; preds = %74, %74, %74, %74, %74, %74, %43, %76, %60, %52, %22, %2
  %79 = phi i1 [ false, %2 ], [ true, %74 ], [ true, %74 ], [ true, %74 ], [ true, %74 ], [ true, %74 ], [ true, %74 ], [ false, %43 ], [ false, %76 ], [ false, %22 ], [ false, %52 ], [ false, %60 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl10AffixUtils11replaceTypeERKNS_13UnicodeStringENS1_16AffixPatternTypeEDsR10UErrorCode(%"class.icu_69::UnicodeString"* noalias sret, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i16 zeroext, i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %6 = alloca i16, align 2
  %7 = bitcast %"class.icu_69::UnicodeString"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 64, i1 false)
  tail call void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"* %0, %"class.icu_69::UnicodeString"* dereferenceable(64) %1) #10
  %8 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp slt i16 %9, 0
  %11 = lshr i16 %9, 5
  %12 = zext i16 %11 to i32
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = select i1 %10, i32 %14, i32 %12
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %85, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %19 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %18 to %struct.anon*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i64 0, i32 1, i64 0
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %22 = bitcast i16* %6 to i8*
  br label %23

23:                                               ; preds = %17, %83
  %24 = phi i64 [ -6148914694099828736, %17 ], [ %71, %83 ]
  %25 = phi i32 [ 0, %17 ], [ %72, %83 ]
  %26 = phi i64 [ -6148914694099828736, %17 ], [ %73, %83 ]
  %27 = icmp eq i32 %25, 0
  br i1 %27, label %28, label %36

28:                                               ; preds = %23
  %29 = load i16, i16* %8, align 8
  %30 = icmp slt i16 %29, 0
  %31 = lshr i16 %29, 5
  %32 = zext i16 %31 to i32
  %33 = load i32, i32* %13, align 4
  %34 = select i1 %30, i32 %33, i32 %32
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %66, label %85

36:                                               ; preds = %23
  %37 = trunc i64 %24 to i32
  switch i32 %37, label %66 [
    i32 2, label %38
    i32 0, label %58
  ]

38:                                               ; preds = %36
  %39 = load i16, i16* %8, align 8
  %40 = icmp slt i16 %39, 0
  %41 = lshr i16 %39, 5
  %42 = zext i16 %41 to i32
  %43 = load i32, i32* %13, align 4
  %44 = select i1 %40, i32 %43, i32 %42
  %45 = add nsw i32 %44, -1
  %46 = icmp eq i32 %25, %45
  %47 = icmp ugt i32 %44, %25
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %66

49:                                               ; preds = %38
  %50 = and i16 %39, 2
  %51 = icmp eq i16 %50, 0
  %52 = load i16*, i16** %21, align 8
  %53 = select i1 %51, i16* %52, i16* %20
  %54 = sext i32 %25 to i64
  %55 = getelementptr inbounds i16, i16* %53, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, 39
  br i1 %57, label %85, label %66

58:                                               ; preds = %36
  %59 = load i16, i16* %8, align 8
  %60 = icmp slt i16 %59, 0
  %61 = lshr i16 %59, 5
  %62 = zext i16 %61 to i32
  %63 = load i32, i32* %13, align 4
  %64 = select i1 %60, i32 %63, i32 %62
  %65 = icmp slt i32 %25, %64
  br i1 %65, label %66, label %85

66:                                               ; preds = %38, %49, %36, %28, %58
  %67 = zext i32 %25 to i64
  %68 = or i64 %26, %67
  %69 = call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %68, i64 %24, %"class.icu_69::UnicodeString"* dereferenceable(64) %1, i32* dereferenceable(4) %4)
  %70 = extractvalue { i64, i64 } %69, 0
  %71 = extractvalue { i64, i64 } %69, 1
  %72 = trunc i64 %70 to i32
  %73 = and i64 %70, -4294967296
  %74 = load i32, i32* %4, align 4
  %75 = icmp slt i32 %74, 1
  br i1 %75, label %76, label %85

76:                                               ; preds = %66
  %77 = lshr i64 %71, 32
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i32 %78, %2
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = add nsw i32 %72, -1
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %22)
  store i16 %3, i16* %6, align 2
  %82 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"* %0, i32 %81, i32 1, i16* nonnull %6, i32 0, i32 1) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %22)
  br label %83

83:                                               ; preds = %80, %76
  %84 = icmp slt i32 %72, 0
  br i1 %84, label %85, label %23

85:                                               ; preds = %49, %83, %66, %58, %28, %5
  ret void
}

declare void @_ZN6icu_6913UnicodeStringC1ERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6icu_696number4impl10AffixUtils32containsOnlySymbolsAndIgnorablesERKNS_13UnicodeStringERKNS_10UnicodeSetER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeSet"* dereferenceable(200), i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp slt i16 %5, 0
  %7 = lshr i16 %5, 5
  %8 = zext i16 %7 to i32
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = select i1 %6, i32 %10, i32 %8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %80, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1
  %15 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %14 to %struct.anon*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 3
  br label %18

18:                                               ; preds = %13, %78
  %19 = phi i64 [ -6148914694099828736, %13 ], [ %67, %78 ]
  %20 = phi i32 [ 0, %13 ], [ %68, %78 ]
  %21 = phi i64 [ 2863311530, %13 ], [ %69, %78 ]
  %22 = icmp eq i32 %20, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %18
  %24 = load i16, i16* %4, align 8
  %25 = icmp slt i16 %24, 0
  %26 = lshr i16 %24, 5
  %27 = zext i16 %26 to i32
  %28 = load i32, i32* %9, align 4
  %29 = select i1 %25, i32 %28, i32 %27
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %61, label %80

31:                                               ; preds = %18
  %32 = trunc i64 %19 to i32
  switch i32 %32, label %61 [
    i32 2, label %33
    i32 0, label %53
  ]

33:                                               ; preds = %31
  %34 = load i16, i16* %4, align 8
  %35 = icmp slt i16 %34, 0
  %36 = lshr i16 %34, 5
  %37 = zext i16 %36 to i32
  %38 = load i32, i32* %9, align 4
  %39 = select i1 %35, i32 %38, i32 %37
  %40 = add nsw i32 %39, -1
  %41 = icmp eq i32 %20, %40
  %42 = icmp ugt i32 %39, %20
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %61

44:                                               ; preds = %33
  %45 = and i16 %34, 2
  %46 = icmp eq i16 %45, 0
  %47 = load i16*, i16** %17, align 8
  %48 = select i1 %46, i16* %47, i16* %16
  %49 = sext i32 %20 to i64
  %50 = getelementptr inbounds i16, i16* %48, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = icmp eq i16 %51, 39
  br i1 %52, label %80, label %61

53:                                               ; preds = %31
  %54 = load i16, i16* %4, align 8
  %55 = icmp slt i16 %54, 0
  %56 = lshr i16 %54, 5
  %57 = zext i16 %56 to i32
  %58 = load i32, i32* %9, align 4
  %59 = select i1 %55, i32 %58, i32 %57
  %60 = icmp slt i32 %20, %59
  br i1 %60, label %61, label %80

61:                                               ; preds = %33, %44, %31, %23, %53
  %62 = shl nuw i64 %21, 32
  %63 = zext i32 %20 to i64
  %64 = or i64 %62, %63
  %65 = tail call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %64, i64 %19, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, i32* dereferenceable(4) %2)
  %66 = extractvalue { i64, i64 } %65, 0
  %67 = extractvalue { i64, i64 } %65, 1
  %68 = trunc i64 %66 to i32
  %69 = lshr i64 %66, 32
  %70 = trunc i64 %69 to i32
  %71 = load i32, i32* %2, align 4
  %72 = icmp slt i32 %71, 1
  br i1 %72, label %73, label %80

73:                                               ; preds = %61
  %74 = icmp ult i64 %67, 4294967296
  br i1 %74, label %75, label %78

75:                                               ; preds = %73
  %76 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %1, i32 %70) #10
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %75, %73
  %79 = icmp slt i32 %68, 0
  br i1 %79, label %80, label %18

80:                                               ; preds = %44, %78, %61, %75, %53, %23, %3
  %81 = phi i1 [ true, %3 ], [ true, %44 ], [ true, %78 ], [ true, %23 ], [ true, %53 ], [ false, %75 ], [ false, %61 ]
  ret i1 %81
}

declare signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_696number4impl10AffixUtils19iterateWithConsumerERKNS_13UnicodeStringERNS1_13TokenConsumerER10UErrorCode(%"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::number::impl::TokenConsumer"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp slt i16 %5, 0
  %7 = lshr i16 %5, 5
  %8 = zext i16 %7 to i32
  %9 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = select i1 %6, i32 %10, i32 %8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %84, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1
  %15 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %14 to %struct.anon*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %15, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %0, i64 0, i32 1, i32 0, i32 3
  %18 = bitcast %"class.icu_69::number::impl::TokenConsumer"* %1 to void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)***
  br label %19

19:                                               ; preds = %13, %74
  %20 = phi i64 [ %71, %74 ], [ 2863311530, %13 ]
  %21 = phi i32 [ %76, %74 ], [ 0, %13 ]
  %22 = phi i64 [ %70, %74 ], [ -6148914694099828736, %13 ]
  %23 = icmp slt i32 %21, 0
  br i1 %23, label %84, label %24

24:                                               ; preds = %19
  %25 = icmp eq i32 %21, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %24
  %27 = load i16, i16* %4, align 8
  %28 = icmp slt i16 %27, 0
  %29 = lshr i16 %27, 5
  %30 = zext i16 %29 to i32
  %31 = load i32, i32* %9, align 4
  %32 = select i1 %28, i32 %31, i32 %30
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %64, label %84

34:                                               ; preds = %24
  %35 = trunc i64 %22 to i32
  switch i32 %35, label %64 [
    i32 2, label %36
    i32 0, label %56
  ]

36:                                               ; preds = %34
  %37 = load i16, i16* %4, align 8
  %38 = icmp slt i16 %37, 0
  %39 = lshr i16 %37, 5
  %40 = zext i16 %39 to i32
  %41 = load i32, i32* %9, align 4
  %42 = select i1 %38, i32 %41, i32 %40
  %43 = add nsw i32 %42, -1
  %44 = icmp eq i32 %21, %43
  %45 = icmp ugt i32 %42, %21
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %64

47:                                               ; preds = %36
  %48 = and i16 %37, 2
  %49 = icmp eq i16 %48, 0
  %50 = load i16*, i16** %17, align 8
  %51 = select i1 %49, i16* %50, i16* %16
  %52 = sext i32 %21 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, 39
  br i1 %55, label %84, label %64

56:                                               ; preds = %34
  %57 = load i16, i16* %4, align 8
  %58 = icmp slt i16 %57, 0
  %59 = lshr i16 %57, 5
  %60 = zext i16 %59 to i32
  %61 = load i32, i32* %9, align 4
  %62 = select i1 %58, i32 %61, i32 %60
  %63 = icmp slt i32 %21, %62
  br i1 %63, label %64, label %84

64:                                               ; preds = %36, %47, %34, %26, %56
  %65 = shl nuw i64 %20, 32
  %66 = zext i32 %21 to i64
  %67 = or i64 %65, %66
  %68 = tail call { i64, i64 } @_ZN6icu_696number4impl10AffixUtils9nextTokenENS1_8AffixTagERKNS_13UnicodeStringER10UErrorCode(i64 %67, i64 %22, %"class.icu_69::UnicodeString"* dereferenceable(64) %0, i32* dereferenceable(4) %2)
  %69 = extractvalue { i64, i64 } %68, 0
  %70 = extractvalue { i64, i64 } %68, 1
  %71 = lshr i64 %69, 32
  %72 = load i32, i32* %2, align 4
  %73 = icmp slt i32 %72, 1
  br i1 %73, label %74, label %84

74:                                               ; preds = %64
  %75 = trunc i64 %71 to i32
  %76 = trunc i64 %69 to i32
  %77 = lshr i64 %70, 32
  %78 = trunc i64 %77 to i32
  %79 = load void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)**, void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)*** %18, align 8
  %80 = getelementptr inbounds void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)*, void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)** %79, i64 2
  %81 = load void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)*, void (%"class.icu_69::number::impl::TokenConsumer"*, i32, i32, i32*)** %80, align 8
  tail call void %81(%"class.icu_69::number::impl::TokenConsumer"* %1, i32 %78, i32 %75, i32* dereferenceable(4) %2) #10
  %82 = load i32, i32* %2, align 4
  %83 = icmp slt i32 %82, 1
  br i1 %83, label %19, label %84

84:                                               ; preds = %47, %19, %64, %74, %56, %26, %3
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"*, i16*, i32, i32) local_unnamed_addr #5

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"*, i32, i32, i16*, i32, i32) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2143884417}
