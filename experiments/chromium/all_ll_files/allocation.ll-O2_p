; ModuleID = '../../components/services/heap_profiling/allocation.cc'
source_filename = "../../components/services/heap_profiling/allocation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.heap_profiling::AllocationSite" = type { i32, %"class.std::__1::vector", i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }

@_ZN14heap_profiling14AllocationSiteC1ENS_5mojom13AllocatorTypeEONSt3__16vectorImNS3_9allocatorImEEEEi = hidden unnamed_addr alias void (%"struct.heap_profiling::AllocationSite"*, i32, %"class.std::__1::vector"*, i32), void (%"struct.heap_profiling::AllocationSite"*, i32, %"class.std::__1::vector"*, i32)* @_ZN14heap_profiling14AllocationSiteC2ENS_5mojom13AllocatorTypeEONSt3__16vectorImNS3_9allocatorImEEEEi
@_ZN14heap_profiling14AllocationSiteD1Ev = hidden unnamed_addr alias void (%"struct.heap_profiling::AllocationSite"*), void (%"struct.heap_profiling::AllocationSite"*)* @_ZN14heap_profiling14AllocationSiteD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14heap_profiling14AllocationSiteC2ENS_5mojom13AllocatorTypeEONSt3__16vectorImNS3_9allocatorImEEEEi(%"struct.heap_profiling::AllocationSite"* nocapture, i32, %"class.std::__1::vector"* nocapture dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #4
  %8 = bitcast %"class.std::__1::vector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast i64** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i64** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #4
  %22 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 2
  store i32 %3, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 3
  %24 = bitcast %"class.std::__1::vector"* %6 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %15, align 8
  %27 = ptrtoint i8* %25 to i64
  %28 = sub i64 %26, %27
  %29 = tail call i32 @_ZN4base4HashEPKvm(i8* %25, i64 %28) #4
  store i32 %29, i32* %23, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14heap_profiling14AllocationSiteD2Ev(%"struct.heap_profiling::AllocationSite"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i64* %3 to i64
  %7 = getelementptr inbounds %"struct.heap_profiling::AllocationSite", %"struct.heap_profiling::AllocationSite"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #5
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

declare i32 @_ZN4base4HashEPKvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
