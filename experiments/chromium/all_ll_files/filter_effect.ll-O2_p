; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/filter_effect.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/filter_effect.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.9, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.9 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.6", %"class.blink::Member" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.140", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.156", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.180", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.121", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i64 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist.52"* }
%"class.blink::Worklist.52" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::Worklist.59"* }
%"class.blink::Worklist.59" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.41" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.115", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { float }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.124", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.133" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.52"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.59"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.184" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.208 }
%union.anon.208 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Color" = type { i32 }
%"class.WTF::TextStream" = type opaque
%class.sk_sp.189 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.cc::ColorFilterPaintFilter" = type { %"class.cc::PaintFilter", %class.sk_sp.189, %class.sk_sp }

$_ZNK3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_6FilterEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink12FilterEffectE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffectD2Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffectD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink12FilterEffectC1EPNS_6FilterE = hidden unnamed_addr alias void (%"class.blink::FilterEffect"*, %"class.blink::Filter"*), void (%"class.blink::FilterEffect"*, %"class.blink::Filter"*)* @_ZN5blink12FilterEffectC2EPNS_6FilterE
@_ZN5blink12FilterEffectD1Ev = hidden unnamed_addr alias void (%"class.blink::FilterEffect"*), void (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12FilterEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::HeapVector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #8
  %6 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::Filter"* %1, %"class.blink::Filter"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3
  %8 = bitcast %"class.blink::FloatRect"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false) #8
  %9 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 4
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 5
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 1, i32* %11, align 4
  %12 = getelementptr %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 0
  %13 = bitcast %class.sk_sp* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12FilterEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 2, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #8
  br label %30

30:                                               ; preds = %24, %20, %16
  %31 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 1, i32 0
  %32 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %31, align 8
  %33 = icmp eq %"class.cc::PaintFilter"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %"class.cc::PaintFilter"* %32 to %class.SkRefCntBase*
  %40 = bitcast %"class.cc::PaintFilter"* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #8
  br label %44

44:                                               ; preds = %38, %34, %30
  %45 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 0, i32 0
  %46 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %45, align 8
  %47 = icmp eq %"class.cc::PaintFilter"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %"class.cc::PaintFilter"* %46 to %class.SkRefCntBase*
  %54 = bitcast %"class.cc::PaintFilter"* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #8
  br label %58

58:                                               ; preds = %52, %48, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffectD0Ev(%"class.blink::FilterEffect"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink12FilterEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 3, i32 0
  %4 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %3, align 8
  %5 = icmp eq %"class.cc::PaintFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.cc::PaintFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.cc::PaintFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 2, i32 0
  %18 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %17, align 8
  %19 = icmp eq %"class.cc::PaintFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::PaintFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.cc::PaintFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #8
  br label %30

30:                                               ; preds = %24, %20, %16
  %31 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 1, i32 0
  %32 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %31, align 8
  %33 = icmp eq %"class.cc::PaintFilter"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %"class.cc::PaintFilter"* %32 to %class.SkRefCntBase*
  %40 = bitcast %"class.cc::PaintFilter"* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #8
  br label %44

44:                                               ; preds = %38, %34, %30
  %45 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 0, i32 0
  %46 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %45, align 8
  %47 = icmp eq %"class.cc::PaintFilter"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %"class.cc::PaintFilter"* %46 to %class.SkRefCntBase*
  %54 = bitcast %"class.cc::PaintFilter"* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #8
  br label %58

58:                                               ; preds = %44, %48, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::Member.2"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_6FilterEE5TraceEPNS_7VisitorEPKv) #8
  br label %29

29:                                               ; preds = %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect14AbsoluteBoundsEv(%"class.blink::FilterEffect"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::FloatRect", align 4
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -1, i64 16, i1 false)
  %7 = load %"class.blink::Filter"*, %"class.blink::Filter"** %5, align 8
  %8 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %7, i64 0, i32 1
  %9 = bitcast %"class.blink::FloatRect"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3, i32 1
  %11 = bitcast %"class.blink::FloatSize"* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 8
  %13 = extractelement <2 x float> %12, i32 0
  %14 = fcmp ole float %13, 0.000000e+00
  %15 = extractelement <2 x float> %12, i32 1
  %16 = fcmp ole float %15, 0.000000e+00
  %17 = or i1 %14, %16
  br i1 %17, label %27, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3
  %20 = bitcast %"class.blink::FloatRect"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %23 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = bitcast { <2 x float>, <2 x float> }* %3 to i64*
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %25, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %22) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  %26 = load %"class.blink::Filter"*, %"class.blink::Filter"** %5, align 8
  br label %27

27:                                               ; preds = %1, %18
  %28 = phi %"class.blink::Filter"* [ %7, %1 ], [ %26, %18 ]
  %29 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %28, %"class.blink::FloatRect"* nonnull dereferenceable(16) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret { <2 x float>, <2 x float> } %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE(%"class.blink::FilterEffect"* nocapture readonly, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FloatRect", align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.blink::FloatRect", align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = alloca %"class.blink::FloatRect", align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.blink::FloatRect"*
  %13 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %54

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %48, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -1, i64 16, i1 false) #8
  %23 = load %"class.blink::Filter"*, %"class.blink::Filter"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %23, i64 0, i32 1
  %25 = bitcast %"class.blink::FloatRect"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %25, i64 16, i1 false) #8
  %26 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3, i32 1
  %27 = bitcast %"class.blink::FloatSize"* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 8
  %29 = extractelement <2 x float> %28, i32 0
  %30 = fcmp ole float %29, 0.000000e+00
  %31 = extractelement <2 x float> %28, i32 1
  %32 = fcmp ole float %31, 0.000000e+00
  %33 = or i1 %30, %32
  br i1 %33, label %43, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3
  %36 = bitcast %"class.blink::FloatRect"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %39 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8
  %40 = bitcast { <2 x float>, <2 x float> }* %4 to i64*
  store i64 %37, i64* %40, align 8
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %28, <2 x float>* %41, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %38) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8
  %42 = load %"class.blink::Filter"*, %"class.blink::Filter"** %22, align 8
  br label %43

43:                                               ; preds = %20, %34
  %44 = phi %"class.blink::Filter"* [ %23, %20 ], [ %42, %34 ]
  %45 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %44, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  br label %145

48:                                               ; preds = %16
  %49 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %52 = bitcast %"class.blink::FloatSize"* %51 to <2 x float>*
  %53 = load <2 x float>, <2 x float>* %52, align 4
  br label %145

54:                                               ; preds = %2
  %55 = bitcast %"class.blink::FloatRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #8
  %56 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Member"*, %"class.blink::Member"** %56, align 8
  %58 = zext i32 %14 to i64
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %57, i64 %58
  %60 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  %61 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.blink::FloatRect"*
  %62 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %65 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.blink::FloatRect"*
  %66 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  %67 = bitcast %"class.blink::FloatRect"* %5 to i8*
  %68 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %69 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %70 = bitcast { <2 x float>, <2 x float> }* %6 to i64*
  %71 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %74 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %75 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.blink::FloatRect"*
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  br label %86

80:                                               ; preds = %140
  %81 = bitcast %"class.blink::FloatRect"* %10 to <2 x float>*
  %82 = load <2 x float>, <2 x float>* %81, align 8
  %83 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1
  %84 = bitcast %"class.blink::FloatSize"* %83 to <2 x float>*
  %85 = load <2 x float>, <2 x float>* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #8
  br label %145

86:                                               ; preds = %54, %140
  %87 = phi %"class.blink::Member"* [ %57, %54 ], [ %143, %140 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  %88 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #8
  %90 = bitcast %"class.blink::FilterEffect"* %89 to { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)***
  %91 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)**, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*** %90, align 8
  %92 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %91, i64 10
  %93 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %92, align 8
  %94 = call { <2 x float>, <2 x float> } %93(%"class.blink::FilterEffect"* %89, %"class.blink::FloatRect"* dereferenceable(16) %1) #8
  %95 = extractvalue { <2 x float>, <2 x float> } %94, 0
  store <2 x float> %95, <2 x float>* %63, align 8
  %96 = extractvalue { <2 x float>, <2 x float> } %94, 1
  store <2 x float> %96, <2 x float>* %64, align 8
  %97 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)**, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*** %90, align 8
  %98 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %97, i64 11
  %99 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %98, align 8
  %100 = call { <2 x float>, <2 x float> } %99(%"class.blink::FilterEffect"* %89, %"class.blink::FloatRect"* nonnull dereferenceable(16) %61) #8
  %101 = extractvalue { <2 x float>, <2 x float> } %100, 0
  %102 = extractvalue { <2 x float>, <2 x float> } %100, 1
  store <2 x float> %101, <2 x float>* %63, align 8
  store <2 x float> %102, <2 x float>* %64, align 8
  %103 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %89, i64 0, i32 4
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %140, label %106

106:                                              ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -1, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #8
  %107 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %89, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %67, i8 -1, i64 16, i1 false) #8
  %108 = load %"class.blink::Filter"*, %"class.blink::Filter"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %108, i64 0, i32 1
  %110 = bitcast %"class.blink::FloatRect"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 %110, i64 16, i1 false) #8
  %111 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %89, i64 0, i32 3, i32 1
  %112 = bitcast %"class.blink::FloatSize"* %111 to <2 x float>*
  %113 = load <2 x float>, <2 x float>* %112, align 8
  %114 = extractelement <2 x float> %113, i32 0
  %115 = fcmp ole float %114, 0.000000e+00
  %116 = extractelement <2 x float> %113, i32 1
  %117 = fcmp ole float %116, 0.000000e+00
  %118 = or i1 %115, %117
  br i1 %118, label %124, label %119

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %89, i64 0, i32 3
  %121 = bitcast %"class.blink::FloatRect"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #8
  store i64 %122, i64* %70, align 8
  store <2 x float> %113, <2 x float>* %71, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %5, %"class.blink::FloatRect"* nonnull dereferenceable(16) %68) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #8
  %123 = load %"class.blink::Filter"*, %"class.blink::Filter"** %107, align 8
  br label %124

124:                                              ; preds = %119, %106
  %125 = phi %"class.blink::Filter"* [ %108, %106 ], [ %123, %119 ]
  %126 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %125, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  %127 = extractvalue { <2 x float>, <2 x float> } %126, 0
  store <2 x float> %127, <2 x float>* %72, align 8
  %128 = extractvalue { <2 x float>, <2 x float> } %126, 1
  store <2 x float> %128, <2 x float>* %73, align 8
  %129 = bitcast %"class.blink::FilterEffect"* %89 to i1 (%"class.blink::FilterEffect"*)***
  %130 = load i1 (%"class.blink::FilterEffect"*)**, i1 (%"class.blink::FilterEffect"*)*** %129, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::FilterEffect"*)*, i1 (%"class.blink::FilterEffect"*)** %130, i64 8
  %132 = load i1 (%"class.blink::FilterEffect"*)*, i1 (%"class.blink::FilterEffect"*)** %131, align 8
  %133 = call zeroext i1 %132(%"class.blink::FilterEffect"* %89) #8
  br i1 %133, label %137, label %134

134:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* nonnull align 8 %62, i64 16, i1 false) #8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %75, %"class.blink::FloatRect"* nonnull dereferenceable(16) %65) #8
  %135 = load <2 x float>, <2 x float>* %76, align 8
  %136 = load <2 x float>, <2 x float>* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #8
  br label %137

137:                                              ; preds = %134, %124
  %138 = phi <2 x float> [ %135, %134 ], [ %127, %124 ]
  %139 = phi <2 x float> [ %136, %134 ], [ %128, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  br label %140

140:                                              ; preds = %86, %137
  %141 = phi <2 x float> [ %138, %137 ], [ %101, %86 ]
  %142 = phi <2 x float> [ %139, %137 ], [ %102, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #8
  store <2 x float> %141, <2 x float>* %78, align 8
  store <2 x float> %142, <2 x float>* %79, align 8
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %10, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  %143 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %87, i64 1
  %144 = icmp eq %"class.blink::Member"* %143, %59
  br i1 %144, label %80, label %86

145:                                              ; preds = %80, %48, %43
  %146 = phi <2 x float> [ %82, %80 ], [ %46, %43 ], [ %50, %48 ]
  %147 = phi <2 x float> [ %85, %80 ], [ %47, %43 ], [ %53, %48 ]
  %148 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %146, 0
  %149 = insertvalue { <2 x float>, <2 x float> } %148, <2 x float> %147, 1
  ret { <2 x float>, <2 x float> } %149
}

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect7MapRectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FloatRect", align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.blink::FloatRect"*
  %9 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = bitcast %"class.blink::FilterEffect"* %0 to { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)***
  %11 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)**, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*** %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %11, i64 10
  %13 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %12, align 8
  %14 = tail call { <2 x float>, <2 x float> } %13(%"class.blink::FilterEffect"* %0, %"class.blink::FloatRect"* dereferenceable(16) %1) #8
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %16 = extractvalue { <2 x float>, <2 x float> } %14, 0
  store <2 x float> %16, <2 x float>* %15, align 8
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %18 = extractvalue { <2 x float>, <2 x float> } %14, 1
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)**, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*** %10, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %19, i64 11
  %21 = load { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)*, { <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)** %20, align 8
  %22 = call { <2 x float>, <2 x float> } %21(%"class.blink::FilterEffect"* %0, %"class.blink::FloatRect"* nonnull dereferenceable(16) %8) #8
  %23 = extractvalue { <2 x float>, <2 x float> } %22, 0
  %24 = extractvalue { <2 x float>, <2 x float> } %22, 1
  store <2 x float> %23, <2 x float>* %15, align 8
  store <2 x float> %24, <2 x float>* %17, align 8
  %25 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %26 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %75, label %29

29:                                               ; preds = %2
  %30 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  %31 = bitcast %"class.blink::FloatRect"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -1, i64 16, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 -1, i64 16, i1 false) #8
  %33 = load %"class.blink::Filter"*, %"class.blink::Filter"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %33, i64 0, i32 1
  %35 = bitcast %"class.blink::FloatRect"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %35, i64 16, i1 false) #8
  %36 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3, i32 1
  %37 = bitcast %"class.blink::FloatSize"* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 8
  %39 = extractelement <2 x float> %38, i32 0
  %40 = fcmp ole float %39, 0.000000e+00
  %41 = extractelement <2 x float> %38, i32 1
  %42 = fcmp ole float %41, 0.000000e+00
  %43 = or i1 %40, %42
  br i1 %43, label %53, label %44

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3
  %46 = bitcast %"class.blink::FloatRect"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %49 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #8
  %50 = bitcast { <2 x float>, <2 x float> }* %4 to i64*
  store i64 %47, i64* %50, align 8
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %38, <2 x float>* %51, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %48) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #8
  %52 = load %"class.blink::Filter"*, %"class.blink::Filter"** %32, align 8
  br label %53

53:                                               ; preds = %44, %29
  %54 = phi %"class.blink::Filter"* [ %33, %29 ], [ %52, %44 ]
  %55 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %54, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %57 = extractvalue { <2 x float>, <2 x float> } %55, 0
  store <2 x float> %57, <2 x float>* %56, align 8
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %59 = extractvalue { <2 x float>, <2 x float> } %55, 1
  store <2 x float> %59, <2 x float>* %58, align 8
  %60 = bitcast %"class.blink::FilterEffect"* %0 to i1 (%"class.blink::FilterEffect"*)***
  %61 = load i1 (%"class.blink::FilterEffect"*)**, i1 (%"class.blink::FilterEffect"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::FilterEffect"*)*, i1 (%"class.blink::FilterEffect"*)** %61, i64 8
  %63 = load i1 (%"class.blink::FilterEffect"*)*, i1 (%"class.blink::FilterEffect"*)** %62, align 8
  %64 = call zeroext i1 %63(%"class.blink::FilterEffect"* %0) #8
  br i1 %64, label %72, label %65

65:                                               ; preds = %53
  %66 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  %67 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* nonnull align 8 %9, i64 16, i1 false) #8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %67, %"class.blink::FloatRect"* nonnull dereferenceable(16) %25) #8
  %68 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %69 = load <2 x float>, <2 x float>* %68, align 8
  %70 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %71 = load <2 x float>, <2 x float>* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  br label %72

72:                                               ; preds = %65, %53
  %73 = phi <2 x float> [ %69, %65 ], [ %57, %53 ]
  %74 = phi <2 x float> [ %71, %65 ], [ %59, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  br label %75

75:                                               ; preds = %2, %72
  %76 = phi <2 x float> [ %73, %72 ], [ %23, %2 ]
  %77 = phi <2 x float> [ %74, %72 ], [ %24, %2 ]
  %78 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %76, 0
  %79 = insertvalue { <2 x float>, <2 x float> } %78, <2 x float> %77, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret { <2 x float>, <2 x float> } %79
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE(%"class.blink::FilterEffect"* nocapture readnone, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect11ApplyBoundsERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FloatRect", align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %8 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %15 = bitcast %"class.blink::FloatSize"* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  br label %65

17:                                               ; preds = %2
  %18 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = bitcast %"class.blink::FloatRect"* %3 to i8*
  %20 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %21 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -1, i64 16, i1 false) #8
  %22 = load %"class.blink::Filter"*, %"class.blink::Filter"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %22, i64 0, i32 1
  %24 = bitcast %"class.blink::FloatRect"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %24, i64 16, i1 false) #8
  %25 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3, i32 1
  %26 = bitcast %"class.blink::FloatSize"* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 8
  %28 = extractelement <2 x float> %27, i32 0
  %29 = fcmp ole float %28, 0.000000e+00
  %30 = extractelement <2 x float> %27, i32 1
  %31 = fcmp ole float %30, 0.000000e+00
  %32 = or i1 %29, %31
  br i1 %32, label %42, label %33

33:                                               ; preds = %17
  %34 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 3
  %35 = bitcast %"class.blink::FloatRect"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %38 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #8
  %39 = bitcast { <2 x float>, <2 x float> }* %4 to i64*
  store i64 %36, i64* %39, align 8
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %27, <2 x float>* %40, align 8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %37) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #8
  %41 = load %"class.blink::Filter"*, %"class.blink::Filter"** %21, align 8
  br label %42

42:                                               ; preds = %17, %33
  %43 = phi %"class.blink::Filter"* [ %22, %17 ], [ %41, %33 ]
  %44 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %43, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %46 = extractvalue { <2 x float>, <2 x float> } %44, 0
  store <2 x float> %46, <2 x float>* %45, align 8
  %47 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %48 = extractvalue { <2 x float>, <2 x float> } %44, 1
  store <2 x float> %48, <2 x float>* %47, align 8
  %49 = bitcast %"class.blink::FilterEffect"* %0 to i1 (%"class.blink::FilterEffect"*)***
  %50 = load i1 (%"class.blink::FilterEffect"*)**, i1 (%"class.blink::FilterEffect"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::FilterEffect"*)*, i1 (%"class.blink::FilterEffect"*)** %50, i64 8
  %52 = load i1 (%"class.blink::FilterEffect"*)*, i1 (%"class.blink::FilterEffect"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::FilterEffect"* %0) #8
  br i1 %53, label %62, label %54

54:                                               ; preds = %42
  %55 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55)
  %56 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %57 = bitcast %"class.blink::FloatRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 4 %57, i64 16, i1 false) #8
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %56, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #8
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %59 = load <2 x float>, <2 x float>* %58, align 8
  %60 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %61 = load <2 x float>, <2 x float>* %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55)
  br label %62

62:                                               ; preds = %42, %54
  %63 = phi <2 x float> [ %59, %54 ], [ %46, %42 ]
  %64 = phi <2 x float> [ %61, %54 ], [ %48, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  br label %65

65:                                               ; preds = %62, %11
  %66 = phi <2 x float> [ %63, %62 ], [ %13, %11 ]
  %67 = phi <2 x float> [ %64, %62 ], [ %16, %11 ]
  %68 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %66, 0
  %69 = insertvalue { <2 x float>, <2 x float> } %68, <2 x float> %67, 1
  ret { <2 x float>, <2 x float> } %69
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0
  %4 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1)
  %5 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %5, align 8
  ret %"class.blink::FilterEffect"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_12FilterEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffect19DisposeImageFiltersEv(%"class.blink::FilterEffect"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 0, i32 0
  %3 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %2, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %2, align 8
  %4 = icmp eq %"class.cc::PaintFilter"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %"class.cc::PaintFilter"* %3 to %class.SkRefCntBase*
  %11 = bitcast %"class.cc::PaintFilter"* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #8
  br label %15

15:                                               ; preds = %1, %5, %9
  %16 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 1, i32 0
  %17 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %16, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %16, align 8
  %18 = icmp eq %"class.cc::PaintFilter"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %"class.cc::PaintFilter"* %17 to %class.SkRefCntBase*
  %25 = bitcast %"class.cc::PaintFilter"* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #8
  br label %29

29:                                               ; preds = %23, %19, %15
  %30 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 2, i32 0
  %31 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %30, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %30, align 8
  %32 = icmp eq %"class.cc::PaintFilter"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %"class.cc::PaintFilter"* %31 to %class.SkRefCntBase*
  %39 = bitcast %"class.cc::PaintFilter"* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  tail call void %42(%class.SkRefCntBase* nonnull %38) #8
  br label %43

43:                                               ; preds = %37, %33, %29
  %44 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 3, i32 0
  %45 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %44, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %44, align 8
  %46 = icmp eq %"class.cc::PaintFilter"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %"class.cc::PaintFilter"* %45 to %class.SkRefCntBase*
  %53 = bitcast %"class.cc::PaintFilter"* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  tail call void %56(%class.SkRefCntBase* nonnull %52) #8
  br label %57

57:                                               ; preds = %51, %47, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffect28DisposeImageFiltersRecursiveEv(%"class.blink::FilterEffect"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 0, i32 0
  %3 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %2, align 8
  %4 = icmp eq %"class.cc::PaintFilter"* %3, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 1, i32 0
  %7 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %6, align 8
  %8 = icmp eq %"class.cc::PaintFilter"* %7, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 2, i32 0
  %11 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %10, align 8
  %12 = icmp eq %"class.cc::PaintFilter"* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 3, i32 0
  %15 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %14, align 8
  %16 = icmp eq %"class.cc::PaintFilter"* %15, null
  br i1 %16, label %85, label %17

17:                                               ; preds = %13
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %2, align 8
  br label %29

18:                                               ; preds = %9, %5
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %2, align 8
  br label %29

19:                                               ; preds = %1
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %2, align 8
  %20 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %"class.cc::PaintFilter"* %3 to %class.SkRefCntBase*
  %25 = bitcast %"class.cc::PaintFilter"* %3 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #8
  br label %29

29:                                               ; preds = %18, %17, %23, %19
  %30 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 1, i32 0
  %31 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %30, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %30, align 8
  %32 = icmp eq %"class.cc::PaintFilter"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %"class.cc::PaintFilter"* %31 to %class.SkRefCntBase*
  %39 = bitcast %"class.cc::PaintFilter"* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  tail call void %42(%class.SkRefCntBase* nonnull %38) #8
  br label %43

43:                                               ; preds = %37, %33, %29
  %44 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 2, i32 0
  %45 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %44, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %44, align 8
  %46 = icmp eq %"class.cc::PaintFilter"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %"class.cc::PaintFilter"* %45 to %class.SkRefCntBase*
  %53 = bitcast %"class.cc::PaintFilter"* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  tail call void %56(%class.SkRefCntBase* nonnull %52) #8
  br label %57

57:                                               ; preds = %51, %47, %43
  %58 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 3, i32 0
  %59 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %58, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %58, align 8
  %60 = icmp eq %"class.cc::PaintFilter"* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = bitcast %"class.cc::PaintFilter"* %59 to %class.SkRefCntBase*
  %67 = bitcast %"class.cc::PaintFilter"* %59 to void (%class.SkRefCntBase*)***
  %68 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, i64 2
  %70 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %69, align 8
  tail call void %70(%class.SkRefCntBase* nonnull %66) #8
  br label %71

71:                                               ; preds = %57, %61, %65
  %72 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::Member"*, %"class.blink::Member"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %73, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %71, %79
  %80 = phi %"class.blink::Member"* [ %83, %79 ], [ %73, %71 ]
  %81 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %81, align 8
  tail call void @_ZN5blink12FilterEffect28DisposeImageFiltersRecursiveEv(%"class.blink::FilterEffect"* %82)
  %83 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %80, i64 1
  %84 = icmp eq %"class.blink::Member"* %83, %77
  br i1 %84, label %85, label %79

85:                                               ; preds = %79, %71, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12FilterEffect39AdaptColorToOperatingInterpolationSpaceERKNS_5ColorE(%"class.blink::FilterEffect"* nocapture readonly, %"class.blink::Color"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = tail call i32 @_ZN5blink29interpolation_space_utilities12ConvertColorERKNS_5ColorENS_18InterpolationSpaceES4_(%"class.blink::Color"* dereferenceable(4) %1, i32 %4, i32 0) #8
  ret i32 %5
}

declare i32 @_ZN5blink29interpolation_space_utilities12ConvertColorERKNS_5ColorENS_18InterpolationSpaceES4_(%"class.blink::Color"* dereferenceable(4), i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* nocapture readnone, %"class.WTF::TextStream"* readnone returned, i32) unnamed_addr #4 align 2 {
  ret %"class.WTF::TextStream"* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12FilterEffect17CreateImageFilterEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FilterEffect"* nocapture readnone) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* noalias sret, %"class.blink::FilterEffect"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FilterEffect"* %1 to void (%class.sk_sp*, %"class.blink::FilterEffect"*)***
  %4 = load void (%class.sk_sp*, %"class.blink::FilterEffect"*)**, void (%class.sk_sp*, %"class.blink::FilterEffect"*)*** %3, align 8
  %5 = getelementptr inbounds void (%class.sk_sp*, %"class.blink::FilterEffect"*)*, void (%class.sk_sp*, %"class.blink::FilterEffect"*)** %4, i64 3
  %6 = load void (%class.sk_sp*, %"class.blink::FilterEffect"*)*, void (%class.sk_sp*, %"class.blink::FilterEffect"*)** %5, align 8
  tail call void %6(%class.sk_sp* sret %0, %"class.blink::FilterEffect"* %1) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12FilterEffect17InputsTaintOriginEv(%"class.blink::FilterEffect"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member"*, %"class.blink::Member"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %19, label %11

9:                                                ; preds = %11
  %10 = icmp eq %"class.blink::Member"* %18, %7
  br i1 %10, label %19, label %11

11:                                               ; preds = %1, %9
  %12 = phi %"class.blink::Member"* [ %18, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::FilterEffect"*, %"class.blink::FilterEffect"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %14, i64 0, i32 5
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 1
  br i1 %17, label %9, label %19

19:                                               ; preds = %11, %9, %1
  %20 = phi i1 [ false, %1 ], [ false, %9 ], [ true, %11 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* noalias nocapture sret, %"class.blink::FilterEffect"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.189, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca <2 x i64>, align 16
  %6 = alloca %"class.blink::FloatRect", align 4
  %7 = alloca %class.sk_sp.189, align 8
  %8 = alloca %"class.absl::optional", align 4
  %9 = bitcast %class.sk_sp.189* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %class.sk_sp.189, %class.sk_sp.189* %7, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %10, align 8
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.189* nonnull sret %7, i32 0, i32 0) #8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #8
  %12 = bitcast <2 x i64>* %5 to %"class.blink::FloatRect"*
  %13 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2, !noalias !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  store i8 0, i8* %11, align 4, !alias.scope !3
  br label %58

17:                                               ; preds = %2
  %18 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8, !noalias !3
  %19 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 3
  %20 = bitcast %"class.blink::FloatRect"* %19 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8, !noalias !3
  store <2 x i64> %21, <2 x i64>* %5, align 16, !noalias !3
  %22 = extractelement <2 x i64> %21, i32 1
  %23 = trunc i64 %22 to i32
  %24 = bitcast i32 %23 to float
  %25 = fcmp ole float %24, 0.000000e+00
  %26 = lshr i64 %22, 32
  %27 = trunc i64 %26 to i32
  %28 = bitcast i32 %27 to float
  %29 = fcmp ole float %28, 0.000000e+00
  %30 = or i1 %25, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %17
  store i8 0, i8* %11, align 4, !alias.scope !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8, !noalias !3
  br label %58

32:                                               ; preds = %17
  %33 = bitcast %"class.blink::FloatRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #8, !noalias !3
  %34 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %33, i8 -1, i64 16, i1 false) #8, !noalias !3
  %37 = load %"class.blink::Filter"*, %"class.blink::Filter"** %36, align 8, !noalias !3
  %38 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %37, i64 0, i32 1
  %39 = bitcast %"class.blink::FloatRect"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %39, i64 16, i1 false) #8, !noalias !3
  %40 = load float, float* %34, align 4, !noalias !3
  %41 = fcmp ole float %40, 0.000000e+00
  %42 = load float, float* %35, align 4, !noalias !3
  %43 = fcmp ole float %42, 0.000000e+00
  %44 = or i1 %41, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %32
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %12, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #8, !noalias !3
  %46 = load %"class.blink::Filter"*, %"class.blink::Filter"** %36, align 8, !noalias !3
  br label %47

47:                                               ; preds = %32, %45
  %48 = phi %"class.blink::Filter"* [ %37, %32 ], [ %46, %45 ]
  %49 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %48, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12) #8, !noalias !3
  %50 = extractvalue { <2 x float>, <2 x float> } %49, 0
  %51 = extractvalue { <2 x float>, <2 x float> } %49, 1
  store i8 1, i8* %11, align 4, !alias.scope !3
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = fadd <2 x float> %50, %51
  %54 = bitcast %struct.SkRect* %52 to <2 x float>*
  store <2 x float> %50, <2 x float>* %54, align 4, !alias.scope !3
  %55 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %56 = bitcast float* %55 to <2 x float>*
  store <2 x float> %53, <2 x float>* %56, align 4, !alias.scope !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #8, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8, !noalias !3
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %58

58:                                               ; preds = %16, %31, %47
  %59 = phi %struct.SkRect* [ %57, %47 ], [ null, %31 ], [ null, %16 ]
  %60 = bitcast %class.sk_sp.189* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %61 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = call i8* @_Znwm(i64 72) #9, !noalias !6
  %63 = bitcast i8* %62 to %"class.cc::ColorFilterPaintFilter"*
  %64 = bitcast %class.sk_sp.189* %7 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !6
  store %class.SkColorFilter* null, %class.SkColorFilter** %10, align 8, !noalias !6
  %66 = bitcast %class.sk_sp.189* %3 to i64*
  store i64 %65, i64* %66, align 8, !noalias !6
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %67, align 8, !noalias !6
  call void @_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"* nonnull %63, %class.sk_sp.189* nonnull %3, %class.sk_sp* nonnull %4, %struct.SkRect* %59) #8, !noalias !6
  %68 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %67, align 8, !noalias !6
  %69 = icmp eq %"class.cc::PaintFilter"* %68, null
  br i1 %69, label %80, label %70

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %68, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel, !noalias !6
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = bitcast %"class.cc::PaintFilter"* %68 to %class.SkRefCntBase*
  %76 = bitcast %"class.cc::PaintFilter"* %68 to void (%class.SkRefCntBase*)***
  %77 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %76, align 8, !noalias !6
  %78 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, i64 2
  %79 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %78, align 8, !noalias !6
  call void %79(%class.SkRefCntBase* nonnull %75) #8, !noalias !6
  br label %80

80:                                               ; preds = %74, %70, %58
  %81 = getelementptr inbounds %class.sk_sp.189, %class.sk_sp.189* %3, i64 0, i32 0
  %82 = load %class.SkColorFilter*, %class.SkColorFilter** %81, align 8, !noalias !6
  %83 = icmp eq %class.SkColorFilter* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %82, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel, !noalias !6
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %class.SkColorFilter* %82 to %class.SkRefCntBase*
  %90 = bitcast %class.SkColorFilter* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8, !noalias !6
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8, !noalias !6
  call void %93(%class.SkRefCntBase* nonnull %89) #8, !noalias !6
  br label %94

94:                                               ; preds = %88, %84, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %95 = bitcast %class.sk_sp* %0 to i8**
  store i8* %62, i8** %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #8
  %96 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %97 = icmp eq %class.SkColorFilter* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %96, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkColorFilter* %96 to %class.SkRefCntBase*
  %104 = bitcast %class.SkColorFilter* %96 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #8
  br label %108

108:                                              ; preds = %94, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  ret void
}

declare void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.189* sret, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* noalias nocapture sret, %"class.blink::FilterEffect"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.blink::FloatRect"*
  %5 = alloca %"class.blink::FloatRect", align 4
  %6 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  br label %55

11:                                               ; preds = %2
  %12 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 3
  %14 = bitcast %"class.blink::FloatRect"* %13 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  store <2 x i64> %15, <2 x i64>* %3, align 16
  %16 = extractelement <2 x i64> %15, i32 1
  %17 = trunc i64 %16 to i32
  %18 = bitcast i32 %17 to float
  %19 = fcmp ole float %18, 0.000000e+00
  %20 = lshr i64 %16, 32
  %21 = trunc i64 %20 to i32
  %22 = bitcast i32 %21 to float
  %23 = fcmp ole float %22, 0.000000e+00
  %24 = or i1 %19, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 4
  br label %54

27:                                               ; preds = %11
  %28 = bitcast %"class.blink::FloatRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 1
  %31 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %1, i64 0, i32 2, i32 0, i32 0
  %32 = bitcast %"class.blink::FloatRect"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -1, i64 16, i1 false)
  %33 = load %"class.blink::Filter"*, %"class.blink::Filter"** %31, align 8
  %34 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %33, i64 0, i32 1
  %35 = bitcast %"class.blink::FloatRect"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %35, i64 16, i1 false)
  %36 = load float, float* %29, align 4
  %37 = fcmp ole float %36, 0.000000e+00
  %38 = load float, float* %30, align 4
  %39 = fcmp ole float %38, 0.000000e+00
  %40 = or i1 %37, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %27
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #8
  %42 = load %"class.blink::Filter"*, %"class.blink::Filter"** %31, align 8
  br label %43

43:                                               ; preds = %27, %41
  %44 = phi %"class.blink::Filter"* [ %33, %27 ], [ %42, %41 ]
  %45 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %44, %"class.blink::FloatRect"* nonnull dereferenceable(16) %4) #8
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %48, align 4
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = fadd <2 x float> %46, %47
  %51 = bitcast %struct.SkRect* %49 to <2 x float>*
  store <2 x float> %46, <2 x float>* %51, align 4
  %52 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %53 = bitcast float* %52 to <2 x float>*
  store <2 x float> %50, <2 x float>* %53, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #8
  br label %54

54:                                               ; preds = %43, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  br label %55

55:                                               ; preds = %54, %9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::PaintFilter"* @_ZNK5blink12FilterEffect14GetImageFilterENS_18InterpolationSpaceEb(%"class.blink::FilterEffect"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %1, 1
  %5 = zext i1 %4 to i64
  %6 = select i1 %2, i64 2, i64 0
  %7 = or i64 %6, %5
  %8 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 %7, i32 0
  %9 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %8, align 8
  ret %"class.cc::PaintFilter"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12FilterEffect14SetImageFilterENS_18InterpolationSpaceEb5sk_spIN2cc11PaintFilterEE(%"class.blink::FilterEffect"* nocapture, i32, i1 zeroext, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 1
  %6 = zext i1 %5 to i64
  %7 = select i1 %2, i64 2, i64 0
  %8 = or i64 %7, %6
  %9 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 7, i64 %8
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %11 = bitcast %class.sk_sp* %3 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %10, align 8
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %14 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %13, align 8
  %15 = bitcast %class.sk_sp* %9 to i64*
  store i64 %12, i64* %15, align 8
  %16 = icmp eq %"class.cc::PaintFilter"* %14, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.cc::PaintFilter"* %14 to %class.SkRefCntBase*
  %23 = bitcast %"class.cc::PaintFilter"* %14 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #8
  br label %27

27:                                               ; preds = %4, %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12FilterEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12FilterEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FilterEffect"*
  %4 = bitcast i8* %1 to void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)**, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FilterEffect"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6FilterEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Filter"*
  tail call void @_ZNK5blink6Filter5TraceEPNS_7VisitorE(%"class.blink::Filter"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink6Filter5TraceEPNS_7VisitorE(%"class.blink::Filter"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2cc22ColorFilterPaintFilterC1E5sk_spI13SkColorFilterES1_INS_11PaintFilterEEPK6SkRect(%"class.cc::ColorFilterPaintFilter"*, %class.sk_sp.189*, %class.sk_sp*, %struct.SkRect*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink12FilterEffect11GetCropRectEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink12FilterEffect11GetCropRectEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJ5sk_spI13SkColorFilterEDnPK6SkRectEES2_IT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spIN2cc22ColorFilterPaintFilterEJ5sk_spI13SkColorFilterEDnPK6SkRectEES2_IT_EDpOT0_"}
!9 = !{!"branch_weights", i32 1, i32 2000}
