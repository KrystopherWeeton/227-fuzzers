; ModuleID = '../../third_party/skia/src/core/SkAnalyticEdge.cpp'
source_filename = "../../third_party/skia/src/core/SkAnalyticEdge.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkAnalyticEdge = type { %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkPoint = type { float, float }
%struct.SkAnalyticCubicEdge = type <{ %struct.SkAnalyticEdge, %struct.SkCubicEdge, i32, [4 x i8] }>
%struct.SkCubicEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkEdge = type { %struct.SkEdge*, %struct.SkEdge*, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkAnalyticQuadraticEdge = type { %struct.SkAnalyticEdge, %struct.SkQuadraticEdge, i32, i32 }
%struct.SkQuadraticEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32 }

@_ZZL13quick_inverseiE5table = internal unnamed_addr constant [2048 x i32] [i32 -4096, i32 -4100, i32 -4104, i32 -4108, i32 -4112, i32 -4116, i32 -4120, i32 -4124, i32 -4128, i32 -4132, i32 -4136, i32 -4140, i32 -4144, i32 -4148, i32 -4152, i32 -4156, i32 -4161, i32 -4165, i32 -4169, i32 -4173, i32 -4177, i32 -4181, i32 -4185, i32 -4190, i32 -4194, i32 -4198, i32 -4202, i32 -4206, i32 -4211, i32 -4215, i32 -4219, i32 -4223, i32 -4228, i32 -4232, i32 -4236, i32 -4240, i32 -4245, i32 -4249, i32 -4253, i32 -4258, i32 -4262, i32 -4266, i32 -4271, i32 -4275, i32 -4279, i32 -4284, i32 -4288, i32 -4293, i32 -4297, i32 -4301, i32 -4306, i32 -4310, i32 -4315, i32 -4319, i32 -4324, i32 -4328, i32 -4332, i32 -4337, i32 -4341, i32 -4346, i32 -4350, i32 -4355, i32 -4359, i32 -4364, i32 -4369, i32 -4373, i32 -4378, i32 -4382, i32 -4387, i32 -4391, i32 -4396, i32 -4401, i32 -4405, i32 -4410, i32 -4415, i32 -4419, i32 -4424, i32 -4429, i32 -4433, i32 -4438, i32 -4443, i32 -4447, i32 -4452, i32 -4457, i32 -4462, i32 -4466, i32 -4471, i32 -4476, i32 -4481, i32 -4485, i32 -4490, i32 -4495, i32 -4500, i32 -4505, i32 -4510, i32 -4514, i32 -4519, i32 -4524, i32 -4529, i32 -4534, i32 -4539, i32 -4544, i32 -4549, i32 -4554, i32 -4559, i32 -4563, i32 -4568, i32 -4573, i32 -4578, i32 -4583, i32 -4588, i32 -4593, i32 -4599, i32 -4604, i32 -4609, i32 -4614, i32 -4619, i32 -4624, i32 -4629, i32 -4634, i32 -4639, i32 -4644, i32 -4650, i32 -4655, i32 -4660, i32 -4665, i32 -4670, i32 -4675, i32 -4681, i32 -4686, i32 -4691, i32 -4696, i32 -4702, i32 -4707, i32 -4712, i32 -4718, i32 -4723, i32 -4728, i32 -4733, i32 -4739, i32 -4744, i32 -4750, i32 -4755, i32 -4760, i32 -4766, i32 -4771, i32 -4777, i32 -4782, i32 -4788, i32 -4793, i32 -4798, i32 -4804, i32 -4809, i32 -4815, i32 -4821, i32 -4826, i32 -4832, i32 -4837, i32 -4843, i32 -4848, i32 -4854, i32 -4860, i32 -4865, i32 -4871, i32 -4877, i32 -4882, i32 -4888, i32 -4894, i32 -4899, i32 -4905, i32 -4911, i32 -4917, i32 -4922, i32 -4928, i32 -4934, i32 -4940, i32 -4946, i32 -4951, i32 -4957, i32 -4963, i32 -4969, i32 -4975, i32 -4981, i32 -4987, i32 -4993, i32 -4999, i32 -5005, i32 -5011, i32 -5017, i32 -5023, i32 -5029, i32 -5035, i32 -5041, i32 -5047, i32 -5053, i32 -5059, i32 -5065, i32 -5071, i32 -5077, i32 -5084, i32 -5090, i32 -5096, i32 -5102, i32 -5108, i32 -5115, i32 -5121, i32 -5127, i32 -5133, i32 -5140, i32 -5146, i32 -5152, i32 -5159, i32 -5165, i32 -5171, i32 -5178, i32 -5184, i32 -5190, i32 -5197, i32 -5203, i32 -5210, i32 -5216, i32 -5223, i32 -5229, i32 -5236, i32 -5242, i32 -5249, i32 -5256, i32 -5262, i32 -5269, i32 -5275, i32 -5282, i32 -5289, i32 -5295, i32 -5302, i32 -5309, i32 -5315, i32 -5322, i32 -5329, i32 -5336, i32 -5343, i32 -5349, i32 -5356, i32 -5363, i32 -5370, i32 -5377, i32 -5384, i32 -5391, i32 -5398, i32 -5405, i32 -5412, i32 -5418, i32 -5426, i32 -5433, i32 -5440, i32 -5447, i32 -5454, i32 -5461, i32 -5468, i32 -5475, i32 -5482, i32 -5489, i32 -5497, i32 -5504, i32 -5511, i32 -5518, i32 -5526, i32 -5533, i32 -5540, i32 -5548, i32 -5555, i32 -5562, i32 -5570, i32 -5577, i32 -5584, i32 -5592, i32 -5599, i32 -5607, i32 -5614, i32 -5622, i32 -5629, i32 -5637, i32 -5645, i32 -5652, i32 -5660, i32 -5667, i32 -5675, i32 -5683, i32 -5691, i32 -5698, i32 -5706, i32 -5714, i32 -5722, i32 -5729, i32 -5737, i32 -5745, i32 -5753, i32 -5761, i32 -5769, i32 -5777, i32 -5785, i32 -5793, i32 -5801, i32 -5809, i32 -5817, i32 -5825, i32 -5833, i32 -5841, i32 -5849, i32 -5857, i32 -5866, i32 -5874, i32 -5882, i32 -5890, i32 -5899, i32 -5907, i32 -5915, i32 -5924, i32 -5932, i32 -5940, i32 -5949, i32 -5957, i32 -5966, i32 -5974, i32 -5983, i32 -5991, i32 -6000, i32 -6009, i32 -6017, i32 -6026, i32 -6034, i32 -6043, i32 -6052, i32 -6061, i32 -6069, i32 -6078, i32 -6087, i32 -6096, i32 -6105, i32 -6114, i32 -6123, i32 -6132, i32 -6141, i32 -6150, i32 -6159, i32 -6168, i32 -6177, i32 -6186, i32 -6195, i32 -6204, i32 -6213, i32 -6223, i32 -6232, i32 -6241, i32 -6250, i32 -6260, i32 -6269, i32 -6278, i32 -6288, i32 -6297, i32 -6307, i32 -6316, i32 -6326, i32 -6335, i32 -6345, i32 -6355, i32 -6364, i32 -6374, i32 -6384, i32 -6393, i32 -6403, i32 -6413, i32 -6423, i32 -6432, i32 -6442, i32 -6452, i32 -6462, i32 -6472, i32 -6482, i32 -6492, i32 -6502, i32 -6512, i32 -6523, i32 -6533, i32 -6543, i32 -6553, i32 -6563, i32 -6574, i32 -6584, i32 -6594, i32 -6605, i32 -6615, i32 -6626, i32 -6636, i32 -6647, i32 -6657, i32 -6668, i32 -6678, i32 -6689, i32 -6700, i32 -6710, i32 -6721, i32 -6732, i32 -6743, i32 -6754, i32 -6765, i32 -6775, i32 -6786, i32 -6797, i32 -6808, i32 -6820, i32 -6831, i32 -6842, i32 -6853, i32 -6864, i32 -6875, i32 -6887, i32 -6898, i32 -6909, i32 -6921, i32 -6932, i32 -6944, i32 -6955, i32 -6967, i32 -6978, i32 -6990, i32 -7002, i32 -7013, i32 -7025, i32 -7037, i32 -7049, i32 -7061, i32 -7073, i32 -7084, i32 -7096, i32 -7108, i32 -7121, i32 -7133, i32 -7145, i32 -7157, i32 -7169, i32 -7182, i32 -7194, i32 -7206, i32 -7219, i32 -7231, i32 -7244, i32 -7256, i32 -7269, i32 -7281, i32 -7294, i32 -7307, i32 -7319, i32 -7332, i32 -7345, i32 -7358, i32 -7371, i32 -7384, i32 -7397, i32 -7410, i32 -7423, i32 -7436, i32 -7449, i32 -7463, i32 -7476, i32 -7489, i32 -7503, i32 -7516, i32 -7530, i32 -7543, i32 -7557, i32 -7570, i32 -7584, i32 -7598, i32 -7612, i32 -7626, i32 -7639, i32 -7653, i32 -7667, i32 -7681, i32 -7695, i32 -7710, i32 -7724, i32 -7738, i32 -7752, i32 -7767, i32 -7781, i32 -7796, i32 -7810, i32 -7825, i32 -7839, i32 -7854, i32 -7869, i32 -7884, i32 -7898, i32 -7913, i32 -7928, i32 -7943, i32 -7958, i32 -7973, i32 -7989, i32 -8004, i32 -8019, i32 -8035, i32 -8050, i32 -8065, i32 -8081, i32 -8097, i32 -8112, i32 -8128, i32 -8144, i32 -8160, i32 -8176, i32 -8192, i32 -8208, i32 -8224, i32 -8240, i32 -8256, i32 -8272, i32 -8289, i32 -8305, i32 -8322, i32 -8338, i32 -8355, i32 -8371, i32 -8388, i32 -8405, i32 -8422, i32 -8439, i32 -8456, i32 -8473, i32 -8490, i32 -8507, i32 -8525, i32 -8542, i32 -8559, i32 -8577, i32 -8594, i32 -8612, i32 -8630, i32 -8648, i32 -8665, i32 -8683, i32 -8701, i32 -8719, i32 -8738, i32 -8756, i32 -8774, i32 -8793, i32 -8811, i32 -8830, i32 -8848, i32 -8867, i32 -8886, i32 -8905, i32 -8924, i32 -8943, i32 -8962, i32 -8981, i32 -9000, i32 -9020, i32 -9039, i32 -9058, i32 -9078, i32 -9098, i32 -9118, i32 -9137, i32 -9157, i32 -9177, i32 -9198, i32 -9218, i32 -9238, i32 -9258, i32 -9279, i32 -9300, i32 -9320, i32 -9341, i32 -9362, i32 -9383, i32 -9404, i32 -9425, i32 -9446, i32 -9467, i32 -9489, i32 -9510, i32 -9532, i32 -9554, i32 -9576, i32 -9597, i32 -9619, i32 -9642, i32 -9664, i32 -9686, i32 -9709, i32 -9731, i32 -9754, i32 -9776, i32 -9799, i32 -9822, i32 -9845, i32 -9868, i32 -9892, i32 -9915, i32 -9939, i32 -9962, i32 -9986, i32 -10010, i32 -10034, i32 -10058, i32 -10082, i32 -10106, i32 -10131, i32 -10155, i32 -10180, i32 -10205, i32 -10230, i32 -10255, i32 -10280, i32 -10305, i32 -10330, i32 -10356, i32 -10381, i32 -10407, i32 -10433, i32 -10459, i32 -10485, i32 -10512, i32 -10538, i32 -10564, i32 -10591, i32 -10618, i32 -10645, i32 -10672, i32 -10699, i32 -10727, i32 -10754, i32 -10782, i32 -10810, i32 -10837, i32 -10866, i32 -10894, i32 -10922, i32 -10951, i32 -10979, i32 -11008, i32 -11037, i32 -11066, i32 -11096, i32 -11125, i32 -11155, i32 -11184, i32 -11214, i32 -11244, i32 -11275, i32 -11305, i32 -11335, i32 -11366, i32 -11397, i32 -11428, i32 -11459, i32 -11491, i32 -11522, i32 -11554, i32 -11586, i32 -11618, i32 -11650, i32 -11683, i32 -11715, i32 -11748, i32 -11781, i32 -11814, i32 -11848, i32 -11881, i32 -11915, i32 -11949, i32 -11983, i32 -12018, i32 -12052, i32 -12087, i32 -12122, i32 -12157, i32 -12192, i32 -12228, i32 -12264, i32 -12300, i32 -12336, i32 -12372, i32 -12409, i32 -12446, i32 -12483, i32 -12520, i32 -12557, i32 -12595, i32 -12633, i32 -12671, i32 -12710, i32 -12748, i32 -12787, i32 -12826, i32 -12865, i32 -12905, i32 -12945, i32 -12985, i32 -13025, i32 -13066, i32 -13107, i32 -13148, i32 -13189, i32 -13231, i32 -13273, i32 -13315, i32 -13357, i32 -13400, i32 -13443, i32 -13486, i32 -13530, i32 -13573, i32 -13617, i32 -13662, i32 -13706, i32 -13751, i32 -13797, i32 -13842, i32 -13888, i32 -13934, i32 -13981, i32 -14027, i32 -14074, i32 -14122, i32 -14169, i32 -14217, i32 -14266, i32 -14315, i32 -14364, i32 -14413, i32 -14463, i32 -14513, i32 -14563, i32 -14614, i32 -14665, i32 -14716, i32 -14768, i32 -14820, i32 -14873, i32 -14926, i32 -14979, i32 -15033, i32 -15087, i32 -15141, i32 -15196, i32 -15252, i32 -15307, i32 -15363, i32 -15420, i32 -15477, i32 -15534, i32 -15592, i32 -15650, i32 -15709, i32 -15768, i32 -15827, i32 -15887, i32 -15947, i32 -16008, i32 -16070, i32 -16131, i32 -16194, i32 -16256, i32 -16320, i32 -16384, i32 -16448, i32 -16513, i32 -16578, i32 -16644, i32 -16710, i32 -16777, i32 -16844, i32 -16912, i32 -16980, i32 -17050, i32 -17119, i32 -17189, i32 -17260, i32 -17331, i32 -17403, i32 -17476, i32 -17549, i32 -17623, i32 -17697, i32 -17772, i32 -17848, i32 -17924, i32 -18001, i32 -18078, i32 -18157, i32 -18236, i32 -18315, i32 -18396, i32 -18477, i32 -18558, i32 -18641, i32 -18724, i32 -18808, i32 -18893, i32 -18978, i32 -19065, i32 -19152, i32 -19239, i32 -19328, i32 -19418, i32 -19508, i32 -19599, i32 -19691, i32 -19784, i32 -19878, i32 -19972, i32 -20068, i32 -20164, i32 -20262, i32 -20360, i32 -20460, i32 -20560, i32 -20661, i32 -20763, i32 -20867, i32 -20971, i32 -21076, i32 -21183, i32 -21290, i32 -21399, i32 -21509, i32 -21620, i32 -21732, i32 -21845, i32 -21959, i32 -22075, i32 -22192, i32 -22310, i32 -22429, i32 -22550, i32 -22671, i32 -22795, i32 -22919, i32 -23045, i32 -23172, i32 -23301, i32 -23431, i32 -23563, i32 -23696, i32 -23831, i32 -23967, i32 -24105, i32 -24244, i32 -24385, i32 -24528, i32 -24672, i32 -24818, i32 -24966, i32 -25115, i32 -25266, i32 -25420, i32 -25575, i32 -25731, i32 -25890, i32 -26051, i32 -26214, i32 -26379, i32 -26546, i32 -26715, i32 -26886, i32 -27060, i32 -27235, i32 -27413, i32 -27594, i32 -27776, i32 -27962, i32 -28149, i32 -28339, i32 -28532, i32 -28728, i32 -28926, i32 -29127, i32 -29330, i32 -29537, i32 -29746, i32 -29959, i32 -30174, i32 -30393, i32 -30615, i32 -30840, i32 -31068, i32 -31300, i32 -31536, i32 -31775, i32 -32017, i32 -32263, i32 -32513, i32 -32768, i32 -33026, i32 -33288, i32 -33554, i32 -33825, i32 -34100, i32 -34379, i32 -34663, i32 -34952, i32 -35246, i32 -35544, i32 -35848, i32 -36157, i32 -36472, i32 -36792, i32 -37117, i32 -37449, i32 -37786, i32 -38130, i32 -38479, i32 -38836, i32 -39199, i32 -39568, i32 -39945, i32 -40329, i32 -40721, i32 -41120, i32 -41527, i32 -41943, i32 -42366, i32 -42799, i32 -43240, i32 -43690, i32 -44150, i32 -44620, i32 -45100, i32 -45590, i32 -46091, i32 -46603, i32 -47127, i32 -47662, i32 -48210, i32 -48770, i32 -49344, i32 -49932, i32 -50533, i32 -51150, i32 -51781, i32 -52428, i32 -53092, i32 -53773, i32 -54471, i32 -55188, i32 -55924, i32 -56679, i32 -57456, i32 -58254, i32 -59074, i32 -59918, i32 -60787, i32 -61680, i32 -62601, i32 -63550, i32 -64527, i32 -65536, i32 -66576, i32 -67650, i32 -68759, i32 -69905, i32 -71089, i32 -72315, i32 -73584, i32 -74898, i32 -76260, i32 -77672, i32 -79137, i32 -80659, i32 -82241, i32 -83886, i32 -85598, i32 -87381, i32 -89240, i32 -91180, i32 -93206, i32 -95325, i32 -97541, i32 -99864, i32 -102300, i32 -104857, i32 -107546, i32 -110376, i32 -113359, i32 -116508, i32 -119837, i32 -123361, i32 -127100, i32 -131072, i32 -135300, i32 -139810, i32 -144631, i32 -149796, i32 -155344, i32 -161319, i32 -167772, i32 -174762, i32 -182361, i32 -190650, i32 -199728, i32 -209715, i32 -220752, i32 -233016, i32 -246723, i32 -262144, i32 -279620, i32 -299593, i32 -322638, i32 -349525, i32 -381300, i32 -419430, i32 -466033, i32 -524288, i32 -599186, i32 -699050, i32 -838860, i32 -1048576, i32 -1398101, i32 -2097152, i32 -4194304, i32 0, i32 4194304, i32 2097152, i32 1398101, i32 1048576, i32 838860, i32 699050, i32 599186, i32 524288, i32 466033, i32 419430, i32 381300, i32 349525, i32 322638, i32 299593, i32 279620, i32 262144, i32 246723, i32 233016, i32 220752, i32 209715, i32 199728, i32 190650, i32 182361, i32 174762, i32 167772, i32 161319, i32 155344, i32 149796, i32 144631, i32 139810, i32 135300, i32 131072, i32 127100, i32 123361, i32 119837, i32 116508, i32 113359, i32 110376, i32 107546, i32 104857, i32 102300, i32 99864, i32 97541, i32 95325, i32 93206, i32 91180, i32 89240, i32 87381, i32 85598, i32 83886, i32 82241, i32 80659, i32 79137, i32 77672, i32 76260, i32 74898, i32 73584, i32 72315, i32 71089, i32 69905, i32 68759, i32 67650, i32 66576, i32 65536, i32 64527, i32 63550, i32 62601, i32 61680, i32 60787, i32 59918, i32 59074, i32 58254, i32 57456, i32 56679, i32 55924, i32 55188, i32 54471, i32 53773, i32 53092, i32 52428, i32 51781, i32 51150, i32 50533, i32 49932, i32 49344, i32 48770, i32 48210, i32 47662, i32 47127, i32 46603, i32 46091, i32 45590, i32 45100, i32 44620, i32 44150, i32 43690, i32 43240, i32 42799, i32 42366, i32 41943, i32 41527, i32 41120, i32 40721, i32 40329, i32 39945, i32 39568, i32 39199, i32 38836, i32 38479, i32 38130, i32 37786, i32 37449, i32 37117, i32 36792, i32 36472, i32 36157, i32 35848, i32 35544, i32 35246, i32 34952, i32 34663, i32 34379, i32 34100, i32 33825, i32 33554, i32 33288, i32 33026, i32 32768, i32 32513, i32 32263, i32 32017, i32 31775, i32 31536, i32 31300, i32 31068, i32 30840, i32 30615, i32 30393, i32 30174, i32 29959, i32 29746, i32 29537, i32 29330, i32 29127, i32 28926, i32 28728, i32 28532, i32 28339, i32 28149, i32 27962, i32 27776, i32 27594, i32 27413, i32 27235, i32 27060, i32 26886, i32 26715, i32 26546, i32 26379, i32 26214, i32 26051, i32 25890, i32 25731, i32 25575, i32 25420, i32 25266, i32 25115, i32 24966, i32 24818, i32 24672, i32 24528, i32 24385, i32 24244, i32 24105, i32 23967, i32 23831, i32 23696, i32 23563, i32 23431, i32 23301, i32 23172, i32 23045, i32 22919, i32 22795, i32 22671, i32 22550, i32 22429, i32 22310, i32 22192, i32 22075, i32 21959, i32 21845, i32 21732, i32 21620, i32 21509, i32 21399, i32 21290, i32 21183, i32 21076, i32 20971, i32 20867, i32 20763, i32 20661, i32 20560, i32 20460, i32 20360, i32 20262, i32 20164, i32 20068, i32 19972, i32 19878, i32 19784, i32 19691, i32 19599, i32 19508, i32 19418, i32 19328, i32 19239, i32 19152, i32 19065, i32 18978, i32 18893, i32 18808, i32 18724, i32 18641, i32 18558, i32 18477, i32 18396, i32 18315, i32 18236, i32 18157, i32 18078, i32 18001, i32 17924, i32 17848, i32 17772, i32 17697, i32 17623, i32 17549, i32 17476, i32 17403, i32 17331, i32 17260, i32 17189, i32 17119, i32 17050, i32 16980, i32 16912, i32 16844, i32 16777, i32 16710, i32 16644, i32 16578, i32 16513, i32 16448, i32 16384, i32 16320, i32 16256, i32 16194, i32 16131, i32 16070, i32 16008, i32 15947, i32 15887, i32 15827, i32 15768, i32 15709, i32 15650, i32 15592, i32 15534, i32 15477, i32 15420, i32 15363, i32 15307, i32 15252, i32 15196, i32 15141, i32 15087, i32 15033, i32 14979, i32 14926, i32 14873, i32 14820, i32 14768, i32 14716, i32 14665, i32 14614, i32 14563, i32 14513, i32 14463, i32 14413, i32 14364, i32 14315, i32 14266, i32 14217, i32 14169, i32 14122, i32 14074, i32 14027, i32 13981, i32 13934, i32 13888, i32 13842, i32 13797, i32 13751, i32 13706, i32 13662, i32 13617, i32 13573, i32 13530, i32 13486, i32 13443, i32 13400, i32 13357, i32 13315, i32 13273, i32 13231, i32 13189, i32 13148, i32 13107, i32 13066, i32 13025, i32 12985, i32 12945, i32 12905, i32 12865, i32 12826, i32 12787, i32 12748, i32 12710, i32 12671, i32 12633, i32 12595, i32 12557, i32 12520, i32 12483, i32 12446, i32 12409, i32 12372, i32 12336, i32 12300, i32 12264, i32 12228, i32 12192, i32 12157, i32 12122, i32 12087, i32 12052, i32 12018, i32 11983, i32 11949, i32 11915, i32 11881, i32 11848, i32 11814, i32 11781, i32 11748, i32 11715, i32 11683, i32 11650, i32 11618, i32 11586, i32 11554, i32 11522, i32 11491, i32 11459, i32 11428, i32 11397, i32 11366, i32 11335, i32 11305, i32 11275, i32 11244, i32 11214, i32 11184, i32 11155, i32 11125, i32 11096, i32 11066, i32 11037, i32 11008, i32 10979, i32 10951, i32 10922, i32 10894, i32 10866, i32 10837, i32 10810, i32 10782, i32 10754, i32 10727, i32 10699, i32 10672, i32 10645, i32 10618, i32 10591, i32 10564, i32 10538, i32 10512, i32 10485, i32 10459, i32 10433, i32 10407, i32 10381, i32 10356, i32 10330, i32 10305, i32 10280, i32 10255, i32 10230, i32 10205, i32 10180, i32 10155, i32 10131, i32 10106, i32 10082, i32 10058, i32 10034, i32 10010, i32 9986, i32 9962, i32 9939, i32 9915, i32 9892, i32 9868, i32 9845, i32 9822, i32 9799, i32 9776, i32 9754, i32 9731, i32 9709, i32 9686, i32 9664, i32 9642, i32 9619, i32 9597, i32 9576, i32 9554, i32 9532, i32 9510, i32 9489, i32 9467, i32 9446, i32 9425, i32 9404, i32 9383, i32 9362, i32 9341, i32 9320, i32 9300, i32 9279, i32 9258, i32 9238, i32 9218, i32 9198, i32 9177, i32 9157, i32 9137, i32 9118, i32 9098, i32 9078, i32 9058, i32 9039, i32 9020, i32 9000, i32 8981, i32 8962, i32 8943, i32 8924, i32 8905, i32 8886, i32 8867, i32 8848, i32 8830, i32 8811, i32 8793, i32 8774, i32 8756, i32 8738, i32 8719, i32 8701, i32 8683, i32 8665, i32 8648, i32 8630, i32 8612, i32 8594, i32 8577, i32 8559, i32 8542, i32 8525, i32 8507, i32 8490, i32 8473, i32 8456, i32 8439, i32 8422, i32 8405, i32 8388, i32 8371, i32 8355, i32 8338, i32 8322, i32 8305, i32 8289, i32 8272, i32 8256, i32 8240, i32 8224, i32 8208, i32 8192, i32 8176, i32 8160, i32 8144, i32 8128, i32 8112, i32 8097, i32 8081, i32 8065, i32 8050, i32 8035, i32 8019, i32 8004, i32 7989, i32 7973, i32 7958, i32 7943, i32 7928, i32 7913, i32 7898, i32 7884, i32 7869, i32 7854, i32 7839, i32 7825, i32 7810, i32 7796, i32 7781, i32 7767, i32 7752, i32 7738, i32 7724, i32 7710, i32 7695, i32 7681, i32 7667, i32 7653, i32 7639, i32 7626, i32 7612, i32 7598, i32 7584, i32 7570, i32 7557, i32 7543, i32 7530, i32 7516, i32 7503, i32 7489, i32 7476, i32 7463, i32 7449, i32 7436, i32 7423, i32 7410, i32 7397, i32 7384, i32 7371, i32 7358, i32 7345, i32 7332, i32 7319, i32 7307, i32 7294, i32 7281, i32 7269, i32 7256, i32 7244, i32 7231, i32 7219, i32 7206, i32 7194, i32 7182, i32 7169, i32 7157, i32 7145, i32 7133, i32 7121, i32 7108, i32 7096, i32 7084, i32 7073, i32 7061, i32 7049, i32 7037, i32 7025, i32 7013, i32 7002, i32 6990, i32 6978, i32 6967, i32 6955, i32 6944, i32 6932, i32 6921, i32 6909, i32 6898, i32 6887, i32 6875, i32 6864, i32 6853, i32 6842, i32 6831, i32 6820, i32 6808, i32 6797, i32 6786, i32 6775, i32 6765, i32 6754, i32 6743, i32 6732, i32 6721, i32 6710, i32 6700, i32 6689, i32 6678, i32 6668, i32 6657, i32 6647, i32 6636, i32 6626, i32 6615, i32 6605, i32 6594, i32 6584, i32 6574, i32 6563, i32 6553, i32 6543, i32 6533, i32 6523, i32 6512, i32 6502, i32 6492, i32 6482, i32 6472, i32 6462, i32 6452, i32 6442, i32 6432, i32 6423, i32 6413, i32 6403, i32 6393, i32 6384, i32 6374, i32 6364, i32 6355, i32 6345, i32 6335, i32 6326, i32 6316, i32 6307, i32 6297, i32 6288, i32 6278, i32 6269, i32 6260, i32 6250, i32 6241, i32 6232, i32 6223, i32 6213, i32 6204, i32 6195, i32 6186, i32 6177, i32 6168, i32 6159, i32 6150, i32 6141, i32 6132, i32 6123, i32 6114, i32 6105, i32 6096, i32 6087, i32 6078, i32 6069, i32 6061, i32 6052, i32 6043, i32 6034, i32 6026, i32 6017, i32 6009, i32 6000, i32 5991, i32 5983, i32 5974, i32 5966, i32 5957, i32 5949, i32 5940, i32 5932, i32 5924, i32 5915, i32 5907, i32 5899, i32 5890, i32 5882, i32 5874, i32 5866, i32 5857, i32 5849, i32 5841, i32 5833, i32 5825, i32 5817, i32 5809, i32 5801, i32 5793, i32 5785, i32 5777, i32 5769, i32 5761, i32 5753, i32 5745, i32 5737, i32 5729, i32 5722, i32 5714, i32 5706, i32 5698, i32 5691, i32 5683, i32 5675, i32 5667, i32 5660, i32 5652, i32 5645, i32 5637, i32 5629, i32 5622, i32 5614, i32 5607, i32 5599, i32 5592, i32 5584, i32 5577, i32 5570, i32 5562, i32 5555, i32 5548, i32 5540, i32 5533, i32 5526, i32 5518, i32 5511, i32 5504, i32 5497, i32 5489, i32 5482, i32 5475, i32 5468, i32 5461, i32 5454, i32 5447, i32 5440, i32 5433, i32 5426, i32 5418, i32 5412, i32 5405, i32 5398, i32 5391, i32 5384, i32 5377, i32 5370, i32 5363, i32 5356, i32 5349, i32 5343, i32 5336, i32 5329, i32 5322, i32 5315, i32 5309, i32 5302, i32 5295, i32 5289, i32 5282, i32 5275, i32 5269, i32 5262, i32 5256, i32 5249, i32 5242, i32 5236, i32 5229, i32 5223, i32 5216, i32 5210, i32 5203, i32 5197, i32 5190, i32 5184, i32 5178, i32 5171, i32 5165, i32 5159, i32 5152, i32 5146, i32 5140, i32 5133, i32 5127, i32 5121, i32 5115, i32 5108, i32 5102, i32 5096, i32 5090, i32 5084, i32 5077, i32 5071, i32 5065, i32 5059, i32 5053, i32 5047, i32 5041, i32 5035, i32 5029, i32 5023, i32 5017, i32 5011, i32 5005, i32 4999, i32 4993, i32 4987, i32 4981, i32 4975, i32 4969, i32 4963, i32 4957, i32 4951, i32 4946, i32 4940, i32 4934, i32 4928, i32 4922, i32 4917, i32 4911, i32 4905, i32 4899, i32 4894, i32 4888, i32 4882, i32 4877, i32 4871, i32 4865, i32 4860, i32 4854, i32 4848, i32 4843, i32 4837, i32 4832, i32 4826, i32 4821, i32 4815, i32 4809, i32 4804, i32 4798, i32 4793, i32 4788, i32 4782, i32 4777, i32 4771, i32 4766, i32 4760, i32 4755, i32 4750, i32 4744, i32 4739, i32 4733, i32 4728, i32 4723, i32 4718, i32 4712, i32 4707, i32 4702, i32 4696, i32 4691, i32 4686, i32 4681, i32 4675, i32 4670, i32 4665, i32 4660, i32 4655, i32 4650, i32 4644, i32 4639, i32 4634, i32 4629, i32 4624, i32 4619, i32 4614, i32 4609, i32 4604, i32 4599, i32 4593, i32 4588, i32 4583, i32 4578, i32 4573, i32 4568, i32 4563, i32 4559, i32 4554, i32 4549, i32 4544, i32 4539, i32 4534, i32 4529, i32 4524, i32 4519, i32 4514, i32 4510, i32 4505, i32 4500, i32 4495, i32 4490, i32 4485, i32 4481, i32 4476, i32 4471, i32 4466, i32 4462, i32 4457, i32 4452, i32 4447, i32 4443, i32 4438, i32 4433, i32 4429, i32 4424, i32 4419, i32 4415, i32 4410, i32 4405, i32 4401, i32 4396, i32 4391, i32 4387, i32 4382, i32 4378, i32 4373, i32 4369, i32 4364, i32 4359, i32 4355, i32 4350, i32 4346, i32 4341, i32 4337, i32 4332, i32 4328, i32 4324, i32 4319, i32 4315, i32 4310, i32 4306, i32 4301, i32 4297, i32 4293, i32 4288, i32 4284, i32 4279, i32 4275, i32 4271, i32 4266, i32 4262, i32 4258, i32 4253, i32 4249, i32 4245, i32 4240, i32 4236, i32 4232, i32 4228, i32 4223, i32 4219, i32 4215, i32 4211, i32 4206, i32 4202, i32 4198, i32 4194, i32 4190, i32 4185, i32 4181, i32 4177, i32 4173, i32 4169, i32 4165, i32 4161, i32 4156, i32 4152, i32 4148, i32 4144, i32 4140, i32 4136, i32 4132, i32 4128, i32 4124, i32 4120, i32 4116, i32 4112, i32 4108, i32 4104, i32 4100], align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkAnalyticEdge7setLineERK7SkPointS2_(%struct.SkAnalyticEdge* nocapture, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %4, align 8
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, 4.000000e+00
  %8 = fmul float %7, 6.400000e+01
  %9 = fptosi float %8 to i32
  %10 = shl i32 %9, 10
  %11 = ashr exact i32 %10, 2
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = fmul float %13, 4.000000e+00
  %15 = fmul float %14, 6.400000e+01
  %16 = fptosi float %15 to i32
  %17 = shl i32 %16, 10
  %18 = ashr exact i32 %17, 2
  %19 = add nsw i32 %18, 8192
  %20 = and i32 %19, -16384
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fmul float %22, 4.000000e+00
  %24 = fmul float %23, 6.400000e+01
  %25 = fptosi float %24 to i32
  %26 = shl i32 %25, 10
  %27 = ashr exact i32 %26, 2
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, 4.000000e+00
  %31 = fmul float %30, 6.400000e+01
  %32 = fptosi float %31 to i32
  %33 = shl i32 %32, 10
  %34 = ashr exact i32 %33, 2
  %35 = add nsw i32 %34, 8192
  %36 = and i32 %35, -16384
  %37 = icmp sgt i32 %20, %36
  %38 = select i1 %37, i32 %27, i32 %11
  %39 = select i1 %37, i32 %36, i32 %20
  %40 = select i1 %37, i32 %20, i32 %36
  %41 = select i1 %37, i8 -1, i8 1
  %42 = sub nsw i32 %40, %39
  %43 = ashr exact i32 %42, 10
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %142, label %45

45:                                               ; preds = %3
  %46 = select i1 %37, i32 %11, i32 %27
  %47 = sub nsw i32 %46, %38
  %48 = ashr i32 %47, 10
  %49 = icmp slt i32 %48, 0
  %50 = sub nsw i32 0, %48
  %51 = select i1 %49, i32 %50, i32 %48
  %52 = icmp slt i32 %43, 0
  %53 = sub nsw i32 0, %43
  %54 = select i1 %52, i32 %53, i32 %43
  %55 = add nsw i32 %54, -8
  %56 = icmp ult i32 %55, 1016
  %57 = icmp slt i32 %51, 4096
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %66

59:                                               ; preds = %45
  %60 = add nsw i32 %43, 1024
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = mul nsw i32 %63, %48
  %65 = ashr i32 %64, 6
  br label %82

66:                                               ; preds = %45
  %67 = add nsw i32 %48, 32768
  %68 = icmp ult i32 %67, 65536
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = shl i32 %48, 16
  %71 = sdiv i32 %70, %43
  br label %82

72:                                               ; preds = %66
  %73 = sext i32 %48 to i64
  %74 = shl nsw i64 %73, 16
  %75 = sext i32 %43 to i64
  %76 = sdiv i64 %74, %75
  %77 = icmp slt i64 %76, 2147483647
  %78 = select i1 %77, i64 %76, i64 2147483647
  %79 = icmp sgt i64 %78, -2147483647
  %80 = select i1 %79, i64 %78, i64 -2147483647
  %81 = trunc i64 %80 to i32
  br label %82

82:                                               ; preds = %59, %69, %72
  %83 = phi i32 [ %65, %59 ], [ %71, %69 ], [ %81, %72 ]
  %84 = icmp slt i32 %83, 0
  %85 = sub nsw i32 0, %83
  %86 = select i1 %84, i32 %85, i32 %83
  %87 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 3
  store i32 %38, i32* %87, align 8
  %88 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 4
  store i32 %83, i32* %88, align 4
  %89 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 5
  store i32 %38, i32* %89, align 8
  %90 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 6
  store i32 %39, i32* %90, align 4
  %91 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 7
  store i32 %39, i32* %91, align 8
  %92 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 8
  store i32 %40, i32* %92, align 4
  %93 = icmp eq i32 %48, 0
  %94 = icmp eq i32 %83, 0
  %95 = or i1 %93, %94
  br i1 %95, label %136, label %96

96:                                               ; preds = %82
  %97 = icmp slt i32 %86, 1024
  br i1 %97, label %98, label %103

98:                                               ; preds = %96
  %99 = add nuw nsw i32 %86, 1024
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  br label %136

103:                                              ; preds = %96
  %104 = add nsw i32 %51, -8
  %105 = icmp ult i32 %104, 1016
  %106 = icmp slt i32 %54, 4096
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %115

108:                                              ; preds = %103
  %109 = add nsw i32 %48, 1024
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %112, %43
  %114 = ashr i32 %113, 6
  br label %131

115:                                              ; preds = %103
  %116 = add nsw i32 %43, 32768
  %117 = icmp ult i32 %116, 65536
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = shl i32 %42, 6
  %120 = sdiv i32 %119, %48
  br label %131

121:                                              ; preds = %115
  %122 = sext i32 %43 to i64
  %123 = shl nsw i64 %122, 16
  %124 = sext i32 %48 to i64
  %125 = sdiv i64 %123, %124
  %126 = icmp slt i64 %125, 2147483647
  %127 = select i1 %126, i64 %125, i64 2147483647
  %128 = icmp sgt i64 %127, -2147483647
  %129 = select i1 %128, i64 %127, i64 -2147483647
  %130 = trunc i64 %129 to i32
  br label %131

131:                                              ; preds = %108, %118, %121
  %132 = phi i32 [ %114, %108 ], [ %120, %118 ], [ %130, %121 ]
  %133 = icmp slt i32 %132, 0
  %134 = sub nsw i32 0, %132
  %135 = select i1 %133, i32 %134, i32 %132
  br label %136

136:                                              ; preds = %98, %131, %82
  %137 = phi i32 [ 2147483647, %82 ], [ %102, %98 ], [ %135, %131 ]
  %138 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 9
  store i32 %137, i32* %138, align 8
  %139 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 13
  store i8 0, i8* %139, align 8
  %140 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 16
  store i8 %41, i8* %140, align 1
  %141 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 14
  store i8 0, i8* %141, align 1
  br label %142

142:                                              ; preds = %3, %136
  %143 = phi i1 [ true, %136 ], [ false, %3 ]
  ret i1 %143
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkAnalyticEdge10updateLineEiiiii(%struct.SkAnalyticEdge* nocapture, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = icmp sgt i32 %2, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 16
  %10 = load i8, i8* %9, align 1
  %11 = sub i8 0, %10
  store i8 %11, i8* %9, align 1
  br label %12

12:                                               ; preds = %8, %6
  %13 = phi i32 [ %3, %8 ], [ %1, %6 ]
  %14 = phi i32 [ %4, %8 ], [ %2, %6 ]
  %15 = phi i32 [ %1, %8 ], [ %3, %6 ]
  %16 = phi i32 [ %2, %8 ], [ %4, %6 ]
  %17 = sub nsw i32 %15, %13
  %18 = ashr i32 %17, 10
  %19 = sub nsw i32 %16, %14
  %20 = ashr i32 %19, 10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %85, label %22

22:                                               ; preds = %12
  %23 = ashr i32 %5, 10
  %24 = icmp slt i32 %23, 0
  %25 = sub nsw i32 0, %23
  %26 = select i1 %24, i32 %25, i32 %23
  %27 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 3
  store i32 %13, i32* %27, align 8
  %28 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 4
  store i32 %5, i32* %28, align 4
  %29 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 5
  store i32 %13, i32* %29, align 8
  %30 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 6
  store i32 %14, i32* %30, align 4
  %31 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 7
  store i32 %14, i32* %31, align 8
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 8
  store i32 %16, i32* %32, align 4
  %33 = icmp eq i32 %18, 0
  %34 = icmp eq i32 %5, 0
  %35 = or i1 %34, %33
  br i1 %35, label %82, label %36

36:                                               ; preds = %22
  %37 = icmp slt i32 %26, 1024
  br i1 %37, label %38, label %43

38:                                               ; preds = %36
  %39 = add nuw nsw i32 %26, 1024
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  br label %82

43:                                               ; preds = %36
  %44 = icmp slt i32 %20, 0
  %45 = sub nsw i32 0, %20
  %46 = select i1 %44, i32 %45, i32 %20
  %47 = icmp slt i32 %18, 0
  %48 = sub nsw i32 0, %18
  %49 = select i1 %47, i32 %48, i32 %18
  %50 = add nsw i32 %49, -8
  %51 = icmp ult i32 %50, 1016
  %52 = icmp slt i32 %46, 4096
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %61

54:                                               ; preds = %43
  %55 = add nsw i32 %18, 1024
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = mul nsw i32 %58, %20
  %60 = ashr i32 %59, 6
  br label %77

61:                                               ; preds = %43
  %62 = add nsw i32 %20, 32768
  %63 = icmp ult i32 %62, 65536
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = shl i32 %20, 16
  %66 = sdiv i32 %65, %18
  br label %77

67:                                               ; preds = %61
  %68 = sext i32 %20 to i64
  %69 = shl nsw i64 %68, 16
  %70 = sext i32 %18 to i64
  %71 = sdiv i64 %69, %70
  %72 = icmp slt i64 %71, 2147483647
  %73 = select i1 %72, i64 %71, i64 2147483647
  %74 = icmp sgt i64 %73, -2147483647
  %75 = select i1 %74, i64 %73, i64 -2147483647
  %76 = trunc i64 %75 to i32
  br label %77

77:                                               ; preds = %54, %64, %67
  %78 = phi i32 [ %60, %54 ], [ %66, %64 ], [ %76, %67 ]
  %79 = icmp slt i32 %78, 0
  %80 = sub nsw i32 0, %78
  %81 = select i1 %79, i32 %80, i32 %78
  br label %82

82:                                               ; preds = %38, %77, %22
  %83 = phi i32 [ 2147483647, %22 ], [ %42, %38 ], [ %81, %77 ]
  %84 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 9
  store i32 %83, i32* %84, align 8
  br label %85

85:                                               ; preds = %12, %82
  %86 = phi i1 [ true, %82 ], [ false, %12 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 13
  %5 = load i8, i8* %4, align 8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %struct.SkAnalyticEdge* %0 to %struct.SkAnalyticCubicEdge*
  %9 = tail call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* %8, i1 zeroext %2)
  br label %15

10:                                               ; preds = %3
  %11 = icmp eq i8 %5, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = bitcast %struct.SkAnalyticEdge* %0 to %struct.SkAnalyticQuadraticEdge*
  %14 = tail call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* %13)
  br label %15

15:                                               ; preds = %10, %12, %7
  %16 = phi i1 [ %9, %7 ], [ %14, %12 ], [ false, %10 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 13
  %5 = load i8, i8* %4, align 8
  %6 = sext i8 %5 to i32
  %7 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 14
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 15
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 9
  %18 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 10
  %19 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 3
  %20 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 7
  %21 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 8
  %22 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 2
  %23 = bitcast i32* %19 to <4 x i32>*
  %24 = bitcast i32* %19 to <4 x i32>*
  br label %25

25:                                               ; preds = %91, %2
  %26 = phi i32 [ %6, %2 ], [ %67, %91 ]
  %27 = phi i32 [ %8, %2 ], [ %54, %91 ]
  %28 = phi i32 [ %10, %2 ], [ %58, %91 ]
  %29 = add nsw i32 %26, 1
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %50

31:                                               ; preds = %25
  %32 = load <4 x i32>, <4 x i32>* %23, align 8
  %33 = extractelement <4 x i32> %32, i32 0
  %34 = ashr i32 %33, %16
  %35 = add nsw i32 %34, %27
  %36 = extractelement <4 x i32> %32, i32 2
  %37 = ashr i32 %36, %13
  %38 = load i32, i32* %20, align 8
  %39 = extractelement <4 x i32> %32, i32 1
  %40 = ashr i32 %39, %16
  %41 = add nsw i32 %40, %28
  %42 = extractelement <4 x i32> %32, i32 3
  %43 = ashr i32 %42, %13
  %44 = load i32, i32* %21, align 4
  %45 = insertelement <4 x i32> undef, i32 %37, i32 0
  %46 = insertelement <4 x i32> %45, i32 %43, i32 1
  %47 = insertelement <4 x i32> %46, i32 %38, i32 2
  %48 = insertelement <4 x i32> %47, i32 %44, i32 3
  %49 = add nsw <4 x i32> %48, %32
  store <4 x i32> %49, <4 x i32>* %24, align 8
  br label %53

50:                                               ; preds = %25
  %51 = load i32, i32* %17, align 8
  %52 = load i32, i32* %18, align 4
  br label %53

53:                                               ; preds = %50, %31
  %54 = phi i32 [ %35, %31 ], [ %51, %50 ]
  %55 = phi i32 [ %41, %31 ], [ %52, %50 ]
  %56 = icmp slt i32 %55, %28
  %57 = and i1 %56, %1
  %58 = select i1 %57, i32 %28, i32 %55
  %59 = add i32 %58, 8192
  %60 = and i32 %59, -16384
  br i1 %1, label %61, label %66

61:                                               ; preds = %53
  %62 = load i32, i32* %18, align 4
  %63 = icmp slt i32 %62, %60
  %64 = select i1 %63, i32 0, i32 %29
  %65 = select i1 %63, i32 %62, i32 %60
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i32 [ %29, %53 ], [ %64, %61 ]
  %68 = phi i32 [ %60, %53 ], [ %65, %61 ]
  %69 = load i32, i32* %22, align 8
  %70 = sub nsw i32 %68, %69
  %71 = ashr i32 %70, 10
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %91, label %73

73:                                               ; preds = %66
  %74 = sub nsw i32 %54, %27
  %75 = ashr i32 %74, 10
  %76 = add nsw i32 %75, 32768
  %77 = icmp ult i32 %76, 65536
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = shl i32 %75, 16
  %80 = sdiv i32 %79, %71
  br label %91

81:                                               ; preds = %73
  %82 = sext i32 %75 to i64
  %83 = shl nsw i64 %82, 16
  %84 = sext i32 %71 to i64
  %85 = sdiv i64 %83, %84
  %86 = icmp slt i64 %85, 2147483647
  %87 = select i1 %86, i64 %85, i64 2147483647
  %88 = icmp sgt i64 %87, -2147483647
  %89 = select i1 %88, i64 %87, i64 -2147483647
  %90 = trunc i64 %89 to i32
  br label %91

91:                                               ; preds = %81, %78, %66
  %92 = phi i32 [ 2147483647, %66 ], [ %80, %78 ], [ %90, %81 ]
  %93 = tail call zeroext i1 @_ZN14SkAnalyticEdge10updateLineEiiiii(%struct.SkAnalyticEdge* %3, i32 %27, i32 %69, i32 %54, i32 %68, i32 %92)
  store i32 %68, i32* %22, align 8
  %94 = icmp sgt i32 %67, -1
  %95 = or i1 %94, %93
  br i1 %95, label %96, label %25

96:                                               ; preds = %91
  store i32 %54, i32* %7, align 8
  store i32 %58, i32* %9, align 4
  %97 = trunc i32 %67 to i8
  store i8 %97, i8* %4, align 8
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0
  %3 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0, i32 13
  %4 = load i8, i8* %3, align 8
  %5 = sext i8 %4 to i32
  %6 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0, i32 14
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 7
  %18 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 8
  %19 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 3
  %20 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 2
  %21 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 5
  %22 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 6
  br label %23

23:                                               ; preds = %220, %1
  %24 = phi i32 [ %5, %1 ], [ %29, %220 ]
  %25 = phi i32 [ %7, %1 ], [ %224, %220 ]
  %26 = phi i32 [ %9, %1 ], [ %223, %220 ]
  %27 = phi i32 [ %11, %1 ], [ %226, %220 ]
  %28 = phi i32 [ %13, %1 ], [ %225, %220 ]
  %29 = add nsw i32 %24, -1
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %152

31:                                               ; preds = %23
  %32 = ashr i32 %27, %16
  %33 = add nsw i32 %32, %25
  %34 = ashr i32 %28, %16
  %35 = add nsw i32 %34, %26
  %36 = icmp slt i32 %34, 0
  %37 = sub nsw i32 0, %34
  %38 = select i1 %36, i32 %37, i32 %34
  %39 = icmp sgt i32 %38, 131071
  br i1 %39, label %40, label %96

40:                                               ; preds = %31
  %41 = load i32, i32* %19, align 4
  %42 = sub nsw i32 %35, %41
  %43 = ashr i32 %42, 10
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %82, label %45

45:                                               ; preds = %40
  %46 = load i32, i32* %20, align 8
  %47 = sub nsw i32 %33, %46
  %48 = ashr i32 %47, 10
  %49 = icmp slt i32 %48, 0
  %50 = sub nsw i32 0, %48
  %51 = select i1 %49, i32 %50, i32 %48
  %52 = icmp slt i32 %43, 0
  %53 = sub nsw i32 0, %43
  %54 = select i1 %52, i32 %53, i32 %43
  %55 = add nsw i32 %54, -8
  %56 = icmp ult i32 %55, 1016
  %57 = icmp slt i32 %51, 4096
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %66

59:                                               ; preds = %45
  %60 = add nsw i32 %43, 1024
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = mul nsw i32 %63, %48
  %65 = ashr i32 %64, 6
  br label %82

66:                                               ; preds = %45
  %67 = add nsw i32 %48, 32768
  %68 = icmp ult i32 %67, 65536
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = shl i32 %48, 16
  %71 = sdiv i32 %70, %43
  br label %82

72:                                               ; preds = %66
  %73 = sext i32 %48 to i64
  %74 = shl nsw i64 %73, 16
  %75 = sext i32 %43 to i64
  %76 = sdiv i64 %74, %75
  %77 = icmp slt i64 %76, 2147483647
  %78 = select i1 %77, i64 %76, i64 2147483647
  %79 = icmp sgt i64 %78, -2147483647
  %80 = select i1 %79, i64 %78, i64 -2147483647
  %81 = trunc i64 %80 to i32
  br label %82

82:                                               ; preds = %72, %69, %59, %40
  %83 = phi i32 [ 2147483647, %40 ], [ %65, %59 ], [ %71, %69 ], [ %81, %72 ]
  %84 = add nsw i32 %35, 32768
  %85 = and i32 %84, -65536
  %86 = load i32, i32* %18, align 4
  %87 = icmp slt i32 %85, %86
  %88 = select i1 %87, i32 %85, i32 %86
  %89 = sub nsw i32 %35, %88
  %90 = sext i32 %83 to i64
  %91 = sext i32 %89 to i64
  %92 = mul nsw i64 %91, %90
  %93 = lshr i64 %92, 16
  %94 = trunc i64 %93 to i32
  %95 = sub nsw i32 %33, %94
  br label %143

96:                                               ; preds = %31
  %97 = add i32 %35, 8192
  %98 = and i32 %97, -16384
  %99 = load i32, i32* %18, align 4
  %100 = icmp slt i32 %98, %99
  %101 = select i1 %100, i32 %98, i32 %99
  %102 = load i32, i32* %19, align 4
  %103 = sub nsw i32 %101, %102
  %104 = ashr i32 %103, 10
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %143, label %106

106:                                              ; preds = %96
  %107 = load i32, i32* %20, align 8
  %108 = sub nsw i32 %33, %107
  %109 = ashr i32 %108, 10
  %110 = icmp slt i32 %109, 0
  %111 = sub nsw i32 0, %109
  %112 = select i1 %110, i32 %111, i32 %109
  %113 = icmp slt i32 %104, 0
  %114 = sub nsw i32 0, %104
  %115 = select i1 %113, i32 %114, i32 %104
  %116 = add nsw i32 %115, -8
  %117 = icmp ult i32 %116, 1016
  %118 = icmp slt i32 %112, 4096
  %119 = and i1 %117, %118
  br i1 %119, label %120, label %127

120:                                              ; preds = %106
  %121 = add nsw i32 %104, 1024
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = mul nsw i32 %124, %109
  %126 = ashr i32 %125, 6
  br label %143

127:                                              ; preds = %106
  %128 = add nsw i32 %109, 32768
  %129 = icmp ult i32 %128, 65536
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = shl i32 %109, 16
  %132 = sdiv i32 %131, %104
  br label %143

133:                                              ; preds = %127
  %134 = sext i32 %109 to i64
  %135 = shl nsw i64 %134, 16
  %136 = sext i32 %104 to i64
  %137 = sdiv i64 %135, %136
  %138 = icmp slt i64 %137, 2147483647
  %139 = select i1 %138, i64 %137, i64 2147483647
  %140 = icmp sgt i64 %139, -2147483647
  %141 = select i1 %140, i64 %139, i64 -2147483647
  %142 = trunc i64 %141 to i32
  br label %143

143:                                              ; preds = %133, %130, %120, %96, %82
  %144 = phi i32 [ %41, %82 ], [ %102, %96 ], [ %102, %120 ], [ %102, %130 ], [ %102, %133 ]
  %145 = phi i32 [ %95, %82 ], [ %33, %96 ], [ %33, %120 ], [ %33, %130 ], [ %33, %133 ]
  %146 = phi i32 [ %88, %82 ], [ %101, %96 ], [ %101, %120 ], [ %101, %130 ], [ %101, %133 ]
  %147 = phi i32 [ %83, %82 ], [ 2147483647, %96 ], [ %126, %120 ], [ %132, %130 ], [ %142, %133 ]
  %148 = load i32, i32* %21, align 8
  %149 = add nsw i32 %148, %27
  %150 = load i32, i32* %22, align 4
  %151 = add nsw i32 %150, %28
  br label %196

152:                                              ; preds = %23
  %153 = load i32, i32* %17, align 8
  %154 = load i32, i32* %18, align 4
  %155 = load i32, i32* %19, align 4
  %156 = sub nsw i32 %154, %155
  %157 = ashr i32 %156, 10
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %230, label %159

159:                                              ; preds = %152
  %160 = load i32, i32* %20, align 8
  %161 = sub nsw i32 %153, %160
  %162 = ashr i32 %161, 10
  %163 = icmp slt i32 %162, 0
  %164 = sub nsw i32 0, %162
  %165 = select i1 %163, i32 %164, i32 %162
  %166 = icmp slt i32 %157, 0
  %167 = sub nsw i32 0, %157
  %168 = select i1 %166, i32 %167, i32 %157
  %169 = add nsw i32 %168, -8
  %170 = icmp ult i32 %169, 1016
  %171 = icmp slt i32 %165, 4096
  %172 = and i1 %170, %171
  br i1 %172, label %173, label %180

173:                                              ; preds = %159
  %174 = add nsw i32 %157, 1024
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [2048 x i32], [2048 x i32]* @_ZZL13quick_inverseiE5table, i64 0, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = mul nsw i32 %177, %162
  %179 = ashr i32 %178, 6
  br label %208

180:                                              ; preds = %159
  %181 = add nsw i32 %162, 32768
  %182 = icmp ult i32 %181, 65536
  br i1 %182, label %183, label %186

183:                                              ; preds = %180
  %184 = shl i32 %162, 16
  %185 = sdiv i32 %184, %157
  br label %196

186:                                              ; preds = %180
  %187 = sext i32 %162 to i64
  %188 = shl nsw i64 %187, 16
  %189 = sext i32 %157 to i64
  %190 = sdiv i64 %188, %189
  %191 = icmp slt i64 %190, 2147483647
  %192 = select i1 %191, i64 %190, i64 2147483647
  %193 = icmp sgt i64 %192, -2147483647
  %194 = select i1 %193, i64 %192, i64 -2147483647
  %195 = trunc i64 %194 to i32
  br label %196

196:                                              ; preds = %186, %183, %143
  %197 = phi i32 [ %144, %143 ], [ %155, %183 ], [ %155, %186 ]
  %198 = phi i32 [ %149, %143 ], [ %27, %183 ], [ %27, %186 ]
  %199 = phi i32 [ %151, %143 ], [ %28, %183 ], [ %28, %186 ]
  %200 = phi i32 [ %33, %143 ], [ %153, %183 ], [ %153, %186 ]
  %201 = phi i32 [ %35, %143 ], [ %154, %183 ], [ %154, %186 ]
  %202 = phi i32 [ %145, %143 ], [ %153, %183 ], [ %153, %186 ]
  %203 = phi i32 [ %146, %143 ], [ %154, %183 ], [ %154, %186 ]
  %204 = phi i32 [ %147, %143 ], [ %185, %183 ], [ %195, %186 ]
  %205 = icmp eq i32 %204, 2147483647
  br i1 %205, label %220, label %206

206:                                              ; preds = %196
  %207 = load i32, i32* %20, align 8
  br label %208

208:                                              ; preds = %206, %173
  %209 = phi i32 [ %155, %173 ], [ %197, %206 ]
  %210 = phi i32 [ %160, %173 ], [ %207, %206 ]
  %211 = phi i32 [ %179, %173 ], [ %204, %206 ]
  %212 = phi i32 [ %154, %173 ], [ %203, %206 ]
  %213 = phi i32 [ %153, %173 ], [ %202, %206 ]
  %214 = phi i32 [ %154, %173 ], [ %201, %206 ]
  %215 = phi i32 [ %153, %173 ], [ %200, %206 ]
  %216 = phi i32 [ %28, %173 ], [ %199, %206 ]
  %217 = phi i32 [ %27, %173 ], [ %198, %206 ]
  %218 = tail call zeroext i1 @_ZN14SkAnalyticEdge10updateLineEiiiii(%struct.SkAnalyticEdge* %2, i32 %210, i32 %209, i32 %213, i32 %212, i32 %211)
  %219 = zext i1 %218 to i32
  br label %220

220:                                              ; preds = %196, %208
  %221 = phi i32 [ %212, %208 ], [ %203, %196 ]
  %222 = phi i32 [ %213, %208 ], [ %202, %196 ]
  %223 = phi i32 [ %214, %208 ], [ %201, %196 ]
  %224 = phi i32 [ %215, %208 ], [ %200, %196 ]
  %225 = phi i32 [ %216, %208 ], [ %199, %196 ]
  %226 = phi i32 [ %217, %208 ], [ %198, %196 ]
  %227 = phi i32 [ %219, %208 ], [ 0, %196 ]
  %228 = icmp eq i32 %227, 0
  %229 = and i1 %30, %228
  br i1 %229, label %23, label %230

230:                                              ; preds = %152, %220
  %231 = phi i32 [ %227, %220 ], [ 0, %152 ]
  %232 = phi i32 [ %226, %220 ], [ %27, %152 ]
  %233 = phi i32 [ %225, %220 ], [ %28, %152 ]
  %234 = phi i32 [ %224, %220 ], [ %153, %152 ]
  %235 = phi i32 [ %223, %220 ], [ %154, %152 ]
  %236 = phi i32 [ %222, %220 ], [ %153, %152 ]
  %237 = phi i32 [ %221, %220 ], [ %154, %152 ]
  store i32 %234, i32* %6, align 8
  store i32 %235, i32* %8, align 4
  store i32 %232, i32* %10, align 8
  store i32 %233, i32* %12, align 4
  store i32 %236, i32* %20, align 8
  store i32 %237, i32* %19, align 4
  %238 = trunc i32 %29 to i8
  store i8 %238, i8* %3, align 8
  %239 = icmp ne i32 %231, 0
  ret i1 %239
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23SkAnalyticQuadraticEdge12setQuadraticEPK7SkPoint(%struct.SkAnalyticQuadraticEdge*, %struct.SkPoint*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %3, align 8
  %4 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN15SkQuadraticEdge25setQuadraticWithoutUpdateEPK7SkPointi(%struct.SkQuadraticEdge* %4, %struct.SkPoint* %1, i32 2) #3
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = ashr i32 %8, 2
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = ashr i32 %11, 2
  %13 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 3
  %14 = bitcast i32* %13 to <4 x i32>*
  %15 = load <4 x i32>, <4 x i32>* %14, align 8
  %16 = ashr <4 x i32> %15, <i32 2, i32 2, i32 2, i32 2>
  %17 = bitcast i32* %13 to <4 x i32>*
  store <4 x i32> %16, <4 x i32>* %17, align 8
  %18 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 7
  %19 = load i32, i32* %18, align 8
  %20 = ashr i32 %19, 2
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = ashr i32 %22, 2
  %24 = add nsw i32 %12, 8192
  %25 = and i32 %24, -16384
  store i32 %25, i32* %10, align 4
  %26 = add nsw i32 %23, 8192
  %27 = and i32 %26, -16384
  store i32 %27, i32* %21, align 4
  %28 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 0, i32 9
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0, i32 16
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 0, i32 6
  %32 = load i8, i8* %31, align 8
  %33 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0, i32 13
  store i8 %32, i8* %33, align 8
  %34 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 1, i32 0, i32 7
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 0, i32 14
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 2
  store i32 %9, i32* %37, align 8
  %38 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %0, i64 0, i32 3
  store i32 %25, i32* %38, align 4
  %39 = tail call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* %0)
  br label %40

40:                                               ; preds = %2, %6
  %41 = phi i1 [ %39, %6 ], [ false, %2 ]
  ret i1 %41
}

declare zeroext i1 @_ZN15SkQuadraticEdge25setQuadraticWithoutUpdateEPK7SkPointi(%struct.SkQuadraticEdge*, %struct.SkPoint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19SkAnalyticCubicEdge8setCubicEPK7SkPointb(%struct.SkAnalyticCubicEdge*, %struct.SkPoint*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %4, align 8
  %5 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZN11SkCubicEdge21setCubicWithoutUpdateEPK7SkPointib(%struct.SkCubicEdge* %5, %struct.SkPoint* %1, i32 2, i1 zeroext %2) #3
  br i1 %6, label %7, label %49

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = ashr i32 %9, 2
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = ashr i32 %12, 2
  %14 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 3
  %15 = bitcast i32* %14 to <4 x i32>*
  %16 = load <4 x i32>, <4 x i32>* %15, align 8
  %17 = ashr <4 x i32> %16, <i32 2, i32 2, i32 2, i32 2>
  %18 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %18, align 8
  %19 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = ashr i32 %20, 2
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = ashr i32 %23, 2
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 9
  %26 = load i32, i32* %25, align 8
  %27 = ashr i32 %26, 2
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 10
  %29 = load i32, i32* %28, align 4
  %30 = ashr i32 %29, 2
  %31 = add nsw i32 %13, 8192
  %32 = and i32 %31, -16384
  store i32 %32, i32* %11, align 4
  %33 = add nsw i32 %30, 8192
  %34 = and i32 %33, -16384
  store i32 %34, i32* %28, align 4
  %35 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 0, i32 9
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 16
  store i8 %36, i8* %37, align 1
  %38 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 0, i32 6
  %39 = load i8, i8* %38, align 8
  %40 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 13
  store i8 %39, i8* %40, align 8
  %41 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 0, i32 7
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 14
  store i8 %42, i8* %43, align 1
  %44 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 1, i32 0, i32 8
  %45 = load i8, i8* %44, align 2
  %46 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 0, i32 15
  store i8 %45, i8* %46, align 2
  %47 = getelementptr inbounds %struct.SkAnalyticCubicEdge, %struct.SkAnalyticCubicEdge* %0, i64 0, i32 2
  store i32 %32, i32* %47, align 8
  %48 = tail call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* %0, i1 zeroext %2)
  br label %49

49:                                               ; preds = %3, %7
  %50 = phi i1 [ %48, %7 ], [ false, %3 ]
  ret i1 %50
}

declare zeroext i1 @_ZN11SkCubicEdge21setCubicWithoutUpdateEPK7SkPointib(%struct.SkCubicEdge*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
