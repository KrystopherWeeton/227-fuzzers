; ModuleID = '../../v8/src/objects/lookup.cc'
source_filename = "../../v8/src/objects/lookup.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.865", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.878", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.888", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.899", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.974", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1020"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1027", i32, i8, i8, i32, i32, %"class.std::__1::vector.1033", %"class.std::__1::vector.1033", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1040", i64, %"class.std::__1::unordered_map.1041", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1097", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1135", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1169", %"class.std::__1::vector.1173", %"class.std::__1::vector.1173", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.738", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.762", %"class.v8::internal::Handle.774", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.757" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.740", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.752", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.740" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.748" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.743" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.741", %union.anon.742 }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%union.anon.742 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::Optional.752" = type { %"class.v8::base::internal::OptionalBase.753" }
%"class.v8::base::internal::OptionalBase.753" = type { %"struct.v8::base::internal::OptionalStorage.754" }
%"struct.v8::base::internal::OptionalStorage.754" = type { %"struct.v8::base::internal::OptionalStorageBase.755" }
%"struct.v8::base::internal::OptionalStorageBase.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { i8 }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.762" = type { %"class.std::__1::__deque_base.763" }
%"class.std::__1::__deque_base.763" = type { %"struct.std::__1::__split_buffer.764", i64, %"class.std::__1::__compressed_pair.770" }
%"struct.std::__1::__split_buffer.764" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.765" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Handle.774" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.777" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.794", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.800", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.800", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.800" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.788", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::vector.808", %"class.std::__1::unique_ptr.815", %"class.std::__1::vector.822", %"class.std::__1::unique_ptr.829", i64, %"class.std::__1::vector.835", %"class.std::__1::vector.843", %"class.std::__1::vector.851", i8, i8, i32 }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::GlobalHandles::NodeSpace.818"* }
%"class.v8::internal::GlobalHandles::NodeSpace.818" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.std::__1::pair.837"*, %"struct.std::__1::pair.837"*, %"class.std::__1::__compressed_pair.838" }
%"struct.std::__1::pair.837" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::pair.837"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.std::__1::pair.845"*, %"struct.std::__1::pair.845"*, %"class.std::__1::__compressed_pair.846" }
%"struct.std::__1::pair.845" = type opaque
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::pair.845"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.853" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.858", %"class.std::__1::vector.865" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i64**, i64**, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.872" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.878" = type { %"struct.std::__1::__atomic_base.879" }
%"struct.std::__1::__atomic_base.879" = type { %"struct.std::__1::__cxx_atomic_impl.880" }
%"struct.std::__1::__cxx_atomic_impl.880" = type { %"struct.std::__1::__cxx_atomic_base_impl.881" }
%"struct.std::__1::__cxx_atomic_base_impl.881" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.888" = type { %"struct.std::__1::__atomic_base.889" }
%"struct.std::__1::__atomic_base.889" = type { %"struct.std::__1::__cxx_atomic_impl.890" }
%"struct.std::__1::__cxx_atomic_impl.890" = type { %"struct.std::__1::__cxx_atomic_base_impl.891" }
%"struct.std::__1::__cxx_atomic_base_impl.891" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.895 }
%union.anon.895 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.899" = type { %"class.std::__1::__hash_table.900" }
%"class.std::__1::__hash_table.900" = type <{ %"class.std::__1::unique_ptr.901", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.919", [4 x i8] }>
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903", %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.904"** }
%"struct.std::__1::__hash_node_base.904" = type { %"struct.std::__1::__hash_node_base.904"* }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.std::__1::__bucket_list_deallocator.906" }
%"class.std::__1::__bucket_list_deallocator.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"struct.std::__1::__hash_node_base.904" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::Handle.931", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.932", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.931" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.953", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.959", %"class.std::__1::vector.965", %"struct.std::__1::pair.973" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"class.std::__1::unique_ptr.941"*, %"class.std::__1::unique_ptr.941"*, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::unique_ptr.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.std::__1::unique_ptr.941"* }
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"struct.std::__1::pair.973" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.977", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.977" = type { %"class.std::__1::__hash_table.978" }
%"class.std::__1::__hash_table.978" = type <{ %"class.std::__1::unique_ptr.979", %"class.std::__1::__compressed_pair.989", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.998", [4 x i8] }>
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981", %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.982"** }
%"struct.std::__1::__hash_node_base.982" = type { %"struct.std::__1::__hash_node_base.982"* }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.std::__1::__bucket_list_deallocator.984" }
%"class.std::__1::__bucket_list_deallocator.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.982" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1006" }
%"class.std::__1::deque.1006" = type { %"class.std::__1::__deque_base.1007" }
%"class.std::__1::__deque_base.1007" = type { %"struct.std::__1::__split_buffer.1008", i64, %"class.std::__1::__compressed_pair.1015" }
%"struct.std::__1::__split_buffer.1008" = type { %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"class.std::__1::__compressed_pair.1010" }
%"struct.std::__1::pair.1009" = type opaque
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"struct.std::__1::pair.1009"** }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"class.v8::internal::Handle.741"*, %"class.v8::internal::Handle.741"*, %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.v8::internal::Handle.741"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.883", i32, %"class.v8::Local.0" }
%"class.v8::Local.883" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.858", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1033" = type { %"class.std::__1::__vector_base.1034" }
%"class.std::__1::__vector_base.1034" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1040" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1041" = type { %"class.std::__1::__hash_table.1042" }
%"class.std::__1::__hash_table.1042" = type <{ %"class.std::__1::unique_ptr.1043", %"class.std::__1::__compressed_pair.1053", %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1061", [4 x i8] }>
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045", %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"struct.std::__1::__hash_node_base.1046"** }
%"struct.std::__1::__hash_node_base.1046" = type { %"struct.std::__1::__hash_node_base.1046"* }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.std::__1::__bucket_list_deallocator.1048" }
%"class.std::__1::__bucket_list_deallocator.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"struct.std::__1::__hash_node_base.1046" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1065", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1094", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1095", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1065" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1090, %union.anon.1092, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1090 = type { i64 }
%union.anon.1092 = type { i64 }
%"class.std::__1::weak_ptr.1094" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1095" = type { %"class.v8::PersistentBase.1096" }
%"class.v8::PersistentBase.1096" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1066", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1066" = type { %"class.std::__1::__hash_table.1067" }
%"class.std::__1::__hash_table.1067" = type <{ %"class.std::__1::unique_ptr.1068", %"class.std::__1::__compressed_pair.1078", %"class.std::__1::__compressed_pair.1083", %"class.std::__1::__compressed_pair.1086", [4 x i8] }>
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070", %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::__hash_node_base.1071"** }
%"struct.std::__1::__hash_node_base.1071" = type { %"struct.std::__1::__hash_node_base.1071"* }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.std::__1::__bucket_list_deallocator.1073" }
%"class.std::__1::__bucket_list_deallocator.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::__hash_node_base.1071" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1126", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1102", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1106", %"class.std::__1::unique_ptr.1112", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1118", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1102" = type { %"struct.std::__1::__atomic_base.1103" }
%"struct.std::__1::__atomic_base.1103" = type { %"struct.std::__1::__cxx_atomic_impl.1104" }
%"struct.std::__1::__cxx_atomic_impl.1104" = type { %"struct.std::__1::__cxx_atomic_base_impl.1105" }
%"struct.std::__1::__cxx_atomic_base_impl.1105" = type { i32 }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.858" }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1118" = type { %"class.std::__1::__vector_base.1119" }
%"class.std::__1::__vector_base.1119" = type { %"struct.std::__1::pair.1120"*, %"struct.std::__1::pair.1120"*, %"class.std::__1::__compressed_pair.1121" }
%"struct.std::__1::pair.1120" = type opaque
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.std::__1::pair.1120"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.884", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.884" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1143" }
%"class.std::__1::unordered_map.1143" = type { %"class.std::__1::__hash_table.1144" }
%"class.std::__1::__hash_table.1144" = type <{ %"class.std::__1::unique_ptr.1145", %"class.std::__1::__compressed_pair.1155", %"class.std::__1::__compressed_pair.1160", %"class.std::__1::__compressed_pair.1163", [4 x i8] }>
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147", %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"struct.std::__1::__hash_node_base.1148"** }
%"struct.std::__1::__hash_node_base.1148" = type { %"struct.std::__1::__hash_node_base.1148"* }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.std::__1::__bucket_list_deallocator.1150" }
%"class.std::__1::__bucket_list_deallocator.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::__hash_node_base.1148" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1169" = type { %"struct.std::__1::__atomic_base.1170" }
%"struct.std::__1::__atomic_base.1170" = type { %"struct.std::__1::__cxx_atomic_impl.1171" }
%"struct.std::__1::__cxx_atomic_impl.1171" = type { %"struct.std::__1::__cxx_atomic_base_impl.1172" }
%"struct.std::__1::__cxx_atomic_base_impl.1172" = type { %"class.std::__1::vector.1173"* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1175" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::atomic.1244" = type { %"struct.std::__1::__atomic_base.1245" }
%"struct.std::__1::__atomic_base.1245" = type { %"struct.std::__1::__atomic_base.1246" }
%"struct.std::__1::__atomic_base.1246" = type { %"struct.std::__1::__cxx_atomic_impl.1247" }
%"struct.std::__1::__cxx_atomic_impl.1247" = type { %"struct.std::__1::__cxx_atomic_base_impl.1248" }
%"struct.std::__1::__cxx_atomic_base_impl.1248" = type { i32 }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1180", i64 }
%"class.v8::internal::Handle.1180" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1180", %"class.v8::internal::Handle.1181", %"class.v8::internal::Handle.1181", %"class.v8::internal::Handle.1182", %"class.v8::internal::Handle.1181", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1182" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1181" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef" = type { %"class.v8::internal::NameDictionary" }
%"class.v8::internal::NameDictionary" = type { %"class.v8::internal::BaseNameDictionary.1194" }
%"class.v8::internal::BaseNameDictionary.1194" = type { %"class.v8::internal::Dictionary.1195" }
%"class.v8::internal::Dictionary.1195" = type { %"class.v8::internal::HashTable.1196" }
%"class.v8::internal::HashTable.1196" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef" = type { %"class.v8::internal::AccessorPair" }
%"class.v8::internal::AccessorPair" = type { %"class.v8::internal::TorqueGeneratedAccessorPair" }
%"class.v8::internal::TorqueGeneratedAccessorPair" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::wasm::ArrayType" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::StructType" = type { i32, i32*, %"class.v8::internal::wasm::ValueType"*, i8* }
%"class.v8::internal::StringShape" = type { i32 }
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.v8::internal::SlicedString" = type { %"class.v8::internal::TorqueGeneratedSlicedString" }
%"class.v8::internal::TorqueGeneratedSlicedString" = type { %"class.v8::internal::String" }
%"class.v8::internal::ThinString" = type { %"class.v8::internal::TorqueGeneratedThinString" }
%"class.v8::internal::TorqueGeneratedThinString" = type { %"class.v8::internal::String" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }

$_ZN2v88internal14LookupIterator5StartILb1EEEvv = comdat any

$_ZN2v88internal14LookupIterator12NextInternalILb1EEEvNS0_3MapENS0_10JSReceiverE = comdat any

$_ZN2v88internal14LookupIterator5StartILb0EEEvv = comdat any

$_ZN2v88internal14LookupIterator12NextInternalILb0EEEvNS0_3MapENS0_10JSReceiverE = comdat any

$_ZN2v88internal14LookupIterator15RestartInternalILb1EEEvNS1_16InterceptorStateE = comdat any

$_ZN2v88internal14LookupIterator15RestartInternalILb0EEEvNS1_16InterceptorStateE = comdat any

$_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE = comdat any

$_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE = comdat any

$_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE = comdat any

$_ZN2v88internal12AccessorPair13SetComponentsENS0_6ObjectES2_ = comdat any

$_ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE = comdat any

$_ZN2v88internal10WasmObject11ReadValueAtEPNS0_7IsolateENS0_6HandleINS0_10HeapObjectEEENS0_4wasm9ValueTypeEj = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE = comdat any

$_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_ = comdat any

$_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE = comdat any

$_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi = comdat any

$_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE = comdat any

$_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"DeletingProperty\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"TransitionToAccessorPair\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"state() == LookupIterator::DATA\00", align 1
@.str.4 = private unnamed_addr constant [69 x i8] c"array_elements.map() == ReadOnlyRoots(isolate).fixed_cow_array_map()\00", align 1
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1244", align 4
@_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize = internal unnamed_addr constant [13 x i8] c"\FF\04\08\04\08\10\01\02\04\04\04\04\FF", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"field_index < type->field_count()\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1
@switch.table._ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE = private unnamed_addr constant [5 x i64] [i64 0, i64 0, i64 16384, i64 0, i64 0], align 8
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)], align 8

@_ZN2v88internal14LookupIterator3KeyC1EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPb = hidden unnamed_addr alias void (%"class.v8::internal::LookupIterator::Key"*, %"class.v8::internal::Isolate"*, i64*, i8*), void (%"class.v8::internal::LookupIterator::Key"*, %"class.v8::internal::Isolate"*, i64*, i8*)* @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPb
@_ZN2v88internal14LookupIteratorC1EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEENS4_INS0_3MapEEENS0_15PropertyDetailsEb = hidden unnamed_addr alias void (%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i1), void (%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i1)* @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEENS4_INS0_3MapEEENS0_15PropertyDetailsEb

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* %5, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %8, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %1
  %14 = add i64 %8, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i64 %10, 4294967295
  %18 = icmp eq i64 %17, 0
  tail call void @llvm.assume(i1 %18) #6
  %19 = zext i32 %16 to i64
  %20 = or i64 %10, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ugt i16 %23, 185
  br i1 %24, label %28, label %25

25:                                               ; preds = %13, %1
  %26 = tail call i64* @_ZN2v88internal14LookupIterator23GetRootForNonJSReceiverEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEm(%"class.v8::internal::Isolate"* %3, i64* %5, i64 %7) #6
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  br label %28

28:                                               ; preds = %13, %25
  %29 = phi %"class.v8::internal::Isolate"* [ %27, %25 ], [ %3, %13 ]
  %30 = phi i64* [ %26, %25 ], [ %5, %13 ]
  %31 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %30, i64** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %33, align 4
  %34 = load i64, i64* %30, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %34, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i64 %36, 4294967295
  %41 = icmp eq i64 %40, 0
  tail call void @llvm.assume(i1 %41) #6
  %42 = zext i32 %39 to i64
  %43 = or i64 %36, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp ult i16 %46, 1041
  br i1 %47, label %48, label %50

48:                                               ; preds = %28
  %49 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %43, i64 %34) #6
  br label %52

50:                                               ; preds = %28
  %51 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %43, i64 %34) #6
  br label %52

52:                                               ; preds = %48, %50
  %53 = phi i32 [ %49, %48 ], [ %51, %50 ]
  store i32 %53, i32* %33, align 4
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZN2v88internal14LookupIterator12NextInternalILb1EEEvNS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %43, i64 %34)
  br label %56

56:                                               ; preds = %52, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIterator12NextInternalILb1EEEvNS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %1, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, 4294967295
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #6
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 6
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %10, %15
  br i1 %16, label %55, label %17

17:                                               ; preds = %3
  %18 = zext i32 %10 to i64
  %19 = or i64 %7, %18
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %36

22:                                               ; preds = %107
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %98, 15
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %24, 4294967295
  %29 = icmp eq i64 %28, 0
  tail call void @llvm.assume(i1 %29) #6
  %30 = zext i32 %27 to i64
  %31 = or i64 %24, %30
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 7, i32 0, i64 6
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %27, %34
  br i1 %35, label %55, label %36

36:                                               ; preds = %17, %22
  %37 = phi i64 [ %19, %17 ], [ %31, %22 ]
  %38 = phi i32 [ %10, %17 ], [ %27, %22 ]
  %39 = phi i64 [ %7, %17 ], [ %24, %22 ]
  %40 = phi %"class.v8::internal::Isolate"* [ %5, %17 ], [ %110, %22 ]
  %41 = phi i64 [ %1, %17 ], [ %98, %22 ]
  %42 = phi i64 [ %2, %17 ], [ %37, %22 ]
  %43 = load i32, i32* %20, align 8
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %36
  %47 = add i64 %41, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ne i16 %49, 190
  %51 = icmp eq i32 %38, 0
  %52 = or i1 %51, %50
  br i1 %52, label %55, label %93

53:                                               ; preds = %36
  %54 = icmp eq i32 %38, 0
  br i1 %54, label %55, label %93

55:                                               ; preds = %53, %22, %46, %3
  %56 = phi i64 [ %2, %3 ], [ %42, %46 ], [ %37, %22 ], [ %42, %53 ]
  %57 = phi %"class.v8::internal::Isolate"* [ %5, %3 ], [ %40, %46 ], [ %110, %22 ], [ %40, %53 ]
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  store i32 2, i32* %58, align 4
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %63, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %133

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %65, align 4
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %56 to i32
  %70 = trunc i64 %68 to i32
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %133, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 4
  %74 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %73, align 8
  %75 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %74, i64 %56) #6
  br label %91

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %57) #6
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i64* [ %85, %84 ], [ %80, %78 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %79, align 8
  store i64 %56, i64* %87, align 8
  br label %91

91:                                               ; preds = %76, %86
  %92 = phi i64* [ %77, %76 ], [ %87, %86 ]
  store i64* %92, i64** %66, align 8
  br label %133

93:                                               ; preds = %46, %53
  %94 = add i64 %37, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %39, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp ult i16 %101, 1041
  br i1 %102, label %103, label %105

103:                                              ; preds = %93
  %104 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %98, i64 %37) #6
  br label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %98, i64 %37) #6
  br label %107

107:                                              ; preds = %103, %105
  %108 = phi i32 [ %104, %103 ], [ %106, %105 ]
  store i32 %108, i32* %21, align 4
  %109 = icmp eq i32 %108, 4
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  br i1 %109, label %22, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 4
  %113 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %112, align 8
  %114 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %113, i64 %37) #6
  br label %130

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 1
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %119, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %110) #6
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi i64* [ %124, %123 ], [ %119, %117 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %118, align 8
  store i64 %37, i64* %126, align 8
  br label %130

130:                                              ; preds = %115, %125
  %131 = phi i64* [ %116, %115 ], [ %126, %125 ]
  %132 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %131, i64** %132, align 8
  br label %133

133:                                              ; preds = %64, %91, %61, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* %5, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %8, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %1
  %14 = add i64 %8, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i64 %10, 4294967295
  %18 = icmp eq i64 %17, 0
  tail call void @llvm.assume(i1 %18) #6
  %19 = zext i32 %16 to i64
  %20 = or i64 %10, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp ugt i16 %23, 185
  br i1 %24, label %28, label %25

25:                                               ; preds = %13, %1
  %26 = tail call i64* @_ZN2v88internal14LookupIterator23GetRootForNonJSReceiverEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEm(%"class.v8::internal::Isolate"* %3, i64* %5, i64 %7) #6
  %27 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  br label %28

28:                                               ; preds = %13, %25
  %29 = phi %"class.v8::internal::Isolate"* [ %27, %25 ], [ %3, %13 ]
  %30 = phi i64* [ %26, %25 ], [ %5, %13 ]
  %31 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %30, i64** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %33, align 4
  %34 = load i64, i64* %30, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %34, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i64 %36, 4294967295
  %41 = icmp eq i64 %40, 0
  tail call void @llvm.assume(i1 %41) #6
  %42 = zext i32 %39 to i64
  %43 = or i64 %36, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp ult i16 %46, 1041
  br i1 %47, label %48, label %50

48:                                               ; preds = %28
  %49 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %43, i64 %34) #6
  br label %52

50:                                               ; preds = %28
  %51 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %43, i64 %34) #6
  br label %52

52:                                               ; preds = %48, %50
  %53 = phi i32 [ %49, %48 ], [ %51, %50 ]
  store i32 %53, i32* %33, align 4
  %54 = icmp eq i32 %53, 4
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZN2v88internal14LookupIterator12NextInternalILb0EEEvNS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %43, i64 %34)
  br label %56

56:                                               ; preds = %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIterator12NextInternalILb0EEEvNS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %1, 15
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, 4294967295
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #6
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 6
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %10, %15
  br i1 %16, label %55, label %17

17:                                               ; preds = %3
  %18 = zext i32 %10 to i64
  %19 = or i64 %7, %18
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  br label %36

22:                                               ; preds = %107
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %98, 15
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %24, 4294967295
  %29 = icmp eq i64 %28, 0
  tail call void @llvm.assume(i1 %29) #6
  %30 = zext i32 %27 to i64
  %31 = or i64 %24, %30
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 0, i32 7, i32 0, i64 6
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %27, %34
  br i1 %35, label %55, label %36

36:                                               ; preds = %17, %22
  %37 = phi i64 [ %19, %17 ], [ %31, %22 ]
  %38 = phi i32 [ %10, %17 ], [ %27, %22 ]
  %39 = phi i64 [ %7, %17 ], [ %24, %22 ]
  %40 = phi %"class.v8::internal::Isolate"* [ %5, %17 ], [ %110, %22 ]
  %41 = phi i64 [ %1, %17 ], [ %98, %22 ]
  %42 = phi i64 [ %2, %17 ], [ %37, %22 ]
  %43 = load i32, i32* %20, align 8
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %36
  %47 = add i64 %41, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp ne i16 %49, 190
  %51 = icmp eq i32 %38, 0
  %52 = or i1 %51, %50
  br i1 %52, label %55, label %93

53:                                               ; preds = %36
  %54 = icmp eq i32 %38, 0
  br i1 %54, label %55, label %93

55:                                               ; preds = %53, %22, %46, %3
  %56 = phi i64 [ %2, %3 ], [ %42, %46 ], [ %37, %22 ], [ %42, %53 ]
  %57 = phi %"class.v8::internal::Isolate"* [ %5, %3 ], [ %40, %46 ], [ %110, %22 ], [ %40, %53 ]
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  store i32 2, i32* %58, align 4
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %63, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %133

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %65, align 4
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %56 to i32
  %70 = trunc i64 %68 to i32
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %133, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 4
  %74 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %73, align 8
  %75 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %74, i64 %56) #6
  br label %91

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 31, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %57) #6
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i64* [ %85, %84 ], [ %80, %78 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %79, align 8
  store i64 %56, i64* %87, align 8
  br label %91

91:                                               ; preds = %76, %86
  %92 = phi i64* [ %77, %76 ], [ %87, %86 ]
  store i64* %92, i64** %66, align 8
  br label %133

93:                                               ; preds = %46, %53
  %94 = add i64 %37, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %39, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp ult i16 %101, 1041
  br i1 %102, label %103, label %105

103:                                              ; preds = %93
  %104 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %98, i64 %37) #6
  br label %107

105:                                              ; preds = %93
  %106 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %98, i64 %37) #6
  br label %107

107:                                              ; preds = %103, %105
  %108 = phi i32 [ %104, %103 ], [ %106, %105 ]
  store i32 %108, i32* %21, align 4
  %109 = icmp eq i32 %108, 4
  %110 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  br i1 %109, label %22, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 4
  %113 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %112, align 8
  %114 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %113, i64 %37) #6
  br label %130

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %110, i64 0, i32 31, i32 1
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %119, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %110) #6
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi i64* [ %124, %123 ], [ %119, %117 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %118, align 8
  store i64 %37, i64* %126, align 8
  br label %130

130:                                              ; preds = %115, %125
  %131 = phi i64* [ %116, %115 ], [ %126, %125 ]
  %132 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %131, i64** %132, align 8
  br label %133

133:                                              ; preds = %64, %91, %61, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal14LookupIterator15RestartInternalILb1EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %5, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal14LookupIterator15RestartInternalILb0EEEvNS1_16InterceptorStateE(%"class.v8::internal::LookupIterator"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %5, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator3KeyC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEPb(%"class.v8::internal::LookupIterator::Key"*, %"class.v8::internal::Isolate"*, i64*, i8* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::String", align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = load i64, i64* %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %0, i64 0, i32 1
  %9 = and i64 %7, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = trunc i64 %7 to i32
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %52, label %14

14:                                               ; preds = %11
  %15 = lshr i64 %7, 1
  %16 = and i64 %15, 2147483647
  br label %39

17:                                               ; preds = %4
  %18 = and i64 %7, -4294967296
  %19 = add i64 %7, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 66
  br i1 %27, label %28, label %41

28:                                               ; preds = %17
  %29 = add i64 %7, 3
  %30 = inttoptr i64 %29 to double*
  %31 = load double, double* %30, align 1
  %32 = fcmp ult double %31, 0.000000e+00
  %33 = fcmp ogt double %31, 0x433FFFFFFFFFFFFF
  %34 = or i1 %32, %33
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = fptoui double %31 to i64
  %37 = uitofp i64 %36 to double
  %38 = fcmp une double %31, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %35, %14
  %40 = phi i64 [ %16, %14 ], [ %36, %35 ]
  store i64 %40, i64* %8, align 8
  store i8 1, i8* %3, align 1
  br label %92

41:                                               ; preds = %28, %35, %17
  %42 = and i64 %7, -4294967296
  %43 = add i64 %7, -1
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %42, %46
  %48 = add i64 %47, 7
  %49 = inttoptr i64 %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = icmp ult i16 %50, 65
  br i1 %51, label %54, label %52

52:                                               ; preds = %11, %41
  %53 = tail call i64* @_ZN2v88internal6Object13ConvertToNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %1, i64* %2) #6
  br label %54

54:                                               ; preds = %41, %52
  %55 = phi i64* [ %53, %52 ], [ %2, %41 ]
  %56 = icmp eq i64* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  store i64* null, i64** %6, align 8
  store i8 0, i8* %3, align 1
  store i64 -1, i64* %8, align 8
  br label %92

58:                                               ; preds = %54
  %59 = ptrtoint i64* %55 to i64
  %60 = bitcast %"class.v8::internal::LookupIterator::Key"* %0 to i64*
  store i64 %59, i64* %60, align 8
  store i8 1, i8* %3, align 1
  %61 = load i64*, i64** %6, align 8
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, -4294967296
  %64 = add i64 %62, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp ult i16 %71, 64
  %73 = bitcast %"class.v8::internal::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  br i1 %72, label %74, label %88

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %62, i64* %75, align 8
  %76 = add i64 %62, 3
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, -536870910
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = lshr i32 %78, 2
  %83 = and i32 %82, 16777215
  %84 = zext i32 %83 to i64
  store i64 %84, i64* %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br label %92

85:                                               ; preds = %74
  %86 = and i32 %78, 3
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %88, label %89

88:                                               ; preds = %58, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br label %91

89:                                               ; preds = %85
  %90 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %5, i64* %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #6
  br i1 %90, label %92, label %91

91:                                               ; preds = %88, %89
  store i64 -1, i64* %8, align 8
  br label %92

92:                                               ; preds = %81, %89, %39, %57, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEENS4_INS0_3MapEEENS0_15PropertyDetailsEb(%"class.v8::internal::LookupIterator"* nocapture, %"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  store i32 3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 7, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 %8, i8* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %5, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* %4, i64** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %21 = bitcast i64* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 -1, i64 16, i1 false)
  %22 = load i64, i64* %2, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %22, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %7
  %28 = add i64 %22, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i64 %24, 4294967295
  %32 = icmp eq i64 %31, 0
  tail call void @llvm.assume(i1 %32) #6
  %33 = zext i32 %30 to i64
  %34 = or i64 %24, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ugt i16 %37, 185
  br i1 %38, label %41, label %39

39:                                               ; preds = %27, %7
  %40 = tail call i64* @_ZN2v88internal14LookupIterator23GetRootForNonJSReceiverEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEm(%"class.v8::internal::Isolate"* %1, i64* %2, i64 -1) #6
  br label %41

41:                                               ; preds = %27, %39
  %42 = phi i64* [ %40, %39 ], [ %2, %27 ]
  store i64* %42, i64** %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator4NextEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %9, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #6
  %15 = zext i32 %12 to i64
  %16 = or i64 %9, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp ult i16 %19, 1041
  br i1 %20, label %21, label %33

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, -1
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %16, i64 %5)
  br label %29

27:                                               ; preds = %21
  %28 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %16, i64 %5)
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  %31 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 %30, i32* %31, align 4
  %32 = icmp eq i32 %30, 4
  br i1 %32, label %33, label %39

33:                                               ; preds = %29, %1
  %34 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZN2v88internal14LookupIterator12NextInternalILb1EEEvNS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %16, i64 %5)
  br label %39

38:                                               ; preds = %33
  tail call void @_ZN2v88internal14LookupIterator12NextInternalILb0EEEvNS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %16, i64 %5)
  br label %39

39:                                               ; preds = %29, %37, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Map", align 8
  %5 = alloca %"class.v8::internal::Map", align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %189 [
    i32 4, label %8
    i32 0, label %19
    i32 2, label %78
    i32 5, label %190
    i32 6, label %190
    i32 1, label %188
    i32 3, label %188
    i32 7, label %188
  ]

8:                                                ; preds = %3
  %9 = add i64 %1, 7
  %10 = inttoptr i64 %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = icmp eq i16 %11, 188
  br i1 %12, label %190, label %13

13:                                               ; preds = %8
  %14 = add i64 %1, 9
  %15 = inttoptr i64 %14 to i8*
  %16 = load atomic i8, i8* %15 monotonic, align 1
  %17 = and i8 %16, 32
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %190

19:                                               ; preds = %13, %3
  %20 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %78, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, 4294967294
  %28 = add i64 %1, 9
  %29 = inttoptr i64 %28 to i8*
  %30 = load atomic i8, i8* %29 monotonic, align 1
  %31 = and i8 %30, 4
  %32 = icmp ne i8 %31, 0
  %33 = and i8 %30, 8
  %34 = icmp ne i8 %33, 0
  %35 = select i1 %27, i1 %32, i1 %34
  br i1 %35, label %36, label %78

36:                                               ; preds = %24
  %37 = icmp ult i64 %26, 4294967295
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 0, i32 4
  %41 = load i64, i64* %40, align 8
  br i1 %37, label %42, label %53

42:                                               ; preds = %36
  %43 = bitcast %"class.v8::internal::Map"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  %44 = add i64 %2, -1
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i64 %41, 4294967295
  %48 = icmp eq i64 %47, 0
  tail call void @llvm.assume(i1 %48) #6
  %49 = zext i32 %46 to i64
  %50 = or i64 %41, %49
  %51 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %50, i64* %51, align 8
  %52 = call i64 @_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %4, i64 %41) #6
  br label %64

53:                                               ; preds = %36
  %54 = bitcast %"class.v8::internal::Map"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #6
  %55 = add i64 %2, -1
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i64 %41, 4294967295
  %59 = icmp eq i64 %58, 0
  tail call void @llvm.assume(i1 %59) #6
  %60 = zext i32 %57 to i64
  %61 = or i64 %41, %60
  %62 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = call i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %5, i64 %41) #6
  br label %64

64:                                               ; preds = %53, %42
  %65 = phi i8* [ %54, %53 ], [ %43, %42 ]
  %66 = phi i64 [ %63, %53 ], [ %52, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #6
  %67 = add i64 %66, 35
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 8
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %76, label %74

74:                                               ; preds = %64
  switch i32 %73, label %190 [
    i32 0, label %75
    i32 1, label %78
  ]

75:                                               ; preds = %74
  store i32 1, i32* %72, align 4
  br label %78

76:                                               ; preds = %64
  %77 = icmp eq i32 %73, 2
  br i1 %77, label %78, label %190

78:                                               ; preds = %19, %75, %74, %76, %24, %3
  %79 = add i64 %1, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load atomic i16, i16* %80 monotonic, align 2
  %82 = icmp eq i16 %81, 189
  br i1 %82, label %83, label %186

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, 4294967295
  br i1 %86, label %186, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %89 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 0, i32 4
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %2, 3
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 acquire, align 4
  %95 = and i64 %91, 4294967295
  %96 = icmp eq i64 %95, 0
  call void @llvm.assume(i1 %96) #6
  %97 = zext i32 %94 to i64
  %98 = or i64 %91, %97
  %99 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %88, align 8
  %100 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 4
  %103 = load i64, i64* %102, align 8
  %104 = load i64, i64* %101, align 8
  %105 = add i64 %104, 3
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = lshr i32 %107, 2
  %109 = add i64 %98, 15
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = ashr i32 %111, 1
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 7, i32 0, i64 4
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 7, i32 0, i64 5
  %116 = load i64, i64* %115, align 8
  %117 = add nsw i32 %112, -1
  %118 = and i32 %117, %108
  %119 = shl nuw i32 %118, 2
  %120 = add i32 %119, 20
  %121 = sext i32 %120 to i64
  %122 = add i64 %98, 7
  %123 = add i64 %122, %121
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = trunc i64 %114 to i32
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %154, label %128

128:                                              ; preds = %87
  %129 = trunc i64 %116 to i32
  %130 = trunc i64 %104 to i32
  br label %131

131:                                              ; preds = %143, %128
  %132 = phi i32 [ %125, %128 ], [ %152, %143 ]
  %133 = phi i32 [ %118, %128 ], [ %146, %143 ]
  %134 = phi i32 [ 1, %128 ], [ %144, %143 ]
  %135 = icmp eq i32 %132, %129
  br i1 %135, label %143, label %136

136:                                              ; preds = %131
  %137 = zext i32 %132 to i64
  %138 = or i64 %103, %137
  %139 = add i64 %138, 3
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, %130
  br i1 %142, label %156, label %143

143:                                              ; preds = %136, %131
  %144 = add i32 %134, 1
  %145 = add i32 %134, %133
  %146 = and i32 %145, %117
  %147 = shl i32 %146, 2
  %148 = add i32 %147, 20
  %149 = sext i32 %148 to i64
  %150 = add i64 %122, %149
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = icmp eq i32 %152, %126
  br i1 %153, label %154, label %131

154:                                              ; preds = %143, %87
  %155 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %155, align 8
  br label %190

156:                                              ; preds = %136
  %157 = zext i32 %133 to i64
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %157, i64* %158, align 8
  %159 = load i64, i64* %102, align 8
  %160 = shl i32 %133, 2
  %161 = add i32 %160, 20
  %162 = sext i32 %161 to i64
  %163 = add i64 %122, %162
  %164 = inttoptr i64 %163 to i32*
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i64 %159, 4294967295
  %167 = icmp eq i64 %166, 0
  call void @llvm.assume(i1 %167) #6
  %168 = zext i32 %165 to i64
  %169 = or i64 %159, %168
  %170 = add i64 %169, 11
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = load i64, i64* %115, align 8
  %174 = trunc i64 %173 to i32
  %175 = icmp eq i32 %172, %174
  br i1 %175, label %190, label %176

176:                                              ; preds = %156
  %177 = add i64 %169, 7
  %178 = inttoptr i64 %177 to i32*
  %179 = load i32, i32* %178, align 4
  %180 = ashr i32 %179, 1
  %181 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %180, i32* %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %182, align 8
  %183 = and i32 %179, 2
  %184 = icmp eq i32 %183, 0
  %185 = select i1 %184, i32 6, i32 5
  ret i32 %185

186:                                              ; preds = %83, %78
  %187 = call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %1, i64 %2)
  br label %190

188:                                              ; preds = %3, %3, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

189:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

190:                                              ; preds = %154, %13, %156, %74, %3, %3, %76, %8, %186
  %191 = phi i32 [ %187, %186 ], [ 3, %8 ], [ 0, %13 ], [ 2, %76 ], [ 4, %3 ], [ 4, %3 ], [ 2, %74 ], [ 4, %156 ], [ 4, %154 ]
  ret i32 %191
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::Map", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %247 [
    i32 4, label %7
    i32 0, label %68
    i32 2, label %140
    i32 5, label %248
    i32 6, label %248
    i32 1, label %246
    i32 3, label %246
    i32 7, label %246
  ]

7:                                                ; preds = %3
  %8 = add i64 %1, 7
  %9 = inttoptr i64 %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = icmp eq i16 %10, 188
  br i1 %11, label %12, label %37

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %15, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i64 %19, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #6
  %25 = zext i32 %22 to i64
  %26 = or i64 %19, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 64
  br i1 %30, label %31, label %248

31:                                               ; preds = %12
  %32 = add i64 %15, 7
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %248, label %37

37:                                               ; preds = %31, %7
  %38 = add i64 %1, 9
  %39 = inttoptr i64 %38 to i8*
  %40 = load atomic i8, i8* %39 monotonic, align 1
  %41 = and i8 %40, 32
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %68, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %46, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i64 %50, 4294967295
  %55 = icmp eq i64 %54, 0
  tail call void @llvm.assume(i1 %55) #6
  %56 = zext i32 %53 to i64
  %57 = or i64 %50, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = icmp eq i16 %60, 64
  br i1 %61, label %62, label %248

62:                                               ; preds = %43
  %63 = add i64 %46, 7
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %248, label %68

68:                                               ; preds = %62, %37, %3
  %69 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %140, label %73

73:                                               ; preds = %68
  %74 = add i64 %1, 9
  %75 = inttoptr i64 %74 to i8*
  %76 = load atomic i8, i8* %75 monotonic, align 1
  %77 = and i8 %76, 4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %140, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %81, i64 0, i32 0, i32 4
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.v8::internal::Map"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #6
  %85 = add i64 %2, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i64 %83, 4294967295
  %89 = icmp eq i64 %88, 0
  tail call void @llvm.assume(i1 %89) #6
  %90 = zext i32 %87 to i64
  %91 = or i64 %83, %90
  %92 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %91, i64* %92, align 8
  %93 = call i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"* nonnull %4, i64 %83) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #6
  %94 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %95 = load i64*, i64** %94, align 8
  %96 = load i64, i64* %95, align 8
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %80, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 4
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %96, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %99, 4294967295
  %104 = icmp eq i64 %103, 0
  call void @llvm.assume(i1 %104) #6
  %105 = zext i32 %102 to i64
  %106 = or i64 %99, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load atomic i16, i16* %108 monotonic, align 2
  %110 = icmp eq i16 %109, 64
  %111 = add i64 %93, 35
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = and i1 %110, %115
  br i1 %116, label %140, label %117

117:                                              ; preds = %79
  %118 = and i32 %113, 8
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %124, label %122

122:                                              ; preds = %117
  switch i32 %121, label %126 [
    i32 0, label %123
    i32 1, label %140
  ]

123:                                              ; preds = %122
  store i32 1, i32* %120, align 4
  br label %140

124:                                              ; preds = %117
  %125 = icmp eq i32 %121, 2
  br i1 %125, label %140, label %126

126:                                              ; preds = %122, %124
  %127 = load atomic i32, i32* %101 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %99, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = icmp eq i16 %132, 64
  br i1 %133, label %134, label %248

134:                                              ; preds = %126
  %135 = add i64 %96, 7
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %248, label %140

140:                                              ; preds = %79, %134, %73, %68, %123, %122, %124, %3
  %141 = add i64 %1, 7
  %142 = inttoptr i64 %141 to i16*
  %143 = load atomic i16, i16* %142 monotonic, align 2
  %144 = icmp eq i16 %143, 189
  br i1 %144, label %145, label %244

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %147 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %147, i64 0, i32 0, i32 4
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %2, 3
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 acquire, align 4
  %153 = and i64 %149, 4294967295
  %154 = icmp eq i64 %153, 0
  call void @llvm.assume(i1 %154) #6
  %155 = zext i32 %152 to i64
  %156 = or i64 %149, %155
  %157 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %146, align 8
  %158 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %157, i64 0, i32 0, i32 4
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %159, align 8
  %163 = add i64 %162, 3
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = lshr i32 %165, 2
  %167 = add i64 %156, 15
  %168 = inttoptr i64 %167 to i32*
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = ashr i32 %169, 1
  %171 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %157, i64 0, i32 0, i32 7, i32 0, i64 4
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %157, i64 0, i32 0, i32 7, i32 0, i64 5
  %174 = load i64, i64* %173, align 8
  %175 = add nsw i32 %170, -1
  %176 = and i32 %175, %166
  %177 = shl nuw i32 %176, 2
  %178 = add i32 %177, 20
  %179 = sext i32 %178 to i64
  %180 = add i64 %156, 7
  %181 = add i64 %180, %179
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = trunc i64 %172 to i32
  %185 = icmp eq i32 %183, %184
  br i1 %185, label %212, label %186

186:                                              ; preds = %145
  %187 = trunc i64 %174 to i32
  %188 = trunc i64 %162 to i32
  br label %189

189:                                              ; preds = %201, %186
  %190 = phi i32 [ %183, %186 ], [ %210, %201 ]
  %191 = phi i32 [ %176, %186 ], [ %204, %201 ]
  %192 = phi i32 [ 1, %186 ], [ %202, %201 ]
  %193 = icmp eq i32 %190, %187
  br i1 %193, label %201, label %194

194:                                              ; preds = %189
  %195 = zext i32 %190 to i64
  %196 = or i64 %161, %195
  %197 = add i64 %196, 3
  %198 = inttoptr i64 %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, %188
  br i1 %200, label %214, label %201

201:                                              ; preds = %194, %189
  %202 = add i32 %192, 1
  %203 = add i32 %192, %191
  %204 = and i32 %203, %175
  %205 = shl i32 %204, 2
  %206 = add i32 %205, 20
  %207 = sext i32 %206 to i64
  %208 = add i64 %180, %207
  %209 = inttoptr i64 %208 to i32*
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = icmp eq i32 %210, %184
  br i1 %211, label %212, label %189

212:                                              ; preds = %201, %145
  %213 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %213, align 8
  br label %248

214:                                              ; preds = %194
  %215 = zext i32 %191 to i64
  %216 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %215, i64* %216, align 8
  %217 = load i64, i64* %160, align 8
  %218 = shl i32 %191, 2
  %219 = add i32 %218, 20
  %220 = sext i32 %219 to i64
  %221 = add i64 %180, %220
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i64 %217, 4294967295
  %225 = icmp eq i64 %224, 0
  call void @llvm.assume(i1 %225) #6
  %226 = zext i32 %223 to i64
  %227 = or i64 %217, %226
  %228 = add i64 %227, 11
  %229 = inttoptr i64 %228 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = load i64, i64* %173, align 8
  %232 = trunc i64 %231 to i32
  %233 = icmp eq i32 %230, %232
  br i1 %233, label %248, label %234

234:                                              ; preds = %214
  %235 = add i64 %227, 7
  %236 = inttoptr i64 %235 to i32*
  %237 = load i32, i32* %236, align 4
  %238 = ashr i32 %237, 1
  %239 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %238, i32* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %240, align 8
  %241 = and i32 %237, 2
  %242 = icmp eq i32 %241, 0
  %243 = select i1 %242, i32 6, i32 5
  ret i32 %243

244:                                              ; preds = %140
  %245 = call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %1, i64 %2)
  br label %248

246:                                              ; preds = %3, %3, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

247:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

248:                                              ; preds = %212, %31, %62, %134, %214, %126, %43, %12, %3, %3, %244
  %249 = phi i32 [ %245, %244 ], [ 3, %31 ], [ 0, %62 ], [ 2, %134 ], [ 4, %3 ], [ 4, %3 ], [ 3, %12 ], [ 0, %43 ], [ 2, %126 ], [ 4, %214 ], [ 4, %212 ]
  ret i32 %249
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal14LookupIterator23GetRootForNonJSReceiverEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEEm(%"class.v8::internal::Isolate"*, i64*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %5, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %99, label %10

10:                                               ; preds = %3
  %11 = add i64 %5, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i64 %7, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #6
  %16 = zext i32 %13 to i64
  %17 = or i64 %7, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  br i1 %21, label %22, label %99

22:                                               ; preds = %10
  %23 = add i64 %5, 7
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = icmp ugt i64 %26, %2
  br i1 %27, label %28, label %99

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, -4294967296
  %32 = add i64 %30, -1
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %31, %35
  %37 = add i64 %36, 19
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %31, %40
  %42 = add i64 %41, 811
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %31, %45
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %28
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %46) #6
  br label %65

52:                                               ; preds = %28
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i64* [ %59, %58 ], [ %54, %52 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %53, align 8
  store i64 %46, i64* %61, align 8
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi i64* [ %51, %50 ], [ %61, %60 ]
  %67 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::Factory"*
  %68 = tail call i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %67, i64* %66, i8 zeroext 0) #6
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %1, align 8
  %71 = add i64 %69, 11
  %72 = inttoptr i64 %71 to i32*
  %73 = trunc i64 %70 to i32
  store atomic volatile i32 %73, i32* %72 monotonic, align 4
  %74 = and i64 %70, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %141, label %76

76:                                               ; preds = %65
  %77 = and i64 %69, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 262144
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %76
  %84 = or i64 %77, 16
  %85 = inttoptr i64 %84 to %"class.v8::internal::Heap"**
  %86 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %85, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %86, i64 %69, i64 %71, i64 %70) #6
  br label %87

87:                                               ; preds = %83, %76
  %88 = and i64 %70, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %141, label %94

94:                                               ; preds = %87
  %95 = load i64, i64* %79, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %141

98:                                               ; preds = %94
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %69, i64 %71, i64 %70) #6
  br label %141

99:                                               ; preds = %3, %10, %22
  %100 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #6
  %101 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %5, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %4, i64 0, i32 0
  %103 = call i64 @_ZNK2v88internal6Object24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %102, %"class.v8::internal::Isolate"* %0) #6
  %104 = load i64, i64* %6, align 8
  %105 = add i64 %103, 15
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = and i64 %104, 4294967295
  %109 = icmp eq i64 %108, 0
  call void @llvm.assume(i1 %109) #6
  %110 = zext i32 %107 to i64
  %111 = or i64 %104, %110
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %113 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %112, align 8
  %114 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %99
  %116 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %113, i64 %111) #6
  br label %130

117:                                              ; preds = %99
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %119, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi i64* [ %124, %123 ], [ %119, %117 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %118, align 8
  store i64 %111, i64* %126, align 8
  br label %130

130:                                              ; preds = %115, %125
  %131 = phi i64* [ %116, %115 ], [ %126, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #6
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 6
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %132 to i32
  %136 = trunc i64 %134 to i32
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %138, label %141

138:                                              ; preds = %130
  %139 = bitcast i64* %1 to i8**
  %140 = load i8*, i8** %139, align 8
  call void @_ZN2v88internal7Isolate20PushStackTraceAndDieEPvS2_S2_S2_(%"class.v8::internal::Isolate"* %0, i8* %140, i8* null, i8* null, i8* null) #6
  br label %141

141:                                              ; preds = %130, %138, %98, %94, %87, %65
  %142 = phi i64* [ %68, %65 ], [ %68, %87 ], [ %68, %94 ], [ %68, %98 ], [ %131, %138 ], [ %131, %130 ]
  ret i64* %142
}

declare i64* @_ZN2v88internal7Factory11NewJSObjectENS0_6HandleINS0_10JSFunctionEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i8 zeroext) local_unnamed_addr #2

declare i64 @_ZNK2v88internal6Object24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal7Isolate20PushStackTraceAndDieEPvS2_S2_S2_(%"class.v8::internal::Isolate"*, i8*, i8*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal14LookupIterator14GetReceiverMapEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %4, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = add i64 %4, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %8, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #6
  %17 = zext i32 %14 to i64
  %18 = or i64 %8, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 66
  br i1 %22, label %23, label %25

23:                                               ; preds = %1, %11
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 7, i32 0, i64 24
  br label %47

25:                                               ; preds = %11
  %26 = load atomic i32, i32* %13 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %8, %27
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 4
  %30 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %29, align 8
  %31 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  %33 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %30, i64 %28) #6
  br label %47

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %38 = load i64*, i64** %37, align 8
  %39 = icmp eq i64* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %34
  %41 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #6
  br label %42

42:                                               ; preds = %40, %34
  %43 = phi i64* [ %41, %40 ], [ %36, %34 ]
  %44 = ptrtoint i64* %43 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  store i64* %46, i64** %35, align 8
  store i64 %28, i64* %43, align 8
  br label %47

47:                                               ; preds = %42, %32, %23
  %48 = phi i64* [ %24, %23 ], [ %33, %32 ], [ %43, %42 ]
  ret i64* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal14LookupIterator9HasAccessEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 4
  %7 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %6, align 8
  %8 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %7, i64 %5) #6
  br label %24

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = icmp eq i64* %13, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %3) #6
  br label %19

19:                                               ; preds = %17, %11
  %20 = phi i64* [ %18, %17 ], [ %13, %11 ]
  %21 = ptrtoint i64* %20 to i64
  %22 = add i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  store i64* %23, i64** %12, align 8
  store i64 %5, i64* %20, align 8
  br label %24

24:                                               ; preds = %9, %19
  %25 = phi i64* [ %10, %9 ], [ %20, %19 ]
  %26 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = tail call zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %3, i64* %25, i64* %27) #6
  ret i1 %28
}

declare zeroext i1 @_ZN2v88internal7Isolate9MayAccessENS0_6HandleINS0_7ContextEEENS2_INS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator23InternalUpdateProtectorEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 11
  %5 = load %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::Bootstrapper"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Bootstrapper", %"class.v8::internal::Bootstrapper"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %550

9:                                                ; preds = %3
  %10 = load i64, i64* %1, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %550, label %13

13:                                               ; preds = %9
  %14 = load i64, i64* %2, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 297
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %14 to i32
  %18 = trunc i64 %16 to i32
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %20, label %162

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %10, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i64 %22, 4294967295
  %27 = icmp eq i64 %26, 0
  tail call void @llvm.assume(i1 %27) #6
  %28 = zext i32 %25 to i64
  %29 = or i64 %22, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = icmp eq i16 %32, 1085
  br i1 %33, label %34, label %42

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 607
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 11
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %550

41:                                               ; preds = %34
  tail call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %0, i32 28) #6
  tail call void @_ZN2v88internal10Protectors33InvalidateArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

42:                                               ; preds = %20
  %43 = load atomic i32, i32* %24 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %22, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 1101
  br i1 %49, label %50, label %58

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 609
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 11
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %550

57:                                               ; preds = %50
  tail call void @_ZN2v88internal10Protectors35InvalidatePromiseSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

58:                                               ; preds = %42
  %59 = load atomic i32, i32* %24 monotonic, align 4
  %60 = zext i32 %59 to i64
  %61 = or i64 %22, %60
  %62 = add i64 %61, 7
  %63 = inttoptr i64 %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = icmp eq i16 %64, 1102
  br i1 %65, label %66, label %74

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 610
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 11
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 2
  br i1 %72, label %73, label %550

73:                                               ; preds = %66
  tail call void @_ZN2v88internal10Protectors34InvalidateRegExpSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

74:                                               ; preds = %58
  %75 = load atomic i32, i32* %24 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %22, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp eq i16 %80, 1080
  br i1 %81, label %82, label %90

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 608
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 11
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %89, label %550

89:                                               ; preds = %82
  tail call void @_ZN2v88internal10Protectors38InvalidateTypedArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

90:                                               ; preds = %74
  %91 = load atomic i32, i32* %24 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %22, %92
  %94 = add i64 %93, 11
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 acquire, align 4
  %97 = and i32 %96, 1048576
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %550, label %99

99:                                               ; preds = %90
  %100 = load i64, i64* %1, align 8
  %101 = tail call zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"* %0, i64 %100, i32 77) #6
  br i1 %101, label %102, label %110

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 607
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 11
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %109, label %550

109:                                              ; preds = %102
  tail call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %0, i32 26) #6
  tail call void @_ZN2v88internal10Protectors33InvalidateArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

110:                                              ; preds = %99
  %111 = load i64, i64* %1, align 8
  %112 = and i64 %111, -4294967296
  %113 = add i64 %111, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %112, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp eq i16 %120, 1046
  br i1 %121, label %122, label %130

122:                                              ; preds = %110
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 609
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 11
  %126 = inttoptr i64 %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 2
  br i1 %128, label %129, label %550

129:                                              ; preds = %122
  tail call void @_ZN2v88internal10Protectors35InvalidatePromiseSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

130:                                              ; preds = %110
  %131 = load atomic i32, i32* %114 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %112, %132
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i16*
  %136 = load atomic i16, i16* %135 monotonic, align 2
  %137 = icmp eq i16 %136, 1047
  br i1 %137, label %138, label %146

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 610
  %140 = load i64, i64* %139, align 8
  %141 = add i64 %140, 11
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 2
  br i1 %144, label %145, label %550

145:                                              ; preds = %138
  tail call void @_ZN2v88internal10Protectors34InvalidateRegExpSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

146:                                              ; preds = %130
  %147 = load atomic i32, i32* %114 monotonic, align 4
  %148 = zext i32 %147 to i64
  %149 = or i64 %112, %148
  %150 = add i64 %149, 7
  %151 = inttoptr i64 %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = icmp eq i16 %152, 1051
  br i1 %153, label %154, label %550

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 608
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 11
  %158 = inttoptr i64 %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 2
  br i1 %160, label %161, label %550

161:                                              ; preds = %154
  tail call void @_ZN2v88internal10Protectors38InvalidateTypedArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

162:                                              ; preds = %13
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 383
  %164 = load i64, i64* %163, align 8
  %165 = trunc i64 %164 to i32
  %166 = icmp eq i32 %17, %165
  br i1 %166, label %167, label %268

167:                                              ; preds = %162
  %168 = and i64 %10, -4294967296
  %169 = add i64 %10, -1
  %170 = inttoptr i64 %169 to i32*
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = zext i32 %171 to i64
  %173 = or i64 %168, %172
  %174 = add i64 %173, 7
  %175 = inttoptr i64 %174 to i16*
  %176 = load atomic i16, i16* %175 monotonic, align 2
  %177 = icmp eq i16 %176, 1087
  br i1 %177, label %186, label %178

178:                                              ; preds = %167
  %179 = load atomic i32, i32* %170 monotonic, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %168, %180
  %182 = add i64 %181, 7
  %183 = inttoptr i64 %182 to i16*
  %184 = load atomic i16, i16* %183 monotonic, align 2
  %185 = icmp eq i16 %184, 1042
  br i1 %185, label %186, label %194

186:                                              ; preds = %167, %178
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 612
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 11
  %190 = inttoptr i64 %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 2
  br i1 %192, label %193, label %550

193:                                              ; preds = %186
  tail call void @_ZN2v88internal10Protectors34InvalidateArrayIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

194:                                              ; preds = %178
  %195 = load atomic i32, i32* %170 monotonic, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %168, %196
  %198 = add i64 %197, 7
  %199 = inttoptr i64 %198 to i16*
  %200 = load atomic i16, i16* %199 monotonic, align 2
  %201 = add i16 %200, -1074
  %202 = icmp ult i16 %201, 3
  br i1 %202, label %211, label %203

203:                                              ; preds = %194
  %204 = load atomic i32, i32* %170 monotonic, align 4
  %205 = zext i32 %204 to i64
  %206 = or i64 %168, %205
  %207 = add i64 %206, 7
  %208 = inttoptr i64 %207 to i16*
  %209 = load atomic i16, i16* %208 monotonic, align 2
  %210 = icmp eq i16 %209, 1044
  br i1 %210, label %211, label %219

211:                                              ; preds = %194, %203
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 616
  %213 = load i64, i64* %212, align 8
  %214 = add i64 %213, 11
  %215 = inttoptr i64 %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, 2
  br i1 %217, label %218, label %550

218:                                              ; preds = %211
  tail call void @_ZN2v88internal10Protectors32InvalidateMapIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

219:                                              ; preds = %203
  %220 = load atomic i32, i32* %170 monotonic, align 4
  %221 = zext i32 %220 to i64
  %222 = or i64 %168, %221
  %223 = add i64 %222, 7
  %224 = inttoptr i64 %223 to i16*
  %225 = load atomic i16, i16* %224 monotonic, align 2
  %226 = add i16 %225, -1077
  %227 = icmp ult i16 %226, 2
  br i1 %227, label %236, label %228

228:                                              ; preds = %219
  %229 = load atomic i32, i32* %170 monotonic, align 4
  %230 = zext i32 %229 to i64
  %231 = or i64 %168, %230
  %232 = add i64 %231, 7
  %233 = inttoptr i64 %232 to i16*
  %234 = load atomic i16, i16* %233 monotonic, align 2
  %235 = icmp eq i16 %234, 1048
  br i1 %235, label %236, label %244

236:                                              ; preds = %219, %228
  %237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 618
  %238 = load i64, i64* %237, align 8
  %239 = add i64 %238, 11
  %240 = inttoptr i64 %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 2
  br i1 %242, label %243, label %550

243:                                              ; preds = %236
  tail call void @_ZN2v88internal10Protectors32InvalidateSetIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

244:                                              ; preds = %228
  %245 = load atomic i32, i32* %170 monotonic, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %168, %246
  %248 = add i64 %247, 7
  %249 = inttoptr i64 %248 to i16*
  %250 = load atomic i16, i16* %249 monotonic, align 2
  %251 = icmp eq i16 %250, 1108
  br i1 %251, label %260, label %252

252:                                              ; preds = %244
  %253 = load atomic i32, i32* %170 monotonic, align 4
  %254 = zext i32 %253 to i64
  %255 = or i64 %168, %254
  %256 = add i64 %255, 7
  %257 = inttoptr i64 %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = icmp eq i16 %258, 1050
  br i1 %259, label %260, label %550

260:                                              ; preds = %244, %252
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 619
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %262, 11
  %264 = inttoptr i64 %263 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 2
  br i1 %266, label %267, label %550

267:                                              ; preds = %260
  tail call void @_ZN2v88internal10Protectors35InvalidateStringIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

268:                                              ; preds = %162
  %269 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 516
  %270 = load i64, i64* %269, align 8
  %271 = trunc i64 %270 to i32
  %272 = icmp eq i32 %17, %271
  br i1 %272, label %273, label %341

273:                                              ; preds = %268
  %274 = and i64 %10, -4294967296
  %275 = add i64 %10, -1
  %276 = inttoptr i64 %275 to i32*
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = zext i32 %277 to i64
  %279 = or i64 %274, %278
  %280 = add i64 %279, 7
  %281 = inttoptr i64 %280 to i16*
  %282 = load atomic i16, i16* %281 monotonic, align 2
  %283 = icmp eq i16 %282, 1071
  br i1 %283, label %284, label %292

284:                                              ; preds = %273
  %285 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 607
  %286 = load i64, i64* %285, align 8
  %287 = add i64 %286, 11
  %288 = inttoptr i64 %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %289, 2
  br i1 %290, label %291, label %550

291:                                              ; preds = %284
  tail call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %0, i32 25) #6
  tail call void @_ZN2v88internal10Protectors33InvalidateArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

292:                                              ; preds = %273
  %293 = load atomic i32, i32* %276 monotonic, align 4
  %294 = zext i32 %293 to i64
  %295 = or i64 %274, %294
  %296 = add i64 %295, 7
  %297 = inttoptr i64 %296 to i16*
  %298 = load atomic i16, i16* %297 monotonic, align 2
  %299 = icmp eq i16 %298, 1072
  br i1 %299, label %300, label %308

300:                                              ; preds = %292
  %301 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 609
  %302 = load i64, i64* %301, align 8
  %303 = add i64 %302, 11
  %304 = inttoptr i64 %303 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = icmp eq i32 %305, 2
  br i1 %306, label %307, label %550

307:                                              ; preds = %300
  tail call void @_ZN2v88internal10Protectors35InvalidatePromiseSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

308:                                              ; preds = %292
  %309 = load atomic i32, i32* %276 monotonic, align 4
  %310 = zext i32 %309 to i64
  %311 = or i64 %274, %310
  %312 = add i64 %311, 7
  %313 = inttoptr i64 %312 to i16*
  %314 = load atomic i16, i16* %313 monotonic, align 2
  %315 = icmp eq i16 %314, 1073
  br i1 %315, label %316, label %324

316:                                              ; preds = %308
  %317 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 610
  %318 = load i64, i64* %317, align 8
  %319 = add i64 %318, 11
  %320 = inttoptr i64 %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = icmp eq i32 %321, 2
  br i1 %322, label %323, label %550

323:                                              ; preds = %316
  tail call void @_ZN2v88internal10Protectors34InvalidateRegExpSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

324:                                              ; preds = %308
  %325 = load atomic i32, i32* %276 monotonic, align 4
  %326 = zext i32 %325 to i64
  %327 = or i64 %274, %326
  %328 = add i64 %327, 7
  %329 = inttoptr i64 %328 to i16*
  %330 = load atomic i16, i16* %329 monotonic, align 2
  %331 = add i16 %330, -1060
  %332 = icmp ult i16 %331, 11
  br i1 %332, label %333, label %550

333:                                              ; preds = %324
  %334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 608
  %335 = load i64, i64* %334, align 8
  %336 = add i64 %335, 11
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = icmp eq i32 %338, 2
  br i1 %339, label %340, label %550

340:                                              ; preds = %333
  tail call void @_ZN2v88internal10Protectors38InvalidateTypedArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

341:                                              ; preds = %268
  %342 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 521
  %343 = load i64, i64* %342, align 8
  %344 = trunc i64 %343 to i32
  %345 = icmp eq i32 %17, %344
  br i1 %345, label %346, label %354

346:                                              ; preds = %341
  %347 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 606
  %348 = load i64, i64* %347, align 8
  %349 = add i64 %348, 11
  %350 = inttoptr i64 %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 2
  br i1 %352, label %353, label %550

353:                                              ; preds = %346
  tail call void @_ZN2v88internal10Protectors39InvalidateIsConcatSpreadableLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 510
  %356 = load i64, i64* %355, align 8
  %357 = trunc i64 %356 to i32
  %358 = icmp eq i32 %17, %357
  br i1 %358, label %359, label %482

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %361 = load i64, i64* %360, align 8
  %362 = add i64 %10, -1
  %363 = inttoptr i64 %362 to i32*
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i64 %361, 4294967295
  %366 = icmp eq i64 %365, 0
  tail call void @llvm.assume(i1 %366) #6
  %367 = zext i32 %364 to i64
  %368 = or i64 %361, %367
  %369 = add i64 %368, 7
  %370 = inttoptr i64 %369 to i16*
  %371 = load atomic i16, i16* %370 monotonic, align 2
  %372 = icmp eq i16 %371, 1085
  br i1 %372, label %373, label %381

373:                                              ; preds = %359
  %374 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 612
  %375 = load i64, i64* %374, align 8
  %376 = add i64 %375, 11
  %377 = inttoptr i64 %376 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = icmp eq i32 %378, 2
  br i1 %379, label %380, label %550

380:                                              ; preds = %373
  tail call void @_ZN2v88internal10Protectors34InvalidateArrayIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

381:                                              ; preds = %359
  %382 = load atomic i32, i32* %363 monotonic, align 4
  %383 = zext i32 %382 to i64
  %384 = or i64 %361, %383
  %385 = add i64 %384, 7
  %386 = inttoptr i64 %385 to i16*
  %387 = load atomic i16, i16* %386 monotonic, align 2
  %388 = icmp eq i16 %387, 1082
  br i1 %388, label %415, label %389

389:                                              ; preds = %381
  %390 = and i64 %10, -4294967296
  %391 = load atomic i32, i32* %363 monotonic, align 4
  %392 = zext i32 %391 to i64
  %393 = or i64 %390, %392
  %394 = add i64 %393, 7
  %395 = inttoptr i64 %394 to i16*
  %396 = load atomic i16, i16* %395 monotonic, align 2
  %397 = add i16 %396, -1077
  %398 = icmp ult i16 %397, 2
  br i1 %398, label %415, label %399

399:                                              ; preds = %389
  %400 = load atomic i32, i32* %363 monotonic, align 4
  %401 = zext i32 %400 to i64
  %402 = or i64 %390, %401
  %403 = add i64 %402, 7
  %404 = inttoptr i64 %403 to i16*
  %405 = load atomic i16, i16* %404 monotonic, align 2
  %406 = icmp eq i16 %405, 1048
  br i1 %406, label %415, label %407

407:                                              ; preds = %399
  %408 = load atomic i32, i32* %363 monotonic, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %390, %409
  %411 = add i64 %410, 7
  %412 = inttoptr i64 %411 to i16*
  %413 = load atomic i16, i16* %412 monotonic, align 2
  %414 = icmp eq i16 %413, 1049
  br i1 %414, label %415, label %423

415:                                              ; preds = %381, %389, %399, %407
  %416 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 618
  %417 = load i64, i64* %416, align 8
  %418 = add i64 %417, 11
  %419 = inttoptr i64 %418 to i32*
  %420 = load i32, i32* %419, align 4
  %421 = icmp eq i32 %420, 2
  br i1 %421, label %422, label %550

422:                                              ; preds = %415
  tail call void @_ZN2v88internal10Protectors32InvalidateSetIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

423:                                              ; preds = %407
  %424 = load atomic i32, i32* %363 monotonic, align 4
  %425 = zext i32 %424 to i64
  %426 = or i64 %390, %425
  %427 = add i64 %426, 7
  %428 = inttoptr i64 %427 to i16*
  %429 = load atomic i16, i16* %428 monotonic, align 2
  %430 = add i16 %429, -1074
  %431 = icmp ult i16 %430, 3
  br i1 %431, label %440, label %432

432:                                              ; preds = %423
  %433 = load atomic i32, i32* %363 monotonic, align 4
  %434 = zext i32 %433 to i64
  %435 = or i64 %390, %434
  %436 = add i64 %435, 7
  %437 = inttoptr i64 %436 to i16*
  %438 = load atomic i16, i16* %437 monotonic, align 2
  %439 = icmp eq i16 %438, 1044
  br i1 %439, label %440, label %448

440:                                              ; preds = %423, %432
  %441 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 616
  %442 = load i64, i64* %441, align 8
  %443 = add i64 %442, 11
  %444 = inttoptr i64 %443 to i32*
  %445 = load i32, i32* %444, align 4
  %446 = icmp eq i32 %445, 2
  br i1 %446, label %447, label %550

447:                                              ; preds = %440
  tail call void @_ZN2v88internal10Protectors32InvalidateMapIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

448:                                              ; preds = %432
  %449 = load atomic i32, i32* %363 monotonic, align 4
  %450 = zext i32 %449 to i64
  %451 = or i64 %390, %450
  %452 = add i64 %451, 7
  %453 = inttoptr i64 %452 to i16*
  %454 = load atomic i16, i16* %453 monotonic, align 2
  %455 = icmp eq i16 %454, 1043
  br i1 %455, label %456, label %472

456:                                              ; preds = %448
  %457 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 616
  %458 = load i64, i64* %457, align 8
  %459 = add i64 %458, 11
  %460 = inttoptr i64 %459 to i32*
  %461 = load i32, i32* %460, align 4
  %462 = icmp eq i32 %461, 2
  br i1 %462, label %463, label %464

463:                                              ; preds = %456
  tail call void @_ZN2v88internal10Protectors32InvalidateMapIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %464

464:                                              ; preds = %463, %456
  %465 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 618
  %466 = load i64, i64* %465, align 8
  %467 = add i64 %466, 11
  %468 = inttoptr i64 %467 to i32*
  %469 = load i32, i32* %468, align 4
  %470 = icmp eq i32 %469, 2
  br i1 %470, label %471, label %550

471:                                              ; preds = %464
  tail call void @_ZN2v88internal10Protectors32InvalidateSetIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

472:                                              ; preds = %448
  %473 = tail call zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"* %0, i64 %10, i32 91) #6
  br i1 %473, label %474, label %550

474:                                              ; preds = %472
  %475 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 619
  %476 = load i64, i64* %475, align 8
  %477 = add i64 %476, 11
  %478 = inttoptr i64 %477 to i32*
  %479 = load i32, i32* %478, align 4
  %480 = icmp eq i32 %479, 2
  br i1 %480, label %481, label %550

481:                                              ; preds = %474
  tail call void @_ZN2v88internal10Protectors35InvalidateStringIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

482:                                              ; preds = %354
  %483 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 420
  %484 = load i64, i64* %483, align 8
  %485 = trunc i64 %484 to i32
  %486 = icmp eq i32 %17, %485
  br i1 %486, label %487, label %506

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 615
  %489 = load i64, i64* %488, align 8
  %490 = add i64 %489, 11
  %491 = inttoptr i64 %490 to i32*
  %492 = load i32, i32* %491, align 4
  %493 = icmp eq i32 %492, 2
  br i1 %493, label %494, label %550

494:                                              ; preds = %487
  %495 = and i64 %10, -4294967296
  %496 = add i64 %10, -1
  %497 = inttoptr i64 %496 to i32*
  %498 = load atomic i32, i32* %497 monotonic, align 4
  %499 = zext i32 %498 to i64
  %500 = or i64 %495, %499
  %501 = add i64 %500, 7
  %502 = inttoptr i64 %501 to i16*
  %503 = load atomic i16, i16* %502 monotonic, align 2
  %504 = icmp eq i16 %503, 1072
  br i1 %504, label %505, label %550

505:                                              ; preds = %494
  tail call void @_ZN2v88internal10Protectors35InvalidatePromiseResolveLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

506:                                              ; preds = %482
  %507 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 447
  %508 = load i64, i64* %507, align 8
  %509 = trunc i64 %508 to i32
  %510 = icmp eq i32 %17, %509
  br i1 %510, label %511, label %550

511:                                              ; preds = %506
  %512 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 617
  %513 = load i64, i64* %512, align 8
  %514 = add i64 %513, 11
  %515 = inttoptr i64 %514 to i32*
  %516 = load i32, i32* %515, align 4
  %517 = icmp eq i32 %516, 2
  br i1 %517, label %518, label %550

518:                                              ; preds = %511
  %519 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %520 = load i64, i64* %519, align 8
  %521 = add i64 %10, -1
  %522 = inttoptr i64 %521 to i32*
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = and i64 %520, 4294967295
  %525 = icmp eq i64 %524, 0
  tail call void @llvm.assume(i1 %525) #6
  %526 = zext i32 %523 to i64
  %527 = or i64 %520, %526
  %528 = add i64 %527, 7
  %529 = inttoptr i64 %528 to i16*
  %530 = load atomic i16, i16* %529 monotonic, align 2
  %531 = icmp eq i16 %530, 1101
  br i1 %531, label %549, label %532

532:                                              ; preds = %518
  %533 = and i64 %10, -4294967296
  %534 = load atomic i32, i32* %522 monotonic, align 4
  %535 = zext i32 %534 to i64
  %536 = or i64 %533, %535
  %537 = add i64 %536, 7
  %538 = inttoptr i64 %537 to i16*
  %539 = load atomic i16, i16* %538 monotonic, align 2
  %540 = icmp eq i16 %539, 1045
  br i1 %540, label %549, label %541

541:                                              ; preds = %532
  %542 = load atomic i32, i32* %522 monotonic, align 4
  %543 = zext i32 %542 to i64
  %544 = or i64 %533, %543
  %545 = add i64 %544, 7
  %546 = inttoptr i64 %545 to i16*
  %547 = load atomic i16, i16* %546 monotonic, align 2
  %548 = icmp eq i16 %547, 1046
  br i1 %548, label %549, label %550

549:                                              ; preds = %518, %532, %541
  tail call void @_ZN2v88internal10Protectors32InvalidatePromiseThenLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %550

550:                                              ; preds = %90, %9, %3, %41, %57, %73, %89, %34, %50, %66, %82, %186, %211, %236, %260, %284, %300, %316, %333, %346, %373, %474, %487, %511, %218, %252, %267, %243, %193, %353, %505, %494, %541, %549, %506, %380, %447, %440, %472, %481, %464, %471, %415, %422, %291, %323, %340, %324, %307, %109, %145, %161, %146, %129, %102, %122, %138, %154
  ret void
}

declare void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors33InvalidateArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors35InvalidatePromiseSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors34InvalidateRegExpSpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors38InvalidateTypedArraySpeciesLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal7Isolate14IsInAnyContextENS0_6ObjectEj(%"class.v8::internal::Isolate"*, i64, i32) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors34InvalidateArrayIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors32InvalidateMapIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors32InvalidateSetIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors35InvalidateStringIteratorLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors39InvalidateIsConcatSpreadableLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors35InvalidatePromiseResolveLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal10Protectors32InvalidatePromiseThenLookupChainEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator22PrepareForDataPropertyENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %9, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #6
  %15 = zext i32 %12 to i64
  %16 = or i64 %9, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = icmp eq i16 %19, 188
  br i1 %20, label %307, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, 4294967295
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = icmp eq i64 %23, -1
  br i1 %26, label %81, label %27

27:                                               ; preds = %25
  %28 = and i64 %5, -4294967296
  %29 = load atomic i32, i32* %11 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %28, %30
  %32 = add i64 %31, 10
  %33 = inttoptr i64 %32 to i8*
  %34 = load i8, i8* %33, align 1
  %35 = lshr i8 %34, 2
  %36 = add nsw i8 %35, -17
  %37 = icmp ult i8 %36, 22
  br i1 %37, label %38, label %81

38:                                               ; preds = %21, %27
  %39 = load atomic i32, i32* %11 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %9, %40
  %42 = add i64 %41, 10
  %43 = inttoptr i64 %42 to i8*
  %44 = load i8, i8* %43, align 1
  %45 = lshr i8 %44, 2
  %46 = load i64, i64* %1, align 8
  %47 = and i64 %46, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %38
  %50 = add i64 %46, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %9, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp eq i16 %57, 66
  %59 = select i1 %58, i8 4, i8 2
  br label %60

60:                                               ; preds = %38, %49
  %61 = phi i8 [ %59, %49 ], [ 0, %38 ]
  %62 = and i8 %44, 4
  %63 = icmp ne i8 %62, 0
  %64 = icmp ult i8 %44, 24
  %65 = and i1 %64, %63
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  switch i8 %61, label %69 [
    i8 0, label %70
    i8 4, label %67
    i8 2, label %68
  ]

67:                                               ; preds = %66
  br label %70

68:                                               ; preds = %66
  br label %70

69:                                               ; preds = %66
  br label %70

70:                                               ; preds = %69, %68, %67, %66, %60
  %71 = phi i8 [ %61, %60 ], [ 5, %67 ], [ 3, %68 ], [ %61, %69 ], [ 1, %66 ]
  %72 = tail call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %45, i8 zeroext %71) #6
  %73 = select i1 %72, i8 %71, i8 %45
  %74 = icmp eq i8 %45, %73
  br i1 %74, label %76, label %75

75:                                               ; preds = %70
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %4, i8 zeroext %73) #6
  br label %76

76:                                               ; preds = %70, %75
  %77 = icmp ult i8 %73, 4
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = and i8 %73, -2
  switch i8 %79, label %307 [
    i8 8, label %80
    i8 6, label %80
  ]

80:                                               ; preds = %78, %78, %76
  tail call void @_ZN2v88internal8JSObject26EnsureWritableFastElementsENS0_6HandleIS1_EE(i64* %4) #6
  br label %307

81:                                               ; preds = %25, %27
  %82 = load atomic i32, i32* %11 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %9, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp eq i16 %87, 189
  br i1 %88, label %89, label %164

89:                                               ; preds = %81
  %90 = add i64 %5, 3
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 acquire, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %9, %93
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 31, i32 4
  %97 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %96, align 8
  %98 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %89
  %100 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %97, i64 %94) #6
  %101 = load i64, i64* %100, align 8
  br label %115

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 31, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 31, i32 1
  %106 = load i64*, i64** %105, align 8
  %107 = icmp eq i64* %104, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %95) #6
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi i64* [ %109, %108 ], [ %104, %102 ]
  %112 = ptrtoint i64* %111 to i64
  %113 = add i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  store i64* %114, i64** %103, align 8
  store i64 %94, i64* %111, align 8
  br label %115

115:                                              ; preds = %99, %110
  %116 = phi i64 [ %101, %99 ], [ %94, %110 ]
  %117 = phi i64* [ %100, %99 ], [ %111, %110 ]
  %118 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 0, i32 4
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = trunc i64 %122 to i32
  %124 = shl i32 %123, 2
  %125 = add i32 %124, 20
  %126 = sext i32 %125 to i64
  %127 = add i64 %116, 7
  %128 = add i64 %127, %126
  %129 = inttoptr i64 %128 to i32*
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i64 %120, 4294967295
  %132 = icmp eq i64 %131, 0
  tail call void @llvm.assume(i1 %132) #6
  %133 = zext i32 %130 to i64
  %134 = or i64 %120, %133
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 4
  %136 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %135, align 8
  %137 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %115
  %139 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %136, i64 %134) #6
  %140 = load i64, i64* %139, align 8
  br label %154

141:                                              ; preds = %115
  %142 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 0
  %143 = load i64*, i64** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %118, i64 0, i32 31, i32 1
  %145 = load i64*, i64** %144, align 8
  %146 = icmp eq i64* %143, %145
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %118) #6
  br label %149

149:                                              ; preds = %147, %141
  %150 = phi i64* [ %148, %147 ], [ %143, %141 ]
  %151 = ptrtoint i64* %150 to i64
  %152 = add i64 %151, 8
  %153 = inttoptr i64 %152 to i64*
  store i64* %153, i64** %142, align 8
  store i64 %134, i64* %150, align 8
  br label %154

154:                                              ; preds = %138, %149
  %155 = phi i64 [ %140, %138 ], [ %134, %149 ]
  %156 = add i64 %155, 7
  %157 = inttoptr i64 %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = ashr i32 %158, 1
  %160 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %159, i32* %160, align 8
  %161 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %162 = load i64, i64* %121, align 8
  %163 = tail call i64* @_ZN2v88internal12PropertyCell21PrepareForAndSetValueEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %161, i64* %117, i64 %162, i64* %1, i32 %159) #6
  br label %307

164:                                              ; preds = %81
  %165 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %188, label %169

169:                                              ; preds = %164
  %170 = load atomic i32, i32* %11 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %9, %171
  %173 = add i64 %172, 11
  %174 = inttoptr i64 %173 to i32*
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2097152
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %169
  %179 = load i64, i64* %1, align 8
  %180 = tail call zeroext i1 @_ZNK2v88internal14LookupIterator24IsConstFieldValueEqualToENS0_6ObjectE(%"class.v8::internal::LookupIterator"* %0, i64 %179)
  %181 = zext i1 %180 to i32
  %182 = load i64, i64* %4, align 8
  %183 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %183, i64 0, i32 0, i32 4
  %185 = load i64, i64* %184, align 8
  %186 = add i64 %182, -1
  %187 = inttoptr i64 %186 to i32*
  br label %188

188:                                              ; preds = %164, %178, %169
  %189 = phi i32* [ %11, %164 ], [ %187, %178 ], [ %11, %169 ]
  %190 = phi i64 [ %9, %164 ], [ %185, %178 ], [ %9, %169 ]
  %191 = phi %"class.v8::internal::Isolate"* [ %7, %164 ], [ %183, %178 ], [ %7, %169 ]
  %192 = phi i32 [ 1, %164 ], [ %181, %178 ], [ 1, %169 ]
  %193 = load atomic i32, i32* %189 monotonic, align 4
  %194 = and i64 %190, 4294967295
  %195 = icmp eq i64 %194, 0
  tail call void @llvm.assume(i1 %195) #6
  %196 = zext i32 %193 to i64
  %197 = or i64 %190, %196
  %198 = add i64 %197, 11
  %199 = inttoptr i64 %198 to i32*
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2097152
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %307

203:                                              ; preds = %188
  %204 = load atomic i32, i32* %189 monotonic, align 4
  %205 = zext i32 %204 to i64
  %206 = or i64 %190, %205
  %207 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %191, i64 0, i32 31, i32 4
  %208 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %207, align 8
  %209 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %203
  %211 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %208, i64 %206) #6
  br label %225

212:                                              ; preds = %203
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %191, i64 0, i32 31, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %191, i64 0, i32 31, i32 1
  %216 = load i64*, i64** %215, align 8
  %217 = icmp eq i64* %214, %216
  br i1 %217, label %218, label %220

218:                                              ; preds = %212
  %219 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %191) #6
  br label %220

220:                                              ; preds = %218, %212
  %221 = phi i64* [ %219, %218 ], [ %214, %212 ]
  %222 = ptrtoint i64* %221 to i64
  %223 = add i64 %222, 8
  %224 = inttoptr i64 %223 to i64*
  store i64* %224, i64** %213, align 8
  store i64 %206, i64* %221, align 8
  br label %225

225:                                              ; preds = %210, %220
  %226 = phi i64* [ %211, %210 ], [ %221, %220 ]
  %227 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %228 = tail call i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %227, i64* %226) #6
  %229 = load i64, i64* %228, align 8
  %230 = add i64 %229, 11
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2097152
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %280

235:                                              ; preds = %225
  %236 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %237 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %238 = load i64, i64* %237, align 8
  %239 = tail call i64* @_ZN2v88internal3Map22PrepareForDataPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS0_13InternalIndexENS0_17PropertyConstnessENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %236, i64* %228, i64 %238, i32 %192, i64* %1) #6
  %240 = icmp eq i64* %226, %239
  br i1 %240, label %251, label %241

241:                                              ; preds = %235
  %242 = icmp eq i64* %226, null
  %243 = icmp eq i64* %239, null
  %244 = or i1 %242, %243
  br i1 %244, label %280, label %245

245:                                              ; preds = %241
  %246 = load i64, i64* %226, align 8
  %247 = load i64, i64* %239, align 8
  %248 = trunc i64 %246 to i32
  %249 = trunc i64 %247 to i32
  %250 = icmp eq i32 %248, %249
  br i1 %250, label %251, label %280

251:                                              ; preds = %235, %245
  %252 = load i32, i32* %165, align 8
  %253 = lshr i32 %252, 2
  %254 = and i32 %253, 1
  %255 = icmp ne i32 %254, %192
  %256 = and i32 %252, 448
  %257 = icmp eq i32 %256, 0
  %258 = or i1 %257, %255
  br i1 %258, label %259, label %307

259:                                              ; preds = %251
  %260 = load i64, i64* %239, align 8
  %261 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %261, i64 0, i32 0, i32 4
  %263 = load i64, i64* %262, align 8
  %264 = add i64 %260, 23
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = and i64 %263, 4294967295
  %268 = icmp eq i64 %267, 0
  tail call void @llvm.assume(i1 %268) #6
  %269 = zext i32 %266 to i64
  %270 = or i64 %263, %269
  %271 = load i64, i64* %237, align 8
  %272 = mul i64 %271, 51539607552
  %273 = add i64 %272, 68719476736
  %274 = ashr exact i64 %273, 32
  %275 = or i64 %274, 3
  %276 = add i64 %275, %270
  %277 = inttoptr i64 %276 to i32*
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = ashr i32 %278, 1
  store i32 %279, i32* %165, align 8
  br label %307

280:                                              ; preds = %225, %241, %245
  %281 = phi i64* [ %228, %225 ], [ %239, %245 ], [ %239, %241 ]
  %282 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %282, i64* %4, i64* %281, i32 0) #6
  %283 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %283, align 4
  %284 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %284, align 4
  %285 = load i64*, i64** %3, align 8
  %286 = load i64, i64* %285, align 8
  %287 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %288 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %287, i64 0, i32 0, i32 4
  %289 = load i64, i64* %288, align 8
  %290 = add i64 %286, -1
  %291 = inttoptr i64 %290 to i32*
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i64 %289, 4294967295
  %294 = icmp eq i64 %293, 0
  tail call void @llvm.assume(i1 %294) #6
  %295 = zext i32 %292 to i64
  %296 = or i64 %289, %295
  %297 = add i64 %296, 7
  %298 = inttoptr i64 %297 to i16*
  %299 = load atomic i16, i16* %298 monotonic, align 2
  %300 = icmp ult i16 %299, 1041
  br i1 %300, label %301, label %303

301:                                              ; preds = %280
  %302 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %296, i64 %286) #6
  br label %305

303:                                              ; preds = %280
  %304 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %296, i64 %286) #6
  br label %305

305:                                              ; preds = %301, %303
  %306 = phi i32 [ %302, %301 ], [ %304, %303 ]
  store i32 %306, i32* %283, align 4
  br label %307

307:                                              ; preds = %251, %78, %305, %259, %80, %188, %2, %154
  ret void
}

declare void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject26EnsureWritableFastElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal12PropertyCell21PrepareForAndSetValueEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i64, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal14LookupIterator24IsConstFieldValueEqualToENS0_6ObjectE(%"class.v8::internal::LookupIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 3
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %1 to i32
  %9 = trunc i64 %7 to i32
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %327, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %16, 4294967295
  %21 = icmp eq i64 %20, 0
  tail call void @llvm.assume(i1 %21) #6
  %22 = zext i32 %19 to i64
  %23 = or i64 %16, %22
  %24 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %23, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %16, %29
  %31 = mul i64 %25, 51539607552
  %32 = add i64 %31, 68719476736
  %33 = ashr exact i64 %32, 32
  %34 = or i64 %33, 3
  %35 = add i64 %34, %30
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = ashr i32 %37, 1
  %39 = lshr i32 %38, 19
  %40 = and i32 %39, 1023
  %41 = lshr i32 %38, 6
  %42 = trunc i32 %41 to i8
  %43 = and i8 %42, 7
  %44 = add i64 %23, 3
  %45 = inttoptr i64 %44 to i8*
  %46 = load atomic i8, i8* %45 monotonic, align 1
  %47 = zext i8 %46 to i32
  %48 = add i64 %23, 4
  %49 = inttoptr i64 %48 to i8*
  %50 = load atomic i8, i8* %49 monotonic, align 1
  %51 = zext i8 %50 to i32
  %52 = sub nsw i32 %47, %51
  %53 = icmp slt i32 %40, %52
  br i1 %53, label %54, label %62

54:                                               ; preds = %11
  %55 = load atomic i8, i8* %49 monotonic, align 1
  %56 = zext i8 %55 to i64
  %57 = shl nuw nsw i64 %56, 28
  %58 = load atomic i8, i8* %49 monotonic, align 1
  %59 = zext i8 %58 to i32
  %60 = add nuw nsw i32 %40, %59
  %61 = shl nuw nsw i32 %60, 2
  br label %66

62:                                               ; preds = %11
  %63 = sub nsw i32 %40, %52
  %64 = shl nsw i32 %63, 2
  %65 = add nsw i32 %64, 8
  br label %66

66:                                               ; preds = %62, %54
  %67 = phi i32 [ %61, %54 ], [ %65, %62 ]
  %68 = phi i64 [ %57, %54 ], [ 536870912, %62 ]
  %69 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %69) #6
  store i8 %43, i8* %69, align 1
  %70 = icmp ult i8 %43, 5
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  %72 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %72) #6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

73:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %69) #6
  %74 = zext i1 %53 to i64
  %75 = shl nuw nsw i64 %74, 13
  %76 = sext i32 %67 to i64
  %77 = sext i32 %52 to i64
  %78 = shl nsw i64 %77, 16
  %79 = or i64 %75, %78
  %80 = or i64 %79, %76
  %81 = or i64 %80, %68
  %82 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 448
  %85 = icmp eq i32 %84, 128
  br i1 %85, label %86, label %196

86:                                               ; preds = %73
  %87 = and i64 %1, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %99, label %89

89:                                               ; preds = %86
  %90 = add i64 %1, -1
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %16, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = icmp eq i16 %97, 66
  br i1 %98, label %99, label %327

99:                                               ; preds = %86, %89
  %100 = and i64 %80, 8192
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = and i64 %76, 8191
  %104 = add i64 %17, %103
  %105 = inttoptr i64 %104 to i32*
  br label %167

106:                                              ; preds = %99
  %107 = add i64 %14, 3
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = or i64 %16, %110
  %112 = and i64 %110, 1
  %113 = icmp eq i64 %112, 0
  %114 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %113, label %137, label %115

115:                                              ; preds = %106
  %116 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %114, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %114, i64 0, i32 0, i32 1
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %114, i64 0, i32 1, i64 0
  br label %131

123:                                              ; preds = %117, %115
  %124 = and i64 %14, -262144
  %125 = or i64 %124, 16
  %126 = inttoptr i64 %125 to i64*
  %127 = load i64, i64* %126, align 16
  %128 = add i64 %127, -41416
  %129 = inttoptr i64 %128 to %"class.v8::internal::Isolate"*
  %130 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %129, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %131

131:                                              ; preds = %123, %121
  %132 = phi i64* [ %130, %123 ], [ %122, %121 ]
  %133 = getelementptr inbounds i64, i64* %132, i64 29
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = icmp eq i32 %109, %135
  br i1 %136, label %137, label %157

137:                                              ; preds = %131, %106
  %138 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %114, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %114, i64 0, i32 0, i32 1
  %141 = load i8, i8* %140, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %145, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %114, i64 0, i32 1, i64 0
  br label %153

145:                                              ; preds = %139, %137
  %146 = and i64 %14, -262144
  %147 = or i64 %146, 16
  %148 = inttoptr i64 %147 to i64*
  %149 = load i64, i64* %148, align 16
  %150 = add i64 %149, -41416
  %151 = inttoptr i64 %150 to %"class.v8::internal::Isolate"*
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %151, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %153

153:                                              ; preds = %145, %143
  %154 = phi i64* [ %152, %145 ], [ %144, %143 ]
  %155 = getelementptr inbounds i64, i64* %154, i64 106
  %156 = load i64, i64* %155, align 8
  br label %157

157:                                              ; preds = %153, %131
  %158 = phi i64 [ %156, %153 ], [ %111, %131 ]
  %159 = lshr i64 %81, 26
  %160 = and i64 %159, 124
  %161 = and i64 %76, 8188
  %162 = add nuw nsw i64 %161, 7
  %163 = sub nsw i64 %162, %160
  %164 = add i64 %163, %158
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  br label %167

167:                                              ; preds = %102, %157
  %168 = phi i32* [ %105, %102 ], [ %165, %157 ]
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = or i64 %16, %170
  %172 = add i64 %171, 3
  %173 = inttoptr i64 %172 to i64*
  %174 = load i64, i64* %173, align 1
  %175 = icmp eq i64 %174, -2251799814209537
  br i1 %175, label %327, label %176

176:                                              ; preds = %167
  %177 = bitcast i64 %174 to double
  br i1 %88, label %178, label %181

178:                                              ; preds = %176
  %179 = ashr i32 %8, 1
  %180 = sitofp i32 %179 to double
  br label %185

181:                                              ; preds = %176
  %182 = add i64 %1, 3
  %183 = inttoptr i64 %182 to double*
  %184 = load double, double* %183, align 1
  br label %185

185:                                              ; preds = %178, %181
  %186 = phi double [ %180, %178 ], [ %184, %181 ]
  %187 = fcmp une double %186, %177
  br i1 %187, label %188, label %192

188:                                              ; preds = %185
  %189 = fcmp uno double %177, 0.000000e+00
  br i1 %189, label %190, label %327

190:                                              ; preds = %188
  %191 = fcmp uno double %186, 0.000000e+00
  br label %327

192:                                              ; preds = %185
  %193 = bitcast double %186 to i64
  %194 = xor i64 %174, %193
  %195 = icmp sgt i64 %194, -1
  br label %327

196:                                              ; preds = %73
  %197 = and i64 %80, 8192
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %203, label %199

199:                                              ; preds = %196
  %200 = and i64 %76, 8191
  %201 = add i64 %17, %200
  %202 = inttoptr i64 %201 to i32*
  br label %264

203:                                              ; preds = %196
  %204 = add i64 %14, 3
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %16, %207
  %209 = and i64 %207, 1
  %210 = icmp eq i64 %209, 0
  %211 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %210, label %234, label %212

212:                                              ; preds = %203
  %213 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %211, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %211, i64 0, i32 0, i32 1
  %216 = load i8, i8* %215, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %211, i64 0, i32 1, i64 0
  br label %228

220:                                              ; preds = %214, %212
  %221 = and i64 %14, -262144
  %222 = or i64 %221, 16
  %223 = inttoptr i64 %222 to i64*
  %224 = load i64, i64* %223, align 16
  %225 = add i64 %224, -41416
  %226 = inttoptr i64 %225 to %"class.v8::internal::Isolate"*
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %226, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %228

228:                                              ; preds = %220, %218
  %229 = phi i64* [ %227, %220 ], [ %219, %218 ]
  %230 = getelementptr inbounds i64, i64* %229, i64 29
  %231 = load i64, i64* %230, align 8
  %232 = trunc i64 %231 to i32
  %233 = icmp eq i32 %206, %232
  br i1 %233, label %234, label %254

234:                                              ; preds = %228, %203
  %235 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %211, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %234
  %237 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %211, i64 0, i32 0, i32 1
  %238 = load i8, i8* %237, align 8, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %211, i64 0, i32 1, i64 0
  br label %250

242:                                              ; preds = %236, %234
  %243 = and i64 %14, -262144
  %244 = or i64 %243, 16
  %245 = inttoptr i64 %244 to i64*
  %246 = load i64, i64* %245, align 16
  %247 = add i64 %246, -41416
  %248 = inttoptr i64 %247 to %"class.v8::internal::Isolate"*
  %249 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %248, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %250

250:                                              ; preds = %242, %240
  %251 = phi i64* [ %249, %242 ], [ %241, %240 ]
  %252 = getelementptr inbounds i64, i64* %251, i64 106
  %253 = load i64, i64* %252, align 8
  br label %254

254:                                              ; preds = %250, %228
  %255 = phi i64 [ %253, %250 ], [ %208, %228 ]
  %256 = lshr i64 %81, 26
  %257 = and i64 %256, 124
  %258 = and i64 %76, 8188
  %259 = add nuw nsw i64 %258, 7
  %260 = sub nsw i64 %259, %257
  %261 = add i64 %260, %255
  %262 = inttoptr i64 %261 to i32*
  %263 = load atomic i32, i32* %262 monotonic, align 4
  br label %264

264:                                              ; preds = %199, %254
  %265 = phi i32* [ %202, %199 ], [ %262, %254 ]
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i64
  %268 = or i64 %16, %267
  %269 = icmp eq i32 %266, %9
  %270 = icmp eq i32 %266, %8
  %271 = or i1 %269, %270
  br i1 %271, label %327, label %272

272:                                              ; preds = %264
  %273 = and i64 %267, 1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %285, label %275

275:                                              ; preds = %272
  %276 = add i64 %268, -1
  %277 = inttoptr i64 %276 to i32*
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = zext i32 %278 to i64
  %280 = or i64 %16, %279
  %281 = add i64 %280, 7
  %282 = inttoptr i64 %281 to i16*
  %283 = load atomic i16, i16* %282 monotonic, align 2
  %284 = icmp eq i16 %283, 66
  br i1 %284, label %285, label %327

285:                                              ; preds = %272, %275
  %286 = and i64 %1, 1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %298, label %288

288:                                              ; preds = %285
  %289 = add i64 %1, -1
  %290 = inttoptr i64 %289 to i32*
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = zext i32 %291 to i64
  %293 = or i64 %16, %292
  %294 = add i64 %293, 7
  %295 = inttoptr i64 %294 to i16*
  %296 = load atomic i16, i16* %295 monotonic, align 2
  %297 = icmp eq i16 %296, 66
  br i1 %297, label %298, label %327

298:                                              ; preds = %285, %288
  br i1 %274, label %299, label %302

299:                                              ; preds = %298
  %300 = ashr i32 %266, 1
  %301 = sitofp i32 %300 to double
  br label %306

302:                                              ; preds = %298
  %303 = add i64 %268, 3
  %304 = inttoptr i64 %303 to double*
  %305 = load double, double* %304, align 1
  br label %306

306:                                              ; preds = %299, %302
  %307 = phi double [ %301, %299 ], [ %305, %302 ]
  br i1 %287, label %308, label %311

308:                                              ; preds = %306
  %309 = ashr i32 %8, 1
  %310 = sitofp i32 %309 to double
  br label %315

311:                                              ; preds = %306
  %312 = add i64 %1, 3
  %313 = inttoptr i64 %312 to double*
  %314 = load double, double* %313, align 1
  br label %315

315:                                              ; preds = %308, %311
  %316 = phi double [ %310, %308 ], [ %314, %311 ]
  %317 = fcmp une double %307, %316
  br i1 %317, label %318, label %322

318:                                              ; preds = %315
  %319 = fcmp uno double %307, 0.000000e+00
  br i1 %319, label %320, label %327

320:                                              ; preds = %318
  %321 = fcmp uno double %316, 0.000000e+00
  br label %327

322:                                              ; preds = %315
  %323 = bitcast double %307 to i64
  %324 = bitcast double %316 to i64
  %325 = xor i64 %324, %323
  %326 = icmp sgt i64 %325, -1
  br label %327

327:                                              ; preds = %89, %192, %190, %188, %167, %322, %320, %318, %275, %288, %264, %2
  %328 = phi i1 [ true, %2 ], [ false, %89 ], [ true, %167 ], [ %195, %192 ], [ false, %188 ], [ %191, %190 ], [ true, %264 ], [ false, %288 ], [ false, %275 ], [ %326, %322 ], [ false, %318 ], [ %321, %320 ]
  ret i1 %328
}

declare i64* @_ZN2v88internal3Map6UpdateEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map22PrepareForDataPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS0_13InternalIndexENS0_17PropertyConstnessENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator23ReconfigureDataPropertyENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %7, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %11, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #6
  %17 = zext i32 %14 to i64
  %18 = or i64 %11, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 188
  br i1 %22, label %389, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, 4294967295
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = icmp eq i64 %25, -1
  br i1 %28, label %115, label %29

29:                                               ; preds = %27
  %30 = and i64 %7, -4294967296
  %31 = load atomic i32, i32* %13 monotonic, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %30, %32
  %34 = add i64 %33, 10
  %35 = inttoptr i64 %34 to i8*
  %36 = load i8, i8* %35, align 1
  %37 = lshr i8 %36, 2
  %38 = add nsw i8 %37, -17
  %39 = icmp ult i8 %38, 22
  br i1 %39, label %40, label %115

40:                                               ; preds = %23, %29
  %41 = add i64 %7, 7
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %11, %44
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %47 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %46, align 8
  %48 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %40
  %50 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %47, i64 %45) #6
  br label %64

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %53, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #6
  br label %59

59:                                               ; preds = %57, %51
  %60 = phi i64* [ %58, %57 ], [ %53, %51 ]
  %61 = ptrtoint i64* %60 to i64
  %62 = add i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  store i64* %63, i64** %52, align 8
  store i64 %45, i64* %60, align 8
  br label %64

64:                                               ; preds = %49, %59
  %65 = phi i64* [ %50, %49 ], [ %60, %59 ]
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %67, i64 0, i32 0, i32 4
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %66, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i64 %69, 4294967295
  %74 = icmp eq i64 %73, 0
  tail call void @llvm.assume(i1 %74) #6
  %75 = zext i32 %72 to i64
  %76 = or i64 %69, %75
  %77 = add i64 %76, 10
  %78 = inttoptr i64 %77 to i8*
  %79 = load i8, i8* %78, align 1
  %80 = lshr i8 %79, 2
  %81 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %82 = zext i8 %80 to i64
  %83 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %81, i64 %82
  %84 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.v8::internal::ElementsAccessor"* %84 to void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)***
  %88 = load void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)**, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)*, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)** %88, i64 35
  %90 = load void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)*, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64*, i64, i64*, i32)** %89, align 8
  tail call void %90(%"class.v8::internal::ElementsAccessor"* %84, i64* %6, i64* %65, i64 %86, i64* %1, i32 %2) #6
  %91 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %92, align 4
  %93 = load i64*, i64** %5, align 8
  %94 = load i64, i64* %93, align 8
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 0, i32 4
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %94, -1
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i64 %97, 4294967295
  %102 = icmp eq i64 %101, 0
  tail call void @llvm.assume(i1 %102) #6
  %103 = zext i32 %100 to i64
  %104 = or i64 %97, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp ult i16 %107, 1041
  br i1 %108, label %109, label %111

109:                                              ; preds = %64
  %110 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %104, i64 %94) #6
  br label %113

111:                                              ; preds = %64
  %112 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %104, i64 %94) #6
  br label %113

113:                                              ; preds = %109, %111
  %114 = phi i32 [ %110, %109 ], [ %112, %111 ]
  store i32 %114, i32* %91, align 4
  br label %189

115:                                              ; preds = %27, %29
  %116 = load atomic i32, i32* %13 monotonic, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %11, %117
  %119 = add i64 %118, 11
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2097152
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %189

124:                                              ; preds = %115
  %125 = load atomic i32, i32* %13 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %11, %126
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %129 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %128, align 8
  %130 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %124
  %132 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %129, i64 %127) #6
  br label %146

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %135 = load i64*, i64** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %137 = load i64*, i64** %136, align 8
  %138 = icmp eq i64* %135, %137
  br i1 %138, label %139, label %141

139:                                              ; preds = %133
  %140 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #6
  br label %141

141:                                              ; preds = %139, %133
  %142 = phi i64* [ %140, %139 ], [ %135, %133 ]
  %143 = ptrtoint i64* %142 to i64
  %144 = add i64 %143, 8
  %145 = inttoptr i64 %144 to i64*
  store i64* %145, i64** %134, align 8
  store i64 %127, i64* %142, align 8
  br label %146

146:                                              ; preds = %131, %141
  %147 = phi i64* [ %132, %131 ], [ %142, %141 ]
  %148 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = tail call i64* @_ZN2v88internal10MapUpdater27ReconfigureExistingPropertyEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_12PropertyKindENS0_18PropertyAttributesENS0_17PropertyConstnessE(%"class.v8::internal::Isolate"* %148, i64* %147, i64 %150, i32 0, i32 %2, i32 0) #6
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 11
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2097152
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %146
  %159 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %160 = load i64, i64* %149, align 8
  %161 = tail call i64* @_ZN2v88internal3Map22PrepareForDataPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS0_13InternalIndexENS0_17PropertyConstnessENS4_INS0_6ObjectEEE(%"class.v8::internal::Isolate"* %159, i64* %151, i64 %160, i32 0, i64* %1) #6
  br label %162

162:                                              ; preds = %146, %158
  %163 = phi i64* [ %151, %146 ], [ %161, %158 ]
  %164 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %164, i64* %6, i64* %163, i32 0) #6
  %165 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %166, align 4
  %167 = load i64*, i64** %5, align 8
  %168 = load i64, i64* %167, align 8
  %169 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %169, i64 0, i32 0, i32 4
  %171 = load i64, i64* %170, align 8
  %172 = add i64 %168, -1
  %173 = inttoptr i64 %172 to i32*
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i64 %171, 4294967295
  %176 = icmp eq i64 %175, 0
  tail call void @llvm.assume(i1 %176) #6
  %177 = zext i32 %174 to i64
  %178 = or i64 %171, %177
  %179 = add i64 %178, 7
  %180 = inttoptr i64 %179 to i16*
  %181 = load atomic i16, i16* %180 monotonic, align 2
  %182 = icmp ult i16 %181, 1041
  br i1 %182, label %183, label %185

183:                                              ; preds = %162
  %184 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %178, i64 %168) #6
  br label %187

185:                                              ; preds = %162
  %186 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %178, i64 %168) #6
  br label %187

187:                                              ; preds = %183, %185
  %188 = phi i32 [ %184, %183 ], [ %186, %185 ]
  store i32 %188, i32* %165, align 4
  br label %189

189:                                              ; preds = %115, %187, %113
  %190 = load i64, i64* %6, align 8
  %191 = load i64, i64* %24, align 8
  %192 = icmp ult i64 %191, 4294967295
  br i1 %192, label %388, label %193

193:                                              ; preds = %189
  %194 = icmp eq i64 %191, -1
  br i1 %194, label %195, label %198

195:                                              ; preds = %193
  %196 = add i64 %190, -1
  %197 = inttoptr i64 %196 to i32*
  br label %211

198:                                              ; preds = %193
  %199 = and i64 %190, -4294967296
  %200 = add i64 %190, -1
  %201 = inttoptr i64 %200 to i32*
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = zext i32 %202 to i64
  %204 = or i64 %199, %203
  %205 = add i64 %204, 10
  %206 = inttoptr i64 %205 to i8*
  %207 = load i8, i8* %206, align 1
  %208 = lshr i8 %207, 2
  %209 = add nsw i8 %208, -17
  %210 = icmp ult i8 %209, 22
  br i1 %210, label %388, label %211

211:                                              ; preds = %195, %198
  %212 = phi i32* [ %197, %195 ], [ %201, %198 ]
  %213 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %214 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %213, i64 0, i32 0, i32 4
  %215 = load i64, i64* %214, align 8
  %216 = load atomic i32, i32* %212 monotonic, align 4
  %217 = and i64 %215, 4294967295
  %218 = icmp eq i64 %217, 0
  tail call void @llvm.assume(i1 %218) #6
  %219 = zext i32 %216 to i64
  %220 = or i64 %215, %219
  %221 = add i64 %220, 11
  %222 = inttoptr i64 %221 to i32*
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2097152
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %388, label %226

226:                                              ; preds = %211
  %227 = load atomic i32, i32* %212 monotonic, align 4
  %228 = zext i32 %227 to i64
  %229 = or i64 %215, %228
  %230 = add i64 %229, 11
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 acquire, align 4
  %233 = and i32 %232, 1048576
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %261, label %235

235:                                              ; preds = %226
  %236 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = and i32 %237, 8
  %239 = icmp ne i32 %238, 0
  %240 = and i32 %2, 1
  %241 = icmp eq i32 %240, 0
  %242 = or i1 %241, %239
  br i1 %242, label %243, label %248

243:                                              ; preds = %235
  %244 = lshr i32 %237, 3
  %245 = xor i32 %244, %2
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %261, label %248

248:                                              ; preds = %235, %243
  %249 = load i64, i64* %6, align 8
  %250 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %250, i64 0, i32 0, i32 4
  %252 = load i64, i64* %251, align 8
  %253 = add i64 %249, -1
  %254 = inttoptr i64 %253 to i32*
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i64 %252, 4294967295
  %257 = icmp eq i64 %256, 0
  tail call void @llvm.assume(i1 %257) #6
  %258 = zext i32 %255 to i64
  %259 = or i64 %252, %258
  %260 = tail call i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 %259) #6
  br label %261

261:                                              ; preds = %226, %243, %248
  %262 = load i64, i64* %6, align 8
  %263 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %264 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %263, i64 0, i32 0, i32 4
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %262, -1
  %267 = inttoptr i64 %266 to i32*
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i64 %265, 4294967295
  %270 = icmp eq i64 %269, 0
  tail call void @llvm.assume(i1 %270) #6
  %271 = zext i32 %268 to i64
  %272 = or i64 %265, %271
  %273 = add i64 %272, 7
  %274 = inttoptr i64 %273 to i16*
  %275 = load atomic i16, i16* %274 monotonic, align 2
  %276 = icmp eq i16 %275, 189
  %277 = shl i32 %2, 3
  %278 = add i64 %262, 3
  %279 = inttoptr i64 %278 to i32*
  br i1 %276, label %280, label %314

280:                                              ; preds = %261
  %281 = load atomic i32, i32* %279 acquire, align 4
  %282 = zext i32 %281 to i64
  %283 = or i64 %265, %282
  %284 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %284, i64 0, i32 31, i32 4
  %286 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %285, align 8
  %287 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %286, null
  br i1 %287, label %290, label %288

288:                                              ; preds = %280
  %289 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %286, i64 %283) #6
  br label %303

290:                                              ; preds = %280
  %291 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %284, i64 0, i32 31, i32 0
  %292 = load i64*, i64** %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %284, i64 0, i32 31, i32 1
  %294 = load i64*, i64** %293, align 8
  %295 = icmp eq i64* %292, %294
  br i1 %295, label %296, label %298

296:                                              ; preds = %290
  %297 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %284) #6
  br label %298

298:                                              ; preds = %296, %290
  %299 = phi i64* [ %297, %296 ], [ %292, %290 ]
  %300 = ptrtoint i64* %299 to i64
  %301 = add i64 %300, 8
  %302 = inttoptr i64 %301 to i64*
  store i64* %302, i64** %291, align 8
  store i64 %283, i64* %299, align 8
  br label %303

303:                                              ; preds = %288, %298
  %304 = phi i64* [ %289, %288 ], [ %299, %298 ]
  %305 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %306 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = tail call i64* @_ZN2v88internal12PropertyCell21PrepareForAndSetValueEPNS0_7IsolateENS0_6HandleINS0_16GlobalDictionaryEEENS0_13InternalIndexENS4_INS0_6ObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %305, i64* %304, i64 %307, i64* %1, i32 %277) #6
  %309 = load i64, i64* %308, align 8
  %310 = add i64 %309, 7
  %311 = inttoptr i64 %310 to i32*
  %312 = load i32, i32* %311, align 4
  %313 = ashr i32 %312, 1
  br label %384

314:                                              ; preds = %261
  %315 = load i32, i32* %279, align 4
  %316 = zext i32 %315 to i64
  %317 = or i64 %265, %316
  %318 = and i64 %316, 1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %341

320:                                              ; preds = %314
  %321 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %322 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %321, null
  br i1 %322, label %329, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %321, i64 0, i32 0, i32 1
  %325 = load i8, i8* %324, align 8, !range !2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %329, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %321, i64 0, i32 1, i64 0
  br label %337

329:                                              ; preds = %323, %320
  %330 = and i64 %262, -262144
  %331 = or i64 %330, 16
  %332 = inttoptr i64 %331 to i64*
  %333 = load i64, i64* %332, align 16
  %334 = add i64 %333, -41416
  %335 = inttoptr i64 %334 to %"class.v8::internal::Isolate"*
  %336 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %335, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %337

337:                                              ; preds = %329, %327
  %338 = phi i64* [ %336, %329 ], [ %328, %327 ]
  %339 = getelementptr inbounds i64, i64* %338, i64 115
  %340 = load i64, i64* %339, align 8
  br label %341

341:                                              ; preds = %314, %337
  %342 = phi i64 [ %340, %337 ], [ %317, %314 ]
  %343 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %263, i64 0, i32 31, i32 4
  %344 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %343, align 8
  %345 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %344, null
  br i1 %345, label %349, label %346

346:                                              ; preds = %341
  %347 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %344, i64 %342) #6
  %348 = load i64, i64* %347, align 8
  br label %362

349:                                              ; preds = %341
  %350 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %263, i64 0, i32 31, i32 0
  %351 = load i64*, i64** %350, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %263, i64 0, i32 31, i32 1
  %353 = load i64*, i64** %352, align 8
  %354 = icmp eq i64* %351, %353
  br i1 %354, label %355, label %357

355:                                              ; preds = %349
  %356 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %263) #6
  br label %357

357:                                              ; preds = %355, %349
  %358 = phi i64* [ %356, %355 ], [ %351, %349 ]
  %359 = ptrtoint i64* %358 to i64
  %360 = add i64 %359, 8
  %361 = inttoptr i64 %360 to i64*
  store i64* %361, i64** %350, align 8
  store i64 %342, i64* %358, align 8
  br label %362

362:                                              ; preds = %346, %357
  %363 = phi i64 [ %348, %346 ], [ %342, %357 ]
  %364 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %365 = load i64, i64* %364, align 8
  %366 = mul i64 %365, 51539607552
  %367 = add i64 %366, 120259084288
  %368 = ashr exact i64 %367, 32
  %369 = add i64 %363, 7
  %370 = add i64 %369, %368
  %371 = inttoptr i64 %370 to i32*
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = lshr i32 %372, 9
  %374 = and i32 %277, -2147483400
  %375 = shl nuw nsw i32 %373, 8
  %376 = or i32 %375, %374
  %377 = bitcast %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377) #6
  %378 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %363, i64* %378, align 8
  %379 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef", %"class.v8::internal::Handle<v8::internal::NameDictionary>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0
  %380 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %381 = load i64*, i64** %380, align 8
  %382 = load i64, i64* %381, align 8
  %383 = load i64, i64* %1, align 8
  call void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1195"* nonnull %379, i64 %365, i64 %382, i64 %383, i32 %376)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #6
  br label %384

384:                                              ; preds = %362, %303
  %385 = phi i32 [ %376, %362 ], [ %313, %303 ]
  %386 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %385, i32* %386, align 8
  %387 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 6, i32* %387, align 4
  br label %388

388:                                              ; preds = %189, %198, %211, %384
  call void @_ZN2v88internal14LookupIterator14WriteDataValueENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::LookupIterator"* %0, i64* %1, i1 zeroext undef)
  br label %389

389:                                              ; preds = %3, %388
  ret void
}

declare i64* @_ZN2v88internal10MapUpdater27ReconfigureExistingPropertyEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_12PropertyKindENS0_18PropertyAttributesENS0_17PropertyConstnessE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i32, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
declare void @_ZN2v88internal10DictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE8SetEntryENS0_13InternalIndexENS0_6ObjectES6_NS0_15PropertyDetailsE(%"class.v8::internal::Dictionary.1195"*, i64, i64, i64, i32) local_unnamed_addr #3 align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator14WriteDataValueENS0_6HandleINS0_6ObjectEEEb(%"class.v8::internal::LookupIterator"* nocapture readonly, i64*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::JSObject", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, 4294967295
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = add i64 %7, -1
  %13 = inttoptr i64 %12 to i32*
  br label %32

14:                                               ; preds = %3
  %15 = icmp eq i64 %9, -1
  br i1 %15, label %16, label %19

16:                                               ; preds = %14
  %17 = add i64 %7, -1
  %18 = inttoptr i64 %17 to i32*
  br label %58

19:                                               ; preds = %14
  %20 = and i64 %7, -4294967296
  %21 = add i64 %7, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %20, %24
  %26 = add i64 %25, 10
  %27 = inttoptr i64 %26 to i8*
  %28 = load i8, i8* %27, align 1
  %29 = lshr i8 %28, 2
  %30 = add nsw i8 %29, -17
  %31 = icmp ult i8 %30, 22
  br i1 %31, label %32, label %58

32:                                               ; preds = %11, %19
  %33 = phi i32* [ %13, %11 ], [ %22, %19 ]
  %34 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = load atomic i32, i32* %33 monotonic, align 4
  %39 = and i64 %37, 4294967295
  %40 = icmp eq i64 %39, 0
  tail call void @llvm.assume(i1 %40) #6
  %41 = zext i32 %38 to i64
  %42 = or i64 %37, %41
  %43 = add i64 %42, 10
  %44 = inttoptr i64 %43 to i8*
  %45 = load i8, i8* %44, align 1
  %46 = lshr i8 %45, 2
  %47 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %48 = zext i8 %46 to i64
  %49 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %47, i64 %48
  %50 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* %1, align 8
  %54 = bitcast %"class.v8::internal::ElementsAccessor"* %50 to void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)***
  %55 = load void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)**, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)*, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)** %55, i64 16
  %57 = load void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)*, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64, i64)** %56, align 8
  tail call void %57(%"class.v8::internal::ElementsAccessor"* %50, i64* %6, i64 %52, i64 %53) #6
  br label %159

58:                                               ; preds = %16, %19
  %59 = phi i32* [ %18, %16 ], [ %22, %19 ]
  %60 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %61, i64 0, i32 0, i32 4
  %63 = load i64, i64* %62, align 8
  %64 = load atomic i32, i32* %59 monotonic, align 4
  %65 = and i64 %63, 4294967295
  %66 = icmp eq i64 %65, 0
  tail call void @llvm.assume(i1 %66) #6
  %67 = zext i32 %64 to i64
  %68 = or i64 %63, %67
  %69 = add i64 %68, 11
  %70 = inttoptr i64 %69 to i32*
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2097152
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %159

79:                                               ; preds = %74
  %80 = bitcast %"class.v8::internal::JSObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #6
  %81 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %7, i64* %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = load i64, i64* %1, align 8
  call void @_ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE(%"class.v8::internal::JSObject"* nonnull %4, i64 %83, i32 %76, i64 %84)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #6
  br label %159

85:                                               ; preds = %58
  %86 = load atomic i32, i32* %59 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %63, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = icmp eq i16 %91, 189
  br i1 %92, label %159, label %93

93:                                               ; preds = %85
  %94 = add i64 %7, 3
  %95 = inttoptr i64 %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %63, %97
  %99 = and i64 %97, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %122

101:                                              ; preds = %93
  %102 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %103 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %102, i64 0, i32 0, i32 1
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %102, i64 0, i32 1, i64 0
  br label %118

110:                                              ; preds = %104, %101
  %111 = and i64 %7, -262144
  %112 = or i64 %111, 16
  %113 = inttoptr i64 %112 to i64*
  %114 = load i64, i64* %113, align 16
  %115 = add i64 %114, -41416
  %116 = inttoptr i64 %115 to %"class.v8::internal::Isolate"*
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %116, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %118

118:                                              ; preds = %110, %108
  %119 = phi i64* [ %117, %110 ], [ %109, %108 ]
  %120 = getelementptr inbounds i64, i64* %119, i64 115
  %121 = load i64, i64* %120, align 8
  br label %122

122:                                              ; preds = %93, %118
  %123 = phi i64 [ %121, %118 ], [ %98, %93 ]
  %124 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = load i64, i64* %1, align 8
  %127 = mul i64 %125, 51539607552
  %128 = add i64 %127, 103079215104
  %129 = ashr exact i64 %128, 32
  %130 = add i64 %123, 7
  %131 = add i64 %130, %129
  %132 = inttoptr i64 %131 to i32*
  %133 = trunc i64 %126 to i32
  store atomic volatile i32 %133, i32* %132 monotonic, align 4
  %134 = and i64 %126, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %159, label %136

136:                                              ; preds = %122
  %137 = and i64 %123, -262144
  %138 = or i64 %137, 8
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 262144
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %136
  %144 = or i64 %137, 16
  %145 = inttoptr i64 %144 to %"class.v8::internal::Heap"**
  %146 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %145, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %146, i64 %123, i64 %131, i64 %126) #6
  br label %147

147:                                              ; preds = %143, %136
  %148 = and i64 %126, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 24
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %147
  %155 = load i64, i64* %139, align 8
  %156 = and i64 %155, 24
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %154
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %123, i64 %131, i64 %126) #6
  br label %159

159:                                              ; preds = %158, %154, %147, %122, %74, %79, %85, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator31PrepareTransitionToDataPropertyENS0_6HandleINS0_10JSReceiverEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesENS0_11StoreOriginE(%"class.v8::internal::LookupIterator"* nocapture, i64*, i64*, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 7
  br i1 %8, label %155, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %18, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %15 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %15, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  br label %44

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %23 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 4
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %21, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i64 %25, 4294967295
  %30 = icmp eq i64 %29, 0
  tail call void @llvm.assume(i1 %30) #6
  %31 = zext i32 %28 to i64
  %32 = or i64 %25, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 64
  br i1 %36, label %37, label %44

37:                                               ; preds = %18
  %38 = add i64 %21, 7
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = shl i32 %40, 1
  %42 = and i32 %41, 2
  %43 = or i32 %42, %3
  br label %44

44:                                               ; preds = %13, %37, %18
  %45 = phi i64 [ %17, %13 ], [ %25, %18 ], [ %25, %37 ]
  %46 = phi %"class.v8::internal::Isolate"* [ %15, %13 ], [ %23, %18 ], [ %23, %37 ]
  %47 = phi i32 [ %3, %13 ], [ %3, %18 ], [ %43, %37 ]
  %48 = load i64, i64* %1, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %50 = add i64 %48, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i64 %45, 4294967295
  %54 = icmp eq i64 %53, 0
  tail call void @llvm.assume(i1 %54) #6
  %55 = zext i32 %52 to i64
  %56 = or i64 %45, %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %46, i64 0, i32 31, i32 4
  %58 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %57, align 8
  %59 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %44
  %61 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %58, i64 %56) #6
  %62 = load i64, i64* %61, align 8
  br label %76

63:                                               ; preds = %44
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %46, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %46, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %46) #6
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %56, i64* %72, align 8
  br label %76

76:                                               ; preds = %60, %71
  %77 = phi i64 [ %62, %60 ], [ %56, %71 ]
  %78 = phi i64* [ %61, %60 ], [ %72, %71 ]
  %79 = add i64 %77, 11
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2097152
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %112, label %84

84:                                               ; preds = %76
  store i32 7, i32* %6, align 4
  %85 = load i64, i64* %78, align 8
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp eq i16 %88, 189
  br i1 %89, label %90, label %106

90:                                               ; preds = %84
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %92 = tail call i32 @_ZN2v88internal12PropertyCell11InitialTypeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"* %91, i64* %2) #6
  %93 = shl i32 %47, 3
  %94 = shl i32 %92, 6
  %95 = or i32 %94, %93
  %96 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %95, i32* %96, align 8
  %97 = bitcast %"class.v8::internal::Isolate"** %49 to %"class.v8::internal::Factory"**
  %98 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = tail call i64* @_ZN2v88internal7Factory15NewPropertyCellENS0_6HandleINS0_4NameEEENS0_15PropertyDetailsENS2_INS0_6ObjectEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %98, i64* %100, i32 %95, i64* %2, i8 zeroext 1) #6
  %102 = ptrtoint i64* %101 to i64
  %103 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7
  %104 = bitcast %"class.v8::internal::Handle.1181"* %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %105, align 8
  br label %155

106:                                              ; preds = %84
  %107 = shl i32 %47, 3
  %108 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %107, i32* %108, align 8
  %109 = ptrtoint i64* %78 to i64
  %110 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7
  %111 = bitcast %"class.v8::internal::Handle.1181"* %110 to i64*
  store i64 %109, i64* %111, align 8
  br label %155

112:                                              ; preds = %76
  %113 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %114 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = tail call i64* @_ZN2v88internal3Map24TransitionToDataPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesENS0_17PropertyConstnessENS0_11StoreOriginE(%"class.v8::internal::Isolate"* %113, i64* %78, i64* %115, i64* %2, i32 %47, i32 1, i32 %4) #6
  store i32 7, i32* %6, align 4
  %117 = ptrtoint i64* %116 to i64
  %118 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7
  %119 = bitcast %"class.v8::internal::Handle.1181"* %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = load i64, i64* %116, align 8
  %121 = add i64 %120, 11
  %122 = inttoptr i64 %121 to i32*
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2097152
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %112
  %127 = shl i32 %47, 3
  %128 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %127, i32* %128, align 8
  br label %155

129:                                              ; preds = %112
  %130 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %49, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 0, i32 4
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %120, 23
  %134 = inttoptr i64 %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = and i64 %132, 4294967295
  %137 = icmp eq i64 %136, 0
  tail call void @llvm.assume(i1 %137) #6
  %138 = zext i32 %135 to i64
  %139 = or i64 %132, %138
  %140 = load atomic i32, i32* %122 acquire, align 4
  %141 = lshr i32 %140, 10
  %142 = and i32 %141, 1023
  %143 = add nsw i32 %142, -1
  %144 = sext i32 %143 to i64
  %145 = mul nsw i64 %144, 51539607552
  %146 = add nsw i64 %145, 68719476736
  %147 = ashr exact i64 %146, 32
  %148 = or i64 %147, 3
  %149 = add i64 %148, %139
  %150 = inttoptr i64 %149 to i32*
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = ashr i32 %151, 1
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %152, i32* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %154, align 8
  br label %155

155:                                              ; preds = %106, %90, %129, %126, %5
  ret void
}

declare i32 @_ZN2v88internal12PropertyCell11InitialTypeEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory15NewPropertyCellENS0_6HandleINS0_4NameEEENS0_15PropertyDetailsENS2_INS0_6ObjectEEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, i64*, i32, i64*, i8 zeroext) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map24TransitionToDataPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS4_INS0_6ObjectEEENS0_18PropertyAttributesENS0_17PropertyConstnessENS0_11StoreOriginE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator29ApplyTransitionToDataPropertyENS0_6HandleINS0_10JSReceiverEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9
  %5 = bitcast %"class.v8::internal::Handle.1182"* %4 to i64*
  %6 = ptrtoint i64* %1 to i64
  store i64 %6, i64* %5, align 8
  %7 = load i64, i64* %1, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %7, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i64 %11, 4294967295
  %16 = icmp eq i64 %15, 0
  tail call void @llvm.assume(i1 %16) #6
  %17 = zext i32 %14 to i64
  %18 = or i64 %11, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = icmp eq i16 %21, 189
  br i1 %22, label %23, label %111

23:                                               ; preds = %2
  %24 = load atomic i32, i32* %13 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %11, %25
  %27 = tail call i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 %26) #6
  %28 = load i64, i64* %1, align 8
  %29 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %28, 3
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = and i64 %31, 4294967295
  %36 = icmp eq i64 %35, 0
  tail call void @llvm.assume(i1 %36) #6
  %37 = zext i32 %34 to i64
  %38 = or i64 %31, %37
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 4
  %41 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %40, align 8
  %42 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %23
  %44 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %41, i64 %38) #6
  br label %58

45:                                               ; preds = %23
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %39, i64 0, i32 31, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %39) #6
  br label %53

53:                                               ; preds = %51, %45
  %54 = phi i64* [ %52, %51 ], [ %47, %45 ]
  %55 = ptrtoint i64* %54 to i64
  %56 = add i64 %55, 8
  %57 = inttoptr i64 %56 to i64*
  store i64* %57, i64** %46, align 8
  store i64 %38, i64* %54, align 8
  br label %58

58:                                               ; preds = %43, %53
  %59 = phi i64* [ %44, %43 ], [ %54, %53 ]
  %60 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %61 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12
  %68 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %60, i64* %59, i64* %62, i64* %64, i32 %66, %"class.v8::internal::InternalIndex"* %67) #6
  %69 = load i64, i64* %1, align 8
  %70 = load i64, i64* %68, align 8
  %71 = add i64 %69, 3
  %72 = inttoptr i64 %71 to i32*
  %73 = trunc i64 %70 to i32
  store atomic volatile i32 %73, i32* %72 release, align 4
  %74 = and i64 %70, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %87, label %76

76:                                               ; preds = %58
  %77 = and i64 %69, -262144
  %78 = or i64 %77, 8
  %79 = inttoptr i64 %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, 262144
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %76
  %84 = or i64 %77, 16
  %85 = inttoptr i64 %84 to %"class.v8::internal::Heap"**
  %86 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %85, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %86, i64 %69, i64 %71, i64 %70) #6
  br label %87

87:                                               ; preds = %83, %76, %58
  %88 = and i64 %70, -262144
  %89 = or i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %87
  %95 = and i64 %69, -262144
  %96 = or i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 24
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %69, i64 %71, i64 %70) #6
  br label %102

102:                                              ; preds = %87, %94, %101
  %103 = load i64*, i64** %63, align 8
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = ashr i32 %107, 1
  store i32 %108, i32* %65, align 8
  %109 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 6, i32* %110, align 4
  br label %446

111:                                              ; preds = %2
  %112 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = load i64, i64* %113, align 8
  %115 = add i64 %114, 19
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %11, %118
  %120 = and i64 %118, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %111
  %123 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %150

124:                                              ; preds = %111
  %125 = add i64 %119, -1
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %129 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %128, null
  br i1 %129, label %136, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 0, i32 1
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 1, i64 0
  br label %144

136:                                              ; preds = %130, %124
  %137 = and i64 %114, -262144
  %138 = or i64 %137, 16
  %139 = inttoptr i64 %138 to i64*
  %140 = load i64, i64* %139, align 16
  %141 = add i64 %140, -41416
  %142 = inttoptr i64 %141 to %"class.v8::internal::Isolate"*
  %143 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %142, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %144

144:                                              ; preds = %136, %134
  %145 = phi i64* [ %143, %136 ], [ %135, %134 ]
  %146 = getelementptr inbounds i64, i64* %145, i64 10
  %147 = load i64, i64* %146, align 8
  %148 = trunc i64 %147 to i32
  %149 = icmp eq i32 %127, %148
  br i1 %149, label %171, label %150

150:                                              ; preds = %144, %122
  %151 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %123, %122 ], [ %128, %144 ]
  %152 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %151, i64 0, i32 0, i32 1
  %155 = load i8, i8* %154, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %151, i64 0, i32 1, i64 0
  br label %167

159:                                              ; preds = %153, %150
  %160 = and i64 %114, -262144
  %161 = or i64 %160, 16
  %162 = inttoptr i64 %161 to i64*
  %163 = load i64, i64* %162, align 16
  %164 = add i64 %163, -41416
  %165 = inttoptr i64 %164 to %"class.v8::internal::Isolate"*
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %165, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %167

167:                                              ; preds = %159, %157
  %168 = phi i64* [ %166, %159 ], [ %158, %157 ]
  %169 = getelementptr inbounds i64, i64* %168, i64 4
  %170 = load i64, i64* %169, align 8
  br label %171

171:                                              ; preds = %144, %167
  %172 = phi i64 [ %170, %167 ], [ %119, %144 ]
  %173 = load atomic i32, i32* %13 monotonic, align 4
  %174 = trunc i64 %172 to i32
  %175 = icmp eq i32 %173, %174
  %176 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 3
  br i1 %178, label %179, label %236

179:                                              ; preds = %171
  %180 = add i64 %114, 11
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2097152
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %236

185:                                              ; preds = %179
  %186 = and i64 %114, -4294967296
  %187 = add i64 %114, 31
  %188 = inttoptr i64 %187 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = or i64 %186, %190
  %192 = and i64 %190, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %200, label %194

194:                                              ; preds = %185
  %195 = add i64 %191, 3
  %196 = inttoptr i64 %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = or i64 %186, %198
  br label %200

200:                                              ; preds = %185, %194
  %201 = phi i64 [ %199, %194 ], [ %191, %185 ]
  %202 = trunc i64 %201 to i32
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %236, label %204

204:                                              ; preds = %200
  %205 = tail call i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64* %113, %"class.v8::internal::Isolate"* %9) #6
  %206 = load i64, i64* %113, align 8
  %207 = load i64, i64* %205, align 8
  %208 = add i64 %206, 31
  %209 = inttoptr i64 %208 to i32*
  %210 = trunc i64 %207 to i32
  store atomic volatile i32 %210, i32* %209 monotonic, align 4
  %211 = and i64 %207, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %204
  %214 = and i64 %206, -262144
  %215 = or i64 %214, 8
  %216 = inttoptr i64 %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = and i64 %217, 262144
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %224, label %220

220:                                              ; preds = %213
  %221 = or i64 %214, 16
  %222 = inttoptr i64 %221 to %"class.v8::internal::Heap"**
  %223 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %222, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %223, i64 %206, i64 %208, i64 %207) #6
  br label %224

224:                                              ; preds = %220, %213
  %225 = and i64 %207, -262144
  %226 = or i64 %225, 8
  %227 = inttoptr i64 %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = and i64 %228, 24
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %224
  %232 = load i64, i64* %216, align 8
  %233 = and i64 %232, 24
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %206, i64 %208, i64 %207) #6
  br label %236

236:                                              ; preds = %179, %171, %235, %231, %224, %204, %200
  %237 = load i64, i64* %1, align 8
  %238 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %238, i64 0, i32 0, i32 4
  %240 = load i64, i64* %239, align 8
  %241 = add i64 %237, -1
  %242 = inttoptr i64 %241 to i32*
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i64 %240, 4294967295
  %245 = icmp eq i64 %244, 0
  tail call void @llvm.assume(i1 %245) #6
  %246 = zext i32 %243 to i64
  %247 = or i64 %240, %246
  %248 = add i64 %247, 7
  %249 = inttoptr i64 %248 to i16*
  %250 = load atomic i16, i16* %249 monotonic, align 2
  %251 = icmp eq i16 %250, 188
  br i1 %251, label %253, label %252

252:                                              ; preds = %236
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %238, i64* %1, i64* %113, i32 0) #6
  br label %253

253:                                              ; preds = %236, %252
  br i1 %175, label %254, label %292

254:                                              ; preds = %253
  %255 = load i64, i64* %113, align 8
  %256 = add i64 %255, 11
  %257 = inttoptr i64 %256 to i32*
  %258 = load atomic i32, i32* %257 acquire, align 4
  %259 = lshr i32 %258, 10
  %260 = and i32 %259, 1023
  %261 = add nsw i32 %260, -1
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %262, i64* %263, align 8
  %264 = load i64, i64* %113, align 8
  %265 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %266 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %265, i64 0, i32 0, i32 4
  %267 = load i64, i64* %266, align 8
  %268 = add i64 %264, 23
  %269 = inttoptr i64 %268 to i32*
  %270 = load i32, i32* %269, align 4
  %271 = and i64 %267, 4294967295
  %272 = icmp eq i64 %271, 0
  tail call void @llvm.assume(i1 %272) #6
  %273 = zext i32 %270 to i64
  %274 = or i64 %267, %273
  %275 = add i64 %264, 11
  %276 = inttoptr i64 %275 to i32*
  %277 = load atomic i32, i32* %276 acquire, align 4
  %278 = lshr i32 %277, 10
  %279 = and i32 %278, 1023
  %280 = add nsw i32 %279, -1
  %281 = sext i32 %280 to i64
  %282 = mul nsw i64 %281, 51539607552
  %283 = add nsw i64 %282, 68719476736
  %284 = ashr exact i64 %283, 32
  %285 = or i64 %284, 3
  %286 = add i64 %285, %274
  %287 = inttoptr i64 %286 to i32*
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = ashr i32 %288, 1
  %290 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %289, i32* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 6, i32* %291, align 4
  br label %446

292:                                              ; preds = %253
  %293 = load i64, i64* %1, align 8
  %294 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %295 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %294, i64 0, i32 0, i32 4
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %293, -1
  %298 = inttoptr i64 %297 to i32*
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i64 %296, 4294967295
  %301 = icmp eq i64 %300, 0
  tail call void @llvm.assume(i1 %301) #6
  %302 = zext i32 %299 to i64
  %303 = or i64 %296, %302
  %304 = add i64 %303, 11
  %305 = inttoptr i64 %304 to i32*
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2097152
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %422, label %309

309:                                              ; preds = %292
  %310 = load atomic i32, i32* %298 monotonic, align 4
  %311 = zext i32 %310 to i64
  %312 = or i64 %296, %311
  %313 = add i64 %312, 11
  %314 = inttoptr i64 %313 to i32*
  %315 = load atomic i32, i32* %314 acquire, align 4
  %316 = and i32 %315, 1048576
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %339, label %318

318:                                              ; preds = %309
  %319 = load i64, i64* %1, align 8
  %320 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %321 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %320, i64 0, i32 0, i32 4
  %322 = load i64, i64* %321, align 8
  %323 = add i64 %319, -1
  %324 = inttoptr i64 %323 to i32*
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i64 %322, 4294967295
  %327 = icmp eq i64 %326, 0
  tail call void @llvm.assume(i1 %327) #6
  %328 = zext i32 %325 to i64
  %329 = or i64 %322, %328
  %330 = add i64 %329, 7
  %331 = inttoptr i64 %330 to i16*
  %332 = load atomic i16, i16* %331 monotonic, align 2
  %333 = icmp ugt i16 %332, 188
  br i1 %333, label %334, label %339

334:                                              ; preds = %318
  %335 = load atomic i32, i32* %324 monotonic, align 4
  %336 = zext i32 %335 to i64
  %337 = or i64 %322, %336
  %338 = tail call i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 %337) #6
  br label %339

339:                                              ; preds = %309, %334, %318
  %340 = load i64, i64* %1, align 8
  %341 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %342 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %341, i64 0, i32 0, i32 4
  %343 = load i64, i64* %342, align 8
  %344 = add i64 %340, 3
  %345 = inttoptr i64 %344 to i32*
  %346 = load i32, i32* %345, align 4
  %347 = and i64 %343, 4294967295
  %348 = icmp eq i64 %347, 0
  tail call void @llvm.assume(i1 %348) #6
  %349 = zext i32 %346 to i64
  %350 = or i64 %343, %349
  %351 = and i64 %349, 1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %374

353:                                              ; preds = %339
  %354 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %355 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %354, null
  br i1 %355, label %362, label %356

356:                                              ; preds = %353
  %357 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %354, i64 0, i32 0, i32 1
  %358 = load i8, i8* %357, align 8, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %362, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %354, i64 0, i32 1, i64 0
  br label %370

362:                                              ; preds = %356, %353
  %363 = and i64 %340, -262144
  %364 = or i64 %363, 16
  %365 = inttoptr i64 %364 to i64*
  %366 = load i64, i64* %365, align 16
  %367 = add i64 %366, -41416
  %368 = inttoptr i64 %367 to %"class.v8::internal::Isolate"*
  %369 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %368, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %370

370:                                              ; preds = %362, %360
  %371 = phi i64* [ %369, %362 ], [ %361, %360 ]
  %372 = getelementptr inbounds i64, i64* %371, i64 115
  %373 = load i64, i64* %372, align 8
  br label %374

374:                                              ; preds = %339, %370
  %375 = phi i64 [ %373, %370 ], [ %350, %339 ]
  %376 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %341, i64 0, i32 31, i32 4
  %377 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %376, align 8
  %378 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %377, null
  br i1 %378, label %381, label %379

379:                                              ; preds = %374
  %380 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %377, i64 %375) #6
  br label %394

381:                                              ; preds = %374
  %382 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %341, i64 0, i32 31, i32 0
  %383 = load i64*, i64** %382, align 8
  %384 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %341, i64 0, i32 31, i32 1
  %385 = load i64*, i64** %384, align 8
  %386 = icmp eq i64* %383, %385
  br i1 %386, label %387, label %389

387:                                              ; preds = %381
  %388 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %341) #6
  br label %389

389:                                              ; preds = %387, %381
  %390 = phi i64* [ %388, %387 ], [ %383, %381 ]
  %391 = ptrtoint i64* %390 to i64
  %392 = add i64 %391, 8
  %393 = inttoptr i64 %392 to i64*
  store i64* %393, i64** %382, align 8
  store i64 %375, i64* %390, align 8
  br label %394

394:                                              ; preds = %379, %389
  %395 = phi i64* [ %380, %379 ], [ %390, %389 ]
  %396 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %397 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %398 = load i64*, i64** %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %396, i64 0, i32 0, i32 7, i32 0, i64 3
  %400 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %401 = load i32, i32* %400, align 8
  %402 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12
  %403 = tail call i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"* %396, i64* %395, i64* %398, i64* %399, i32 %401, %"class.v8::internal::InternalIndex"* %402) #6
  %404 = bitcast %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %404) #6
  %405 = load i64, i64* %1, align 8
  %406 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %405, i64* %406, align 8
  %407 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSReceiver>::ObjectRef"* %3, i64 0, i32 0
  %408 = load i64, i64* %403, align 8
  call void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"* nonnull %407, i64 %408) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %404) #6
  %409 = load i64, i64* %403, align 8
  %410 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %411 = load i64, i64* %410, align 8
  %412 = mul i64 %411, 51539607552
  %413 = add i64 %412, 120259084288
  %414 = ashr exact i64 %413, 32
  %415 = add i64 %409, 7
  %416 = add i64 %415, %414
  %417 = inttoptr i64 %416 to i32*
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = ashr i32 %418, 1
  store i32 %419, i32* %400, align 8
  %420 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %420, align 8
  %421 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 6, i32* %421, align 4
  br label %446

422:                                              ; preds = %292
  %423 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %423, align 4
  %424 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %424, align 4
  %425 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %426 = load i64*, i64** %425, align 8
  %427 = load i64, i64* %426, align 8
  %428 = load i64, i64* %295, align 8
  %429 = add i64 %427, -1
  %430 = inttoptr i64 %429 to i32*
  %431 = load atomic i32, i32* %430 monotonic, align 4
  %432 = and i64 %428, 4294967295
  %433 = icmp eq i64 %432, 0
  tail call void @llvm.assume(i1 %433) #6
  %434 = zext i32 %431 to i64
  %435 = or i64 %428, %434
  %436 = add i64 %435, 7
  %437 = inttoptr i64 %436 to i16*
  %438 = load atomic i16, i16* %437 monotonic, align 2
  %439 = icmp ult i16 %438, 1041
  br i1 %439, label %440, label %442

440:                                              ; preds = %422
  %441 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %435, i64 %427) #6
  br label %444

442:                                              ; preds = %422
  %443 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %435, i64 %427) #6
  br label %444

444:                                              ; preds = %440, %442
  %445 = phi i32 [ %441, %440 ], [ %443, %442 ]
  store i32 %445, i32* %423, align 4
  br label %446

446:                                              ; preds = %254, %444, %394, %102
  ret void
}

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_16GlobalDictionaryENS0_21GlobalDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map37GetOrCreatePrototypeChainValidityCellENS0_6HandleIS1_EEPNS0_7IsolateE(i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal18BaseNameDictionaryINS0_14NameDictionaryENS0_19NameDictionaryShapeEE3AddEPNS0_7IsolateENS0_6HandleIS2_EENS7_INS0_4NameEEENS7_INS0_6ObjectEEENS0_15PropertyDetailsEPNS0_13InternalIndexE(%"class.v8::internal::Isolate"*, i64*, i64*, i64*, i32, %"class.v8::internal::InternalIndex"*) local_unnamed_addr #2

declare void @_ZN2v88internal10JSReceiver13SetPropertiesENS0_10HeapObjectE(%"class.v8::internal::JSReceiver"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator6DeleteEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4294967295
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  br label %30

12:                                               ; preds = %1
  %13 = icmp eq i64 %7, -1
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = add i64 %5, -1
  %16 = inttoptr i64 %15 to i32*
  br label %55

17:                                               ; preds = %12
  %18 = and i64 %5, -4294967296
  %19 = add i64 %5, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 10
  %25 = inttoptr i64 %24 to i8*
  %26 = load i8, i8* %25, align 1
  %27 = lshr i8 %26, 2
  %28 = add nsw i8 %27, -17
  %29 = icmp ult i8 %28, 22
  br i1 %29, label %30, label %55

30:                                               ; preds = %9, %17
  %31 = phi i32* [ %11, %9 ], [ %20, %17 ]
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = load atomic i32, i32* %31 monotonic, align 4
  %37 = and i64 %35, 4294967295
  %38 = icmp eq i64 %37, 0
  tail call void @llvm.assume(i1 %38) #6
  %39 = zext i32 %36 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 10
  %42 = inttoptr i64 %41 to i8*
  %43 = load i8, i8* %42, align 1
  %44 = lshr i8 %43, 2
  %45 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %46 = zext i8 %44 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %45, i64 %46
  %48 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.v8::internal::ElementsAccessor"* %48 to void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)***
  %52 = load void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)**, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %52, i64 36
  %54 = load void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, void (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %53, align 8
  tail call void %54(%"class.v8::internal::ElementsAccessor"* %48, i64* %4, i64 %50) #6
  br label %152

55:                                               ; preds = %14, %17
  %56 = phi i32* [ %16, %14 ], [ %20, %17 ]
  %57 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %58 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %58, i64 0, i32 0, i32 4
  %60 = load i64, i64* %59, align 8
  %61 = load atomic i32, i32* %56 monotonic, align 4
  %62 = and i64 %60, 4294967295
  %63 = icmp eq i64 %62, 0
  tail call void @llvm.assume(i1 %63) #6
  %64 = zext i32 %61 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 11
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 acquire, align 4
  %69 = and i32 %68, 1048576
  %70 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #6
  %71 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 40, i1 false) #6
  %72 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1244", %"struct.std::__1::atomic.1244"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %83, label %74, !prof !3

74:                                               ; preds = %55
  %75 = icmp eq i32 %69, 0
  %76 = select i1 %75, i32 189, i32 205
  %77 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %78 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %71, i64 0, i32 14, i32 0
  %80 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %80, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %81, %"class.v8::internal::RuntimeCallStats"** %77, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %81, %"class.v8::internal::RuntimeCallTimer"* %78, i32 %76) #6
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  br label %83

83:                                               ; preds = %55, %74
  %84 = phi %"class.v8::internal::Isolate"* [ %71, %55 ], [ %82, %74 ]
  %85 = load i64, i64* %4, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %84, i64 0, i32 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %85, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i64 %87, 4294967295
  %92 = icmp eq i64 %91, 0
  call void @llvm.assume(i1 %92) #6
  %93 = zext i32 %90 to i64
  %94 = or i64 %87, %93
  %95 = add i64 %94, 11
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2097152
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %126

100:                                              ; preds = %83
  %101 = lshr exact i32 %69, 20
  call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %84, i64* %4, i32 %101, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  %102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %102, align 4
  %103 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %103, align 4
  %104 = load i64*, i64** %3, align 8
  %105 = load i64, i64* %104, align 8
  %106 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %106, i64 0, i32 0, i32 4
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %105, -1
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i64 %108, 4294967295
  %113 = icmp eq i64 %112, 0
  call void @llvm.assume(i1 %113) #6
  %114 = zext i32 %111 to i64
  %115 = or i64 %108, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = icmp ult i16 %118, 1041
  br i1 %119, label %120, label %122

120:                                              ; preds = %100
  %121 = call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %115, i64 %105) #6
  br label %124

122:                                              ; preds = %100
  %123 = call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %115, i64 %105) #6
  br label %124

124:                                              ; preds = %120, %122
  %125 = phi i32 [ %121, %120 ], [ %123, %122 ]
  store i32 %125, i32* %102, align 4
  br label %126

126:                                              ; preds = %124, %83
  %127 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %128 = load i64, i64* %127, align 8
  call void @_ZN2v88internal10JSReceiver24DeleteNormalizedPropertyENS0_6HandleIS1_EENS0_13InternalIndexE(i64* %4, i64 %128) #6
  %129 = load i64, i64* %4, align 8
  %130 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %57, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 0, i32 4
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %129, -1
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i64 %132, 4294967295
  %137 = icmp eq i64 %136, 0
  call void @llvm.assume(i1 %137) #6
  %138 = zext i32 %135 to i64
  %139 = or i64 %132, %138
  %140 = add i64 %139, 7
  %141 = inttoptr i64 %140 to i16*
  %142 = load atomic i16, i16* %141 monotonic, align 2
  %143 = icmp ugt i16 %142, 188
  br i1 %143, label %144, label %145

144:                                              ; preds = %126
  call void @_ZN2v88internal8JSObject21ReoptimizeIfPrototypeENS0_6HandleIS1_EE(i64* %4) #6
  br label %145

145:                                              ; preds = %144, %126
  %146 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 0
  %147 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %146, align 8
  %148 = icmp eq %"class.v8::internal::RuntimeCallStats"* %147, null
  br i1 %148, label %151, label %149, !prof !3

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %2, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %147, %"class.v8::internal::RuntimeCallTimer"* %150) #6
  br label %151

151:                                              ; preds = %145, %149
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #6
  br label %152

152:                                              ; preds = %151, %30
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %153, align 4
  ret void
}

declare void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"*, i64*, i32, i32, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal10JSReceiver24DeleteNormalizedPropertyENS0_6HandleIS1_EENS0_13InternalIndexE(i64*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject21ReoptimizeIfPrototypeENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator28TransitionToAccessorPropertyENS0_6HandleINS0_6ObjectEEES4_NS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %9, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %4
  %17 = add i64 %9, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i64 %13, 4294967295
  %21 = icmp eq i64 %20, 0
  tail call void @llvm.assume(i1 %21) #6
  %22 = zext i32 %19 to i64
  %23 = or i64 %13, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 190
  br i1 %27, label %28, label %65

28:                                               ; preds = %16
  %29 = load atomic i32, i32* %18 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %13, %30
  %32 = add i64 %31, 15
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %13, %35
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %13, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = icmp eq i16 %44, 189
  br i1 %45, label %46, label %65

46:                                               ; preds = %28
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 4
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %47, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %36) #6
  br label %65

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %11) #6
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i64* [ %59, %58 ], [ %54, %52 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %53, align 8
  store i64 %36, i64* %61, align 8
  br label %65

65:                                               ; preds = %4, %16, %28, %50, %60
  %66 = phi i64* [ %51, %50 ], [ %61, %60 ], [ %8, %4 ], [ %8, %28 ], [ %8, %16 ]
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, -1
  br i1 %69, label %70, label %100

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %73, -1
  %78 = inttoptr i64 %77 to i32*
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i64 %76, 4294967295
  %81 = icmp eq i64 %80, 0
  tail call void @llvm.assume(i1 %81) #6
  %82 = zext i32 %79 to i64
  %83 = or i64 %76, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 64
  br i1 %87, label %88, label %95

88:                                               ; preds = %70
  %89 = add i64 %73, 7
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = shl i32 %91, 1
  %93 = and i32 %92, 2
  %94 = or i32 %93, %3
  br label %95

95:                                               ; preds = %88, %70
  %96 = phi i32 [ %3, %70 ], [ %94, %88 ]
  %97 = load i64, i64* %66, align 8
  %98 = add i64 %97, -1
  %99 = inttoptr i64 %98 to i32*
  br label %120

100:                                              ; preds = %65
  %101 = load i64, i64* %66, align 8
  %102 = icmp ult i64 %68, 4294967295
  br i1 %102, label %331, label %103

103:                                              ; preds = %100
  %104 = and i64 %101, -4294967296
  %105 = add i64 %101, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = zext i32 %107 to i64
  %109 = or i64 %104, %108
  %110 = add i64 %109, 10
  %111 = inttoptr i64 %110 to i8*
  %112 = load i8, i8* %111, align 1
  %113 = lshr i8 %112, 2
  %114 = add nsw i8 %113, -17
  %115 = icmp ult i8 %114, 22
  br i1 %115, label %331, label %116

116:                                              ; preds = %103
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 4
  %119 = load i64, i64* %118, align 8
  br label %120

120:                                              ; preds = %116, %95
  %121 = phi i32* [ %106, %116 ], [ %99, %95 ]
  %122 = phi i64 [ %119, %116 ], [ %76, %95 ]
  %123 = phi %"class.v8::internal::Isolate"* [ %117, %116 ], [ %74, %95 ]
  %124 = phi i32 [ %3, %116 ], [ %96, %95 ]
  %125 = load atomic i32, i32* %121 monotonic, align 4
  %126 = and i64 %122, 4294967295
  %127 = icmp eq i64 %126, 0
  tail call void @llvm.assume(i1 %127) #6
  %128 = zext i32 %125 to i64
  %129 = or i64 %122, %128
  %130 = add i64 %129, 11
  %131 = inttoptr i64 %130 to i32*
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2097152
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %331

135:                                              ; preds = %120
  %136 = load atomic i32, i32* %121 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %122, %137
  %139 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %123, i64 0, i32 31, i32 4
  %140 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %139, align 8
  %141 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %135
  %143 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %140, i64 %138) #6
  br label %157

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %123, i64 0, i32 31, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %123, i64 0, i32 31, i32 1
  %148 = load i64*, i64** %147, align 8
  %149 = icmp eq i64* %146, %148
  br i1 %149, label %150, label %152

150:                                              ; preds = %144
  %151 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %123) #6
  br label %152

152:                                              ; preds = %150, %144
  %153 = phi i64* [ %151, %150 ], [ %146, %144 ]
  %154 = ptrtoint i64* %153 to i64
  %155 = add i64 %154, 8
  %156 = inttoptr i64 %155 to i64*
  store i64* %156, i64** %145, align 8
  store i64 %138, i64* %153, align 8
  br label %157

157:                                              ; preds = %142, %152
  %158 = phi i64* [ %143, %142 ], [ %153, %152 ]
  %159 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9
  %160 = getelementptr inbounds %"class.v8::internal::Handle.1182", %"class.v8::internal::Handle.1182"* %159, i64 0, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = icmp eq i64* %161, %66
  br i1 %162, label %177, label %163

163:                                              ; preds = %157
  %164 = icmp eq i64* %161, null
  %165 = icmp eq i64* %66, null
  %166 = or i1 %165, %164
  br i1 %166, label %173, label %167

167:                                              ; preds = %163
  %168 = load i64, i64* %161, align 8
  %169 = load i64, i64* %66, align 8
  %170 = trunc i64 %168 to i32
  %171 = trunc i64 %169 to i32
  %172 = icmp eq i32 %170, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %163, %167
  %174 = ptrtoint i64* %66 to i64
  %175 = bitcast %"class.v8::internal::Handle.1182"* %159 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %176, align 4
  br label %185

177:                                              ; preds = %157, %167
  %178 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 2
  br i1 %180, label %181, label %185

181:                                              ; preds = %177
  %182 = load i64, i64* %158, align 8
  %183 = load i64, i64* %161, align 8
  %184 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %182, i64 %183)
  br label %185

185:                                              ; preds = %177, %181, %173
  %186 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %187 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = tail call i64* @_ZN2v88internal3Map28TransitionToAccessorPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS0_13InternalIndexENS4_INS0_6ObjectEEESA_NS0_18PropertyAttributesE(%"class.v8::internal::Isolate"* %186, i64* %158, i64* %188, i64 %190, i64* %1, i64* %2, i32 %124) #6
  %192 = load i64, i64* %191, align 8
  %193 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %193, i64 0, i32 0, i32 4
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %192, 19
  %197 = inttoptr i64 %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = and i64 %195, 4294967295
  %200 = icmp eq i64 %199, 0
  tail call void @llvm.assume(i1 %200) #6
  %201 = zext i32 %198 to i64
  %202 = or i64 %195, %201
  %203 = and i64 %201, 1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %185
  %206 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %233

207:                                              ; preds = %185
  %208 = add i64 %202, -1
  %209 = inttoptr i64 %208 to i32*
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %212 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %211, i64 0, i32 0, i32 1
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %211, i64 0, i32 1, i64 0
  br label %227

219:                                              ; preds = %213, %207
  %220 = and i64 %192, -262144
  %221 = or i64 %220, 16
  %222 = inttoptr i64 %221 to i64*
  %223 = load i64, i64* %222, align 16
  %224 = add i64 %223, -41416
  %225 = inttoptr i64 %224 to %"class.v8::internal::Isolate"*
  %226 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %225, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %227

227:                                              ; preds = %219, %217
  %228 = phi i64* [ %226, %219 ], [ %218, %217 ]
  %229 = getelementptr inbounds i64, i64* %228, i64 10
  %230 = load i64, i64* %229, align 8
  %231 = trunc i64 %230 to i32
  %232 = icmp eq i32 %210, %231
  br i1 %232, label %254, label %233

233:                                              ; preds = %227, %205
  %234 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %206, %205 ], [ %211, %227 ]
  %235 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %234, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %234, i64 0, i32 0, i32 1
  %238 = load i8, i8* %237, align 8, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %234, i64 0, i32 1, i64 0
  br label %250

242:                                              ; preds = %236, %233
  %243 = and i64 %192, -262144
  %244 = or i64 %243, 16
  %245 = inttoptr i64 %244 to i64*
  %246 = load i64, i64* %245, align 16
  %247 = add i64 %246, -41416
  %248 = inttoptr i64 %247 to %"class.v8::internal::Isolate"*
  %249 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %248, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %250

250:                                              ; preds = %242, %240
  %251 = phi i64* [ %249, %242 ], [ %241, %240 ]
  %252 = getelementptr inbounds i64, i64* %251, i64 4
  %253 = load i64, i64* %252, align 8
  br label %254

254:                                              ; preds = %227, %250
  %255 = phi i64 [ %253, %250 ], [ %202, %227 ]
  %256 = load i64, i64* %66, align 8
  %257 = add i64 %256, -1
  %258 = inttoptr i64 %257 to i32*
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = trunc i64 %255 to i32
  %261 = icmp eq i32 %259, %260
  tail call void @_ZN2v88internal8JSObject12MigrateToMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_3MapEEEi(%"class.v8::internal::Isolate"* %193, i64* %66, i64* %191, i32 0) #6
  br i1 %261, label %262, label %299

262:                                              ; preds = %254
  %263 = load i64, i64* %191, align 8
  %264 = add i64 %263, 11
  %265 = inttoptr i64 %264 to i32*
  %266 = load atomic i32, i32* %265 acquire, align 4
  %267 = lshr i32 %266, 10
  %268 = and i32 %267, 1023
  %269 = add nsw i32 %268, -1
  %270 = sext i32 %269 to i64
  store i64 %270, i64* %189, align 8
  %271 = load i64, i64* %191, align 8
  %272 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %272, i64 0, i32 0, i32 4
  %274 = load i64, i64* %273, align 8
  %275 = add i64 %271, 23
  %276 = inttoptr i64 %275 to i32*
  %277 = load i32, i32* %276, align 4
  %278 = and i64 %274, 4294967295
  %279 = icmp eq i64 %278, 0
  tail call void @llvm.assume(i1 %279) #6
  %280 = zext i32 %277 to i64
  %281 = or i64 %274, %280
  %282 = add i64 %271, 11
  %283 = inttoptr i64 %282 to i32*
  %284 = load atomic i32, i32* %283 acquire, align 4
  %285 = lshr i32 %284, 10
  %286 = and i32 %285, 1023
  %287 = add nsw i32 %286, -1
  %288 = sext i32 %287 to i64
  %289 = mul nsw i64 %288, 51539607552
  %290 = add nsw i64 %289, 68719476736
  %291 = ashr exact i64 %290, 32
  %292 = or i64 %291, 3
  %293 = add i64 %292, %281
  %294 = inttoptr i64 %293 to i32*
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = ashr i32 %295, 1
  %297 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %296, i32* %297, align 8
  %298 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 5, i32* %298, align 4
  br label %419

299:                                              ; preds = %254
  %300 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %300, align 4
  %301 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %301, align 4
  %302 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %303 = load i64*, i64** %302, align 8
  %304 = load i64, i64* %303, align 8
  %305 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %306 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %305, i64 0, i32 0, i32 4
  %307 = load i64, i64* %306, align 8
  %308 = add i64 %304, -1
  %309 = inttoptr i64 %308 to i32*
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i64 %307, 4294967295
  %312 = icmp eq i64 %311, 0
  tail call void @llvm.assume(i1 %312) #6
  %313 = zext i32 %310 to i64
  %314 = or i64 %307, %313
  %315 = add i64 %314, 7
  %316 = inttoptr i64 %315 to i16*
  %317 = load atomic i16, i16* %316 monotonic, align 2
  %318 = icmp ult i16 %317, 1041
  br i1 %318, label %319, label %321

319:                                              ; preds = %299
  %320 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %314, i64 %304) #6
  br label %323

321:                                              ; preds = %299
  %322 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %314, i64 %304) #6
  br label %323

323:                                              ; preds = %319, %321
  %324 = phi i32 [ %320, %319 ], [ %322, %321 ]
  store i32 %324, i32* %300, align 4
  %325 = load i64, i64* %191, align 8
  %326 = add i64 %325, 11
  %327 = inttoptr i64 %326 to i32*
  %328 = load atomic i32, i32* %327 monotonic, align 4
  %329 = and i32 %328, 2097152
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %419, label %331

331:                                              ; preds = %323, %120, %100, %103
  %332 = phi i32 [ %124, %120 ], [ %124, %323 ], [ %3, %103 ], [ %3, %100 ]
  %333 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = icmp eq i32 %334, 5
  br i1 %335, label %339, label %336

336:                                              ; preds = %331
  %337 = bitcast %"class.v8::internal::Isolate"** %10 to %"class.v8::internal::FactoryBase"**
  %338 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %337, align 8
  br label %405

339:                                              ; preds = %331
  %340 = tail call i64* @_ZNK2v88internal14LookupIterator10FetchValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 0) #6
  %341 = load i64, i64* %340, align 8
  %342 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %343 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %342, i64 0, i32 0, i32 4
  %344 = load i64, i64* %343, align 8
  %345 = and i64 %341, 1
  %346 = icmp eq i64 %345, 0
  %347 = bitcast %"class.v8::internal::Isolate"* %342 to %"class.v8::internal::FactoryBase"*
  br i1 %346, label %405, label %348

348:                                              ; preds = %339
  %349 = add i64 %341, -1
  %350 = inttoptr i64 %349 to i32*
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i64 %344, 4294967295
  %353 = icmp eq i64 %352, 0
  tail call void @llvm.assume(i1 %353) #6
  %354 = zext i32 %351 to i64
  %355 = or i64 %344, %354
  %356 = add i64 %355, 7
  %357 = inttoptr i64 %356 to i16*
  %358 = load atomic i16, i16* %357 monotonic, align 2
  %359 = icmp eq i16 %358, 87
  br i1 %359, label %360, label %405

360:                                              ; preds = %348
  %361 = tail call i64* @_ZNK2v88internal14LookupIterator10FetchValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 0) #6
  %362 = load i64, i64* %361, align 8
  %363 = load i64, i64* %1, align 8
  %364 = add i64 %362, 3
  %365 = inttoptr i64 %364 to i32*
  %366 = load i32, i32* %365, align 4
  %367 = trunc i64 %363 to i32
  %368 = icmp eq i32 %366, %367
  br i1 %368, label %369, label %402

369:                                              ; preds = %360
  %370 = load i64, i64* %2, align 8
  %371 = add i64 %362, 7
  %372 = inttoptr i64 %371 to i32*
  %373 = load i32, i32* %372, align 4
  %374 = trunc i64 %370 to i32
  %375 = icmp eq i32 %373, %374
  br i1 %375, label %376, label %402

376:                                              ; preds = %369
  %377 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %378 = load i32, i32* %377, align 8
  %379 = lshr i32 %378, 3
  %380 = and i32 %379, 7
  %381 = icmp eq i32 %380, %332
  br i1 %381, label %382, label %417

382:                                              ; preds = %376
  %383 = load i64, i64* %66, align 8
  %384 = load i64, i64* %67, align 8
  %385 = icmp ult i64 %384, 4294967295
  br i1 %385, label %419, label %386

386:                                              ; preds = %382
  %387 = icmp eq i64 %384, -1
  br i1 %387, label %401, label %388

388:                                              ; preds = %386
  %389 = and i64 %383, -4294967296
  %390 = add i64 %383, -1
  %391 = inttoptr i64 %390 to i32*
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = zext i32 %392 to i64
  %394 = or i64 %389, %393
  %395 = add i64 %394, 10
  %396 = inttoptr i64 %395 to i8*
  %397 = load i8, i8* %396, align 1
  %398 = lshr i8 %397, 2
  %399 = add nsw i8 %398, -17
  %400 = icmp ult i8 %399, 22
  br i1 %400, label %419, label %401

401:                                              ; preds = %386, %388
  tail call void @_ZN2v88internal8JSObject21ReoptimizeIfPrototypeENS0_6HandleIS1_EE(i64* %66) #6
  br label %419

402:                                              ; preds = %360, %369
  %403 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %404 = tail call i64* @_ZN2v88internal12AccessorPair4CopyEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %403, i64* %361) #6
  br label %408

405:                                              ; preds = %336, %339, %348
  %406 = phi %"class.v8::internal::FactoryBase"* [ %338, %336 ], [ %347, %339 ], [ %347, %348 ]
  %407 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"* %406) #6
  br label %408

408:                                              ; preds = %405, %402
  %409 = phi %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* [ %6, %405 ], [ %5, %402 ]
  %410 = phi i64* [ %407, %405 ], [ %404, %402 ]
  %411 = bitcast %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %409 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #6
  %412 = load i64, i64* %410, align 8
  %413 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %409, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %412, i64* %413, align 8
  %414 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef", %"class.v8::internal::Handle<v8::internal::AccessorPair>::ObjectRef"* %409, i64 0, i32 0
  %415 = load i64, i64* %1, align 8
  %416 = load i64, i64* %2, align 8
  call void @_ZN2v88internal12AccessorPair13SetComponentsENS0_6ObjectES2_(%"class.v8::internal::AccessorPair"* nonnull %414, i64 %415, i64 %416)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #6
  br label %417

417:                                              ; preds = %408, %376
  %418 = phi i64* [ %361, %376 ], [ %410, %408 ]
  call void @_ZN2v88internal14LookupIterator24TransitionToAccessorPairENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"* %0, i64* %418, i32 %332)
  br label %419

419:                                              ; preds = %323, %382, %417, %388, %401, %262
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::DescriptorArray", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %280, label %8

8:                                                ; preds = %3
  %9 = add i64 %1, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2097152
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %148

14:                                               ; preds = %8
  %15 = bitcast %"class.v8::internal::DescriptorArray"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %1, 23
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = and i64 %19, 4294967295
  %24 = icmp eq i64 %23, 0
  tail call void @llvm.assume(i1 %24) #6
  %25 = zext i32 %22 to i64
  %26 = or i64 %19, %25
  %27 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  %31 = load atomic i32, i32* %10 acquire, align 4
  %32 = lshr i32 %31, 10
  %33 = and i32 %32, 1023
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %14
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %36, align 8
  br label %101

37:                                               ; preds = %14
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 30
  %39 = load %"class.v8::internal::DescriptorLookupCache"*, %"class.v8::internal::DescriptorLookupCache"** %38, align 8
  %40 = trunc i64 %1 to i32
  %41 = add i64 %30, 3
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = xor i32 %43, %40
  %45 = lshr i32 %44, 2
  %46 = and i32 %45, 63
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %39, i64 0, i32 0, i64 %47, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %50, %40
  br i1 %51, label %52, label %62

52:                                               ; preds = %37
  %53 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %39, i64 0, i32 0, i64 %47, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  %56 = trunc i64 %30 to i32
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %39, i64 0, i32 1, i64 %47
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, -2
  br i1 %61, label %62, label %96

62:                                               ; preds = %58, %52, %37
  %63 = icmp ult i32 %33, 9
  br i1 %63, label %64, label %83

64:                                               ; preds = %62
  %65 = load i64, i64* %27, align 8
  %66 = trunc i64 %30 to i32
  %67 = zext i32 %33 to i64
  %68 = add i64 %65, -1
  br label %69

69:                                               ; preds = %78, %64
  %70 = phi i64 [ 0, %64 ], [ %79, %78 ]
  %71 = mul i64 %70, 51539607552
  %72 = add i64 %71, 68719476736
  %73 = ashr exact i64 %72, 32
  %74 = add i64 %68, %73
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = icmp eq i32 %76, %66
  br i1 %77, label %81, label %78

78:                                               ; preds = %69
  %79 = add nuw nsw i64 %70, 1
  %80 = icmp eq i64 %79, %67
  br i1 %80, label %90, label %69

81:                                               ; preds = %69
  %82 = trunc i64 %70 to i32
  br label %90

83:                                               ; preds = %62
  %84 = call i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"* nonnull %4, i64 %30, i32 %33, i32* null) #6
  %85 = load i32, i32* %42, align 4
  %86 = xor i32 %85, %40
  %87 = lshr i32 %86, 2
  %88 = and i32 %87, 63
  %89 = zext i32 %88 to i64
  br label %90

90:                                               ; preds = %78, %83, %81
  %91 = phi i64 [ %89, %83 ], [ %47, %81 ], [ %47, %78 ]
  %92 = phi i32 [ %84, %83 ], [ %82, %81 ], [ -1, %78 ]
  %93 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %39, i64 0, i32 0, i64 %91, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %39, i64 0, i32 0, i64 %91, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %30, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %39, i64 0, i32 1, i64 %91
  store i32 %92, i32* %95, align 4
  br label %96

96:                                               ; preds = %58, %90
  %97 = phi i32 [ %92, %90 ], [ %60, %58 ]
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %98, i64* %99, align 8
  %100 = icmp eq i32 %97, -1
  br i1 %100, label %101, label %137

101:                                              ; preds = %35, %96
  %102 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %102, i64 0, i32 0, i32 4
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %2, -1
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i64 %104, 4294967295
  %109 = icmp eq i64 %108, 0
  call void @llvm.assume(i1 %109) #6
  %110 = zext i32 %107 to i64
  %111 = or i64 %104, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = icmp eq i16 %114, 1080
  br i1 %115, label %116, label %135

116:                                              ; preds = %101
  %117 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, -1
  br i1 %119, label %120, label %135

120:                                              ; preds = %116
  %121 = load i64*, i64** %28, align 8
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %104, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp ult i16 %130, 64
  br i1 %131, label %132, label %135

132:                                              ; preds = %120
  %133 = call zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64 %122) #6
  %134 = select i1 %133, i32 1, i32 4
  br label %135

135:                                              ; preds = %101, %116, %120, %132
  %136 = phi i32 [ 4, %120 ], [ 1, %116 ], [ 4, %101 ], [ %134, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  br label %280

137:                                              ; preds = %96
  %138 = load i64, i64* %27, align 8
  %139 = mul i64 %98, 51539607552
  %140 = add i64 %139, 68719476736
  %141 = ashr exact i64 %140, 32
  %142 = or i64 %141, 3
  %143 = add i64 %138, %142
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = ashr i32 %145, 1
  %147 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %146, i32* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  br label %274

148:                                              ; preds = %8
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %150 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %150, i64 0, i32 0, i32 4
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %2, 3
  %154 = inttoptr i64 %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = and i64 %152, 4294967295
  %157 = icmp eq i64 %156, 0
  tail call void @llvm.assume(i1 %157) #6
  %158 = zext i32 %155 to i64
  %159 = or i64 %152, %158
  %160 = and i64 %158, 1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %183

162:                                              ; preds = %148
  %163 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %164 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %163, null
  br i1 %164, label %171, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %163, i64 0, i32 0, i32 1
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %163, i64 0, i32 1, i64 0
  br label %179

171:                                              ; preds = %165, %162
  %172 = and i64 %2, -262144
  %173 = or i64 %172, 16
  %174 = inttoptr i64 %173 to i64*
  %175 = load i64, i64* %174, align 16
  %176 = add i64 %175, -41416
  %177 = inttoptr i64 %176 to %"class.v8::internal::Isolate"*
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %177, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %179

179:                                              ; preds = %171, %169
  %180 = phi i64* [ %178, %171 ], [ %170, %169 ]
  %181 = getelementptr inbounds i64, i64* %180, i64 115
  %182 = load i64, i64* %181, align 8
  br label %183

183:                                              ; preds = %148, %179
  %184 = phi i64 [ %182, %179 ], [ %159, %148 ]
  %185 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = load i64, i64* %186, align 8
  %188 = add i64 %187, 3
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = lshr i32 %190, 2
  %192 = add i64 %184, 15
  %193 = inttoptr i64 %192 to i32*
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = ashr i32 %194, 1
  %196 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %150, i64 0, i32 0, i32 7, i32 0, i64 4
  %197 = load i64, i64* %196, align 8
  %198 = add nsw i32 %195, -1
  %199 = and i32 %198, %191
  %200 = zext i32 %199 to i64
  %201 = mul i64 %200, 51539607552
  %202 = add i64 %201, 85899345920
  %203 = ashr exact i64 %202, 32
  %204 = add i64 %184, 7
  %205 = add i64 %203, %204
  %206 = inttoptr i64 %205 to i32*
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = trunc i64 %197 to i32
  %209 = icmp eq i32 %207, %208
  br i1 %209, label %229, label %210

210:                                              ; preds = %183
  %211 = trunc i64 %187 to i32
  %212 = icmp eq i32 %207, %211
  br i1 %212, label %263, label %216

213:                                              ; preds = %216
  %214 = add i32 %217, 1
  %215 = icmp eq i32 %227, %211
  br i1 %215, label %261, label %216

216:                                              ; preds = %210, %213
  %217 = phi i32 [ %214, %213 ], [ 1, %210 ]
  %218 = phi i32 [ %220, %213 ], [ %199, %210 ]
  %219 = add i32 %218, %217
  %220 = and i32 %219, %198
  %221 = zext i32 %220 to i64
  %222 = mul i64 %221, 51539607552
  %223 = add i64 %222, 85899345920
  %224 = ashr exact i64 %223, 32
  %225 = add i64 %224, %204
  %226 = inttoptr i64 %225 to i32*
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = icmp eq i32 %227, %208
  br i1 %228, label %229, label %213

229:                                              ; preds = %216, %183
  %230 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %230, align 8
  %231 = load i64, i64* %151, align 8
  %232 = add i64 %2, -1
  %233 = inttoptr i64 %232 to i32*
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i64 %231, 4294967295
  %236 = icmp eq i64 %235, 0
  tail call void @llvm.assume(i1 %236) #6
  %237 = zext i32 %234 to i64
  %238 = or i64 %231, %237
  %239 = add i64 %238, 7
  %240 = inttoptr i64 %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = icmp eq i16 %241, 1080
  br i1 %242, label %243, label %280

243:                                              ; preds = %229
  %244 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %245 = load i64, i64* %244, align 8
  %246 = icmp eq i64 %245, -1
  br i1 %246, label %247, label %280

247:                                              ; preds = %243
  %248 = load i64, i64* %186, align 8
  %249 = add i64 %248, -1
  %250 = inttoptr i64 %249 to i32*
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = zext i32 %251 to i64
  %253 = or i64 %231, %252
  %254 = add i64 %253, 7
  %255 = inttoptr i64 %254 to i16*
  %256 = load atomic i16, i16* %255 monotonic, align 2
  %257 = icmp ult i16 %256, 64
  br i1 %257, label %258, label %280

258:                                              ; preds = %247
  %259 = tail call zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64 %248) #6
  %260 = select i1 %259, i32 1, i32 4
  br label %280

261:                                              ; preds = %213
  %262 = zext i32 %220 to i64
  br label %263

263:                                              ; preds = %261, %210
  %264 = phi i64 [ %200, %210 ], [ %262, %261 ]
  %265 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %264, i64* %265, align 8
  %266 = mul i64 %264, 51539607552
  %267 = add i64 %266, 120259084288
  %268 = ashr exact i64 %267, 32
  %269 = add i64 %204, %268
  %270 = inttoptr i64 %269 to i32*
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = ashr i32 %271, 1
  %273 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %272, i32* %273, align 8
  br label %274

274:                                              ; preds = %263, %137
  %275 = phi i32 [ %272, %263 ], [ %146, %137 ]
  %276 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %276, align 8
  %277 = and i32 %275, 1
  %278 = icmp eq i32 %277, 0
  %279 = select i1 %278, i32 6, i32 5
  ret i32 %279

280:                                              ; preds = %258, %247, %243, %229, %135, %3
  %281 = phi i32 [ 4, %3 ], [ %136, %135 ], [ 4, %247 ], [ 1, %243 ], [ 4, %229 ], [ %260, %258 ]
  ret i32 %281
}

declare i64* @_ZN2v88internal3Map28TransitionToAccessorPropertyEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_4NameEEENS0_13InternalIndexENS4_INS0_6ObjectEEESA_NS0_18PropertyAttributesE(%"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal14LookupIterator12GetAccessorsEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i64* @_ZNK2v88internal14LookupIterator10FetchValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 0)
  ret i64* %2
}

declare i64* @_ZN2v88internal12AccessorPair4CopyEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12AccessorPair13SetComponentsENS0_6ObjectES2_(%"class.v8::internal::AccessorPair"*, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = and i64 %1, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = trunc i64 %1 to i32
  br label %32

8:                                                ; preds = %3
  %9 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %10 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %9, i64 0, i32 1, i64 0
  br label %25

17:                                               ; preds = %11, %8
  %18 = and i64 %1, -262144
  %19 = or i64 %18, 16
  %20 = inttoptr i64 %19 to i64*
  %21 = load i64, i64* %20, align 16
  %22 = add i64 %21, -41416
  %23 = inttoptr i64 %22 to %"class.v8::internal::Isolate"*
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %23, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %25

25:                                               ; preds = %15, %17
  %26 = phi i64* [ %24, %17 ], [ %16, %15 ]
  %27 = getelementptr inbounds i64, i64* %26, i64 6
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %1 to i32
  %30 = trunc i64 %28 to i32
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %70, label %32

32:                                               ; preds = %6, %25
  %33 = phi i32 [ %7, %6 ], [ %29, %25 ]
  %34 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 3
  %37 = inttoptr i64 %36 to i32*
  store atomic volatile i32 %33, i32* %37 monotonic, align 4
  %38 = load i64, i64* %34, align 8
  %39 = add i64 %38, 3
  br i1 %5, label %70, label %40

40:                                               ; preds = %32
  %41 = and i64 %38, -262144
  %42 = or i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 262144
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %40
  %48 = or i64 %41, 16
  %49 = inttoptr i64 %48 to %"class.v8::internal::Heap"**
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %49, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %50, i64 %38, i64 %39, i64 %1) #6
  %51 = load i64, i64* %34, align 8
  %52 = add i64 %51, 3
  br label %53

53:                                               ; preds = %47, %40
  %54 = phi i64 [ %52, %47 ], [ %39, %40 ]
  %55 = phi i64 [ %51, %47 ], [ %38, %40 ]
  %56 = and i64 %1, -262144
  %57 = or i64 %56, 8
  %58 = inttoptr i64 %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 24
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %53
  %63 = and i64 %55, -262144
  %64 = or i64 %63, 8
  %65 = inttoptr i64 %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 24
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %62
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %55, i64 %54, i64 %1) #6
  br label %70

70:                                               ; preds = %69, %62, %53, %32, %25
  %71 = and i64 %2, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = trunc i64 %2 to i32
  br label %99

75:                                               ; preds = %70
  %76 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %77 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %76, i64 0, i32 0, i32 1
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %76, i64 0, i32 1, i64 0
  br label %92

84:                                               ; preds = %78, %75
  %85 = and i64 %2, -262144
  %86 = or i64 %85, 16
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 16
  %89 = add i64 %88, -41416
  %90 = inttoptr i64 %89 to %"class.v8::internal::Isolate"*
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %92

92:                                               ; preds = %82, %84
  %93 = phi i64* [ %91, %84 ], [ %83, %82 ]
  %94 = getelementptr inbounds i64, i64* %93, i64 6
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %2 to i32
  %97 = trunc i64 %95 to i32
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %137, label %99

99:                                               ; preds = %73, %92
  %100 = phi i32 [ %74, %73 ], [ %96, %92 ]
  %101 = getelementptr inbounds %"class.v8::internal::AccessorPair", %"class.v8::internal::AccessorPair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 7
  %104 = inttoptr i64 %103 to i32*
  store atomic volatile i32 %100, i32* %104 monotonic, align 4
  %105 = load i64, i64* %101, align 8
  %106 = add i64 %105, 7
  br i1 %72, label %137, label %107

107:                                              ; preds = %99
  %108 = and i64 %105, -262144
  %109 = or i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 262144
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %120, label %114

114:                                              ; preds = %107
  %115 = or i64 %108, 16
  %116 = inttoptr i64 %115 to %"class.v8::internal::Heap"**
  %117 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %116, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %117, i64 %105, i64 %106, i64 %2) #6
  %118 = load i64, i64* %101, align 8
  %119 = add i64 %118, 7
  br label %120

120:                                              ; preds = %114, %107
  %121 = phi i64 [ %119, %114 ], [ %106, %107 ]
  %122 = phi i64 [ %118, %114 ], [ %105, %107 ]
  %123 = and i64 %2, -262144
  %124 = or i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 24
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %120
  %130 = and i64 %122, -262144
  %131 = or i64 %130, 8
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 24
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %129
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %122, i64 %121, i64 %2) #6
  br label %137

137:                                              ; preds = %136, %129, %120, %99, %92
  ret void
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE15NewAccessorPairEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14LookupIterator24TransitionToAccessorPairENS0_6HandleINS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::LookupIterator"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %7, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %63, label %14

14:                                               ; preds = %3
  %15 = add i64 %7, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %11, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #6
  %20 = zext i32 %17 to i64
  %21 = or i64 %11, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 190
  br i1 %25, label %26, label %63

26:                                               ; preds = %14
  %27 = load atomic i32, i32* %16 monotonic, align 4
  %28 = zext i32 %27 to i64
  %29 = or i64 %11, %28
  %30 = add i64 %29, 15
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %11, %33
  %35 = add i64 %34, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %11, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp eq i16 %42, 189
  br i1 %43, label %44, label %63

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %34) #6
  br label %63

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %9) #6
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %34, i64* %59, align 8
  br label %63

63:                                               ; preds = %3, %14, %26, %48, %58
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ], [ %6, %3 ], [ %6, %26 ], [ %6, %14 ]
  %65 = ptrtoint i64* %64 to i64
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9
  %67 = bitcast %"class.v8::internal::Handle.1182"* %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = shl i32 %2, 3
  %69 = or i32 %68, 1
  %70 = load i64, i64* %64, align 8
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult i64 %72, 4294967295
  br i1 %73, label %92, label %74

74:                                               ; preds = %63
  %75 = icmp eq i64 %72, -1
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = add i64 %70, -1
  %78 = inttoptr i64 %77 to i32*
  br label %262

79:                                               ; preds = %74
  %80 = and i64 %70, -4294967296
  %81 = add i64 %70, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, 10
  %87 = inttoptr i64 %86 to i8*
  %88 = load i8, i8* %87, align 1
  %89 = lshr i8 %88, 2
  %90 = add nsw i8 %89, -17
  %91 = icmp ult i8 %90, 22
  br i1 %91, label %92, label %262

92:                                               ; preds = %63, %79
  %93 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  tail call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %93, i32 42) #6
  %94 = tail call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %64) #6
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %96 = load i64, i64* %71, align 8
  %97 = trunc i64 %96 to i32
  %98 = tail call i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"* %95, i64* %94, i32 %97, i64* %1, i64* %64, i32 %69) #6
  %99 = bitcast %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #6
  %100 = load i64, i64* %64, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::JSObject>::ObjectRef"* %4, i64 0, i32 0
  %103 = load i64, i64* %98, align 8
  call void @_ZN2v88internal8JSObject19RequireSlowElementsENS0_16NumberDictionaryE(%"class.v8::internal::JSObject"* nonnull %102, i64 %103) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #6
  %104 = load i64, i64* %64, align 8
  %105 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 4
  %107 = load i64, i64* %106, align 8
  %108 = add i64 %104, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i64 %107, 4294967295
  %112 = icmp eq i64 %111, 0
  call void @llvm.assume(i1 %112) #6
  %113 = zext i32 %110 to i64
  %114 = or i64 %107, %113
  %115 = add i64 %114, 10
  %116 = inttoptr i64 %115 to i8*
  %117 = load i8, i8* %116, align 1
  %118 = and i8 %117, -4
  %119 = icmp eq i8 %118, 56
  br i1 %119, label %120, label %203

120:                                              ; preds = %92
  %121 = add i64 %104, 7
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %107, %124
  %126 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, -1
  br i1 %128, label %170, label %129

129:                                              ; preds = %120
  %130 = add i64 %125, 3
  %131 = inttoptr i64 %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = ashr i32 %132, 1
  %134 = trunc i64 %127 to i32
  %135 = icmp ugt i32 %133, %134
  br i1 %135, label %136, label %170

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 7, i32 0, i64 5
  %138 = load i64, i64* %137, align 8
  %139 = shl i32 %134, 2
  %140 = sext i32 %139 to i64
  %141 = add i64 %125, 15
  %142 = add i64 %141, %140
  %143 = inttoptr i64 %142 to i32*
  %144 = trunc i64 %138 to i32
  store atomic volatile i32 %144, i32* %143 monotonic, align 4
  %145 = and i64 %138, 1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %170, label %147

147:                                              ; preds = %136
  %148 = and i64 %125, -262144
  %149 = or i64 %148, 8
  %150 = inttoptr i64 %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 262144
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %158, label %154

154:                                              ; preds = %147
  %155 = or i64 %148, 16
  %156 = inttoptr i64 %155 to %"class.v8::internal::Heap"**
  %157 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %156, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %157, i64 %125, i64 %142, i64 %138) #6
  br label %158

158:                                              ; preds = %154, %147
  %159 = and i64 %138, -262144
  %160 = or i64 %159, 8
  %161 = inttoptr i64 %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 24
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %170, label %165

165:                                              ; preds = %158
  %166 = load i64, i64* %150, align 8
  %167 = and i64 %166, 24
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %165
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %125, i64 %142, i64 %138) #6
  br label %170

170:                                              ; preds = %120, %169, %165, %158, %136, %129
  %171 = load i64, i64* %98, align 8
  %172 = add i64 %125, 11
  %173 = inttoptr i64 %172 to i32*
  %174 = trunc i64 %171 to i32
  store atomic volatile i32 %174, i32* %173 monotonic, align 4
  %175 = and i64 %171, 1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %170
  %178 = and i64 %125, -262144
  %179 = or i64 %178, 8
  %180 = inttoptr i64 %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = and i64 %181, 262144
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %188, label %184

184:                                              ; preds = %177
  %185 = or i64 %178, 16
  %186 = inttoptr i64 %185 to %"class.v8::internal::Heap"**
  %187 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %186, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %187, i64 %125, i64 %172, i64 %171) #6
  br label %188

188:                                              ; preds = %184, %177, %170
  %189 = and i64 %171, -262144
  %190 = or i64 %189, 8
  %191 = inttoptr i64 %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = and i64 %192, 24
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %236, label %195

195:                                              ; preds = %188
  %196 = and i64 %125, -262144
  %197 = or i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = and i64 %199, 24
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %236

202:                                              ; preds = %195
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %125, i64 %172, i64 %171) #6
  br label %236

203:                                              ; preds = %92
  %204 = load i64, i64* %98, align 8
  %205 = add i64 %104, 7
  %206 = inttoptr i64 %205 to i32*
  %207 = trunc i64 %204 to i32
  store atomic volatile i32 %207, i32* %206 monotonic, align 4
  %208 = and i64 %204, 1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %221, label %210

210:                                              ; preds = %203
  %211 = and i64 %104, -262144
  %212 = or i64 %211, 8
  %213 = inttoptr i64 %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = and i64 %214, 262144
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %210
  %218 = or i64 %211, 16
  %219 = inttoptr i64 %218 to %"class.v8::internal::Heap"**
  %220 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %219, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %220, i64 %104, i64 %205, i64 %204) #6
  br label %221

221:                                              ; preds = %217, %210, %203
  %222 = and i64 %204, -262144
  %223 = or i64 %222, 8
  %224 = inttoptr i64 %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = and i64 %225, 24
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %236, label %228

228:                                              ; preds = %221
  %229 = and i64 %104, -262144
  %230 = or i64 %229, 8
  %231 = inttoptr i64 %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = and i64 %232, 24
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %228
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %104, i64 %205, i64 %204) #6
  br label %236

236:                                              ; preds = %235, %228, %221, %202, %195, %188
  %237 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %237, align 4
  %238 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %238, align 4
  %239 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %240 = load i64*, i64** %239, align 8
  %241 = load i64, i64* %240, align 8
  %242 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %243 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %242, i64 0, i32 0, i32 4
  %244 = load i64, i64* %243, align 8
  %245 = add i64 %241, -1
  %246 = inttoptr i64 %245 to i32*
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i64 %244, 4294967295
  %249 = icmp eq i64 %248, 0
  call void @llvm.assume(i1 %249) #6
  %250 = zext i32 %247 to i64
  %251 = or i64 %244, %250
  %252 = add i64 %251, 7
  %253 = inttoptr i64 %252 to i16*
  %254 = load atomic i16, i16* %253 monotonic, align 2
  %255 = icmp ult i16 %254, 1041
  br i1 %255, label %256, label %258

256:                                              ; preds = %236
  %257 = call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %251, i64 %241) #6
  br label %260

258:                                              ; preds = %236
  %259 = call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %251, i64 %241) #6
  br label %260

260:                                              ; preds = %256, %258
  %261 = phi i32 [ %257, %256 ], [ %259, %258 ]
  store i32 %261, i32* %237, align 4
  br label %320

262:                                              ; preds = %76, %79
  %263 = phi i32* [ %78, %76 ], [ %82, %79 ]
  %264 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %265 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %264, i64 0, i32 0, i32 4
  %266 = load i64, i64* %265, align 8
  %267 = load atomic i32, i32* %263 monotonic, align 4
  %268 = and i64 %266, 4294967295
  %269 = icmp eq i64 %268, 0
  tail call void @llvm.assume(i1 %269) #6
  %270 = zext i32 %267 to i64
  %271 = or i64 %266, %270
  %272 = add i64 %271, 11
  %273 = inttoptr i64 %272 to i32*
  %274 = load atomic i32, i32* %273 acquire, align 4
  %275 = and i32 %274, 1048576
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %290, label %277

277:                                              ; preds = %262
  %278 = load i64, i64* %64, align 8
  %279 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %280 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %279, i64 0, i32 0, i32 4
  %281 = load i64, i64* %280, align 8
  %282 = add i64 %278, -1
  %283 = inttoptr i64 %282 to i32*
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i64 %281, 4294967295
  %286 = icmp eq i64 %285, 0
  tail call void @llvm.assume(i1 %286) #6
  %287 = zext i32 %284 to i64
  %288 = or i64 %281, %287
  %289 = tail call i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 %288) #6
  br label %290

290:                                              ; preds = %262, %277
  %291 = phi i32 [ 1, %277 ], [ 0, %262 ]
  %292 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  tail call void @_ZN2v88internal8JSObject19NormalizePropertiesEPNS0_7IsolateENS0_6HandleIS1_EENS0_25PropertyNormalizationModeEiPKc(%"class.v8::internal::Isolate"* %292, i64* %64, i32 %291, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #6
  %293 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %294 = load i64*, i64** %293, align 8
  tail call void @_ZN2v88internal8JSObject21SetNormalizedPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_15PropertyDetailsE(i64* %64, i64* %294, i64* %1, i32 %69) #6
  tail call void @_ZN2v88internal8JSObject21ReoptimizeIfPrototypeENS0_6HandleIS1_EE(i64* %64) #6
  %295 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 2, i32* %295, align 4
  %296 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %296, align 4
  %297 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %298 = load i64*, i64** %297, align 8
  %299 = load i64, i64* %298, align 8
  %300 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %301 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %300, i64 0, i32 0, i32 4
  %302 = load i64, i64* %301, align 8
  %303 = add i64 %299, -1
  %304 = inttoptr i64 %303 to i32*
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i64 %302, 4294967295
  %307 = icmp eq i64 %306, 0
  tail call void @llvm.assume(i1 %307) #6
  %308 = zext i32 %305 to i64
  %309 = or i64 %302, %308
  %310 = add i64 %309, 7
  %311 = inttoptr i64 %310 to i16*
  %312 = load atomic i16, i16* %311 monotonic, align 2
  %313 = icmp ult i16 %312, 1041
  br i1 %313, label %314, label %316

314:                                              ; preds = %290
  %315 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInSpecialHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %309, i64 %299) #6
  br label %318

316:                                              ; preds = %290
  %317 = tail call i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb0EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* %0, i64 %309, i64 %299) #6
  br label %318

318:                                              ; preds = %314, %316
  %319 = phi i32 [ %315, %314 ], [ %317, %316 ]
  store i32 %319, i32* %295, align 4
  br label %320

320:                                              ; preds = %318, %260
  ret void
}

declare i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal16NumberDictionary3SetEPNS0_7IsolateENS0_6HandleIS1_EEjNS4_INS0_6ObjectEEENS4_INS0_8JSObjectEEENS0_15PropertyDetailsE(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject19RequireSlowElementsENS0_16NumberDictionaryE(%"class.v8::internal::JSObject"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal8JSObject21SetNormalizedPropertyENS0_6HandleIS1_EENS2_INS0_4NameEEENS2_INS0_6ObjectEEENS0_15PropertyDetailsE(i64*, i64*, i64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal14LookupIterator16HolderIsReceiverEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %9 to i32
  %14 = trunc i64 %12 to i32
  %15 = icmp eq i32 %13, %14
  br label %16

16:                                               ; preds = %1, %6
  %17 = phi i1 [ %15, %6 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal14LookupIterator33HolderIsReceiverOrHiddenPrototypeEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %9 to i32
  %14 = trunc i64 %12 to i32
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %43, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %9, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %43, label %23

23:                                               ; preds = %16
  %24 = add i64 %9, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i64 %20, 4294967295
  %28 = icmp eq i64 %27, 0
  tail call void @llvm.assume(i1 %28) #6
  %29 = zext i32 %26 to i64
  %30 = or i64 %20, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 190
  br i1 %34, label %35, label %43

35:                                               ; preds = %23
  %36 = load atomic i32, i32* %25 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %20, %37
  %39 = add i64 %38, 15
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %14
  br label %43

43:                                               ; preds = %1, %16, %23, %6, %35
  %44 = phi i1 [ %42, %35 ], [ true, %1 ], [ true, %6 ], [ false, %23 ], [ false, %16 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal14LookupIterator10FetchValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Representation", align 1
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4294967295
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = add i64 %6, -1
  %12 = inttoptr i64 %11 to i32*
  br label %31

13:                                               ; preds = %2
  %14 = icmp eq i64 %8, -1
  br i1 %14, label %15, label %18

15:                                               ; preds = %13
  %16 = add i64 %6, -1
  %17 = inttoptr i64 %16 to i32*
  br label %109

18:                                               ; preds = %13
  %19 = and i64 %6, -4294967296
  %20 = add i64 %6, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 10
  %26 = inttoptr i64 %25 to i8*
  %27 = load i8, i8* %26, align 1
  %28 = lshr i8 %27, 2
  %29 = add nsw i8 %28, -17
  %30 = icmp ult i8 %29, 22
  br i1 %30, label %31, label %109

31:                                               ; preds = %10, %18
  %32 = phi i32* [ %12, %10 ], [ %21, %18 ]
  %33 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %34 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = load atomic i32, i32* %32 monotonic, align 4
  %38 = and i64 %36, 4294967295
  %39 = icmp eq i64 %38, 0
  tail call void @llvm.assume(i1 %39) #6
  %40 = zext i32 %37 to i64
  %41 = or i64 %36, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = and i16 %44, -2
  %46 = icmp eq i16 %45, 186
  br i1 %46, label %47, label %90, !prof !4

47:                                               ; preds = %31
  %48 = and i64 %6, -4294967296
  %49 = load atomic i32, i32* %32 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %48, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = icmp eq i16 %54, 187
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %414

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = add i64 %6, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp ugt i32 %64, %61
  br i1 %65, label %68, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %414

68:                                               ; preds = %58
  %69 = load atomic i32, i32* %32 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %48, %70
  %72 = add i64 %71, 19
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = or i64 %48, %75
  %77 = add i64 %76, 3
  %78 = inttoptr i64 %77 to %"class.v8::internal::wasm::ArrayType"**
  %79 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %78, align 1
  %80 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %79, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 31
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  %87 = mul i32 %86, %61
  %88 = add i32 %87, 12
  %89 = tail call i64* @_ZN2v88internal10WasmObject11ReadValueAtEPNS0_7IsolateENS0_6HandleINS0_10HeapObjectEEENS0_4wasm9ValueTypeEj(%"class.v8::internal::Isolate"* %34, i64* %5, i32 %81, i32 %88) #6
  br label %414

90:                                               ; preds = %31
  %91 = load atomic i32, i32* %32 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %36, %92
  %94 = add i64 %93, 10
  %95 = inttoptr i64 %94 to i8*
  %96 = load i8, i8* %95, align 1
  %97 = lshr i8 %96, 2
  %98 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %99 = zext i8 %97 to i64
  %100 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %98, i64 %99
  %101 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::ElementsAccessor"* %101 to i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)***
  %105 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)**, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*** %104, align 8
  %106 = getelementptr inbounds i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %105, i64 5
  %107 = load i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)*, i64* (%"class.v8::internal::ElementsAccessor"*, i64*, i64)** %106, align 8
  %108 = tail call i64* %107(%"class.v8::internal::ElementsAccessor"* %101, i64* %5, i64 %103) #6
  br label %414

109:                                              ; preds = %15, %18
  %110 = phi i32* [ %17, %15 ], [ %21, %18 ]
  %111 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %112 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 4
  %114 = load i64, i64* %113, align 8
  %115 = load atomic i32, i32* %110 monotonic, align 4
  %116 = and i64 %114, 4294967295
  %117 = icmp eq i64 %116, 0
  tail call void @llvm.assume(i1 %117) #6
  %118 = zext i32 %115 to i64
  %119 = or i64 %114, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = icmp eq i16 %122, 189
  br i1 %123, label %124, label %149

124:                                              ; preds = %109
  %125 = add i64 %6, 3
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 acquire, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %114, %128
  %130 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %111, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %130, i64 0, i32 0, i32 4
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = shl i32 %135, 2
  %137 = add i32 %136, 20
  %138 = sext i32 %137 to i64
  %139 = add i64 %129, 7
  %140 = add i64 %139, %138
  %141 = inttoptr i64 %140 to i32*
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i64 %132, 4294967295
  %144 = icmp eq i64 %143, 0
  tail call void @llvm.assume(i1 %144) #6
  %145 = zext i32 %142 to i64
  %146 = or i64 %132, %145
  %147 = add i64 %146, 11
  %148 = inttoptr i64 %147 to i32*
  br label %389

149:                                              ; preds = %109
  %150 = load atomic i32, i32* %110 monotonic, align 4
  %151 = zext i32 %150 to i64
  %152 = or i64 %114, %151
  %153 = add i64 %152, 11
  %154 = inttoptr i64 %153 to i32*
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2097152
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %198, label %158

158:                                              ; preds = %149
  %159 = add i64 %6, 3
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = or i64 %114, %162
  %164 = and i64 %162, 1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %187

166:                                              ; preds = %158
  %167 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %168 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %167, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %167, i64 0, i32 0, i32 1
  %171 = load i8, i8* %170, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %167, i64 0, i32 1, i64 0
  br label %183

175:                                              ; preds = %169, %166
  %176 = and i64 %6, -262144
  %177 = or i64 %176, 16
  %178 = inttoptr i64 %177 to i64*
  %179 = load i64, i64* %178, align 16
  %180 = add i64 %179, -41416
  %181 = inttoptr i64 %180 to %"class.v8::internal::Isolate"*
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %181, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %183

183:                                              ; preds = %175, %173
  %184 = phi i64* [ %182, %175 ], [ %174, %173 ]
  %185 = getelementptr inbounds i64, i64* %184, i64 115
  %186 = load i64, i64* %185, align 8
  br label %187

187:                                              ; preds = %158, %183
  %188 = phi i64 [ %186, %183 ], [ %163, %158 ]
  %189 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = mul i64 %190, 51539607552
  %192 = add i64 %191, 103079215104
  %193 = ashr exact i64 %192, 32
  %194 = add i64 %188, 7
  %195 = add i64 %194, %193
  %196 = inttoptr i64 %195 to i32*
  %197 = load atomic i32, i32* %196 monotonic, align 4
  br label %389

198:                                              ; preds = %149
  %199 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = load atomic i32, i32* %110 monotonic, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %114, %204
  br i1 %202, label %206, label %374

206:                                              ; preds = %198
  %207 = add i64 %205, 7
  %208 = inttoptr i64 %207 to i16*
  %209 = load atomic i16, i16* %208 monotonic, align 2
  %210 = and i16 %209, -2
  %211 = icmp eq i16 %210, 186
  br i1 %211, label %212, label %294, !prof !4

212:                                              ; preds = %206
  %213 = icmp eq i32 %1, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %212
  %215 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %414

216:                                              ; preds = %212
  %217 = load atomic i32, i32* %110 monotonic, align 4
  %218 = zext i32 %217 to i64
  %219 = or i64 %114, %218
  %220 = add i64 %219, 7
  %221 = inttoptr i64 %220 to i16*
  %222 = load atomic i16, i16* %221 monotonic, align 2
  %223 = icmp eq i16 %222, 186
  br i1 %223, label %224, label %257

224:                                              ; preds = %216
  %225 = add i64 %6, 7
  %226 = inttoptr i64 %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = icmp ult i32 %227, 1073741824
  br i1 %228, label %229, label %250

229:                                              ; preds = %224
  %230 = sext i32 %227 to i64
  %231 = shl nsw i64 %230, 1
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 4
  %233 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %232, align 8
  %234 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %229
  %236 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %233, i64 %231) #6
  br label %414

237:                                              ; preds = %229
  %238 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 0
  %239 = load i64*, i64** %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 31, i32 1
  %241 = load i64*, i64** %240, align 8
  %242 = icmp eq i64* %239, %241
  br i1 %242, label %243, label %245

243:                                              ; preds = %237
  %244 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %112) #6
  br label %245

245:                                              ; preds = %243, %237
  %246 = phi i64* [ %244, %243 ], [ %239, %237 ]
  %247 = ptrtoint i64* %246 to i64
  %248 = add i64 %247, 8
  %249 = inttoptr i64 %248 to i64*
  store i64* %249, i64** %238, align 8
  store i64 %231, i64* %246, align 8
  br label %414

250:                                              ; preds = %224
  %251 = bitcast %"class.v8::internal::Isolate"* %112 to %"class.v8::internal::FactoryBase"*
  %252 = uitofp i32 %227 to double
  %253 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %251) #6
  %254 = load i64, i64* %253, align 8
  %255 = add i64 %254, 3
  %256 = inttoptr i64 %255 to double*
  store double %252, double* %256, align 1
  br label %414

257:                                              ; preds = %216
  %258 = lshr i32 %200, 19
  %259 = and i32 %258, 1023
  %260 = and i64 %6, -4294967296
  %261 = load atomic i32, i32* %110 monotonic, align 4
  %262 = zext i32 %261 to i64
  %263 = or i64 %260, %262
  %264 = add i64 %263, 19
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = zext i32 %266 to i64
  %268 = or i64 %260, %267
  %269 = add i64 %268, 3
  %270 = inttoptr i64 %269 to %"class.v8::internal::wasm::StructType"**
  %271 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %270, align 1
  %272 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %271, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = icmp ugt i32 %273, %259
  br i1 %274, label %276, label %275, !prof !3

275:                                              ; preds = %257
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

276:                                              ; preds = %257
  %277 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %271, i64 0, i32 2
  %278 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %277, align 8
  %279 = zext i32 %259 to i64
  %280 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %278, i64 %279, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %259, 0
  br i1 %282, label %291, label %283

283:                                              ; preds = %276
  %284 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %271, i64 0, i32 1
  %285 = load i32*, i32** %284, align 8
  %286 = add nsw i32 %259, -1
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i32, i32* %285, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = add i32 %289, 8
  br label %291

291:                                              ; preds = %276, %283
  %292 = phi i32 [ %290, %283 ], [ 8, %276 ]
  %293 = tail call i64* @_ZN2v88internal10WasmObject11ReadValueAtEPNS0_7IsolateENS0_6HandleINS0_10HeapObjectEEENS0_4wasm9ValueTypeEj(%"class.v8::internal::Isolate"* %112, i64* %5, i32 %281, i32 %292) #6
  br label %414

294:                                              ; preds = %206
  %295 = load atomic i32, i32* %110 monotonic, align 4
  %296 = zext i32 %295 to i64
  %297 = or i64 %114, %296
  %298 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = add i64 %297, 23
  %301 = inttoptr i64 %300 to i32*
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = zext i32 %302 to i64
  %304 = or i64 %114, %303
  %305 = mul i64 %299, 51539607552
  %306 = add i64 %305, 68719476736
  %307 = ashr exact i64 %306, 32
  %308 = or i64 %307, 3
  %309 = add i64 %308, %304
  %310 = inttoptr i64 %309 to i32*
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = ashr i32 %311, 1
  %313 = lshr i32 %312, 19
  %314 = and i32 %313, 1023
  %315 = lshr i32 %312, 6
  %316 = trunc i32 %315 to i8
  %317 = and i8 %316, 7
  %318 = add i64 %297, 3
  %319 = inttoptr i64 %318 to i8*
  %320 = load atomic i8, i8* %319 monotonic, align 1
  %321 = zext i8 %320 to i32
  %322 = add i64 %297, 4
  %323 = inttoptr i64 %322 to i8*
  %324 = load atomic i8, i8* %323 monotonic, align 1
  %325 = zext i8 %324 to i32
  %326 = sub nsw i32 %321, %325
  %327 = icmp slt i32 %314, %326
  br i1 %327, label %328, label %336

328:                                              ; preds = %294
  %329 = load atomic i8, i8* %323 monotonic, align 1
  %330 = zext i8 %329 to i64
  %331 = shl nuw nsw i64 %330, 28
  %332 = load atomic i8, i8* %323 monotonic, align 1
  %333 = zext i8 %332 to i32
  %334 = add nuw nsw i32 %314, %333
  %335 = shl nuw nsw i32 %334, 2
  br label %340

336:                                              ; preds = %294
  %337 = sub nsw i32 %314, %326
  %338 = shl nsw i32 %337, 2
  %339 = add nsw i32 %338, 8
  br label %340

340:                                              ; preds = %336, %328
  %341 = phi i32 [ %335, %328 ], [ %339, %336 ]
  %342 = phi i64 [ %331, %328 ], [ 536870912, %336 ]
  %343 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %343) #6
  store i8 %317, i8* %343, align 1
  %344 = icmp ult i8 %317, 5
  br i1 %344, label %347, label %345

345:                                              ; preds = %340
  %346 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %3) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %346) #6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

347:                                              ; preds = %340
  %348 = zext i8 %317 to i64
  %349 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE, i64 0, i64 %348
  %350 = load i64, i64* %349, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %343) #6
  %351 = zext i1 %327 to i64
  %352 = shl nuw nsw i64 %351, 13
  %353 = sext i32 %341 to i64
  %354 = sext i32 %326 to i64
  %355 = shl nsw i64 %354, 16
  %356 = or i64 %352, %355
  %357 = or i64 %356, %353
  %358 = or i64 %357, %342
  %359 = or i64 %358, %350
  %360 = icmp eq i32 %1, 1
  %361 = and i64 %357, 8192
  %362 = icmp ne i64 %361, 0
  %363 = and i1 %360, %362
  %364 = and i64 %359, 49152
  %365 = icmp eq i64 %364, 16384
  %366 = and i1 %363, %365
  br i1 %366, label %367, label %369

367:                                              ; preds = %347
  %368 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %112, i64 0, i32 0, i32 7, i32 0, i64 4
  br label %414

369:                                              ; preds = %347
  %370 = lshr i32 %200, 6
  %371 = trunc i32 %370 to i8
  %372 = and i8 %371, 7
  %373 = tail call i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64* %5, i8 %372, i64 %359) #6
  br label %414

374:                                              ; preds = %198
  %375 = add i64 %205, 23
  %376 = inttoptr i64 %375 to i32*
  %377 = load i32, i32* %376, align 4
  %378 = zext i32 %377 to i64
  %379 = or i64 %114, %378
  %380 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %381 = load i64, i64* %380, align 8
  %382 = mul i64 %381, 51539607552
  %383 = add i64 %382, 68719476736
  %384 = ashr exact i64 %383, 32
  %385 = add i64 %379, 7
  %386 = add i64 %385, %384
  %387 = inttoptr i64 %386 to i32*
  %388 = load atomic i32, i32* %387 monotonic, align 4
  br label %389

389:                                              ; preds = %124, %374, %187
  %390 = phi i32* [ %148, %124 ], [ %387, %374 ], [ %196, %187 ]
  %391 = phi i64 [ %132, %124 ], [ %114, %374 ], [ %114, %187 ]
  %392 = phi %"class.v8::internal::Isolate"* [ %130, %124 ], [ %112, %374 ], [ %112, %187 ]
  %393 = load i32, i32* %390, align 4
  %394 = zext i32 %393 to i64
  %395 = or i64 %391, %394
  %396 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %392, i64 0, i32 31, i32 4
  %397 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %396, align 8
  %398 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %397, null
  br i1 %398, label %401, label %399

399:                                              ; preds = %389
  %400 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %397, i64 %395) #6
  br label %414

401:                                              ; preds = %389
  %402 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %392, i64 0, i32 31, i32 0
  %403 = load i64*, i64** %402, align 8
  %404 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %392, i64 0, i32 31, i32 1
  %405 = load i64*, i64** %404, align 8
  %406 = icmp eq i64* %403, %405
  br i1 %406, label %407, label %409

407:                                              ; preds = %401
  %408 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %392) #6
  br label %409

409:                                              ; preds = %407, %401
  %410 = phi i64* [ %408, %407 ], [ %403, %401 ]
  %411 = ptrtoint i64* %410 to i64
  %412 = add i64 %411, 8
  %413 = inttoptr i64 %412 to i64*
  store i64* %413, i64** %402, align 8
  store i64 %395, i64* %410, align 8
  br label %414

414:                                              ; preds = %409, %399, %367, %369, %250, %245, %235, %68, %66, %291, %214, %90, %56
  %415 = phi i64* [ %57, %56 ], [ %108, %90 ], [ %215, %214 ], [ %293, %291 ], [ %89, %68 ], [ %67, %66 ], [ %253, %250 ], [ %236, %235 ], [ %246, %245 ], [ %368, %367 ], [ %373, %369 ], [ %400, %399 ], [ %410, %409 ]
  ret i64* %415
}

declare i64* @_ZN2v88internal8JSObject14FastPropertyAtENS0_6HandleIS1_EENS0_14RepresentationENS0_10FieldIndexE(i64*, i8, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal14LookupIterator23IsConstDictValueEqualToENS0_6ObjectE(%"class.v8::internal::LookupIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 7, i32 0, i64 3
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %1 to i32
  %8 = trunc i64 %6 to i32
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %121, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 3
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = and i64 %18, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %43

22:                                               ; preds = %10
  %23 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %24 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %23, i64 0, i32 1, i64 0
  br label %39

31:                                               ; preds = %25, %22
  %32 = and i64 %13, -262144
  %33 = or i64 %32, 16
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = add i64 %35, -41416
  %37 = inttoptr i64 %36 to %"class.v8::internal::Isolate"*
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %37, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %39

39:                                               ; preds = %31, %29
  %40 = phi i64* [ %38, %31 ], [ %30, %29 ]
  %41 = getelementptr inbounds i64, i64* %40, i64 115
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %10, %39
  %44 = phi i64 [ %42, %39 ], [ %19, %10 ]
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %44, -4294967296
  %48 = mul i64 %46, 51539607552
  %49 = add i64 %48, 103079215104
  %50 = ashr exact i64 %49, 32
  %51 = add i64 %44, 7
  %52 = add i64 %51, %50
  %53 = inttoptr i64 %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %47, %55
  %57 = icmp eq i32 %54, %8
  %58 = icmp eq i32 %54, %7
  %59 = or i1 %57, %58
  br i1 %59, label %121, label %60

60:                                               ; preds = %43
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %55, 1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %60
  %66 = add i64 %56, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i64 %62, 4294967295
  %70 = icmp eq i64 %69, 0
  tail call void @llvm.assume(i1 %70) #6
  %71 = zext i32 %68 to i64
  %72 = or i64 %62, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = icmp eq i16 %75, 66
  br i1 %76, label %77, label %121

77:                                               ; preds = %60, %65
  %78 = and i64 %1, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %92, label %80

80:                                               ; preds = %77
  %81 = add i64 %1, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i64 %62, 4294967295
  %85 = icmp eq i64 %84, 0
  tail call void @llvm.assume(i1 %85) #6
  %86 = zext i32 %83 to i64
  %87 = or i64 %62, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 66
  br i1 %91, label %92, label %121

92:                                               ; preds = %77, %80
  br i1 %64, label %93, label %96

93:                                               ; preds = %92
  %94 = ashr i32 %54, 1
  %95 = sitofp i32 %94 to double
  br label %100

96:                                               ; preds = %92
  %97 = add i64 %56, 3
  %98 = inttoptr i64 %97 to double*
  %99 = load double, double* %98, align 1
  br label %100

100:                                              ; preds = %93, %96
  %101 = phi double [ %95, %93 ], [ %99, %96 ]
  br i1 %79, label %102, label %105

102:                                              ; preds = %100
  %103 = ashr i32 %7, 1
  %104 = sitofp i32 %103 to double
  br label %109

105:                                              ; preds = %100
  %106 = add i64 %1, 3
  %107 = inttoptr i64 %106 to double*
  %108 = load double, double* %107, align 1
  br label %109

109:                                              ; preds = %102, %105
  %110 = phi double [ %104, %102 ], [ %108, %105 ]
  %111 = fcmp une double %101, %110
  br i1 %111, label %112, label %116

112:                                              ; preds = %109
  %113 = fcmp uno double %101, 0.000000e+00
  br i1 %113, label %114, label %121

114:                                              ; preds = %112
  %115 = fcmp uno double %110, 0.000000e+00
  br label %121

116:                                              ; preds = %109
  %117 = bitcast double %101 to i64
  %118 = bitcast double %110 to i64
  %119 = xor i64 %118, %117
  %120 = icmp sgt i64 %119, -1
  br label %121

121:                                              ; preds = %43, %80, %65, %112, %114, %116, %2
  %122 = phi i1 [ true, %2 ], [ true, %43 ], [ false, %80 ], [ false, %65 ], [ %120, %116 ], [ false, %112 ], [ %115, %114 ]
  ret i1 %122
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal14LookupIterator23GetFieldDescriptorIndexEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal14LookupIterator16GetAccessorIndexEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal14LookupIterator13GetFieldIndexEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Representation", align 1
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i64 %9, 4294967295
  %14 = icmp eq i64 %13, 0
  tail call void @llvm.assume(i1 %14) #6
  %15 = zext i32 %12 to i64
  %16 = or i64 %9, %15
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %9, %22
  %24 = mul i64 %18, 51539607552
  %25 = add i64 %24, 68719476736
  %26 = ashr exact i64 %25, 32
  %27 = or i64 %26, 3
  %28 = add i64 %27, %23
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = ashr i32 %30, 1
  %32 = lshr i32 %31, 19
  %33 = and i32 %32, 1023
  %34 = lshr i32 %31, 6
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 7
  %37 = add i64 %16, 3
  %38 = inttoptr i64 %37 to i8*
  %39 = load atomic i8, i8* %38 monotonic, align 1
  %40 = zext i8 %39 to i32
  %41 = add i64 %16, 4
  %42 = inttoptr i64 %41 to i8*
  %43 = load atomic i8, i8* %42 monotonic, align 1
  %44 = zext i8 %43 to i32
  %45 = sub nsw i32 %40, %44
  %46 = icmp slt i32 %33, %45
  br i1 %46, label %47, label %55

47:                                               ; preds = %1
  %48 = load atomic i8, i8* %42 monotonic, align 1
  %49 = zext i8 %48 to i64
  %50 = shl nuw nsw i64 %49, 28
  %51 = load atomic i8, i8* %42 monotonic, align 1
  %52 = zext i8 %51 to i32
  %53 = add nuw nsw i32 %33, %52
  %54 = shl nuw nsw i32 %53, 2
  br label %59

55:                                               ; preds = %1
  %56 = sub nsw i32 %33, %45
  %57 = shl nsw i32 %56, 2
  %58 = add nsw i32 %57, 8
  br label %59

59:                                               ; preds = %55, %47
  %60 = phi i32 [ %54, %47 ], [ %58, %55 ]
  %61 = phi i64 [ %50, %47 ], [ 536870912, %55 ]
  %62 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #6
  store i8 %36, i8* %62, align 1
  %63 = icmp ult i8 %36, 5
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %2) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %65) #6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

66:                                               ; preds = %59
  %67 = zext i8 %36 to i64
  %68 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE, i64 0, i64 %67
  %69 = load i64, i64* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #6
  %70 = zext i1 %46 to i64
  %71 = shl nuw nsw i64 %70, 13
  %72 = sext i32 %60 to i64
  %73 = sext i32 %45 to i64
  %74 = shl nsw i64 %73, 16
  %75 = or i64 %71, %74
  %76 = or i64 %75, %72
  %77 = or i64 %76, %61
  %78 = or i64 %77, %69
  ret i64 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal14LookupIterator15GetPropertyCellEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %4, 3
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = and i64 %8, 4294967295
  %13 = icmp eq i64 %12, 0
  tail call void @llvm.assume(i1 %13) #6
  %14 = zext i32 %11 to i64
  %15 = or i64 %8, %14
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = shl i32 %21, 2
  %23 = add i32 %22, 20
  %24 = sext i32 %23 to i64
  %25 = add i64 %15, 7
  %26 = add i64 %25, %24
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i64 %18, 4294967295
  %30 = icmp eq i64 %29, 0
  tail call void @llvm.assume(i1 %30) #6
  %31 = zext i32 %28 to i64
  %32 = or i64 %18, %31
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 4
  %34 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %33, align 8
  %35 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %1
  %37 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %34, i64 %32) #6
  br label %51

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %16) #6
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %32, i64* %47, align 8
  br label %51

51:                                               ; preds = %36, %46
  %52 = phi i64* [ %37, %36 ], [ %47, %46 ]
  ret i64* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal14LookupIterator12GetDataValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i64* @_ZNK2v88internal14LookupIterator10FetchValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 %1)
  ret i64* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE(%"class.v8::internal::JSObject"*, i64, i32, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca %"class.v8::internal::Representation", align 1
  %6 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 23
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %8, %17
  %19 = mul i64 %1, 51539607552
  %20 = add i64 %19, 68719476736
  %21 = ashr exact i64 %20, 32
  %22 = or i64 %21, 3
  %23 = add i64 %18, %22
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = ashr i32 %25, 1
  %27 = lshr i32 %26, 19
  %28 = and i32 %27, 1023
  %29 = lshr i32 %26, 6
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 7
  %32 = add i64 %13, 3
  %33 = inttoptr i64 %32 to i8*
  %34 = load atomic i8, i8* %33 monotonic, align 1
  %35 = zext i8 %34 to i32
  %36 = add i64 %13, 4
  %37 = inttoptr i64 %36 to i8*
  %38 = load atomic i8, i8* %37 monotonic, align 1
  %39 = zext i8 %38 to i32
  %40 = sub nsw i32 %35, %39
  %41 = icmp slt i32 %28, %40
  br i1 %41, label %42, label %50

42:                                               ; preds = %4
  %43 = load atomic i8, i8* %37 monotonic, align 1
  %44 = zext i8 %43 to i64
  %45 = shl nuw nsw i64 %44, 28
  %46 = load atomic i8, i8* %37 monotonic, align 1
  %47 = zext i8 %46 to i32
  %48 = add nuw nsw i32 %28, %47
  %49 = shl nuw nsw i32 %48, 2
  br label %54

50:                                               ; preds = %4
  %51 = sub nsw i32 %28, %40
  %52 = shl nsw i32 %51, 2
  %53 = add nsw i32 %52, 8
  br label %54

54:                                               ; preds = %50, %42
  %55 = phi i32 [ %49, %42 ], [ %53, %50 ]
  %56 = phi i64 [ %45, %42 ], [ 536870912, %50 ]
  %57 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #6
  store i8 %31, i8* %57, align 1
  %58 = icmp ult i8 %31, 5
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  %60 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %5) #6
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* %60) #6
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

61:                                               ; preds = %54
  %62 = zext i8 %31 to i64
  %63 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2v88internal8JSObject12WriteToFieldENS0_13InternalIndexENS0_15PropertyDetailsENS0_6ObjectE, i64 0, i64 %62
  %64 = load i64, i64* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #6
  %65 = zext i1 %41 to i64
  %66 = shl nuw nsw i64 %65, 13
  %67 = sext i32 %55 to i64
  %68 = sext i32 %40 to i64
  %69 = shl nsw i64 %68, 16
  %70 = or i64 %66, %69
  %71 = or i64 %70, %67
  %72 = or i64 %71, %56
  %73 = and i32 %2, 448
  %74 = icmp eq i32 %73, 128
  br i1 %74, label %75, label %188

75:                                               ; preds = %61
  %76 = and i64 %3, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %83

78:                                               ; preds = %75
  %79 = trunc i64 %3 to i32
  %80 = ashr i32 %79, 1
  %81 = sitofp i32 %80 to double
  %82 = bitcast double %81 to i64
  br label %111

83:                                               ; preds = %75
  %84 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %85 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %84, null
  br i1 %85, label %92, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %84, i64 0, i32 0, i32 1
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %84, i64 0, i32 1, i64 0
  br label %100

92:                                               ; preds = %86, %83
  %93 = and i64 %3, -262144
  %94 = or i64 %93, 16
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 16
  %97 = add i64 %96, -41416
  %98 = inttoptr i64 %97 to %"class.v8::internal::Isolate"*
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %98, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %100

100:                                              ; preds = %90, %92
  %101 = phi i64* [ %99, %92 ], [ %91, %90 ]
  %102 = getelementptr inbounds i64, i64* %101, i64 3
  %103 = load i64, i64* %102, align 8
  %104 = trunc i64 %3 to i32
  %105 = trunc i64 %103 to i32
  %106 = icmp eq i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %100
  %108 = add i64 %3, 3
  %109 = inttoptr i64 %108 to i64*
  %110 = load i64, i64* %109, align 1
  br label %111

111:                                              ; preds = %100, %107, %78
  %112 = phi i64 [ %82, %78 ], [ %110, %107 ], [ -2251799814209537, %100 ]
  %113 = and i64 %71, 8192
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = and i64 %67, 8191
  %117 = add nsw i64 %116, -1
  %118 = add i64 %117, %7
  %119 = inttoptr i64 %118 to i32*
  br label %181

120:                                              ; preds = %111
  %121 = add i64 %7, 3
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %8, %124
  %126 = and i64 %124, 1
  %127 = icmp eq i64 %126, 0
  %128 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %127, label %151, label %129

129:                                              ; preds = %120
  %130 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %128, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 0, i32 1
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 1, i64 0
  br label %145

137:                                              ; preds = %131, %129
  %138 = and i64 %7, -262144
  %139 = or i64 %138, 16
  %140 = inttoptr i64 %139 to i64*
  %141 = load i64, i64* %140, align 16
  %142 = add i64 %141, -41416
  %143 = inttoptr i64 %142 to %"class.v8::internal::Isolate"*
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %143, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %145

145:                                              ; preds = %137, %135
  %146 = phi i64* [ %144, %137 ], [ %136, %135 ]
  %147 = getelementptr inbounds i64, i64* %146, i64 29
  %148 = load i64, i64* %147, align 8
  %149 = trunc i64 %148 to i32
  %150 = icmp eq i32 %123, %149
  br i1 %150, label %151, label %171

151:                                              ; preds = %145, %120
  %152 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %128, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 0, i32 1
  %155 = load i8, i8* %154, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %128, i64 0, i32 1, i64 0
  br label %167

159:                                              ; preds = %153, %151
  %160 = and i64 %7, -262144
  %161 = or i64 %160, 16
  %162 = inttoptr i64 %161 to i64*
  %163 = load i64, i64* %162, align 16
  %164 = add i64 %163, -41416
  %165 = inttoptr i64 %164 to %"class.v8::internal::Isolate"*
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %165, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %167

167:                                              ; preds = %159, %157
  %168 = phi i64* [ %166, %159 ], [ %158, %157 ]
  %169 = getelementptr inbounds i64, i64* %168, i64 106
  %170 = load i64, i64* %169, align 8
  br label %171

171:                                              ; preds = %167, %145
  %172 = phi i64 [ %170, %167 ], [ %125, %145 ]
  %173 = lshr i64 %72, 26
  %174 = and i64 %173, 124
  %175 = and i64 %67, 8188
  %176 = add nuw nsw i64 %175, 7
  %177 = sub nsw i64 %176, %174
  %178 = add i64 %177, %172
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  br label %181

181:                                              ; preds = %115, %171
  %182 = phi i32* [ %119, %115 ], [ %179, %171 ]
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %8, %184
  %186 = add i64 %185, 3
  %187 = inttoptr i64 %186 to i64*
  store i64 %112, i64* %187, align 1
  br label %190

188:                                              ; preds = %61
  %189 = or i64 %64, %72
  tail call void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"* %0, i64 %189, i64 %3, i32 4)
  br label %190

190:                                              ; preds = %188, %181
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal14LookupIterator8NotFoundENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %1, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i64 %6, 4294967295
  %11 = icmp eq i64 %10, 0
  tail call void @llvm.assume(i1 %11) #6
  %12 = zext i32 %9 to i64
  %13 = or i64 %6, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 1080
  br i1 %17, label %18, label %38

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, -1
  br i1 %21, label %22, label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -1
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %6, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp ult i16 %33, 64
  br i1 %34, label %35, label %38

35:                                               ; preds = %22
  %36 = tail call zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64 %25) #6
  %37 = select i1 %36, i32 1, i32 4
  br label %38

38:                                               ; preds = %18, %22, %2, %35
  %39 = phi i32 [ %37, %35 ], [ 4, %2 ], [ 1, %18 ], [ 4, %22 ]
  ret i32 %39
}

declare zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal14LookupIterator34GetInterceptorForFailedAccessCheckEv(%"class.v8::internal::LookupIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = tail call i64 @_ZN2v88internal15AccessCheckInfo3GetEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"* %3, i64* %5) #6
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 4294967295
  %13 = and i64 %6, -4294967296
  %14 = select i1 %12, i64 11, i64 7
  %15 = add i64 %6, %14
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %13, %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %41, label %21

21:                                               ; preds = %9
  %22 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 4
  %24 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %23, align 8
  %25 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %24, i64 %19) #6
  br label %41

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 31, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = icmp eq i64* %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %22) #6
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi i64* [ %35, %34 ], [ %30, %28 ]
  %38 = ptrtoint i64* %37 to i64
  %39 = add i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  store i64* %40, i64** %29, align 8
  store i64 %19, i64* %37, align 8
  br label %41

41:                                               ; preds = %9, %1, %36, %26
  %42 = phi i64* [ %27, %26 ], [ %37, %36 ], [ null, %9 ], [ null, %1 ]
  ret i64* %42
}

declare i64 @_ZN2v88internal15AccessCheckInfo3GetEPNS0_7IsolateENS0_6HandleINS0_8JSObjectEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14LookupIterator23TryLookupCachedPropertyENS0_6HandleINS0_12AccessorPairEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2v88internal14LookupIterator20LookupCachedPropertyENS0_6HandleINS0_12AccessorPairEEE(%"class.v8::internal::LookupIterator"* %0, i64* %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14LookupIterator20LookupCachedPropertyENS0_6HandleINS0_12AccessorPairEEE(%"class.v8::internal::LookupIterator"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %5, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = and i64 %7, 4294967295
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #6
  %13 = zext i32 %10 to i64
  %14 = or i64 %7, %13
  %15 = tail call { i8, i64 } @_ZN2v88internal20FunctionTemplateInfo24TryGetCachedPropertyNameEPNS0_7IsolateENS0_6ObjectE(%"class.v8::internal::Isolate"* %4, i64 %14) #6
  %16 = extractvalue { i8, i64 } %15, 0
  %17 = extractvalue { i8, i64 } %15, 1
  switch i8 %16, label %18 [
    i8 0, label %55
    i8 1, label %19
  ], !prof !5

18:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0)) #7
  unreachable

19:                                               ; preds = %2
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 31, i32 4
  %22 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %21, align 8
  %23 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %22, i64 %17) #6
  br label %39

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 31, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 31, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %28, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %20) #6
  br label %34

34:                                               ; preds = %32, %26
  %35 = phi i64* [ %33, %32 ], [ %28, %26 ]
  %36 = ptrtoint i64* %35 to i64
  %37 = add i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  store i64* %38, i64** %27, align 8
  store i64 %17, i64* %35, align 8
  br label %39

39:                                               ; preds = %24, %34
  %40 = phi i64* [ %25, %24 ], [ %35, %34 ]
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %40, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, -1
  %45 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  br i1 %44, label %49, label %48

48:                                               ; preds = %39
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %50

49:                                               ; preds = %39
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #6
  br label %50

50:                                               ; preds = %48, %49
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 6
  br i1 %53, label %55, label %54, !prof !3

54:                                               ; preds = %50
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

55:                                               ; preds = %2, %50
  %56 = phi i1 [ false, %2 ], [ true, %50 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal14LookupIterator23TryLookupCachedPropertyEv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 5
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = tail call i64* @_ZNK2v88internal14LookupIterator10FetchValueENS0_16AllocationPolicyE(%"class.v8::internal::LookupIterator"* %0, i32 0) #6
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %9 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %9, i64 0, i32 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %7, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %5
  %15 = add i64 %7, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %11, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #6
  %20 = zext i32 %17 to i64
  %21 = or i64 %11, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 87
  br i1 %25, label %26, label %28

26:                                               ; preds = %14
  %27 = tail call zeroext i1 @_ZN2v88internal14LookupIterator20LookupCachedPropertyENS0_6HandleINS0_12AccessorPairEEE(%"class.v8::internal::LookupIterator"* %0, i64* %6)
  br label %28

28:                                               ; preds = %5, %14, %26, %1
  %29 = phi i1 [ false, %1 ], [ false, %14 ], [ %27, %26 ], [ false, %5 ]
  ret i1 %29
}

declare { i8, i64 } @_ZN2v88internal20FunctionTemplateInfo24TryGetCachedPropertyNameEPNS0_7IsolateENS0_6ObjectE(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2v88internal24ConcurrentLookupIterator19TryGetOwnCowElementEPNS0_7IsolateENS0_10FixedArrayENS0_12ElementsKindEim(%"class.v8::internal::Isolate"*, i64, i8 zeroext, i32, i64) local_unnamed_addr #0 align 2 {
  %6 = add i64 %1, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 13
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

14:                                               ; preds = %5
  %15 = sext i32 %3 to i64
  %16 = icmp ugt i64 %15, %4
  br i1 %16, label %17, label %45

17:                                               ; preds = %14
  %18 = add i64 %1, 3
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = ashr i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = icmp ugt i64 %22, %4
  br i1 %23, label %24, label %45

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %4 to i32
  %28 = shl i32 %27, 2
  %29 = sext i32 %28 to i64
  %30 = add i64 %1, 7
  %31 = add i64 %30, %29
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i64 %26, 4294967295
  %35 = icmp eq i64 %34, 0
  tail call void @llvm.assume(i1 %35) #6
  %36 = zext i32 %33 to i64
  %37 = or i64 %26, %36
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 7, i32 0, i64 5
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %33, %40
  %42 = select i1 %41, i64 0, i64 %37
  %43 = xor i1 %41, true
  %44 = zext i1 %43 to i8
  br label %45

45:                                               ; preds = %24, %17, %14
  %46 = phi i64 [ 0, %14 ], [ 0, %17 ], [ %42, %24 ]
  %47 = phi i8 [ 0, %14 ], [ 0, %17 ], [ %44, %24 ]
  %48 = insertvalue { i8, i64 } undef, i8 %47, 0
  %49 = insertvalue { i8, i64 } %48, i64 %46, 1
  ret { i8, i64 } %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal24ConcurrentLookupIterator24TryGetOwnConstantElementEPNS0_6ObjectEPNS0_7IsolateEPNS0_12LocalIsolateENS0_8JSObjectENS0_14FixedArrayBaseENS0_12ElementsKindEm(%"class.v8::internal::Object"* nocapture, %"class.v8::internal::Isolate"*, %"class.v8::internal::LocalIsolate"* readonly, i64, i64, i8 zeroext, i64) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::String", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::StringShape", align 4
  %11 = and i8 %5, -2
  %12 = icmp eq i8 %11, 10
  br i1 %12, label %13, label %45

13:                                               ; preds = %7
  %14 = add i64 %4, 3
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = ashr i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = icmp ugt i64 %18, %6
  br i1 %19, label %20, label %127

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %6 to i32
  %24 = shl i32 %23, 2
  %25 = sext i32 %24 to i64
  %26 = add i64 %4, 7
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i64 %22, 4294967295
  %31 = icmp eq i64 %30, 0
  tail call void @llvm.assume(i1 %31) #6
  %32 = zext i32 %29 to i64
  %33 = or i64 %22, %32
  %34 = and i8 %5, 1
  %35 = icmp ne i8 %34, 0
  %36 = icmp ult i8 %5, 12
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %43

38:                                               ; preds = %20
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %29, %41
  br i1 %42, label %127, label %43

43:                                               ; preds = %20, %38
  %44 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  store i64 %33, i64* %44, align 8
  br label %127

45:                                               ; preds = %7
  %46 = icmp ne i8 %5, 12
  %47 = add i8 %5, -15
  %48 = icmp ult i8 %47, 2
  %49 = and i1 %46, %48
  br i1 %49, label %50, label %127

50:                                               ; preds = %45
  %51 = and i64 %3, -4294967296
  %52 = add i64 %3, 11
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %56, -1
  %60 = inttoptr i64 %59 to i32*
  %61 = load atomic i32, i32* %60 acquire, align 4
  %62 = and i64 %58, 4294967295
  %63 = icmp eq i64 %62, 0
  tail call void @llvm.assume(i1 %63) #6
  %64 = zext i32 %61 to i64
  %65 = or i64 %58, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp ugt i16 %68, 31
  %70 = and i16 %68, 7
  %71 = icmp eq i16 %70, 5
  %72 = or i1 %69, %71
  br i1 %72, label %127, label %73

73:                                               ; preds = %50
  %74 = add i64 %56, 7
  %75 = inttoptr i64 %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %77, %6
  br i1 %78, label %79, label %127

79:                                               ; preds = %73
  %80 = icmp eq %"class.v8::internal::LocalIsolate"* %2, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %2, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %2, i64 0, i32 2
  %87 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 17
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %88) #6
  br label %89

89:                                               ; preds = %79, %81, %85
  %90 = phi i1 [ true, %79 ], [ false, %85 ], [ true, %81 ]
  %91 = phi %"class.v8::base::SharedMutex"* [ null, %79 ], [ %88, %85 ], [ null, %81 ]
  %92 = trunc i64 %6 to i32
  %93 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #6
  store i32 %92, i32* %9, align 4
  %94 = bitcast %"class.v8::internal::StringShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #6
  %95 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %10, i64 0, i32 0
  %96 = load atomic i32, i32* %60 acquire, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %51, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = zext i16 %101 to i32
  store i32 %102, i32* %95, align 4
  %103 = bitcast %"class.v8::internal::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #6
  %104 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %104, align 8
  %105 = call zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"* nonnull %10, %"class.v8::internal::String"* nonnull dereferenceable(8) %8, i32* nonnull dereferenceable(4) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #6
  br i1 %90, label %107, label %106

106:                                              ; preds = %89
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %91) #6
  br label %107

107:                                              ; preds = %89, %106
  %108 = icmp ugt i16 %105, 255
  br i1 %108, label %127, label %109

109:                                              ; preds = %107
  %110 = zext i16 %105 to i64
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 620
  %112 = load i64, i64* %111, align 8
  %113 = shl nuw nsw i64 %110, 2
  %114 = add nuw nsw i64 %113, 7
  %115 = add i64 %114, %112
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %117, %120
  br i1 %121, label %127, label %122

122:                                              ; preds = %109
  %123 = and i64 %112, -4294967296
  %124 = zext i32 %117 to i64
  %125 = or i64 %123, %124
  %126 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %0, i64 0, i32 0, i32 0
  store i64 %125, i64* %126, align 8
  br label %127

127:                                              ; preds = %50, %45, %107, %73, %109, %122, %13, %38, %43
  %128 = phi i32 [ 2, %45 ], [ 2, %13 ], [ 0, %43 ], [ 1, %38 ], [ 2, %50 ], [ 2, %73 ], [ 2, %107 ], [ 0, %122 ], [ 2, %109 ]
  ret i32 %128
}

; Function Attrs: nounwind
declare void @llvm.assume(i1) #6

declare i64* @_ZN2v88internal6Object13ConvertToNameEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal10WasmObject11ReadValueAtEPNS0_7IsolateENS0_6HandleINS0_10HeapObjectEEENS0_4wasm9ValueTypeEj(%"class.v8::internal::Isolate"*, i64*, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = load i64, i64* %1, align 8
  %6 = sext i32 %3 to i64
  %7 = add nsw i64 %6, -1
  %8 = add i64 %7, %5
  %9 = trunc i32 %2 to i8
  %10 = and i8 %9, 31
  switch i8 %10, label %120 [
    i8 6, label %11
    i8 7, label %34
    i8 1, label %57
    i8 2, label %90
    i8 3, label %90
    i8 4, label %90
    i8 5, label %90
    i8 10, label %91
    i8 11, label %91
    i8 8, label %118
    i8 9, label %118
    i8 0, label %119
    i8 12, label %119
  ]

11:                                               ; preds = %4
  %12 = inttoptr i64 %8 to i8*
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i64
  %15 = shl nsw i64 %14, 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %15) #6
  br label %121

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %15, i64* %30, align 8
  br label %121

34:                                               ; preds = %4
  %35 = inttoptr i64 %8 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i64
  %38 = shl nsw i64 %37, 1
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %40 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %39, align 8
  %41 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %40, i64 %38) #6
  br label %121

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %48 = load i64*, i64** %47, align 8
  %49 = icmp eq i64* %46, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i64* [ %51, %50 ], [ %46, %44 ]
  %54 = ptrtoint i64* %53 to i64
  %55 = add i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  store i64* %56, i64** %45, align 8
  store i64 %38, i64* %53, align 8
  br label %121

57:                                               ; preds = %4
  %58 = inttoptr i64 %8 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = add nsw i64 %60, 1073741824
  %62 = icmp ult i64 %61, 2147483648
  br i1 %62, label %63, label %83

63:                                               ; preds = %57
  %64 = shl nsw i64 %60, 1
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %66 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %65, align 8
  %67 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %66, i64 %64) #6
  br label %121

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i64* [ %77, %76 ], [ %72, %70 ]
  %80 = ptrtoint i64* %79 to i64
  %81 = add i64 %80, 8
  %82 = inttoptr i64 %81 to i64*
  store i64* %82, i64** %71, align 8
  store i64 %64, i64* %79, align 8
  br label %121

83:                                               ; preds = %57
  %84 = bitcast %"class.v8::internal::Isolate"* %0 to %"class.v8::internal::FactoryBase"*
  %85 = sitofp i32 %59 to double
  %86 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %84) #6
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 3
  %89 = inttoptr i64 %88 to double*
  store double %85, double* %89, align 1
  br label %121

90:                                               ; preds = %4, %4, %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

91:                                               ; preds = %4, %4
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %8 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = and i64 %93, 4294967295
  %97 = icmp eq i64 %96, 0
  tail call void @llvm.assume(i1 %97) #6
  %98 = zext i32 %95 to i64
  %99 = or i64 %93, %98
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %101 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %100, align 8
  %102 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %91
  %104 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %101, i64 %99) #6
  br label %121

105:                                              ; preds = %91
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %109 = load i64*, i64** %108, align 8
  %110 = icmp eq i64* %107, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #6
  br label %113

113:                                              ; preds = %111, %105
  %114 = phi i64* [ %112, %111 ], [ %107, %105 ]
  %115 = ptrtoint i64* %114 to i64
  %116 = add i64 %115, 8
  %117 = inttoptr i64 %116 to i64*
  store i64* %117, i64** %106, align 8
  store i64 %99, i64* %114, align 8
  br label %121

118:                                              ; preds = %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

119:                                              ; preds = %4, %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

120:                                              ; preds = %4
  unreachable

121:                                              ; preds = %113, %103, %83, %78, %68, %52, %42, %29, %19
  %122 = phi i64* [ %20, %19 ], [ %30, %29 ], [ %43, %42 ], [ %53, %52 ], [ %86, %83 ], [ %69, %68 ], [ %79, %78 ], [ %104, %103 ], [ %114, %113 ]
  ret i64* %122
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8JSObject17FastPropertyAtPutENS0_10FieldIndexENS0_6ObjectENS0_16WriteBarrierModeE(%"class.v8::internal::JSObject"*, i64, i64, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = and i64 %1, 8192
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %51, label %7

7:                                                ; preds = %4
  %8 = and i64 %1, 8191
  %9 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %8, -1
  %12 = add i64 %10, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  switch i32 %3, label %31 [
    i32 0, label %140
    i32 4, label %15
  ]

15:                                               ; preds = %7
  %16 = load i64, i64* %9, align 8
  %17 = add i64 %16, %11
  %18 = and i64 %2, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %140, label %20

20:                                               ; preds = %15
  %21 = and i64 %16, -262144
  %22 = or i64 %21, 8
  %23 = inttoptr i64 %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 262144
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = or i64 %21, 16
  %29 = inttoptr i64 %28 to %"class.v8::internal::Heap"**
  %30 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %29, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %30, i64 %16, i64 %17, i64 %2) #6
  br label %34

31:                                               ; preds = %7
  %32 = and i64 %2, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %140, label %34

34:                                               ; preds = %20, %27, %31
  %35 = load i64, i64* %9, align 8
  %36 = add i64 %35, %11
  %37 = and i64 %2, -262144
  %38 = or i64 %37, 8
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %140, label %43

43:                                               ; preds = %34
  %44 = and i64 %35, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 24
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %140

50:                                               ; preds = %43
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %35, i64 %36, i64 %2) #6
  br label %140

51:                                               ; preds = %4
  %52 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, -4294967296
  %55 = add i64 %53, 3
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = and i64 %58, 1
  %61 = icmp eq i64 %60, 0
  %62 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %61, label %85, label %63

63:                                               ; preds = %51
  %64 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %79

71:                                               ; preds = %65, %63
  %72 = and i64 %53, -262144
  %73 = or i64 %72, 16
  %74 = inttoptr i64 %73 to i64*
  %75 = load i64, i64* %74, align 16
  %76 = add i64 %75, -41416
  %77 = inttoptr i64 %76 to %"class.v8::internal::Isolate"*
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %79

79:                                               ; preds = %71, %69
  %80 = phi i64* [ %78, %71 ], [ %70, %69 ]
  %81 = getelementptr inbounds i64, i64* %80, i64 29
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = icmp eq i32 %57, %83
  br i1 %84, label %85, label %105

85:                                               ; preds = %79, %51
  %86 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %62, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 0, i32 1
  %89 = load i8, i8* %88, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %62, i64 0, i32 1, i64 0
  br label %101

93:                                               ; preds = %87, %85
  %94 = and i64 %53, -262144
  %95 = or i64 %94, 16
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 16
  %98 = add i64 %97, -41416
  %99 = inttoptr i64 %98 to %"class.v8::internal::Isolate"*
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %101

101:                                              ; preds = %93, %91
  %102 = phi i64* [ %100, %93 ], [ %92, %91 ]
  %103 = getelementptr inbounds i64, i64* %102, i64 106
  %104 = load i64, i64* %103, align 8
  br label %105

105:                                              ; preds = %79, %101
  %106 = phi i64 [ %104, %101 ], [ %59, %79 ]
  %107 = lshr i64 %1, 26
  %108 = and i64 %107, 124
  %109 = and i64 %1, 8188
  %110 = add nuw nsw i64 %109, 7
  %111 = sub nsw i64 %110, %108
  %112 = add i64 %111, %106
  %113 = inttoptr i64 %112 to i32*
  %114 = trunc i64 %2 to i32
  store atomic volatile i32 %114, i32* %113 monotonic, align 4
  %115 = and i64 %2, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %140, label %117

117:                                              ; preds = %105
  %118 = and i64 %106, -262144
  %119 = or i64 %118, 8
  %120 = inttoptr i64 %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, 262144
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %117
  %125 = or i64 %118, 16
  %126 = inttoptr i64 %125 to %"class.v8::internal::Heap"**
  %127 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %126, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %127, i64 %106, i64 %112, i64 %2) #6
  br label %128

128:                                              ; preds = %124, %117
  %129 = and i64 %2, -262144
  %130 = or i64 %129, 8
  %131 = inttoptr i64 %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = and i64 %132, 24
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %140, label %135

135:                                              ; preds = %128
  %136 = load i64, i64* %120, align 8
  %137 = and i64 %136, 24
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %135
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %106, i64 %112, i64 %2) #6
  br label %140

140:                                              ; preds = %139, %135, %128, %105, %50, %43, %34, %31, %15, %7
  ret void
}

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN2v88internal11StringShape33DispatchToSpecificTypeWithoutCastIZNS1_22DispatchToSpecificTypeIZNKS0_6String7GetImplEiE19StringGetDispatchertJRiEEET0_S4_DpOT1_E17CastingDispatchertJRS4_S6_EEES7_SA_(%"class.v8::internal::StringShape"*, %"class.v8::internal::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.v8::internal::ConsString", align 8
  %5 = alloca %"class.v8::internal::SlicedString", align 8
  %6 = alloca %"class.v8::internal::ThinString", align 8
  %7 = getelementptr inbounds %"class.v8::internal::StringShape", %"class.v8::internal::StringShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 15
  switch i32 %9, label %134 [
    i32 8, label %10
    i32 0, label %20
    i32 9, label %30
    i32 1, label %30
    i32 10, label %37
    i32 2, label %79
    i32 11, label %120
    i32 3, label %120
    i32 13, label %127
    i32 5, label %127
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i32, i32* %2, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %12, 11
  %16 = add i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i16
  br label %135

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = load i32, i32* %2, align 4
  %24 = shl nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = add i64 %22, 11
  %27 = add i64 %26, %25
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  br label %135

30:                                               ; preds = %3, %3
  %31 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* %2, align 4
  %34 = bitcast %"class.v8::internal::ConsString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"class.v8::internal::ConsString", %"class.v8::internal::ConsString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %32, i64* %35, align 8
  %36 = call zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"* nonnull %4, i32 %33) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %135

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = load i32, i32* %2, align 4
  %41 = and i64 %39, -4294967296
  %42 = add i64 %39, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %41, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = and i16 %49, 16
  %51 = icmp eq i16 %50, 0
  %52 = add i64 %39, 11
  %53 = inttoptr i64 %52 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %51, label %66, label %54

54:                                               ; preds = %37
  %55 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %56 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %55, i64 0, i32 0
  %57 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %55 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %58 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %58, i64 2
  %60 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.v8::String::ExternalStringResourceBase"* %56) #6
  br i1 %61, label %62, label %66

62:                                               ; preds = %54
  %63 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %63) #6
  %64 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %63, i64 0, i32 1
  %65 = load i8*, i8** %64, align 8
  br label %73

66:                                               ; preds = %54, %37
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %53, align 1
  %68 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %69 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %68, align 8
  %70 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %69, i64 6
  %71 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %70, align 8
  %72 = tail call i8* %71(%"class.v8::String::ExternalOneByteStringResource"* %67) #6
  br label %73

73:                                               ; preds = %62, %66
  %74 = phi i8* [ %65, %62 ], [ %72, %66 ]
  %75 = sext i32 %40 to i64
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i16
  br label %135

79:                                               ; preds = %3
  %80 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* %2, align 4
  %83 = and i64 %81, -4294967296
  %84 = add i64 %81, -1
  %85 = inttoptr i64 %84 to i32*
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = zext i32 %86 to i64
  %88 = or i64 %83, %87
  %89 = add i64 %88, 7
  %90 = inttoptr i64 %89 to i16*
  %91 = load atomic i16, i16* %90 monotonic, align 2
  %92 = and i16 %91, 16
  %93 = icmp eq i16 %92, 0
  %94 = add i64 %81, 11
  %95 = inttoptr i64 %94 to %"class.v8::String::ExternalStringResource"**
  br i1 %93, label %108, label %96

96:                                               ; preds = %79
  %97 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %98 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %97, i64 0, i32 0
  %99 = bitcast %"class.v8::String::ExternalStringResource"* %97 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %100 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %100, i64 2
  %102 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.v8::String::ExternalStringResourceBase"* %98) #6
  br i1 %103, label %104, label %108

104:                                              ; preds = %96
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %105) #6
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 1
  %107 = load i16*, i16** %106, align 8
  br label %115

108:                                              ; preds = %96, %79
  %109 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %95, align 1
  %110 = bitcast %"class.v8::String::ExternalStringResource"* %109 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %111 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %110, align 8
  %112 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %111, i64 6
  %113 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %112, align 8
  %114 = tail call i16* %113(%"class.v8::String::ExternalStringResource"* %109) #6
  br label %115

115:                                              ; preds = %104, %108
  %116 = phi i16* [ %107, %104 ], [ %114, %108 ]
  %117 = sext i32 %82 to i64
  %118 = getelementptr inbounds i16, i16* %116, i64 %117
  %119 = load i16, i16* %118, align 2
  br label %135

120:                                              ; preds = %3, %3
  %121 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i32, i32* %2, align 4
  %124 = bitcast %"class.v8::internal::SlicedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #6
  %125 = getelementptr inbounds %"class.v8::internal::SlicedString", %"class.v8::internal::SlicedString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %122, i64* %125, align 8
  %126 = call zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"* nonnull %5, i32 %123) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #6
  br label %135

127:                                              ; preds = %3, %3
  %128 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i32, i32* %2, align 4
  %131 = bitcast %"class.v8::internal::ThinString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #6
  %132 = getelementptr inbounds %"class.v8::internal::ThinString", %"class.v8::internal::ThinString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %129, i64* %132, align 8
  %133 = call zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"* nonnull %6, i32 %130) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #6
  br label %135

134:                                              ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #7
  unreachable

135:                                              ; preds = %127, %120, %115, %73, %30, %20, %10
  %136 = phi i16 [ %133, %127 ], [ %126, %120 ], [ %119, %115 ], [ %78, %73 ], [ %36, %30 ], [ %29, %20 ], [ %19, %10 ]
  ret i16 %136
}

declare zeroext i16 @_ZNK2v88internal10ConsString3GetEi(%"class.v8::internal::ConsString"*, i32) local_unnamed_addr #2

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #2

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal12SlicedString3GetEi(%"class.v8::internal::SlicedString"*, i32) local_unnamed_addr #2

declare zeroext i16 @_ZNK2v88internal10ThinString3GetEi(%"class.v8::internal::ThinString"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal14LookupIterator21LookupInRegularHolderILb1EEENS1_5StateENS0_3MapENS0_10JSReceiverE(%"class.v8::internal::LookupIterator"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::DescriptorArray", align 8
  %5 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %360, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, 4294967295
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = add i64 %2, -1
  %14 = inttoptr i64 %13 to i32*
  br label %30

15:                                               ; preds = %8
  %16 = icmp eq i64 %10, -1
  br i1 %16, label %90, label %17

17:                                               ; preds = %15
  %18 = and i64 %2, -4294967296
  %19 = add i64 %2, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 10
  %25 = inttoptr i64 %24 to i8*
  %26 = load i8, i8* %25, align 1
  %27 = lshr i8 %26, 2
  %28 = add nsw i8 %27, -17
  %29 = icmp ult i8 %28, 22
  br i1 %29, label %30, label %90

30:                                               ; preds = %12, %17
  %31 = phi i32* [ %14, %12 ], [ %20, %17 ]
  %32 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 0, i32 4
  %35 = load i64, i64* %34, align 8
  %36 = load atomic i32, i32* %31 monotonic, align 4
  %37 = and i64 %35, 4294967295
  %38 = icmp eq i64 %37, 0
  tail call void @llvm.assume(i1 %38) #6
  %39 = zext i32 %36 to i64
  %40 = or i64 %35, %39
  %41 = add i64 %40, 10
  %42 = inttoptr i64 %41 to i8*
  %43 = load i8, i8* %42, align 1
  %44 = lshr i8 %43, 2
  %45 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %46 = zext i8 %44 to i64
  %47 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %45, i64 %46
  %48 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %47, align 8
  %49 = add i64 %2, 7
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %35, %52
  %54 = bitcast %"class.v8::internal::ElementsAccessor"* %48 to i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)***
  %55 = load i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)**, i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)*** %54, align 8
  %56 = getelementptr inbounds i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)** %55, i64 33
  %57 = load i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)*, i64 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64, i64, i64)** %56, align 8
  %58 = tail call i64 %57(%"class.v8::internal::ElementsAccessor"* %48, %"class.v8::internal::Isolate"* %33, i64 %2, i64 %53, i64 %10) #6
  %59 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %58, i64* %59, align 8
  %60 = icmp eq i64 %58, -1
  br i1 %60, label %76, label %61

61:                                               ; preds = %30
  %62 = bitcast %"class.v8::internal::ElementsAccessor"* %48 to i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)***
  %63 = load i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)**, i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*** %62, align 8
  %64 = getelementptr inbounds i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %63, i64 34
  %65 = load i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)*, i32 (%"class.v8::internal::ElementsAccessor"*, i64, i64)** %64, align 8
  %66 = tail call i32 %65(%"class.v8::internal::ElementsAccessor"* %48, i64 %2, i64 %58) #6
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %66, i32* %67, align 8
  %68 = add i64 %1, 10
  %69 = inttoptr i64 %68 to i8*
  %70 = load i8, i8* %69, align 1
  %71 = and i8 %70, -8
  switch i8 %71, label %354 [
    i8 40, label %72
    i8 32, label %74
  ]

72:                                               ; preds = %61
  %73 = or i32 %66, 40
  store i32 %73, i32* %67, align 8
  br label %354

74:                                               ; preds = %61
  %75 = or i32 %66, 32
  store i32 %75, i32* %67, align 8
  br label %354

76:                                               ; preds = %30
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %77, i64 0, i32 0, i32 4
  %79 = load i64, i64* %78, align 8
  %80 = load atomic i32, i32* %31 monotonic, align 4
  %81 = and i64 %79, 4294967295
  %82 = icmp eq i64 %81, 0
  tail call void @llvm.assume(i1 %82) #6
  %83 = zext i32 %80 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp eq i16 %87, 1080
  %89 = select i1 %88, i32 1, i32 4
  br label %360

90:                                               ; preds = %15, %17
  %91 = add i64 %1, 11
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2097152
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %229

96:                                               ; preds = %90
  %97 = bitcast %"class.v8::internal::DescriptorArray"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #6
  %98 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %99 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 0, i32 4
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %1, 23
  %103 = inttoptr i64 %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = and i64 %101, 4294967295
  %106 = icmp eq i64 %105, 0
  tail call void @llvm.assume(i1 %106) #6
  %107 = zext i32 %104 to i64
  %108 = or i64 %101, %107
  %109 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = load i64, i64* %111, align 8
  %113 = load atomic i32, i32* %92 acquire, align 4
  %114 = lshr i32 %113, 10
  %115 = and i32 %114, 1023
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %96
  %118 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %118, align 8
  br label %183

119:                                              ; preds = %96
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %99, i64 0, i32 30
  %121 = load %"class.v8::internal::DescriptorLookupCache"*, %"class.v8::internal::DescriptorLookupCache"** %120, align 8
  %122 = trunc i64 %1 to i32
  %123 = add i64 %112, 3
  %124 = inttoptr i64 %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = xor i32 %125, %122
  %127 = lshr i32 %126, 2
  %128 = and i32 %127, 63
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %121, i64 0, i32 0, i64 %129, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %132, %122
  br i1 %133, label %134, label %144

134:                                              ; preds = %119
  %135 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %121, i64 0, i32 0, i64 %129, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = trunc i64 %136 to i32
  %138 = trunc i64 %112 to i32
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %140, label %144

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %121, i64 0, i32 1, i64 %129
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, -2
  br i1 %143, label %144, label %178

144:                                              ; preds = %140, %134, %119
  %145 = icmp ult i32 %115, 9
  br i1 %145, label %146, label %165

146:                                              ; preds = %144
  %147 = load i64, i64* %109, align 8
  %148 = trunc i64 %112 to i32
  %149 = zext i32 %115 to i64
  %150 = add i64 %147, -1
  br label %151

151:                                              ; preds = %160, %146
  %152 = phi i64 [ 0, %146 ], [ %161, %160 ]
  %153 = mul i64 %152, 51539607552
  %154 = add i64 %153, 68719476736
  %155 = ashr exact i64 %154, 32
  %156 = add i64 %150, %155
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = icmp eq i32 %158, %148
  br i1 %159, label %163, label %160

160:                                              ; preds = %151
  %161 = add nuw nsw i64 %152, 1
  %162 = icmp eq i64 %161, %149
  br i1 %162, label %172, label %151

163:                                              ; preds = %151
  %164 = trunc i64 %152 to i32
  br label %172

165:                                              ; preds = %144
  %166 = call i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"* nonnull %4, i64 %112, i32 %115, i32* null) #6
  %167 = load i32, i32* %124, align 4
  %168 = xor i32 %167, %122
  %169 = lshr i32 %168, 2
  %170 = and i32 %169, 63
  %171 = zext i32 %170 to i64
  br label %172

172:                                              ; preds = %160, %165, %163
  %173 = phi i64 [ %171, %165 ], [ %129, %163 ], [ %129, %160 ]
  %174 = phi i32 [ %166, %165 ], [ %164, %163 ], [ -1, %160 ]
  %175 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %121, i64 0, i32 0, i64 %173, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %121, i64 0, i32 0, i64 %173, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %112, i64* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::DescriptorLookupCache", %"class.v8::internal::DescriptorLookupCache"* %121, i64 0, i32 1, i64 %173
  store i32 %174, i32* %177, align 4
  br label %178

178:                                              ; preds = %140, %172
  %179 = phi i32 [ %174, %172 ], [ %142, %140 ]
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %180, i64* %181, align 8
  %182 = icmp eq i32 %179, -1
  br i1 %182, label %183, label %218

183:                                              ; preds = %117, %178
  %184 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %98, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %184, i64 0, i32 0, i32 4
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %2, -1
  %188 = inttoptr i64 %187 to i32*
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i64 %186, 4294967295
  %191 = icmp eq i64 %190, 0
  call void @llvm.assume(i1 %191) #6
  %192 = zext i32 %189 to i64
  %193 = or i64 %186, %192
  %194 = add i64 %193, 7
  %195 = inttoptr i64 %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = icmp eq i16 %196, 1080
  br i1 %197, label %198, label %216

198:                                              ; preds = %183
  %199 = load i64, i64* %9, align 8
  %200 = icmp eq i64 %199, -1
  br i1 %200, label %201, label %216

201:                                              ; preds = %198
  %202 = load i64*, i64** %110, align 8
  %203 = load i64, i64* %202, align 8
  %204 = add i64 %203, -1
  %205 = inttoptr i64 %204 to i32*
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %186, %207
  %209 = add i64 %208, 7
  %210 = inttoptr i64 %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = icmp ult i16 %211, 64
  br i1 %212, label %213, label %216

213:                                              ; preds = %201
  %214 = call zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64 %203) #6
  %215 = select i1 %214, i32 1, i32 4
  br label %216

216:                                              ; preds = %183, %198, %201, %213
  %217 = phi i32 [ 4, %201 ], [ 1, %198 ], [ 4, %183 ], [ %215, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #6
  br label %360

218:                                              ; preds = %178
  %219 = load i64, i64* %109, align 8
  %220 = mul i64 %180, 51539607552
  %221 = add i64 %220, 68719476736
  %222 = ashr exact i64 %221, 32
  %223 = or i64 %222, 3
  %224 = add i64 %219, %223
  %225 = inttoptr i64 %224 to i32*
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = ashr i32 %226, 1
  %228 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %227, i32* %228, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #6
  br label %354

229:                                              ; preds = %90
  %230 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  %231 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %231, i64 0, i32 0, i32 4
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %2, 3
  %235 = inttoptr i64 %234 to i32*
  %236 = load i32, i32* %235, align 4
  %237 = and i64 %233, 4294967295
  %238 = icmp eq i64 %237, 0
  tail call void @llvm.assume(i1 %238) #6
  %239 = zext i32 %236 to i64
  %240 = or i64 %233, %239
  %241 = and i64 %239, 1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %264

243:                                              ; preds = %229
  %244 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %245 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %244, null
  br i1 %245, label %252, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %244, i64 0, i32 0, i32 1
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %244, i64 0, i32 1, i64 0
  br label %260

252:                                              ; preds = %246, %243
  %253 = and i64 %2, -262144
  %254 = or i64 %253, 16
  %255 = inttoptr i64 %254 to i64*
  %256 = load i64, i64* %255, align 16
  %257 = add i64 %256, -41416
  %258 = inttoptr i64 %257 to %"class.v8::internal::Isolate"*
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %258, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %260

260:                                              ; preds = %252, %250
  %261 = phi i64* [ %259, %252 ], [ %251, %250 ]
  %262 = getelementptr inbounds i64, i64* %261, i64 115
  %263 = load i64, i64* %262, align 8
  br label %264

264:                                              ; preds = %229, %260
  %265 = phi i64 [ %263, %260 ], [ %240, %229 ]
  %266 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  %267 = load i64*, i64** %266, align 8
  %268 = load i64, i64* %267, align 8
  %269 = add i64 %268, 3
  %270 = inttoptr i64 %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = lshr i32 %271, 2
  %273 = add i64 %265, 15
  %274 = inttoptr i64 %273 to i32*
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = ashr i32 %275, 1
  %277 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %231, i64 0, i32 0, i32 7, i32 0, i64 4
  %278 = load i64, i64* %277, align 8
  %279 = add nsw i32 %276, -1
  %280 = and i32 %279, %272
  %281 = zext i32 %280 to i64
  %282 = mul i64 %281, 51539607552
  %283 = add i64 %282, 85899345920
  %284 = ashr exact i64 %283, 32
  %285 = add i64 %265, 7
  %286 = add i64 %284, %285
  %287 = inttoptr i64 %286 to i32*
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = trunc i64 %278 to i32
  %290 = icmp eq i32 %288, %289
  br i1 %290, label %310, label %291

291:                                              ; preds = %264
  %292 = trunc i64 %268 to i32
  %293 = icmp eq i32 %288, %292
  br i1 %293, label %343, label %297

294:                                              ; preds = %297
  %295 = add i32 %298, 1
  %296 = icmp eq i32 %308, %292
  br i1 %296, label %341, label %297

297:                                              ; preds = %291, %294
  %298 = phi i32 [ %295, %294 ], [ 1, %291 ]
  %299 = phi i32 [ %301, %294 ], [ %280, %291 ]
  %300 = add i32 %299, %298
  %301 = and i32 %300, %279
  %302 = zext i32 %301 to i64
  %303 = mul i64 %302, 51539607552
  %304 = add i64 %303, 85899345920
  %305 = ashr exact i64 %304, 32
  %306 = add i64 %305, %285
  %307 = inttoptr i64 %306 to i32*
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = icmp eq i32 %308, %289
  br i1 %309, label %310, label %294

310:                                              ; preds = %297, %264
  %311 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %311, align 8
  %312 = load i64, i64* %232, align 8
  %313 = add i64 %2, -1
  %314 = inttoptr i64 %313 to i32*
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i64 %312, 4294967295
  %317 = icmp eq i64 %316, 0
  tail call void @llvm.assume(i1 %317) #6
  %318 = zext i32 %315 to i64
  %319 = or i64 %312, %318
  %320 = add i64 %319, 7
  %321 = inttoptr i64 %320 to i16*
  %322 = load atomic i16, i16* %321 monotonic, align 2
  %323 = icmp ne i16 %322, 1080
  %324 = xor i1 %16, true
  %325 = or i1 %323, %324
  %326 = select i1 %323, i32 4, i32 1
  br i1 %325, label %360, label %327

327:                                              ; preds = %310
  %328 = load i64, i64* %267, align 8
  %329 = add i64 %328, -1
  %330 = inttoptr i64 %329 to i32*
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = zext i32 %331 to i64
  %333 = or i64 %312, %332
  %334 = add i64 %333, 7
  %335 = inttoptr i64 %334 to i16*
  %336 = load atomic i16, i16* %335 monotonic, align 2
  %337 = icmp ult i16 %336, 64
  br i1 %337, label %338, label %360

338:                                              ; preds = %327
  %339 = tail call zeroext i1 @_ZN2v88internal14IsSpecialIndexENS0_6StringE(i64 %328) #6
  %340 = select i1 %339, i32 1, i32 4
  br label %360

341:                                              ; preds = %294
  %342 = zext i32 %301 to i64
  br label %343

343:                                              ; preds = %341, %291
  %344 = phi i64 [ %281, %291 ], [ %342, %341 ]
  %345 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 %344, i64* %345, align 8
  %346 = mul i64 %344, 51539607552
  %347 = add i64 %346, 120259084288
  %348 = ashr exact i64 %347, 32
  %349 = add i64 %285, %348
  %350 = inttoptr i64 %349 to i32*
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = ashr i32 %351, 1
  %353 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 %352, i32* %353, align 8
  br label %354

354:                                              ; preds = %61, %72, %74, %343, %218
  %355 = phi i32 [ %66, %61 ], [ %73, %72 ], [ %75, %74 ], [ %352, %343 ], [ %227, %218 ]
  %356 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 1, i8* %356, align 8
  %357 = and i32 %355, 1
  %358 = icmp eq i32 %357, 0
  %359 = select i1 %358, i32 6, i32 5
  ret i32 %359

360:                                              ; preds = %310, %338, %327, %216, %76, %3
  %361 = phi i32 [ %89, %76 ], [ 4, %3 ], [ %217, %216 ], [ 4, %327 ], [ %326, %310 ], [ %340, %338 ]
  ret i32 %361
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal12BinarySearchILNS0_10SearchModeE1ENS0_15DescriptorArrayEEEiPT0_NS0_4NameEiPi(%"class.v8::internal::DescriptorArray"*, i64, i32, i32*) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 5
  %8 = inttoptr i64 %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = sext i16 %9 to i32
  %11 = add nsw i32 %10, -1
  %12 = add i64 %1, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 2
  %16 = icmp eq i32 %11, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = and i64 %6, -4294967296
  %19 = add i64 %6, -1
  br label %28

20:                                               ; preds = %28, %4
  %21 = phi i32 [ 0, %4 ], [ %59, %28 ]
  %22 = icmp slt i32 %21, %10
  br i1 %22, label %23, label %96

23:                                               ; preds = %20
  %24 = and i64 %6, -4294967296
  %25 = add i64 %6, -1
  %26 = trunc i64 %1 to i32
  %27 = sext i32 %21 to i64
  br label %65

28:                                               ; preds = %17, %28
  %29 = phi i32 [ 0, %17 ], [ %60, %28 ]
  %30 = phi i32 [ %11, %17 ], [ %59, %28 ]
  %31 = sub nsw i32 %30, %29
  %32 = sdiv i32 %31, 2
  %33 = add nsw i32 %32, %29
  %34 = sext i32 %33 to i64
  %35 = mul i64 %34, 51539607552
  %36 = add i64 %35, 68719476736
  %37 = ashr exact i64 %36, 32
  %38 = or i64 %37, 3
  %39 = add i64 %38, %6
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = lshr i32 %41, 10
  %43 = and i32 %42, 1023
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 51539607552
  %46 = add nuw nsw i64 %45, 68719476736
  %47 = lshr exact i64 %46, 32
  %48 = add i64 %19, %47
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %18, %51
  %53 = add i64 %52, 3
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = lshr i32 %55, 2
  %57 = icmp ult i32 %56, %15
  %58 = add nsw i32 %33, 1
  %59 = select i1 %57, i32 %30, i32 %33
  %60 = select i1 %57, i32 %58, i32 %29
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %20, label %28

62:                                               ; preds = %90
  %63 = trunc i64 %92 to i32
  %64 = icmp eq i32 %63, %10
  br i1 %64, label %96, label %65

65:                                               ; preds = %62, %23
  %66 = phi i64 [ %27, %23 ], [ %92, %62 ]
  %67 = mul i64 %66, 51539607552
  %68 = add i64 %67, 68719476736
  %69 = ashr exact i64 %68, 32
  %70 = or i64 %69, 3
  %71 = add i64 %70, %6
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = lshr i32 %73, 10
  %75 = and i32 %74, 1023
  %76 = zext i32 %75 to i64
  %77 = mul nuw nsw i64 %76, 51539607552
  %78 = add nuw nsw i64 %77, 68719476736
  %79 = lshr exact i64 %78, 32
  %80 = add i64 %25, %79
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %24, %83
  %85 = add i64 %84, 3
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 2
  %89 = icmp eq i32 %88, %15
  br i1 %89, label %90, label %96

90:                                               ; preds = %65
  %91 = icmp eq i32 %82, %26
  %92 = add nsw i64 %66, 1
  br i1 %91, label %93, label %62

93:                                               ; preds = %90
  %94 = icmp slt i32 %75, %2
  %95 = select i1 %94, i32 %75, i32 -1
  br label %96

96:                                               ; preds = %65, %62, %20, %93
  %97 = phi i32 [ %95, %93 ], [ -1, %20 ], [ -1, %62 ], [ -1, %65 ]
  ret i32 %97
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal3Map21GetIndexedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #6
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %45, %1
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %76, %70, %41, %35, %62, %56, %2
  %85 = phi i64 [ %11, %2 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %84
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %92, %1
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = add i16 %96, -1059
  %98 = icmp ult i16 %97, 15
  br i1 %98, label %99, label %111

99:                                               ; preds = %88
  %100 = add i64 %85, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %85, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 acquire, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %103, %109
  br label %111

111:                                              ; preds = %84, %88, %99
  %112 = phi i64 [ %110, %99 ], [ %85, %88 ], [ %85, %84 ]
  %113 = add i64 %112, 35
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %116, %1
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %111
  %127 = and i64 %112, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 4
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %115, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %134
  %141 = add i64 %117, 19
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %144, %1
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i64 [ %145, %140 ], [ %137, %134 ]
  ret i64 %147
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal3Map19GetNamedInterceptorENS0_16PtrComprCageBaseE(%"class.v8::internal::Map"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 19
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = and i64 %1, 4294967295
  %9 = icmp eq i64 %8, 0
  tail call void @llvm.assume(i1 %9) #6
  %10 = zext i32 %7 to i64
  %11 = or i64 %10, %1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %2
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %4, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %45, %1
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %66, %1
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %80, %1
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %76, %70, %41, %35, %62, %56, %2
  %85 = phi i64 [ %11, %2 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %84
  %89 = add i64 %85, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %92, %1
  %94 = add i64 %93, 7
  %95 = inttoptr i64 %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = add i16 %96, -1059
  %98 = icmp ult i16 %97, 15
  br i1 %98, label %99, label %111

99:                                               ; preds = %88
  %100 = add i64 %85, 11
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i64 %85, -4294967296
  %104 = zext i32 %102 to i64
  %105 = or i64 %103, %104
  %106 = add i64 %105, 3
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 acquire, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %103, %109
  br label %111

111:                                              ; preds = %84, %88, %99
  %112 = phi i64 [ %110, %99 ], [ %85, %88 ], [ %85, %84 ]
  %113 = add i64 %112, 35
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 acquire, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %116, %1
  %118 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %119 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 8, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %118, i64 0, i32 1, i64 0
  br label %134

126:                                              ; preds = %120, %111
  %127 = and i64 %112, -262144
  %128 = or i64 %127, 16
  %129 = inttoptr i64 %128 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = add i64 %130, -41416
  %132 = inttoptr i64 %131 to %"class.v8::internal::Isolate"*
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %134

134:                                              ; preds = %126, %124
  %135 = phi i64* [ %133, %126 ], [ %125, %124 ]
  %136 = getelementptr inbounds i64, i64* %135, i64 4
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %115, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %134
  %141 = add i64 %117, 15
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %144, %1
  br label %146

146:                                              ; preds = %134, %140
  %147 = phi i64 [ %145, %140 ], [ %137, %134 ]
  ret i64 %147
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
