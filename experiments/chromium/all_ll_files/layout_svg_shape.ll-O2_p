; ModuleID = '../../third_party/blink/renderer/core/layout/svg/layout_svg_shape.cc'
source_filename = "../../third_party/blink/renderer/core/layout/svg/layout_svg_shape.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.1250 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.absl::optional.1317" = type { %"class.absl::optional_internal::optional_data.1318" }
%"class.absl::optional_internal::optional_data.1318" = type { %"class.absl::optional_internal::optional_data_base.1319" }
%"class.absl::optional_internal::optional_data_base.1319" = type { %"class.absl::optional_internal::optional_data_dtor_base.1320" }
%"class.absl::optional_internal::optional_data_dtor_base.1320" = type { i8, [3 x i8], %union.anon.1321 }
%union.anon.1321 = type { %"class.blink::HitTestLocation" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::LayoutSVGShape" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::FloatRect", %"class.blink::FloatRect", %"class.blink::AffineTransform", %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.846", %"class.std::__1::unique_ptr.615", i8, i8, [6 x i8] }>
%"class.blink::LayoutSVGModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.680", %"class.std::__1::unique_ptr.682" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.392", %"class.blink::DataRef.396", %"class.blink::DataRef.596", %"class.blink::DataRef.663", %"class.blink::DataRef.667", %"class.blink::DataRef.671", %"class.blink::DataRef.675", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1224", [4 x i8] }>
%"class.WTF::RefCounted.1224" = type { %"class.base::RefCounted.1225" }
%"class.base::RefCounted.1225" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1217", i64 }
%"class.std::__1::vector.1217" = type { %"class.std::__1::__vector_base.1218" }
%"class.std::__1::__vector_base.1218" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1219" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1345 }
%class.scoped_refptr.1345 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1346", %"class.WTF::Vector.579", %"class.WTF::Vector.1348", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1346" = type { %"class.base::RefCounted.1347" }
%"class.base::RefCounted.1347" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1348" = type { %"class.WTF::VectorBuffer.1349" }
%"class.WTF::VectorBuffer.1349" = type { %"class.WTF::VectorBufferBase.1350" }
%"class.WTF::VectorBufferBase.1350" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1351 }
%union.anon.1351 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.390" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.379", %"class.blink::HeapVector.381" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.861", %"class.WTF::Vector.861", i8, i32, %"class.blink::Member.868", %"class.blink::Member.870", %"class.blink::Member.872", %"class.blink::Member.874", %"class.blink::Member.876", %"class.blink::Member.878", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.886", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.892", %"class.blink::Member.894", %"class.blink::Member.387", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.897", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.363", %"class.blink::Member.343", %"class.blink::Member.921", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.930", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.937", i16, i8, %"class.blink::Member.944", %"class.blink::Member.946", %"class.blink::Member.948", %"class.blink::Member.950", %"class.blink::TextLinkColors", %"class.blink::Member.952", i8, [7 x i8], %"class.blink::HeapHashMap.954", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.961", %"class.blink::Member.966", %"class.blink::Member.968", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.970", %"class.blink::HeapVector.972", %"class.std::__1::unique_ptr.980", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.986", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.999", %"class.WTF::Vector.1001", i8, i8, %"class.std::__1::unique_ptr.1006", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.363", %"class.blink::HeapVector.1012", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1020", i8, i32, %"class.blink::Member.1022", %"class.blink::Member.1024", %"class.blink::Member.1026", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1028", %"class.WTF::HashMap.1030", %"class.blink::Member.1035", %"class.blink::Member.1037", %"class.blink::Member.1039", %"class.blink::Member.1041", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1043", i8, i32, %"class.blink::Member.1050", %"class.blink::Member.1052", i32, %"class.blink::Member.1054", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.std::__1::unique_ptr.1060", i64, %"class.std::__1::unique_ptr.1066", i32, i32, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1085", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1087", %"class.WTF::Vector.1089", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1094", %"class.blink::Member.1101", %"class.std::__1::unique_ptr.1103", %"class.blink::Member.1109", i8, i8, %"class.WTF::String", %"class.blink::Member.1111", i8, [7 x i8], %"class.blink::HeapHashMap.1113", %"class.blink::HeapObserverSet", %"class.blink::Member.1127", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1129", i32, i8, i8, %"class.blink::WeakMember.1131", %"class.blink::Member.1132" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.854" }
%"class.blink::HeapHashMap.854" = type { %"class.WTF::HashMap.857" }
%"class.WTF::HashMap.857" = type { %"class.WTF::HashTable.858" }
%"class.WTF::HashTable.858" = type <{ %"struct.WTF::KeyValuePair.860"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.860" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.861" = type { %"class.WTF::VectorBuffer.862" }
%"class.WTF::VectorBuffer.862" = type { %"class.WTF::VectorBufferBase.863" }
%"class.WTF::VectorBufferBase.863" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.864 }
%class.scoped_refptr.864 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.865", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.865" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1145", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1186", i32, i8, [3 x i8], %"class.blink::HeapVector.1188", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1207", %"class.blink::Member.1213", %"class.blink::Member.1215", i8, [7 x i8] }>
%"class.blink::Supplementable.1145" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1146" }
%"class.blink::HeapHashMap.1146" = type { %"class.WTF::HashMap.1149" }
%"class.WTF::HashMap.1149" = type { %"class.WTF::HashTable.1150" }
%"class.WTF::HashTable.1150" = type <{ %"struct.WTF::KeyValuePair.1152"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1152" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1161" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1153" }
%"class.blink::HeapObserverSet.1153" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1154" }
%"class.blink::HeapHashSet.1154" = type { %"class.WTF::HashSet.1157" }
%"class.WTF::HashSet.1157" = type { %"class.WTF::HashTable.1158" }
%"class.WTF::HashTable.1158" = type <{ %"class.blink::WeakMember.1160"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1160" = type opaque
%"class.blink::Supplementable.1161" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1162" }
%"class.blink::HeapHashMap.1162" = type { %"class.WTF::HashMap.1165" }
%"class.WTF::HashMap.1165" = type { %"class.WTF::HashTable.1166" }
%"class.WTF::HashTable.1166" = type <{ %"struct.WTF::KeyValuePair.1168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1168" = type { i8*, %"class.blink::Member.1331" }
%"class.blink::Member.1331" = type { %"class.blink::MemberBase.1332" }
%"class.blink::MemberBase.1332" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1333" }
%"class.blink::Member.1333" = type { %"class.blink::MemberBase.1334" }
%"class.blink::MemberBase.1334" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1169, %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1176", %"class.blink::Member.870", i32, [4 x i8], %"class.WTF::HashSet.1182", i32, i32 }
%class.scoped_refptr.1169 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1188" = type { %"class.WTF::Vector.1191" }
%"class.WTF::Vector.1191" = type { %"class.WTF::VectorBuffer.1192" }
%"class.WTF::VectorBuffer.1192" = type { %"class.WTF::VectorBufferBase.1193" }
%"class.WTF::VectorBufferBase.1193" = type { %"class.blink::Member.1194"*, i32, i32 }
%"class.blink::Member.1194" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1200", i32, i32 }
%"class.blink::HeapHashMap.1200" = type { %"class.WTF::HashMap.1203" }
%"class.WTF::HashMap.1203" = type { %"class.WTF::HashTable.1204" }
%"class.WTF::HashTable.1204" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type opaque
%"class.std::__1::unique_ptr.1207" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.880" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::KURL"* }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.896 }
%class.scoped_refptr.896 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.897" = type { %"class.WTF::VectorBuffer.898" }
%"class.WTF::VectorBuffer.898" = type { %"class.WTF::VectorBufferBase.899" }
%"class.WTF::VectorBufferBase.899" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.900 }
%class.scoped_refptr.900 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.901", i32, i32, %"class.blink::Persistent.903" }
%"class.WTF::RefCounted.901" = type { %"class.base::RefCounted.902" }
%"class.base::RefCounted.902" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.903" = type { %"class.blink::PersistentBase.904" }
%"class.blink::PersistentBase.904" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.907" }
%"class.blink::HeapHashMap.907" = type { %"class.WTF::HashMap.910" }
%"class.WTF::HashMap.910" = type { %"class.WTF::HashTable.911" }
%"class.WTF::HashTable.911" = type <{ %"struct.WTF::KeyValuePair.913"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.913" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.923" }
%"class.blink::HeapHashMap.923" = type { %"class.WTF::HashMap.926" }
%"class.WTF::HashMap.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"struct.WTF::KeyValuePair.929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.929" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"class.blink::WeakMember.936"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.936" = type opaque
%"class.blink::HeapHashSet.937" = type { %"class.WTF::HashSet.940" }
%"class.WTF::HashSet.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"class.blink::WeakMember.943"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.943" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.954" = type { %"class.WTF::HashMap.957" }
%"class.WTF::HashMap.957" = type { %"class.WTF::HashTable.958" }
%"class.WTF::HashTable.958" = type <{ %"struct.WTF::KeyValuePair.960"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.960" = type opaque
%"class.WTF::Vector.961" = type { %"class.WTF::VectorBuffer.962" }
%"class.WTF::VectorBuffer.962" = type { %"class.WTF::VectorBufferBase.963" }
%"class.WTF::VectorBufferBase.963" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.356 }
%class.scoped_refptr.356 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.357", %"class.WTF::AtomicString", %"class.WTF::Vector.359" }
%"class.WTF::RefCounted.357" = type { %"class.base::RefCounted.358" }
%"class.base::RefCounted.358" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.972" = type { %"class.WTF::Vector.975" }
%"class.WTF::Vector.975" = type { %"class.WTF::VectorBuffer.976" }
%"class.WTF::VectorBuffer.976" = type { %"class.WTF::VectorBufferBase.977" }
%"class.WTF::VectorBufferBase.977" = type { %"class.blink::Member.978"*, i32, i32 }
%"class.blink::Member.978" = type opaque
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.986" = type { %"class.WTF::HashSet.989" }
%"class.WTF::HashSet.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"class.blink::WeakMember.992"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.992" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.993", i32, [4 x i8] }>
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"struct.std::__1::pair.996"*, i32, i32 }
%"struct.std::__1::pair.996" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1001" = type { %"class.WTF::VectorBuffer.1002" }
%"class.WTF::VectorBuffer.1002" = type { %"class.WTF::VectorBufferBase.1003" }
%"class.WTF::VectorBufferBase.1003" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.363" = type { %"class.WTF::Vector.366" }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1012" = type { %"class.WTF::Vector.1015" }
%"class.WTF::Vector.1015" = type { %"class.WTF::VectorBuffer.1016" }
%"class.WTF::VectorBuffer.1016" = type { %"class.WTF::VectorBufferBase.1017" }
%"class.WTF::VectorBufferBase.1017" = type { %"class.blink::Member.1018"*, i32, i32 }
%"class.blink::Member.1018" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1034"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1034" = type opaque
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1039" = type { %"class.blink::MemberBase.1040" }
%"class.blink::MemberBase.1040" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.920", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.917, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.917 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.918" }>
%"class.base::RefCountedThreadSafe.918" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.919 }
%class.scoped_refptr.919 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.920" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1043" = type { %"class.WTF::HashSet.1046" }
%"class.WTF::HashSet.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"class.blink::Member.1049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1049" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1069", %"class.WTF::HashSet.1069", %"class.WTF::HashSet.1069", %"class.WTF::HashSet.1069", %"class.WTF::HashSet.1069", %"class.WTF::HashSet.1069", i32, [4 x i8], %"class.WTF::HashMap.1073", %"class.WTF::HashMap.1073", %"class.WTF::HashMap.1073", %"class.WTF::HashMap.1073", %"class.WTF::HashMap.1073", %"class.WTF::HashMap.1073", %"class.WTF::HashMap.1073", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1069" = type { %"class.WTF::HashTable.1070" }
%"class.WTF::HashTable.1070" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1073" = type { %"class.WTF::HashTable.1074" }
%"class.WTF::HashTable.1074" = type <{ %"struct.WTF::KeyValuePair.1077"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1077" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1094" = type { %"class.WTF::HashMap.1097" }
%"class.WTF::HashMap.1097" = type { %"class.WTF::HashTable.1098" }
%"class.WTF::HashTable.1098" = type <{ %"struct.WTF::KeyValuePair.1100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1100" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1113" = type { %"class.WTF::HashMap.1116" }
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1120" }
%"class.blink::HeapHashSet.1120" = type { %"class.WTF::HashSet.1123" }
%"class.WTF::HashSet.1123" = type { %"class.WTF::HashTable.1124" }
%"class.WTF::HashTable.1124" = type <{ %"class.blink::WeakMember.1126"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1126" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1136", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1143", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1136" = type { %"class.WTF::HashSet.1139" }
%"class.WTF::HashSet.1139" = type { %"class.WTF::HashTable.1140" }
%"class.WTF::HashTable.1140" = type <{ %"class.blink::Member.1142"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1142" = type opaque
%"class.blink::HeapTaskRunnerTimer.1143" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1144", { i64, i64 } }
%"class.blink::WeakMember.1144" = type { %"class.blink::MemberBase.1130" }
%"class.blink::WeakMember.1131" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.363" }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.376" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::HeapHashMap.378"* }
%"class.blink::HeapHashMap.378" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.381" = type { %"class.WTF::Vector.384" }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.blink::Member.387"*, i32, i32 }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.392" = type { %class.scoped_refptr.393 }
%class.scoped_refptr.393 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.394", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.396" = type { %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.398", [4 x i8], %"class.blink::DataRef.400", %"class.blink::DataRef.466", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.590", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.398" = type { %"class.base::RefCounted.399" }
%"class.base::RefCounted.399" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.400" = type { %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.402", [4 x i8], %"class.blink::DataRef.404", %"class.blink::Persistent.442", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.402" = type { %"class.base::RefCounted.403" }
%"class.base::RefCounted.403" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.404" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.406", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.424, %class.scoped_refptr.427, %class.scoped_refptr.430, %class.scoped_refptr.433, %class.scoped_refptr.434, %class.scoped_refptr.435, %"class.blink::Persistent.442", %"class.blink::Persistent.457", %"class.absl::optional.461", %"class.absl::optional.461", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.408", %"class.std::__1::unique_ptr.413" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.416", %"class.WTF::Vector.408", i32, i32 }
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.424 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.425", [4 x i8] }>
%"class.WTF::RefCounted.425" = type { %"class.base::RefCounted.426" }
%"class.base::RefCounted.426" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.427 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.428", [4 x i8] }>
%"class.WTF::RefCounted.428" = type { %"class.base::RefCounted.429" }
%"class.base::RefCounted.429" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.430 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.431" }>
%"class.WTF::RefCounted.431" = type { %"class.base::RefCounted.432" }
%"class.base::RefCounted.432" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.433 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.434 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.435 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.436", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.436" = type { %"class.base::RefCounted.437" }
%"class.base::RefCounted.437" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.438" }
%"class.blink::DataRef.438" = type { %class.scoped_refptr.439 }
%class.scoped_refptr.439 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.440" }
%"class.WTF::RefCounted.440" = type { %"class.base::RefCounted.441" }
%"class.base::RefCounted.441" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.457" = type { %"class.blink::PersistentBase.458" }
%"class.blink::PersistentBase.458" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.427, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.461" = type { %"class.absl::optional_internal::optional_data.462" }
%"class.absl::optional_internal::optional_data.462" = type { %"class.absl::optional_internal::optional_data_base.463" }
%"class.absl::optional_internal::optional_data_base.463" = type { %"class.absl::optional_internal::optional_data_dtor_base.464" }
%"class.absl::optional_internal::optional_data_dtor_base.464" = type { i8, [3 x i8], %union.anon.465 }
%union.anon.465 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.442" = type { %"class.blink::PersistentBase.443" }
%"class.blink::PersistentBase.443" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.446" }
%"class.blink::HeapVector.446" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"class.blink::Member.452"*, i32, i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.466" = type { %class.scoped_refptr.467 }
%class.scoped_refptr.467 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.468", %"class.blink::DataRef.470", %"class.blink::DataRef.474", %"class.blink::DataRef.483", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.513", %"class.std::__1::unique_ptr.551", %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.573", %"class.WTF::Vector.579", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.468" = type { %"class.base::RefCounted.469" }
%"class.base::RefCounted.469" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.470" = type { %class.scoped_refptr.471 }
%class.scoped_refptr.471 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.472", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.472" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.474" = type { %class.scoped_refptr.475 }
%class.scoped_refptr.475 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.476", [4 x i8], %"class.WTF::Vector.478", i8, [7 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { i32*, i32, i32 }
%"class.blink::DataRef.483" = type { %class.scoped_refptr.484 }
%class.scoped_refptr.484 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.485", [4 x i8], %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.487", %"class.WTF::HashMap.492", %"class.WTF::HashMap.492", %"class.WTF::HashMap.492", %"class.WTF::HashMap.492", %"class.WTF::HashMap.497", %"class.WTF::Vector.408", %"class.WTF::Vector.408", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.485" = type { %"class.base::RefCounted.486" }
%"class.base::RefCounted.486" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.487" = type { %"class.WTF::HashTable.488" }
%"class.WTF::HashTable.488" = type <{ %"struct.WTF::KeyValuePair.491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.491" = type { %"class.WTF::String", %"class.WTF::Vector.1335" }
%"class.WTF::Vector.1335" = type { %"class.WTF::VectorBuffer.1336" }
%"class.WTF::VectorBuffer.1336" = type { %"class.WTF::VectorBufferBase.1337" }
%"class.WTF::VectorBufferBase.1337" = type { i64*, i32, i32 }
%"class.WTF::HashMap.492" = type { %"class.WTF::HashTable.493" }
%"class.WTF::HashTable.493" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type { i64, %"class.WTF::Vector.579" }
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.505" }
%"class.WTF::HashMap.505" = type { %"class.WTF::HashTable.506" }
%"class.WTF::HashTable.506" = type <{ %"struct.WTF::KeyValuePair.509"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.509" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1340", %"class.absl::optional.1340", %"class.absl::optional.1340" }
%"class.absl::optional.1340" = type { %"class.absl::optional_internal::optional_data.1341" }
%"class.absl::optional_internal::optional_data.1341" = type { %"class.absl::optional_internal::optional_data_base.1342" }
%"class.absl::optional_internal::optional_data_base.1342" = type { %"class.absl::optional_internal::optional_data_dtor_base.1343" }
%"class.absl::optional_internal::optional_data_dtor_base.1343" = type { i8, %union.anon.1344 }
%union.anon.1344 = type { i32 }
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.528", %"class.WTF::Vector.516", %"class.WTF::Vector.533", %"class.WTF::Vector.538", %"class.WTF::Vector.543" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.516", %"class.WTF::Vector.516", %"class.WTF::Vector.521" }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { %class.scoped_refptr.524*, i32, i32 }
%class.scoped_refptr.524 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.525" }
%"class.base::RefCountedThreadSafe.525" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { double*, i32, i32 }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { i32*, i32, i32 }
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { i32*, i32, i32 }
%"class.WTF::Vector.543" = type { %"class.WTF::VectorBuffer.544" }
%"class.WTF::VectorBuffer.544" = type { %"class.WTF::VectorBufferBase.545" }
%"class.WTF::VectorBufferBase.545" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.554" }
%"class.WTF::Vector.554" = type { %"class.WTF::VectorBuffer.555" }
%"class.WTF::VectorBuffer.555" = type { %"class.WTF::VectorBufferBase.556" }
%"class.WTF::VectorBufferBase.556" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.565" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.584" }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { %class.scoped_refptr.587*, i32, i32 }
%class.scoped_refptr.587 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.431", [4 x i8] }>
%"class.blink::Persistent.590" = type { %"class.blink::PersistentBase.591" }
%"class.blink::PersistentBase.591" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.594" }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.596" = type { %class.scoped_refptr.597 }
%class.scoped_refptr.597 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.598", [4 x i8], %"class.blink::DataRef.600", %"class.blink::DataRef.604", %"class.blink::DataRef.625", %"class.blink::DataRef.643", %"class.blink::DataRef.655", %"class.blink::DataRef.659", %class.scoped_refptr.629, i32, [4 x i8] }>
%"class.WTF::RefCounted.598" = type { %"class.base::RefCounted.599" }
%"class.base::RefCounted.599" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.600" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.602", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.602" = type { %"class.base::RefCounted.603" }
%"class.base::RefCounted.603" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.604" = type { %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.606", %class.scoped_refptr.608, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.606" = type { %"class.base::RefCounted.607" }
%"class.base::RefCounted.607" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.608 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.615", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.428" }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.blink::DataRef.625" = type { %class.scoped_refptr.626 }
%class.scoped_refptr.626 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.627", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.627" = type { %"class.base::RefCounted.628" }
%"class.base::RefCounted.628" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.629, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.643" = type { %class.scoped_refptr.644 }
%class.scoped_refptr.644 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.645", [4 x i8], %class.scoped_refptr.647, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.645" = type { %"class.base::RefCounted.646" }
%"class.base::RefCounted.646" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.647 = type { %"class.base::RefCountedData.648"* }
%"class.base::RefCountedData.648" = type { %"class.base::RefCountedThreadSafe.649", %"class.WTF::Vector.650" }
%"class.base::RefCountedThreadSafe.649" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.629, %class.scoped_refptr.629, %class.scoped_refptr.629 }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.659" = type { %class.scoped_refptr.660 }
%class.scoped_refptr.660 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.661", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.629 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.630", %"class.blink::Persistent.632", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.630" = type { %"class.base::RefCounted.631" }
%"class.base::RefCounted.631" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.632" = type { %"class.blink::PersistentBase.633" }
%"class.blink::PersistentBase.633" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.636" }
%"class.blink::HeapHashMap.636" = type { %"class.WTF::HashMap.639" }
%"class.WTF::HashMap.639" = type { %"class.WTF::HashTable.640" }
%"class.WTF::HashTable.640" = type <{ %"struct.WTF::KeyValuePair.642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.642" = type opaque
%"class.blink::DataRef.663" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.665", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.667" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.669", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.671" = type { %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.673", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.677", %class.scoped_refptr.679 }
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.679 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.852", %"class.blink::StyleVariables", %class.scoped_refptr.679 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.685" }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.WTF::Vector.688"* }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356", [32 x i8] }
%"class.WTF::VectorBufferBase.1356" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.696" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.699", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.826", i8, %"class.absl::optional.832", %class.scoped_refptr.808, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.837" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.708, %class.scoped_refptr.708, %class.scoped_refptr.708, %class.scoped_refptr.708, %class.scoped_refptr.708, %class.scoped_refptr.708, %class.scoped_refptr.743, %class.scoped_refptr.757, %class.scoped_refptr.758, %class.scoped_refptr.758, %class.scoped_refptr.758, %class.scoped_refptr.758, %class.scoped_refptr.758, %class.scoped_refptr.758, %class.scoped_refptr.798, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.799, %class.scoped_refptr.822 }
%class.scoped_refptr.708 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.725" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.709", i8, i8, %class.scoped_refptr.711, i32, i32 }
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.711 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.718, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.719", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.712" }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.718 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.744", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.744" = type { %"class.WTF::RefCounted.745", i8, i8, %class.scoped_refptr.718, i32, i32 }
%"class.WTF::RefCounted.745" = type { %"class.base::RefCounted.746" }
%"class.base::RefCounted.746" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.747" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.747" = type { %"class.absl::optional_internal::optional_data.748" }
%"class.absl::optional_internal::optional_data.748" = type { %"class.absl::optional_internal::optional_data_base.749" }
%"class.absl::optional_internal::optional_data_base.749" = type { %"class.absl::optional_internal::optional_data_dtor_base.750" }
%"class.absl::optional_internal::optional_data_dtor_base.750" = type { i8, %union.anon.751 }
%union.anon.751 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.752" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.734", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.743 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.757 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.758 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.759" }
%"class.blink::PaintPropertyNode.759" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.711, %class.scoped_refptr.763, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.785", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.763 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.800" }
%"class.blink::PaintPropertyNode.800" = type { %"class.WTF::RefCounted.801", i8, i8, %class.scoped_refptr.763, i32, i32 }
%"class.WTF::RefCounted.801" = type { %"class.base::RefCounted.802" }
%"class.base::RefCounted.802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.764" }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.780" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.766, [20 x float], i32, [4 x i8], %"class.std::__1::vector.773", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.766 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.767, i32, %"class.absl::optional.768", i8, i32 }
%class.sk_sp.767 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.768" = type { %"class.absl::optional_internal::optional_data.769" }
%"class.absl::optional_internal::optional_data.769" = type { %"class.absl::optional_internal::optional_data_base.770" }
%"class.absl::optional_internal::optional_data_base.770" = type { %"class.absl::optional_internal::optional_data_dtor_base.771" }
%"class.absl::optional_internal::optional_data_dtor_base.771" = type { i8, %union.anon.772 }
%union.anon.772 = type { %struct.SkRect }
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.775" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.791" }
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { i32*, i32*, %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { i32* }
%class.scoped_refptr.798 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.799 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.811" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.711, %"class.absl::optional.803", %class.scoped_refptr.808, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.803" = type { %"class.absl::optional_internal::optional_data.804" }
%"class.absl::optional_internal::optional_data.804" = type { %"class.absl::optional_internal::optional_data_base.805" }
%"class.absl::optional_internal::optional_data_base.805" = type { %"class.absl::optional_internal::optional_data_dtor_base.806" }
%"class.absl::optional_internal::optional_data_dtor_base.806" = type { i8, [3 x i8], %union.anon.807 }
%union.anon.807 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.814", i32, [4 x i8] }>
%"class.WTF::Vector.814" = type { %"class.WTF::VectorBuffer.815" }
%"class.WTF::VectorBuffer.815" = type { %"class.WTF::VectorBufferBase.816" }
%"class.WTF::VectorBufferBase.816" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.822 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.711, %class.scoped_refptr.763, %class.scoped_refptr.762 }
%"class.absl::optional.832" = type { %"class.absl::optional_internal::optional_data.833" }
%"class.absl::optional_internal::optional_data.833" = type { %"class.absl::optional_internal::optional_data_base.834" }
%"class.absl::optional_internal::optional_data_base.834" = type { %"class.absl::optional_internal::optional_data_dtor_base.835" }
%"class.absl::optional_internal::optional_data_dtor_base.835" = type { i8, %union.anon.836 }
%union.anon.836 = type { %"class.blink::IntRect" }
%class.scoped_refptr.808 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.809", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.618, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.618 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.619, %class.SkTDArray.620, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.619 = type { i8*, i32, i32 }
%class.SkTDArray.620 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.621 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.621 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::FragmentData"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.blink::LayoutSVGShapeRareData"* }
%"struct.blink::LayoutSVGShapeRareData" = type { %"class.blink::Path", %"class.blink::AffineTransform" }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.blink::Path"* }
%"class.blink::SVGGeometryElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::Member.1248" }
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.1246" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.1226", %"class.blink::HeapHashMap.1233", %"class.blink::Member.1240", %"class.blink::Member.1242" }
%"class.blink::HeapHashSet.1226" = type { %"class.WTF::HashSet.1229" }
%"class.WTF::HashSet.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"class.blink::WeakMember.1232"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1232" = type opaque
%"class.blink::HeapHashMap.1233" = type { %"class.WTF::HashMap.1236" }
%"class.WTF::HashMap.1236" = type { %"class.WTF::HashTable.1237" }
%"class.WTF::HashTable.1237" = type <{ %"struct.WTF::KeyValuePair.1239"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1239" = type opaque
%"class.blink::Member.1240" = type { %"class.blink::MemberBase.1241" }
%"class.blink::MemberBase.1241" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1244", %"class.blink::Member.1244" }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::SVGAnimatedNumber"* }
%"class.blink::SVGAnimatedNumber" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.392", %"class.blink::DataRef.396", %"class.blink::DataRef.596", %"class.blink::DataRef.663", %"class.blink::DataRef.667", %"class.blink::DataRef.671", %"class.blink::DataRef.675", [20 x i8], [4 x i8] }>
%"class.blink::SVGLengthContext" = type { %"class.blink::SVGElement"* }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1250 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.41", [4 x i8] }>
%"class.blink::SVGElementResourceClient" = type <{ %"class.blink::SVGResourceClient", %"class.blink::Member.1361", %"class.blink::Member.1363", i8, [7 x i8] }>
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.1363" = type { %"class.blink::MemberBase.1364" }
%"class.blink::MemberBase.1364" = type { %"class.blink::SVGElementResourceClient::FilterData"* }
%"class.blink::SVGElementResourceClient::FilterData" = type opaque
%"class.blink::LayoutSVGResourceContainer" = type { %"class.blink::LayoutSVGHiddenContainer.base", i16, [4 x i8] }
%"class.blink::LayoutSVGHiddenContainer.base" = type { %"class.blink::LayoutSVGContainer.base" }
%"class.blink::LayoutSVGContainer.base" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::SVGContentContainer", i8, i8 }>
%"class.blink::SVGContentContainer" = type { %"class.blink::LayoutObjectChildList", %"class.blink::FloatRect", %"class.blink::FloatRect" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::SVGResourceInvalidator" = type { %"class.blink::LayoutObject"* }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.1367", %"class.blink::WeakMember.920", i32, [4 x i8], %"class.blink::HeapHashSet.1368", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.1374", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.1367" = type { %"class.blink::MemberBase.344" }
%"class.blink::HeapHashSet.1368" = type { %"class.WTF::HashSet.1371" }
%"class.WTF::HashSet.1371" = type { %"class.WTF::HashTable.1372" }
%"class.WTF::HashTable.1372" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.absl::optional.1374" = type { %"class.absl::optional_internal::optional_data.1375" }
%"class.absl::optional_internal::optional_data.1375" = type { %"class.absl::optional_internal::optional_data_base.1376" }
%"class.absl::optional_internal::optional_data_base.1376" = type { %"class.absl::optional_internal::optional_data_dtor_base.1377" }
%"class.absl::optional_internal::optional_data_dtor_base.1377" = type { i8, %union.anon.1378 }
%union.anon.1378 = type { %"class.blink::FloatSize" }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::SVGShapePainter" = type { %"class.blink::LayoutSVGShape"* }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1299", i8, %"class.blink::Member.1301", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1305", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1315", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1305" = type { %"class.blink::MemberBase.1306" }
%"class.blink::MemberBase.1306" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1307", %"class.blink::Member.1309", %"class.blink::Member.1311", %"class.blink::Member.1313", %"class.WTF::Vector.861", i16, %class.scoped_refptr.917 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1307" = type { %"class.blink::MemberBase.1308" }
%"class.blink::MemberBase.1308" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1309" = type { %"class.blink::MemberBase.1310" }
%"class.blink::MemberBase.1310" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1315" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1316", { i64, i64 } }
%"class.blink::WeakMember.1316" = type { %"class.blink::MemberBase.1300" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::HeapLinkedHashSet"* }
%"class.blink::HeapLinkedHashSet" = type opaque
%"class.blink::PointerEventsHitRules" = type { i8, [3 x i8] }
%"class.blink::TransformedHitTestLocation" = type { %"class.absl::optional.1317", %"class.blink::HitTestLocation"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type opaque
%"class.blink::LayoutNGTableSectionInterface" = type opaque
%"class.blink::LayoutNGTableRowInterface" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.WTF::Vector.1322" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.1323", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox" = type opaque
%"class.WTF::Vector.1329" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1251, %"class.WTF::Vector.1252", %"class.std::__1::unique_ptr.1257", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1282, %"class.blink::Persistent.1283" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1251 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1252" = type { %"class.WTF::VectorBuffer.1253" }
%"class.WTF::VectorBuffer.1253" = type { %"class.WTF::VectorBufferBase.1254", [8 x i8] }
%"class.WTF::VectorBufferBase.1254" = type { %class.scoped_refptr.1251*, i32, i32 }
%"class.std::__1::unique_ptr.1257" = type { %"class.std::__1::__compressed_pair.1258" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1260", %"class.absl::optional.1269", %"class.absl::optional.1274" }
%"class.absl::optional.1260" = type { %"class.absl::optional_internal::optional_data.1261" }
%"class.absl::optional_internal::optional_data.1261" = type { %"class.absl::optional_internal::optional_data_base.1262" }
%"class.absl::optional_internal::optional_data_base.1262" = type { %"class.absl::optional_internal::optional_data_dtor_base.1263" }
%"class.absl::optional_internal::optional_data_dtor_base.1263" = type { i8, %union.anon.1264 }
%union.anon.1264 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1269" = type { %"class.absl::optional_internal::optional_data.1270" }
%"class.absl::optional_internal::optional_data.1270" = type { %"class.absl::optional_internal::optional_data_base.1271" }
%"class.absl::optional_internal::optional_data_base.1271" = type { %"class.absl::optional_internal::optional_data_dtor_base.1272" }
%"class.absl::optional_internal::optional_data_dtor_base.1272" = type { i8, [3 x i8], %union.anon.1273 }
%union.anon.1273 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1274" = type { %"class.absl::optional_internal::optional_data.1275" }
%"class.absl::optional_internal::optional_data.1275" = type { %"class.absl::optional_internal::optional_data_base.1276" }
%"class.absl::optional_internal::optional_data_base.1276" = type { %"class.absl::optional_internal::optional_data_dtor_base.1277" }
%"class.absl::optional_internal::optional_data_dtor_base.1277" = type { i8, %union.anon.1278 }
%union.anon.1278 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1282 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1283" = type { %"class.blink::PersistentBase.1284" }
%"class.blink::PersistentBase.1284" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1287", %"struct.blink::PhysicalRect", %"class.blink::Member.1297" }
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.WTF::HashSet.1290"* }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.WTF::Vector.1330" = type opaque

$_ZNK5blink14LayoutSVGShape17StrokeBoundingBoxEv = comdat any

$_ZNK5blink14LayoutSVGShape17ObjectBoundingBoxEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE = comdat any

$_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv = comdat any

$_ZNK5blink14LayoutSVGShape7GetNameEv = comdat any

$_ZN5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink12LayoutObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink14LayoutSVGShape23SetNeedsTransformUpdateEv = comdat any

$_ZN5blink14LayoutSVGShape24SetNeedsBoundariesUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink20LayoutSVGModelObject31VisualRectInLocalSVGCoordinatesEv = comdat any

$_ZNK5blink14LayoutSVGShape17LocalSVGTransformEv = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink12LayoutObject18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink12LayoutObject18HasInlineFragmentsEv = comdat any

$_ZNK5blink12LayoutObject28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject33ClearFirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject31SetFirstInlineFragmentItemIndexEj = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink14LayoutSVGShape8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZN5blink12LayoutObject43InLayoutNGInlineFormattingContextWillChangeEb = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink14LayoutSVGShape12IsShapeEmptyEv = comdat any

$_ZNK5blink14LayoutSVGShape15MarkerPositionsEv = comdat any

$_ZNK5blink14LayoutSVGShape16GeometryCodePathEv = comdat any

@_ZTVN5blink14LayoutSVGShapeE = hidden unnamed_addr constant { [116 x i8*], [7 x i8*] } { [116 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShapeD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShapeD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::ImageResourceObserver"*)* @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink20LayoutSVGModelObject14IsChildAllowedEPNS_12LayoutObjectERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject8AddChildEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShape23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShape24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutSVGModelObject"*)* @_ZNK5blink20LayoutSVGModelObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink14LayoutSVGShape5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShape12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1001"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink14LayoutSVGShape11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void ()* @_ZNK5blink12LayoutObject16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutSVGModelObject"*, %"class.WTF::Vector.1322"*, i32)* @_ZNK5blink20LayoutSVGModelObject13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutSVGModelObject"*)* @_ZNK5blink20LayoutSVGModelObject36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutSVGModelObject"*, i32)* @_ZNK5blink20LayoutSVGModelObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink12LayoutObject14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink20LayoutSVGModelObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutSVGModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink20LayoutSVGModelObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutSVGModelObject"*, %"class.WTF::Vector.1329"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink20LayoutSVGModelObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink12LayoutObject15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGShape"*, i32)* @_ZNK5blink14LayoutSVGShape8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink12LayoutObject15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink14LayoutSVGShape14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i1)* @_ZN5blink12LayoutObject43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShape15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGModelObject"*)* @_ZN5blink20LayoutSVGModelObject16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGModelObject"*)* @_ZN5blink20LayoutSVGModelObject21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape12IsShapeEmptyEv to i8*), i8* bitcast (%"class.WTF::Vector.1330"* (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape15MarkerPositionsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape16GeometryCodePathEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutSVGShape"*)* @_ZNK5blink14LayoutSVGShape32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShape22UpdateShapeFromElementEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)* @_ZN5blink14LayoutSVGShape28ShapeDependentStrokeContainsERKNS_15HitTestLocationE to i8*), i8* bitcast (i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)* @_ZNK5blink14LayoutSVGShape26ShapeDependentFillContainsERKNS_15HitTestLocationENS_8WindRuleE to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZThn8_N5blink14LayoutSVGShapeD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutSVGShape"*)* @_ZThn8_N5blink14LayoutSVGShapeD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutSVGShape"*)* @_ZThn8_NK5blink14LayoutSVGShape32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@__const._ZN5blink14LayoutSVGShape28ShapeDependentStrokeContainsERKNS_15HitTestLocationE.stroke_data = private unnamed_addr constant { i32, float, i32, i32, float, [4 x i8], %class.sk_sp.1250 } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.1250 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) } }, align 8
@__const._ZN5blink14LayoutSVGShape11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE.local_location = private unnamed_addr constant { %"class.absl::optional.1317", [4 x i8], %"class.blink::HitTestLocation"* } { %"class.absl::optional.1317" { %"class.absl::optional_internal::optional_data.1318" { %"class.absl::optional_internal::optional_data_base.1319" { %"class.absl::optional_internal::optional_data_dtor_base.1320" { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.1321 { %"class.blink::HitTestLocation" <{ %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatQuad" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }> } } } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::HitTestLocation"* inttoptr (i64 -6148914691236517206 to %"class.blink::HitTestLocation"*) }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"LayoutSVGShape\00", align 1

@_ZN5blink14LayoutSVGShapeC1EPNS_18SVGGeometryElementENS0_19StrokeGeometryClassE = hidden unnamed_addr alias void (%"class.blink::LayoutSVGShape"*, %"class.blink::SVGGeometryElement"*, i8), void (%"class.blink::LayoutSVGShape"*, %"class.blink::SVGGeometryElement"*, i8)* @_ZN5blink14LayoutSVGShapeC2EPNS_18SVGGeometryElementENS0_19StrokeGeometryClassE
@_ZN5blink14LayoutSVGShapeD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutSVGShape"*), void (%"class.blink::LayoutSVGShape"*)* @_ZN5blink14LayoutSVGShapeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShapeC2EPNS_18SVGGeometryElementENS0_19StrokeGeometryClassE(%"class.blink::LayoutSVGShape"*, %"class.blink::SVGGeometryElement"*, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGGeometryElement", %"class.blink::SVGGeometryElement"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20LayoutSVGModelObjectC2EPNS_10SVGElementE(%"class.blink::LayoutSVGModelObject"* %4, %"class.blink::SVGElement"* %5) #9
  %6 = bitcast %"class.blink::LayoutSVGShape"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [7 x i8*] }, { [116 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutSVGShapeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [7 x i8*] }, { [116 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutSVGShapeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 3
  %9 = bitcast %"class.blink::FloatRect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 32, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %8) #9
  %10 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 7
  %12 = bitcast %"class.std::__1::unique_ptr.615"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  store i8 %2, i8* %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 8
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, -16
  %16 = or i8 %15, 6
  store i8 %16, i8* %13, align 1
  ret void
}

declare void @_ZN5blink20LayoutSVGModelObjectC2EPNS_10SVGElementE(%"class.blink::LayoutSVGModelObject"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShapeD2Ev(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutSVGShape"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [7 x i8*] }, { [116 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutSVGShapeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [116 x i8*], [7 x i8*] }, { [116 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutSVGShapeE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %3, align 8
  %5 = icmp eq %"class.blink::Path"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %4) #9
  %7 = bitcast %"class.blink::Path"* %4 to i8*
  tail call void @free(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %9, align 8
  store %"struct.blink::LayoutSVGShapeRareData"* null, %"struct.blink::LayoutSVGShapeRareData"** %9, align 8
  %11 = icmp eq %"struct.blink::LayoutSVGShapeRareData"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %10, i64 0, i32 0
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %13) #9
  %14 = bitcast %"struct.blink::LayoutSVGShapeRareData"* %10 to i8*
  tail call void @free(i8* %14) #9
  br label %15

15:                                               ; preds = %8, %12
  %16 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Path"*, %"class.blink::Path"** %16, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %16, align 8
  %18 = icmp eq %"class.blink::Path"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %17) #9
  %20 = bitcast %"class.blink::Path"* %17 to i8*
  tail call void @free(i8* %20) #9
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"* %22) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectD2Ev(%"class.blink::LayoutObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink14LayoutSVGShapeD1Ev(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to %"class.blink::LayoutSVGShape"*
  tail call void @_ZN5blink14LayoutSVGShapeD2Ev(%"class.blink::LayoutSVGShape"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShapeD0Ev(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14LayoutSVGShapeD2Ev(%"class.blink::LayoutSVGShape"* %0) #9
  %2 = bitcast %"class.blink::LayoutSVGShape"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink14LayoutSVGShapeD0Ev(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 -1, i32 7
  %3 = bitcast i8* %2 to %"class.blink::LayoutSVGShape"*
  tail call void @_ZN5blink14LayoutSVGShapeD2Ev(%"class.blink::LayoutSVGShape"* %3) #9
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutSVGShape"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutSVGModelObject14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutSVGModelObject"* %4, i32 %1, %"class.blink::ComputedStyle"* %2) #9
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = tail call zeroext i1 @_ZN5blink15TransformHelper21DependsOnReferenceBoxERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %6) #9
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 8
  %9 = zext i1 %7 to i8
  %10 = load i8, i8* %8, align 1
  %11 = shl nuw nsw i8 %9, 3
  %12 = and i8 %10, -9
  %13 = or i8 %12, %11
  store i8 %13, i8* %8, align 1
  %14 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 16777216
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %21 = bitcast %"class.blink::Node"** %20 to %"class.blink::SVGElement"**
  %22 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %21, align 8
  br label %23

23:                                               ; preds = %3, %19
  %24 = phi %"class.blink::SVGElement"* [ %22, %19 ], [ null, %3 ]
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  tail call void @_ZN5blink12SVGResources12UpdatePaintsERNS_10SVGElementEPKNS_13ComputedStyleERS4_(%"class.blink::SVGElement"* dereferenceable(168) %24, %"class.blink::ComputedStyle"* %2, %"class.blink::ComputedStyle"* dereferenceable(104) %25) #9
  %26 = and i32 %1, 6
  %27 = icmp ne i32 %26, 4
  %28 = icmp ne %"class.blink::ComputedStyle"* %2, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %169

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %32 = load %"class.blink::Path"*, %"class.blink::Path"** %31, align 8
  %33 = icmp eq %"class.blink::Path"* %32, null
  br i1 %33, label %169, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 4, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %38, i64 0, i32 5, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %40, i64 0, i32 5
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %43, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %45, i64 0, i32 5
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %40, i64 0, i32 5, i32 2
  %48 = load i8, i8* %47, align 1
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %45, i64 0, i32 5, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %48, %50
  br i1 %51, label %52, label %164

52:                                               ; preds = %34
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %40, i64 0, i32 5, i32 1
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %45, i64 0, i32 5, i32 1
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = icmp eq i8 %54, %56
  br i1 %57, label %58, label %164

58:                                               ; preds = %52
  %59 = icmp eq i8 %48, 12
  br i1 %59, label %95, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %40, i64 0, i32 5, i32 3
  %62 = load i8, i8* %61, align 2, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.blink::Length"* %41 to float*
  %66 = load float, float* %65, align 4
  br label %71

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi float [ %66, %64 ], [ %70, %67 ]
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %45, i64 0, i32 5, i32 3
  %74 = load i8, i8* %73, align 2, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = bitcast %"class.blink::Length"* %46 to float*
  %78 = load float, float* %77, align 4
  br label %83

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to float
  br label %83

83:                                               ; preds = %79, %76
  %84 = phi float [ %78, %76 ], [ %82, %79 ]
  %85 = fcmp oeq float %72, %84
  br i1 %85, label %95, label %86

86:                                               ; preds = %83
  %87 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %41, %"class.blink::Length"* dereferenceable(8) %46) #9
  br i1 %87, label %88, label %164

88:                                               ; preds = %86
  %89 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %37, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %89, i64 0, i32 5, i32 0, i32 0
  %91 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %90, align 8
  %92 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %42, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %92, i64 0, i32 5, i32 0, i32 0
  %94 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %93, align 8
  br label %95

95:                                               ; preds = %88, %58, %83
  %96 = phi %"class.blink::ComputedStyleBase::StyleStrokeData"* [ %94, %88 ], [ %45, %58 ], [ %45, %83 ]
  %97 = phi %"class.blink::ComputedStyleBase::StyleStrokeData"* [ %91, %88 ], [ %40, %58 ], [ %40, %83 ]
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %97, i64 0, i32 2, i32 0
  %99 = load %"class.base::RefCountedData.648"*, %"class.base::RefCountedData.648"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %96, i64 0, i32 2, i32 0
  %101 = load %"class.base::RefCountedData.648"*, %"class.base::RefCountedData.648"** %100, align 8
  %102 = getelementptr inbounds %"class.base::RefCountedData.648", %"class.base::RefCountedData.648"* %99, i64 0, i32 1, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.base::RefCountedData.648", %"class.base::RefCountedData.648"* %101, i64 0, i32 1, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %103, %105
  br i1 %106, label %107, label %164

107:                                              ; preds = %95
  %108 = icmp eq i32 %103, 0
  br i1 %108, label %169, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.base::RefCountedData.648", %"class.base::RefCountedData.648"* %99, i64 0, i32 1, i32 0, i32 0, i32 0
  %111 = load %"class.blink::Length"*, %"class.blink::Length"** %110, align 8
  %112 = getelementptr inbounds %"class.base::RefCountedData.648", %"class.base::RefCountedData.648"* %101, i64 0, i32 1, i32 0, i32 0, i32 0
  %113 = load %"class.blink::Length"*, %"class.blink::Length"** %112, align 8
  %114 = zext i32 %103 to i64
  %115 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %111, i64 %114
  br label %116

116:                                              ; preds = %160, %109
  %117 = phi %"class.blink::Length"* [ %162, %160 ], [ %113, %109 ]
  %118 = phi %"class.blink::Length"* [ %161, %160 ], [ %111, %109 ]
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 2
  %120 = load i8, i8* %119, align 1
  %121 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %117, i64 0, i32 2
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %120, %122
  br i1 %123, label %124, label %164

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 1
  %126 = load i8, i8* %125, align 4, !range !2
  %127 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %117, i64 0, i32 1
  %128 = load i8, i8* %127, align 4, !range !2
  %129 = icmp eq i8 %126, %128
  br i1 %129, label %130, label %164

130:                                              ; preds = %124
  %131 = icmp eq i8 %120, 12
  br i1 %131, label %160, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 3
  %134 = load i8, i8* %133, align 2, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %132
  %137 = bitcast %"class.blink::Length"* %118 to float*
  %138 = load float, float* %137, align 4
  br label %143

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = sitofp i32 %141 to float
  br label %143

143:                                              ; preds = %139, %136
  %144 = phi float [ %138, %136 ], [ %142, %139 ]
  %145 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %117, i64 0, i32 3
  %146 = load i8, i8* %145, align 2, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %143
  %149 = bitcast %"class.blink::Length"* %117 to float*
  %150 = load float, float* %149, align 4
  br label %155

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %117, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = sitofp i32 %153 to float
  br label %155

155:                                              ; preds = %151, %148
  %156 = phi float [ %150, %148 ], [ %154, %151 ]
  %157 = fcmp oeq float %144, %156
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %118, %"class.blink::Length"* dereferenceable(8) %117) #9
  br i1 %159, label %160, label %164

160:                                              ; preds = %158, %155, %130
  %161 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 1
  %162 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %117, i64 1
  %163 = icmp eq %"class.blink::Length"* %161, %115
  br i1 %163, label %169, label %116

164:                                              ; preds = %158, %124, %116, %86, %95, %34, %52
  %165 = load %"class.blink::Path"*, %"class.blink::Path"** %31, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %31, align 8
  %166 = icmp eq %"class.blink::Path"* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %165) #9
  %168 = bitcast %"class.blink::Path"* %165 to i8*
  tail call void @free(i8* %168) #9
  br label %169

169:                                              ; preds = %160, %30, %167, %164, %107, %23
  %170 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %171 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %170, align 8
  %172 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %171, i64 0, i32 4, i32 0, i32 0
  %173 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %173, i64 0, i32 9
  %175 = load i32, i32* %174, align 8
  %176 = lshr i32 %175, 26
  %177 = and i32 %176, 1
  %178 = zext i32 %177 to i96
  %179 = load i96, i96* %15, align 4
  %180 = shl nuw nsw i96 %178, 71
  %181 = and i96 %179, -2361183241434822606849
  %182 = or i96 %180, %181
  store i96 %182, i96* %15, align 4
  ret void
}

declare void @_ZN5blink20LayoutSVGModelObject14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutSVGModelObject"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN5blink15TransformHelper21DependsOnReferenceBoxERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink12SVGResources12UpdatePaintsERNS_10SVGElementEPKNS_13ComputedStyleERS4_(%"class.blink::SVGElement"* dereferenceable(168), %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape15WillBeDestroyedEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = bitcast %"class.blink::Node"** %9 to %"class.blink::SVGElement"**
  %11 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %10, align 8
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"class.blink::SVGElement"* [ %11, %8 ], [ null, %1 ]
  %14 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  tail call void @_ZN5blink12SVGResources11ClearPaintsERNS_10SVGElementEPKNS_13ComputedStyleE(%"class.blink::SVGElement"* dereferenceable(168) %13, %"class.blink::ComputedStyle"* %15) #9
  tail call void @_ZN5blink20LayoutSVGModelObject15WillBeDestroyedEv(%"class.blink::LayoutSVGModelObject"* %2) #9
  ret void
}

declare void @_ZN5blink12SVGResources11ClearPaintsERNS_10SVGElementEPKNS_13ComputedStyleE(%"class.blink::SVGElement"* dereferenceable(168), %"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare void @_ZN5blink20LayoutSVGModelObject15WillBeDestroyedEv(%"class.blink::LayoutSVGModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape9ClearPathEv(%"class.blink::LayoutSVGShape"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Path"*, %"class.blink::Path"** %2, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %2, align 8
  %4 = icmp eq %"class.blink::Path"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %3) #9
  %6 = bitcast %"class.blink::Path"* %3 to i8*
  tail call void @free(i8* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Path"*, %"class.blink::Path"** %8, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %8, align 8
  %10 = icmp eq %"class.blink::Path"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %9) #9
  %12 = bitcast %"class.blink::Path"* %9 to i8*
  tail call void @free(i8* %12) #9
  br label %13

13:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape10CreatePathEv(%"class.blink::LayoutSVGShape"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Path", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.615"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Path"*, %"class.blink::Path"** %4, align 8
  %6 = icmp eq %"class.blink::Path"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = tail call noalias i8* @malloc(i64 16) #9
  %9 = bitcast i8* %8 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %9) #9
  %10 = ptrtoint i8* %8 to i64
  %11 = load %"class.blink::Path"*, %"class.blink::Path"** %4, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.615"* %3 to i64*
  store i64 %10, i64* %12, align 8
  %13 = icmp eq %"class.blink::Path"* %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %11) #9
  %15 = bitcast %"class.blink::Path"* %11 to i8*
  tail call void @free(i8* %15) #9
  br label %16

16:                                               ; preds = %1, %7, %14
  %17 = bitcast %"class.blink::Path"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 16777216
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %25 = bitcast %"class.blink::Node"** %24 to %"class.blink::SVGGeometryElement"**
  %26 = load %"class.blink::SVGGeometryElement"*, %"class.blink::SVGGeometryElement"** %25, align 8
  %27 = bitcast %"class.blink::SVGGeometryElement"* %26 to void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)***
  br label %28

28:                                               ; preds = %16, %23
  %29 = phi void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)*** [ %27, %23 ], [ null, %16 ]
  %30 = phi %"class.blink::SVGGeometryElement"* [ %26, %23 ], [ null, %16 ]
  %31 = load void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)**, void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)*** %29, align 8
  %32 = getelementptr inbounds void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)*, void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)** %31, i64 168
  %33 = load void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)*, void (%"class.blink::Path"*, %"class.blink::SVGGeometryElement"*)** %32, align 8
  call void %33(%"class.blink::Path"* nonnull sret %2, %"class.blink::SVGGeometryElement"* %30) #9
  %34 = load %"class.blink::Path"*, %"class.blink::Path"** %4, align 8
  %35 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %34, %"class.blink::Path"* nonnull dereferenceable(16) %2) #9
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  ret void
}

declare dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink14LayoutSVGShape15DashScaleFactorEv(%"class.blink::LayoutSVGShape"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %5, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %7, i64 0, i32 2, i32 0
  %9 = load %"class.base::RefCountedData.648"*, %"class.base::RefCountedData.648"** %8, align 8
  %10 = getelementptr inbounds %"class.base::RefCountedData.648", %"class.base::RefCountedData.648"* %9, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 16777216
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %21 = bitcast %"class.blink::Node"** %20 to %"class.blink::SVGGeometryElement"**
  %22 = load %"class.blink::SVGGeometryElement"*, %"class.blink::SVGGeometryElement"** %21, align 8
  br label %23

23:                                               ; preds = %13, %19
  %24 = phi %"class.blink::SVGGeometryElement"* [ %22, %19 ], [ null, %13 ]
  %25 = tail call float @_ZNK5blink18SVGGeometryElement21PathLengthScaleFactorEv(%"class.blink::SVGGeometryElement"* %24) #9
  br label %26

26:                                               ; preds = %1, %23
  %27 = phi float [ %25, %23 ], [ 1.000000e+00, %1 ]
  ret float %27
}

declare float @_ZNK5blink18SVGGeometryElement21PathLengthScaleFactorEv(%"class.blink::SVGGeometryElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape22UpdateShapeFromElementEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AffineTransform", align 8
  tail call void @_ZN5blink14LayoutSVGShape10CreatePathEv(%"class.blink::LayoutSVGShape"* %0)
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Path"*, %"class.blink::Path"** %3, align 8
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK5blink4Path17TightBoundingRectEv(%"class.blink::Path"* %4) #9
  %6 = extractvalue { <2 x float>, <2 x float> } %5, 0
  %7 = extractvalue { <2 x float>, <2 x float> } %5, 1
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %9 = bitcast %"class.blink::FloatRect"* %8 to <2 x float>*
  store <2 x float> %6, <2 x float>* %9, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1, i32 1
  %11 = bitcast %"class.blink::FloatSize"* %10 to <2 x float>*
  store <2 x float> %7, <2 x float>* %11, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = bitcast %"class.blink::ComputedStyle"** %12 to %"class.blink::ComputedStyleBase"**
  %14 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %14, i64 0, i32 4, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %16, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108864
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.blink::AffineTransform"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0
  call void @_ZNK5blink20LayoutSVGModelObject23CalculateLocalTransformEv(%"class.blink::AffineTransform"* nonnull sret %2, %"class.blink::LayoutSVGModelObject"* %23) #9
  %24 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 3
  %25 = bitcast %"class.blink::AffineTransform"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %22, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #9
  call void @_ZN5blink14LayoutSVGShape26UpdateNonScalingStrokeDataEv(%"class.blink::LayoutSVGShape"* %0)
  br label %26

26:                                               ; preds = %1, %21
  %27 = call { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape26CalculateStrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"* %0)
  %28 = extractvalue { <2 x float>, <2 x float> } %27, 0
  %29 = extractvalue { <2 x float>, <2 x float> } %27, 1
  %30 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2
  %31 = bitcast %"class.blink::FloatRect"* %30 to <2 x float>*
  store <2 x float> %28, <2 x float>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2, i32 1
  %33 = bitcast %"class.blink::FloatSize"* %32 to <2 x float>*
  store <2 x float> %29, <2 x float>* %33, align 8
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink4Path17TightBoundingRectEv(%"class.blink::Path"*) local_unnamed_addr #1

declare void @_ZNK5blink20LayoutSVGModelObject23CalculateLocalTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutSVGModelObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape26UpdateNonScalingStrokeDataEv(%"class.blink::LayoutSVGShape"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::AffineTransform", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::AffineTransform"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %2, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %2, i64 0, i32 0, i64 1
  %7 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %2, i64 0, i32 0, i64 2
  %8 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %2, i64 0, i32 0, i64 3
  %9 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %2, i64 0, i32 0, i64 4
  %10 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %2, i64 0, i32 0, i64 5
  %11 = bitcast %"class.blink::AffineTransform"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -1, i64 48, i1 false)
  call void @_ZNK5blink14LayoutSVGShape32ComputeNonScalingStrokeTransformEv(%"class.blink::AffineTransform"* nonnull sret %2, %"class.blink::LayoutSVGShape"* %0)
  %12 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.846", %"class.std::__1::unique_ptr.846"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %13, align 8
  %15 = icmp eq %"struct.blink::LayoutSVGShapeRareData"* %14, null
  br i1 %15, label %16, label %30

16:                                               ; preds = %1
  %17 = call noalias i8* @malloc(i64 64) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 64, i1 false) #9
  %18 = bitcast i8* %17 to %"class.blink::Path"*
  call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %18) #9
  %19 = getelementptr inbounds i8, i8* %17, i64 16
  %20 = bitcast i8* %19 to %"class.blink::AffineTransform"*
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %20) #9
  %21 = ptrtoint i8* %17 to i64
  %22 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %13, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.846"* %12 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %"struct.blink::LayoutSVGShapeRareData"* %22, null
  %25 = bitcast i8* %17 to %"struct.blink::LayoutSVGShapeRareData"*
  br i1 %24, label %30, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %22, i64 0, i32 0
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %27) #9
  %28 = bitcast %"struct.blink::LayoutSVGShapeRareData"* %22 to i8*
  call void @free(i8* %28) #9
  %29 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %13, align 8
  br label %30

30:                                               ; preds = %1, %16, %26
  %31 = phi %"struct.blink::LayoutSVGShapeRareData"* [ %14, %1 ], [ %25, %16 ], [ %29, %26 ]
  %32 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 1
  %33 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %32, i64 0, i32 0, i64 0
  %34 = load double, double* %33, align 8
  %35 = load double, double* %5, align 8
  %36 = fcmp oeq double %34, %35
  br i1 %36, label %37, label %62

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 1, i32 0, i64 1
  %39 = load double, double* %38, align 8
  %40 = load double, double* %6, align 8
  %41 = fcmp oeq double %39, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 1, i32 0, i64 2
  %44 = load double, double* %43, align 8
  %45 = load double, double* %7, align 8
  %46 = fcmp oeq double %44, %45
  br i1 %46, label %47, label %62

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 1, i32 0, i64 3
  %49 = load double, double* %48, align 8
  %50 = load double, double* %8, align 8
  %51 = fcmp oeq double %49, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 1, i32 0, i64 4
  %54 = load double, double* %53, align 8
  %55 = load double, double* %9, align 8
  %56 = fcmp oeq double %54, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 1, i32 0, i64 5
  %59 = load double, double* %58, align 8
  %60 = load double, double* %10, align 8
  %61 = fcmp une double %59, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %30, %37, %42, %47, %52, %57
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 5) #9
  %63 = bitcast %"class.blink::AffineTransform"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %4, i64 48, i1 false)
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.blink::Path"*, %"class.blink::Path"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %31, i64 0, i32 0
  %68 = call dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* %67, %"class.blink::Path"* dereferenceable(16) %66) #9
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* %67, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape26CalculateStrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %6, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %8, i64 0, i32 4, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::LayoutSVGShape"* %0 to i1 (%"class.blink::LayoutSVGShape"*)***
  %14 = load i1 (%"class.blink::LayoutSVGShape"*)**, i1 (%"class.blink::LayoutSVGShape"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutSVGShape"*)*, i1 (%"class.blink::LayoutSVGShape"*)** %14, i64 107
  %16 = load i1 (%"class.blink::LayoutSVGShape"*)*, i1 (%"class.blink::LayoutSVGShape"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutSVGShape"* %0) #9
  br i1 %17, label %18, label %25

18:                                               ; preds = %1, %12
  %19 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %20 = bitcast %"class.blink::FloatRect"* %19 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1, i32 1
  %23 = bitcast %"class.blink::FloatSize"* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 8
  br label %122

25:                                               ; preds = %12
  %26 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %27 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %27, i64 0, i32 4, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %29, i64 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 67108864
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %25
  %35 = tail call { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape36CalculateNonScalingStrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"* %0)
  %36 = extractvalue { <2 x float>, <2 x float> } %35, 0
  %37 = extractvalue { <2 x float>, <2 x float> } %35, 1
  br label %122

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %40 = bitcast %"class.blink::FloatRect"* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  %42 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1, i32 1
  %43 = bitcast %"class.blink::FloatSize"* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %48 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %47 to i96*
  %49 = load i96, i96* %48, align 4
  %50 = and i96 %49, 16777216
  %51 = icmp eq i96 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %38
  %53 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %54 = bitcast %"class.blink::Node"** %53 to %"class.blink::SVGElement"**
  %55 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %54, align 8
  br label %56

56:                                               ; preds = %52, %38
  %57 = phi %"class.blink::SVGElement"* [ %55, %52 ], [ null, %38 ]
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %57) #9
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %26, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 4, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %60, i64 0, i32 5, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %62, i64 0, i32 6
  %64 = call float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::UnzoomedLength"* dereferenceable(8) %63, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  %65 = fcmp ugt float %64, 0.000000e+00
  br i1 %65, label %66, label %122

66:                                               ; preds = %56
  %67 = fmul float %64, 5.000000e-01
  %68 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 7
  %69 = load i8, i8* %68, align 8
  %70 = icmp eq i8 %69, 2
  br i1 %70, label %106, label %71

71:                                               ; preds = %66
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %73 = icmp ne i8 %69, 1
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 4, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %77, i64 0, i32 9
  %79 = load i8, i8* %78, align 8
  %80 = and i8 %79, 12
  %81 = icmp eq i8 %80, 0
  %82 = and i1 %73, %81
  br i1 %82, label %83, label %99

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %77, i64 0, i32 7
  %85 = load float, float* %84, align 8
  %86 = fpext float %85 to double
  %87 = fcmp olt double %86, 0x3FF6A09E667F3BCD
  %88 = and i8 %79, 3
  %89 = icmp eq i8 %88, 2
  %90 = and i1 %89, %87
  br i1 %90, label %91, label %95

91:                                               ; preds = %83
  %92 = fpext float %67 to double
  %93 = fmul double %92, 0x3FF6A09E667F3BCD
  %94 = fptrunc double %93 to float
  br label %106

95:                                               ; preds = %83
  %96 = fcmp olt float %85, 1.000000e+00
  %97 = select i1 %96, float 1.000000e+00, float %85
  %98 = fmul float %67, %97
  br label %106

99:                                               ; preds = %71
  %100 = and i8 %79, 3
  %101 = icmp eq i8 %100, 2
  br i1 %101, label %102, label %106

102:                                              ; preds = %99
  %103 = fpext float %67 to double
  %104 = fmul double %103, 0x3FF6A09E667F3BCD
  %105 = fptrunc double %104 to float
  br label %106

106:                                              ; preds = %102, %99, %95, %91, %66
  %107 = phi float [ %67, %66 ], [ %105, %102 ], [ %67, %99 ], [ %94, %91 ], [ %98, %95 ]
  %108 = extractelement <2 x float> %41, i32 0
  %109 = fsub float %108, %107
  %110 = insertelement <2 x float> undef, float %109, i32 0
  %111 = extractelement <2 x float> %44, i32 0
  %112 = fadd float %111, %107
  %113 = fadd float %107, %112
  %114 = insertelement <2 x float> undef, float %113, i32 0
  %115 = extractelement <2 x float> %41, i32 1
  %116 = fsub float %115, %107
  %117 = insertelement <2 x float> %110, float %116, i32 1
  %118 = extractelement <2 x float> %44, i32 1
  %119 = fadd float %118, %107
  %120 = fadd float %107, %119
  %121 = insertelement <2 x float> %114, float %120, i32 1
  br label %122

122:                                              ; preds = %106, %56, %34, %18
  %123 = phi <2 x float> [ %21, %18 ], [ %36, %34 ], [ %117, %106 ], [ %41, %56 ]
  %124 = phi <2 x float> [ %24, %18 ], [ %37, %34 ], [ %121, %106 ], [ %44, %56 ]
  %125 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %123, 0
  %126 = insertvalue { <2 x float>, <2 x float> } %125, <2 x float> %124, 1
  ret { <2 x float>, <2 x float> } %126
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape28ApproximateStrokeBoundingBoxERKNS_9FloatRectE(%"class.blink::LayoutSVGShape"* nocapture readonly, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGLengthContext", align 8
  %4 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::FloatSize"* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = bitcast %"class.blink::SVGLengthContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %3, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 16777216
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %18 = bitcast %"class.blink::Node"** %17 to %"class.blink::SVGElement"**
  %19 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %18, align 8
  br label %20

20:                                               ; preds = %2, %16
  %21 = phi %"class.blink::SVGElement"* [ %19, %16 ], [ null, %2 ]
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %3, %"class.blink::SVGElement"* %21) #9
  %22 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %24 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %24, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %26, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %28, i64 0, i32 6
  %30 = call float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %3, %"class.blink::UnzoomedLength"* dereferenceable(8) %29, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %31 = fcmp ugt float %30, 0.000000e+00
  br i1 %31, label %32, label %88

32:                                               ; preds = %20
  %33 = fmul float %30, 5.000000e-01
  %34 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 7
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %72, label %37

37:                                               ; preds = %32
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %39 = icmp ne i8 %35, 1
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 4, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %41, i64 0, i32 5, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %43, i64 0, i32 9
  %45 = load i8, i8* %44, align 8
  %46 = and i8 %45, 12
  %47 = icmp eq i8 %46, 0
  %48 = and i1 %39, %47
  br i1 %48, label %49, label %65

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %43, i64 0, i32 7
  %51 = load float, float* %50, align 8
  %52 = fpext float %51 to double
  %53 = fcmp olt double %52, 0x3FF6A09E667F3BCD
  %54 = and i8 %45, 3
  %55 = icmp eq i8 %54, 2
  %56 = and i1 %55, %53
  br i1 %56, label %57, label %61

57:                                               ; preds = %49
  %58 = fpext float %33 to double
  %59 = fmul double %58, 0x3FF6A09E667F3BCD
  %60 = fptrunc double %59 to float
  br label %72

61:                                               ; preds = %49
  %62 = fcmp olt float %51, 1.000000e+00
  %63 = select i1 %62, float 1.000000e+00, float %51
  %64 = fmul float %33, %63
  br label %72

65:                                               ; preds = %37
  %66 = and i8 %45, 3
  %67 = icmp eq i8 %66, 2
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = fpext float %33 to double
  %70 = fmul double %69, 0x3FF6A09E667F3BCD
  %71 = fptrunc double %70 to float
  br label %72

72:                                               ; preds = %57, %61, %68, %65, %32
  %73 = phi float [ %33, %32 ], [ %71, %68 ], [ %33, %65 ], [ %60, %57 ], [ %64, %61 ]
  %74 = extractelement <2 x float> %5, i32 0
  %75 = fsub float %74, %73
  %76 = insertelement <2 x float> undef, float %75, i32 0
  %77 = extractelement <2 x float> %8, i32 0
  %78 = fadd float %77, %73
  %79 = fadd float %73, %78
  %80 = insertelement <2 x float> undef, float %79, i32 0
  %81 = extractelement <2 x float> %5, i32 1
  %82 = fsub float %81, %73
  %83 = insertelement <2 x float> %76, float %82, i32 1
  %84 = extractelement <2 x float> %8, i32 1
  %85 = fadd float %84, %73
  %86 = fadd float %73, %85
  %87 = insertelement <2 x float> %80, float %86, i32 1
  br label %88

88:                                               ; preds = %20, %72
  %89 = phi <2 x float> [ %83, %72 ], [ %5, %20 ]
  %90 = phi <2 x float> [ %87, %72 ], [ %8, %20 ]
  %91 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %89, 0
  %92 = insertvalue { <2 x float>, <2 x float> } %91, <2 x float> %90, 1
  ret { <2 x float>, <2 x float> } %92
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink14LayoutSVGShape11StrokeWidthEv(%"class.blink::LayoutSVGShape"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = bitcast %"class.blink::Node"** %11 to %"class.blink::SVGElement"**
  %13 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %12, align 8
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi %"class.blink::SVGElement"* [ %13, %10 ], [ null, %1 ]
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %15) #9
  %16 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %20, i64 0, i32 5, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %22, i64 0, i32 6
  %24 = call float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::UnzoomedLength"* dereferenceable(8) %23, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  ret float %24
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape24HitTestStrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %6, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %8, i64 0, i32 4, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::FloatRect"* %13 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2, i32 1
  %17 = bitcast %"class.blink::FloatSize"* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 8
  br label %104

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %21 = bitcast %"class.blink::FloatRect"* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1, i32 1
  %24 = bitcast %"class.blink::FloatSize"* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 16777216
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %35 = bitcast %"class.blink::Node"** %34 to %"class.blink::SVGElement"**
  %36 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %35, align 8
  br label %37

37:                                               ; preds = %33, %19
  %38 = phi %"class.blink::SVGElement"* [ %36, %33 ], [ null, %19 ]
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %38) #9
  %39 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %40 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %40, i64 0, i32 4, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %42, i64 0, i32 5, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %44, i64 0, i32 6
  %46 = call float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::UnzoomedLength"* dereferenceable(8) %45, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  %47 = fcmp ugt float %46, 0.000000e+00
  br i1 %47, label %48, label %104

48:                                               ; preds = %37
  %49 = fmul float %46, 5.000000e-01
  %50 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 7
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 2
  br i1 %52, label %88, label %53

53:                                               ; preds = %48
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %55 = icmp ne i8 %51, 1
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 4, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %57, i64 0, i32 5, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %59, i64 0, i32 9
  %61 = load i8, i8* %60, align 8
  %62 = and i8 %61, 12
  %63 = icmp eq i8 %62, 0
  %64 = and i1 %55, %63
  br i1 %64, label %65, label %81

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %59, i64 0, i32 7
  %67 = load float, float* %66, align 8
  %68 = fpext float %67 to double
  %69 = fcmp olt double %68, 0x3FF6A09E667F3BCD
  %70 = and i8 %61, 3
  %71 = icmp eq i8 %70, 2
  %72 = and i1 %71, %69
  br i1 %72, label %73, label %77

73:                                               ; preds = %65
  %74 = fpext float %49 to double
  %75 = fmul double %74, 0x3FF6A09E667F3BCD
  %76 = fptrunc double %75 to float
  br label %88

77:                                               ; preds = %65
  %78 = fcmp olt float %67, 1.000000e+00
  %79 = select i1 %78, float 1.000000e+00, float %67
  %80 = fmul float %49, %79
  br label %88

81:                                               ; preds = %53
  %82 = and i8 %61, 3
  %83 = icmp eq i8 %82, 2
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = fpext float %49 to double
  %86 = fmul double %85, 0x3FF6A09E667F3BCD
  %87 = fptrunc double %86 to float
  br label %88

88:                                               ; preds = %84, %81, %77, %73, %48
  %89 = phi float [ %49, %48 ], [ %87, %84 ], [ %49, %81 ], [ %76, %73 ], [ %80, %77 ]
  %90 = extractelement <2 x float> %22, i32 0
  %91 = fsub float %90, %89
  %92 = insertelement <2 x float> undef, float %91, i32 0
  %93 = extractelement <2 x float> %25, i32 0
  %94 = fadd float %93, %89
  %95 = fadd float %89, %94
  %96 = insertelement <2 x float> undef, float %95, i32 0
  %97 = extractelement <2 x float> %22, i32 1
  %98 = fsub float %97, %89
  %99 = insertelement <2 x float> %92, float %98, i32 1
  %100 = extractelement <2 x float> %25, i32 1
  %101 = fadd float %100, %89
  %102 = fadd float %89, %101
  %103 = insertelement <2 x float> %96, float %102, i32 1
  br label %104

104:                                              ; preds = %88, %37, %12
  %105 = phi <2 x float> [ %15, %12 ], [ %99, %88 ], [ %22, %37 ]
  %106 = phi <2 x float> [ %18, %12 ], [ %103, %88 ], [ %25, %37 ]
  %107 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %105, 0
  %108 = insertvalue { <2 x float>, <2 x float> } %107, <2 x float> %106, 1
  ret { <2 x float>, <2 x float> } %108
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutSVGShape28ShapeDependentStrokeContainsERKNS_15HitTestLocationE(%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = alloca %"class.blink::StrokeData", align 8
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %"class.blink::AffineTransform", align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::FloatPoint"*
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.615"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Path"*, %"class.blink::Path"** %13, align 8
  %15 = icmp eq %"class.blink::Path"* %14, null
  br i1 %15, label %16, label %138

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Path"*, %"class.blink::Path"** %17, align 8
  %19 = icmp eq %"class.blink::Path"* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @_ZN5blink14LayoutSVGShape10CreatePathEv(%"class.blink::LayoutSVGShape"* %0)
  br label %21

21:                                               ; preds = %16, %20
  %22 = bitcast %"class.blink::StrokeData"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast ({ i32, float, i32, i32, float, [4 x i8], %class.sk_sp.1250 }* @__const._ZN5blink14LayoutSVGShape28ShapeDependentStrokeContainsERKNS_15HitTestLocationE.stroke_data to i8*), i64 24, i1 false)
  %23 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %4, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %24, align 4
  %25 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %4, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %4, i64 0, i32 3
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %4, i64 0, i32 4
  store float 4.000000e+00, float* %27, align 8
  %28 = getelementptr inbounds %"class.blink::StrokeData", %"class.blink::StrokeData"* %4, i64 0, i32 5, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %28, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 4, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %32, i64 0, i32 5, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %34, i64 0, i32 2, i32 0
  %36 = load %"class.base::RefCountedData.648"*, %"class.base::RefCountedData.648"** %35, align 8
  %37 = getelementptr inbounds %"class.base::RefCountedData.648", %"class.base::RefCountedData.648"* %36, i64 0, i32 1, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %21
  %41 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = and i96 %43, 16777216
  %45 = icmp eq i96 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %48 = bitcast %"class.blink::Node"** %47 to %"class.blink::SVGGeometryElement"**
  %49 = load %"class.blink::SVGGeometryElement"*, %"class.blink::SVGGeometryElement"** %48, align 8
  br label %50

50:                                               ; preds = %46, %40
  %51 = phi %"class.blink::SVGGeometryElement"* [ %49, %46 ], [ null, %40 ]
  %52 = tail call float @_ZNK5blink18SVGGeometryElement21PathLengthScaleFactorEv(%"class.blink::SVGGeometryElement"* %51) #9
  br label %53

53:                                               ; preds = %21, %50
  %54 = phi float [ %52, %50 ], [ 1.000000e+00, %21 ]
  call void @_ZN5blink16SVGLayoutSupport28ApplyStrokeStyleToStrokeDataERNS_10StrokeDataERKNS_13ComputedStyleERKNS_12LayoutObjectEf(%"class.blink::StrokeData"* nonnull dereferenceable(32) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %30, %"class.blink::LayoutObject"* dereferenceable(88) %11, float %54) #9
  %55 = bitcast %"class.blink::ComputedStyle"** %29 to %"class.blink::ComputedStyleBase"**
  %56 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %56, i64 0, i32 4, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %58, i64 0, i32 9
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 67108864
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %65 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %64, align 8
  %66 = icmp eq %"struct.blink::LayoutSVGShapeRareData"* %65, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  call void @_ZN5blink14LayoutSVGShape26UpdateNonScalingStrokeDataEv(%"class.blink::LayoutSVGShape"* %0)
  br label %68

68:                                               ; preds = %63, %67
  %69 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69) #9
  %70 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -1, i64 48, i1 false)
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %5) #9
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %55, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %75, i64 0, i32 6
  %77 = load float, float* %76, align 8
  %78 = fpext float %77 to double
  %79 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %5, double %78) #9
  %80 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %64, align 8
  %81 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %80, i64 0, i32 1
  %82 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %79, %"class.blink::AffineTransform"* dereferenceable(48) %81) #9
  %83 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  %84 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %64, align 8
  %85 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %84, i64 0, i32 0
  call void @_ZNK5blink4Path10StrokePathERKNS_10StrokeDataERKNS_15AffineTransformE(%class.SkPath* nonnull sret %6, %"class.blink::Path"* %85, %"class.blink::StrokeData"* nonnull dereferenceable(32) %4, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %5) #9
  %86 = call noalias i8* @malloc(i64 16) #9
  %87 = bitcast i8* %86 to %"class.blink::Path"*
  call void @_ZN5blink4PathC1ERK6SkPath(%"class.blink::Path"* %87, %class.SkPath* nonnull dereferenceable(16) %6) #9
  %88 = ptrtoint i8* %86 to i64
  %89 = load %"class.blink::Path"*, %"class.blink::Path"** %13, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.615"* %12 to i64*
  store i64 %88, i64* %90, align 8
  %91 = icmp eq %"class.blink::Path"* %89, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %68
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %89) #9
  %93 = bitcast %"class.blink::Path"* %89 to i8*
  call void @free(i8* %93) #9
  br label %94

94:                                               ; preds = %92, %68
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69) #9
  br label %124

95:                                               ; preds = %53
  %96 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #9
  %97 = load %"class.blink::Path"*, %"class.blink::Path"** %17, align 8
  %98 = bitcast %"class.blink::AffineTransform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %98) #9
  %99 = icmp eq %"class.blink::LayoutSVGShape"* %0, null
  br i1 %99, label %111, label %100

100:                                              ; preds = %95, %107
  %101 = phi %"class.blink::LayoutObject"* [ %109, %107 ], [ %11, %95 ]
  %102 = bitcast %"class.blink::LayoutObject"* %101 to i1 (%"class.blink::LayoutObject"*, i32)***
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, i64 92
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, align 8
  %106 = call zeroext i1 %105(%"class.blink::LayoutObject"* nonnull %101, i32 67) #9
  br i1 %106, label %111, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %101, i64 0, i32 7
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = icmp eq %"class.blink::LayoutObject"* %109, null
  br i1 %110, label %111, label %100

111:                                              ; preds = %100, %107, %95
  %112 = phi %"class.blink::LayoutObject"* [ %11, %95 ], [ null, %107 ], [ %101, %100 ]
  %113 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %113) #9, !noalias !3
  %114 = bitcast %"class.blink::LayoutObject"* %112 to %"class.blink::LayoutBoxModelObject"*
  call void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* nonnull sret %3, %"class.blink::LayoutObject"* %11, %"class.blink::LayoutBoxModelObject"* %114, i32 0) #9, !noalias !3
  call void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* nonnull sret %8, %"class.blink::TransformationMatrix"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %113) #9, !noalias !3
  call void @_ZNK5blink4Path10StrokePathERKNS_10StrokeDataERKNS_15AffineTransformE(%class.SkPath* nonnull sret %7, %"class.blink::Path"* %97, %"class.blink::StrokeData"* nonnull dereferenceable(32) %4, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %8) #9
  %115 = call noalias i8* @malloc(i64 16) #9
  %116 = bitcast i8* %115 to %"class.blink::Path"*
  call void @_ZN5blink4PathC1ERK6SkPath(%"class.blink::Path"* %116, %class.SkPath* nonnull dereferenceable(16) %7) #9
  %117 = ptrtoint i8* %115 to i64
  %118 = load %"class.blink::Path"*, %"class.blink::Path"** %13, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.615"* %12 to i64*
  store i64 %117, i64* %119, align 8
  %120 = icmp eq %"class.blink::Path"* %118, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %111
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %118) #9
  %122 = bitcast %"class.blink::Path"* %118 to i8*
  call void @free(i8* %122) #9
  br label %123

123:                                              ; preds = %121, %111
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #9
  br label %124

124:                                              ; preds = %123, %94
  %125 = load %class.SkPathEffect*, %class.SkPathEffect** %28, align 8
  %126 = icmp eq %class.SkPathEffect* %125, null
  br i1 %126, label %137, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %125, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 -1 acq_rel
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = bitcast %class.SkPathEffect* %125 to %class.SkRefCntBase*
  %133 = bitcast %class.SkPathEffect* %125 to void (%class.SkRefCntBase*)***
  %134 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %133, align 8
  %135 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %134, i64 2
  %136 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, align 8
  call void %136(%class.SkRefCntBase* nonnull %132) #9
  br label %137

137:                                              ; preds = %124, %127, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #9
  br label %138

138:                                              ; preds = %2, %137
  %139 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #9
  %140 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %141 = bitcast %"class.blink::FloatPoint"* %140 to i64*
  %142 = load i64, i64* %141, align 4
  store i64 %142, i64* %9, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %144 = bitcast %"class.blink::ComputedStyle"** %143 to %"class.blink::ComputedStyleBase"**
  %145 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %145, i64 0, i32 4, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %147, i64 0, i32 9
  %149 = load i32, i32* %148, align 8
  %150 = and i32 %149, 67108864
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %158, label %152

152:                                              ; preds = %138
  %153 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %154 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %153, align 8
  %155 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %154, i64 0, i32 1
  %156 = call <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"* %155, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %10) #9
  %157 = bitcast i64* %9 to <2 x float>*
  store <2 x float> %156, <2 x float>* %157, align 8
  br label %158

158:                                              ; preds = %138, %152
  %159 = load %"class.blink::Path"*, %"class.blink::Path"** %13, align 8
  %160 = call zeroext i1 @_ZNK5blink4Path8ContainsERKNS_10FloatPointE(%"class.blink::Path"* %159, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #9
  ret i1 %160
}

declare void @_ZN5blink16SVGLayoutSupport28ApplyStrokeStyleToStrokeDataERNS_10StrokeDataERKNS_13ComputedStyleERKNS_12LayoutObjectEf(%"class.blink::StrokeData"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"* dereferenceable(88), float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZNK5blink4Path10StrokePathERKNS_10StrokeDataERKNS_15AffineTransformE(%class.SkPath* sret, %"class.blink::Path"*, %"class.blink::StrokeData"* dereferenceable(32), %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutSVGShape20ComputeRootTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutSVGShape"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %1, i64 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::LayoutSVGShape"* %1, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %13
  %7 = phi %"class.blink::LayoutObject"* [ %15, %13 ], [ %4, %2 ]
  %8 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* nonnull %7, i32 67) #9
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  br i1 %16, label %17, label %6

17:                                               ; preds = %13, %6, %2
  %18 = phi %"class.blink::LayoutObject"* [ %4, %2 ], [ %7, %6 ], [ null, %13 ]
  %19 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %19) #9
  %20 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutBoxModelObject"*
  call void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* nonnull sret %3, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutBoxModelObject"* %20, i32 0) #9
  call void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* sret %0, %"class.blink::TransformationMatrix"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %19) #9
  ret void
}

declare <2 x float> @_ZNK5blink15AffineTransform8MapPointERKNS_10FloatPointE(%"class.blink::AffineTransform"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Path8ContainsERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14LayoutSVGShape26ShapeDependentFillContainsERKNS_15HitTestLocationENS_8WindRuleE(%"class.blink::LayoutSVGShape"* nocapture readonly, %"class.blink::HitTestLocation"* dereferenceable(72), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Path"*, %"class.blink::Path"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %7 = tail call zeroext i1 @_ZNK5blink4Path8ContainsERKNS_10FloatPointENS_8WindRuleE(%"class.blink::Path"* %5, %"class.blink::FloatPoint"* dereferenceable(8) %6, i32 %2) #9
  ret i1 %7
}

declare zeroext i1 @_ZNK5blink4Path8ContainsERKNS_10FloatPointENS_8WindRuleE(%"class.blink::Path"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutSVGShape12FillContainsERKNS_15HitTestLocationEbNS_8WindRuleE(%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"* dereferenceable(72), i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* %6, %"class.blink::FloatPoint"* dereferenceable(8) %7, i32 0) #9
  br i1 %8, label %9, label %49

9:                                                ; preds = %4
  br i1 %2, label %10, label %43

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %15, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %17, i64 0, i32 2, i32 2
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %20 [
    i32 3, label %43
    i32 0, label %43
  ]

20:                                               ; preds = %10
  %21 = icmp sgt i32 %19, 1
  br i1 %21, label %22, label %49

22:                                               ; preds = %20
  %23 = tail call %"class.blink::SVGElementResourceClient"* @_ZN5blink12SVGResources9GetClientERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %5) #9
  %24 = getelementptr inbounds %"class.blink::SVGElementResourceClient", %"class.blink::SVGElementResourceClient"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %17, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %25, align 8
  %27 = icmp eq %"class.blink::StyleSVGResource"* %26, null
  br i1 %27, label %49, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %26, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.blink::SVGResource"*, %"class.blink::SVGResource"** %29, align 8
  %31 = icmp eq %"class.blink::SVGResource"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %28
  %33 = tail call %"class.blink::LayoutSVGResourceContainer"* @_ZNK5blink11SVGResource17ResourceContainerERNS_17SVGResourceClientE(%"class.blink::SVGResource"* nonnull %30, %"class.blink::SVGResourceClient"* dereferenceable(8) %24) #9
  %34 = icmp eq %"class.blink::LayoutSVGResourceContainer"* %33, null
  br i1 %34, label %49, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::LayoutSVGResourceContainer"* %33 to i32 (%"class.blink::LayoutSVGResourceContainer"*)***
  %37 = load i32 (%"class.blink::LayoutSVGResourceContainer"*)**, i32 (%"class.blink::LayoutSVGResourceContainer"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::LayoutSVGResourceContainer"*)*, i32 (%"class.blink::LayoutSVGResourceContainer"*)** %37, i64 110
  %39 = load i32 (%"class.blink::LayoutSVGResourceContainer"*)*, i32 (%"class.blink::LayoutSVGResourceContainer"*)** %38, align 8
  %40 = tail call i32 %39(%"class.blink::LayoutSVGResourceContainer"* nonnull %33) #9
  %41 = add i32 %40, -2
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %43, label %49

43:                                               ; preds = %35, %10, %10, %9
  %44 = bitcast %"class.blink::LayoutSVGShape"* %0 to i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)***
  %45 = load i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)**, i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)*, i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)** %45, i64 113
  %47 = load i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)*, i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutSVGShape"* %0, %"class.blink::HitTestLocation"* dereferenceable(72) %1, i32 %3) #9
  br label %49

49:                                               ; preds = %35, %32, %28, %22, %20, %4, %43
  %50 = phi i1 [ %48, %43 ], [ false, %4 ], [ false, %20 ], [ false, %22 ], [ false, %28 ], [ false, %32 ], [ false, %35 ]
  ret i1 %50
}

declare zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutSVGShape14StrokeContainsERKNS_15HitTestLocationEb(%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.blink::FloatRect"*
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %13, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %15, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %15, i64 0, i32 6, i32 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %32, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %15, i64 0, i32 6, i32 0, i32 3
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::UnzoomedLength"* %16 to float*
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %26, 0.000000e+00
  br i1 %27, label %86, label %32

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::UnzoomedLength", %"class.blink::UnzoomedLength"* %16, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %86, label %32

32:                                               ; preds = %3, %24, %28
  br i1 %2, label %33, label %71

33:                                               ; preds = %32
  %34 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2
  %36 = bitcast %"class.blink::FloatRect"* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  store <2 x i64> %37, <2 x i64>* %4, align 16
  %38 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %39 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* nonnull %5, %"class.blink::FloatPoint"* dereferenceable(8) %38, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br i1 %39, label %40, label %86

40:                                               ; preds = %33
  %41 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %41, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %43, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %45, i64 0, i32 4, i32 2
  %47 = load i32, i32* %46, align 8
  switch i32 %47, label %48 [
    i32 3, label %80
    i32 0, label %80
  ]

48:                                               ; preds = %40
  %49 = icmp sgt i32 %47, 1
  br i1 %49, label %50, label %86

50:                                               ; preds = %48
  %51 = call %"class.blink::SVGElementResourceClient"* @_ZN5blink12SVGResources9GetClientERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %8) #9
  %52 = getelementptr inbounds %"class.blink::SVGElementResourceClient", %"class.blink::SVGElementResourceClient"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %45, i64 0, i32 4, i32 0, i32 0
  %54 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %53, align 8
  %55 = icmp eq %"class.blink::StyleSVGResource"* %54, null
  br i1 %55, label %86, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %54, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::SVGResource"*, %"class.blink::SVGResource"** %57, align 8
  %59 = icmp eq %"class.blink::SVGResource"* %58, null
  br i1 %59, label %86, label %60

60:                                               ; preds = %56
  %61 = call %"class.blink::LayoutSVGResourceContainer"* @_ZNK5blink11SVGResource17ResourceContainerERNS_17SVGResourceClientE(%"class.blink::SVGResource"* nonnull %58, %"class.blink::SVGResourceClient"* dereferenceable(8) %52) #9
  %62 = icmp eq %"class.blink::LayoutSVGResourceContainer"* %61, null
  br i1 %62, label %86, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::LayoutSVGResourceContainer"* %61 to i32 (%"class.blink::LayoutSVGResourceContainer"*)***
  %65 = load i32 (%"class.blink::LayoutSVGResourceContainer"*)**, i32 (%"class.blink::LayoutSVGResourceContainer"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::LayoutSVGResourceContainer"*)*, i32 (%"class.blink::LayoutSVGResourceContainer"*)** %65, i64 110
  %67 = load i32 (%"class.blink::LayoutSVGResourceContainer"*)*, i32 (%"class.blink::LayoutSVGResourceContainer"*)** %66, align 8
  %68 = call i32 %67(%"class.blink::LayoutSVGResourceContainer"* nonnull %61) #9
  %69 = add i32 %68, -2
  %70 = icmp ult i32 %69, 3
  br i1 %70, label %80, label %86

71:                                               ; preds = %32
  %72 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = tail call { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape24HitTestStrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"* %0)
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %75 = extractvalue { <2 x float>, <2 x float> } %73, 0
  store <2 x float> %75, <2 x float>* %74, align 8
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %77 = extractvalue { <2 x float>, <2 x float> } %73, 1
  store <2 x float> %77, <2 x float>* %76, align 8
  %78 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %79 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* nonnull %7, %"class.blink::FloatPoint"* dereferenceable(8) %78, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  br i1 %79, label %80, label %86

80:                                               ; preds = %63, %40, %40, %71
  %81 = bitcast %"class.blink::LayoutSVGShape"* %0 to i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)***
  %82 = load i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)**, i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)*, i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)** %82, i64 112
  %84 = load i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)*, i1 (%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestLocation"*)** %83, align 8
  %85 = call zeroext i1 %84(%"class.blink::LayoutSVGShape"* %0, %"class.blink::HitTestLocation"* dereferenceable(72) %1) #9
  br label %86

86:                                               ; preds = %63, %60, %56, %50, %48, %24, %71, %33, %28, %80
  %87 = phi i1 [ %85, %80 ], [ false, %28 ], [ false, %33 ], [ false, %71 ], [ false, %24 ], [ false, %48 ], [ false, %50 ], [ false, %56 ], [ false, %60 ], [ false, %63 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape17StrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 2, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 8
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutSVGShape12UpdateLayoutEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = alloca %"class.blink::SVGResourceInvalidator", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %5) #9
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Path"*, %"class.blink::Path"** %8, align 8
  store %"class.blink::Path"* null, %"class.blink::Path"** %8, align 8
  %10 = icmp eq %"class.blink::Path"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %9) #9
  %12 = bitcast %"class.blink::Path"* %9 to i8*
  call void @free(i8* %12) #9
  br label %13

13:                                               ; preds = %1, %11
  %14 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 8
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = bitcast %"class.blink::ComputedStyle"** %19 to %"class.blink::ComputedStyleBase"**
  %21 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %21, i64 0, i32 4, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %23, i64 0, i32 9
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 67108864
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %61, label %28

28:                                               ; preds = %18, %13
  %29 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %30 = bitcast %"class.blink::FloatRect"* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1, i32 1
  %33 = bitcast %"class.blink::FloatSize"* %32 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 8
  %35 = bitcast %"class.blink::LayoutSVGShape"* %0 to void (%"class.blink::LayoutSVGShape"*)***
  %36 = load void (%"class.blink::LayoutSVGShape"*)**, void (%"class.blink::LayoutSVGShape"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::LayoutSVGShape"*)*, void (%"class.blink::LayoutSVGShape"*)** %36, i64 111
  %38 = load void (%"class.blink::LayoutSVGShape"*)*, void (%"class.blink::LayoutSVGShape"*)** %37, align 8
  call void %38(%"class.blink::LayoutSVGShape"* %0) #9
  %39 = load <2 x float>, <2 x float>* %30, align 8
  %40 = load <2 x float>, <2 x float>* %33, align 8
  %41 = extractelement <2 x float> %31, i32 0
  %42 = extractelement <2 x float> %39, i32 0
  %43 = fcmp oeq float %41, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %28
  %45 = extractelement <2 x float> %31, i32 1
  %46 = extractelement <2 x float> %39, i32 1
  %47 = fcmp oeq float %45, %46
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = extractelement <2 x float> %34, i32 0
  %50 = extractelement <2 x float> %40, i32 0
  %51 = fcmp oeq float %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = extractelement <2 x float> %34, i32 1
  %54 = extractelement <2 x float> %40, i32 1
  %55 = fcmp une float %53, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %28, %48, %44, %52
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %5, i8 zeroext 3) #9
  br label %57

57:                                               ; preds = %56, %52
  %58 = phi i8 [ 1, %56 ], [ 0, %52 ]
  %59 = load i8, i8* %14, align 1
  %60 = and i8 %59, -4
  store i8 %60, i8* %14, align 1
  br label %61

61:                                               ; preds = %18, %57
  %62 = phi i8 [ %60, %57 ], [ %15, %18 ]
  %63 = phi i1 [ true, %57 ], [ false, %18 ]
  %64 = phi i8 [ %58, %57 ], [ 0, %18 ]
  %65 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = and i96 %67, 274877906944
  %69 = icmp eq i96 %68, 0
  %70 = and i8 %64, 1
  %71 = icmp eq i8 %70, 0
  %72 = or i1 %71, %69
  br i1 %72, label %77, label %73

73:                                               ; preds = %61
  %74 = bitcast %"class.blink::SVGResourceInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  %75 = getelementptr inbounds %"class.blink::SVGResourceInvalidator", %"class.blink::SVGResourceInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %75, align 8
  call void @_ZN5blink22SVGResourceInvalidatorC1ERNS_12LayoutObjectE(%"class.blink::SVGResourceInvalidator"* nonnull %3, %"class.blink::LayoutObject"* dereferenceable(88) %5) #9
  call void @_ZN5blink22SVGResourceInvalidator17InvalidateEffectsEv(%"class.blink::SVGResourceInvalidator"* nonnull %3) #9
  call void @_ZN5blink22SVGResourceInvalidator16InvalidatePaintsEv(%"class.blink::SVGResourceInvalidator"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  %76 = load i8, i8* %14, align 1
  br label %77

77:                                               ; preds = %61, %73
  %78 = phi i8 [ %62, %61 ], [ %76, %73 ]
  %79 = and i8 %78, 12
  %80 = icmp eq i8 %79, 8
  br i1 %80, label %81, label %92

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0
  %83 = icmp ne i8 %70, 0
  %84 = call zeroext i1 @_ZNK5blink20LayoutSVGModelObject31CheckForImplicitTransformChangeEb(%"class.blink::LayoutSVGModelObject"* %82, i1 zeroext %83) #9
  %85 = zext i1 %84 to i8
  %86 = load i8, i8* %14, align 1
  %87 = shl nuw nsw i8 %85, 2
  %88 = and i8 %86, -5
  %89 = or i8 %88, %87
  store i8 %89, i8* %14, align 1
  br i1 %84, label %90, label %92

90:                                               ; preds = %81
  call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %5) #9
  %91 = load i8, i8* %14, align 1
  br label %92

92:                                               ; preds = %77, %81, %90
  %93 = phi i8 [ %78, %77 ], [ %89, %81 ], [ %91, %90 ]
  %94 = and i8 %93, 4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %97) #9
  %98 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0
  call void @_ZNK5blink20LayoutSVGModelObject23CalculateLocalTransformEv(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::LayoutSVGModelObject"* %98) #9
  %99 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 3
  %100 = bitcast %"class.blink::AffineTransform"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %97, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %97) #9
  %101 = load i8, i8* %14, align 1
  %102 = and i8 %101, -5
  store i8 %102, i8* %14, align 1
  br label %104

103:                                              ; preds = %92
  br i1 %63, label %104, label %105

104:                                              ; preds = %96, %103
  call void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"* %5) #9
  br label %105

105:                                              ; preds = %104, %103
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %5)
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape17ObjectBoundingBoxEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 8
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink22SVGResourceInvalidatorC1ERNS_12LayoutObjectE(%"class.blink::SVGResourceInvalidator"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #1

declare void @_ZN5blink22SVGResourceInvalidator17InvalidateEffectsEv(%"class.blink::SVGResourceInvalidator"*) local_unnamed_addr #1

declare void @_ZN5blink22SVGResourceInvalidator16InvalidatePaintsEv(%"class.blink::SVGResourceInvalidator"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutSVGModelObject31CheckForImplicitTransformChangeEb(%"class.blink::LayoutSVGModelObject"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !6

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #9
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #9
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !6

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #9
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #2

declare void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* sret, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutSVGShape32ComputeNonScalingStrokeTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutSVGShape"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::TransformationMatrix", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::AffineTransform", %"class.blink::AffineTransform"* %0, i64 0, i32 0, i64 4
  %7 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -1, i64 48, i1 false)
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %0) #9
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %14, i64 0, i32 6
  %16 = load float, float* %15, align 8
  %17 = fdiv float 1.000000e+00, %16
  %18 = fpext float %17 to double
  %19 = tail call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* %0, double %18) #9
  %20 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #9
  %21 = icmp eq %"class.blink::LayoutSVGShape"* %1, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %2, %29
  %23 = phi %"class.blink::LayoutObject"* [ %31, %29 ], [ %5, %2 ]
  %24 = bitcast %"class.blink::LayoutObject"* %23 to i1 (%"class.blink::LayoutObject"*, i32)***
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, i64 92
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* nonnull %23, i32 67) #9
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %33, label %22

33:                                               ; preds = %22, %29, %2
  %34 = phi %"class.blink::LayoutObject"* [ %5, %2 ], [ null, %29 ], [ %23, %22 ]
  %35 = bitcast %"class.blink::TransformationMatrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35) #9, !noalias !7
  %36 = bitcast %"class.blink::LayoutObject"* %34 to %"class.blink::LayoutBoxModelObject"*
  call void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* nonnull sret %3, %"class.blink::LayoutObject"* %5, %"class.blink::LayoutBoxModelObject"* %36, i32 0) #9, !noalias !7
  call void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::TransformationMatrix"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35) #9, !noalias !7
  %37 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %19, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #9
  %38 = bitcast double* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"struct.blink::LayoutSVGShapeRareData"* @_ZNK5blink14LayoutSVGShape14EnsureRareDataEv(%"class.blink::LayoutSVGShape"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.846", %"class.std::__1::unique_ptr.846"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %3, align 8
  %5 = icmp eq %"struct.blink::LayoutSVGShapeRareData"* %4, null
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = tail call noalias i8* @malloc(i64 64) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 64, i1 false) #9
  %8 = bitcast i8* %7 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %8) #9
  %9 = getelementptr inbounds i8, i8* %7, i64 16
  %10 = bitcast i8* %9 to %"class.blink::AffineTransform"*
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %10) #9
  %11 = ptrtoint i8* %7 to i64
  %12 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %3, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.846"* %2 to i64*
  store i64 %11, i64* %13, align 8
  %14 = icmp eq %"struct.blink::LayoutSVGShapeRareData"* %12, null
  %15 = bitcast i8* %7 to %"struct.blink::LayoutSVGShapeRareData"*
  br i1 %14, label %20, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %12, i64 0, i32 0
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %17) #9
  %18 = bitcast %"struct.blink::LayoutSVGShapeRareData"* %12 to i8*
  tail call void @free(i8* %18) #9
  %19 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %3, align 8
  br label %20

20:                                               ; preds = %1, %6, %16
  %21 = phi %"struct.blink::LayoutSVGShapeRareData"* [ %4, %1 ], [ %15, %6 ], [ %19, %16 ]
  ret %"struct.blink::LayoutSVGShapeRareData"* %21
}

declare void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutSVGShape5PaintERKNS_9PaintInfoE(%"class.blink::LayoutSVGShape"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SVGShapePainter", align 8
  %4 = bitcast %"class.blink::SVGShapePainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.blink::SVGShapePainter", %"class.blink::SVGShapePainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutSVGShape"* %0, %"class.blink::LayoutSVGShape"** %5, align 8
  call void @_ZN5blink15SVGShapePainter5PaintERKNS_9PaintInfoE(%"class.blink::SVGShapePainter"* nonnull %3, %"struct.blink::PaintInfo"* %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

declare void @_ZN5blink15SVGShapePainter5PaintERKNS_9PaintInfoE(%"class.blink::SVGShapePainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutSVGShape11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readnone dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"class.blink::PointerEventsHitRules"*
  %8 = alloca %"class.blink::TransformedHitTestLocation", align 8
  %9 = alloca %"class.blink::AffineTransform", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.blink::PhysicalOffset"*
  %12 = alloca %"struct.blink::PhysicalRect", align 4
  %13 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0
  %14 = icmp eq i32 %4, 4
  br i1 %14, label %15, label %112

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::LayoutSVGShape"* %0 to i1 (%"class.blink::LayoutSVGShape"*)***
  %17 = load i1 (%"class.blink::LayoutSVGShape"*)**, i1 (%"class.blink::LayoutSVGShape"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutSVGShape"*)*, i1 (%"class.blink::LayoutSVGShape"*)** %17, i64 107
  %19 = load i1 (%"class.blink::LayoutSVGShape"*)*, i1 (%"class.blink::LayoutSVGShape"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutSVGShape"* %0) #9
  br i1 %20, label %112, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %24 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %23, align 8
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %24, i64 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  store i32 -1431655766, i32* %6, align 4
  %29 = load i160, i160* %28, align 8
  %30 = lshr i160 %29, 50
  %31 = trunc i160 %30 to i32
  %32 = and i32 %31, 15
  call void @_ZN5blink21PointerEventsHitRulesC1ENS0_11EHitTestingERKNS_14HitTestRequestENS_14EPointerEventsE(%"class.blink::PointerEventsHitRules"* nonnull %7, i32 1, %"class.blink::HitTestRequest"* dereferenceable(16) %26, i32 %32) #9
  %33 = load i8, i8* %25, align 4
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %21
  %37 = load i160, i160* %28, align 8
  %38 = and i160 %37, 3802951800684688204490109616128
  %39 = icmp eq i160 %38, 1267650600228229401496703205376
  br i1 %39, label %40, label %110

40:                                               ; preds = %36, %21
  %41 = getelementptr inbounds %"class.blink::TransformedHitTestLocation", %"class.blink::TransformedHitTestLocation"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %41) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 getelementptr inbounds ({ %"class.absl::optional.1317", [4 x i8], %"class.blink::HitTestLocation"* }, { %"class.absl::optional.1317", [4 x i8], %"class.blink::HitTestLocation"* }* @__const._ZN5blink14LayoutSVGShape11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE.local_location, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 88, i1 false)
  %42 = bitcast %"class.blink::AffineTransform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %42) #9
  %43 = bitcast %"class.blink::LayoutSVGShape"* %0 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %44 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %44, i64 42
  %46 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %45, align 8
  call void %46(%"class.blink::AffineTransform"* nonnull sret %9, %"class.blink::LayoutObject"* %13) #9
  call void @_ZN5blink26TransformedHitTestLocationC1ERKNS_15HitTestLocationERKNS_15AffineTransformE(%"class.blink::TransformedHitTestLocation"* nonnull %8, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %42) #9
  %47 = getelementptr inbounds %"class.blink::TransformedHitTestLocation", %"class.blink::TransformedHitTestLocation"* %8, i64 0, i32 1
  %48 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %47, align 8
  %49 = icmp eq %"class.blink::HitTestLocation"* %48, null
  br i1 %49, label %108, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %52 = call zeroext i1 @_ZN5blink16SVGLayoutSupport18IntersectsClipPathERKNS_12LayoutObjectERKNS_9FloatRectERKNS_15HitTestLocationE(%"class.blink::LayoutObject"* dereferenceable(88) %13, %"class.blink::FloatRect"* dereferenceable(16) %51, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %48) #9
  br i1 %52, label %53, label %108

53:                                               ; preds = %50
  %54 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %47, align 8
  %55 = load i32, i32* %6, align 4
  %56 = call zeroext i1 @_ZN5blink14LayoutSVGShape12HitTestShapeERKNS_14HitTestRequestERKNS_15HitTestLocationENS_21PointerEventsHitRulesE(%"class.blink::LayoutSVGShape"* %0, %"class.blink::HitTestRequest"* dereferenceable(16) %26, %"class.blink::HitTestLocation"* dereferenceable(72) %54, i32 %55)
  br i1 %56, label %57, label %107

57:                                               ; preds = %53
  %58 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  %59 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %47, align 8
  %60 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %59, i64 0, i32 2, i32 0
  %61 = load float, float* %60, align 4
  %62 = fmul float %61, 6.400000e+01
  %63 = call float @llvm.round.f32(float %62) #9
  %64 = fcmp ult float %63, 0xC1E0000000000000
  %65 = fcmp ugt float %63, 0x41DFFFFFE0000000
  %66 = fcmp ogt float %63, 0xC1E0000000000000
  %67 = select i1 %66, float %63, float 0xC1E0000000000000
  %68 = fptosi float %67 to i32
  %69 = select i1 %64, i32 0, i32 2147483647
  %70 = select i1 %65, i32 %69, i32 %68
  %71 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %59, i64 0, i32 2, i32 1
  %72 = load float, float* %71, align 4
  %73 = fmul float %72, 6.400000e+01
  %74 = call float @llvm.round.f32(float %73) #9
  %75 = fcmp ult float %74, 0xC1E0000000000000
  %76 = fcmp ugt float %74, 0x41DFFFFFE0000000
  %77 = fcmp ogt float %74, 0xC1E0000000000000
  %78 = select i1 %77, float %74, float 0xC1E0000000000000
  %79 = fptosi float %78 to i32
  %80 = select i1 %75, i32 0, i32 2147483647
  %81 = select i1 %76, i32 %80, i32 %79
  %82 = zext i32 %81 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %70 to i64
  %85 = or i64 %83, %84
  store i64 %85, i64* %10, align 8
  %86 = bitcast %"class.blink::LayoutSVGShape"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %87 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %87, i64 62
  %89 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %88, align 8
  call void %89(%"class.blink::LayoutObject"* %13, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #9
  %90 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %91 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %90 to i96*
  %92 = load i96, i96* %91, align 4
  %93 = and i96 %92, 16777216
  %94 = icmp eq i96 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %57
  %96 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %97 = bitcast %"class.blink::Node"** %96 to %"class.blink::SVGElement"**
  %98 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %97, align 8
  br label %99

99:                                               ; preds = %57, %95
  %100 = phi %"class.blink::SVGElement"* [ %98, %95 ], [ null, %57 ]
  %101 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"** %47, align 8
  %103 = bitcast %"struct.blink::PhysicalRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #9
  %104 = bitcast %"struct.blink::PhysicalRect"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %104, i8 0, i64 16, i1 false)
  %105 = call i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %101, %"class.blink::HitTestLocation"* dereferenceable(72) %102, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12) #9
  %106 = icmp eq i32 %105, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #9
  br i1 %106, label %108, label %107

107:                                              ; preds = %99, %53
  br label %108

108:                                              ; preds = %40, %99, %50, %107
  %109 = phi i1 [ false, %107 ], [ false, %40 ], [ false, %50 ], [ true, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %41) #9
  br label %110

110:                                              ; preds = %36, %108
  %111 = phi i1 [ %109, %108 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  br label %112

112:                                              ; preds = %15, %5, %110
  %113 = phi i1 [ %111, %110 ], [ false, %5 ], [ false, %15 ]
  ret i1 %113
}

declare void @_ZN5blink21PointerEventsHitRulesC1ENS0_11EHitTestingERKNS_14HitTestRequestENS_14EPointerEventsE(%"class.blink::PointerEventsHitRules"*, i32, %"class.blink::HitTestRequest"* dereferenceable(16), i32) unnamed_addr #1

declare void @_ZN5blink26TransformedHitTestLocationC1ERKNS_15HitTestLocationERKNS_15AffineTransformE(%"class.blink::TransformedHitTestLocation"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"class.blink::AffineTransform"* dereferenceable(48)) unnamed_addr #1

declare zeroext i1 @_ZN5blink16SVGLayoutSupport18IntersectsClipPathERKNS_12LayoutObjectERKNS_9FloatRectERKNS_15HitTestLocationE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::HitTestLocation"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutSVGShape12HitTestShapeERKNS_14HitTestRequestERKNS_15HitTestLocationENS_21PointerEventsHitRulesE(%"class.blink::LayoutSVGShape"*, %"class.blink::HitTestRequest"* nocapture readonly dereferenceable(16), %"class.blink::HitTestLocation"* dereferenceable(72), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = and i32 %3, 32
  %7 = icmp eq i32 %6, 0
  %8 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  br i1 %7, label %15, label %9

9:                                                ; preds = %4
  %10 = bitcast <2 x i64>* %5 to %"class.blink::FloatRect"*
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %12 = bitcast %"class.blink::FloatRect"* %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  store <2 x i64> %13, <2 x i64>* %5, align 16
  %14 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_9FloatRectE(%"class.blink::HitTestLocation"* %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br i1 %14, label %62, label %16

15:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br label %16

16:                                               ; preds = %15, %9
  %17 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 4, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %23, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %25, i64 0, i32 4, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 1
  %29 = and i32 %3, 4
  %30 = icmp eq i32 %29, 0
  %31 = or i1 %30, %28
  br i1 %31, label %32, label %35

32:                                               ; preds = %21
  %33 = icmp ne i32 %29, 0
  %34 = call zeroext i1 @_ZN5blink14LayoutSVGShape14StrokeContainsERKNS_15HitTestLocationEb(%"class.blink::LayoutSVGShape"* %0, %"class.blink::HitTestLocation"* dereferenceable(72) %2, i1 zeroext %33)
  br i1 %34, label %62, label %35

35:                                               ; preds = %21, %16, %32
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 4, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %37, i64 0, i32 9
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 64
  %43 = icmp eq i32 %42, 0
  %44 = select i1 %43, i32 24, i32 23
  %45 = lshr i32 %39, %44
  %46 = and i32 %45, 1
  %47 = and i32 %3, 16
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %37, i64 0, i32 4, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %51, i64 0, i32 2, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp ne i32 %53, 1
  %55 = and i32 %3, 2
  %56 = icmp eq i32 %55, 0
  %57 = or i1 %56, %54
  br i1 %57, label %58, label %61

58:                                               ; preds = %49
  %59 = icmp ne i32 %55, 0
  %60 = call zeroext i1 @_ZN5blink14LayoutSVGShape12FillContainsERKNS_15HitTestLocationEbNS_8WindRuleE(%"class.blink::LayoutSVGShape"* %0, %"class.blink::HitTestLocation"* dereferenceable(72) %2, i1 zeroext %59, i32 %46)
  br i1 %60, label %62, label %61

61:                                               ; preds = %49, %35, %58
  br label %62

62:                                               ; preds = %32, %58, %61, %9
  %63 = phi i1 [ true, %9 ], [ true, %32 ], [ false, %61 ], [ true, %58 ]
  ret i1 %63
}

declare i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_9FloatRectE(%"class.blink::HitTestLocation"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink14LayoutSVGShape36CalculateNonScalingStrokeBoundingBoxEv(%"class.blink::LayoutSVGShape"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %7 = alloca %"class.blink::AffineTransform", align 8
  %8 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 1
  %9 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  %10 = bitcast %"class.blink::FloatRect"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %11, align 8
  %13 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %12, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK5blink15AffineTransform12IsInvertibleEv(%"class.blink::AffineTransform"* %13) #9
  br i1 %14, label %15, label %111

15:                                               ; preds = %1
  %16 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %11, align 8
  %17 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %16, i64 0, i32 0
  %18 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -1, i64 16, i1 false)
  %20 = tail call { <2 x float>, <2 x float> } @_ZNK5blink4Path12BoundingRectEv(%"class.blink::Path"* %17) #9
  %21 = extractvalue { <2 x float>, <2 x float> } %20, 0
  %22 = extractvalue { <2 x float>, <2 x float> } %20, 1
  %23 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 16777216
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %32 = bitcast %"class.blink::Node"** %31 to %"class.blink::SVGElement"**
  %33 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %32, align 8
  br label %34

34:                                               ; preds = %30, %15
  %35 = phi %"class.blink::SVGElement"* [ %33, %30 ], [ null, %15 ]
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %35) #9
  %36 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to %"class.blink::ComputedStyleBase"**
  %38 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 4, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %42, i64 0, i32 6
  %44 = call float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::UnzoomedLength"* dereferenceable(8) %43, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %45 = fcmp ugt float %44, 0.000000e+00
  br i1 %45, label %46, label %102

46:                                               ; preds = %34
  %47 = fmul float %44, 5.000000e-01
  %48 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 7
  %49 = load i8, i8* %48, align 8
  %50 = icmp eq i8 %49, 2
  br i1 %50, label %86, label %51

51:                                               ; preds = %46
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %53 = icmp ne i8 %49, 1
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 4, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %55, i64 0, i32 5, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %57, i64 0, i32 9
  %59 = load i8, i8* %58, align 8
  %60 = and i8 %59, 12
  %61 = icmp eq i8 %60, 0
  %62 = and i1 %53, %61
  br i1 %62, label %63, label %79

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %57, i64 0, i32 7
  %65 = load float, float* %64, align 8
  %66 = fpext float %65 to double
  %67 = fcmp olt double %66, 0x3FF6A09E667F3BCD
  %68 = and i8 %59, 3
  %69 = icmp eq i8 %68, 2
  %70 = and i1 %69, %67
  br i1 %70, label %71, label %75

71:                                               ; preds = %63
  %72 = fpext float %47 to double
  %73 = fmul double %72, 0x3FF6A09E667F3BCD
  %74 = fptrunc double %73 to float
  br label %86

75:                                               ; preds = %63
  %76 = fcmp olt float %65, 1.000000e+00
  %77 = select i1 %76, float 1.000000e+00, float %65
  %78 = fmul float %47, %77
  br label %86

79:                                               ; preds = %51
  %80 = and i8 %59, 3
  %81 = icmp eq i8 %80, 2
  br i1 %81, label %82, label %86

82:                                               ; preds = %79
  %83 = fpext float %47 to double
  %84 = fmul double %83, 0x3FF6A09E667F3BCD
  %85 = fptrunc double %84 to float
  br label %86

86:                                               ; preds = %82, %79, %75, %71, %46
  %87 = phi float [ %47, %46 ], [ %85, %82 ], [ %47, %79 ], [ %74, %71 ], [ %78, %75 ]
  %88 = extractelement <2 x float> %21, i32 0
  %89 = fsub float %88, %87
  %90 = insertelement <2 x float> undef, float %89, i32 0
  %91 = extractelement <2 x float> %22, i32 0
  %92 = fadd float %91, %87
  %93 = fadd float %87, %92
  %94 = insertelement <2 x float> undef, float %93, i32 0
  %95 = extractelement <2 x float> %21, i32 1
  %96 = fsub float %95, %87
  %97 = insertelement <2 x float> %90, float %96, i32 1
  %98 = extractelement <2 x float> %22, i32 1
  %99 = fadd float %98, %87
  %100 = fadd float %87, %99
  %101 = insertelement <2 x float> %94, float %100, i32 1
  br label %102

102:                                              ; preds = %34, %86
  %103 = phi <2 x float> [ %97, %86 ], [ %21, %34 ]
  %104 = phi <2 x float> [ %101, %86 ], [ %22, %34 ]
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %103, <2 x float>* %105, align 8
  %106 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %104, <2 x float>* %106, align 8
  %107 = bitcast %"class.blink::AffineTransform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %107) #9
  call void @_ZNK5blink15AffineTransform7InverseEv(%"class.blink::AffineTransform"* nonnull sret %7, %"class.blink::AffineTransform"* %13) #9
  %108 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %7, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #9
  %109 = extractvalue { <2 x float>, <2 x float> } %108, 0
  %110 = extractvalue { <2 x float>, <2 x float> } %108, 1
  store <2 x float> %109, <2 x float>* %105, align 8
  store <2 x float> %110, <2 x float>* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %107) #9
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  br label %111

111:                                              ; preds = %102, %1
  %112 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %113 = load <2 x float>, <2 x float>* %112, align 8
  %114 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %113, 0
  %115 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %116 = load <2 x float>, <2 x float>* %115, align 8
  %117 = insertvalue { <2 x float>, <2 x float> } %114, <2 x float> %116, 1
  ret { <2 x float>, <2 x float> } %117
}

declare zeroext i1 @_ZNK5blink15AffineTransform12IsInvertibleEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink4Path12BoundingRectEv(%"class.blink::Path"*) local_unnamed_addr #1

declare void @_ZNK5blink15AffineTransform7InverseEv(%"class.blink::AffineTransform"* sret, %"class.blink::AffineTransform"*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"*, %"class.blink::UnzoomedLength"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink14LayoutSVGShape25StrokeWidthForMarkerUnitsEv(%"class.blink::LayoutSVGShape"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = bitcast %"class.blink::Node"** %11 to %"class.blink::SVGElement"**
  %13 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %12, align 8
  br label %14

14:                                               ; preds = %1, %10
  %15 = phi %"class.blink::SVGElement"* [ %13, %10 ], [ null, %1 ]
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %15) #9
  %16 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %20, i64 0, i32 5, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %22, i64 0, i32 6
  %24 = call float @_ZNK5blink16SVGLengthContext14ValueForLengthERKNS_14UnzoomedLengthENS_13SVGLengthModeE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::UnzoomedLength"* dereferenceable(8) %23, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #9
  %25 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %25, i64 0, i32 4, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %27, i64 0, i32 9
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 67108864
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %51, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::LayoutSVGShapeRareData"*, %"struct.blink::LayoutSVGShapeRareData"** %33, align 8
  %35 = getelementptr inbounds %"struct.blink::LayoutSVGShapeRareData", %"struct.blink::LayoutSVGShapeRareData"* %34, i64 0, i32 1
  %36 = call zeroext i1 @_ZNK5blink15AffineTransform12IsInvertibleEv(%"class.blink::AffineTransform"* %35) #9
  br i1 %36, label %37, label %51

37:                                               ; preds = %32
  %38 = call double @_ZNK5blink15AffineTransform13XScaleSquaredEv(%"class.blink::AffineTransform"* %35) #9
  %39 = call double @_ZNK5blink15AffineTransform13YScaleSquaredEv(%"class.blink::AffineTransform"* %35) #9
  %40 = fadd double %38, %39
  %41 = fmul double %40, 5.000000e-01
  %42 = call double @sqrt(double %41) #9
  %43 = fcmp ult double %42, 0x47EFFFFFE0000000
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = fcmp ole double %42, 0xC7EFFFFFE0000000
  %46 = select i1 %45, double 0xC7EFFFFFE0000000, double %42
  %47 = fptrunc double %46 to float
  br label %48

48:                                               ; preds = %44, %37
  %49 = phi float [ %47, %44 ], [ 0x47EFFFFFE0000000, %37 ]
  %50 = fdiv float %24, %49
  br label %51

51:                                               ; preds = %14, %48, %32
  %52 = phi float [ 0.000000e+00, %32 ], [ %24, %14 ], [ %50, %48 ]
  ret float %52
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #6

declare double @_ZNK5blink15AffineTransform13XScaleSquaredEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

declare double @_ZNK5blink15AffineTransform13YScaleSquaredEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK5blink14LayoutSVGShape32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutSVGShape"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %5, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %7, i64 0, i32 4, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %34, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %7, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %7, i64 0, i32 6, i32 0, i32 2
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 8
  br i1 %15, label %28, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %7, i64 0, i32 6, i32 0, i32 3
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::UnzoomedLength"* %12 to float*
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %22, 0.000000e+00
  br i1 %23, label %34, label %28

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::UnzoomedLength", %"class.blink::UnzoomedLength"* %12, i64 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %20, %24, %11
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %7, i64 0, i32 9
  %30 = load i8, i8* %29, align 8
  %31 = and i8 %30, 3
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i8 1, i8 2
  br label %34

34:                                               ; preds = %20, %24, %1, %28
  %35 = phi i8 [ %33, %28 ], [ 0, %24 ], [ 0, %1 ], [ 0, %20 ]
  ret i8 %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZThn8_NK5blink14LayoutSVGShape32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutSVGShape"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 -1, i32 7
  %3 = getelementptr inbounds i8, i8* %2, i64 32
  %4 = bitcast i8* %3 to %"class.blink::ComputedStyle"**
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %7, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %9, i64 0, i32 4, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %36, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %9, i64 0, i32 6
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %9, i64 0, i32 6, i32 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 8
  br i1 %17, label %30, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %9, i64 0, i32 6, i32 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::UnzoomedLength"* %14 to float*
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %24, 0.000000e+00
  br i1 %25, label %36, label %30

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::UnzoomedLength", %"class.blink::UnzoomedLength"* %14, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %22, %13
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %9, i64 0, i32 9
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 3
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i8 1, i8 2
  br label %36

36:                                               ; preds = %1, %22, %26, %30
  %37 = phi i8 [ %35, %30 ], [ 0, %26 ], [ 0, %1 ], [ 0, %22 ]
  ret i8 %37
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink21ImageResourceObserver23ComputeResourcePriorityEv(%"class.blink::ImageResourceObserver"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14LayoutSVGShape7GetNameEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #9
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

declare zeroext i1 @_ZNK5blink20LayoutSVGModelObject14IsChildAllowedEPNS_12LayoutObjectERKNS_13ComputedStyleE(%"class.blink::LayoutSVGModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #9
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsBoxModelObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14LayoutSVGShape23SetNeedsTransformUpdateEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1
  %4 = or i8 %3, 4
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14LayoutSVGShape24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1
  %4 = or i8 %3, 1
  store i8 %4, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink20LayoutSVGModelObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutSVGModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGModelObject", %"class.blink::LayoutSVGModelObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::LayoutSVGModelObject"* %0 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %4 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %4, i64 40
  %6 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %5, align 8
  %7 = tail call { <2 x float>, <2 x float> } %6(%"class.blink::LayoutObject"* %2) #9
  ret { <2 x float>, <2 x float> } %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14LayoutSVGShape17LocalSVGTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %1, i64 0, i32 3
  %4 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  %5 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink12LayoutObject18SpannerPlaceholderEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18HasInlineFragmentsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject20RecalcVisualOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1001"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject16PositionForPointERKNS_14PhysicalOffsetE() unnamed_addr

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutSVGModelObject13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutSVGModelObject"*, %"class.WTF::Vector.1322"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink20LayoutSVGModelObject36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutSVGModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject22PreferredLogicalWidthsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink20LayoutSVGModelObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutSVGModelObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink12LayoutObject14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutObject"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink20LayoutSVGModelObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutSVGModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutSVGModelObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutSVGModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink20LayoutSVGModelObject15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutSVGModelObject"*, %"class.WTF::Vector.1329"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutObject"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject9DebugRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LayoutSVGShape8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutSVGShape"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 68
  %4 = icmp eq i32 %1, 58
  %5 = or i1 %3, %4
  ret i1 %5
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink20LayoutSVGModelObject16InsertedIntoTreeEv(%"class.blink::LayoutSVGModelObject"*) unnamed_addr #1

declare void @_ZN5blink20LayoutSVGModelObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutSVGModelObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink12LayoutObject27OffsetFromContainerInternalEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject26FlipForWritingModeInternalENS_10LayoutUnitES1_PKNS_9LayoutBoxE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LayoutSVGShape12IsShapeEmptyEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutSVGShape", %"class.blink::LayoutSVGShape"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Path"*, %"class.blink::Path"** %2, align 8
  %4 = icmp eq %"class.blink::Path"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink4Path7IsEmptyEv(%"class.blink::Path"* nonnull %3) #9
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ true, %1 ], [ %6, %5 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::Vector.1330"* @_ZNK5blink14LayoutSVGShape15MarkerPositionsEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::Vector.1330"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink14LayoutSVGShape16GeometryCodePathEv(%"class.blink::LayoutSVGShape"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::SVGElementResourceClient"* @_ZN5blink12SVGResources9GetClientERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.blink::LayoutSVGResourceContainer"* @_ZNK5blink11SVGResource17ResourceContainerERNS_17SVGResourceClientE(%"class.blink::SVGResource"*, %"class.blink::SVGResourceClient"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #1

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #8

declare zeroext i1 @_ZNK5blink4Path7IsEmptyEv(%"class.blink::Path"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN5blink4PathC1ERK6SkPath(%"class.blink::Path"*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink14LayoutSVGShape20ComputeRootTransformEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink14LayoutSVGShape20ComputeRootTransformEv"}
!6 = !{!"branch_weights", i32 1, i32 4001}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink14LayoutSVGShape20ComputeRootTransformEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink14LayoutSVGShape20ComputeRootTransformEv"}
