; ModuleID = '../../third_party/skia/src/pdf/SkPDFSubsetFont.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFSubsetFont.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPDFGlyphUse = type <{ %class.SkBitSet, i16, i16, [4 x i8] }>
%class.SkBitSet = type { i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%struct.hb_blob_t = type opaque
%struct.hb_face_t = type opaque
%struct.hb_subset_input_t = type opaque
%struct.hb_set_t = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z15SkPDFSubsetFont5sk_spI6SkDataERK13SkPDFGlyphUseN5SkPDF8Metadata9SubsetterEPKci(%class.sk_sp* noalias sret, %class.sk_sp* nocapture, %class.SkPDFGlyphUse* nocapture readonly dereferenceable(24), i32, i8* nocapture readnone, i32) local_unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkData* null, %class.SkData** %8, align 8
  %11 = inttoptr i64 %10 to %class.SkData*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %130, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8, !noalias !2
  %16 = icmp ult i64 %15, 4294967296
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = trunc i64 %15 to i32
  %21 = inttoptr i64 %10 to i8*
  %22 = tail call %struct.hb_blob_t* @hb_blob_create(i8* %19, i32 %20, i32 1, i8* nonnull %21, void (i8*)* nonnull @"_ZZL7to_blob5sk_spI6SkDataEEN3$_18__invokeEPv") #5
  %23 = tail call %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t* %22, i32 %5) #5
  %24 = icmp eq %struct.hb_blob_t* %22, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %17
  tail call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %22) #5
  br label %33

26:                                               ; preds = %13
  %27 = tail call %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t* null, i32 %5) #5
  %28 = getelementptr inbounds %class.SkData, %class.SkData* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %11) #5
  %32 = inttoptr i64 %10 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %32) #5
  br label %33

33:                                               ; preds = %31, %26, %25, %17
  %34 = phi %struct.hb_face_t* [ %27, %26 ], [ %27, %31 ], [ %23, %17 ], [ %23, %25 ]
  %35 = tail call %struct.hb_subset_input_t* @hb_subset_input_create_or_fail() #5, !noalias !2
  %36 = icmp eq %struct.hb_face_t* %34, null
  %37 = icmp eq %struct.hb_subset_input_t* %35, null
  %38 = or i1 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %40, align 8, !alias.scope !2
  br label %126

41:                                               ; preds = %33
  %42 = tail call %struct.hb_set_t* @hb_subset_input_glyph_set(%struct.hb_subset_input_t* nonnull %35) #5, !noalias !2
  %43 = getelementptr inbounds %class.SkPDFGlyphUse, %class.SkPDFGlyphUse* %2, i64 0, i32 1
  %44 = load i16, i16* %43, align 8, !noalias !2
  %45 = icmp eq i16 %44, 1
  %46 = getelementptr inbounds %class.SkPDFGlyphUse, %class.SkPDFGlyphUse* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8, !noalias !2
  %48 = getelementptr inbounds %class.SkPDFGlyphUse, %class.SkPDFGlyphUse* %2, i64 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8, !noalias !2
  %50 = add i64 %49, 31
  %51 = lshr i64 %50, 5
  %52 = icmp eq i64 %51, 0
  br i1 %45, label %53, label %76

53:                                               ; preds = %41
  br i1 %52, label %105, label %54

54:                                               ; preds = %53, %73
  %55 = phi i64 [ %74, %73 ], [ 0, %53 ]
  %56 = getelementptr inbounds i32, i32* %47, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %54
  %60 = shl i64 %55, 5
  br label %61

61:                                               ; preds = %70, %59
  %62 = phi i64 [ 0, %59 ], [ %71, %70 ]
  %63 = trunc i64 %62 to i32
  %64 = shl i32 1, %63
  %65 = and i32 %64, %57
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = add nuw nsw i64 %62, %60
  %69 = trunc i64 %68 to i32
  tail call void @hb_set_add(%struct.hb_set_t* %42, i32 %69) #5
  br label %70

70:                                               ; preds = %67, %61
  %71 = add nuw nsw i64 %62, 1
  %72 = icmp eq i64 %71, 32
  br i1 %72, label %73, label %61

73:                                               ; preds = %70, %54
  %74 = add nuw nsw i64 %55, 1
  %75 = icmp eq i64 %74, %51
  br i1 %75, label %105, label %54

76:                                               ; preds = %41
  br i1 %52, label %105, label %77

77:                                               ; preds = %76
  %78 = add i16 %44, -1
  %79 = zext i16 %78 to i32
  br label %80

80:                                               ; preds = %102, %77
  %81 = phi i64 [ 0, %77 ], [ %103, %102 ]
  %82 = getelementptr inbounds i32, i32* %47, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %80
  %86 = shl i64 %81, 5
  br label %87

87:                                               ; preds = %99, %85
  %88 = phi i64 [ 0, %85 ], [ %100, %99 ]
  %89 = trunc i64 %88 to i32
  %90 = shl i32 1, %89
  %91 = and i32 %90, %83
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %87
  %94 = add nuw nsw i64 %88, %86
  %95 = trunc i64 %94 to i32
  %96 = icmp eq i32 %95, 0
  %97 = add i32 %95, %79
  %98 = select i1 %96, i32 0, i32 %97
  tail call void @hb_set_add(%struct.hb_set_t* %42, i32 %98) #5
  br label %99

99:                                               ; preds = %93, %87
  %100 = add nuw nsw i64 %88, 1
  %101 = icmp eq i64 %100, 32
  br i1 %101, label %102, label %87

102:                                              ; preds = %99, %80
  %103 = add nuw nsw i64 %81, 1
  %104 = icmp eq i64 %103, %51
  br i1 %104, label %105, label %80

105:                                              ; preds = %102, %73, %76, %53
  tail call void @hb_subset_input_set_retain_gids(%struct.hb_subset_input_t* nonnull %35, i32 1) #5, !noalias !2
  tail call void @hb_subset_input_set_drop_hints(%struct.hb_subset_input_t* nonnull %35, i32 0) #5, !noalias !2
  %106 = tail call %struct.hb_face_t* @hb_subset(%struct.hb_face_t* nonnull %34, %struct.hb_subset_input_t* nonnull %35) #5, !noalias !2
  %107 = tail call %struct.hb_blob_t* @hb_face_reference_blob(%struct.hb_face_t* %106) #5, !noalias !2
  %108 = icmp eq %struct.hb_blob_t* %107, null
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %110, align 8, !alias.scope !5
  br label %123

111:                                              ; preds = %105
  %112 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #5, !noalias !5
  store i32 -1431655766, i32* %7, align 4, !noalias !5
  %113 = call i8* @hb_blob_get_data(%struct.hb_blob_t* nonnull %107, i32* nonnull %7) #5, !noalias !5
  %114 = icmp ne i8* %113, null
  %115 = load i32, i32* %7, align 4, !noalias !5
  %116 = icmp ne i32 %115, 0
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %121

118:                                              ; preds = %111
  %119 = zext i32 %115 to i64
  %120 = bitcast %struct.hb_blob_t* %107 to i8*
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret %0, i8* nonnull %113, i64 %119, void (i8*, i8*)* nonnull @"_ZZL7to_dataNSt3__110unique_ptrI9hb_blob_t17SkFunctionWrapperIFvPS1_EXadL_Z15hb_blob_destroyEEEEEEN3$_28__invokeEPKvPv", i8* nonnull %120) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #5, !noalias !5
  br label %123

121:                                              ; preds = %111
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %122, align 8, !alias.scope !5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #5, !noalias !5
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %107) #5
  br label %123

123:                                              ; preds = %121, %118, %109
  %124 = icmp eq %struct.hb_face_t* %106, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %123
  call void @hb_face_destroy(%struct.hb_face_t* nonnull %106) #5
  br label %126

126:                                              ; preds = %125, %123, %39
  br i1 %37, label %128, label %127

127:                                              ; preds = %126
  call void @hb_subset_input_destroy(%struct.hb_subset_input_t* nonnull %35) #5
  br label %128

128:                                              ; preds = %127, %126
  br i1 %36, label %132, label %129

129:                                              ; preds = %128
  call void @hb_face_destroy(%struct.hb_face_t* nonnull %34) #5
  br label %132

130:                                              ; preds = %6
  %131 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %131, align 8, !alias.scope !2
  br label %132

132:                                              ; preds = %130, %129, %128
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_subset_input_t* @hb_subset_input_create_or_fail() local_unnamed_addr #2

declare %struct.hb_set_t* @hb_subset_input_glyph_set(%struct.hb_subset_input_t*) local_unnamed_addr #2

declare void @hb_subset_input_set_retain_gids(%struct.hb_subset_input_t*, i32) local_unnamed_addr #2

declare void @hb_subset_input_set_drop_hints(%struct.hb_subset_input_t*, i32) local_unnamed_addr #2

declare %struct.hb_face_t* @hb_subset(%struct.hb_face_t*, %struct.hb_subset_input_t*) local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_face_reference_blob(%struct.hb_face_t*) local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_blob_create(i8*, i32, i32, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZL7to_blob5sk_spI6SkDataEEN3$_18__invokeEPv"(i8*) #3 align 2 {
  %2 = bitcast i8* %0 to i32*
  %3 = atomicrmw add i32* %2, i32 -1 acq_rel
  %4 = icmp ne i32 %3, 1
  %5 = icmp eq i8* %0, null
  %6 = or i1 %5, %4
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast i8* %0 to %class.SkData*
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %8) #5
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %0) #5
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #2

declare void @hb_set_add(%struct.hb_set_t*, i32) local_unnamed_addr #2

declare i8* @hb_blob_get_data(%struct.hb_blob_t*, i32*) local_unnamed_addr #2

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZL7to_dataNSt3__110unique_ptrI9hb_blob_t17SkFunctionWrapperIFvPS1_EXadL_Z15hb_blob_destroyEEEEEEN3$_28__invokeEPKvPv"(i8* nocapture readnone, i8*) #3 align 2 {
  %3 = bitcast i8* %1 to %struct.hb_blob_t*
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #5
  ret void
}

declare void @hb_face_destroy(%struct.hb_face_t*) local_unnamed_addr #2

declare void @hb_subset_input_destroy(%struct.hb_subset_input_t*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL15subset_harfbuzz5sk_spI6SkDataERK13SkPDFGlyphUsei: argument 0"}
!4 = distinct !{!4, !"_ZL15subset_harfbuzz5sk_spI6SkDataERK13SkPDFGlyphUsei"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZL7to_dataNSt3__110unique_ptrI9hb_blob_t17SkFunctionWrapperIFvPS1_EXadL_Z15hb_blob_destroyEEEEE: argument 0"}
!7 = distinct !{!7, !"_ZL7to_dataNSt3__110unique_ptrI9hb_blob_t17SkFunctionWrapperIFvPS1_EXadL_Z15hb_blob_destroyEEEEE"}
