; ModuleID = '../../chrome/browser/plugins/plugin_info_host_impl.cc'
source_filename = "../../chrome/browser/plugins/plugin_info_host_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.PluginInfoHostImpl::Context" = type { i32, %"class.extensions::ExtensionRegistry"*, %class.HostContentSettingsMap*, %class.scoped_refptr.142, %class.PrefMember }
%"class.extensions::ExtensionRegistry" = type { %class.KeyedService, %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.extensions::ExtensionSet", %"class.base::ObserverList", %"class.content::BrowserContext"* }
%class.KeyedService = type { i32 (...)** }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.9", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.9" = type { %"class.std::__1::__tree.10" }
%"class.std::__1::__tree.10" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%class.HostContentSettingsMap = type { %"class.content_settings::Observer", %class.RefcountedKeyedService, %class.PrefService*, i8, i8, %"class.std::__1::map.109", %"class.std::__1::vector.120", %"class.content_settings::PrefProvider"*, %"class.base::ThreadChecker", [7 x i8], %"class.base::ObserverList.131", i8, %"class.base::WeakPtrFactory" }
%"class.content_settings::Observer" = type { i32 (...)** }
%class.RefcountedKeyedService = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %class.scoped_refptr }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %class.scoped_refptr.55, %"class.base::RepeatingCallback.56", %class.scoped_refptr.57, %"class.std::__1::unordered_map.85" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map.37", i8, %"class.std::__1::unique_ptr.46" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.34, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.34 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.36", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.55 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.56" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.57 = type { %class.PrefRegistry* }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted.58", %class.scoped_refptr.59, %"class.std::__1::unordered_map", %"class.std::__1::set" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.59 = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.75", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.85" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.90" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::map.109" = type { %"class.std::__1::__tree.110" }
%"class.std::__1::__tree.110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.content_settings::UserModifiableProvider"**, %"class.content_settings::UserModifiableProvider"**, %"class.std::__1::__compressed_pair.126" }
%"class.content_settings::UserModifiableProvider" = type { %"class.content_settings::ObservableProvider" }
%"class.content_settings::ObservableProvider" = type { %"class.content_settings::ProviderInterface", %"class.base::ThreadChecker", [7 x i8], %"class.base::ObserverList.122" }
%"class.content_settings::ProviderInterface" = type { i32 (...)** }
%"class.base::ObserverList.122" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.123", i64, i32, [4 x i8] }>
%"class.base::LinkedList.123" = type { %"class.base::LinkNode.124" }
%"class.base::LinkNode.124" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.content_settings::UserModifiableProvider"** }
%"class.content_settings::PrefProvider" = type opaque
%"class.base::ThreadChecker" = type { i8 }
%"class.base::ObserverList.131" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.132", i64, i32, [4 x i8] }>
%"class.base::LinkedList.132" = type { %"class.base::LinkNode.133" }
%"class.base::LinkNode.133" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.136", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.137" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i8 }
%class.scoped_refptr.142 = type { %class.PluginPrefs* }
%class.PluginPrefs = type { %class.RefcountedKeyedService, i8, %class.Profile*, %class.PrefService*, %class.PrefChangeRegistrar }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map.167", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map.167" = type { %"class.std::__1::__tree.168" }
%"class.std::__1::__tree.168" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.PrefMember = type { %"class.subtle::PrefMemberBase.base", %class.scoped_refptr.181 }
%"class.subtle::PrefMemberBase.base" = type <{ %class.PrefObserver, %"class.std::__1::basic_string", %"class.base::RepeatingCallback", %class.PrefService*, i8 }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.181 = type { %"class.PrefMember<bool>::Internal"* }
%"class.PrefMember<bool>::Internal" = type { %"class.subtle::PrefMemberBase::Internal.base", i8, [4 x i8] }
%"class.subtle::PrefMemberBase::Internal.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.182", [4 x i8], %class.scoped_refptr, i8, i8, i8 }>
%"class.base::RefCountedThreadSafe.182" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.143", i8, i8, i32, %"class.base::ObserverList.149", %"class.std::__1::unique_ptr.161" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList.149" = type <{ %"class.std::__1::vector.150", %"class.base::LinkedList.158", i64, i32, [4 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.153" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.152 }
%class.scoped_refptr.152 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.158" = type { %"class.base::LinkNode.159" }
%"class.base::LinkNode.159" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%class.PluginInfoHostImpl = type { %"class.chrome::mojom::PluginInfoHost", %"class.PluginInfoHostImpl::Context", %"class.base::CallbackListSubscription", %"class.base::WeakPtrFactory.183" }
%"class.chrome::mojom::PluginInfoHost" = type { i32 (...)** }
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.183" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.subtle::PrefMemberBase" = type <{ %class.PrefObserver, %"class.std::__1::basic_string", %"class.base::RepeatingCallback", %class.PrefService*, i8, [7 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.subtle::PrefMemberBase::Internal" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.182", [4 x i8], %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%"class.base::RepeatingCallback.208" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.BrowserContextKeyedServiceShutdownNotifierFactory = type { %class.BrowserContextKeyedServiceFactory }
%class.BrowserContextKeyedServiceFactory = type { %class.KeyedServiceFactory }
%class.KeyedServiceFactory = type { %class.KeyedServiceBaseFactory.base, %"class.std::__1::map.184", %"class.std::__1::map.195" }
%class.KeyedServiceBaseFactory.base = type <{ i32 (...)**, %class.DependencyManager*, i8*, i32 }>
%class.DependencyManager = type opaque
%"class.std::__1::map.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.195" = type { %"class.std::__1::__tree.196" }
%"class.std::__1::__tree.196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory" = type { %class.BrowserContextKeyedServiceShutdownNotifierFactory }
%class.KeyedServiceShutdownNotifier = type { %class.KeyedService, %"class.base::OnceCallbackList" }
%"class.base::OnceCallbackList" = type { %"class.base::internal::CallbackListBase", %"class.std::__1::list" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback.208", %"class.base::WeakPtrFactory.209" }
%"class.base::WeakPtrFactory.209" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.204" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.user_prefs::PrefRegistrySyncable" = type { %class.PrefRegistrySimple, %"class.base::RepeatingCallback.210" }
%class.PrefRegistrySimple = type { %class.PrefRegistry }
%"class.base::RepeatingCallback.210" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.211" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.217 }
%union.anon.217 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::OnceCallback.218" = type { %"class.base::internal::CallbackBase" }
%"struct.PluginInfoHostImpl::GetPluginInfo_Params" = type { i32, %class.GURL, %"class.url::Origin", %"class.std::__1::basic_string" }
%"class.base::OnceCallback.219" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.220" = type { %"class.base::internal::WeakPtrBase" }
%"class.content::PluginService" = type { i32 (...)** }
%"struct.base::internal::BindState.439" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.440" }
%"class.std::__1::tuple.440" = type { %"struct.std::__1::__tuple_impl.441" }
%"struct.std::__1::__tuple_impl.441" = type { %"class.std::__1::__tuple_leaf.442", %"class.std::__1::__tuple_leaf.443", %"class.std::__1::__tuple_leaf.444" }
%"class.std::__1::__tuple_leaf.442" = type { %"class.base::WeakPtr.220" }
%"class.std::__1::__tuple_leaf.443" = type { %"struct.PluginInfoHostImpl::GetPluginInfo_Params" }
%"class.std::__1::__tuple_leaf.444" = type { %"class.base::OnceCallback.218" }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"*, %"class.std::__1::__compressed_pair.296" }
%"struct.content::WebPluginInfo" = type <{ %"class.std::__1::basic_string.225", %"class.base::FilePath", %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225", %"class.std::__1::vector.234", i32, i32, i32, [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.228 }
%union.anon.228 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*, %"class.std::__1::__compressed_pair.250" }
%"struct.content::WebPluginMimeType" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.236", %"class.std::__1::basic_string.225", %"class.std::__1::vector.243" }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"*, %"class.std::__1::__compressed_pair.245" }
%"struct.content::WebPluginMimeType::Param" = type { %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.content::WebPluginMimeType::Param"* }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.content::WebPluginMimeType"* }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.content::WebPluginInfo"* }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %class.PluginMetadata* }
%class.PluginMetadata = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225", i8, [7 x i8], %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::map.261", %"class.std::__1::vector.236", %"class.std::__1::vector.236", i8, [7 x i8] }>
%"class.std::__1::map.261" = type { %"class.std::__1::__tree.262" }
%"class.std::__1::__tree.262" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.222" }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.chrome::mojom::PluginInfo"* }
%"class.chrome::mojom::PluginInfo" = type { i32, [4 x i8], %"struct.content::WebPluginInfo", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.225" }
%"class.content::PluginServiceFilter" = type { i32 (...)** }
%class.PluginFinder = type { %"class.std::__1::map.301", %"class.std::__1::map.310", i32, %"class.base::Lock" }
%"class.std::__1::map.301" = type { %"class.std::__1::__tree.302" }
%"class.std::__1::__tree.302" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.310" = type { %"class.std::__1::__tree.311" }
%"class.std::__1::__tree.311" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::allocator.179" = type { i8 }
%"class.extensions::WebViewRendererState" = type { %"class.std::__1::map.273", %"class.base::Lock", %"class.std::__1::map.284", %"class.base::Lock" }
%"class.std::__1::map.273" = type { %"class.std::__1::__tree.274" }
%"class.std::__1::__tree.274" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.284" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.349", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.366", %"class.std::__1::vector.372", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.386", %"class.std::__1::map.427", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.349" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set.350" }
%"class.std::__1::set.350" = type { %"class.std::__1::__tree.351" }
%"class.std::__1::__tree.351" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.372" = type { %"class.std::__1::__vector_base.373" }
%"class.std::__1::__vector_base.373" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.374" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.379" }
%"class.std::__1::vector.379" = type { %"class.std::__1::__vector_base.380" }
%"class.std::__1::__vector_base.380" = type { i32*, i32*, %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { i32* }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.389", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.392" }
%"union.absl::variant_internal::DestructibleUnionImpl.392" = type { %"union.absl::variant_internal::DestructibleUnionImpl.393" }
%"union.absl::variant_internal::DestructibleUnionImpl.393" = type { %"union.absl::variant_internal::DestructibleUnionImpl.394" }
%"union.absl::variant_internal::DestructibleUnionImpl.394" = type { %"union.absl::variant_internal::DestructibleUnionImpl.395" }
%"union.absl::variant_internal::DestructibleUnionImpl.395" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.427" = type { %"class.std::__1::__tree.428" }
%"class.std::__1::__tree.428" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.429", %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%class.ChromePluginServiceFilter = type { %"class.content::PluginServiceFilter", %"class.content::NotificationObserver", %"class.content::NotificationRegistrar", %"class.base::Lock", %"class.std::__1::map.326", %"class.std::__1::map.335" }
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector.319" }
%"class.std::__1::vector.319" = type { %"class.std::__1::__vector_base.320" }
%"class.std::__1::__vector_base.320" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair.321" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.std::__1::map.326" = type { %"class.std::__1::__tree.327" }
%"class.std::__1::__tree.327" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.335" = type { %"class.std::__1::__tree.336" }
%"class.std::__1::__tree.336" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.229 }
%struct.anon.229 = type { %"struct.std::__1::__padding.230", i8 }
%"struct.std::__1::__padding.230" = type { [1 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN10PrefMemberIbED2Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN33BrowserContextKeyedServiceFactory20RegisterProfilePrefsEPN10user_prefs20PrefRegistrySyncableE = comdat any

$_ZN10PrefMemberIbED0Ev = comdat any

$_ZNK10PrefMemberIbE14CreateInternalEv = comdat any

$_ZNK10PrefMemberIbE8internalEv = comdat any

$_ZN10PrefMemberIbE8InternalD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSG_9allocatorISJ_EEEEEJNS_7WeakPtrIS3_EES4_SF_EEEFvSO_EE7RunOnceEPNS0_13BindStateBaseESO_ = comdat any

$_ZN4base8internal13FunctorTraitsIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEvE6InvokeISP_NS_7WeakPtrIS2_EEJS3_SE_SN_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS2_EES3_SE_EEC2ISP_JSR_RS3_SE_EEENSF_17integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS2_EES3_SE_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSG_9allocatorISJ_EEEEEJNS_7WeakPtrIS3_EES4_SF_EEEEEbPKNS0_13BindStateBaseENSU_21CancellationQueryModeE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZTV10PrefMemberIbE = comdat any

$_ZTVN10PrefMemberIbE8InternalE = comdat any

@_ZN5prefs21kPluginsAllowOutdatedE = external constant [0 x i8], align 1
@_ZTV18PluginInfoHostImpl = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.PluginInfoHostImpl*)* @_ZN18PluginInfoHostImplD2Ev to i8*), i8* bitcast (void (%class.PluginInfoHostImpl*)* @_ZN18PluginInfoHostImplD0Ev to i8*), i8* bitcast (i1 (%"class.chrome::mojom::PluginInfoHost"*, i32, %class.GURL*, %"class.url::Origin"*, %"class.std::__1::basic_string"*, %"class.mojo::StructPtr"*)* @_ZN6chrome5mojom14PluginInfoHost13GetPluginInfoEiRK4GURLRKN3url6OriginERKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEPN4mojo9StructPtrINS0_10PluginInfoEEE to i8*), i8* bitcast (void (%class.PluginInfoHostImpl*, i32, %class.GURL*, %"class.url::Origin"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.218"*)* @_ZN18PluginInfoHostImpl13GetPluginInfoEiRK4GURLRKN3url6OriginERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEN4base12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEE to i8*)] }, align 8
@_ZN10extensions16kExtensionSchemeE = external constant [0 x i8], align 1
@_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = internal global i64 0, align 8
@.str = private unnamed_addr constant [19 x i8] c"PluginInfoHostImpl\00", align 1
@_ZTVN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryE = internal unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.BrowserContextKeyedServiceShutdownNotifierFactory*)* @_ZN49BrowserContextKeyedServiceShutdownNotifierFactoryD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)* @_ZN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryD0Ev to i8*), i8* bitcast (i8* (%class.BrowserContextKeyedServiceFactory*, i8*)* @_ZNK33BrowserContextKeyedServiceFactory15GetContextToUseEPv to i8*), i8* bitcast (i1 (%class.BrowserContextKeyedServiceFactory*)* @_ZNK33BrowserContextKeyedServiceFactory27ServiceIsCreatedWithContextEv to i8*), i8* bitcast (i1 (%class.BrowserContextKeyedServiceFactory*)* @_ZNK33BrowserContextKeyedServiceFactory25ServiceIsNULLWhileTestingEv to i8*), i8* bitcast (void (%class.BrowserContextKeyedServiceFactory*, i8*)* @_ZN33BrowserContextKeyedServiceFactory15ContextShutdownEPv to i8*), i8* bitcast (void (%class.BrowserContextKeyedServiceFactory*, i8*)* @_ZN33BrowserContextKeyedServiceFactory16ContextDestroyedEPv to i8*), i8* bitcast (void (%class.BrowserContextKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*)* @_ZN33BrowserContextKeyedServiceFactory13RegisterPrefsEPN10user_prefs20PrefRegistrySyncableE to i8*), i8* bitcast (void (%class.KeyedServiceFactory*, i8*)* @_ZN19KeyedServiceFactory22SetEmptyTestingFactoryEPv to i8*), i8* bitcast (i1 (%class.KeyedServiceFactory*, i8*)* @_ZN19KeyedServiceFactory17HasTestingFactoryEPv to i8*), i8* bitcast (void (%class.BrowserContextKeyedServiceFactory*, i8*)* @_ZN33BrowserContextKeyedServiceFactory16CreateServiceNowEPv to i8*), i8* bitcast (void ()* @_ZNK33BrowserContextKeyedServiceFactory23BuildServiceInstanceForEPv to i8*), i8* bitcast (i1 (%class.BrowserContextKeyedServiceFactory*, i8*)* @_ZNK33BrowserContextKeyedServiceFactory14IsOffTheRecordEPv to i8*), i8* bitcast (%"class.content::BrowserContext"* (%class.BrowserContextKeyedServiceShutdownNotifierFactory*, %"class.content::BrowserContext"*)* @_ZNK49BrowserContextKeyedServiceShutdownNotifierFactory22GetBrowserContextToUseEPN7content14BrowserContextE to i8*), i8* bitcast (i1 (%class.BrowserContextKeyedServiceFactory*)* @_ZNK33BrowserContextKeyedServiceFactory34ServiceIsCreatedWithBrowserContextEv to i8*), i8* bitcast (%class.KeyedService* (%class.BrowserContextKeyedServiceShutdownNotifierFactory*, %"class.content::BrowserContext"*)* @_ZNK49BrowserContextKeyedServiceShutdownNotifierFactory23BuildServiceInstanceForEPN7content14BrowserContextE to i8*), i8* bitcast (void (%class.BrowserContextKeyedServiceFactory*, %"class.content::BrowserContext"*)* @_ZN33BrowserContextKeyedServiceFactory22BrowserContextShutdownEPN7content14BrowserContextE to i8*), i8* bitcast (void (%class.BrowserContextKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*)* @_ZN33BrowserContextKeyedServiceFactory20RegisterProfilePrefsEPN10user_prefs20PrefRegistrySyncableE to i8*)] }, align 8
@_ZTV10PrefMemberIbE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.subtle::PrefMemberBase"*, %class.PrefService*, %"class.std::__1::basic_string"*)* @_ZN6subtle14PrefMemberBase19OnPreferenceChangedEP11PrefServiceRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.PrefMember*)* @_ZN10PrefMemberIbED2Ev to i8*), i8* bitcast (void (%class.PrefMember*)* @_ZN10PrefMemberIbED0Ev to i8*), i8* bitcast (void (%class.PrefMember*)* @_ZNK10PrefMemberIbE14CreateInternalEv to i8*), i8* bitcast (%"class.PrefMember<bool>::Internal"* (%class.PrefMember*)* @_ZNK10PrefMemberIbE8internalEv to i8*)] }, comdat, align 8
@_ZTVN10PrefMemberIbE8InternalE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.subtle::PrefMemberBase::Internal"*)* @_ZN6subtle14PrefMemberBase8InternalD2Ev to i8*), i8* bitcast (void (%"class.PrefMember<bool>::Internal"*)* @_ZN10PrefMemberIbE8InternalD0Ev to i8*), i8* bitcast (i1 (%"class.PrefMember<bool>::Internal"*, %"class.base::Value"*)* @_ZNK10PrefMemberIbE8Internal19UpdateValueInternalERKN4base5ValueE to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN18PluginInfoHostImpl7ContextC1EiP7Profile = hidden unnamed_addr alias void (%"class.PluginInfoHostImpl::Context"*, i32, %class.Profile*), void (%"class.PluginInfoHostImpl::Context"*, i32, %class.Profile*)* @_ZN18PluginInfoHostImpl7ContextC2EiP7Profile
@_ZN18PluginInfoHostImpl7ContextD1Ev = hidden unnamed_addr alias void (%"class.PluginInfoHostImpl::Context"*), void (%"class.PluginInfoHostImpl::Context"*)* @_ZN18PluginInfoHostImpl7ContextD2Ev
@_ZN18PluginInfoHostImplC1EiP7Profile = hidden unnamed_addr alias void (%class.PluginInfoHostImpl*, i32, %class.Profile*), void (%class.PluginInfoHostImpl*, i32, %class.Profile*)* @_ZN18PluginInfoHostImplC2EiP7Profile
@_ZN18PluginInfoHostImplD1Ev = hidden unnamed_addr alias void (%class.PluginInfoHostImpl*), void (%class.PluginInfoHostImpl*)* @_ZN18PluginInfoHostImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl7ContextC2EiP7Profile(%"class.PluginInfoHostImpl::Context"*, i32, %class.Profile*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.Profile, %class.Profile* %2, i64 0, i32 0
  %8 = tail call %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"* %7) #10
  store %"class.extensions::ExtensionRegistry"* %8, %"class.extensions::ExtensionRegistry"** %6, align 8
  %9 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 2
  %10 = tail call %class.HostContentSettingsMap* @_ZN29HostContentSettingsMapFactory13GetForProfileEPN7content14BrowserContextE(%"class.content::BrowserContext"* %7) #10
  store %class.HostContentSettingsMap* %10, %class.HostContentSettingsMap** %9, align 8
  %11 = tail call %class.PluginPrefs* @_ZN11PluginPrefs13GetForProfileEP7Profile(%class.Profile* %2) #10
  %12 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 3, i32 0
  store %class.PluginPrefs* %11, %class.PluginPrefs** %12, align 8
  %13 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4
  %14 = bitcast %class.PrefMember* %13 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseC2Ev(%"class.subtle::PrefMemberBase"* %14) #10
  %15 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %13, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4, i32 1, i32 0
  store %"class.PrefMember<bool>::Internal"* null, %"class.PrefMember<bool>::Internal"** %16, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kPluginsAllowOutdatedE, i64 0, i64 0)) #10
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #11
  unreachable

22:                                               ; preds = %3
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #12
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %31, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %38

33:                                               ; preds = %22
  %34 = trunc i64 %18 to i8
  %35 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 %34, i8* %36, align 1
  %37 = icmp eq i64 %18, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33, %24
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %35, %33 ], [ %32, %24 ]
  %40 = phi i8* [ %17, %33 ], [ %27, %24 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %40, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kPluginsAllowOutdatedE, i64 0, i64 0), i64 %18, i1 false) #10
  br label %41

41:                                               ; preds = %33, %38
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %35, %33 ], [ %39, %38 ]
  %43 = phi i8* [ %17, %33 ], [ %40, %38 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %18
  store i8 0, i8* %44, align 1
  %45 = bitcast %class.Profile* %2 to %class.PrefService* (%class.Profile*)***
  %46 = load %class.PrefService* (%class.Profile*)**, %class.PrefService* (%class.Profile*)*** %45, align 8
  %47 = getelementptr inbounds %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %46, i64 46
  %48 = load %class.PrefService* (%class.Profile*)*, %class.PrefService* (%class.Profile*)** %47, align 8
  %49 = tail call %class.PrefService* %48(%class.Profile* %2) #10
  call void @_ZN6subtle14PrefMemberBase4InitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP11PrefService(%"class.subtle::PrefMemberBase"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %class.PrefService* %49) #10
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %41, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  ret void
}

declare %"class.extensions::ExtensionRegistry"* @_ZN10extensions17ExtensionRegistry3GetEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare %class.HostContentSettingsMap* @_ZN29HostContentSettingsMapFactory13GetForProfileEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #1

declare %class.PluginPrefs* @_ZN11PluginPrefs13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl7ContextD2Ev(%"class.PluginInfoHostImpl::Context"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4, i32 1, i32 0
  %5 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %4, align 8
  %6 = icmp eq %"class.PrefMember<bool>::Internal"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.182"* %13 to %"class.subtle::PrefMemberBase::Internal"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.182"* %13 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %16 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %16, i64 1
  %18 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %17, align 8
  tail call void %18(%"class.subtle::PrefMemberBase::Internal"* nonnull %14) #10
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = bitcast %class.PrefMember* %2 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %20) #10
  %21 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 3, i32 0
  %22 = load %class.PluginPrefs*, %class.PluginPrefs** %21, align 8
  %23 = icmp eq %class.PluginPrefs* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.PluginPrefs, %class.PluginPrefs* %22, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %30 to %class.RefcountedKeyedService*
  tail call void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService* %31) #10
  br label %32

32:                                               ; preds = %19, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10PrefMemberIbED2Ev(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1, i32 0
  %4 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %3, align 8
  %5 = icmp eq %"class.PrefMember<bool>::Internal"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.182"* %12 to %"class.subtle::PrefMemberBase::Internal"*
  %14 = bitcast %"class.base::RefCountedThreadSafe.182"* %12 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %15 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %15, i64 1
  %17 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %16, align 8
  tail call void %17(%"class.subtle::PrefMemberBase::Internal"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %class.PrefMember* %0 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %19) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl7Context18ShutdownOnUIThreadEv(%"class.PluginInfoHostImpl::Context"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4
  %3 = bitcast %class.PrefMember* %2 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBase7DestroyEv(%"class.subtle::PrefMemberBase"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImplC2EiP7Profile(%class.PluginInfoHostImpl*, i32, %class.Profile*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::CallbackListSubscription", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::RepeatingCallback.208", align 8
  %7 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV18PluginInfoHostImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1
  tail call void @_ZN18PluginInfoHostImpl7ContextC2EiP7Profile(%"class.PluginInfoHostImpl::Context"* %8, i32 %1, %class.Profile* %2)
  %9 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 2
  tail call void @_ZN4base24CallbackListSubscriptionC1Ev(%"class.base::CallbackListSubscription"* %9) #10
  %10 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 3, i32 0
  %11 = ptrtoint %class.PluginInfoHostImpl* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %10, i64 %11) #10
  %12 = bitcast %"class.base::CallbackListSubscription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  %13 = load atomic i64, i64* @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %24, label %15

15:                                               ; preds = %3
  %16 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #10
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = tail call i8* @_Znwm(i64 80) #12
  %19 = bitcast i8* %18 to %class.BrowserContextKeyedServiceShutdownNotifierFactory*
  tail call void @_ZN49BrowserContextKeyedServiceShutdownNotifierFactoryC2EPKc(%class.BrowserContextKeyedServiceShutdownNotifierFactory* nonnull %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #10
  %20 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = ptrtoint i8* %18 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %21, void (i8*)* nonnull @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #10
  br label %24

22:                                               ; preds = %15
  %23 = load atomic i64, i64* @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %24

24:                                               ; preds = %3, %17, %22
  %25 = phi i64 [ %13, %3 ], [ %21, %17 ], [ %23, %22 ]
  %26 = inttoptr i64 %25 to %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*
  %27 = getelementptr inbounds %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory", %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"* %26, i64 0, i32 0
  %28 = getelementptr inbounds %class.Profile, %class.Profile* %2, i64 0, i32 0
  %29 = tail call %class.KeyedServiceShutdownNotifier* @_ZN49BrowserContextKeyedServiceShutdownNotifierFactory3GetEPN7content14BrowserContextE(%class.BrowserContextKeyedServiceShutdownNotifierFactory* %27, %"class.content::BrowserContext"* %28) #10
  %30 = tail call i8* @_Znwm(i64 56) #12, !noalias !2
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %32 = getelementptr inbounds i8, i8* %30, i64 32
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.PluginInfoHostImpl*)* @_ZN18PluginInfoHostImpl18ShutdownOnUIThreadEv to i64), i64 0>, <2 x i64>* %33, align 8, !noalias !2
  %34 = getelementptr inbounds i8, i8* %30, i64 48
  %35 = bitcast i8* %34 to i64*
  store i64 %11, i64* %35, align 8, !noalias !2
  %36 = bitcast %"class.base::RepeatingCallback.208"* %6 to i8**
  store i8* %30, i8** %36, align 8, !alias.scope !2
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %38 = getelementptr inbounds %"class.base::RepeatingCallback.208", %"class.base::RepeatingCallback.208"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %37, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %38) #10
  call void @_ZN28KeyedServiceShutdownNotifier9SubscribeEN4base12OnceCallbackIFvvEEE(%"class.base::CallbackListSubscription"* nonnull sret %4, %class.KeyedServiceShutdownNotifier* %29, %"class.base::OnceCallback"* nonnull %5) #10
  %39 = call dereferenceable(8) %"class.base::CallbackListSubscription"* @_ZN4base24CallbackListSubscriptionaSEOS0_(%"class.base::CallbackListSubscription"* %9, %"class.base::CallbackListSubscription"* nonnull dereferenceable(8) %4) #10
  call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* nonnull %4) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #10
  %40 = getelementptr inbounds %"class.base::RepeatingCallback.208", %"class.base::RepeatingCallback.208"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  ret void
}

declare void @_ZN4base24CallbackListSubscriptionC1Ev(%"class.base::CallbackListSubscription"*) unnamed_addr #1

declare %class.KeyedServiceShutdownNotifier* @_ZN49BrowserContextKeyedServiceShutdownNotifierFactory3GetEPN7content14BrowserContextE(%class.BrowserContextKeyedServiceShutdownNotifierFactory*, %"class.content::BrowserContext"*) local_unnamed_addr #1

declare void @_ZN28KeyedServiceShutdownNotifier9SubscribeEN4base12OnceCallbackIFvvEEE(%"class.base::CallbackListSubscription"* sret, %class.KeyedServiceShutdownNotifier*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl18ShutdownOnUIThreadEv(%class.PluginInfoHostImpl*) #0 align 2 {
  %2 = alloca %"class.base::CallbackListSubscription", align 8
  %3 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 4
  %4 = bitcast %class.PrefMember* %3 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBase7DestroyEv(%"class.subtle::PrefMemberBase"* %4) #10
  %5 = bitcast %"class.base::CallbackListSubscription"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  call void @_ZN4base24CallbackListSubscriptionC1Ev(%"class.base::CallbackListSubscription"* nonnull %2) #10
  %6 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 2
  %7 = call dereferenceable(8) %"class.base::CallbackListSubscription"* @_ZN4base24CallbackListSubscriptionaSEOS0_(%"class.base::CallbackListSubscription"* %6, %"class.base::CallbackListSubscription"* nonnull dereferenceable(8) %2) #10
  call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

declare dereferenceable(8) %"class.base::CallbackListSubscription"* @_ZN4base24CallbackListSubscriptionaSEOS0_(%"class.base::CallbackListSubscription"*, %"class.base::CallbackListSubscription"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl17RegisterUserPrefsEPN10user_prefs20PrefRegistrySyncableE(%"class.user_prefs::PrefRegistrySyncable"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.user_prefs::PrefRegistrySyncable", %"class.user_prefs::PrefRegistrySyncable"* %0, i64 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kPluginsAllowOutdatedE, i64 0, i64 0)) #10
  %6 = icmp ugt i64 %5, -17
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %8) #11
  unreachable

9:                                                ; preds = %1
  %10 = icmp ult i64 %5, 23
  br i1 %10, label %20, label %11

11:                                               ; preds = %9
  %12 = add nuw i64 %5, 16
  %13 = and i64 %12, -16
  %14 = tail call i8* @_Znwm(i64 %13) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = or i64 %13, -9223372036854775808
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %5, i64* %18, align 8
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %25

20:                                               ; preds = %9
  %21 = trunc i64 %5 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %5, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20, %11
  %26 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %19, %11 ]
  %27 = phi i8* [ %4, %20 ], [ %14, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5prefs21kPluginsAllowOutdatedE, i64 0, i64 0), i64 %5, i1 false) #10
  br label %28

28:                                               ; preds = %20, %25
  %29 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %20 ], [ %26, %25 ]
  %30 = phi i8* [ %4, %20 ], [ %27, %25 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 %5
  store i8 0, i8* %31, align 1
  call void @_ZN18PrefRegistrySimple19RegisterBooleanPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbj(%class.PrefRegistrySimple* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i1 zeroext false, i32 0) #10
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %28, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

declare void @_ZN18PrefRegistrySimple19RegisterBooleanPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEbj(%class.PrefRegistrySimple*, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImplD2Ev(%class.PluginInfoHostImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV18PluginInfoHostImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 2
  tail call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* %4) #10
  %5 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 4
  %6 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 4, i32 1, i32 0
  %8 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %7, align 8
  %9 = icmp eq %"class.PrefMember<bool>::Internal"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe.182"* %16 to %"class.subtle::PrefMemberBase::Internal"*
  %18 = bitcast %"class.base::RefCountedThreadSafe.182"* %16 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %19 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %19, i64 1
  %21 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %20, align 8
  tail call void %21(%"class.subtle::PrefMemberBase::Internal"* nonnull %17) #10
  br label %22

22:                                               ; preds = %15, %10, %1
  %23 = bitcast %class.PrefMember* %5 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %23) #10
  %24 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 3, i32 0
  %25 = load %class.PluginPrefs*, %class.PluginPrefs** %24, align 8
  %26 = icmp eq %class.PluginPrefs* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.PluginPrefs, %class.PluginPrefs* %25, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %class.RefcountedKeyedService*
  tail call void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService* %34) #10
  br label %35

35:                                               ; preds = %22, %27, %32
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImplD0Ev(%class.PluginInfoHostImpl*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV18PluginInfoHostImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 2
  tail call void @_ZN4base24CallbackListSubscriptionD1Ev(%"class.base::CallbackListSubscription"* %4) #10
  %5 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 4
  %6 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 4, i32 1, i32 0
  %8 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %7, align 8
  %9 = icmp eq %"class.PrefMember<bool>::Internal"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %8, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe.182"* %16 to %"class.subtle::PrefMemberBase::Internal"*
  %18 = bitcast %"class.base::RefCountedThreadSafe.182"* %16 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %19 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %19, i64 1
  %21 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %20, align 8
  tail call void %21(%"class.subtle::PrefMemberBase::Internal"* nonnull %17) #10
  br label %22

22:                                               ; preds = %15, %10, %1
  %23 = bitcast %class.PrefMember* %5 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %23) #10
  %24 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 3, i32 0
  %25 = load %class.PluginPrefs*, %class.PluginPrefs** %24, align 8
  %26 = icmp eq %class.PluginPrefs* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.PluginPrefs, %class.PluginPrefs* %25, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %class.RefcountedKeyedService*
  tail call void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService* %34) #10
  br label %35

35:                                               ; preds = %22, %27, %32
  %36 = bitcast %class.PluginInfoHostImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl13GetPluginInfoEiRK4GURLRKN3url6OriginERKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEN4base12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEE(%class.PluginInfoHostImpl*, i32, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.base::OnceCallback.218"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"struct.PluginInfoHostImpl::GetPluginInfo_Params", align 8
  %9 = alloca %"class.base::OnceCallback.219", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to { i64, i64 }*
  %12 = alloca %"class.base::WeakPtr.220", align 8
  %13 = bitcast %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 232, i1 false)
  %14 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %8, i64 0, i32 0
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %8, i64 0, i32 1
  call void @_ZN4GURLC1ERKS_(%class.GURL* %15, %class.GURL* dereferenceable(120) %2) #10
  %16 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %8, i64 0, i32 2
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %16, %"class.url::Origin"* dereferenceable(80) %3) #10
  %17 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %8, i64 0, i32 3
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %6
  %23 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #10
  br label %30

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %27, i64 %29) #10
  br label %30

30:                                               ; preds = %22, %25
  %31 = call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #10
  %32 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  store <2 x i64> <i64 ptrtoint (void (%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*, %"class.base::OnceCallback.218"*, %"class.std::__1::vector.221"*)* @_ZN18PluginInfoHostImpl13PluginsLoadedERKNS_20GetPluginInfo_ParamsEN4base12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSD_9allocatorISG_EEEE to i64), i64 0>, <2 x i64>* %10, align 16
  %33 = bitcast %"class.base::WeakPtr.220"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #10
  %34 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10, !noalias !7
  %35 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 3, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %35) #10, !noalias !7
  %36 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 3, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !7
  %38 = getelementptr inbounds %"class.base::WeakPtr.220", %"class.base::WeakPtr.220"* %12, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %38, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %37) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10, !noalias !7
  %39 = call i8* @_Znwm(i64 304) #12, !noalias !10
  %40 = bitcast i8* %39 to %"struct.base::internal::BindState.439"*
  call void @_ZN4base8internal9BindStateIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS2_EES3_SE_EEC2ISP_JSR_RS3_SE_EEENSF_17integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.439"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.221"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSG_9allocatorISJ_EEEEEJNS_7WeakPtrIS3_EES4_SF_EEEFvSO_EE7RunOnceEPNS0_13BindStateBaseESO_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %11, %"class.base::WeakPtr.220"* nonnull dereferenceable(16) %12, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* nonnull dereferenceable(232) %8, %"class.base::OnceCallback.218"* dereferenceable(8) %5) #10, !noalias !10
  %41 = bitcast %"class.base::OnceCallback.219"* %9 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !10
  %42 = bitcast %"class.content::PluginService"* %31 to void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)***
  %43 = load void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)**, void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)*, void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)** %43, i64 7
  %45 = load void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)*, void (%"class.content::PluginService"*, %"class.base::OnceCallback.219"*)** %44, align 8
  call void %45(%"class.content::PluginService"* %31, %"class.base::OnceCallback.219"* nonnull %9) #10
  %46 = getelementptr inbounds %"class.base::OnceCallback.219", %"class.base::OnceCallback.219"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  %47 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %30
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %30, %51
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %16) #10
  call void @_ZN4GURLD1Ev(%class.GURL* %15) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %13) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

declare %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl13PluginsLoadedERKNS_20GetPluginInfo_ParamsEN4base12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSD_9allocatorISG_EEEE(%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* dereferenceable(232), %"class.base::OnceCallback.218"* nocapture, %"class.std::__1::vector.221"* nocapture readnone) #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.258", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.base::OnceCallback.218", align 8
  %8 = tail call i8* @_Znwm(i64 216) #12, !noalias !15
  %9 = bitcast i8* %8 to %"class.chrome::mojom::PluginInfo"*
  tail call void @_ZN6chrome5mojom10PluginInfoC1Ev(%"class.chrome::mojom::PluginInfo"* nonnull %9) #10, !noalias !15
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.std::__1::unique_ptr.258"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.258"* %5 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %1, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %1, i64 0, i32 3
  %20 = bitcast i8* %8 to i32*
  %21 = getelementptr inbounds i8, i8* %8, i64 8
  %22 = bitcast i8* %21 to %"struct.content::WebPluginInfo"*
  %23 = getelementptr inbounds i8, i8* %8, i64 144
  %24 = bitcast i8* %23 to %"class.std::__1::basic_string"*
  %25 = call zeroext i1 @_ZNK18PluginInfoHostImpl7Context17FindEnabledPluginEiRK4GURLRKN3url6OriginERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEPN6chrome5mojom12PluginStatusEPN7content13WebPluginInfoEPSE_PNS8_10unique_ptrI14PluginMetadataNS8_14default_deleteISQ_EEEE(%"class.PluginInfoHostImpl::Context"* %14, i32 %16, %class.GURL* dereferenceable(120) %17, %"class.url::Origin"* dereferenceable(80) %18, %"class.std::__1::basic_string"* dereferenceable(24) %19, i32* nonnull %20, %"struct.content::WebPluginInfo"* %22, %"class.std::__1::basic_string"* %24, %"class.std::__1::unique_ptr.258"* nonnull %5)
  br i1 %25, label %26, label %31

26:                                               ; preds = %4
  %27 = load %class.PluginMetadata*, %class.PluginMetadata** %12, align 8
  %28 = call i32 @_ZNK14PluginMetadata17GetSecurityStatusERKN7content13WebPluginInfoE(%class.PluginMetadata* %27, %"struct.content::WebPluginInfo"* dereferenceable(136) %22) #10
  %29 = load %class.PluginMetadata*, %class.PluginMetadata** %12, align 8
  %30 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %29, i64 0, i32 0
  call void @_ZNK18PluginInfoHostImpl7Context18DecidePluginStatusERK4GURLRKN3url6OriginERKN7content13WebPluginInfoEN14PluginMetadata14SecurityStatusERKNSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEPN6chrome5mojom12PluginStatusE(%"class.PluginInfoHostImpl::Context"* %14, %class.GURL* dereferenceable(120) %17, %"class.url::Origin"* dereferenceable(80) %18, %"struct.content::WebPluginInfo"* dereferenceable(136) %22, i32 %28, %"class.std::__1::basic_string"* dereferenceable(24) %30, i32* nonnull %20)
  br label %31

31:                                               ; preds = %26, %4
  %32 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback.218"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback.218"* %7 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = load %class.PluginMetadata*, %class.PluginMetadata** %12, align 8
  store %class.PluginMetadata* null, %class.PluginMetadata** %12, align 8
  call void @_ZN18PluginInfoHostImpl19GetPluginInfoFinishERKNS_20GetPluginInfo_ParamsEN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEN4base12OnceCallbackIFvS8_EEENSt3__110unique_ptrI14PluginMetadataNSD_14default_deleteISF_EEEE(%class.PluginInfoHostImpl* %0, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* dereferenceable(232) undef, %"class.mojo::StructPtr"* nonnull %6, %"class.base::OnceCallback.218"* nonnull %7, %class.PluginMetadata* %38)
  %39 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #10
  %40 = load %"class.chrome::mojom::PluginInfo"*, %"class.chrome::mojom::PluginInfo"** %33, align 8
  store %"class.chrome::mojom::PluginInfo"* null, %"class.chrome::mojom::PluginInfo"** %33, align 8
  %41 = icmp eq %"class.chrome::mojom::PluginInfo"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  call void @_ZN6chrome5mojom10PluginInfoD1Ev(%"class.chrome::mojom::PluginInfo"* nonnull %40) #10
  %43 = bitcast %"class.chrome::mojom::PluginInfo"* %40 to i8*
  call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %31, %42
  %45 = load %class.PluginMetadata*, %class.PluginMetadata** %12, align 8
  store %class.PluginMetadata* null, %class.PluginMetadata** %12, align 8
  %46 = icmp eq %class.PluginMetadata* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  call void @_ZN14PluginMetadataD1Ev(%class.PluginMetadata* nonnull %45) #10
  %48 = bitcast %class.PluginMetadata* %45 to i8*
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %47, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18PluginInfoHostImpl7Context17FindEnabledPluginEiRK4GURLRKN3url6OriginERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEPN6chrome5mojom12PluginStatusEPN7content13WebPluginInfoEPSE_PNS8_10unique_ptrI14PluginMetadataNS8_14default_deleteISQ_EEEE(%"class.PluginInfoHostImpl::Context"* nocapture readonly, i32, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.std::__1::basic_string"* dereferenceable(24), i32* nocapture, %"struct.content::WebPluginInfo"*, %"class.std::__1::basic_string"*, %"class.std::__1::unique_ptr.258"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.std::__1::vector.221", align 8
  %11 = alloca %"class.std::__1::vector.236", align 8
  store i32 0, i32* %5, align 4
  %12 = bitcast %"class.std::__1::vector.221"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %10, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.221", %"class.std::__1::vector.221"* %10, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10
  %15 = bitcast %"class.std::__1::vector.236"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.std::__1::vector.236", %"class.std::__1::vector.236"* %11, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.236", %"class.std::__1::vector.236"* %11, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %18 = tail call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #10
  %19 = bitcast %"class.content::PluginService"* %18 to i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)***
  %20 = load i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)**, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)*, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)** %20, i64 3
  %22 = load i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)*, i1 (%"class.content::PluginService"*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.221"*, %"class.std::__1::vector.236"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.content::PluginService"* %18, %class.GURL* dereferenceable(120) %2, %"class.std::__1::basic_string"* dereferenceable(24) %4, i1 zeroext true, %"class.std::__1::vector.221"* nonnull %10, %"class.std::__1::vector.236"* nonnull %11) #10
  %24 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %13, align 8
  %25 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %14, align 8
  %26 = icmp eq %"struct.content::WebPluginInfo"* %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %9
  store i32 6, i32* %5, align 4
  br label %126

28:                                               ; preds = %9
  %29 = call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #10
  %30 = bitcast %"class.content::PluginService"* %29 to %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)***
  %31 = load %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)**, %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)*, %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)** %31, i64 10
  %33 = load %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)*, %"class.content::PluginServiceFilter"* (%"class.content::PluginService"*)** %32, align 8
  %34 = call %"class.content::PluginServiceFilter"* %33(%"class.content::PluginService"* %29) #10
  %35 = bitcast %"struct.content::WebPluginInfo"** %14 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.221"* %10 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %36, %38
  %40 = icmp ne %"class.content::PluginServiceFilter"* %34, null
  %41 = and i1 %40, %39
  %42 = inttoptr i64 %38 to %"struct.content::WebPluginInfo"*
  br i1 %41, label %43, label %69

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 0
  %45 = bitcast %"class.content::PluginServiceFilter"* %34 to i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)***
  br label %46

46:                                               ; preds = %43, %59
  %47 = phi %"struct.content::WebPluginInfo"* [ %42, %43 ], [ %66, %59 ]
  %48 = phi i64 [ 0, %43 ], [ %60, %59 ]
  %49 = load i32, i32* %44, align 8
  %50 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %47, i64 %48
  %51 = load i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)**, i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)*** %45, align 8
  %52 = getelementptr inbounds i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)*, i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)** %51, i64 2
  %53 = load i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)*, i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.content::PluginServiceFilter"* nonnull %34, i32 %49, i32 %1, %class.GURL* dereferenceable(120) %2, %"class.url::Origin"* dereferenceable(80) %3, %"struct.content::WebPluginInfo"* %50) #10
  br i1 %54, label %55, label %59

55:                                               ; preds = %46
  %56 = load i64, i64* %35, align 8
  %57 = load i64, i64* %37, align 8
  %58 = inttoptr i64 %57 to %"struct.content::WebPluginInfo"*
  br label %69

59:                                               ; preds = %46
  %60 = add nuw i64 %48, 1
  %61 = load i64, i64* %35, align 8
  %62 = load i64, i64* %37, align 8
  %63 = sub i64 %61, %62
  %64 = sdiv exact i64 %63, 136
  %65 = icmp ult i64 %60, %64
  %66 = inttoptr i64 %62 to %"struct.content::WebPluginInfo"*
  br i1 %65, label %46, label %67

67:                                               ; preds = %59
  %68 = inttoptr i64 %62 to %"struct.content::WebPluginInfo"*
  br label %69

69:                                               ; preds = %67, %55, %28
  %70 = phi %"struct.content::WebPluginInfo"* [ %42, %28 ], [ %58, %55 ], [ %68, %67 ]
  %71 = phi i64 [ %38, %28 ], [ %57, %55 ], [ %62, %67 ]
  %72 = phi i64 [ %36, %28 ], [ %56, %55 ], [ %61, %67 ]
  %73 = phi i64 [ 0, %28 ], [ %48, %55 ], [ %60, %67 ]
  %74 = sub i64 %72, %71
  %75 = sdiv exact i64 %74, 136
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %69
  store i32 4, i32* %5, align 4
  br label %78

78:                                               ; preds = %77, %69
  %79 = phi i64 [ %73, %69 ], [ 0, %77 ]
  %80 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %70, i64 %79
  %81 = call dereferenceable(136) %"struct.content::WebPluginInfo"* @_ZN7content13WebPluginInfoaSERKS0_(%"struct.content::WebPluginInfo"* %6, %"struct.content::WebPluginInfo"* dereferenceable(136) %80) #10
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 %79
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %7
  br i1 %84, label %114, label %85

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %89, label %104, label %94

94:                                               ; preds = %85
  br i1 %93, label %98, label %95

95:                                               ; preds = %94
  %96 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %97 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #10
  br label %114

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 %79, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %100, i64 %102) #10
  br label %114

104:                                              ; preds = %85
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 %79, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  %110 = zext i8 %92 to i64
  %111 = select i1 %93, i8* %106, i8* %109
  %112 = select i1 %93, i64 %108, i64 %110
  %113 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %111, i64 %112) #10
  br label %114

114:                                              ; preds = %78, %95, %98, %104
  %115 = icmp eq %"class.std::__1::unique_ptr.258"* %8, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %114
  %117 = call %class.PluginFinder* @_ZN12PluginFinder11GetInstanceEv() #10
  %118 = call %class.PluginMetadata* @_ZN12PluginFinder17GetPluginMetadataERKN7content13WebPluginInfoE(%class.PluginFinder* %117, %"struct.content::WebPluginInfo"* dereferenceable(136) %6) #10
  %119 = ptrtoint %class.PluginMetadata* %118 to i64
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %8, i64 0, i32 0, i32 0, i32 0
  %121 = load %class.PluginMetadata*, %class.PluginMetadata** %120, align 8
  %122 = bitcast %"class.std::__1::unique_ptr.258"* %8 to i64*
  store i64 %119, i64* %122, align 8
  %123 = icmp eq %class.PluginMetadata* %121, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %116
  call void @_ZN14PluginMetadataD1Ev(%class.PluginMetadata* nonnull %121) #10
  %125 = bitcast %class.PluginMetadata* %121 to i8*
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %116, %124, %114, %27
  %127 = phi i1 [ false, %27 ], [ %76, %114 ], [ %76, %124 ], [ %76, %116 ]
  %128 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %129 = icmp eq %"class.std::__1::basic_string"* %128, null
  br i1 %129, label %151, label %130

130:                                              ; preds = %126
  %131 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  %132 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %133 = icmp eq %"class.std::__1::basic_string"* %132, %128
  br i1 %133, label %149, label %134

134:                                              ; preds = %130, %144
  %135 = phi %"class.std::__1::basic_string"* [ %136, %144 ], [ %132, %130 ]
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 -1
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %141, %134
  %145 = icmp eq %"class.std::__1::basic_string"* %136, %128
  br i1 %145, label %146, label %134

146:                                              ; preds = %144
  %147 = bitcast %"class.std::__1::vector.236"* %11 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %130
  %150 = phi i8* [ %148, %146 ], [ %131, %130 ]
  store %"class.std::__1::basic_string"* %128, %"class.std::__1::basic_string"** %17, align 8
  call void @_ZdlPv(i8* %150) #12
  br label %151

151:                                              ; preds = %126, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  %152 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %13, align 8
  %153 = icmp eq %"struct.content::WebPluginInfo"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = bitcast %"struct.content::WebPluginInfo"* %152 to i8*
  %156 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %14, align 8
  %157 = icmp eq %"struct.content::WebPluginInfo"* %156, %152
  br i1 %157, label %165, label %158

158:                                              ; preds = %154, %158
  %159 = phi %"struct.content::WebPluginInfo"* [ %160, %158 ], [ %156, %154 ]
  %160 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %159, i64 -1
  call void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"* %160) #10
  %161 = icmp eq %"struct.content::WebPluginInfo"* %160, %152
  br i1 %161, label %162, label %158

162:                                              ; preds = %158
  %163 = bitcast %"class.std::__1::vector.221"* %10 to i8**
  %164 = load i8*, i8** %163, align 8
  br label %165

165:                                              ; preds = %162, %154
  %166 = phi i8* [ %164, %162 ], [ %155, %154 ]
  store %"struct.content::WebPluginInfo"* %152, %"struct.content::WebPluginInfo"** %14, align 8
  call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %151, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  ret i1 %127
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18PluginInfoHostImpl7Context18DecidePluginStatusERK4GURLRKN3url6OriginERKN7content13WebPluginInfoEN14PluginMetadata14SecurityStatusERKNSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEPN6chrome5mojom12PluginStatusE(%"class.PluginInfoHostImpl::Context"*, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"struct.content::WebPluginInfo"* dereferenceable(136), i32, %"class.std::__1::basic_string"* dereferenceable(24), i32* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::allocator.179", align 1
  %9 = alloca %"class.std::__1::allocator.179", align 1
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  switch i32 %4, label %19 [
    i32 3, label %17
    i32 4, label %18
  ]

17:                                               ; preds = %7
  store i32 0, i32* %6, align 4
  br label %233

18:                                               ; preds = %7
  store i32 9, i32* %6, align 4
  br label %233

19:                                               ; preds = %7
  %20 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  store i32 0, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #10
  store i8 1, i8* %15, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #10
  store i8 0, i8* %16, align 1
  %21 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 2
  %22 = load %class.HostContentSettingsMap*, %class.HostContentSettingsMap** %21, align 8
  call void @_ZN11PluginUtils23GetPluginContentSettingEPK22HostContentSettingsMapRKN7content13WebPluginInfoERKN3url6OriginERK4GURLRKNSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEP14ContentSettingPbSP_(%class.HostContentSettingsMap* %22, %"struct.content::WebPluginInfo"* dereferenceable(136) %3, %"class.url::Origin"* dereferenceable(80) %2, %class.GURL* dereferenceable(120) %1, %"class.std::__1::basic_string"* dereferenceable(24) %5, i32* nonnull %14, i8* nonnull %15, i8* nonnull %16) #10
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 5
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = load i32, i32* %14, align 4
  %27 = icmp eq i32 %26, 2
  br i1 %27, label %28, label %232

28:                                               ; preds = %25
  %29 = load i8, i8* %16, align 1, !range !18
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 3, i32 2
  store i32 %31, i32* %6, align 4
  br label %232

32:                                               ; preds = %19
  %33 = icmp eq i32 %4, 1
  br i1 %33, label %34, label %49

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4
  %36 = bitcast %class.PrefMember* %35 to %"class.subtle::PrefMemberBase"*
  call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %36) #10
  %37 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 4, i32 1, i32 0
  %38 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %37, align 8
  %39 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %38, i64 0, i32 1
  %40 = load i8, i8* %39, align 1, !range !18
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %34
  call void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"* %36) #10
  %43 = bitcast %"class.PrefMember<bool>::Internal"** %37 to %"class.subtle::PrefMemberBase::Internal"**
  %44 = load %"class.subtle::PrefMemberBase::Internal"*, %"class.subtle::PrefMemberBase::Internal"** %43, align 8
  %45 = getelementptr inbounds %"class.subtle::PrefMemberBase::Internal", %"class.subtle::PrefMemberBase::Internal"* %44, i64 0, i32 4
  %46 = load i8, i8* %45, align 8, !range !18
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 7, i32 8
  store i32 %48, i32* %6, align 4
  br label %232

49:                                               ; preds = %34, %32
  %50 = call %"class.content::PluginService"* @_ZN7content13PluginService11GetInstanceEv() #10
  %51 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %3, i64 0, i32 1
  %52 = bitcast %"class.content::PluginService"* %50 to i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)***
  %53 = load i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)**, i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)*, i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)** %53, i64 11
  %55 = load i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)*, i1 (%"class.content::PluginService"*, %"class.base::FilePath"*)** %54, align 8
  %56 = call zeroext i1 %55(%"class.content::PluginService"* %50, %"class.base::FilePath"* dereferenceable(24) %51) #10
  %57 = load i32, i32* %14, align 4
  %58 = icmp ne i32 %57, 2
  %59 = and i1 %56, %58
  %60 = xor i1 %59, true
  %61 = load i8, i8* %15, align 1
  %62 = icmp eq i8 %61, 0
  %63 = or i1 %62, %60
  br i1 %63, label %65, label %64

64:                                               ; preds = %49
  store i32 11, i32* %6, align 4
  br label %232

65:                                               ; preds = %49
  %66 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #10
  %67 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0), i64 %66) #10
  br i1 %67, label %68, label %209

68:                                               ; preds = %65
  %69 = load i8, i8* %16, align 1, !range !18
  %70 = icmp eq i8 %69, 0
  %71 = load i32, i32* %14, align 4
  %72 = icmp eq i32 %71, 2
  %73 = and i1 %70, %72
  br i1 %73, label %74, label %211

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 1
  %76 = load %"class.extensions::ExtensionRegistry"*, %"class.extensions::ExtensionRegistry"** %75, align 8
  %77 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = call %"class.extensions::WebViewRendererState"* @_ZN10extensions20WebViewRendererState11GetInstanceEv() #10
  %80 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #10
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 24, i1 false) #10
  %82 = call zeroext i1 @_ZNK10extensions20WebViewRendererState7IsGuestEi(%"class.extensions::WebViewRendererState"* %79, i32 %78) #10
  br i1 %82, label %83, label %199

83:                                               ; preds = %74
  %84 = call zeroext i1 @_ZNK10extensions20WebViewRendererState14GetPartitionIDEiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::WebViewRendererState"* %79, i32 %78, %"class.std::__1::basic_string"* nonnull %10) #10
  br i1 %84, label %85, label %199

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #10
  %90 = load i32, i32* %89, align 4, !noalias !19
  %91 = icmp slt i32 %90, 1
  br i1 %91, label %92, label %93

92:                                               ; preds = %85
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #10, !alias.scope !19
  br label %100

93:                                               ; preds = %85
  %94 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %95 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %96 = load i32, i32* %95, align 4, !noalias !19
  %97 = sext i32 %96 to i64
  %98 = sext i32 %90 to i64
  %99 = getelementptr inbounds %"class.std::__1::allocator.179", %"class.std::__1::allocator.179"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %99) #10, !noalias !19
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* dereferenceable(24) %94, i64 %97, i64 %98, %"class.std::__1::allocator.179"* nonnull dereferenceable(1) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %99) #10, !noalias !19
  br label %100

100:                                              ; preds = %93, %92
  %101 = call %"class.extensions::Extension"* @_ZNK10extensions17ExtensionRegistry16GetExtensionByIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.extensions::ExtensionRegistry"* %76, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i32 1) #10
  %102 = icmp eq %"class.extensions::Extension"* %101, null
  br i1 %102, label %190, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #10
  %105 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 1
  %106 = load i32, i32* %105, align 4, !noalias !24
  %107 = icmp slt i32 %106, 1
  br i1 %107, label %108, label %109

108:                                              ; preds = %103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #10, !alias.scope !24
  br label %116

109:                                              ; preds = %103
  %110 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %111 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 5, i32 0
  %112 = load i32, i32* %111, align 4, !noalias !24
  %113 = sext i32 %112 to i64
  %114 = sext i32 %106 to i64
  %115 = getelementptr inbounds %"class.std::__1::allocator.179", %"class.std::__1::allocator.179"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %115) #10, !noalias !24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %110, i64 %113, i64 %114, %"class.std::__1::allocator.179"* nonnull dereferenceable(1) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #10, !noalias !24
  br label %116

116:                                              ; preds = %109, %108
  %117 = call zeroext i1 @_ZN10extensions11WebviewInfo27IsResourceWebviewAccessibleEPKNS_9ExtensionERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_(%"class.extensions::Extension"* nonnull %101, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #10
  %118 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %122, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #10
  br i1 %117, label %126, label %190

126:                                              ; preds = %125
  %127 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 24, i1 false) #10
  %129 = call zeroext i1 @_ZNK10extensions20WebViewRendererState12GetOwnerInfoEiPiPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::WebViewRendererState"* %79, i32 %78, i32* null, %"class.std::__1::basic_string"* nonnull %13) #10
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  br label %179

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  %140 = load i64, i64* %135, align 8
  %141 = zext i8 %138 to i64
  %142 = select i1 %139, i64 %140, i64 %141
  %143 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %144 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, 0
  %147 = load i64, i64* %88, align 8
  %148 = zext i8 %145 to i64
  %149 = select i1 %146, i64 %147, i64 %148
  %150 = icmp eq i64 %142, %149
  br i1 %150, label %151, label %179

151:                                              ; preds = %134
  %152 = load i8*, i8** %128, align 8
  %153 = select i1 %139, i8* %152, i8* %127
  %154 = load i8*, i8** %87, align 8
  %155 = select i1 %146, i8* %154, i8* %86
  %156 = icmp eq i64 %142, 0
  br i1 %139, label %163, label %157

157:                                              ; preds = %151
  br i1 %156, label %188, label %158

158:                                              ; preds = %157
  %159 = ptrtoint i8* %152 to i64
  %160 = trunc i64 %159 to i8
  %161 = load i8, i8* %155, align 1
  %162 = icmp eq i8 %161, %160
  br i1 %162, label %167, label %188

163:                                              ; preds = %151
  br i1 %156, label %185, label %164

164:                                              ; preds = %163
  %165 = call i32 @bcmp(i8* %153, i8* %155, i64 %142) #10
  %166 = icmp eq i32 %165, 0
  br label %185

167:                                              ; preds = %158, %174
  %168 = phi i64 [ %171, %174 ], [ %141, %158 ]
  %169 = phi i8* [ %172, %174 ], [ %127, %158 ]
  %170 = phi i8* [ %175, %174 ], [ %155, %158 ]
  %171 = add i64 %168, -1
  %172 = getelementptr inbounds i8, i8* %169, i64 1
  %173 = icmp eq i64 %171, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds i8, i8* %170, i64 1
  %176 = load i8, i8* %172, align 1
  %177 = load i8, i8* %175, align 1
  %178 = icmp eq i8 %176, %177
  br i1 %178, label %167, label %179

179:                                              ; preds = %174, %167, %134, %130
  %180 = phi i8 [ %133, %130 ], [ %138, %134 ], [ %138, %167 ], [ %138, %174 ]
  %181 = phi i1 [ false, %130 ], [ false, %134 ], [ false, %174 ], [ true, %167 ]
  %182 = icmp slt i8 %180, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %179
  %184 = load i8*, i8** %128, align 8
  br label %185

185:                                              ; preds = %183, %164, %163
  %186 = phi i8* [ %184, %183 ], [ %152, %163 ], [ %152, %164 ]
  %187 = phi i1 [ %181, %183 ], [ true, %163 ], [ %166, %164 ]
  call void @_ZdlPv(i8* %186) #12
  br label %188

188:                                              ; preds = %158, %185, %179, %157
  %189 = phi i1 [ %181, %179 ], [ %187, %185 ], [ true, %157 ], [ false, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  br label %190

190:                                              ; preds = %188, %125, %100
  %191 = phi i1 [ %189, %188 ], [ false, %125 ], [ false, %100 ]
  %192 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %190
  %197 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %197) #12
  br label %198

198:                                              ; preds = %196, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  br label %199

199:                                              ; preds = %198, %83, %74
  %200 = phi i1 [ %191, %198 ], [ false, %83 ], [ false, %74 ]
  %201 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %199
  %206 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %206) #12
  br label %207

207:                                              ; preds = %199, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #10
  br i1 %200, label %208, label %209

208:                                              ; preds = %207
  store i32 1, i32* %14, align 4
  br label %215

209:                                              ; preds = %207, %65
  %210 = load i32, i32* %14, align 4
  br label %211

211:                                              ; preds = %209, %68
  %212 = phi i32 [ %210, %209 ], [ %71, %68 ]
  %213 = or i32 %212, 2
  %214 = icmp eq i32 %213, 3
  br i1 %214, label %215, label %216

215:                                              ; preds = %211, %208
  store i32 10, i32* %6, align 4
  br label %226

216:                                              ; preds = %211
  %217 = icmp eq i32 %212, 2
  br i1 %217, label %218, label %222

218:                                              ; preds = %216
  %219 = load i8, i8* %16, align 1, !range !18
  %220 = icmp eq i8 %219, 0
  %221 = select i1 %220, i32 1, i32 2
  store i32 %221, i32* %6, align 4
  br label %224

222:                                              ; preds = %216
  %223 = load i32, i32* %6, align 4
  br label %224

224:                                              ; preds = %222, %218
  %225 = phi i32 [ %223, %222 ], [ %221, %218 ]
  switch i32 %225, label %232 [
    i32 0, label %226
    i32 1, label %226
    i32 10, label %226
  ]

226:                                              ; preds = %215, %224, %224, %224
  %227 = call %"class.extensions::WebViewRendererState"* @_ZN10extensions20WebViewRendererState11GetInstanceEv() #10
  %228 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = call zeroext i1 @_ZNK10extensions20WebViewRendererState7IsGuestEi(%"class.extensions::WebViewRendererState"* %227, i32 %229) #10
  br i1 %230, label %231, label %232

231:                                              ; preds = %226
  store i32 11, i32* %6, align 4
  br label %232

232:                                              ; preds = %231, %226, %224, %25, %28, %64, %42
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  br label %233

233:                                              ; preds = %232, %17, %18
  ret void
}

declare i32 @_ZNK14PluginMetadata17GetSecurityStatusERKN7content13WebPluginInfoE(%class.PluginMetadata*, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18PluginInfoHostImpl19GetPluginInfoFinishERKNS_20GetPluginInfo_ParamsEN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEN4base12OnceCallbackIFvS8_EEENSt3__110unique_ptrI14PluginMetadataNSD_14default_deleteISF_EEEE(%class.PluginInfoHostImpl* nocapture readonly, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* nocapture readnone dereferenceable(232), %"class.mojo::StructPtr"* nocapture, %"class.base::OnceCallback.218"* nocapture, %class.PluginMetadata*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.218", align 8
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = icmp eq %class.PluginMetadata* %4, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.chrome::mojom::PluginInfo"*, %"class.chrome::mojom::PluginInfo"** %11, align 8
  %13 = getelementptr inbounds %"class.chrome::mojom::PluginInfo", %"class.chrome::mojom::PluginInfo"* %12, i64 0, i32 4
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %10
  br i1 %14, label %44, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %class.PluginMetadata* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %19, label %34, label %24

24:                                               ; preds = %15
  br i1 %23, label %28, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %27 = bitcast %class.PluginMetadata* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false) #10
  br label %44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %30, i64 %32) #10
  br label %44

34:                                               ; preds = %15
  %35 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.PluginMetadata* %4 to i8*
  %40 = zext i8 %22 to i64
  %41 = select i1 %23, i8* %36, i8* %39
  %42 = select i1 %23, i64 %38, i64 %40
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %13, i8* %41, i64 %42) #10
  br label %44

44:                                               ; preds = %9, %25, %28, %34
  %45 = getelementptr inbounds %class.PluginMetadata, %class.PluginMetadata* %4, i64 0, i32 1
  %46 = load %"class.chrome::mojom::PluginInfo"*, %"class.chrome::mojom::PluginInfo"** %11, align 8
  %47 = getelementptr inbounds %"class.chrome::mojom::PluginInfo", %"class.chrome::mojom::PluginInfo"* %46, i64 0, i32 5
  %48 = tail call dereferenceable(24) %"class.std::__1::basic_string.225"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.225"* %47, %"class.std::__1::basic_string.225"* dereferenceable(24) %45)
  br label %49

49:                                               ; preds = %5, %44
  %50 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.chrome::mojom::PluginInfo"*, %"class.chrome::mojom::PluginInfo"** %50, align 8
  %52 = getelementptr inbounds %"class.chrome::mojom::PluginInfo", %"class.chrome::mojom::PluginInfo"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  switch i32 %53, label %54 [
    i32 10, label %57
    i32 0, label %57
  ]

54:                                               ; preds = %49
  %55 = ptrtoint %"class.chrome::mojom::PluginInfo"* %51 to i64
  %56 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  br label %64

57:                                               ; preds = %49, %49
  %58 = getelementptr inbounds %"class.chrome::mojom::PluginInfo", %"class.chrome::mojom::PluginInfo"* %51, i64 0, i32 2, i32 1
  %59 = tail call %class.ChromePluginServiceFilter* @_ZN25ChromePluginServiceFilter11GetInstanceEv() #10
  %60 = getelementptr inbounds %class.PluginInfoHostImpl, %class.PluginInfoHostImpl* %0, i64 0, i32 1, i32 0
  %61 = load i32, i32* %60, align 8
  tail call void @_ZN25ChromePluginServiceFilter15AuthorizePluginEiRKN4base8FilePathE(%class.ChromePluginServiceFilter* %59, i32 %61, %"class.base::FilePath"* dereferenceable(24) %58) #10
  %62 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %54, %57
  %65 = phi i64* [ %56, %54 ], [ %62, %57 ]
  %66 = phi i64 [ %55, %54 ], [ %63, %57 ]
  %67 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %68 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  store i64 0, i64* %65, align 8
  %69 = bitcast %"class.base::OnceCallback.218"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10
  %70 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %3, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.base::OnceCallback.218"* %3 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.base::OnceCallback.218"* %6 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8
  %74 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %6, i64 0, i32 0
  %75 = inttoptr i64 %72 to %"class.base::internal::BindStateBase"*
  %76 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %75, i64 0, i32 1
  %77 = bitcast void ()** %76 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)**
  %78 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*)** %77, align 8
  call void %78(%"class.base::internal::BindStateBase"* %75, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %7) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %74) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10
  %79 = load %"class.chrome::mojom::PluginInfo"*, %"class.chrome::mojom::PluginInfo"** %68, align 8
  store %"class.chrome::mojom::PluginInfo"* null, %"class.chrome::mojom::PluginInfo"** %68, align 8
  %80 = icmp eq %"class.chrome::mojom::PluginInfo"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %64
  call void @_ZN6chrome5mojom10PluginInfoD1Ev(%"class.chrome::mojom::PluginInfo"* nonnull %79) #10
  %82 = bitcast %"class.chrome::mojom::PluginInfo"* %79 to i8*
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %64, %81
  br i1 %8, label %86, label %84

84:                                               ; preds = %83
  call void @_ZN14PluginMetadataD1Ev(%class.PluginMetadata* nonnull %4) #10
  %85 = bitcast %class.PluginMetadata* %4 to i8*
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %84
  ret void
}

declare void @_ZN11PluginUtils23GetPluginContentSettingEPK22HostContentSettingsMapRKN7content13WebPluginInfoERKN3url6OriginERK4GURLRKNSt3__112basic_stringIcNSE_11char_traitsIcEENSE_9allocatorIcEEEEP14ContentSettingPbSP_(%class.HostContentSettingsMap*, %"struct.content::WebPluginInfo"* dereferenceable(136), %"class.url::Origin"* dereferenceable(80), %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i32*, i8*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

declare %"class.extensions::WebViewRendererState"* @_ZN10extensions20WebViewRendererState11GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions20WebViewRendererState7IsGuestEi(%"class.extensions::WebViewRendererState"*, i32) local_unnamed_addr #1

declare dereferenceable(136) %"struct.content::WebPluginInfo"* @_ZN7content13WebPluginInfoaSERKS0_(%"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #1

declare %class.PluginFinder* @_ZN12PluginFinder11GetInstanceEv() local_unnamed_addr #1

declare %class.PluginMetadata* @_ZN12PluginFinder17GetPluginMetadataERKN7content13WebPluginInfoE(%class.PluginFinder*, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.225"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.225"*, %"class.std::__1::basic_string.225"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.225"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.225"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.225"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.225"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.225"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.225"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.225"*
  %35 = icmp ugt %"class.std::__1::basic_string.225"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !29
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !29
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !32, !noalias !29
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !32, !noalias !29
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !29
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !29
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !32, !noalias !29
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !32, !noalias !29
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !29
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !29
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !32, !noalias !29
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !32, !noalias !29
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !29
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !29
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !32, !noalias !29
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !32, !noalias !29
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !34

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !29
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !29
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !32, !noalias !29
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !32, !noalias !29
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !36

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !38

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !39

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.225"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !40
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !40
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !43, !noalias !40
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !43, !noalias !40
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !40
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !40
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !43, !noalias !40
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !43, !noalias !40
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !40
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !40
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !43, !noalias !40
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !43, !noalias !40
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !40
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !40
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !43, !noalias !40
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !43, !noalias !40
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !45

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !40
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !40
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !43, !noalias !40
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !43, !noalias !40
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !46

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !47

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !48

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.225"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.225"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !49
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !49
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !52, !noalias !49
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !52, !noalias !49
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !49
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !49
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !52, !noalias !49
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !52, !noalias !49
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !49
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !49
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !52, !noalias !49
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !52, !noalias !49
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !49
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !49
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !52, !noalias !49
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !52, !noalias !49
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !54

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !49
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !49
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !52, !noalias !49
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !52, !noalias !49
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !55

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !56

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !57

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.225"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.225"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18PluginInfoHostImpl7Context16MaybeGrantAccessEN6chrome5mojom12PluginStatusERKN4base8FilePathE(%"class.PluginInfoHostImpl::Context"* nocapture readonly, i32, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %8 [
    i32 10, label %4
    i32 0, label %4
  ]

4:                                                ; preds = %3, %3
  %5 = tail call %class.ChromePluginServiceFilter* @_ZN25ChromePluginServiceFilter11GetInstanceEv() #10
  %6 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN25ChromePluginServiceFilter15AuthorizePluginEiRKN4base8FilePathE(%class.ChromePluginServiceFilter* %5, i32 %7, %"class.base::FilePath"* dereferenceable(24) %2) #10
  br label %8

8:                                                ; preds = %3, %4
  ret void
}

declare %class.ChromePluginServiceFilter* @_ZN25ChromePluginServiceFilter11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN25ChromePluginServiceFilter15AuthorizePluginEiRKN4base8FilePathE(%class.ChromePluginServiceFilter*, i32, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18PluginInfoHostImpl7Context15IsPluginEnabledERKN7content13WebPluginInfoE(%"class.PluginInfoHostImpl::Context"* nocapture readonly, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.PluginInfoHostImpl::Context", %"class.PluginInfoHostImpl::Context"* %0, i64 0, i32 3, i32 0
  %4 = load %class.PluginPrefs*, %class.PluginPrefs** %3, align 8
  %5 = tail call zeroext i1 @_ZNK11PluginPrefs15IsPluginEnabledERKN7content13WebPluginInfoE(%class.PluginPrefs* %4, %"struct.content::WebPluginInfo"* dereferenceable(136) %1) #10
  ret i1 %5
}

declare zeroext i1 @_ZNK11PluginPrefs15IsPluginEnabledERKN7content13WebPluginInfoE(%class.PluginPrefs*, %"struct.content::WebPluginInfo"* dereferenceable(136)) local_unnamed_addr #1

declare zeroext i1 @_ZN6chrome5mojom14PluginInfoHost13GetPluginInfoEiRK4GURLRKN3url6OriginERKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEPN4mojo9StructPtrINS0_10PluginInfoEEE(%"class.chrome::mojom::PluginInfoHost"*, i32, %class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), %"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::StructPtr"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8* nocapture readnone) #0 align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*
  %6 = inttoptr i64 %2 to void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)***
  %7 = load void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)**, void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)*, void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)** %7, i64 1
  %9 = load void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)*, void (%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*)** %8, align 8
  tail call void %9(%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"* nonnull %5) #10
  br label %10

10:                                               ; preds = %1, %4
  store i64 0, i64* @_ZN4base9SingletonIN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN49BrowserContextKeyedServiceShutdownNotifierFactoryC2EPKc(%class.BrowserContextKeyedServiceShutdownNotifierFactory*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN49BrowserContextKeyedServiceShutdownNotifierFactoryD2Ev(%class.BrowserContextKeyedServiceShutdownNotifierFactory*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_141PluginInfoHostImplShutdownNotifierFactoryD0Ev(%"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory", %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"* %0, i64 0, i32 0
  tail call void @_ZN49BrowserContextKeyedServiceShutdownNotifierFactoryD2Ev(%class.BrowserContextKeyedServiceShutdownNotifierFactory* %2) #10
  %3 = bitcast %"class.(anonymous namespace)::PluginInfoHostImplShutdownNotifierFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

declare i8* @_ZNK33BrowserContextKeyedServiceFactory15GetContextToUseEPv(%class.BrowserContextKeyedServiceFactory*, i8*) unnamed_addr #1

declare zeroext i1 @_ZNK33BrowserContextKeyedServiceFactory27ServiceIsCreatedWithContextEv(%class.BrowserContextKeyedServiceFactory*) unnamed_addr #1

declare zeroext i1 @_ZNK33BrowserContextKeyedServiceFactory25ServiceIsNULLWhileTestingEv(%class.BrowserContextKeyedServiceFactory*) unnamed_addr #1

declare void @_ZN33BrowserContextKeyedServiceFactory15ContextShutdownEPv(%class.BrowserContextKeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZN33BrowserContextKeyedServiceFactory16ContextDestroyedEPv(%class.BrowserContextKeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZN33BrowserContextKeyedServiceFactory13RegisterPrefsEPN10user_prefs20PrefRegistrySyncableE(%class.BrowserContextKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*) unnamed_addr #1

declare void @_ZN19KeyedServiceFactory22SetEmptyTestingFactoryEPv(%class.KeyedServiceFactory*, i8*) unnamed_addr #1

declare zeroext i1 @_ZN19KeyedServiceFactory17HasTestingFactoryEPv(%class.KeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZN33BrowserContextKeyedServiceFactory16CreateServiceNowEPv(%class.BrowserContextKeyedServiceFactory*, i8*) unnamed_addr #1

declare void @_ZNK33BrowserContextKeyedServiceFactory23BuildServiceInstanceForEPv() unnamed_addr

declare zeroext i1 @_ZNK33BrowserContextKeyedServiceFactory14IsOffTheRecordEPv(%class.BrowserContextKeyedServiceFactory*, i8*) unnamed_addr #1

declare %"class.content::BrowserContext"* @_ZNK49BrowserContextKeyedServiceShutdownNotifierFactory22GetBrowserContextToUseEPN7content14BrowserContextE(%class.BrowserContextKeyedServiceShutdownNotifierFactory*, %"class.content::BrowserContext"*) unnamed_addr #1

declare zeroext i1 @_ZNK33BrowserContextKeyedServiceFactory34ServiceIsCreatedWithBrowserContextEv(%class.BrowserContextKeyedServiceFactory*) unnamed_addr #1

declare %class.KeyedService* @_ZNK49BrowserContextKeyedServiceShutdownNotifierFactory23BuildServiceInstanceForEPN7content14BrowserContextE(%class.BrowserContextKeyedServiceShutdownNotifierFactory*, %"class.content::BrowserContext"*) unnamed_addr #1

declare void @_ZN33BrowserContextKeyedServiceFactory22BrowserContextShutdownEPN7content14BrowserContextE(%class.BrowserContextKeyedServiceFactory*, %"class.content::BrowserContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN33BrowserContextKeyedServiceFactory20RegisterProfilePrefsEPN10user_prefs20PrefRegistrySyncableE(%class.BrowserContextKeyedServiceFactory*, %"class.user_prefs::PrefRegistrySyncable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6chrome5mojom10PluginInfoD1Ev(%"class.chrome::mojom::PluginInfo"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare zeroext i1 @_ZNK10extensions20WebViewRendererState14GetPartitionIDEiPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::WebViewRendererState"*, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare %"class.extensions::Extension"* @_ZNK10extensions17ExtensionRegistry16GetExtensionByIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.extensions::ExtensionRegistry"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN10extensions11WebviewInfo27IsResourceWebviewAccessibleEPKNS_9ExtensionERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_(%"class.extensions::Extension"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK10extensions20WebViewRendererState12GetOwnerInfoEiPiPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.extensions::WebViewRendererState"*, i32, i32*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.179"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZN4impl28RefcountedKeyedServiceTraits8DestructEPK22RefcountedKeyedService(%class.RefcountedKeyedService*) local_unnamed_addr #1

declare void @_ZN6subtle14PrefMemberBaseC2Ev(%"class.subtle::PrefMemberBase"*) unnamed_addr #1

declare void @_ZN6subtle14PrefMemberBase19OnPreferenceChangedEP11PrefServiceRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.subtle::PrefMemberBase"*, %class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10PrefMemberIbED0Ev(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV10PrefMemberIbE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1, i32 0
  %4 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %3, align 8
  %5 = icmp eq %"class.PrefMember<bool>::Internal"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.182"* %12 to %"class.subtle::PrefMemberBase::Internal"*
  %14 = bitcast %"class.base::RefCountedThreadSafe.182"* %12 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %15 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %15, i64 1
  %17 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %16, align 8
  tail call void %17(%"class.subtle::PrefMemberBase::Internal"* nonnull %13) #10
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %class.PrefMember* %0 to %"class.subtle::PrefMemberBase"*
  tail call void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"* %19) #10
  %20 = bitcast %class.PrefMember* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK10PrefMemberIbE14CreateInternalEv(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12
  %3 = bitcast i8* %2 to %"class.subtle::PrefMemberBase::Internal"*
  tail call void @_ZN6subtle14PrefMemberBase8InternalC2Ev(%"class.subtle::PrefMemberBase::Internal"* nonnull %3) #10
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10PrefMemberIbE8InternalE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 27
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  %10 = ptrtoint i8* %2 to i64
  %11 = bitcast %class.scoped_refptr.181* %6 to i64*
  %12 = getelementptr inbounds %class.scoped_refptr.181, %class.scoped_refptr.181* %6, i64 0, i32 0
  %13 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.PrefMember<bool>::Internal"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.PrefMember<bool>::Internal", %"class.PrefMember<bool>::Internal"* %13, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.182", %"class.base::RefCountedThreadSafe.182"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.182"* %21 to %"class.subtle::PrefMemberBase::Internal"*
  %23 = bitcast %"class.base::RefCountedThreadSafe.182"* %21 to void (%"class.subtle::PrefMemberBase::Internal"*)***
  %24 = load void (%"class.subtle::PrefMemberBase::Internal"*)**, void (%"class.subtle::PrefMemberBase::Internal"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %24, i64 1
  %26 = load void (%"class.subtle::PrefMemberBase::Internal"*)*, void (%"class.subtle::PrefMemberBase::Internal"*)** %25, align 8
  tail call void %26(%"class.subtle::PrefMemberBase::Internal"* nonnull %22) #10
  br label %27

27:                                               ; preds = %1, %15, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.PrefMember<bool>::Internal"* @_ZNK10PrefMemberIbE8internalEv(%class.PrefMember*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.PrefMember, %class.PrefMember* %0, i64 0, i32 1, i32 0
  %3 = load %"class.PrefMember<bool>::Internal"*, %"class.PrefMember<bool>::Internal"** %2, align 8
  ret %"class.PrefMember<bool>::Internal"* %3
}

declare void @_ZN6subtle14PrefMemberBase8InternalC2Ev(%"class.subtle::PrefMemberBase::Internal"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6subtle14PrefMemberBase8InternalD2Ev(%"class.subtle::PrefMemberBase::Internal"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10PrefMemberIbE8InternalD0Ev(%"class.PrefMember<bool>::Internal"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.PrefMember<bool>::Internal"* %0 to %"class.subtle::PrefMemberBase::Internal"*
  tail call void @_ZN6subtle14PrefMemberBase8InternalD2Ev(%"class.subtle::PrefMemberBase::Internal"* %2) #10
  %3 = bitcast %"class.PrefMember<bool>::Internal"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

declare zeroext i1 @_ZNK10PrefMemberIbE8Internal19UpdateValueInternalERKN4base5ValueE(%"class.PrefMember<bool>::Internal"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6subtle14PrefMemberBaseD2Ev(%"class.subtle::PrefMemberBase"*) unnamed_addr #3

declare void @_ZN6subtle14PrefMemberBase4InitERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEP11PrefService(%"class.subtle::PrefMemberBase"*, %"class.std::__1::basic_string"* dereferenceable(24), %class.PrefService*) local_unnamed_addr #1

declare void @_ZN6subtle14PrefMemberBase7DestroyEv(%"class.subtle::PrefMemberBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %class.PluginInfoHostImpl*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.PluginInfoHostImpl*)**
  %21 = load void (%class.PluginInfoHostImpl*)*, void (%class.PluginInfoHostImpl*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%class.PluginInfoHostImpl*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.PluginInfoHostImpl*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.PluginInfoHostImpl* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSG_9allocatorISJ_EEEEEJNS_7WeakPtrIS3_EES4_SF_EEEFvSO_EE7RunOnceEPNS0_13BindStateBaseESO_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.221"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr.220"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 31
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::OnceCallback.218"*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %11, label %12, label %23

12:                                               ; preds = %2
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %class.PluginInfoHostImpl**
  %15 = load %class.PluginInfoHostImpl*, %class.PluginInfoHostImpl** %14, align 8
  %16 = icmp eq %class.PluginInfoHostImpl* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEvE6InvokeISP_NS_7WeakPtrIS2_EEJS3_SE_SN_EEEvT_OT0_DpOT1_(i64 %19, i64 %22, %"class.base::WeakPtr.220"* dereferenceable(16) %5, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* dereferenceable(232) %7, %"class.base::OnceCallback.218"* dereferenceable(8) %9, %"class.std::__1::vector.221"* dereferenceable(24) %1) #10
  br label %23

23:                                               ; preds = %2, %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEvE6InvokeISP_NS_7WeakPtrIS2_EEJS3_SE_SN_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr.220"* dereferenceable(16), %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* dereferenceable(232), %"class.base::OnceCallback.218"* dereferenceable(8), %"class.std::__1::vector.221"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::OnceCallback.218", align 8
  %9 = getelementptr inbounds %"class.base::WeakPtr.220", %"class.base::WeakPtr.220"* %2, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %14

14:                                               ; preds = %11, %6
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  %16 = getelementptr inbounds %"class.base::WeakPtr.220", %"class.base::WeakPtr.220"* %2, i64 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %15, i8* %18, i8* null
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  %21 = bitcast i8* %20 to %class.PluginInfoHostImpl*
  %22 = and i64 %0, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %14
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %0, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to void (%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*, %"class.base::OnceCallback.218"*, %"class.std::__1::vector.221"*)**
  %30 = load void (%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*, %"class.base::OnceCallback.218"*, %"class.std::__1::vector.221"*)*, void (%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*, %"class.base::OnceCallback.218"*, %"class.std::__1::vector.221"*)** %29, align 8
  br label %33

31:                                               ; preds = %14
  %32 = inttoptr i64 %0 to void (%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*, %"class.base::OnceCallback.218"*, %"class.std::__1::vector.221"*)*
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi void (%class.PluginInfoHostImpl*, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"*, %"class.base::OnceCallback.218"*, %"class.std::__1::vector.221"*)* [ %30, %24 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %4, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback.218"* %4 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback.218"* %8 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  call void %34(%class.PluginInfoHostImpl* %21, %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* dereferenceable(232) %3, %"class.base::OnceCallback.218"* nonnull %8, %"class.std::__1::vector.221"* dereferenceable(24) %5) #10
  %39 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #10
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS2_EES3_SE_EEC2ISP_JSR_RS3_SE_EEENSF_17integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.439"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.base::WeakPtr.220"* dereferenceable(16), %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* dereferenceable(232), %"class.base::OnceCallback.218"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %7, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS2_EES3_SE_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSG_9allocatorISJ_EEEEEJNS_7WeakPtrIS3_EES4_SF_EEEEEbPKNS0_13BindStateBaseENSU_21CancellationQueryModeE) #10
  %8 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 1, i32 0
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::WeakPtr.220", %"class.base::WeakPtr.220"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %12, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #10
  %14 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::WeakPtr.220", %"class.base::WeakPtr.220"* %3, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %4, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %4, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %20, %class.GURL* dereferenceable(120) %21) #10
  %22 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %4, i64 0, i32 2
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %22, %"class.url::Origin"* dereferenceable(80) %23) #10
  %24 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 3
  %25 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %4, i64 0, i32 3
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %6
  %31 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #10
  br label %38

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.PluginInfoHostImpl::GetPluginInfo_Params", %"struct.PluginInfoHostImpl::GetPluginInfo_Params"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %24, i8* %35, i64 %37) #10
  br label %38

38:                                               ; preds = %30, %33
  %39 = getelementptr inbounds %"struct.base::internal::BindState.439", %"struct.base::internal::BindState.439"* %0, i64 0, i32 2, i32 0, i32 2
  %40 = getelementptr inbounds %"class.base::OnceCallback.218", %"class.base::OnceCallback.218"* %5, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback.218"* %5 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::__tuple_leaf.444"* %39 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM18PluginInfoHostImplFvRKNS2_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS2_EES3_SE_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 9, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 8, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %3, %11
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 6
  %16 = bitcast %"class.base::internal::BindStateBase"* %15 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %16) #10
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %18 = bitcast void ()** %17 to %class.GURL*
  tail call void @_ZN4GURLD1Ev(%class.GURL* %18) #10
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %20 = bitcast void (%"class.base::internal::BindStateBase"*)** %19 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %20) #10
  %21 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %14, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSG_9allocatorISJ_EEEEEJNS_7WeakPtrIS3_EES4_SF_EEEEEbPKNS0_13BindStateBaseENSU_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.PluginInfoHostImpl**
  %9 = load %class.PluginInfoHostImpl*, %class.PluginInfoHostImpl** %8, align 8
  %10 = icmp ne %class.PluginInfoHostImpl* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN6chrome5mojom10PluginInfoC1Ev(%"class.chrome::mojom::PluginInfo"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN14PluginMetadataD1Ev(%class.PluginMetadata*) unnamed_addr #3

declare void @_ZNK6subtle14PrefMemberBase10VerifyPrefEv(%"class.subtle::PrefMemberBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.225"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.225"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.225"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.225"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !58
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !58
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !61, !noalias !58
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !61, !noalias !58
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !58
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !58
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !61, !noalias !58
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !61, !noalias !58
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !58
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !58
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !61, !noalias !58
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !61, !noalias !58
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !58
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !58
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !61, !noalias !58
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !61, !noalias !58
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !63

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !58
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !58
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !61, !noalias !58
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !61, !noalias !58
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !64

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !65

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !66

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !67

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !68

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !69

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !71
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !71
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !74, !noalias !71
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !74, !noalias !71
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !71
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !71
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !74, !noalias !71
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !74, !noalias !71
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !71
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !71
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !74, !noalias !71
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !74, !noalias !71
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !71
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !71
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !74, !noalias !71
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !74, !noalias !71
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !76

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !71
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !71
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !74, !noalias !71
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !74, !noalias !71
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !77

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !78

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !79

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.225"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.225", %"class.std::__1::basic_string.225"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEM18PluginInfoHostImplFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIM18PluginInfoHostImplFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIM18PluginInfoHostImplFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryI18PluginInfoHostImplE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryI18PluginInfoHostImplE10GetWeakPtrEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS2_IFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS3_EERS4_SE_EEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM18PluginInfoHostImplFvRKNS3_20GetPluginInfo_ParamsENS2_IFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSF_9allocatorISI_EEEEEJNS_7WeakPtrIS3_EERS4_SE_EEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIM18PluginInfoHostImplFvRKNS1_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSE_9allocatorISH_EEEEEJNS_7WeakPtrIS1_EERS2_SD_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIM18PluginInfoHostImplFvRKNS1_20GetPluginInfo_ParamsENS_12OnceCallbackIFvN4mojo9StructPtrIN6chrome5mojom10PluginInfoEEEEEERKNSt3__16vectorIN7content13WebPluginInfoENSE_9allocatorISH_EEEEEJNS_7WeakPtrIS1_EERS2_SD_EEENS5_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSU_DpOSV_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6chrome5mojom10PluginInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZN6chrome5mojom10PluginInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!18 = !{i8 0, i8 2}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!21 = distinct !{!21, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!22 = distinct !{!22, !23, !"_ZNK4GURL4hostEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4GURL4hostEv"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!26 = distinct !{!26, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!27 = distinct !{!27, !28, !"_ZNK4GURL4pathEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4GURL4pathEv"}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.isvectorized", i32 1}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
!38 = distinct !{!38, !37}
!39 = distinct !{!39, !35}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !35}
!46 = distinct !{!46, !37}
!47 = distinct !{!47, !37}
!48 = distinct !{!48, !35}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !35}
!55 = distinct !{!55, !37}
!56 = distinct !{!56, !37}
!57 = distinct !{!57, !35}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !35}
!64 = distinct !{!64, !37}
!65 = distinct !{!65, !37}
!66 = distinct !{!66, !35}
!67 = distinct !{!67, !35}
!68 = distinct !{!68, !37}
!69 = distinct !{!69, !70, !35}
!70 = !{!"llvm.loop.unroll.runtime.disable"}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !35}
!77 = distinct !{!77, !37}
!78 = distinct !{!78, !37}
!79 = distinct !{!79, !35}
