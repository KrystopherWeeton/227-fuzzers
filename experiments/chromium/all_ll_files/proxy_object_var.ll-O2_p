; ModuleID = '../../ppapi/proxy/proxy_object_var.cc'
source_filename = "../../ppapi/proxy/proxy_object_var.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::ProxyObjectVar" = type { %"class.ppapi::Var", %"class.ppapi::proxy::PluginDispatcher"*, i32, i8* }
%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted", i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.ppapi::proxy::PluginDispatcher" = type opaque
%"class.ppapi::StringVar" = type { %"class.ppapi::Var", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ppapi::ArrayBufferVar" = type { %"class.ppapi::Var" }
%"class.ppapi::V8ObjectVar" = type opaque
%"class.ppapi::ArrayVar" = type opaque
%"class.ppapi::DictionaryVar" = type opaque
%"class.ppapi::ResourceVar" = type opaque

@_ZTVN5ppapi14ProxyObjectVarE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (%"class.ppapi::StringVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var11AsStringVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsArrayBufferVarEv to i8*), i8* bitcast (%"class.ppapi::V8ObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsV8ObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ProxyObjectVar"* (%"class.ppapi::ProxyObjectVar"*)* @_ZN5ppapi14ProxyObjectVar16AsProxyObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var10AsArrayVarEv to i8*), i8* bitcast (%"class.ppapi::DictionaryVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var15AsDictionaryVarEv to i8*), i8* bitcast (%"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsResourceVarEv to i8*), i8* bitcast (i32 (%"class.ppapi::ProxyObjectVar"*)* @_ZNK5ppapi14ProxyObjectVar7GetTypeEv to i8*), i8* bitcast (void (%"class.ppapi::ProxyObjectVar"*)* @_ZN5ppapi14ProxyObjectVarD2Ev to i8*), i8* bitcast (void (%"class.ppapi::ProxyObjectVar"*)* @_ZN5ppapi14ProxyObjectVarD0Ev to i8*)] }, align 8

@_ZN5ppapi14ProxyObjectVarC1EPNS_5proxy16PluginDispatcherEi = hidden unnamed_addr alias void (%"class.ppapi::ProxyObjectVar"*, %"class.ppapi::proxy::PluginDispatcher"*, i32), void (%"class.ppapi::ProxyObjectVar"*, %"class.ppapi::proxy::PluginDispatcher"*, i32)* @_ZN5ppapi14ProxyObjectVarC2EPNS_5proxy16PluginDispatcherEi
@_ZN5ppapi14ProxyObjectVarD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ProxyObjectVar"*), void (%"class.ppapi::ProxyObjectVar"*)* @_ZN5ppapi14ProxyObjectVarD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi14ProxyObjectVarC2EPNS_5proxy16PluginDispatcherEi(%"class.ppapi::ProxyObjectVar"*, %"class.ppapi::proxy::PluginDispatcher"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 0
  tail call void @_ZN5ppapi3VarC2Ev(%"class.ppapi::Var"* %4) #5
  %5 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5ppapi14ProxyObjectVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 1
  store %"class.ppapi::proxy::PluginDispatcher"* %1, %"class.ppapi::proxy::PluginDispatcher"** %6, align 8
  %7 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 2
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 3
  store i8* null, i8** %8, align 8
  ret void
}

declare void @_ZN5ppapi3VarC2Ev(%"class.ppapi::Var"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5ppapi3VarD2Ev(%"class.ppapi::Var"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi14ProxyObjectVarD2Ev(%"class.ppapi::ProxyObjectVar"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 0
  tail call void @_ZN5ppapi3VarD2Ev(%"class.ppapi::Var"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi14ProxyObjectVarD0Ev(%"class.ppapi::ProxyObjectVar"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 0
  tail call void @_ZN5ppapi3VarD2Ev(%"class.ppapi::Var"* %2) #5
  %3 = bitcast %"class.ppapi::ProxyObjectVar"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.ppapi::ProxyObjectVar"* @_ZN5ppapi14ProxyObjectVar16AsProxyObjectVarEv(%"class.ppapi::ProxyObjectVar"* readnone returned) unnamed_addr #4 align 2 {
  ret %"class.ppapi::ProxyObjectVar"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5ppapi14ProxyObjectVar7GetTypeEv(%"class.ppapi::ProxyObjectVar"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi14ProxyObjectVar11AssignVarIDEi(%"class.ppapi::ProxyObjectVar"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::ProxyObjectVar", %"class.ppapi::ProxyObjectVar"* %0, i64 0, i32 0
  tail call void @_ZN5ppapi3Var11AssignVarIDEi(%"class.ppapi::Var"* %3, i32 %1) #5
  ret void
}

declare void @_ZN5ppapi3Var11AssignVarIDEi(%"class.ppapi::Var"*, i32) local_unnamed_addr #1

declare %"class.ppapi::StringVar"* @_ZN5ppapi3Var11AsStringVarEv(%"class.ppapi::Var"*) unnamed_addr #1

declare %"class.ppapi::ArrayBufferVar"* @_ZN5ppapi3Var16AsArrayBufferVarEv(%"class.ppapi::Var"*) unnamed_addr #1

declare %"class.ppapi::V8ObjectVar"* @_ZN5ppapi3Var13AsV8ObjectVarEv(%"class.ppapi::Var"*) unnamed_addr #1

declare %"class.ppapi::ArrayVar"* @_ZN5ppapi3Var10AsArrayVarEv(%"class.ppapi::Var"*) unnamed_addr #1

declare %"class.ppapi::DictionaryVar"* @_ZN5ppapi3Var15AsDictionaryVarEv(%"class.ppapi::Var"*) unnamed_addr #1

declare %"class.ppapi::ResourceVar"* @_ZN5ppapi3Var13AsResourceVarEv(%"class.ppapi::Var"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
