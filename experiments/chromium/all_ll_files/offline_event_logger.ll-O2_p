; ModuleID = '../../components/offline_pages/core/offline_event_logger.cc'
source_filename = "../../components/offline_pages/core/offline_event_logger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.offline_pages::OfflineEventLogger" = type { %"class.base::circular_deque", i8, %"class.offline_pages::OfflineEventLogger::Client"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::basic_string"*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.offline_pages::OfflineEventLogger::Client" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertIN4base8internal23circular_deque_iteratorIS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENS_11__wrap_iterIPS6_EEE4typeENSJ_IPKS6_EESF_SF_ = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6resizeEm = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm = comdat any

$_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm = comdat any

$_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"%d %02d %02d %02d:%02d:%02d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1

@_ZN13offline_pages18OfflineEventLoggerC1Ev = hidden unnamed_addr alias void (%"class.offline_pages::OfflineEventLogger"*), void (%"class.offline_pages::OfflineEventLogger"*)* @_ZN13offline_pages18OfflineEventLoggerC2Ev
@_ZN13offline_pages18OfflineEventLoggerD1Ev = hidden unnamed_addr alias void (%"class.offline_pages::OfflineEventLogger"*), void (%"class.offline_pages::OfflineEventLogger"*)* @_ZN13offline_pages18OfflineEventLoggerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages18OfflineEventLoggerC2Ev(%"class.offline_pages::OfflineEventLogger"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0
  %3 = bitcast %"class.offline_pages::OfflineEventLogger"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #13
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6resizeEm(%"class.base::circular_deque"* %2, i64 0) #13
  %4 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 2
  store %"class.offline_pages::OfflineEventLogger::Client"* null, %"class.offline_pages::OfflineEventLogger::Client"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages18OfflineEventLoggerD2Ev(%"class.offline_pages::OfflineEventLogger"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm(%"class.base::circular_deque"* %2, i64 %4, i64 %6) #13
  %7 = bitcast %"class.offline_pages::OfflineEventLogger"* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @free(i8* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages18OfflineEventLogger5ClearEv(%"class.offline_pages::OfflineEventLogger"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm(%"class.base::circular_deque"* %2, i64 %4, i64 %6) #13
  %7 = bitcast i64* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = bitcast %"class.offline_pages::OfflineEventLogger"* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #13
  %10 = bitcast %"class.offline_pages::OfflineEventLogger"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13offline_pages18OfflineEventLogger12SetIsLoggingEb(%"class.offline_pages::OfflineEventLogger"* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN13offline_pages18OfflineEventLogger12GetIsLoggingEv(%"class.offline_pages::OfflineEventLogger"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages18OfflineEventLogger7GetLogsEPNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.offline_pages::OfflineEventLogger"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertIN4base8internal23circular_deque_iteratorIS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENS_11__wrap_iterIPS6_EEE4typeENSJ_IPKS6_EESF_SF_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* %4, %"class.base::circular_deque"* %5, i64 %7, %"class.base::circular_deque"* %5, i64 %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertIN4base8internal23circular_deque_iteratorIS6_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENS_11__wrap_iterIPS6_EEE4typeENSJ_IPKS6_EESF_SF_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %5
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = sub i64 %5, %10
  br label %19

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %5, %10
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %14, %12
  %20 = phi i64 [ %13, %12 ], [ %18, %14 ]
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ugt i64 %22, %3
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = sub i64 %3, %22
  br label %31

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %3, %22
  %30 = add i64 %29, %28
  br label %31

31:                                               ; preds = %24, %26
  %32 = phi i64 [ %25, %24 ], [ %30, %26 ]
  %33 = sub i64 %20, %32
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %35, label %339

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %41 = ptrtoint %"class.std::__1::basic_string"* %40 to i64
  %42 = sub i64 %38, %41
  %43 = sdiv exact i64 %42, 24
  %44 = icmp sgt i64 %33, %43
  %45 = bitcast %"class.std::__1::basic_string"** %39 to i64*
  br i1 %44, label %191, label %46

46:                                               ; preds = %35
  %47 = sub i64 %41, %7
  %48 = sdiv exact i64 %47, 24
  %49 = icmp sgt i64 %33, %48
  br i1 %49, label %50, label %104

50:                                               ; preds = %46
  %51 = icmp eq i64 %47, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %50
  br i1 %23, label %57, label %53

53:                                               ; preds = %52
  %54 = sub i64 %3, %22
  %55 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  br label %62

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %3, %22
  %61 = add i64 %60, %59
  br label %62

62:                                               ; preds = %57, %53
  %63 = phi i64 [ %56, %53 ], [ %59, %57 ]
  %64 = phi i64 [ %54, %53 ], [ %61, %57 ]
  %65 = add i64 %48, %22
  %66 = add i64 %65, %64
  %67 = urem i64 %66, %63
  br label %68

68:                                               ; preds = %50, %62
  %69 = phi i64 [ %3, %50 ], [ %67, %62 ]
  %70 = icmp eq i64 %69, %5
  br i1 %70, label %99, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0
  %73 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  br label %74

74:                                               ; preds = %90, %71
  %75 = phi %"class.std::__1::basic_string"* [ %40, %71 ], [ %95, %90 ]
  %76 = phi i64 [ %69, %71 ], [ %94, %90 ]
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %72, i64 %76) #13
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %74
  %83 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #13
  br label %90

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %75, i8* %87, i64 %89) #13
  br label %90

90:                                               ; preds = %85, %82
  %91 = add i64 %76, 1
  %92 = load i64, i64* %73, align 8
  %93 = icmp eq i64 %91, %92
  %94 = select i1 %93, i64 0, i64 %91
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 1
  %96 = icmp eq i64 %94, %5
  br i1 %96, label %97, label %74

97:                                               ; preds = %90
  %98 = ptrtoint %"class.std::__1::basic_string"* %95 to i64
  br label %99

99:                                               ; preds = %97, %68
  %100 = phi i64 [ %41, %68 ], [ %98, %97 ]
  store i64 %100, i64* %45, align 8
  %101 = icmp sgt i64 %47, 0
  br i1 %101, label %102, label %339

102:                                              ; preds = %99
  %103 = inttoptr i64 %100 to %"class.std::__1::basic_string"*
  br label %104

104:                                              ; preds = %102, %46
  %105 = phi i64 [ %100, %102 ], [ %41, %46 ]
  %106 = phi %"class.std::__1::basic_string"* [ %103, %102 ], [ %40, %46 ]
  %107 = phi i64 [ %69, %102 ], [ %5, %46 ]
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %33
  %109 = ptrtoint %"class.std::__1::basic_string"* %108 to i64
  %110 = sub i64 %105, %109
  %111 = sdiv exact i64 %110, 24
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %111
  %113 = icmp ult %"class.std::__1::basic_string"* %112, %40
  br i1 %113, label %137, label %116

114:                                              ; preds = %137
  %115 = ptrtoint %"class.std::__1::basic_string"* %143 to i64
  br label %116

116:                                              ; preds = %114, %104
  %117 = phi i64 [ %115, %114 ], [ %105, %104 ]
  store i64 %117, i64* %45, align 8
  %118 = icmp eq i64 %110, 0
  br i1 %118, label %145, label %119

119:                                              ; preds = %116, %131
  %120 = phi %"class.std::__1::basic_string"* [ %123, %131 ], [ %106, %116 ]
  %121 = phi %"class.std::__1::basic_string"* [ %122, %131 ], [ %112, %116 ]
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %121, i64 -1
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 -1
  %124 = bitcast %"class.std::__1::basic_string"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZdlPv(i8* %130) #14
  br label %131

131:                                              ; preds = %128, %119
  %132 = bitcast %"class.std::__1::basic_string"* %123 to i8*
  %133 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 24, i1 false) #13
  %134 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  store i8 0, i8* %135, align 1
  store i8 0, i8* %133, align 1
  %136 = icmp eq %"class.std::__1::basic_string"* %122, %1
  br i1 %136, label %145, label %119

137:                                              ; preds = %104, %137
  %138 = phi %"class.std::__1::basic_string"* [ %143, %137 ], [ %106, %104 ]
  %139 = phi %"class.std::__1::basic_string"* [ %142, %137 ], [ %112, %104 ]
  %140 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  %141 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #13
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %139, i64 1
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 1
  %144 = icmp ult %"class.std::__1::basic_string"* %142, %40
  br i1 %144, label %137, label %114

145:                                              ; preds = %131, %116
  %146 = icmp eq i64 %107, %3
  br i1 %146, label %339, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0
  %149 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  br label %150

150:                                              ; preds = %184, %147
  %151 = phi %"class.std::__1::basic_string"* [ %1, %147 ], [ %189, %184 ]
  %152 = phi i64 [ %3, %147 ], [ %188, %184 ]
  %153 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %148, i64 %152) #13
  %154 = icmp eq %"class.std::__1::basic_string"* %151, %153
  br i1 %154, label %184, label %155

155:                                              ; preds = %150
  %156 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  %160 = bitcast %"class.std::__1::basic_string"* %153 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %159, label %174, label %164

164:                                              ; preds = %155
  br i1 %163, label %168, label %165

165:                                              ; preds = %164
  %166 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  %167 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 24, i1 false) #13
  br label %184

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %151, i8* %170, i64 %172) #13
  br label %184

174:                                              ; preds = %155
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  %180 = zext i8 %162 to i64
  %181 = select i1 %163, i8* %176, i8* %179
  %182 = select i1 %163, i64 %178, i64 %180
  %183 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %151, i8* %181, i64 %182) #13
  br label %184

184:                                              ; preds = %174, %168, %165, %150
  %185 = add i64 %152, 1
  %186 = load i64, i64* %149, align 8
  %187 = icmp eq i64 %185, %186
  %188 = select i1 %187, i64 0, i64 %185
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 1
  %190 = icmp eq i64 %188, %107
  br i1 %190, label %339, label %150

191:                                              ; preds = %35
  %192 = bitcast %"class.std::__1::vector"* %0 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %41, %193
  %195 = sdiv exact i64 %194, 24
  %196 = add i64 %195, %33
  %197 = icmp ugt i64 %196, 768614336404564650
  %198 = inttoptr i64 %193 to %"class.std::__1::basic_string"*
  br i1 %197, label %199, label %201

199:                                              ; preds = %191
  %200 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %200) #15
  unreachable

201:                                              ; preds = %191
  %202 = sub i64 %38, %193
  %203 = sdiv exact i64 %202, 24
  %204 = icmp ult i64 %203, 384307168202282325
  br i1 %204, label %208, label %205

205:                                              ; preds = %201
  %206 = sub i64 %7, %193
  %207 = sdiv exact i64 %206, 24
  br label %215

208:                                              ; preds = %201
  %209 = shl nsw i64 %203, 1
  %210 = icmp ult i64 %209, %196
  %211 = select i1 %210, i64 %196, i64 %209
  %212 = sub i64 %7, %193
  %213 = sdiv exact i64 %212, 24
  %214 = icmp eq i64 %211, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %208, %205
  %216 = phi i64 [ %207, %205 ], [ %213, %208 ]
  %217 = phi i64 [ 768614336404564650, %205 ], [ %211, %208 ]
  %218 = mul i64 %217, 24
  %219 = tail call i8* @_Znwm(i64 %218) #14
  %220 = bitcast i8* %219 to %"class.std::__1::basic_string"*
  br label %221

221:                                              ; preds = %208, %215
  %222 = phi i64 [ %216, %215 ], [ %213, %208 ]
  %223 = phi i64 [ %217, %215 ], [ 0, %208 ]
  %224 = phi %"class.std::__1::basic_string"* [ %220, %215 ], [ null, %208 ]
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %224, i64 %222
  %226 = ptrtoint %"class.std::__1::basic_string"* %225 to i64
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %224, i64 %223
  %228 = ptrtoint %"class.std::__1::basic_string"* %227 to i64
  br i1 %11, label %231, label %229

229:                                              ; preds = %221
  %230 = sub i64 %5, %10
  br label %236

231:                                              ; preds = %221
  %232 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %4, i64 0, i32 0, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = sub i64 %5, %10
  %235 = add i64 %234, %233
  br label %236

236:                                              ; preds = %231, %229
  %237 = phi i64 [ %230, %229 ], [ %235, %231 ]
  br i1 %23, label %240, label %238

238:                                              ; preds = %236
  %239 = sub i64 %3, %22
  br label %245

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  %242 = load i64, i64* %241, align 8
  %243 = sub i64 %3, %22
  %244 = add i64 %243, %242
  br label %245

245:                                              ; preds = %240, %238
  %246 = phi i64 [ %239, %238 ], [ %244, %240 ]
  %247 = sub i64 %237, %246
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %225, i64 %247
  %249 = icmp eq i64 %247, 0
  br i1 %249, label %281, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0
  %252 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0, i32 1
  br label %253

253:                                              ; preds = %270, %250
  %254 = phi %"class.std::__1::basic_string"* [ %225, %250 ], [ %271, %270 ]
  %255 = phi i64 [ %226, %250 ], [ %272, %270 ]
  %256 = phi i64 [ %3, %250 ], [ %276, %270 ]
  %257 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %251, i64 %256) #13
  %258 = bitcast %"class.std::__1::basic_string"* %257 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = icmp slt i8 %260, 0
  br i1 %261, label %265, label %262

262:                                              ; preds = %253
  %263 = inttoptr i64 %255 to i8*
  %264 = bitcast %"class.std::__1::basic_string"* %257 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 24, i1 false) #13
  br label %270

265:                                              ; preds = %253
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %254, i8* %267, i64 %269) #13
  br label %270

270:                                              ; preds = %265, %262
  %271 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %254, i64 1
  %272 = ptrtoint %"class.std::__1::basic_string"* %271 to i64
  %273 = add i64 %256, 1
  %274 = load i64, i64* %252, align 8
  %275 = icmp eq i64 %273, %274
  %276 = select i1 %275, i64 0, i64 %273
  %277 = icmp eq %"class.std::__1::basic_string"* %248, %271
  br i1 %277, label %278, label %253

278:                                              ; preds = %270
  %279 = ptrtoint %"class.std::__1::basic_string"* %248 to i64
  %280 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  br label %281

281:                                              ; preds = %245, %278
  %282 = phi %"class.std::__1::basic_string"* [ %280, %278 ], [ %198, %245 ]
  %283 = phi i64 [ %279, %278 ], [ %226, %245 ]
  %284 = inttoptr i64 %283 to %"class.std::__1::basic_string"*
  %285 = icmp eq %"class.std::__1::basic_string"* %282, %1
  br i1 %285, label %296, label %286

286:                                              ; preds = %281, %286
  %287 = phi %"class.std::__1::basic_string"* [ %289, %286 ], [ %225, %281 ]
  %288 = phi %"class.std::__1::basic_string"* [ %290, %286 ], [ %1, %281 ]
  %289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %287, i64 -1
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %288, i64 -1
  %291 = bitcast %"class.std::__1::basic_string"* %289 to i8*
  %292 = bitcast %"class.std::__1::basic_string"* %290 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %292, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %292, i8 0, i64 24, i1 false) #13
  %293 = icmp eq %"class.std::__1::basic_string"* %290, %282
  br i1 %293, label %294, label %286

294:                                              ; preds = %286
  %295 = ptrtoint %"class.std::__1::basic_string"* %289 to i64
  br label %296

296:                                              ; preds = %294, %281
  %297 = phi i64 [ %226, %281 ], [ %295, %294 ]
  %298 = phi %"class.std::__1::basic_string"* [ %225, %281 ], [ %289, %294 ]
  %299 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %300 = icmp eq %"class.std::__1::basic_string"* %299, %1
  br i1 %300, label %301, label %303

301:                                              ; preds = %296
  %302 = ptrtoint %"class.std::__1::basic_string"* %298 to i64
  br label %317

303:                                              ; preds = %296
  %304 = inttoptr i64 %283 to i8*
  br label %305

305:                                              ; preds = %305, %303
  %306 = phi %"class.std::__1::basic_string"* [ %284, %303 ], [ %311, %305 ]
  %307 = phi i8* [ %304, %303 ], [ %313, %305 ]
  %308 = phi %"class.std::__1::basic_string"* [ %1, %303 ], [ %310, %305 ]
  %309 = bitcast %"class.std::__1::basic_string"* %308 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %307, i8* align 8 %309, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %309, i8 0, i64 24, i1 false) #13
  %310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %308, i64 1
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %306, i64 1
  %312 = icmp eq %"class.std::__1::basic_string"* %310, %299
  %313 = bitcast %"class.std::__1::basic_string"* %311 to i8*
  br i1 %312, label %314, label %305

314:                                              ; preds = %305
  %315 = ptrtoint %"class.std::__1::basic_string"* %311 to i64
  %316 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  br label %317

317:                                              ; preds = %314, %301
  %318 = phi %"class.std::__1::basic_string"* [ %1, %301 ], [ %316, %314 ]
  %319 = phi i64 [ %283, %301 ], [ %315, %314 ]
  %320 = phi i64 [ %302, %301 ], [ %297, %314 ]
  %321 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  store i64 %320, i64* %192, align 8
  store i64 %319, i64* %45, align 8
  store i64 %228, i64* %37, align 8
  %322 = icmp eq %"class.std::__1::basic_string"* %318, %321
  br i1 %322, label %335, label %323

323:                                              ; preds = %317, %333
  %324 = phi %"class.std::__1::basic_string"* [ %325, %333 ], [ %318, %317 ]
  %325 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %324, i64 -1
  %326 = bitcast %"class.std::__1::basic_string"* %325 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %326, i64 0, i32 1, i32 0
  %328 = load i8, i8* %327, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %333

330:                                              ; preds = %323
  %331 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %325, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load i8*, i8** %331, align 8
  tail call void @_ZdlPv(i8* %332) #14
  br label %333

333:                                              ; preds = %330, %323
  %334 = icmp eq %"class.std::__1::basic_string"* %325, %321
  br i1 %334, label %335, label %323

335:                                              ; preds = %333, %317
  %336 = icmp eq %"class.std::__1::basic_string"* %321, null
  br i1 %336, label %339, label %337

337:                                              ; preds = %335
  %338 = bitcast %"class.std::__1::basic_string"* %321 to i8*
  tail call void @_ZdlPv(i8* %338) #14
  br label %339

339:                                              ; preds = %184, %337, %335, %99, %145, %31
  %340 = phi %"class.std::__1::basic_string"* [ %1, %31 ], [ %1, %145 ], [ %1, %99 ], [ %225, %335 ], [ %225, %337 ], [ %1, %184 ]
  ret %"class.std::__1::basic_string"* %340
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13offline_pages18OfflineEventLogger14RecordActivityERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.offline_pages::OfflineEventLogger"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.base::Time::Exploded", align 4
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %164, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %164, label %21

21:                                               ; preds = %11
  %22 = bitcast %"struct.base::Time::Exploded"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 4
  %27 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 5
  %28 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %3, i64 0, i32 6
  %29 = bitcast %"class.base::Time"* %4 to i8*
  %30 = bitcast %"struct.base::Time::Exploded"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %31 = tail call i64 @_ZN13offline_pages14OfflineTimeNowEv() #13
  %32 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  call void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"* nonnull %4, i1 zeroext true, %"struct.base::Time::Exploded"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %37 = load i32, i32* %23, align 4
  %38 = load i32, i32* %24, align 4
  %39 = load i32, i32* %25, align 4
  %40 = load i32, i32* %26, align 4
  %41 = load i32, i32* %27, align 4
  %42 = load i32, i32* %28, align 4
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %37, i32 %38, i32 %39, i32 %40, i32 %41, i32 %42) #13
  %43 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 2
  %44 = load %"class.offline_pages::OfflineEventLogger::Client"*, %"class.offline_pages::OfflineEventLogger::Client"** %43, align 8
  %45 = icmp eq %"class.offline_pages::OfflineEventLogger::Client"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %21
  %47 = bitcast %"class.offline_pages::OfflineEventLogger::Client"* %44 to void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)***
  %48 = load void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)**, void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)*, void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)** %48, i64 2
  %50 = load void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)*, void (%"class.offline_pages::OfflineEventLogger::Client"*, %"class.std::__1::basic_string"*)** %49, align 8
  call void %50(%"class.offline_pages::OfflineEventLogger::Client"* nonnull %44, %"class.std::__1::basic_string"* dereferenceable(24) %1) #13
  br label %51

51:                                               ; preds = %21, %46
  %52 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0
  %53 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, %54
  br i1 %57, label %60, label %58

58:                                               ; preds = %51
  %59 = sub i64 %56, %54
  br label %65

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %56, %54
  %64 = add i64 %63, %62
  br label %65

65:                                               ; preds = %58, %60
  %66 = phi i64 [ %59, %58 ], [ %64, %60 ]
  %67 = icmp eq i64 %66, 50
  br i1 %67, label %68, label %81

68:                                               ; preds = %65
  %69 = icmp eq i64 %56, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  br label %73

73:                                               ; preds = %68, %70
  %74 = phi i64 [ %72, %70 ], [ %56, %68 ]
  %75 = add i64 %74, -1
  store i64 %75, i64* %55, align 8
  %76 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 0
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %76, i64 %75) #13
  %78 = load i64, i64* %55, align 8
  %79 = add i64 %78, 1
  %80 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %76, i64 %79) #13
  call void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %76, %"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"* %80) #13
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %52) #13
  br label %81

81:                                               ; preds = %73, %65
  %82 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %82)
  %83 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #13
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #13, !alias.scope !3
  %87 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !3
  %90 = icmp slt i8 %89, 0
  %91 = load i64, i64* %35, align 8
  %92 = load i8*, i8** %34, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %91, i64 %93
  %95 = select i1 %90, i8* %92, i8* %33
  %96 = add i64 %94, 2
  %97 = icmp ugt i64 %96, -17
  br i1 %97, label %98, label %100

98:                                               ; preds = %81
  %99 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %99) #15
  unreachable

100:                                              ; preds = %81
  %101 = icmp ult i64 %96, 23
  br i1 %101, label %107, label %102

102:                                              ; preds = %100
  %103 = add nuw i64 %94, 18
  %104 = and i64 %103, -16
  %105 = call i8* @_Znwm(i64 %104) #14
  store i8* %105, i8** %84, align 8, !alias.scope !3
  %106 = or i64 %104, -9223372036854775808
  store i64 %106, i64* %86, align 8, !alias.scope !3
  store i64 %94, i64* %85, align 8, !alias.scope !3
  br label %112

107:                                              ; preds = %100
  %108 = trunc i64 %94 to i8
  %109 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  store i8 %108, i8* %110, align 1, !alias.scope !3
  %111 = icmp eq i64 %94, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %102, %107
  %113 = phi i8* [ %105, %102 ], [ %83, %107 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* align 1 %95, i64 %94, i1 false) #13
  br label %114

114:                                              ; preds = %107, %112
  %115 = phi i8* [ %83, %107 ], [ %113, %112 ]
  %116 = getelementptr inbounds i8, i8* %115, i64 %94
  store i8 0, i8* %116, align 1
  %117 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #13
  %118 = load i8, i8* %13, align 1, !noalias !6
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8, !noalias !6
  %122 = load i64, i64* %16, align 8, !noalias !6
  %123 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %124 = zext i8 %118 to i64
  %125 = select i1 %119, i8* %121, i8* %123
  %126 = select i1 %119, i64 %122, i64 %124
  %127 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %125, i64 %126) #13, !noalias !6
  %128 = bitcast %"class.std::__1::basic_string"* %127 to i8*
  %129 = bitcast %"class.std::__1::basic_string"* %127 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast i64* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* align 8 %132, i64 15, i1 false)
  %133 = getelementptr inbounds i8, i8* %128, i64 23
  %134 = load i8, i8* %133, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 24, i1 false) #13, !noalias !6
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %52, i64 1) #13
  %135 = load i64, i64* %53, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %114
  %138 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  br label %140

140:                                              ; preds = %137, %114
  %141 = phi i64 [ %139, %137 ], [ %135, %114 ]
  %142 = add i64 %141, -1
  store i64 %142, i64* %53, align 8
  %143 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 0, i32 0
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %143, i64 %142) #13
  %145 = bitcast %"class.std::__1::basic_string"* %144 to i64*
  store i64 %130, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %147 = bitcast i64* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %82, i64 15, i1 false)
  %148 = bitcast %"class.std::__1::basic_string"* %144 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 23
  store i8 %134, i8* %149, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 15, i1 false)
  %150 = load i64, i64* %53, align 8
  %151 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %143, i64 %150) #13
  %152 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %140
  %157 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %157) #14
  br label %158

158:                                              ; preds = %140, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %82)
  %159 = load i8, i8* %88, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %158
  %162 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %162) #14
  br label %163

163:                                              ; preds = %158, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #13
  br label %164

164:                                              ; preds = %2, %11, %163
  ret void
}

declare i64 @_ZN13offline_pages14OfflineTimeNowEv() local_unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13offline_pages18OfflineEventLogger9SetClientEPNS0_6ClientE(%"class.offline_pages::OfflineEventLogger"* nocapture, %"class.offline_pages::OfflineEventLogger::Client"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.offline_pages::OfflineEventLogger", %"class.offline_pages::OfflineEventLogger"* %0, i64 0, i32 2
  store %"class.offline_pages::OfflineEventLogger::Client"* %1, %"class.offline_pages::OfflineEventLogger::Client"** %4, align 8
  ret void
}

declare void @_ZNK4base4Time7ExplodeEbPNS0_8ExplodedE(%"class.base::Time"*, i1 zeroext, %"struct.base::Time::Exploded"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6resizeEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = sub i64 %6, %4
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %17, label %51

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %6, %4
  %15 = add i64 %14, %13
  %16 = icmp ult i64 %15, %1
  br i1 %16, label %17, label %51

17:                                               ; preds = %8, %11
  %18 = phi i64 [ %9, %8 ], [ %15, %11 ]
  %19 = sub i64 %1, %18
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 %19)
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  br label %22

22:                                               ; preds = %48, %17
  %23 = load i64, i64* %3, align 8
  %24 = load i64, i64* %5, align 8
  %25 = icmp ult i64 %24, %23
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = sub i64 %24, %23
  br label %32

28:                                               ; preds = %22
  %29 = load i64, i64* %20, align 8
  %30 = sub i64 %24, %23
  %31 = add i64 %30, %29
  br label %32

32:                                               ; preds = %26, %28
  %33 = phi i64 [ %27, %26 ], [ %31, %28 ]
  %34 = icmp ult i64 %33, %1
  br i1 %34, label %35, label %59

35:                                               ; preds = %32
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %0, i64 1) #13
  %36 = load i64, i64* %5, align 8
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %36) #13
  %38 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = load i64, i64* %5, align 8
  %40 = load i64, i64* %20, align 8
  %41 = add i64 %40, -1
  %42 = icmp eq i64 %39, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  store i64 0, i64* %5, align 8
  br label %47

44:                                               ; preds = %35
  %45 = add i64 %39, 1
  store i64 %45, i64* %5, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44, %43
  br label %48

48:                                               ; preds = %44, %47
  %49 = phi i64 [ %41, %47 ], [ %39, %44 ]
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %21, i64 %49) #13
  br label %22

51:                                               ; preds = %8, %11
  %52 = phi i64 [ %9, %8 ], [ %15, %11 ]
  %53 = icmp ugt i64 %52, %1
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = add i64 %4, %1
  %56 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = urem i64 %55, %57
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm(%"class.base::circular_deque"* %0, i64 %58, i64 %6)
  store i64 %58, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %0)
  br label %59

59:                                               ; preds = %32, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 24) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !9

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"* %12)
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::basic_string"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::basic_string"* %15, %"class.std::__1::basic_string"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 24) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !9

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %48

13:                                               ; preds = %6
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %19 = icmp ult %"class.std::__1::basic_string"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.std::__1::basic_string"* %17 to i64
  %22 = ptrtoint %"class.std::__1::basic_string"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #13
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !9

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.std::__1::basic_string"* %14, %15
  br i1 %37, label %46, label %38

38:                                               ; preds = %36, %38
  %39 = phi %"class.std::__1::basic_string"* [ %44, %38 ], [ %17, %36 ]
  %40 = phi %"class.std::__1::basic_string"* [ %43, %38 ], [ %14, %36 ]
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %45 = icmp eq %"class.std::__1::basic_string"* %43, %15
  br i1 %45, label %46, label %38

46:                                               ; preds = %38, %36
  %47 = sub i64 %2, %1
  br label %118

48:                                               ; preds = %6
  %49 = icmp ult i64 %2, %1
  br i1 %49, label %50, label %118

50:                                               ; preds = %48
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %52 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %53 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = ptrtoint %"class.std::__1::basic_string"* %51 to i64
  %56 = icmp ult %"class.std::__1::basic_string"* %54, %52
  br i1 %56, label %57, label %73

57:                                               ; preds = %50
  %58 = ptrtoint %"class.std::__1::basic_string"* %54 to i64
  %59 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  %60 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %59, i64 %55) #13
  %61 = extractvalue { i64, i1 } %60, 1
  %62 = extractvalue { i64, i1 } %60, 0
  %63 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %58, i64 %62) #13
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = or i1 %61, %64
  br i1 %65, label %66, label %67, !prof !9

66:                                               ; preds = %57
  tail call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %57
  %68 = extractvalue { i64, i1 } %63, 0
  %69 = icmp ugt i64 %68, %55
  br i1 %69, label %70, label %73

70:                                               ; preds = %67
  %71 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #13
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  br label %73

73:                                               ; preds = %70, %67, %50
  %74 = icmp eq %"class.std::__1::basic_string"* %51, %52
  br i1 %74, label %83, label %75

75:                                               ; preds = %73, %75
  %76 = phi %"class.std::__1::basic_string"* [ %81, %75 ], [ %54, %73 ]
  %77 = phi %"class.std::__1::basic_string"* [ %80, %75 ], [ %51, %73 ]
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #13
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %82 = icmp eq %"class.std::__1::basic_string"* %80, %52
  br i1 %82, label %83, label %75

83:                                               ; preds = %75, %73
  %84 = sub i64 %11, %1
  %85 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %87 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %84)
  %88 = ptrtoint %"class.std::__1::basic_string"* %85 to i64
  %89 = icmp ult %"class.std::__1::basic_string"* %87, %86
  br i1 %89, label %90, label %106

90:                                               ; preds = %83
  %91 = ptrtoint %"class.std::__1::basic_string"* %87 to i64
  %92 = ptrtoint %"class.std::__1::basic_string"* %86 to i64
  %93 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %92, i64 %88) #13
  %94 = extractvalue { i64, i1 } %93, 1
  %95 = extractvalue { i64, i1 } %93, 0
  %96 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %91, i64 %95) #13
  %97 = extractvalue { i64, i1 } %96, 1
  %98 = or i1 %94, %97
  br i1 %98, label %99, label %100, !prof !9

99:                                               ; preds = %90
  call void @llvm.trap() #13
  unreachable

100:                                              ; preds = %90
  %101 = extractvalue { i64, i1 } %96, 0
  %102 = icmp ugt i64 %101, %88
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #13
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #13
  br label %106

106:                                              ; preds = %103, %100, %83
  %107 = icmp eq %"class.std::__1::basic_string"* %85, %86
  br i1 %107, label %116, label %108

108:                                              ; preds = %106, %108
  %109 = phi %"class.std::__1::basic_string"* [ %114, %108 ], [ %87, %106 ]
  %110 = phi %"class.std::__1::basic_string"* [ %113, %108 ], [ %85, %106 ]
  %111 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #13
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %110, i64 1
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 1
  %115 = icmp eq %"class.std::__1::basic_string"* %113, %86
  br i1 %115, label %116, label %108

116:                                              ; preds = %108, %106
  %117 = add i64 %84, %2
  br label %118

118:                                              ; preds = %48, %116, %46
  %119 = phi i64 [ %117, %116 ], [ %47, %46 ], [ 0, %48 ]
  store i64 %119, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %1
  ret %"class.std::__1::basic_string"* %25
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #7

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %1
  ret %"class.std::__1::basic_string"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::basic_string"*, align 8
  %6 = alloca %"class.std::__1::basic_string"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %5, align 8
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::basic_string"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_) #13
  %17 = bitcast %"class.std::__1::basic_string"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %28 = icmp eq %"class.std::__1::basic_string"* %26, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %25, %41
  %30 = phi %"class.std::__1::basic_string"* [ %42, %41 ], [ %27, %25 ]
  %31 = phi %"class.std::__1::basic_string"* [ %44, %41 ], [ %26, %25 ]
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #14
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  br label %41

41:                                               ; preds = %29, %36
  %42 = phi %"class.std::__1::basic_string"* [ %30, %29 ], [ %40, %36 ]
  %43 = phi %"class.std::__1::basic_string"* [ %31, %29 ], [ %39, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  store %"class.std::__1::basic_string"* %44, %"class.std::__1::basic_string"** %5, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %44, %42
  br i1 %45, label %46, label %29

46:                                               ; preds = %41, %25
  ret void
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcS4_EEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!9 = !{!"branch_weights", i32 1, i32 2000}
