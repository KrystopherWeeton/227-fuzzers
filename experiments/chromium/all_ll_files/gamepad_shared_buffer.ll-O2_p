; ModuleID = '../../device/gamepad/gamepad_shared_buffer.cc'
source_filename = "../../device/gamepad/gamepad_shared_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::GamepadSharedBuffer" = type { %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping", %"class.device::SharedMemorySeqLockBuffer"* }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.device::SharedMemorySeqLockBuffer" = type { %"class.device::OneWriterSeqLock", %"class.device::Gamepads" }
%"class.device::OneWriterSeqLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.device::Gamepads" = type { [4 x %"class.device::Gamepad"] }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%"struct.base::MappedReadOnlyRegion" = type { %"class.base::ReadOnlySharedMemoryRegion", %"class.base::WritableSharedMemoryMapping" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [46 x i8] c"../../device/gamepad/gamepad_shared_buffer.cc\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"mapped_region.IsValid()\00", align 1

@_ZN6device19GamepadSharedBufferC1Ev = hidden unnamed_addr alias void (%"class.device::GamepadSharedBuffer"*), void (%"class.device::GamepadSharedBuffer"*)* @_ZN6device19GamepadSharedBufferC2Ev
@_ZN6device19GamepadSharedBufferD1Ev = hidden unnamed_addr alias void (%"class.device::GamepadSharedBuffer"*), void (%"class.device::GamepadSharedBuffer"*)* @_ZN6device19GamepadSharedBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19GamepadSharedBufferC2Ev(%"class.device::GamepadSharedBuffer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.base::MappedReadOnlyRegion", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 0
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %4) #5
  %5 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 1
  tail call void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"* %5) #5
  %6 = bitcast %"struct.base::MappedReadOnlyRegion"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 112, i1 false)
  call void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* nonnull sret %2, i64 3684) #5
  %7 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %2, i64 0, i32 0
  %8 = call zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %7) #5
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %2, i64 0, i32 1, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %9, %1
  %14 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #5
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %16

16:                                               ; preds = %9, %13
  %17 = call dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"* %4, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %7) #5
  %18 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %2, i64 0, i32 1
  %19 = call dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* %5, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48) %18) #5
  %20 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = load i8*, i8** %20, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 3684, i1 false)
  %22 = bitcast i8* %21 to %"class.device::OneWriterSeqLock"*
  call void @_ZN6device16OneWriterSeqLockC1Ev(%"class.device::OneWriterSeqLock"* %22) #5
  %23 = getelementptr inbounds i8, i8* %21, i64 4
  %24 = bitcast i8* %23 to %"class.device::Gamepad"*
  call void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"* %24) #5
  %25 = getelementptr inbounds i8, i8* %21, i64 924
  %26 = bitcast i8* %25 to %"class.device::Gamepad"*
  call void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"* %26) #5
  %27 = getelementptr inbounds i8, i8* %21, i64 1844
  %28 = bitcast i8* %27 to %"class.device::Gamepad"*
  call void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"* %28) #5
  %29 = getelementptr inbounds i8, i8* %21, i64 2764
  %30 = bitcast i8* %29 to %"class.device::Gamepad"*
  call void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"* %30) #5
  %31 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 2
  %32 = bitcast %"class.device::SharedMemorySeqLockBuffer"** %31 to i8**
  store i8* %21, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 3680, i1 false)
  %33 = getelementptr inbounds %"struct.base::MappedReadOnlyRegion", %"struct.base::MappedReadOnlyRegion"* %2, i64 0, i32 1, i32 0
  call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %33) #5
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #5
  ret void
}

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #1

declare void @_ZN4base27WritableSharedMemoryMappingC1Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN4base26ReadOnlySharedMemoryRegion6CreateEm(%"struct.base::MappedReadOnlyRegion"* sret, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19GamepadSharedBufferD2Ev(%"class.device::GamepadSharedBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"* %2) #5
  %3 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 0
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19GamepadSharedBuffer27DuplicateSharedMemoryRegionEv(%"class.base::ReadOnlySharedMemoryRegion"* noalias sret, %"class.device::GamepadSharedBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %1, i64 0, i32 0
  tail call void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret %0, %"class.base::ReadOnlySharedMemoryRegion"* %3) #5
  ret void
}

declare void @_ZNK4base26ReadOnlySharedMemoryRegion9DuplicateEv(%"class.base::ReadOnlySharedMemoryRegion"* sret, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.device::Gamepads"* @_ZN6device19GamepadSharedBuffer6bufferEv(%"class.device::GamepadSharedBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 2
  %3 = load %"class.device::SharedMemorySeqLockBuffer"*, %"class.device::SharedMemorySeqLockBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.device::SharedMemorySeqLockBuffer", %"class.device::SharedMemorySeqLockBuffer"* %3, i64 0, i32 1
  ret %"class.device::Gamepads"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.device::SharedMemorySeqLockBuffer"* @_ZN6device19GamepadSharedBuffer15hardware_bufferEv(%"class.device::GamepadSharedBuffer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 2
  %3 = load %"class.device::SharedMemorySeqLockBuffer"*, %"class.device::SharedMemorySeqLockBuffer"** %2, align 8
  ret %"class.device::SharedMemorySeqLockBuffer"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19GamepadSharedBuffer10WriteBeginEv(%"class.device::GamepadSharedBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 2
  %3 = load %"class.device::SharedMemorySeqLockBuffer"*, %"class.device::SharedMemorySeqLockBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.device::SharedMemorySeqLockBuffer", %"class.device::SharedMemorySeqLockBuffer"* %3, i64 0, i32 0
  tail call void @_ZN6device16OneWriterSeqLock10WriteBeginEv(%"class.device::OneWriterSeqLock"* %4) #5
  ret void
}

declare void @_ZN6device16OneWriterSeqLock10WriteBeginEv(%"class.device::OneWriterSeqLock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device19GamepadSharedBuffer8WriteEndEv(%"class.device::GamepadSharedBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadSharedBuffer", %"class.device::GamepadSharedBuffer"* %0, i64 0, i32 2
  %3 = load %"class.device::SharedMemorySeqLockBuffer"*, %"class.device::SharedMemorySeqLockBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.device::SharedMemorySeqLockBuffer", %"class.device::SharedMemorySeqLockBuffer"* %3, i64 0, i32 0
  tail call void @_ZN6device16OneWriterSeqLock8WriteEndEv(%"class.device::OneWriterSeqLock"* %4) #5
  ret void
}

declare void @_ZN6device16OneWriterSeqLock8WriteEndEv(%"class.device::OneWriterSeqLock"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base26ReadOnlySharedMemoryRegion7IsValidEv(%"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #1

declare void @_ZN6device16OneWriterSeqLockC1Ev(%"class.device::OneWriterSeqLock"*) unnamed_addr #1

declare void @_ZN6device7GamepadC1Ev(%"class.device::Gamepad"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
