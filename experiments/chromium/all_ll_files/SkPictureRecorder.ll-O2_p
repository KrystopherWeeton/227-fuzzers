; ModuleID = '../../third_party/skia/src/core/SkPictureRecorder.cpp'
source_filename = "../../third_party/skia/src/core/SkPictureRecorder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp, %"class.std::__1::unique_ptr", %class.sk_sp.27, %"class.std::__1::unique_ptr.28" }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRecorder* }
%class.SkRecorder = type { %class.SkCanvasVirtualEnforcer, i64, %class.SkRecord*, %"class.std::__1::unique_ptr.18", %class.SkMiniRecorder* }
%class.SkCanvasVirtualEnforcer = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer.1 }
%class.SkCanvasVirtualEnforcer.1 = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2, [384 x i64], %class.sk_sp.3, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.4", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.8" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.3 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkRecord = type { %class.SkRefCnt.base, i32, i32, %class.SkAutoTMalloc, %class.SkArenaAlloc, i64 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkRecord::Record"* }
%"struct.SkRecord::Record" = type { i32, i8* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.SkDrawableList* }
%class.SkDrawableList = type { %class.SkTDArray }
%class.SkTDArray = type { %class.SkDrawable**, i32, i32 }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkMiniRecorder = type { i32, [4 x i8], [88 x i8] }
%class.sk_sp.27 = type { %class.SkRecord* }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.SkMiniRecorder* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkBBHFactory = type { i32 (...)** }
%class.sk_sp.34 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.35", [7 x i8] }>
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i8 }
%"struct.SkBBoxHierarchy::Metadata" = type { i8 }
%"class.SkBigPicture::SnapshotArray" = type <{ %class.SkAutoTMalloc.42, i32, [4 x i8] }>
%class.SkAutoTMalloc.42 = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.SkPicture** }
%class.SkBigPicture = type { %class.SkPicture.base, %struct.SkRect, i64, %class.sk_sp.58, %"class.std::__1::unique_ptr.59", %class.sk_sp.65 }
%class.SkPicture.base = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.35" }>
%class.sk_sp.58 = type { %class.SkRecord* }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.SkBigPicture::SnapshotArray"* }
%class.sk_sp.65 = type { %class.SkBBoxHierarchy* }
%"class.SkPicture::AbortCallback" = type { i32 (...)** }
%class.sk_sp.66 = type { %class.SkDrawable* }

@_ZTV8SkRecord = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTV18SkRecordedDrawable = external unnamed_addr constant { [14 x i8*] }, align 8

@_ZN17SkPictureRecorderC1Ev = hidden unnamed_addr alias void (%class.SkPictureRecorder*), void (%class.SkPictureRecorder*)* @_ZN17SkPictureRecorderC2Ev
@_ZN17SkPictureRecorderD1Ev = hidden unnamed_addr alias void (%class.SkPictureRecorder*), void (%class.SkPictureRecorder*)* @_ZN17SkPictureRecorderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPictureRecorderC2Ev(%class.SkPictureRecorder* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %4 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  %7 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 5
  %8 = bitcast %"class.std::__1::unique_ptr.28"* %7 to i64*
  %9 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = bitcast %class.SkBBoxHierarchy** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  %11 = tail call i8* @_Znwm(i64 96) #7
  %12 = bitcast i8* %11 to %class.SkMiniRecorder*
  tail call void @_ZN14SkMiniRecorderC1Ev(%class.SkMiniRecorder* nonnull %12) #8
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %7, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %14, align 8
  store i64 %13, i64* %8, align 8
  %16 = icmp eq %class.SkMiniRecorder* %15, null
  %17 = bitcast i8* %11 to %class.SkMiniRecorder*
  br i1 %16, label %21, label %18

18:                                               ; preds = %1
  tail call void @_ZN14SkMiniRecorderD1Ev(%class.SkMiniRecorder* nonnull %15) #8
  %19 = bitcast %class.SkMiniRecorder* %15 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  %20 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %14, align 8
  br label %21

21:                                               ; preds = %18, %1
  %22 = phi %class.SkMiniRecorder* [ %20, %18 ], [ %17, %1 ]
  %23 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false)
  %25 = tail call i8* @_Znwm(i64 3264) #7
  %26 = bitcast i8* %25 to %class.SkRecorder*
  call void @_ZN10SkRecorderC1EP8SkRecordRK6SkRectP14SkMiniRecorder(%class.SkRecorder* nonnull %26, %class.SkRecord* null, %struct.SkRect* nonnull dereferenceable(16) %3, %class.SkMiniRecorder* %22) #8
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkRecorder*, %class.SkRecorder** %28, align 8
  store i64 %27, i64* %6, align 8
  %30 = icmp eq %class.SkRecorder* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %21
  %32 = bitcast %class.SkRecorder* %29 to void (%class.SkRecorder*)***
  %33 = load void (%class.SkRecorder*)**, void (%class.SkRecorder*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRecorder*)*, void (%class.SkRecorder*)** %33, i64 1
  %35 = load void (%class.SkRecorder*)*, void (%class.SkRecorder*)** %34, align 8
  call void %35(%class.SkRecorder* nonnull %29) #8
  br label %36

36:                                               ; preds = %31, %21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPictureRecorderD2Ev(%class.SkPictureRecorder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %2, align 8
  store %class.SkMiniRecorder* null, %class.SkMiniRecorder** %2, align 8
  %4 = icmp eq %class.SkMiniRecorder* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN14SkMiniRecorderD1Ev(%class.SkMiniRecorder* nonnull %3) #8
  %6 = bitcast %class.SkMiniRecorder* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 4, i32 0
  %9 = load %class.SkRecord*, %class.SkRecord** %8, align 8
  %10 = icmp eq %class.SkRecord* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.SkRecord* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.SkRecord* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %21

21:                                               ; preds = %7, %11, %15
  %22 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %class.SkRecorder*, %class.SkRecorder** %22, align 8
  store %class.SkRecorder* null, %class.SkRecorder** %22, align 8
  %24 = icmp eq %class.SkRecorder* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %class.SkRecorder* %23 to void (%class.SkRecorder*)***
  %27 = load void (%class.SkRecorder*)**, void (%class.SkRecorder*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRecorder*)*, void (%class.SkRecorder*)** %27, i64 1
  %29 = load void (%class.SkRecorder*)*, void (%class.SkRecorder*)** %28, align 8
  tail call void %29(%class.SkRecorder* nonnull %23) #8
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 2, i32 0
  %32 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %31, align 8
  %33 = icmp eq %class.SkBBoxHierarchy* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkBBoxHierarchy, %class.SkBBoxHierarchy* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkBBoxHierarchy* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkBBoxHierarchy* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #8
  br label %44

44:                                               ; preds = %30, %34, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRect5sk_spI15SkBBoxHierarchyE(%class.SkPictureRecorder* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -1, i64 16, i1 false)
  %9 = load float, float* %7, align 4
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %11 = load float, float* %10, align 4
  %12 = fcmp olt float %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %17 = load float, float* %16, align 4
  %18 = fcmp uge float %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %3, %13
  %20 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false)
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %22, i64 16, i1 false)
  br label %23

23:                                               ; preds = %21, %19
  %24 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 1
  %25 = bitcast %struct.SkRect* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 8 %6, i64 16, i1 false)
  %26 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 2
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %28 = bitcast %class.sk_sp* %2 to i64*
  %29 = load i64, i64* %28, align 8
  store %class.SkBBoxHierarchy* null, %class.SkBBoxHierarchy** %27, align 8
  %30 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %26, i64 0, i32 0
  %31 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %30, align 8
  %32 = bitcast %class.sk_sp* %26 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %class.SkBBoxHierarchy* %31, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %class.SkBBoxHierarchy, %class.SkBBoxHierarchy* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkBBoxHierarchy* %31 to %class.SkRefCntBase*
  %40 = bitcast %class.SkBBoxHierarchy* %31 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #8
  br label %44

44:                                               ; preds = %23, %34, %38
  %45 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 4, i32 0
  %46 = load %class.SkRecord*, %class.SkRecord** %45, align 8
  %47 = icmp eq %class.SkRecord* %46, null
  br i1 %47, label %48, label %76

48:                                               ; preds = %44
  %49 = tail call i8* @_Znwm(i64 72) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 1, i32* %51, align 4
  %52 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8SkRecord, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds i8, i8* %49, i64 12
  %54 = bitcast i8* %53 to i32*
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %49, i64 16
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %49, i64 24
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %49, i64 32
  %60 = bitcast i8* %59 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %60, i8* null, i64 0, i64 256) #8
  %61 = getelementptr inbounds i8, i8* %49, i64 64
  %62 = bitcast i8* %61 to i64*
  store i64 0, i64* %62, align 8
  %63 = load %class.SkRecord*, %class.SkRecord** %45, align 8
  %64 = bitcast %class.SkRecord** %45 to i8**
  store i8* %49, i8** %64, align 8
  %65 = icmp eq %class.SkRecord* %63, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %48
  %67 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkRecord* %63 to %class.SkRefCntBase*
  %72 = bitcast %class.SkRecord* %63 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  tail call void %75(%class.SkRefCntBase* nonnull %71) #8
  br label %76

76:                                               ; preds = %44, %70, %66, %48
  %77 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %class.SkRecorder*, %class.SkRecorder** %77, align 8
  %79 = load %class.SkRecord*, %class.SkRecord** %45, align 8
  %80 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %80, align 8
  call void @_ZN10SkRecorder5resetEP8SkRecordRK6SkRectP14SkMiniRecorder(%class.SkRecorder* %78, %class.SkRecord* %79, %struct.SkRect* nonnull dereferenceable(16) %5, %class.SkMiniRecorder* %81) #8
  %82 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 0
  store i8 1, i8* %82, align 8
  %83 = load %class.SkRecorder*, %class.SkRecorder** %77, align 8
  %84 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %class.SkCanvas* %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN10SkRecorder5resetEP8SkRecordRK6SkRectP14SkMiniRecorder(%class.SkRecorder*, %class.SkRecord*, %struct.SkRect* dereferenceable(16), %class.SkMiniRecorder*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkCanvas* @_ZN17SkPictureRecorder18getRecordingCanvasEv(%class.SkPictureRecorder* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %class.SkRecorder*, %class.SkRecorder** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %class.SkRecorder* [ %7, %5 ], [ null, %1 ]
  %10 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  ret %class.SkCanvas* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = icmp eq %class.SkBBHFactory* %2, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkBBoxHierarchy* null, %class.SkBBoxHierarchy** %7, align 8
  %8 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRect5sk_spI15SkBBoxHierarchyE(%class.SkPictureRecorder* %0, %struct.SkRect* dereferenceable(16) %1, %class.sk_sp* nonnull %4)
  %9 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %7, align 8
  %10 = icmp eq %class.SkBBoxHierarchy* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkBBoxHierarchy, %class.SkBBoxHierarchy* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %39

15:                                               ; preds = %11
  %16 = bitcast %class.SkBBoxHierarchy* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.SkBBoxHierarchy* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #8
  br label %39

21:                                               ; preds = %3
  %22 = bitcast %class.SkBBHFactory* %2 to void (%class.sk_sp*, %class.SkBBHFactory*)***
  %23 = load void (%class.sk_sp*, %class.SkBBHFactory*)**, void (%class.sk_sp*, %class.SkBBHFactory*)*** %22, align 8
  %24 = load void (%class.sk_sp*, %class.SkBBHFactory*)*, void (%class.sk_sp*, %class.SkBBHFactory*)** %23, align 8
  call void %24(%class.sk_sp* nonnull sret %4, %class.SkBBHFactory* nonnull %2) #8
  %25 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRect5sk_spI15SkBBoxHierarchyE(%class.SkPictureRecorder* %0, %struct.SkRect* dereferenceable(16) %1, %class.sk_sp* nonnull %4)
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %27 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %26, align 8
  %28 = icmp eq %class.SkBBoxHierarchy* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.SkBBoxHierarchy, %class.SkBBoxHierarchy* %27, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %class.SkBBoxHierarchy* %27 to %class.SkRefCntBase*
  %35 = bitcast %class.SkBBoxHierarchy* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  call void %38(%class.SkRefCntBase* nonnull %34) #8
  br label %39

39:                                               ; preds = %15, %11, %6, %33, %29, %21
  %40 = phi %class.SkCanvas* [ %25, %21 ], [ %25, %29 ], [ %25, %33 ], [ %8, %6 ], [ %8, %11 ], [ %8, %15 ]
  ret %class.SkCanvas* %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.34* noalias sret, %class.SkPictureRecorder*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.27, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca %"struct.SkBBoxHierarchy::Metadata", align 1
  %8 = alloca %struct.SkRect, align 4
  %9 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %class.SkRecorder*, %class.SkRecorder** %10, align 8
  %12 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* %12, i32 1) #8
  %13 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 4
  %14 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %13, i64 0, i32 0
  %15 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %16 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %62

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.sk_sp.34, %class.sk_sp.34* %0, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %20, align 8
  %21 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %class.SkMiniRecorder*, %class.SkMiniRecorder** %21, align 8
  %23 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 2, i32 0
  %24 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %23, align 8
  %25 = icmp eq %class.SkBBoxHierarchy* %24, null
  %26 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 1
  %27 = select i1 %25, %struct.SkRect* %26, %struct.SkRect* null
  tail call void @_ZN14SkMiniRecorder15detachAsPictureEPK6SkRect(%class.sk_sp.34* sret %0, %class.SkMiniRecorder* %22, %struct.SkRect* %27) #8
  %28 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %23, align 8
  %29 = icmp eq %class.SkBBoxHierarchy* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %19
  store %class.SkBBoxHierarchy* null, %class.SkBBoxHierarchy** %23, align 8
  br label %200

31:                                               ; preds = %19
  %32 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %33 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -1, i64 16, i1 false)
  %34 = load %class.SkPicture*, %class.SkPicture** %20, align 8
  %35 = bitcast %class.SkPicture* %34 to { <2 x float>, <2 x float> } (%class.SkPicture*)***
  %36 = load { <2 x float>, <2 x float> } (%class.SkPicture*)**, { <2 x float>, <2 x float> } (%class.SkPicture*)*** %35, align 8
  %37 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %36, i64 4
  %38 = load { <2 x float>, <2 x float> } (%class.SkPicture*)*, { <2 x float>, <2 x float> } (%class.SkPicture*)** %37, align 8
  %39 = tail call { <2 x float>, <2 x float> } %38(%class.SkPicture* %34) #8
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %41 = extractvalue { <2 x float>, <2 x float> } %39, 0
  store <2 x float> %41, <2 x float>* %40, align 8
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %43 = extractvalue { <2 x float>, <2 x float> } %39, 1
  store <2 x float> %43, <2 x float>* %42, align 8
  %44 = getelementptr inbounds %"struct.SkBBoxHierarchy::Metadata", %"struct.SkBBoxHierarchy::Metadata"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #8
  store i8 1, i8* %44, align 1
  %45 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %23, align 8
  %46 = bitcast %class.SkBBoxHierarchy* %45 to void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)***
  %47 = load void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)**, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)** %47, i64 4
  %49 = load void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)** %48, align 8
  call void %49(%class.SkBBoxHierarchy* %45, %struct.SkRect* nonnull %6, %"struct.SkBBoxHierarchy::Metadata"* nonnull %7, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %50 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %23, align 8
  store %class.SkBBoxHierarchy* null, %class.SkBBoxHierarchy** %23, align 8
  %51 = icmp eq %class.SkBBoxHierarchy* %50, null
  br i1 %51, label %200, label %52

52:                                               ; preds = %31
  %53 = getelementptr inbounds %class.SkBBoxHierarchy, %class.SkBBoxHierarchy* %50, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %200

56:                                               ; preds = %52
  %57 = bitcast %class.SkBBoxHierarchy* %50 to %class.SkRefCntBase*
  %58 = bitcast %class.SkBBoxHierarchy* %50 to void (%class.SkRefCntBase*)***
  %59 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, i64 2
  %61 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, align 8
  call void %61(%class.SkRefCntBase* nonnull %57) #8
  br label %200

62:                                               ; preds = %2
  tail call void @_Z16SkRecordOptimizeP8SkRecord(%class.SkRecord* %15) #8
  %63 = load %class.SkRecorder*, %class.SkRecorder** %10, align 8
  %64 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %class.SkDrawableList*, %class.SkDrawableList** %64, align 8
  %66 = icmp eq %class.SkDrawableList* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %62
  %68 = tail call %"class.SkBigPicture::SnapshotArray"* @_ZN14SkDrawableList19newDrawableSnapshotEv(%class.SkDrawableList* nonnull %65) #8
  br label %69

69:                                               ; preds = %62, %67
  %70 = phi %"class.SkBigPicture::SnapshotArray"* [ %68, %67 ], [ null, %62 ]
  %71 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 2
  %72 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %71, i64 0, i32 0
  %73 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %72, align 8
  %74 = icmp eq %class.SkBBoxHierarchy* %73, null
  br i1 %74, label %131, label %75

75:                                               ; preds = %69
  %76 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %77 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = sext i32 %78 to i64
  %82 = tail call i8* @_Z15sk_malloc_throwmm(i64 %81, i64 16) #8
  %83 = ptrtoint i8* %82 to i64
  %84 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %85 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %80
  %89 = sext i32 %86 to i64
  %90 = tail call i8* @_Z15sk_malloc_throwmm(i64 %89, i64 1) #8
  %91 = ptrtoint i8* %90 to i64
  %92 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  br label %93

93:                                               ; preds = %75, %80, %88
  %94 = phi i64 [ %83, %88 ], [ %83, %80 ], [ 0, %75 ]
  %95 = phi %class.SkRecord* [ %92, %88 ], [ %84, %80 ], [ %76, %75 ]
  %96 = phi i64 [ %91, %88 ], [ 0, %80 ], [ 0, %75 ]
  %97 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 1
  %98 = inttoptr i64 %94 to %struct.SkRect*
  %99 = inttoptr i64 %96 to %"struct.SkBBoxHierarchy::Metadata"*
  tail call void @_Z18SkRecordFillBoundsRK6SkRectRK8SkRecordPS_PN15SkBBoxHierarchy8MetadataE(%struct.SkRect* dereferenceable(16) %97, %class.SkRecord* dereferenceable(72) %95, %struct.SkRect* %98, %"struct.SkBBoxHierarchy::Metadata"* %99) #8
  %100 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %72, align 8
  %101 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %102 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = bitcast %class.SkBBoxHierarchy* %100 to void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)***
  %105 = load void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)**, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)** %105, i64 4
  %107 = load void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)** %106, align 8
  tail call void %107(%class.SkBBoxHierarchy* %100, %struct.SkRect* %98, %"struct.SkBBoxHierarchy::Metadata"* %99, i32 %103) #8
  %108 = bitcast %struct.SkRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %108, i8 0, i64 16, i1 false)
  %109 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %110 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %122, label %113

113:                                              ; preds = %122, %93
  %114 = bitcast %struct.SkRect* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* nonnull align 4 %108, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #8
  %115 = icmp eq i64 %96, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = inttoptr i64 %96 to i8*
  call void @_Z7sk_freePv(i8* %117) #8
  br label %118

118:                                              ; preds = %113, %116
  %119 = icmp eq i64 %94, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %94 to i8*
  call void @_Z7sk_freePv(i8* %121) #8
  br label %131

122:                                              ; preds = %93, %122
  %123 = phi i64 [ %125, %122 ], [ 0, %93 ]
  %124 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %98, i64 %123
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %8, %struct.SkRect* dereferenceable(16) %124) #8
  %125 = add nuw nsw i64 %123, 1
  %126 = load %class.SkRecord*, %class.SkRecord** %14, align 8
  %127 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %126, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = icmp slt i64 %125, %129
  br i1 %130, label %122, label %113

131:                                              ; preds = %69, %120, %118
  %132 = load %class.SkRecorder*, %class.SkRecorder** %10, align 8
  %133 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %132, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"class.SkBigPicture::SnapshotArray", %"class.SkBigPicture::SnapshotArray"* %70, i64 0, i32 1
  %136 = icmp eq %"class.SkBigPicture::SnapshotArray"* %70, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.SkBigPicture::SnapshotArray", %"class.SkBigPicture::SnapshotArray"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i32, i32* %135, align 8
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %184, label %141

141:                                              ; preds = %184, %137, %131
  %142 = phi i64 [ %134, %131 ], [ %134, %137 ], [ %195, %184 ]
  %143 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 1
  %144 = bitcast %class.sk_sp.27* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144)
  %145 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145)
  %146 = call i8* @_Znwm(i64 72) #7, !noalias !3
  %147 = bitcast i8* %146 to %class.SkBigPicture*
  %148 = bitcast %class.sk_sp.27* %13 to i64*
  %149 = load i64, i64* %148, align 8, !noalias !3
  store %class.SkRecord* null, %class.SkRecord** %14, align 8, !noalias !3
  %150 = bitcast %class.sk_sp.27* %3 to i64*
  store i64 %149, i64* %150, align 8, !noalias !3
  %151 = bitcast %class.sk_sp* %71 to i64*
  %152 = load i64, i64* %151, align 8, !noalias !3
  store %class.SkBBoxHierarchy* null, %class.SkBBoxHierarchy** %72, align 8, !noalias !3
  %153 = bitcast %class.sk_sp* %4 to i64*
  store i64 %152, i64* %153, align 8, !noalias !3
  call void @_ZN12SkBigPictureC1ERK6SkRect5sk_spI8SkRecordENSt3__110unique_ptrINS_13SnapshotArrayENS6_14default_deleteIS8_EEEES3_I15SkBBoxHierarchyEm(%class.SkBigPicture* nonnull %147, %struct.SkRect* dereferenceable(16) %143, %class.sk_sp.27* nonnull %3, %"class.SkBigPicture::SnapshotArray"* %70, %class.sk_sp* nonnull %4, i64 %142) #8, !noalias !3
  %154 = ptrtoint i8* %146 to i64
  %155 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %156 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %155, align 8, !noalias !3
  %157 = icmp eq %class.SkBBoxHierarchy* %156, null
  br i1 %157, label %168, label %158

158:                                              ; preds = %141
  %159 = getelementptr inbounds %class.SkBBoxHierarchy, %class.SkBBoxHierarchy* %156, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel, !noalias !3
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %168

162:                                              ; preds = %158
  %163 = bitcast %class.SkBBoxHierarchy* %156 to %class.SkRefCntBase*
  %164 = bitcast %class.SkBBoxHierarchy* %156 to void (%class.SkRefCntBase*)***
  %165 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %164, align 8, !noalias !3
  %166 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, i64 2
  %167 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, align 8, !noalias !3
  call void %167(%class.SkRefCntBase* nonnull %163) #8, !noalias !3
  br label %168

168:                                              ; preds = %162, %158, %141
  %169 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %3, i64 0, i32 0
  %170 = load %class.SkRecord*, %class.SkRecord** %169, align 8, !noalias !3
  %171 = icmp eq %class.SkRecord* %170, null
  br i1 %171, label %182, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %170, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 -1 acq_rel, !noalias !3
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %182

176:                                              ; preds = %172
  %177 = bitcast %class.SkRecord* %170 to %class.SkRefCntBase*
  %178 = bitcast %class.SkRecord* %170 to void (%class.SkRefCntBase*)***
  %179 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %178, align 8, !noalias !3
  %180 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %179, i64 2
  %181 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %180, align 8, !noalias !3
  call void %181(%class.SkRefCntBase* nonnull %177) #8, !noalias !3
  br label %182

182:                                              ; preds = %176, %172, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145)
  %183 = bitcast %class.sk_sp.34* %0 to i64*
  store i64 %154, i64* %183, align 8
  br label %200

184:                                              ; preds = %137, %184
  %185 = phi i64 [ %195, %184 ], [ %134, %137 ]
  %186 = phi i64 [ %196, %184 ], [ 0, %137 ]
  %187 = load %class.SkPicture**, %class.SkPicture*** %138, align 8
  %188 = getelementptr inbounds %class.SkPicture*, %class.SkPicture** %187, i64 %186
  %189 = load %class.SkPicture*, %class.SkPicture** %188, align 8
  %190 = bitcast %class.SkPicture* %189 to i64 (%class.SkPicture*)***
  %191 = load i64 (%class.SkPicture*)**, i64 (%class.SkPicture*)*** %190, align 8
  %192 = getelementptr inbounds i64 (%class.SkPicture*)*, i64 (%class.SkPicture*)** %191, i64 6
  %193 = load i64 (%class.SkPicture*)*, i64 (%class.SkPicture*)** %192, align 8
  %194 = call i64 %193(%class.SkPicture* %189) #8
  %195 = add i64 %194, %185
  %196 = add nuw nsw i64 %186, 1
  %197 = load i32, i32* %135, align 8
  %198 = sext i32 %197 to i64
  %199 = icmp slt i64 %196, %198
  br i1 %199, label %184, label %141

200:                                              ; preds = %182, %56, %52, %31, %30
  ret void
}

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #3

declare void @_ZN14SkMiniRecorder15detachAsPictureEPK6SkRect(%class.sk_sp.34* sret, %class.SkMiniRecorder*, %struct.SkRect*) local_unnamed_addr #3

declare void @_Z16SkRecordOptimizeP8SkRecord(%class.SkRecord*) local_unnamed_addr #3

declare %"class.SkBigPicture::SnapshotArray"* @_ZN14SkDrawableList19newDrawableSnapshotEv(%class.SkDrawableList*) local_unnamed_addr #3

declare void @_Z18SkRecordFillBoundsRK6SkRectRK8SkRecordPS_PN15SkBBoxHierarchy8MetadataE(%struct.SkRect* dereferenceable(16), %class.SkRecord* dereferenceable(72), %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPictureRecorder32finishRecordingAsPictureWithCullERK6SkRect(%class.sk_sp.34* noalias sret, %class.SkPictureRecorder*, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 1
  %5 = bitcast %struct.SkRect* %4 to i8*
  %6 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false)
  tail call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.34* sret %0, %class.SkPictureRecorder* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkPictureRecorder13partialReplayEP8SkCanvas(%class.SkPictureRecorder* nocapture readonly, %class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkCanvas* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %class.SkRecorder*, %class.SkRecorder** %5, align 8
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %class.SkDrawableList*, %class.SkDrawableList** %7, align 8
  %9 = icmp eq %class.SkDrawableList* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %8, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkDrawableList, %class.SkDrawableList* %8, i64 0, i32 0, i32 0
  %14 = load %class.SkDrawable**, %class.SkDrawable*** %13, align 8
  br label %15

15:                                               ; preds = %4, %10
  %16 = phi i32 [ %12, %10 ], [ 0, %4 ]
  %17 = phi %class.SkDrawable** [ %14, %10 ], [ null, %4 ]
  %18 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %0, i64 0, i32 4, i32 0
  %19 = load %class.SkRecord*, %class.SkRecord** %18, align 8
  tail call void @_Z12SkRecordDrawRK8SkRecordP8SkCanvasPKPK9SkPicturePKP10SkDrawableiPK15SkBBoxHierarchyPNS4_13AbortCallbackE(%class.SkRecord* dereferenceable(72) %19, %class.SkCanvas* nonnull %1, %class.SkPicture** null, %class.SkDrawable** %17, i32 %16, %class.SkBBoxHierarchy* null, %"class.SkPicture::AbortCallback"* null) #8
  br label %20

20:                                               ; preds = %2, %15
  ret void
}

declare void @_Z12SkRecordDrawRK8SkRecordP8SkCanvasPKPK9SkPicturePKP10SkDrawableiPK15SkBBoxHierarchyPNS4_13AbortCallbackE(%class.SkRecord* dereferenceable(72), %class.SkCanvas*, %class.SkPicture**, %class.SkDrawable**, i32, %class.SkBBoxHierarchy*, %"class.SkPicture::AbortCallback"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkPictureRecorder25finishRecordingAsDrawableEv(%class.sk_sp.66* noalias nocapture sret, %class.SkPictureRecorder*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %class.SkRecorder*, %class.SkRecorder** %4, align 8
  tail call void @_ZN10SkRecorder17flushMiniRecorderEv(%class.SkRecorder* %5) #8
  %6 = load %class.SkRecorder*, %class.SkRecorder** %4, align 8
  %7 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* %7, i32 1) #8
  %8 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 4
  %9 = getelementptr inbounds %class.sk_sp.27, %class.sk_sp.27* %8, i64 0, i32 0
  %10 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  tail call void @_Z16SkRecordOptimizeP8SkRecord(%class.SkRecord* %10) #8
  %11 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 2
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %13 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %12, align 8
  %14 = icmp eq %class.SkBBoxHierarchy* %13, null
  br i1 %14, label %55, label %15

15:                                               ; preds = %2
  %16 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %17 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = sext i32 %18 to i64
  %22 = tail call i8* @_Z15sk_malloc_throwmm(i64 %21, i64 16) #8
  %23 = ptrtoint i8* %22 to i64
  %24 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %25 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %20
  %29 = sext i32 %26 to i64
  %30 = tail call i8* @_Z15sk_malloc_throwmm(i64 %29, i64 1) #8
  %31 = ptrtoint i8* %30 to i64
  %32 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  br label %33

33:                                               ; preds = %15, %20, %28
  %34 = phi i64 [ %23, %28 ], [ %23, %20 ], [ 0, %15 ]
  %35 = phi %class.SkRecord* [ %32, %28 ], [ %24, %20 ], [ %16, %15 ]
  %36 = phi i64 [ %31, %28 ], [ 0, %20 ], [ 0, %15 ]
  %37 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 1
  %38 = inttoptr i64 %34 to %struct.SkRect*
  %39 = inttoptr i64 %36 to %"struct.SkBBoxHierarchy::Metadata"*
  tail call void @_Z18SkRecordFillBoundsRK6SkRectRK8SkRecordPS_PN15SkBBoxHierarchy8MetadataE(%struct.SkRect* dereferenceable(16) %37, %class.SkRecord* dereferenceable(72) %35, %struct.SkRect* %38, %"struct.SkBBoxHierarchy::Metadata"* %39) #8
  %40 = load %class.SkBBoxHierarchy*, %class.SkBBoxHierarchy** %12, align 8
  %41 = load %class.SkRecord*, %class.SkRecord** %9, align 8
  %42 = getelementptr inbounds %class.SkRecord, %class.SkRecord* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = bitcast %class.SkBBoxHierarchy* %40 to void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)***
  %45 = load void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)**, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*** %44, align 8
  %46 = getelementptr inbounds void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)** %45, i64 4
  %47 = load void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)*, void (%class.SkBBoxHierarchy*, %struct.SkRect*, %"struct.SkBBoxHierarchy::Metadata"*, i32)** %46, align 8
  tail call void %47(%class.SkBBoxHierarchy* %40, %struct.SkRect* %38, %"struct.SkBBoxHierarchy::Metadata"* %39, i32 %43) #8
  %48 = icmp eq i64 %36, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %33
  %50 = inttoptr i64 %36 to i8*
  tail call void @_Z7sk_freePv(i8* %50) #8
  br label %51

51:                                               ; preds = %33, %49
  %52 = icmp eq i64 %34, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %34 to i8*
  tail call void @_Z7sk_freePv(i8* %54) #8
  br label %55

55:                                               ; preds = %2, %53, %51
  %56 = load %class.SkRecorder*, %class.SkRecorder** %4, align 8
  %57 = getelementptr inbounds %class.SkRecorder, %class.SkRecorder* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = bitcast %class.SkDrawableList** %57 to i64*
  %59 = load i64, i64* %58, align 8
  store %class.SkDrawableList* null, %class.SkDrawableList** %57, align 8
  %60 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %1, i64 0, i32 1
  %61 = tail call i8* @_Znwm(i64 56) #7, !noalias !6
  %62 = bitcast %class.sk_sp.27* %8 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !6
  store %class.SkRecord* null, %class.SkRecord** %9, align 8, !noalias !6
  %64 = bitcast %class.sk_sp* %11 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !6
  store %class.SkBBoxHierarchy* null, %class.SkBBoxHierarchy** %12, align 8, !noalias !6
  %66 = bitcast i8* %61 to %class.SkDrawable*
  tail call void @_ZN10SkDrawableC2Ev(%class.SkDrawable* nonnull %66) #8, !noalias !6
  %67 = bitcast i8* %61 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV18SkRecordedDrawable, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8, !noalias !6
  %68 = getelementptr inbounds i8, i8* %61, i64 16
  %69 = bitcast i8* %68 to i64*
  store i64 %63, i64* %69, align 8, !noalias !6
  %70 = getelementptr inbounds i8, i8* %61, i64 24
  %71 = bitcast i8* %70 to i64*
  store i64 %65, i64* %71, align 8, !noalias !6
  %72 = getelementptr inbounds i8, i8* %61, i64 32
  %73 = bitcast i8* %72 to i64*
  store i64 %59, i64* %73, align 8, !noalias !6
  %74 = getelementptr inbounds i8, i8* %61, i64 40
  %75 = bitcast %struct.SkRect* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 4 %75, i64 16, i1 false) #8, !noalias !6
  %76 = bitcast %class.sk_sp.66* %0 to i8**
  store i8* %61, i8** %76, align 8
  ret void
}

declare void @_ZN10SkRecorder17flushMiniRecorderEv(%class.SkRecorder*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN14SkMiniRecorderD1Ev(%class.SkMiniRecorder*) unnamed_addr #6

declare void @_ZN14SkMiniRecorderC1Ev(%class.SkMiniRecorder*) unnamed_addr #3

declare void @_ZN10SkRecorderC1EP8SkRecordRK6SkRectP14SkMiniRecorder(%class.SkRecorder*, %class.SkRecord*, %struct.SkRect* dereferenceable(16), %class.SkMiniRecorder*) unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_ZN12SkBigPictureC1ERK6SkRect5sk_spI8SkRecordENSt3__110unique_ptrINS_13SnapshotArrayENS6_14default_deleteIS8_EEEES3_I15SkBBoxHierarchyEm(%class.SkBigPicture*, %struct.SkRect* dereferenceable(16), %class.sk_sp.27*, %"class.SkBigPicture::SnapshotArray"*, %class.sk_sp*, i64) unnamed_addr #3

declare void @_ZN10SkDrawableC2Ev(%class.SkDrawable*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spI12SkBigPictureJR6SkRect5sk_spI8SkRecordENSt3__110unique_ptrINS0_13SnapshotArrayENS6_14default_deleteIS8_EEEES3_I15SkBBoxHierarchyERmEES3_IT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spI12SkBigPictureJR6SkRect5sk_spI8SkRecordENSt3__110unique_ptrINS0_13SnapshotArrayENS6_14default_deleteIS8_EEEES3_I15SkBBoxHierarchyERmEES3_IT_EDpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z10sk_make_spI18SkRecordedDrawableJ5sk_spI8SkRecordES1_I15SkBBoxHierarchyENSt3__110unique_ptrI14SkDrawableListNS6_14default_deleteIS8_EEEER6SkRectEES1_IT_EDpOT0_: argument 0"}
!8 = distinct !{!8, !"_Z10sk_make_spI18SkRecordedDrawableJ5sk_spI8SkRecordES1_I15SkBBoxHierarchyENSt3__110unique_ptrI14SkDrawableListNS6_14default_deleteIS8_EEEER6SkRectEES1_IT_EDpOT0_"}
