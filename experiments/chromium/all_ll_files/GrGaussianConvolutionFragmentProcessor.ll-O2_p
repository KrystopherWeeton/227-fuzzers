; ModuleID = '../../third_party/skia/src/gpu/effects/GrGaussianConvolutionFragmentProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/GrGaussianConvolutionFragmentProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGaussianConvolutionFragmentProcessor = type { %class.GrFragmentProcessor.base, [16 x float], [16 x float], i32, i32, [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.17, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.17 = type { %class.SkAlignedSTStorage.18, %class.SkTArray.19 }
%class.SkAlignedSTStorage.18 = type { [8 x i8] }
%class.SkTArray.19 = type { %"class.std::__1::unique_ptr.20"*, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.17, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"class.GrGaussianConvolutionFragmentProcessor::Impl" = type { %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.1 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrGLSLFragmentProcessor* }
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.6, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.15], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkSTArray.6 = type { %class.SkAlignedSTStorage.7, %class.SkTArray.8 }
%class.SkAlignedSTStorage.7 = type { [16 x i8] }
%class.SkTArray.8 = type { %"class.std::__1::unique_ptr.9"*, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.15 = type { %class.SkAlignedSTStorage.16, %class.SkTArray }
%class.SkAlignedSTStorage.16 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type opaque
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr.9", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.SkSL::Type" = type opaque
%"class.SkSL::Variable" = type opaque
%"class.SkSL::dsl::DSLStatement" = type { %"class.std::__1::unique_ptr.9" }
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr.26" }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.33, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.33 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.34, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.75" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.34 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.38 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.35, [4 x i8] }>
%union.anon.35 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.36, i8* }
%class.sk_sp.36 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.37, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.37 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.38 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.39, void (i8*)*, i8* }
%class.SkNVRefCnt.39 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.40, i32, [4 x i8] }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.34, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.73, %class.sk_sp.74, %class.sk_sp.74 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.49, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.49 = type { %class.SkTHashTable.50 }
%class.SkTHashTable.50 = type { i32, i32, %class.SkAutoTArray.51 }
%class.SkAutoTArray.51 = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.58, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.58 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.59" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.64, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.64 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.65 }
%class.SkTHashTable.65 = type { i32, i32, %class.SkAutoTArray.66 }
%class.SkAutoTArray.66 = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.73 = type { %class.GrCaps* }
%class.sk_sp.74 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__cxx_atomic_impl.78" }
%"struct.std::__1::__cxx_atomic_impl.78" = type { %"struct.std::__1::__cxx_atomic_base_impl.79" }
%"struct.std::__1::__cxx_atomic_base_impl.79" = type { i64 }
%class.GrSwizzle = type { i16 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.32, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.32 = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.SkRect = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.80*, i32, i32 }
%class.SkTArray.80 = type { i32*, i64 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkTArray.87 = type { %"class.SkSL::dsl::DSLExpression"*, i64 }

$_ZN38GrGaussianConvolutionFragmentProcessor4ImplD0Ev = comdat any

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN38GrGaussianConvolutionFragmentProcessorD0Ev = comdat any

$_ZNK38GrGaussianConvolutionFragmentProcessor4nameEv = comdat any

$_ZNK38GrGaussianConvolutionFragmentProcessor5cloneEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN4SkSL3dsl7DSLType9ConstructIJiEEENS0_13DSLExpressionES1_DpOT_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_ = comdat any

$_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN15GrTextureEffect14kDefaultBorderE = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@.str = private unnamed_addr constant [10 x i8] c"Increment\00", align 1
@.str.1 = private unnamed_addr constant [82 x i8] c"../../third_party/skia/src/gpu/effects/GrGaussianConvolutionFragmentProcessor.cpp\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Kernel\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Offsets\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"coord\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"kernelWidth\00", align 1
@_ZN15GrTextureEffect14kDefaultBorderE = linkonce_odr hidden constant [4 x float] zeroinitializer, comdat, align 16
@_ZTV38GrGaussianConvolutionFragmentProcessor = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGaussianConvolutionFragmentProcessor*)* @_ZN38GrGaussianConvolutionFragmentProcessorD0Ev to i8*), i8* bitcast (i8* (%class.GrGaussianConvolutionFragmentProcessor*)* @_ZNK38GrGaussianConvolutionFragmentProcessor4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrGaussianConvolutionFragmentProcessor*)* @_ZNK38GrGaussianConvolutionFragmentProcessor5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrGaussianConvolutionFragmentProcessor*)* @_ZNK38GrGaussianConvolutionFragmentProcessor17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrGaussianConvolutionFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK38GrGaussianConvolutionFragmentProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrGaussianConvolutionFragmentProcessor*, %class.GrFragmentProcessor*)* @_ZNK38GrGaussianConvolutionFragmentProcessor9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZTVN38GrGaussianConvolutionFragmentProcessor4ImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%"class.GrGaussianConvolutionFragmentProcessor::Impl"*)* @_ZN38GrGaussianConvolutionFragmentProcessor4ImplD0Ev to i8*), i8* bitcast (void (%"class.GrGaussianConvolutionFragmentProcessor::Impl"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN38GrGaussianConvolutionFragmentProcessor4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%"class.GrGaussianConvolutionFragmentProcessor::Impl"*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN38GrGaussianConvolutionFragmentProcessor4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [20 x i8] c"GaussianConvolution\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.12 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1

@_ZN38GrGaussianConvolutionFragmentProcessorC1ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEENS_9DirectionEif = hidden unnamed_addr alias void (%class.GrGaussianConvolutionFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32, float), void (%class.GrGaussianConvolutionFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32, float)* @_ZN38GrGaussianConvolutionFragmentProcessorC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEENS_9DirectionEif
@_ZN38GrGaussianConvolutionFragmentProcessorC1ERKS_ = hidden unnamed_addr alias void (%class.GrGaussianConvolutionFragmentProcessor*, %class.GrGaussianConvolutionFragmentProcessor*), void (%class.GrGaussianConvolutionFragmentProcessor*, %class.GrGaussianConvolutionFragmentProcessor*)* @_ZN38GrGaussianConvolutionFragmentProcessorC2ERKS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN38GrGaussianConvolutionFragmentProcessor4Impl8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%"class.GrGaussianConvolutionFragmentProcessor::Impl"*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %6 = alloca %"class.SkSL::dsl::DSLModifiers", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %9 = alloca %"class.SkSL::dsl::DSLModifiers", align 8
  %10 = alloca %"class.SkSL::dsl::DSLType", align 8
  %11 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %12 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %13 = alloca %"class.SkSL::dsl::DSLModifiers", align 8
  %14 = alloca %"class.SkSL::dsl::DSLType", align 8
  %15 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %16 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %17 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %18 = alloca i32, align 4
  %19 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %20 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %21 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %22 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %23 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %24 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %25 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %26 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %27 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %28 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %29 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %30 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %31 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %32 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %33 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %34 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %35 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %36 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %37 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %38 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %39 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %40 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %41 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %42 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %43 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %44 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %45 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %46 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %47 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %48 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %49 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %50 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %51 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %52 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %53 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %54 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %55 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %56 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %57 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %58 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %59 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %60 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %61 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %62 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %63 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %64 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %65 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %66 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %67 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %68 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %69 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %70 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %71 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %72 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %73 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %74 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %75 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %76 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %77 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %78 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %79 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %80 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %81 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %82 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %83 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %84 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %85 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %86 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %87 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %88 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %89 = alloca %"class.SkSL::dsl::PositionInfo", align 8
  %90 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %91 = alloca %"class.SkSL::dsl::DSLModifiers", align 8
  %92 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %93 = alloca %"class.SkSL::dsl::DSLVar", align 8
  %94 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %95 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %96 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %97 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %98 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %99 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %100 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %101 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %102 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %103 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %104 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %105 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %106 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %107 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %108 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %109 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %110 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %111 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %112 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %113 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %114 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %115 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %116 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %117 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %118 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %119 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %120 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %121 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %122 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %123 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %124 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %125 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %126 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %127 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %128 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %129 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %130 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %131 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %132 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %133 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %134 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %135 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %136 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %137 = alloca %"class.SkSL::dsl::PositionInfo", align 8
  %138 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %139 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %140 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %141 = bitcast %class.GrFragmentProcessor** %140 to %class.GrGaussianConvolutionFragmentProcessor**
  %142 = load %class.GrGaussianConvolutionFragmentProcessor*, %class.GrGaussianConvolutionFragmentProcessor** %141, align 8
  %143 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 0
  tail call void @_ZN4SkSL3dsl22StartFragmentProcessorEP23GrGLSLFragmentProcessorPNS1_8EmitArgsE(%class.GrGLSLFragmentProcessor* %143, %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1) #10
  %144 = bitcast %"class.SkSL::dsl::DSLVar"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %144) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 152, i1 false)
  %145 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %6, i64 0, i32 0, i32 0, i32 1
  %147 = bitcast i32* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %147, i8 -1, i64 40, i1 false) #10
  %148 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %6, i64 0, i32 0, i32 0, i32 11
  %149 = bitcast [4 x i8]* %148 to i32*
  store i32 0, i32* %149, align 4
  %150 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %6, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8** %150, align 8
  %151 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %6, i64 0, i32 0, i32 0, i32 12, i32 1
  %152 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %6, i64 0, i32 0, i32 1
  %153 = bitcast i64* %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #10
  store i32 8, i32* %152, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %5, %"class.SkSL::dsl::DSLModifiers"* nonnull byval(%"class.SkSL::dsl::DSLModifiers") align 8 %6, %"class.SkSL::Type"* null, i8 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %5, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 65) #10
  %154 = call i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %5) #10
  %155 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 4, i32 0
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %142, i64 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  %159 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 2
  %160 = load %class.GrShaderCaps*, %class.GrShaderCaps** %159, align 8
  %161 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %160, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = icmp slt i32 %162, 1
  br i1 %163, label %170, label %164

164:                                              ; preds = %2
  %165 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %160, i64 0, i32 2
  %166 = bitcast i56* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = and i64 %167, 1048576
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %2, %164
  %171 = phi i32 [ 0, %2 ], [ 1, %164 ]
  %172 = add i32 %157, 4
  %173 = sdiv i32 %172, 4
  br label %174

174:                                              ; preds = %164, %170
  %175 = phi i32 [ %171, %170 ], [ 2, %164 ]
  %176 = phi i32 [ %173, %170 ], [ 4, %164 ]
  %177 = bitcast %"class.SkSL::dsl::DSLVar"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %177) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 152, i1 false)
  %178 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %9, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %178, align 8
  %179 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %9, i64 0, i32 0, i32 0, i32 1
  %180 = bitcast i32* %179 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %180, i8 -1, i64 40, i1 false) #10
  %181 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %9, i64 0, i32 0, i32 0, i32 11
  %182 = bitcast [4 x i8]* %181 to i32*
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %9, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8** %183, align 8
  %184 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %9, i64 0, i32 0, i32 0, i32 12, i32 1
  %185 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %9, i64 0, i32 0, i32 1
  %186 = bitcast i64* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #10
  store i32 8, i32* %185, align 8
  %187 = bitcast %"class.SkSL::dsl::DSLType"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #10
  %188 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %10, i64 0, i32 0
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %188, align 8
  %189 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %10, i64 0, i32 1
  store i8 7, i8* %189, align 8
  %190 = call { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl5ArrayERKNS0_7DSLTypeEi(%"class.SkSL::dsl::DSLType"* nonnull dereferenceable(16) %10, i32 %176) #10
  %191 = extractvalue { %"class.SkSL::Type"*, i8 } %190, 0
  %192 = extractvalue { %"class.SkSL::Type"*, i8 } %190, 1
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %8, %"class.SkSL::dsl::DSLModifiers"* nonnull byval(%"class.SkSL::dsl::DSLModifiers") align 8 %9, %"class.SkSL::Type"* %191, i8 %192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %11) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #10
  call void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %8, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 82) #10
  %193 = call i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %8) #10
  %194 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 1, i32 0
  store i32 %193, i32* %194, align 8
  %195 = bitcast %"class.SkSL::dsl::DSLVar"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %195) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 -86, i64 152, i1 false)
  %196 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %13, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %196, align 8
  %197 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %13, i64 0, i32 0, i32 0, i32 1
  %198 = bitcast i32* %197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %198, i8 -1, i64 40, i1 false) #10
  %199 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %13, i64 0, i32 0, i32 0, i32 11
  %200 = bitcast [4 x i8]* %199 to i32*
  store i32 0, i32* %200, align 4
  %201 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %13, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8** %201, align 8
  %202 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %13, i64 0, i32 0, i32 0, i32 12, i32 1
  %203 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %13, i64 0, i32 0, i32 1
  %204 = bitcast i64* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #10
  store i32 8, i32* %203, align 8
  %205 = bitcast %"class.SkSL::dsl::DSLType"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #10
  %206 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %14, i64 0, i32 0
  store %"class.SkSL::Type"* null, %"class.SkSL::Type"** %206, align 8
  %207 = getelementptr inbounds %"class.SkSL::dsl::DSLType", %"class.SkSL::dsl::DSLType"* %14, i64 0, i32 1
  store i8 7, i8* %207, align 8
  %208 = call { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl5ArrayERKNS0_7DSLTypeEi(%"class.SkSL::dsl::DSLType"* nonnull dereferenceable(16) %14, i32 %176) #10
  %209 = extractvalue { %"class.SkSL::Type"*, i8 } %208, 0
  %210 = extractvalue { %"class.SkSL::Type"*, i8 } %208, 1
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %15) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %12, %"class.SkSL::dsl::DSLModifiers"* nonnull byval(%"class.SkSL::dsl::DSLModifiers") align 8 %13, %"class.SkSL::Type"* %209, i8 %210, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %15) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #10
  call void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %12, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 87) #10
  %211 = call i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %12) #10
  %212 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 2, i32 0
  store i32 %211, i32* %212, align 4
  %213 = bitcast %"class.SkSL::dsl::DSLVar"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %213) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 152, i1 false)
  %214 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %214) #10
  store i32 0, i32* %18, align 4
  call void @_ZN4SkSL3dsl7DSLType9ConstructIJiEEENS0_13DSLExpressionES1_DpOT_(%"class.SkSL::dsl::DSLExpression"* nonnull sret %17, %"class.SkSL::Type"* null, i8 7, i32* nonnull dereferenceable(4) %18) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %16, %"class.SkSL::Type"* null, i8 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %17) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %214) #10
  call void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %19, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %16, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 91) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %19) #10
  %215 = bitcast %"class.SkSL::dsl::DSLVar"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %215) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 -86, i64 152, i1 false)
  %216 = bitcast %"class.SkSL::dsl::DSLVar"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %216) #10
  call void @_ZN4SkSL3dsl14sk_SampleCoordEv(%"class.SkSL::dsl::DSLVar"* nonnull sret %22) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EONS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %21, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %22) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %20, %"class.SkSL::Type"* null, i8 18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %21) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %21) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %216) #10
  call void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %23, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %20, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 94) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %23) #10
  switch i32 %175, label %260 [
    i32 0, label %217
    i32 1, label %230
    i32 2, label %239
  ]

217:                                              ; preds = %174
  %218 = icmp slt i32 %157, 0
  br i1 %218, label %260, label %219

219:                                              ; preds = %217
  %220 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %35 to i8*
  %221 = bitcast %"class.SkSL::dsl::DSLExpression"* %36 to i8*
  %222 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %41 to i8*
  %223 = bitcast %"class.SkSL::dsl::DSLExpression"* %42 to i8*
  br label %224

224:                                              ; preds = %224, %219
  %225 = phi i32 [ 0, %219 ], [ %228, %224 ]
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %30, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %20) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #10
  %226 = lshr i32 %225, 2
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %36, i32 %226) #10
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %35, %"class.SkSL::dsl::DSLVar"* nonnull %12, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %36) #10
  %227 = and i32 %225, 3
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %37, i32 %227) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %34, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %35, %"class.SkSL::dsl::DSLExpression"* nonnull %37) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %33, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %34, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %38, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %5) #10
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %32, %"class.SkSL::dsl::DSLExpression"* nonnull %33, %"class.SkSL::dsl::DSLExpression"* nonnull %38) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %31, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %32, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %29, %"class.SkSL::dsl::DSLExpression"* nonnull %30, %"class.SkSL::dsl::DSLExpression"* nonnull %31) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %28, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %29, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4SkSL3dsl11SampleChildEiNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %27, i32 0, %"class.SkSL::dsl::DSLExpression"* nonnull %28) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %42, i32 %226) #10
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %41, %"class.SkSL::dsl::DSLVar"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %42) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %43, i32 %227) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %40, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %41, %"class.SkSL::dsl::DSLExpression"* nonnull %43) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %39, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %40, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 100) #10
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %26, %"class.SkSL::dsl::DSLExpression"* nonnull %27, %"class.SkSL::dsl::DSLExpression"* nonnull %39) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %25, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %26, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %44, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %16) #10
  call void @_ZN4SkSL3dslpLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %24, %"class.SkSL::dsl::DSLExpression"* nonnull %44, %"class.SkSL::dsl::DSLExpression"* nonnull %25) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %24) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %44) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %25) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %26) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %39) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %40) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %43) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %41) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %27) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %28) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %29) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %31) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %32) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %38) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %33) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %34) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %37) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %35) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %30) #10
  %228 = add nuw i32 %225, 1
  %229 = icmp eq i32 %228, %158
  br i1 %229, label %260, label %224

230:                                              ; preds = %174
  %231 = bitcast %"class.SkSL::dsl::DSLVar"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %231) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 -86, i64 152, i1 false)
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %46, i32 0) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %45, %"class.SkSL::Type"* null, i8 31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %46) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %46) #10
  call void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %48, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 105) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %51, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %52, i32 %158) #10
  call void @_ZN4SkSL3dslltENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %50, %"class.SkSL::dsl::DSLExpression"* nonnull %51, %"class.SkSL::dsl::DSLExpression"* nonnull %52) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %49, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %50, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 105) #10
  %232 = bitcast %"class.SkSL::dsl::DSLExpression"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %3, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45) #10, !noalias !2
  call void @_ZN4SkSL3dslppENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %54, %"class.SkSL::dsl::DSLExpression"* nonnull %3, i32 0) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %53, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %54, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 105) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %62, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %20) #10
  %233 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #10
  %234 = bitcast %"class.SkSL::dsl::DSLExpression"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %70, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %71, i32 4) #10
  call void @_ZN4SkSL3dsldvENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %69, %"class.SkSL::dsl::DSLExpression"* nonnull %70, %"class.SkSL::dsl::DSLExpression"* nonnull %71) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %68, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %69, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %67, %"class.SkSL::dsl::DSLVar"* nonnull %12, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %68) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %74, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %75, i32 3) #10
  call void @_ZN4SkSL3dslanENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %73, %"class.SkSL::dsl::DSLExpression"* nonnull %74, %"class.SkSL::dsl::DSLExpression"* nonnull %75) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %72, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %73, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %66, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %67, %"class.SkSL::dsl::DSLExpression"* nonnull %72) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %65, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %66, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %76, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %5) #10
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %64, %"class.SkSL::dsl::DSLExpression"* nonnull %65, %"class.SkSL::dsl::DSLExpression"* nonnull %76) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %63, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %64, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %61, %"class.SkSL::dsl::DSLExpression"* nonnull %62, %"class.SkSL::dsl::DSLExpression"* nonnull %63) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %60, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %61, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4SkSL3dsl11SampleChildEiNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %59, i32 0, %"class.SkSL::dsl::DSLExpression"* nonnull %60) #10
  %235 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #10
  %236 = bitcast %"class.SkSL::dsl::DSLExpression"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %82, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %83, i32 4) #10
  call void @_ZN4SkSL3dsldvENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %81, %"class.SkSL::dsl::DSLExpression"* nonnull %82, %"class.SkSL::dsl::DSLExpression"* nonnull %83) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %80, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %81, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 107) #10
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %79, %"class.SkSL::dsl::DSLVar"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %80) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %86, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %45) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %87, i32 3) #10
  call void @_ZN4SkSL3dslanENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %85, %"class.SkSL::dsl::DSLExpression"* nonnull %86, %"class.SkSL::dsl::DSLExpression"* nonnull %87) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %84, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %85, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 107) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %78, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %79, %"class.SkSL::dsl::DSLExpression"* nonnull %84) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %77, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %78, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 107) #10
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %58, %"class.SkSL::dsl::DSLExpression"* nonnull %59, %"class.SkSL::dsl::DSLExpression"* nonnull %77) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %57, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %58, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %88, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %16) #10
  call void @_ZN4SkSL3dslpLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %56, %"class.SkSL::dsl::DSLExpression"* nonnull %88, %"class.SkSL::dsl::DSLExpression"* nonnull %57) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull %55, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %56, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 106) #10
  %237 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %89, i64 0, i32 0
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i8** %237, align 8
  %238 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %89, i64 0, i32 1
  store i32 105, i32* %238, align 8
  call void @_ZN4SkSL3dsl3ForENS0_12DSLStatementENS0_13DSLExpressionES2_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %47, %"class.SkSL::dsl::DSLStatement"* nonnull %48, %"class.SkSL::dsl::DSLExpression"* nonnull %49, %"class.SkSL::dsl::DSLExpression"* nonnull %53, %"class.SkSL::dsl::DSLStatement"* nonnull %55, %"class.SkSL::dsl::PositionInfo"* nonnull byval(%"class.SkSL::dsl::PositionInfo") align 8 %89) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %47) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %55) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %56) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %88) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %57) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %58) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %77) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %78) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %84) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %85) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %87) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %86) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %79) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %80) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %81) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %83) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %82) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %59) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %60) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %61) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %63) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %64) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %76) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %65) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %66) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %72) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %73) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %75) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %74) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %67) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %68) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %69) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %71) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %70) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %62) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %53) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %54) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %49) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %50) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %52) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %51) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %48) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %231) #10
  br label %260

239:                                              ; preds = %174
  %240 = bitcast %"class.SkSL::dsl::DSLVar"* %90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %240) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %240, i8 -86, i64 152, i1 false)
  %241 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %91, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %241, align 8
  %242 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %91, i64 0, i32 0, i32 0, i32 1
  %243 = bitcast i32* %242 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %243, i8 -1, i64 40, i1 false) #10
  %244 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %91, i64 0, i32 0, i32 0, i32 11
  %245 = bitcast [4 x i8]* %244 to i32*
  store i32 0, i32* %245, align 4
  %246 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %91, i64 0, i32 0, i32 0, i32 12, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8** %246, align 8
  %247 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %91, i64 0, i32 0, i32 0, i32 12, i32 1
  %248 = getelementptr inbounds %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLModifiers"* %91, i64 0, i32 0, i32 1
  %249 = bitcast i64* %247 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 16, i1 false) #10
  store i32 8, i32* %248, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %92) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %90, %"class.SkSL::dsl::DSLModifiers"* nonnull byval(%"class.SkSL::dsl::DSLModifiers") align 8 %91, %"class.SkSL::Type"* null, i8 31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %92) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %92) #10
  call void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %90, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 112) #10
  %250 = call i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %90) #10
  %251 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 3, i32 0
  store i32 %250, i32* %251, align 8
  %252 = bitcast %"class.SkSL::dsl::DSLVar"* %93 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %252) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 152, i1 false)
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %94, i32 0) #10
  call void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"* nonnull %93, %"class.SkSL::Type"* null, i8 31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %94) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %94) #10
  call void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %96, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 115) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %99, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %100, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %90) #10
  call void @_ZN4SkSL3dslltENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %98, %"class.SkSL::dsl::DSLExpression"* nonnull %99, %"class.SkSL::dsl::DSLExpression"* nonnull %100) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %97, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %98, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 115) #10
  %253 = bitcast %"class.SkSL::dsl::DSLExpression"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93) #10, !noalias !5
  call void @_ZN4SkSL3dslppENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %102, %"class.SkSL::dsl::DSLExpression"* nonnull %4, i32 0) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %101, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %102, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 115) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %110, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %20) #10
  %254 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %115 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #10
  %255 = bitcast %"class.SkSL::dsl::DSLExpression"* %116 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %118, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %119, i32 4) #10
  call void @_ZN4SkSL3dsldvENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %117, %"class.SkSL::dsl::DSLExpression"* nonnull %118, %"class.SkSL::dsl::DSLExpression"* nonnull %119) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %116, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %117, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %115, %"class.SkSL::dsl::DSLVar"* nonnull %12, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %116) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %122, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %123, i32 3) #10
  call void @_ZN4SkSL3dslanENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %121, %"class.SkSL::dsl::DSLExpression"* nonnull %122, %"class.SkSL::dsl::DSLExpression"* nonnull %123) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %120, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %121, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %114, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %115, %"class.SkSL::dsl::DSLExpression"* nonnull %120) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %113, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %114, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %124, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %5) #10
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %112, %"class.SkSL::dsl::DSLExpression"* nonnull %113, %"class.SkSL::dsl::DSLExpression"* nonnull %124) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %111, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %112, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  call void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %109, %"class.SkSL::dsl::DSLExpression"* nonnull %110, %"class.SkSL::dsl::DSLExpression"* nonnull %111) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %108, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %109, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  call void @_ZN4SkSL3dsl11SampleChildEiNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLExpression"* nonnull sret %107, i32 0, %"class.SkSL::dsl::DSLExpression"* nonnull %108) #10
  %256 = bitcast %"class.SkSL::dsl::DSLPossibleExpression"* %127 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #10
  %257 = bitcast %"class.SkSL::dsl::DSLExpression"* %128 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %130, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %131, i32 4) #10
  call void @_ZN4SkSL3dsldvENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %129, %"class.SkSL::dsl::DSLExpression"* nonnull %130, %"class.SkSL::dsl::DSLExpression"* nonnull %131) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %128, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %129, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 117) #10
  call void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %127, %"class.SkSL::dsl::DSLVar"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %128) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %134, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %93) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %135, i32 3) #10
  call void @_ZN4SkSL3dslanENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %133, %"class.SkSL::dsl::DSLExpression"* nonnull %134, %"class.SkSL::dsl::DSLExpression"* nonnull %135) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %132, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %133, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 117) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %126, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %127, %"class.SkSL::dsl::DSLExpression"* nonnull %132) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %125, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %126, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 117) #10
  call void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %106, %"class.SkSL::dsl::DSLExpression"* nonnull %107, %"class.SkSL::dsl::DSLExpression"* nonnull %125) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* nonnull %105, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %106, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %136, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %16) #10
  call void @_ZN4SkSL3dslpLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %104, %"class.SkSL::dsl::DSLExpression"* nonnull %136, %"class.SkSL::dsl::DSLExpression"* nonnull %105) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull %103, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %104, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 116) #10
  %258 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %137, i64 0, i32 0
  store i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i8** %258, align 8
  %259 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %137, i64 0, i32 1
  store i32 115, i32* %259, align 8
  call void @_ZN4SkSL3dsl3ForENS0_12DSLStatementENS0_13DSLExpressionES2_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %95, %"class.SkSL::dsl::DSLStatement"* nonnull %96, %"class.SkSL::dsl::DSLExpression"* nonnull %97, %"class.SkSL::dsl::DSLExpression"* nonnull %101, %"class.SkSL::dsl::DSLStatement"* nonnull %103, %"class.SkSL::dsl::PositionInfo"* nonnull byval(%"class.SkSL::dsl::PositionInfo") align 8 %137) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %95) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %103) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %104) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %136) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %105) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %106) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %125) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %126) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %132) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %133) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %135) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %134) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %127) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %128) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %129) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %131) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %130) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %107) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %108) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %109) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %111) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %112) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %124) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %113) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %114) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %120) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %121) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %123) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %122) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %115) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %116) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %117) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %119) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %118) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %110) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %101) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %102) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %97) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %98) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %100) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %99) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %96) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %252) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %90) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %240) #10
  br label %260

260:                                              ; preds = %224, %217, %174, %239, %230
  call void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"* nonnull %139, %"class.SkSL::dsl::DSLVar"* nonnull dereferenceable(152) %16) #10
  call void @_ZN4SkSL3dsl6ReturnENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* nonnull sret %138, %"class.SkSL::dsl::DSLExpression"* nonnull %139, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.1, i64 0, i64 0), i32 122) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %138) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %139) #10
  call void @_ZN4SkSL3dsl20EndFragmentProcessorEv() #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %215) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %213) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %195) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %177) #10
  call void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %144) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4SkSL3dsl22StartFragmentProcessorEP23GrGLSLFragmentProcessorPNS1_8EmitArgsE(%class.GrGLSLFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4SkSL3dsl13DSLExpressionC1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarC1ENS0_12DSLModifiersENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLModifiers"* byval(%"class.SkSL::dsl::DSLModifiers") align 8, %"class.SkSL::Type"*, i8, i8*, %"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #3

declare void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #2

declare i32 @_ZN4SkSL3dsl16VarUniformHandleERKNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare { %"class.SkSL::Type"*, i8 } @_ZN4SkSL3dsl5ArrayERKNS0_7DSLTypeEi(%"class.SkSL::dsl::DSLType"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarC1ENS0_7DSLTypeEPKcNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLVar"*, %"class.SkSL::Type"*, i8, i8*, %"class.SkSL::dsl::DSLExpression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* sret, %"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"*) unnamed_addr #3

declare void @_ZN4SkSL3dsl14sk_SampleCoordEv(%"class.SkSL::dsl::DSLVar"* sret) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1EONS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl6DSLVarD1Ev(%"class.SkSL::dsl::DSLVar"*) unnamed_addr #3

declare void @_ZN4SkSL3dslpLENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslmlENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl11SampleChildEiNS0_13DSLExpressionE(%"class.SkSL::dsl::DSLExpression"* sret, i32, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslplENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1ERNS0_6DSLVarE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLVar"* dereferenceable(152)) unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarixEONS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLVar"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"*, i32) unnamed_addr #2

declare void @_ZN4SkSL3dsl21DSLPossibleExpressionixENS0_13DSLExpressionE(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"*) unnamed_addr #3

declare void @_ZN4SkSL3dsl3ForENS0_12DSLStatementENS0_13DSLExpressionES2_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* sret, %"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::PositionInfo"* byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #2

declare void @_ZN4SkSL3dslltENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsldvENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dslanENS0_13DSLExpressionES1_(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl12DSLStatementC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

declare void @_ZN4SkSL3dsl6ReturnENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl20EndFragmentProcessorEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN38GrGaussianConvolutionFragmentProcessor4Impl9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%"class.GrGaussianConvolutionFragmentProcessor::Impl"* nocapture readonly, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to [2 x float]*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  store i64 0, i64* %4, align 8
  %7 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 3
  %8 = bitcast %class.GrFragmentProcessor* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 %10
  store float 1.000000e+00, float* %11, align 4
  %12 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 4, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = bitcast i64* %4 to float*
  %15 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32, float*)***
  %16 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %16, i64 9
  %18 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %17, align 8
  call void %18(%class.GrGLSLProgramDataManager* %1, i32 %13, i32 1, float* nonnull %14) #10
  %19 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 2, i32 5
  %20 = bitcast [4 x i8]* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 4
  %23 = sdiv i32 %22, 4
  %24 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 5
  %27 = bitcast [4 x i8]* %26 to float*
  %28 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %15, align 8
  %29 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %28, i64 17
  %30 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %29, align 8
  call void %30(%class.GrGLSLProgramDataManager* %1, i32 %25, i32 %23, float* %27) #10
  %31 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 5
  %34 = bitcast [4 x i8]* %33 to float*
  %35 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*** %15, align 8
  %36 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %35, i64 17
  %37 = load void (%class.GrGLSLProgramDataManager*, i32, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, i32, float*)** %36, align 8
  call void %37(%class.GrGLSLProgramDataManager* %1, i32 %32, i32 %23, float* %34) #10
  %38 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 3, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %47, label %41

41:                                               ; preds = %3
  %42 = add nsw i32 %21, 1
  %43 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, i32)***
  %44 = load void (%class.GrGLSLProgramDataManager*, i32, i32)**, void (%class.GrGLSLProgramDataManager*, i32, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, i32)*, void (%class.GrGLSLProgramDataManager*, i32, i32)** %44, i64 2
  %46 = load void (%class.GrGLSLProgramDataManager*, i32, i32)*, void (%class.GrGLSLProgramDataManager*, i32, i32)** %45, align 8
  call void %46(%class.GrGLSLProgramDataManager* %1, i32 %39, i32 %42) #10
  br label %47

47:                                               ; preds = %3, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN38GrGaussianConvolutionFragmentProcessor4MakeE18GrSurfaceProxyView11SkAlphaTypeNS_9DirectionEifN14GrSamplerState8WrapModeERK7SkIRectPS6_RK6GrCaps(%class.GrSurfaceProxyView* nocapture, i32, i32, i32, float, i8 zeroext, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* readonly, %class.GrCaps* dereferenceable(232)) local_unnamed_addr #0 align 2 {
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %struct.SkRect*
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %15 = alloca %class.GrSurfaceProxyView, align 8
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = fcmp ole float %4, 0x3F9EB851E0000000
  %18 = xor i1 %17, true
  %19 = select i1 %17, i32 0, i32 %3
  %20 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %8, i64 0, i32 2, i32 0
  %21 = load %class.GrShaderCaps*, %class.GrShaderCaps** %20, align 8
  %22 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %21, i64 0, i32 2
  %23 = bitcast i56* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1048576
  %26 = icmp ne i64 %25, 0
  %27 = icmp eq %struct.SkIRect* %7, null
  %28 = or i1 %27, %26
  br i1 %28, label %124, label %29

29:                                               ; preds = %9
  %30 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1, i64 0
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 3
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sitofp i32 %37 to float
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to float
  %45 = fadd float %35, 5.000000e-01
  %46 = fadd float %38, 5.000000e-01
  %47 = fadd float %41, -5.000000e-01
  %48 = fadd float %44, -5.000000e-01
  %49 = insertelement <2 x float> undef, float %45, i32 0
  %50 = insertelement <2 x float> %49, float %46, i32 1
  %51 = insertelement <2 x float> undef, float %47, i32 0
  %52 = insertelement <2 x float> %51, float %48, i32 1
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  store <2 x float> %50, <2 x float>* %53, align 8
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  store <2 x float> %52, <2 x float>* %54, align 8
  switch i32 %2, label %68 [
    i32 0, label %55
    i32 1, label %59
  ]

55:                                               ; preds = %29
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0, i64 0
  %57 = sitofp i32 %19 to float
  %58 = fsub float %45, %57
  store float %58, float* %56, align 8
  br label %63

59:                                               ; preds = %29
  %60 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 1
  %61 = sitofp i32 %19 to float
  %62 = fsub float %46, %61
  store float %62, float* %60, align 4
  br label %63

63:                                               ; preds = %55, %59
  %64 = phi float [ 0.000000e+00, %59 ], [ %57, %55 ]
  %65 = phi float [ %61, %59 ], [ 0.000000e+00, %55 ]
  %66 = fadd float %47, %64
  store float %66, float* %31, align 8
  %67 = fadd float %48, %65
  store float %67, float* %32, align 4
  br label %68

68:                                               ; preds = %63, %29
  %69 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %70 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  %71 = load i64, i64* %70, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %69, align 8
  %72 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %74 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  store i32 %75, i32* %73, align 8
  %76 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %77 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %78 = load i16, i16* %77, align 2
  store i16 %78, i16* %76, align 4
  %79 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %80 = zext i1 %18 to i64
  %81 = shl nuw nsw i64 %80, 32
  %82 = zext i8 %5 to i64
  %83 = shl nuw nsw i64 %82, 8
  %84 = or i64 %83, %82
  %85 = or i64 %84, %81
  %86 = or i64 %85, 2863267840
  %87 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #10
  %88 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = sitofp i32 %89 to float
  %91 = insertelement <2 x float> undef, float %90, i32 0
  %92 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sitofp i32 %93 to float
  %95 = insertelement <2 x float> %91, float %94, i32 1
  %96 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = sitofp i32 %97 to float
  %99 = insertelement <2 x float> undef, float %98, i32 0
  %100 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %101 = load i32, i32* %100, align 4
  %102 = sitofp i32 %101 to float
  %103 = insertelement <2 x float> %99, float %102, i32 1
  %104 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %95, <2 x float>* %104, align 8
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %103, <2 x float>* %105, align 8
  %106 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView* nonnull %12, i32 %1, %class.SkMatrix* dereferenceable(40) %79, i64 %86, i32 0, %struct.SkRect* nonnull dereferenceable(16) %14, %struct.SkRect* nonnull dereferenceable(16) %11, %class.GrCaps* dereferenceable(232) %8, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0)) #10
  %107 = ptrtoint %class.GrFragmentProcessor* %106 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #10
  %108 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %109 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %108, align 8
  %110 = icmp eq %class.GrSurfaceProxy* %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %68
  %112 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %109, i64 0, i32 1
  %113 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %123

116:                                              ; preds = %111
  %117 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %112, i64 -2
  %118 = bitcast %class.SkNVRefCnt* %117 to %class.GrSurfaceProxy*
  %119 = bitcast %class.SkNVRefCnt* %117 to void (%class.GrSurfaceProxy*)***
  %120 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %120, i64 1
  %122 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %121, align 8
  call void %122(%class.GrSurfaceProxy* nonnull %118) #10
  br label %123

123:                                              ; preds = %68, %111, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  br label %180

124:                                              ; preds = %9
  %125 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %126 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 0, i32 0
  %127 = bitcast %class.GrSurfaceProxyView* %0 to i64*
  %128 = load i64, i64* %127, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %126, align 8
  %129 = bitcast %class.GrSurfaceProxyView* %15 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 1
  %131 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 1
  %132 = load i32, i32* %131, align 8
  store i32 %132, i32* %130, align 8
  %133 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 2, i32 0
  %134 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %0, i64 0, i32 2, i32 0
  %135 = load i16, i16* %134, align 2
  store i16 %135, i16* %133, align 4
  %136 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #10
  %137 = zext i1 %18 to i64
  %138 = shl nuw nsw i64 %137, 32
  %139 = zext i8 %5 to i64
  %140 = shl nuw nsw i64 %139, 8
  %141 = or i64 %140, %139
  %142 = or i64 %141, %138
  %143 = or i64 %142, 2863267840
  %144 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #10
  %145 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = sitofp i32 %146 to float
  %148 = insertelement <2 x float> undef, float %147, i32 0
  %149 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = sitofp i32 %150 to float
  %152 = insertelement <2 x float> %148, float %151, i32 1
  %153 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = sitofp i32 %154 to float
  %156 = insertelement <2 x float> undef, float %155, i32 0
  %157 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = sitofp i32 %158 to float
  %160 = insertelement <2 x float> %156, float %159, i32 1
  %161 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  store <2 x float> %152, <2 x float>* %161, align 8
  %162 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  store <2 x float> %160, <2 x float>* %162, align 8
  %163 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView* nonnull %15, i32 %1, %class.SkMatrix* dereferenceable(40) %136, i64 %143, i32 0, %struct.SkRect* nonnull dereferenceable(16) %125, %class.GrCaps* dereferenceable(232) %8, float* getelementptr inbounds ([4 x float], [4 x float]* @_ZN15GrTextureEffect14kDefaultBorderE, i64 0, i64 0), i1 zeroext %26) #10
  %164 = ptrtoint %class.GrFragmentProcessor* %163 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #10
  %165 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %15, i64 0, i32 0, i32 0
  %166 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %165, align 8
  %167 = icmp eq %class.GrSurfaceProxy* %166, null
  br i1 %167, label %180, label %168

168:                                              ; preds = %124
  %169 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %166, i64 0, i32 1
  %170 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %180

173:                                              ; preds = %168
  %174 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %169, i64 -2
  %175 = bitcast %class.SkNVRefCnt* %174 to %class.GrSurfaceProxy*
  %176 = bitcast %class.SkNVRefCnt* %174 to void (%class.GrSurfaceProxy*)***
  %177 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %176, align 8
  %178 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %177, i64 1
  %179 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %178, align 8
  call void %179(%class.GrSurfaceProxy* nonnull %175) #10
  br label %180

180:                                              ; preds = %173, %168, %124, %123
  %181 = phi i64 [ %107, %123 ], [ %164, %124 ], [ %164, %168 ], [ %164, %173 ]
  br i1 %17, label %222, label %182

182:                                              ; preds = %180
  %183 = call i8* @_ZN11GrProcessornwEm(i64 200) #10
  %184 = inttoptr i64 %181 to %class.GrFragmentProcessor*
  %185 = bitcast i8* %183 to %class.GrFragmentProcessor*
  %186 = icmp eq i64 %181, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %184, i64 0, i32 3
  %189 = load i32, i32* %188, align 8
  %190 = and i32 %189, 7
  br label %191

191:                                              ; preds = %182, %187
  %192 = phi i32 [ %190, %187 ], [ 7, %182 ]
  %193 = bitcast i8* %183 to i32 (...)***
  %194 = getelementptr inbounds i8, i8* %183, i64 8
  %195 = bitcast i8* %194 to i32*
  store i32 54, i32* %195, align 8
  %196 = getelementptr inbounds i8, i8* %183, i64 12
  %197 = bitcast i8* %196 to i32*
  store i32 0, i32* %197, align 4
  %198 = getelementptr inbounds i8, i8* %183, i64 24
  %199 = getelementptr inbounds i8, i8* %183, i64 16
  %200 = getelementptr inbounds i8, i8* %183, i64 32
  %201 = bitcast i8* %200 to i64*
  %202 = bitcast i8* %198 to i8**
  store i8* %199, i8** %202, align 8
  store i64 8589934592, i64* %201, align 8
  %203 = getelementptr inbounds i8, i8* %183, i64 40
  %204 = bitcast i8* %203 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %204, align 8
  %205 = getelementptr inbounds i8, i8* %183, i64 48
  %206 = bitcast i8* %205 to i32*
  store i32 %192, i32* %206, align 8
  %207 = getelementptr inbounds i8, i8* %183, i64 52
  %208 = bitcast i8* %207 to i32*
  store i32 0, i32* %208, align 4
  %209 = getelementptr inbounds i8, i8* %183, i64 56
  store i8 0, i8* %209, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV38GrGaussianConvolutionFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %210 = getelementptr inbounds i8, i8* %183, i64 188
  %211 = bitcast i8* %210 to i32*
  store i32 %19, i32* %211, align 4
  %212 = getelementptr inbounds i8, i8* %183, i64 192
  %213 = bitcast i8* %212 to i32*
  store i32 %2, i32* %213, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %185, %class.GrFragmentProcessor* %184, i64 3) #10
  %214 = getelementptr inbounds i8, i8* %183, i64 60
  %215 = bitcast i8* %214 to float*
  %216 = getelementptr inbounds i8, i8* %183, i64 124
  %217 = bitcast i8* %216 to float*
  %218 = load i32, i32* %211, align 4
  call void @_ZN14SkGpuBlurUtils29Compute1DLinearGaussianKernelEPfS0_fi(float* %215, float* %217, float %4, i32 %218) #10
  %219 = load i32, i32* %206, align 8
  %220 = or i32 %219, 16
  store i32 %220, i32* %206, align 8
  %221 = ptrtoint i8* %183 to i64
  br label %222

222:                                              ; preds = %191, %180
  %223 = phi i64 [ %221, %191 ], [ %181, %180 ]
  %224 = inttoptr i64 %223 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %224
}

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectS8_RK6GrCapsPKf(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect10MakeSubsetE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix14GrSamplerStateRK6SkRectRK6GrCapsPKfb(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i64, i32, %struct.SkRect* dereferenceable(16), %class.GrCaps* dereferenceable(232), float*, i1 zeroext) local_unnamed_addr #2

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN38GrGaussianConvolutionFragmentProcessorC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEENS_9DirectionEif(%class.GrGaussianConvolutionFragmentProcessor*, %class.GrFragmentProcessor*, i32, i32, float) unnamed_addr #0 align 2 {
  %6 = bitcast %class.GrGaussianConvolutionFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %7 = icmp eq %class.GrFragmentProcessor* %1, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 7
  br label %12

12:                                               ; preds = %8, %5
  %13 = phi i32 [ %11, %8 ], [ 7, %5 ]
  %14 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 1
  store i32 54, i32* %15, align 8
  %16 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %18 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %19 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %20 = bitcast %class.SkTArray.19* %17 to i8**
  store i8* %18, i8** %20, align 8
  store i64 8589934592, i64* %19, align 8
  %21 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %21, align 8
  %22 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 3
  store i32 %13, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV38GrGaussianConvolutionFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %25 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 3
  store i32 %3, i32* %25, align 4
  %26 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 4
  store i32 %2, i32* %26, align 8
  tail call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %6, %class.GrFragmentProcessor* %1, i64 3) #10
  %27 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 1, i64 0
  %28 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 2, i64 0
  %29 = load i32, i32* %25, align 4
  tail call void @_ZN14SkGpuBlurUtils29Compute1DLinearGaussianKernelEPfS0_fi(float* %27, float* %28, float %4, i32 %29) #10
  %30 = load i32, i32* %22, align 8
  %31 = or i32 %30, 16
  store i32 %31, i32* %22, align 8
  ret void
}

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #2

declare void @_ZN14SkGpuBlurUtils29Compute1DLinearGaussianKernelEPfS0_fi(float*, float*, float, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN38GrGaussianConvolutionFragmentProcessorC2ERKS_(%class.GrGaussianConvolutionFragmentProcessor*, %class.GrGaussianConvolutionFragmentProcessor* dereferenceable(200)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrGaussianConvolutionFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrGaussianConvolutionFragmentProcessor* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 1
  store i32 54, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray.19* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV38GrGaussianConvolutionFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 3
  %20 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %1, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 4
  %23 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  %25 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 1, i64 0
  %26 = bitcast float* %25 to i8*
  %27 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %1, i64 0, i32 1, i64 0
  %28 = bitcast float* %27 to i8*
  %29 = load i32, i32* %19, align 4
  %30 = add nsw i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = shl nsw i64 %31, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %28, i64 %32, i1 false)
  %33 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 2, i64 0
  %34 = bitcast float* %33 to i8*
  %35 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %1, i64 0, i32 2, i64 0
  %36 = bitcast float* %35 to i8*
  %37 = load i32, i32* %19, align 4
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %36, i64 %40, i1 false)
  %41 = load i32, i32* %16, align 8
  %42 = or i32 %41, 16
  store i32 %42, i32* %16, align 8
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK38GrGaussianConvolutionFragmentProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrGaussianConvolutionFragmentProcessor* nocapture readonly, %class.GrShaderCaps* nocapture readonly dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %1, i64 0, i32 2
  %10 = bitcast i56* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1048576
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8, %3
  %15 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 11, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %18 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %18, i64 2
  %20 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %19, align 8
  tail call void %20(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10
  br label %21

21:                                               ; preds = %8, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK38GrGaussianConvolutionFragmentProcessor17onMakeProgramImplEv(%class.GrGaussianConvolutionFragmentProcessor* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #11
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 16, i1 false) #10
  store i64 1, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 32
  %7 = bitcast i8* %6 to i64*
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr"**
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %9, align 8
  store i64 1, i64* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN38GrGaussianConvolutionFragmentProcessor4ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 -1, i64 16, i1 false) #10
  %11 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK38GrGaussianConvolutionFragmentProcessor9onIsEqualERK19GrFragmentProcessor(%class.GrGaussianConvolutionFragmentProcessor* readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 2, i32 5
  %6 = bitcast [4 x i8]* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %4, %7
  br i1 %8, label %9, label %51

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 3
  %13 = bitcast %class.GrFragmentProcessor* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %11, %14
  br i1 %15, label %16, label %51

16:                                               ; preds = %9
  %17 = add nsw i32 %4, 1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 1, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %51, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %23 = bitcast [4 x i8]* %22 to float*
  %24 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 1, i64 0
  br label %25

25:                                               ; preds = %21, %31
  %26 = phi float* [ %33, %31 ], [ %23, %21 ]
  %27 = phi float* [ %32, %31 ], [ %24, %21 ]
  %28 = load float, float* %27, align 4
  %29 = load float, float* %26, align 4
  %30 = fcmp oeq float %28, %29
  br i1 %30, label %31, label %51

31:                                               ; preds = %25
  %32 = getelementptr inbounds float, float* %27, i64 1
  %33 = getelementptr inbounds float, float* %26, i64 1
  %34 = icmp eq float* %32, %19
  br i1 %34, label %35, label %25

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 2, i64 %18
  br i1 %20, label %51, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 5
  %39 = bitcast [4 x i8]* %38 to float*
  %40 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 2, i64 0
  br label %41

41:                                               ; preds = %37, %47
  %42 = phi float* [ %49, %47 ], [ %39, %37 ]
  %43 = phi float* [ %48, %47 ], [ %40, %37 ]
  %44 = load float, float* %43, align 4
  %45 = load float, float* %42, align 4
  %46 = fcmp oeq float %44, %45
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  %48 = getelementptr inbounds float, float* %43, i64 1
  %49 = getelementptr inbounds float, float* %42, i64 1
  %50 = icmp eq float* %48, %36
  br i1 %50, label %51, label %41

51:                                               ; preds = %25, %47, %41, %16, %35, %9, %2
  %52 = phi i1 [ false, %9 ], [ false, %2 ], [ true, %35 ], [ true, %16 ], [ true, %47 ], [ false, %41 ], [ false, %25 ]
  ret i1 %52
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN38GrGaussianConvolutionFragmentProcessor4ImplD0Ev(%"class.GrGaussianConvolutionFragmentProcessor::Impl"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.GrGaussianConvolutionFragmentProcessor::Impl", %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #10
  %3 = bitcast %"class.GrGaussianConvolutionFragmentProcessor::Impl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr.20"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #10
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #10
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN38GrGaussianConvolutionFragmentProcessorD0Ev(%class.GrGaussianConvolutionFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.19, %class.SkTArray.19* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.20"*, %"class.std::__1::unique_ptr.20"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.20"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.19* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrGaussianConvolutionFragmentProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK38GrGaussianConvolutionFragmentProcessor4nameEv(%class.GrGaussianConvolutionFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZNK38GrGaussianConvolutionFragmentProcessor5cloneEv(%class.GrGaussianConvolutionFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 200) #10
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrGaussianConvolutionFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 54, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV38GrGaussianConvolutionFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 188
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds i8, i8* %2, i64 192
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %30, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #10
  %33 = getelementptr inbounds i8, i8* %2, i64 60
  %34 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 1, i64 0
  %35 = bitcast float* %34 to i8*
  %36 = load i32, i32* %26, align 4
  %37 = add nsw i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %35, i64 %39, i1 false) #10
  %40 = getelementptr inbounds i8, i8* %2, i64 124
  %41 = getelementptr inbounds %class.GrGaussianConvolutionFragmentProcessor, %class.GrGaussianConvolutionFragmentProcessor* %0, i64 0, i32 2, i64 0
  %42 = bitcast float* %41 to i8*
  %43 = load i32, i32* %26, align 4
  %44 = add nsw i32 %43, 1
  %45 = sext i32 %44 to i64
  %46 = shl nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %42, i64 %46, i1 false) #10
  %47 = load i32, i32* %21, align 8
  %48 = or i32 %47, 16
  store i32 %48, i32* %21, align 8
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.12, i64 0, i64 0)) #12
  unreachable
}

declare void @_ZN4SkSL3dslppENS0_13DSLExpressionEi(%"class.SkSL::dsl::DSLPossibleExpression"* sret, %"class.SkSL::dsl::DSLExpression"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.1, %class.SkTArray.1* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.1* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #10
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #10
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #10
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLType9ConstructIJiEEENS0_13DSLExpressionES1_DpOT_(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::Type"*, i8, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkTArray.87, align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %7 = alloca %class.SkTArray.87, align 8
  %8 = bitcast %class.SkTArray.87* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %5, i64 0, i32 0
  %10 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %5, i64 0, i32 1
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %9, align 8
  store i64 1, i64* %10, align 8
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.87* nonnull %5, i32 1, i32 0) #10
  %11 = load i64, i64* %10, align 8
  %12 = shl i64 %11, 32
  %13 = and i64 %12, 4294967296
  %14 = and i64 %11, -4294967297
  %15 = or i64 %13, %14
  store i64 %15, i64* %10, align 8
  %16 = load i32, i32* %3, align 4
  call void @_ZN4SkSL3dsl13DSLExpressionC1Ei(%"class.SkSL::dsl::DSLExpression"* nonnull %6, i32 %16) #10
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.87* nonnull %5, i32 1, i32 1) #10
  %17 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %9, align 8
  %18 = load i64, i64* %10, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %17, i64 %20
  %22 = add i64 %18, 2
  %23 = and i64 %22, 4294967294
  %24 = and i64 %18, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %10, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %21, %"class.SkSL::dsl::DSLExpression"* nonnull dereferenceable(8) %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  call void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray.87* nonnull %7, %class.SkTArray.87* nonnull dereferenceable(16) %5)
  call void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::Type"* %1, i8 %2, %class.SkTArray.87* nonnull %7) #10
  %26 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %7, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 4294967294
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %4
  %31 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %7, i64 0, i32 0
  br label %36

32:                                               ; preds = %36, %4
  %33 = phi i64 [ %27, %4 ], [ %41, %36 ]
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %48, label %45

36:                                               ; preds = %36, %30
  %37 = phi i64 [ 0, %30 ], [ %40, %36 ]
  %38 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %31, align 8
  %39 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %38, i64 %37
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %39) #10
  %40 = add nuw nsw i64 %37, 1
  %41 = load i64, i64* %26, align 8
  %42 = lshr i64 %41, 1
  %43 = and i64 %42, 2147483647
  %44 = icmp ult i64 %40, %43
  br i1 %44, label %36, label %32

45:                                               ; preds = %32
  %46 = bitcast %class.SkTArray.87* %7 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @_Z7sk_freePv(i8* %47) #10
  br label %48

48:                                               ; preds = %32, %45
  %49 = load i64, i64* %10, align 8
  %50 = and i64 %49, 4294967294
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %56, %48
  %53 = phi i64 [ %49, %48 ], [ %61, %56 ]
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %68, label %65

56:                                               ; preds = %48, %56
  %57 = phi i64 [ %60, %56 ], [ 0, %48 ]
  %58 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %9, align 8
  %59 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %58, i64 %57
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %59) #10
  %60 = add nuw nsw i64 %57, 1
  %61 = load i64, i64* %10, align 8
  %62 = lshr i64 %61, 1
  %63 = and i64 %62, 2147483647
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %56, label %52

65:                                               ; preds = %52
  %66 = bitcast %class.SkTArray.87* %5 to i8**
  %67 = load i8*, i8** %66, align 8
  call void @_Z7sk_freePv(i8* %67) #10
  br label %68

68:                                               ; preds = %52, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

declare void @_ZN4SkSL3dsl7DSLType9ConstructES1_8SkTArrayINS0_13DSLExpressionELb0EE(%"class.SkSL::dsl::DSLExpression"* sret, %"class.SkSL::Type"*, i8, %class.SkTArray.87*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EEC2EOS3_(%class.SkTArray.87*, %class.SkTArray.87* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.87* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.87* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %8, align 8
  br label %77

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLExpression"* null, %"class.SkSL::dsl::DSLExpression"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %48 = bitcast %class.SkTArray.87* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %69, %60 ]
  %62 = shl nuw nsw i64 %61, 3
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = bitcast i8* %63 to %"class.SkSL::dsl::DSLExpression"*
  %65 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %65, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %64, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %66) #10
  %67 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %59, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %67, i64 %61
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %68) #10
  %69 = add nuw nsw i64 %61, 1
  %70 = load i64, i64* %3, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %60, label %74

74:                                               ; preds = %60, %50
  %75 = phi i64 [ %55, %50 ], [ %70, %60 ]
  %76 = and i64 %75, -4294967295
  br label %77

77:                                               ; preds = %74, %7
  %78 = phi i64 [ %76, %74 ], [ 1, %7 ]
  store i64 %78, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl13DSLExpressionELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.87*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.87, %class.SkTArray.87* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %"class.SkSL::dsl::DSLExpression"*
  %55 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %49, align 8
  %56 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %55, i64 %51
  tail call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* %54, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %56) #10
  %57 = load %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"** %49, align 8
  %58 = getelementptr inbounds %"class.SkSL::dsl::DSLExpression", %"class.SkSL::dsl::DSLExpression"* %57, i64 %51
  tail call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* %58) #10
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.87* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #10
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4SkSL3dsl6DSLVarppEi: argument 0"}
!4 = distinct !{!4, !"_ZN4SkSL3dsl6DSLVarppEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4SkSL3dsl6DSLVarppEi: argument 0"}
!7 = distinct !{!7, !"_ZN4SkSL3dsl6DSLVarppEi"}
