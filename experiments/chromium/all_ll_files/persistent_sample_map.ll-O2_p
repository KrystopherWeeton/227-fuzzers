; ModuleID = '../../base/metrics/persistent_sample_map.cc'
source_filename = "../../base/metrics/persistent_sample_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::PersistentSampleMap" = type { %"class.base::HistogramSamples", %"class.std::__1::map", %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentSampleMapRecords"* }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::PersistentSampleMapRecords" = type { %"class.base::PersistentSparseHistogramDataManager"*, i64, i8*, i64, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.base::PersistentSparseHistogramDataManager" = type { %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator::Iterator", %"class.std::__1::map.12", %"class.base::Lock" }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.6", [4 x i8] }>
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.base::PersistentMemoryAllocator::Iterator" = type { %"class.base::PersistentMemoryAllocator"*, %"struct.std::__1::atomic.6", %"struct.std::__1::atomic.6" }
%"class.std::__1::map.12" = type { %"class.std::__1::__tree.13" }
%"class.std::__1::__tree.13" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.base::PersistentHistogramAllocator" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", %"class.base::PersistentSparseHistogramDataManager", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::PersistentMemoryAllocator"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32* }
%"class.base::SampleCountIterator" = type { i32 (...)** }
%"class.base::(anonymous namespace)::PersistentSampleMapIterator" = type { %"class.base::SampleCountIterator", %"class.std::__1::__map_const_iterator", %"class.std::__1::__map_const_iterator" }
%"class.std::__1::__map_const_iterator" = type { %"class.std::__1::__tree_const_iterator" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.base::PickleIterator" = type opaque
%"class.base::Pickle" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN4base19PersistentSampleMapE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::PersistentSampleMap"*)* @_ZN4base19PersistentSampleMapD2Ev to i8*), i8* bitcast (void (%"class.base::PersistentSampleMap"*)* @_ZN4base19PersistentSampleMapD0Ev to i8*), i8* bitcast (void (%"class.base::PersistentSampleMap"*, i32, i32)* @_ZN4base19PersistentSampleMap10AccumulateEii to i8*), i8* bitcast (i32 (%"class.base::PersistentSampleMap"*, i32)* @_ZNK4base19PersistentSampleMap8GetCountEi to i8*), i8* bitcast (i32 (%"class.base::PersistentSampleMap"*)* @_ZNK4base19PersistentSampleMap10TotalCountEv to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)* @_ZN4base16HistogramSamples3AddERKS0_ to i8*), i8* bitcast (i1 (%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*)* @_ZN4base16HistogramSamples13AddFromPickleEPNS_14PickleIteratorE to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"*)* @_ZN4base16HistogramSamples8SubtractERKS0_ to i8*), i8* bitcast (%"class.base::SampleCountIterator"* (%"class.base::PersistentSampleMap"*)* @_ZNK4base19PersistentSampleMap8IteratorEv to i8*), i8* bitcast (void (%"class.base::HistogramSamples"*, %"class.base::Pickle"*)* @_ZNK4base16HistogramSamples9SerializeEPNS_6PickleE to i8*), i8* bitcast (i1 (%"class.base::PersistentSampleMap"*, %"class.base::SampleCountIterator"*, i32)* @_ZN4base19PersistentSampleMap15AddSubtractImplEPNS_19SampleCountIteratorENS_16HistogramSamples8OperatorE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::HistogramSamples"*)* @_ZNK4base16HistogramSamples12GetAsciiBodyEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.base::HistogramSamples"*, i8*, i64, i32)* @_ZNK4base16HistogramSamples14GetAsciiHeaderENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi to i8*)] }, align 8
@_ZTVN4base12_GLOBAL__N_127PersistentSampleMapIteratorE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SampleCountIterator"*)* @_ZN4base19SampleCountIteratorD2Ev to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)* @_ZN4base12_GLOBAL__N_127PersistentSampleMapIteratorD0Ev to i8*), i8* bitcast (i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)* @_ZNK4base12_GLOBAL__N_127PersistentSampleMapIterator4DoneEv to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)* @_ZN4base12_GLOBAL__N_127PersistentSampleMapIterator4NextEv to i8*), i8* bitcast (void (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*, i32*, i64*, i32*)* @_ZNK4base12_GLOBAL__N_127PersistentSampleMapIterator3GetEPiPlS2_ to i8*), i8* bitcast (i1 (%"class.base::SampleCountIterator"*, i64*)* @_ZNK4base19SampleCountIterator14GetBucketIndexEPm to i8*)] }, align 8

@_ZN4base19PersistentSampleMapC1EmPNS_28PersistentHistogramAllocatorEPNS_16HistogramSamples8MetadataE = hidden unnamed_addr alias void (%"class.base::PersistentSampleMap"*, i64, %"class.base::PersistentHistogramAllocator"*, %"struct.base::HistogramSamples::Metadata"*), void (%"class.base::PersistentSampleMap"*, i64, %"class.base::PersistentHistogramAllocator"*, %"struct.base::HistogramSamples::Metadata"*)* @_ZN4base19PersistentSampleMapC2EmPNS_28PersistentHistogramAllocatorEPNS_16HistogramSamples8MetadataE
@_ZN4base19PersistentSampleMapD1Ev = hidden unnamed_addr alias void (%"class.base::PersistentSampleMap"*), void (%"class.base::PersistentSampleMap"*)* @_ZN4base19PersistentSampleMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PersistentSampleMapC2EmPNS_28PersistentHistogramAllocatorEPNS_16HistogramSamples8MetadataE(%"class.base::PersistentSampleMap"*, i64, %"class.base::PersistentHistogramAllocator"*, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0
  tail call void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"* %5, i64 %1, %"struct.base::HistogramSamples::Metadata"* %3) #8
  %6 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base19PersistentSampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 2
  store %"class.base::PersistentHistogramAllocator"* %2, %"class.base::PersistentHistogramAllocator"** %11, align 8
  %12 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 3
  store %"class.base::PersistentSampleMapRecords"* null, %"class.base::PersistentSampleMapRecords"** %12, align 8
  ret void
}

declare void @_ZN4base16HistogramSamplesC2EmPNS0_8MetadataE(%"class.base::HistogramSamples"*, i64, %"struct.base::HistogramSamples::Metadata"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PersistentSampleMapD2Ev(%"class.base::PersistentSampleMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base19PersistentSampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 3
  %4 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %3, align 8
  %5 = icmp eq %"class.base::PersistentSampleMapRecords"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.base::PersistentSampleMap"* %0 to i8*
  tail call void @_ZN4base26PersistentSampleMapRecords7ReleaseEPKv(%"class.base::PersistentSampleMapRecords"* nonnull %4, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node"* %12) #8
  %13 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0
  tail call void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"* %13) #8
  ret void
}

declare void @_ZN4base26PersistentSampleMapRecords7ReleaseEPKv(%"class.base::PersistentSampleMapRecords"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PersistentSampleMapD0Ev(%"class.base::PersistentSampleMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4base19PersistentSampleMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 3
  %4 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %3, align 8
  %5 = icmp eq %"class.base::PersistentSampleMapRecords"* %4, null
  %6 = bitcast %"class.base::PersistentSampleMap"* %0 to i8*
  br i1 %5, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN4base26PersistentSampleMapRecords7ReleaseEPKv(%"class.base::PersistentSampleMapRecords"* nonnull %4, i8* %6) #8
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node"* %12) #8
  %13 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0
  tail call void @_ZN4base16HistogramSamplesD2Ev(%"class.base::HistogramSamples"* %13) #8
  tail call void @_ZdlPv(i8* %6) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19PersistentSampleMap10AccumulateEii(%"class.base::PersistentSampleMap"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = tail call i32* @_ZN4base19PersistentSampleMap29GetOrCreateSampleCountStorageEi(%"class.base::PersistentSampleMap"* %0, i32 %1)
  %5 = icmp slt i32 %2, 0
  %6 = load i32, i32* %4, align 4
  br i1 %5, label %7, label %14

7:                                                ; preds = %3
  %8 = sub nsw i32 0, %2
  %9 = icmp slt i32 %6, %8
  %10 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0
  %11 = select i1 %9, i32 6, i32 5
  tail call void @_ZN4base16HistogramSamples20RecordNegativeSampleENS0_20NegativeSampleReasonEi(%"class.base::HistogramSamples"* %10, i32 %11, i32 %8) #8
  %12 = load i32, i32* %4, align 4
  %13 = add nsw i32 %12, %2
  store i32 %13, i32* %4, align 4
  br label %20

14:                                               ; preds = %3
  %15 = add nsw i32 %6, %2
  store i32 %15, i32* %4, align 4
  %16 = xor i32 %15, %6
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0
  tail call void @_ZN4base16HistogramSamples20RecordNegativeSampleENS0_20NegativeSampleReasonEi(%"class.base::HistogramSamples"* %19, i32 8, i32 %2) #8
  br label %20

20:                                               ; preds = %14, %18, %7
  %21 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0
  %22 = sext i32 %2 to i64
  %23 = sext i32 %1 to i64
  %24 = mul nsw i64 %22, %23
  tail call void @_ZN4base16HistogramSamples19IncreaseSumAndCountEli(%"class.base::HistogramSamples"* %21, i64 %24, i32 %2) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZN4base19PersistentSampleMap29GetOrCreateSampleCountStorageEi(%"class.base::PersistentSampleMap"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32**
  %31 = load i32*, i32** %30, align 8
  br label %34

32:                                               ; preds = %23, %21, %2
  %33 = tail call i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"* %0, i32 %1, i1 zeroext false) #8
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi i32* [ %31, %28 ], [ %33, %32 ]
  %36 = icmp eq i32* %35, null
  br i1 %36, label %37, label %117

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 3
  %39 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %38, align 8
  %40 = tail call i32 @_ZN4base26PersistentSampleMapRecords9CreateNewEi(%"class.base::PersistentSampleMapRecords"* %39, i32 %1) #8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %115

42:                                               ; preds = %37
  %43 = tail call i8* @_Znwm(i64 4) #9
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1
  %46 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %47 = icmp eq %"class.std::__1::__tree_node"* %46, null
  br i1 %47, label %76, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %72, %48
  %51 = phi %"class.std::__1::__tree_node"* [ %75, %72 ], [ %46, %48 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %49, %48 ]
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 1, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, %1
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %78

62:                                               ; preds = %50
  %63 = icmp slt i32 %54, %1
  br i1 %63, label %64, label %70

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %78

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  br label %78

72:                                               ; preds = %64, %56
  %73 = phi %"class.std::__1::__tree_node_base"* [ %58, %56 ], [ %66, %64 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %65, %64 ]
  %75 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"class.std::__1::__tree_node"*
  br label %50

76:                                               ; preds = %42
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %78

78:                                               ; preds = %76, %70, %68, %60
  %79 = phi %"class.std::__1::__tree_end_node"* [ %3, %76 ], [ %61, %60 ], [ %69, %68 ], [ %71, %70 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %77, %76 ], [ %57, %60 ], [ %65, %68 ], [ %52, %70 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"** %80 to %"class.std::__1::__tree_node"**
  %82 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node"* %82, null
  br i1 %83, label %84, label %111

84:                                               ; preds = %78
  %85 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %86 = getelementptr inbounds i8, i8* %85, i64 32
  %87 = bitcast i8* %86 to i32*
  store i32 %1, i32* %87, align 8, !noalias !2
  %88 = getelementptr inbounds i8, i8* %85, i64 40
  %89 = bitcast i8* %88 to i32**
  store i32* null, i32** %89, align 8, !noalias !2
  %90 = bitcast i8* %85 to %"class.std::__1::__tree_node"*
  %91 = bitcast i8* %85 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds i8, i8* %85, i64 16
  %93 = bitcast i8* %92 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %93, align 8
  %94 = bitcast %"class.std::__1::__tree_node_base"** %80 to i8**
  store i8* %85, i8** %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %45, i64 0, i32 0, i32 0
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %84
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  %102 = bitcast %"class.std::__1::map"* %45 to i64*
  store i64 %101, i64* %102, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  br label %104

104:                                              ; preds = %100, %84
  %105 = phi %"class.std::__1::__tree_node_base"* [ %91, %84 ], [ %103, %100 ]
  %106 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %107, %"class.std::__1::__tree_node_base"* %105) #8
  %108 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %108, align 8
  br label %111

111:                                              ; preds = %78, %104
  %112 = phi %"class.std::__1::__tree_node"* [ %90, %104 ], [ %82, %78 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %112, i64 0, i32 1, i32 0, i32 1
  %114 = bitcast i32** %113 to i8**
  store i8* %43, i8** %114, align 8
  br label %117

115:                                              ; preds = %37
  %116 = tail call i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"* %0, i32 %1, i1 zeroext false)
  br label %117

117:                                              ; preds = %111, %115, %34
  %118 = phi i32* [ %35, %34 ], [ %116, %115 ], [ %44, %111 ]
  ret i32* %118
}

declare void @_ZN4base16HistogramSamples20RecordNegativeSampleENS0_20NegativeSampleReasonEi(%"class.base::HistogramSamples"*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base16HistogramSamples19IncreaseSumAndCountEli(%"class.base::HistogramSamples"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base19PersistentSampleMap8GetCountEi(%"class.base::PersistentSampleMap"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32**
  %31 = load i32*, i32** %30, align 8
  br label %34

32:                                               ; preds = %23, %21, %2
  %33 = tail call i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"* %0, i32 %1, i1 zeroext false) #8
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi i32* [ %31, %28 ], [ %33, %32 ]
  %36 = icmp eq i32* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %35, align 4
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i32 [ %38, %37 ], [ 0, %34 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZN4base19PersistentSampleMap21GetSampleCountStorageEi(%"class.base::PersistentSampleMap"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32**
  %31 = load i32*, i32** %30, align 8
  br label %34

32:                                               ; preds = %23, %21, %2
  %33 = tail call i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"* %0, i32 %1, i1 zeroext false)
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i32* [ %31, %28 ], [ %33, %32 ]
  ret i32* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base19PersistentSampleMap10TotalCountEv(%"class.base::PersistentSampleMap"*) unnamed_addr #0 align 2 {
  %2 = tail call i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"* %0, i32 -1, i1 zeroext true)
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %44, %1
  %8 = phi i32 [ 0, %1 ], [ %16, %44 ]
  ret i32 %8

9:                                                ; preds = %1, %44
  %10 = phi i32 [ %16, %44 ], [ 0, %1 ]
  %11 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %9
  %21 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %9, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %9 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %20, %33
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %5
  br i1 %46, label %7, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 3
  %5 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %4, align 8
  %6 = icmp eq %"class.base::PersistentSampleMapRecords"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 2
  %9 = load %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentHistogramAllocator"** %8, align 8
  %10 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0, i32 1
  %11 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %10, align 8
  %12 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::PersistentSampleMap"* %0 to i8*
  %15 = tail call %"class.base::PersistentSampleMapRecords"* @_ZN4base28PersistentHistogramAllocator19UseSampleMapRecordsEmPKv(%"class.base::PersistentHistogramAllocator"* %9, i64 %13, i8* %14) #8
  store %"class.base::PersistentSampleMapRecords"* %15, %"class.base::PersistentSampleMapRecords"** %4, align 8
  br label %16

16:                                               ; preds = %3, %7
  %17 = phi %"class.base::PersistentSampleMapRecords"* [ %5, %3 ], [ %15, %7 ]
  %18 = tail call i32 @_ZN4base26PersistentSampleMapRecords7GetNextEv(%"class.base::PersistentSampleMapRecords"* %17) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %145, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::PersistentSampleMapRecords", %"class.base::PersistentSampleMapRecords"* %17, i64 0, i32 0
  %22 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::map"* %22 to i64*
  %29 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %30

30:                                               ; preds = %20, %141
  %31 = phi i32 [ %18, %20 ], [ %143, %141 ]
  %32 = phi i32* [ null, %20 ], [ %142, %141 ]
  %33 = load %"class.base::PersistentSparseHistogramDataManager"*, %"class.base::PersistentSparseHistogramDataManager"** %21, align 8
  %34 = getelementptr inbounds %"class.base::PersistentSparseHistogramDataManager", %"class.base::PersistentSparseHistogramDataManager"* %33, i64 0, i32 0
  %35 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %34, align 8
  %36 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %35, i32 %31, i32 -1880709472, i32 16) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %141, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %36, i64 12
  %45 = bitcast i8* %44 to i32*
  br label %98

46:                                               ; preds = %38
  %47 = load i32, i32* %40, align 4
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi %"class.std::__1::__tree_end_node"* [ %23, %46 ], [ %59, %48 ]
  %50 = phi %"class.std::__1::__tree_node"* [ %41, %46 ], [ %60, %48 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, %47
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::__tree_node_base"** %54 to %"class.std::__1::__tree_node"**
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_node"* %50 to %"class.std::__1::__tree_node"**
  %58 = select i1 %53, %"class.std::__1::__tree_node"** %55, %"class.std::__1::__tree_node"** %57
  %59 = select i1 %53, %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"* %56
  %60 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %58, align 8
  %61 = icmp eq %"class.std::__1::__tree_node"* %60, null
  br i1 %61, label %62, label %48

62:                                               ; preds = %48
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %59, %23
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 4
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %47, %67
  br i1 %68, label %69, label %133

69:                                               ; preds = %62, %64
  %70 = getelementptr inbounds i8, i8* %36, i64 12
  %71 = bitcast i8* %70 to i32*
  br label %72

72:                                               ; preds = %94, %69
  %73 = phi %"class.std::__1::__tree_node"* [ %97, %94 ], [ %41, %69 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %96, %94 ], [ %25, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 1, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %47, %76
  br i1 %77, label %78, label %84

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %82, label %94

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0
  br label %98

84:                                               ; preds = %72
  %85 = icmp slt i32 %76, %47
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 1
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0
  br label %98

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0
  br label %98

94:                                               ; preds = %86, %78
  %95 = phi %"class.std::__1::__tree_node_base"* [ %80, %78 ], [ %88, %86 ]
  %96 = phi %"class.std::__1::__tree_node_base"** [ %79, %78 ], [ %87, %86 ]
  %97 = bitcast %"class.std::__1::__tree_node_base"* %95 to %"class.std::__1::__tree_node"*
  br label %72

98:                                               ; preds = %43, %92, %90, %82
  %99 = phi i32* [ %71, %82 ], [ %71, %90 ], [ %71, %92 ], [ %45, %43 ]
  %100 = phi %"class.std::__1::__tree_end_node"* [ %83, %82 ], [ %91, %90 ], [ %93, %92 ], [ %23, %43 ]
  %101 = phi %"class.std::__1::__tree_node_base"** [ %79, %82 ], [ %87, %90 ], [ %74, %92 ], [ %26, %43 ]
  %102 = bitcast %"class.std::__1::__tree_node_base"** %101 to %"class.std::__1::__tree_node"**
  %103 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node"* %103, null
  br i1 %104, label %105, label %129

105:                                              ; preds = %98
  %106 = tail call i8* @_Znwm(i64 48) #9, !noalias !5
  %107 = getelementptr inbounds i8, i8* %106, i64 32
  %108 = bitcast i8* %107 to i32*
  %109 = load i32, i32* %40, align 4, !noalias !5
  store i32 %109, i32* %108, align 8, !noalias !5
  %110 = getelementptr inbounds i8, i8* %106, i64 40
  %111 = bitcast i8* %110 to i32**
  store i32* null, i32** %111, align 8, !noalias !5
  %112 = bitcast i8* %106 to %"class.std::__1::__tree_node"*
  %113 = bitcast i8* %106 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds i8, i8* %106, i64 16
  %115 = bitcast i8* %114 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** %115, align 8
  %116 = bitcast %"class.std::__1::__tree_node_base"** %101 to i8**
  store i8* %106, i8** %116, align 8
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %105
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  store i64 %122, i64* %28, align 8
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  br label %124

124:                                              ; preds = %121, %105
  %125 = phi %"class.std::__1::__tree_node_base"* [ %113, %105 ], [ %123, %121 ]
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %126, %"class.std::__1::__tree_node_base"* %125) #8
  %127 = load i64, i64* %29, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %29, align 8
  br label %129

129:                                              ; preds = %98, %124
  %130 = phi %"class.std::__1::__tree_node"* [ %112, %124 ], [ %103, %98 ]
  %131 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %130, i64 0, i32 1, i32 0, i32 1
  store i32* %99, i32** %131, align 8
  %132 = load i32, i32* %40, align 8
  br label %133

133:                                              ; preds = %64, %129
  %134 = phi i32 [ %47, %64 ], [ %132, %129 ]
  %135 = icmp eq i32 %134, %1
  br i1 %135, label %136, label %141

136:                                              ; preds = %133
  %137 = icmp eq i32* %32, null
  %138 = getelementptr inbounds i8, i8* %36, i64 12
  %139 = bitcast i8* %138 to i32*
  %140 = select i1 %137, i32* %139, i32* %32
  br i1 %2, label %141, label %145

141:                                              ; preds = %133, %136, %30
  %142 = phi i32* [ %32, %30 ], [ %140, %136 ], [ %32, %133 ]
  %143 = tail call i32 @_ZN4base26PersistentSampleMapRecords7GetNextEv(%"class.base::PersistentSampleMapRecords"* %17) #8
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %30

145:                                              ; preds = %141, %136, %16
  %146 = phi i32* [ null, %16 ], [ %140, %136 ], [ %142, %141 ]
  ret i32* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SampleCountIterator"* @_ZNK4base19PersistentSampleMap8IteratorEv(%"class.base::PersistentSampleMap"*) unnamed_addr #0 align 2 {
  %2 = tail call i32* @_ZN4base19PersistentSampleMap13ImportSamplesEib(%"class.base::PersistentSampleMap"* %0, i32 -1, i1 zeroext true)
  %3 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znwm(i64 24) #9
  %5 = bitcast i8* %4 to %"class.base::(anonymous namespace)::PersistentSampleMapIterator"*
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base12_GLOBAL__N_127PersistentSampleMapIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = bitcast %"class.std::__1::map"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds i8, i8* %4, i64 16
  %13 = bitcast i8* %12 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %13, align 8
  %14 = bitcast i8* %9 to %"class.std::__1::__tree_node"**
  %15 = bitcast i8* %4 to i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)***
  %16 = bitcast i8* %9 to %"class.std::__1::__tree_end_node"**
  %17 = inttoptr i64 %8 to %"class.std::__1::__tree_end_node"*
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %11, %17
  br i1 %18, label %68, label %19

19:                                               ; preds = %1
  %20 = inttoptr i64 %8 to %"class.std::__1::__tree_node"*
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %68

25:                                               ; preds = %19
  %26 = inttoptr i64 %8 to %"class.std::__1::__tree_node_base"*
  br label %27

27:                                               ; preds = %61, %25
  %28 = phi %"class.std::__1::__tree_node_base"* [ %67, %61 ], [ %26, %25 ]
  %29 = phi %"class.std::__1::__tree_node"* [ %62, %61 ], [ %20, %25 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %39

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 2
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %28
  br i1 %38, label %55, label %46

39:                                               ; preds = %27, %39
  %40 = phi %"class.std::__1::__tree_node_base"* [ %42, %39 ], [ %31, %27 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %39

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0
  br label %55

46:                                               ; preds = %33, %46
  %47 = phi %"class.std::__1::__tree_end_node"** [ %50, %46 ], [ %34, %33 ]
  %48 = bitcast %"class.std::__1::__tree_end_node"** %47 to %"class.std::__1::__tree_node_base"**
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 2
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %49
  br i1 %54, label %55, label %46

55:                                               ; preds = %46, %44, %33
  %56 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %35, %33 ], [ %51, %46 ]
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %16, align 8
  %57 = load i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)**, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*** %15, align 8
  %58 = getelementptr inbounds i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)** %57, i64 2
  %59 = load i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"* nonnull %5) #8
  br i1 %60, label %68, label %61

61:                                               ; preds = %55
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 1, i32 0, i32 1
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  %67 = bitcast %"class.std::__1::__tree_node"* %62 to %"class.std::__1::__tree_node_base"*
  br i1 %66, label %27, label %68

68:                                               ; preds = %61, %55, %19, %1
  %69 = bitcast i8* %4 to %"class.base::SampleCountIterator"*
  ret %"class.base::SampleCountIterator"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base19PersistentSampleMap23GetNextPersistentRecordERNS_25PersistentMemoryAllocator8IteratorEPm(%"class.base::PersistentMemoryAllocator::Iterator"* dereferenceable(16), i64* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"* %0, i32 -1880709472) #8
  %4 = getelementptr inbounds %"class.base::PersistentMemoryAllocator::Iterator", %"class.base::PersistentMemoryAllocator::Iterator"* %0, i64 0, i32 0
  %5 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %4, align 8
  %6 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %5, i32 %3, i32 -1880709472, i32 16) #8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %6 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %1, align 8
  %11 = load %"class.base::PersistentMemoryAllocator"*, %"class.base::PersistentMemoryAllocator"** %4, align 8
  %12 = tail call i32 @_ZNK4base25PersistentMemoryAllocator14GetAsReferenceEPKvj(%"class.base::PersistentMemoryAllocator"* %11, i8* nonnull %6, i32 -1880709472) #8
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i32 [ %12, %8 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base19PersistentSampleMap22CreatePersistentRecordEPNS_25PersistentMemoryAllocatorEmi(%"class.base::PersistentMemoryAllocator"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN4base25PersistentMemoryAllocator8AllocateEmj(%"class.base::PersistentMemoryAllocator"* %0, i64 16, i32 -1880709472) #8
  %5 = tail call i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"* %0, i32 %4, i32 -1880709472, i32 16) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = bitcast i8* %5 to i64*
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = tail call i32 @_ZNK4base25PersistentMemoryAllocator14GetAsReferenceEPKvj(%"class.base::PersistentMemoryAllocator"* %0, i8* nonnull %5, i32 -1880709472) #8
  tail call void @_ZN4base25PersistentMemoryAllocator12MakeIterableEj(%"class.base::PersistentMemoryAllocator"* %0, i32 %13) #8
  br label %14

14:                                               ; preds = %3, %7
  %15 = phi i32 [ %13, %7 ], [ 0, %3 ]
  ret i32 %15
}

declare void @_ZN4base25PersistentMemoryAllocator12MakeIterableEj(%"class.base::PersistentMemoryAllocator"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base19PersistentSampleMap15AddSubtractImplEPNS_19SampleCountIteratorENS_16HistogramSamples8OperatorE(%"class.base::PersistentSampleMap"*, %"class.base::SampleCountIterator"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %4, align 4
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  store i64 -6148914691236517206, i64* %5, align 8
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8
  store i32 -1431655766, i32* %6, align 4
  %10 = bitcast %"class.base::SampleCountIterator"* %1 to i1 (%"class.base::SampleCountIterator"*)***
  %11 = load i1 (%"class.base::SampleCountIterator"*)**, i1 (%"class.base::SampleCountIterator"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %11, i64 2
  %13 = load i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %12, align 8
  %14 = call zeroext i1 %13(%"class.base::SampleCountIterator"* %1) #8
  br i1 %14, label %45, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.base::SampleCountIterator"* %1 to void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)***
  %17 = icmp eq i32 %2, 0
  %18 = bitcast %"class.base::SampleCountIterator"* %1 to void (%"class.base::SampleCountIterator"*)***
  br label %19

19:                                               ; preds = %15, %37
  %20 = load void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)**, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*** %16, align 8
  %21 = getelementptr inbounds void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)** %20, i64 4
  %22 = load void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)*, void (%"class.base::SampleCountIterator"*, i32*, i64*, i32*)** %21, align 8
  call void %22(%"class.base::SampleCountIterator"* %1, i32* nonnull %4, i64* nonnull %5, i32* nonnull %6) #8
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %19
  %26 = load i32, i32* %4, align 4
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %27, 1
  %29 = load i64, i64* %5, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %31, label %45

31:                                               ; preds = %25
  %32 = sub nsw i32 0, %23
  %33 = select i1 %17, i32 %23, i32 %32
  %34 = call i32* @_ZN4base19PersistentSampleMap29GetOrCreateSampleCountStorageEi(%"class.base::PersistentSampleMap"* %0, i32 %26)
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, %33
  store i32 %36, i32* %34, align 4
  br label %37

37:                                               ; preds = %19, %31
  %38 = load void (%"class.base::SampleCountIterator"*)**, void (%"class.base::SampleCountIterator"*)*** %18, align 8
  %39 = getelementptr inbounds void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %38, i64 3
  %40 = load void (%"class.base::SampleCountIterator"*)*, void (%"class.base::SampleCountIterator"*)** %39, align 8
  call void %40(%"class.base::SampleCountIterator"* %1) #8
  %41 = load i1 (%"class.base::SampleCountIterator"*)**, i1 (%"class.base::SampleCountIterator"*)*** %10, align 8
  %42 = getelementptr inbounds i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %41, i64 2
  %43 = load i1 (%"class.base::SampleCountIterator"*)*, i1 (%"class.base::SampleCountIterator"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.base::SampleCountIterator"* %1) #8
  br i1 %44, label %45, label %19

45:                                               ; preds = %25, %37, %3
  %46 = phi i1 [ true, %3 ], [ true, %37 ], [ false, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i1 %46
}

declare i32 @_ZN4base26PersistentSampleMapRecords9CreateNewEi(%"class.base::PersistentSampleMapRecords"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::PersistentSampleMapRecords"* @_ZN4base19PersistentSampleMap10GetRecordsEv(%"class.base::PersistentSampleMap"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 3
  %3 = load %"class.base::PersistentSampleMapRecords"*, %"class.base::PersistentSampleMapRecords"** %2, align 8
  %4 = icmp eq %"class.base::PersistentSampleMapRecords"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 2
  %7 = load %"class.base::PersistentHistogramAllocator"*, %"class.base::PersistentHistogramAllocator"** %6, align 8
  %8 = getelementptr inbounds %"class.base::PersistentSampleMap", %"class.base::PersistentSampleMap"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.base::HistogramSamples::Metadata"*, %"struct.base::HistogramSamples::Metadata"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::HistogramSamples::Metadata", %"struct.base::HistogramSamples::Metadata"* %9, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::PersistentSampleMap"* %0 to i8*
  %13 = tail call %"class.base::PersistentSampleMapRecords"* @_ZN4base28PersistentHistogramAllocator19UseSampleMapRecordsEmPKv(%"class.base::PersistentHistogramAllocator"* %7, i64 %11, i8* %12) #8
  store %"class.base::PersistentSampleMapRecords"* %13, %"class.base::PersistentSampleMapRecords"** %2, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi %"class.base::PersistentSampleMapRecords"* [ %3, %1 ], [ %13, %5 ]
  ret %"class.base::PersistentSampleMapRecords"* %15
}

declare %"class.base::PersistentSampleMapRecords"* @_ZN4base28PersistentHistogramAllocator19UseSampleMapRecordsEmPKv(%"class.base::PersistentHistogramAllocator"*, i64, i8*) local_unnamed_addr #1

declare i32 @_ZN4base26PersistentSampleMapRecords7GetNextEv(%"class.base::PersistentSampleMapRecords"*) local_unnamed_addr #1

declare void @_ZN4base16HistogramSamples3AddERKS0_(%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN4base16HistogramSamples13AddFromPickleEPNS_14PickleIteratorE(%"class.base::HistogramSamples"*, %"class.base::PickleIterator"*) unnamed_addr #1

declare void @_ZN4base16HistogramSamples8SubtractERKS0_(%"class.base::HistogramSamples"*, %"class.base::HistogramSamples"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK4base16HistogramSamples9SerializeEPNS_6PickleE(%"class.base::HistogramSamples"*, %"class.base::Pickle"*) unnamed_addr #1

declare void @_ZNK4base16HistogramSamples12GetAsciiBodyEv(%"class.std::__1::basic_string"* sret, %"class.base::HistogramSamples"*) unnamed_addr #1

declare void @_ZNK4base16HistogramSamples14GetAsciiHeaderENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.std::__1::basic_string"* sret, %"class.base::HistogramSamples"*, i8*, i64, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base19SampleCountIteratorD2Ev(%"class.base::SampleCountIterator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_127PersistentSampleMapIteratorD0Ev(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 0
  tail call void @_ZN4base19SampleCountIteratorD2Ev(%"class.base::SampleCountIterator"* %2) #8
  %3 = bitcast %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK4base12_GLOBAL__N_127PersistentSampleMapIterator4DoneEv(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_127PersistentSampleMapIterator4NextEv(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::__map_const_iterator", %"class.std::__1::__map_const_iterator"* %2, i64 0, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__map_const_iterator"* %2 to %"class.std::__1::__tree_node_base"**
  %5 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %5, i64 0, i32 1
  %7 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node_base"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %5, i64 0, i32 2
  %11 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, %5
  br i1 %14, label %31, label %22

15:                                               ; preds = %1, %15
  %16 = phi %"class.std::__1::__tree_node_base"* [ %18, %15 ], [ %7, %1 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %16, i64 0, i32 0
  br label %31

22:                                               ; preds = %9, %22
  %23 = phi %"class.std::__1::__tree_end_node"** [ %26, %22 ], [ %10, %9 ]
  %24 = bitcast %"class.std::__1::__tree_end_node"** %23 to %"class.std::__1::__tree_node_base"**
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %25
  br i1 %30, label %31, label %22

31:                                               ; preds = %22, %9, %20
  %32 = phi %"class.std::__1::__tree_end_node"* [ %21, %20 ], [ %11, %9 ], [ %27, %22 ]
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %3, align 8
  %33 = bitcast %"class.std::__1::__map_const_iterator"* %2 to %"class.std::__1::__tree_node"**
  %34 = bitcast %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0 to i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)***
  %35 = load i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)**, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)** %35, i64 2
  %37 = load i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0) #8
  br i1 %38, label %78, label %39

39:                                               ; preds = %31, %72
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 1
  %42 = load i32*, i32** %41, align 8
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = bitcast %"class.std::__1::__tree_node"* %40 to %"class.std::__1::__tree_node_base"*
  br i1 %44, label %46, label %78

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %45
  br i1 %55, label %72, label %63

56:                                               ; preds = %46, %56
  %57 = phi %"class.std::__1::__tree_node_base"* [ %59, %56 ], [ %48, %46 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %56

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0
  br label %72

63:                                               ; preds = %50, %63
  %64 = phi %"class.std::__1::__tree_end_node"** [ %67, %63 ], [ %51, %50 ]
  %65 = bitcast %"class.std::__1::__tree_end_node"** %64 to %"class.std::__1::__tree_node_base"**
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 2
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, %66
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %61, %50
  %73 = phi %"class.std::__1::__tree_end_node"* [ %62, %61 ], [ %52, %50 ], [ %68, %63 ]
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %3, align 8
  %74 = load i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)**, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*** %34, align 8
  %75 = getelementptr inbounds i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)** %74, i64 2
  %76 = load i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)*, i1 (%"class.base::(anonymous namespace)::PersistentSampleMapIterator"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0) #8
  br i1 %77, label %78, label %39

78:                                               ; preds = %39, %72, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZNK4base12_GLOBAL__N_127PersistentSampleMapIterator3GetEPiPlS2_(%"class.base::(anonymous namespace)::PersistentSampleMapIterator"* nocapture readonly, i32*, i64*, i32*) unnamed_addr #7 align 2 {
  %5 = icmp eq i32* %1, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::__map_const_iterator"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %1, align 4
  br label %12

12:                                               ; preds = %4, %6
  %13 = icmp eq i64* %2, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::__map_const_iterator"* %15 to %"class.std::__1::__tree_node"**
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %2, align 8
  br label %22

22:                                               ; preds = %12, %14
  %23 = icmp eq i32* %3, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.base::(anonymous namespace)::PersistentSampleMapIterator", %"class.base::(anonymous namespace)::PersistentSampleMapIterator"* %0, i64 0, i32 1
  %26 = bitcast %"class.std::__1::__map_const_iterator"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 1, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %3, align 4
  br label %31

31:                                               ; preds = %22, %24
  ret void
}

declare zeroext i1 @_ZNK4base19SampleCountIterator14GetBucketIndexEPm(%"class.base::SampleCountIterator"*, i64*) unnamed_addr #1

declare i8* @_ZNK4base25PersistentMemoryAllocator12GetBlockDataEjjj(%"class.base::PersistentMemoryAllocator"*, i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZN4base25PersistentMemoryAllocator8Iterator13GetNextOfTypeEj(%"class.base::PersistentMemoryAllocator::Iterator"*, i32) local_unnamed_addr #1

declare i32 @_ZN4base25PersistentMemoryAllocator8AllocateEmj(%"class.base::PersistentMemoryAllocator"*, i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @_ZNK4base25PersistentMemoryAllocator14GetAsReferenceEPKvj(%"class.base::PersistentMemoryAllocator"*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIiPiEENS_19__map_value_compareIiS3_NS_4lessIiEELb1EEENS_9allocatorIS3_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSF_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS8_ISN_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
