; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/clip_paint_property_node.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/clip_paint_property_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr" }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.0, %"class.absl::optional", %class.scoped_refptr.1, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%class.scoped_refptr.0 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.17" }
%"class.blink::PaintPropertyNode.17" = type { %"class.WTF::RefCounted.18", i8, i8, %class.scoped_refptr.0, i32, i32 }
%"class.WTF::RefCounted.18" = type { %"class.base::RefCounted.19" }
%"class.base::RefCounted.19" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon }
%union.anon = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.scoped_refptr.1 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.15", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.3, %class.SkTDArray.4, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.3 = type { i8*, i32, i32 }
%class.SkTDArray.4 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.10 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.10 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.11", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.WTF::RefCounted.15" = type { %"class.base::RefCounted.16" }
%"class.base::RefCounted.16" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.31" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.24, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.25", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.24 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.52", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.52" = type { %"class.WTF::RefCounted.53", i8, i8, %class.scoped_refptr.24, i32, i32 }
%"class.WTF::RefCounted.53" = type { %"class.base::RefCounted.54" }
%"class.base::RefCounted.54" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.55" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.60" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.64" }
%"class.blink::PaintPropertyNode.64" = type { %"class.WTF::RefCounted.65", i8, i8, %class.scoped_refptr.67, i32, i32 }
%"class.WTF::RefCounted.65" = type { %"class.base::RefCounted.66" }
%"class.base::RefCounted.66" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.67 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector.73" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.77" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__cxx_atomic_impl.80" }
%"struct.std::__1::__cxx_atomic_impl.80" = type { %"struct.std::__1::__cxx_atomic_base_impl.81" }
%"struct.std::__1::__cxx_atomic_base_impl.81" = type { i32 }

$_ZNK5blink17PaintPropertyNodeINS_28ClipPaintPropertyNodeOrAliasENS_21ClipPaintPropertyNodeEE10ToJSONBaseEv = comdat any

$_ZNK4base10RefCountedIN5blink28ClipPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_21ClipPaintPropertyNodeEEEE7ReleaseEv = comdat any

$_ZN5blink21ClipPaintPropertyNodeD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev = comdat any

$_ZN5blink26TransformPaintPropertyNodeD2Ev = comdat any

$_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_ = comdat any

$_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

$_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

@_ZZN5blink21ClipPaintPropertyNode4RootEvE4root = internal unnamed_addr global %"class.blink::ClipPaintPropertyNode"* null, align 8
@_ZGVZN5blink21ClipPaintPropertyNode4RootEvE4root = internal global i64 0, align 8
@.str = private unnamed_addr constant [8 x i8] c"changed\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"localTransformSpace\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"rect\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"rectExcludingOverlayScrollbars\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"hasClipPath\00", align 1
@_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden local_unnamed_addr global %"class.blink::IntRect" zeroinitializer, comdat, align 4
@_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden global i64 0, comdat, align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"is_alias\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(168) %"class.blink::ClipPaintPropertyNode"* @_ZN5blink21ClipPaintPropertyNode4RootEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %class.scoped_refptr.0, align 8
  %2 = alloca %class.scoped_refptr.0, align 8
  %3 = alloca %"struct.blink::ClipPaintPropertyNode::State", align 8
  %4 = alloca %"class.blink::FloatRoundedRect", align 4
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"class.blink::IntRect"*
  %7 = alloca %"class.blink::FloatRoundedRect::Radii", align 4
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink21ClipPaintPropertyNode4RootEvE4root to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %104, !prof !2

10:                                               ; preds = %0
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink21ClipPaintPropertyNode4RootEvE4root) #10
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %104, label %13

13:                                               ; preds = %10
  %14 = tail call noalias i8* @malloc(i64 168) #10
  %15 = bitcast %"struct.blink::ClipPaintPropertyNode::State"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %15) #10
  %16 = tail call dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() #10
  %17 = icmp eq %"class.blink::TransformPaintPropertyNode"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  br label %20

20:                                               ; preds = %13, %18
  %21 = bitcast %"class.blink::FloatRoundedRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #10
  %22 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #10
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %29, !prof !2

25:                                               ; preds = %20
  %26 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #10
  br label %29

29:                                               ; preds = %20, %25, %28
  %30 = load <2 x i64>, <2 x i64>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <2 x i64>*), align 4
  store <2 x i64> %30, <2 x i64>* %5, align 16
  %31 = bitcast %"class.blink::FloatRoundedRect::Radii"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10
  %32 = bitcast %"class.blink::FloatRoundedRect::Radii"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 0, i64 32, i1 false)
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_7IntRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"* nonnull %4, %"class.blink::IntRect"* nonnull dereferenceable(16) %6, %"class.blink::FloatRoundedRect::Radii"* nonnull dereferenceable(32) %7) #10
  %33 = bitcast %class.scoped_refptr.0* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %2, i64 0, i32 0
  %35 = ptrtoint %"class.blink::TransformPaintPropertyNode"* %16 to i64
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* null, %"class.blink::TransformPaintPropertyNodeOrAlias"** %34, align 8
  %36 = bitcast %class.scoped_refptr.0* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  %37 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %1, i64 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* null, %"class.blink::TransformPaintPropertyNodeOrAlias"** %37, align 8
  %38 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 3
  %41 = bitcast %"class.blink::FloatRoundedRect"* %40 to i8*
  %42 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 4
  %43 = bitcast %"class.blink::FloatRoundedRect"* %42 to i8*
  %44 = bitcast %union.anon* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 20, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 4 %21, i64 48, i1 false) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 4 %21, i64 48, i1 false) #10
  call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* nonnull %1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %45 = bitcast i8* %14 to i32*
  store i32 1, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds i8, i8* %14, i64 5
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds i8, i8* %14, i64 8
  %49 = bitcast i8* %48 to %"class.blink::ClipPaintPropertyNodeOrAlias"**
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* null, %"class.blink::ClipPaintPropertyNodeOrAlias"** %49, align 8
  %50 = getelementptr inbounds i8, i8* %14, i64 16
  %51 = bitcast i8* %50 to i32*
  store i32 -1, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %14, i64 20
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %14, i64 24
  %55 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 0, i32 0
  %56 = bitcast i8* %54 to i64*
  store i64 %35, i64* %56, align 8
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* null, %"class.blink::TransformPaintPropertyNodeOrAlias"** %55, align 8
  %57 = getelementptr inbounds i8, i8* %14, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %38, i64 24, i1 false) #10
  %58 = getelementptr inbounds i8, i8* %14, i64 56
  %59 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 2, i32 0
  %60 = bitcast i8* %58 to i64*
  store i64 0, i64* %60, align 8
  store %"class.blink::RefCountedPath"* null, %"class.blink::RefCountedPath"** %59, align 8
  %61 = getelementptr inbounds i8, i8* %14, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 8 %41, i64 16, i1 false) #10
  %62 = getelementptr inbounds i8, i8* %14, i64 80
  %63 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 3, i32 1
  %64 = bitcast %"class.blink::FloatRoundedRect::Radii"* %63 to <2 x i64>*
  %65 = load <2 x i64>, <2 x i64>* %64, align 8
  %66 = bitcast i8* %62 to <2 x i64>*
  store <2 x i64> %65, <2 x i64>* %66, align 4
  %67 = getelementptr inbounds i8, i8* %14, i64 96
  %68 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 3, i32 1, i32 2
  %69 = bitcast %"class.blink::FloatSize"* %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  %71 = bitcast i8* %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %71, align 4
  %72 = getelementptr inbounds i8, i8* %14, i64 112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 8 %43, i64 16, i1 false) #10
  %73 = getelementptr inbounds i8, i8* %14, i64 128
  %74 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 4, i32 1
  %75 = bitcast %"class.blink::FloatRoundedRect::Radii"* %74 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast i8* %73 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %77, align 4
  %78 = getelementptr inbounds i8, i8* %14, i64 144
  %79 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 4, i32 1, i32 2
  %80 = bitcast %"class.blink::FloatSize"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8
  %82 = bitcast i8* %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %82, align 4
  %83 = getelementptr inbounds i8, i8* %14, i64 160
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = icmp eq i8* %14, null
  br i1 %85, label %102, label %86

86:                                               ; preds = %29
  %87 = bitcast i8* %14 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %87) #10
  %88 = bitcast i8* %14 to %"class.base::RefCounted"*
  call void @_ZNK4base10RefCountedIN5blink28ClipPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_21ClipPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"* nonnull %88) #10
  %89 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 2, i32 0
  %90 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %89, align 8
  %91 = icmp eq %"class.blink::RefCountedPath"* %90, null
  br i1 %91, label %102, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %90, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %93, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %94) #10
  %95 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %93, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %93, i64 -4
  %100 = bitcast %"class.base::RefCounted.16"* %99 to %"class.blink::Path"*
  call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %100) #10
  %101 = bitcast %"class.base::RefCounted.16"* %99 to i8*
  call void @free(i8* %101) #10
  br label %102

102:                                              ; preds = %29, %86, %92, %98
  %103 = getelementptr inbounds %"struct.blink::ClipPaintPropertyNode::State", %"struct.blink::ClipPaintPropertyNode::State"* %3, i64 0, i32 0
  call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %15) #10
  store i8* %14, i8** bitcast (%"class.blink::ClipPaintPropertyNode"** @_ZZN5blink21ClipPaintPropertyNode4RootEvE4root to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink21ClipPaintPropertyNode4RootEvE4root) #10
  br label %104

104:                                              ; preds = %10, %102, %0
  %105 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** @_ZZN5blink21ClipPaintPropertyNode4RootEvE4root, align 8
  ret %"class.blink::ClipPaintPropertyNode"* %105
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(96) %"class.blink::TransformPaintPropertyNode"* @_ZN5blink26TransformPaintPropertyNode4RootEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink16FloatRoundedRectC1ERKNS_7IntRectERKNS0_5RadiiE(%"class.blink::FloatRoundedRect"*, %"class.blink::IntRect"* dereferenceable(16), %"class.blink::FloatRoundedRect::Radii"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink28ClipPaintPropertyNodeOrAlias7ChangedENS_23PaintPropertyChangeTypeERKNS_17PropertyTreeStateEPKNS_33TransformPaintPropertyNodeOrAliasE(%"class.blink::ClipPaintPropertyNodeOrAlias"* readonly, i8 zeroext, %"class.blink::PropertyTreeState"* nocapture readonly dereferenceable(24), %"class.blink::TransformPaintPropertyNodeOrAlias"* readnone) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %5 to %"class.blink::ClipPaintPropertyNode"**
  %7 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, null
  br i1 %7, label %36, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::PropertyTreeState"* %2 to %"class.blink::TransformPaintPropertyNode"**
  br label %10

10:                                               ; preds = %8, %32
  %11 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %0, %8 ], [ %34, %32 ]
  %12 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %12, i64 0, i32 0
  %14 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %11, %13
  br i1 %14, label %36, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %11, i64 0, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp ult i8 %17, %1
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %11, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 4, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %11, i64 1
  %25 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %24 to %"class.blink::TransformPaintPropertyNodeOrAlias"**
  %26 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %25, align 8
  %27 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %26, %3
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %9, align 8
  %30 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %29, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZNK5blink33TransformPaintPropertyNodeOrAlias7ChangedENS_23PaintPropertyChangeTypeERKS0_(%"class.blink::TransformPaintPropertyNodeOrAlias"* %26, i8 zeroext %1, %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24) %30) #10
  br i1 %31, label %36, label %32

32:                                               ; preds = %19, %23, %28
  %33 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %11, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %33, align 8
  %35 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %34, null
  br i1 %35, label %36, label %10

36:                                               ; preds = %28, %15, %10, %32, %4
  %37 = phi i1 [ false, %4 ], [ false, %32 ], [ false, %10 ], [ true, %15 ], [ true, %28 ]
  ret i1 %37
}

declare zeroext i1 @_ZNK5blink33TransformPaintPropertyNodeOrAlias7ChangedENS_23PaintPropertyChangeTypeERKS0_(%"class.blink::TransformPaintPropertyNodeOrAlias"*, i8 zeroext, %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZNK5blink21ClipPaintPropertyNode6ToJSONEv(%"class.blink::ClipPaintPropertyNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 0, i32 0
  %12 = tail call %"class.blink::JSONObject"* @_ZNK5blink17PaintPropertyNodeINS_28ClipPaintPropertyNodeOrAliasENS_21ClipPaintPropertyNodeEE10ToJSONBaseEv(%"class.blink::PaintPropertyNode"* %11)
  %13 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %60, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #10
  %18 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = load i8, i8* %13, align 1
  %20 = call i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext %19) #10
  %21 = icmp eq i8* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = call i64 @strlen(i8* nonnull %20) #11
  br label %24

24:                                               ; preds = %16, %22
  %25 = phi i64 [ %23, %22 ], [ 0, %16 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %20, i64 %25) #10
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %24, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #10
  br label %59

59:                                               ; preds = %42, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %60

60:                                               ; preds = %1, %59
  %61 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 19) #10
  %62 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %63, align 8
  %65 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %"class.blink::TransformPaintPropertyNodeOrAlias"* %64) #10
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #10
  br label %82

82:                                               ; preds = %60, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %99

99:                                               ; preds = %82, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  %100 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #10
  %101 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #10
  %102 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 3
  %103 = call %"class.WTF::StringImpl"* @_ZNK5blink16FloatRoundedRect8ToStringEv(%"class.blink::FloatRoundedRect"* %102) #10
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #10
  br label %120

120:                                              ; preds = %99, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #10
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #10
  br label %137

137:                                              ; preds = %120, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #10
  %138 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %139 = load i8, i8* %138, align 4, !range !3
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %184, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i64 30) #10
  %143 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #10
  %144 = load i8, i8* %138, align 4, !range !3
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %147, !prof !4

146:                                              ; preds = %141
  call void @llvm.trap() #10
  unreachable

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %149 = call %"class.WTF::StringImpl"* @_ZNK5blink9FloatRect8ToStringEv(%"class.blink::FloatRect"* %148) #10
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #10
  br label %166

166:                                              ; preds = %147, %162, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #10
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #10
  br label %183

183:                                              ; preds = %166, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  br label %184

184:                                              ; preds = %137, %183
  %185 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 2, i32 0
  %186 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %185, align 8
  %187 = icmp eq %"class.blink::RefCountedPath"* %186, null
  br i1 %187, label %207, label %188

188:                                              ; preds = %184
  %189 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #10
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext true) #10
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #10
  br label %206

206:                                              ; preds = %188, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  br label %207

207:                                              ; preds = %184, %206
  ret %"class.blink::JSONObject"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::JSONObject"* @_ZNK5blink17PaintPropertyNodeINS_28ClipPaintPropertyNodeOrAliasENS_21ClipPaintPropertyNodeEE10ToJSONBaseEv(%"class.blink::PaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call noalias i8* @malloc(i64 56) #10
  %8 = bitcast i8* %7 to %"class.blink::JSONObject"*
  tail call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %8) #10
  %9 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %9, align 8
  %11 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %10, null
  br i1 %11, label %51, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6) #10
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %9, align 8
  %16 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), %"class.blink::ClipPaintPropertyNodeOrAlias"* %15) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %12, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #10
  br label %50

50:                                               ; preds = %33, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %51

51:                                               ; preds = %1, %50
  %52 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 1
  %53 = load i8, i8* %52, align 4, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #10
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext true) #10
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #10
  br label %73

73:                                               ; preds = %55, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %74

74:                                               ; preds = %51, %73
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %122, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #10
  %80 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = load i8, i8* %75, align 1
  %82 = call i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext %81) #10
  %83 = icmp eq i8* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %78
  %85 = call i64 @strlen(i8* nonnull %82) #11
  br label %86

86:                                               ; preds = %78, %84
  %87 = phi i64 [ %85, %84 ], [ 0, %78 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %82, i64 %87) #10
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #10
  br label %104

104:                                              ; preds = %86, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #10
  br label %121

121:                                              ; preds = %104, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #10
  br label %122

122:                                              ; preds = %121, %74
  ret %"class.blink::JSONObject"* %8
}

declare void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink16FloatRoundedRect8ToStringEv(%"class.blink::FloatRoundedRect"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink9FloatRect8ToStringEv(%"class.blink::FloatRect"*) local_unnamed_addr #3

declare void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink28ClipPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_21ClipPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #10
  %3 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %80

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 1
  %8 = bitcast %"class.base::RefCounted"* %7 to i8*
  %9 = load i8, i8* %8, align 4, !range !3
  %10 = icmp eq i8 %9, 0
  %11 = icmp eq %"class.base::RefCounted"* %0, null
  br i1 %10, label %17, label %12

12:                                               ; preds = %6
  br i1 %11, label %80, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 2
  %15 = bitcast %"class.base::RefCounted"* %14 to %class.scoped_refptr*
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %15) #10
  %16 = bitcast %"class.base::RefCounted"* %0 to i8*
  tail call void @free(i8* %16) #10
  br label %80

17:                                               ; preds = %6
  br i1 %11, label %80, label %18

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 40
  %20 = bitcast %"class.base::RefCounted"* %19 to %"class.blink::GeometryMapperClipCache"**
  %21 = load %"class.blink::GeometryMapperClipCache"*, %"class.blink::GeometryMapperClipCache"** %20, align 8
  store %"class.blink::GeometryMapperClipCache"* null, %"class.blink::GeometryMapperClipCache"** %20, align 8
  %22 = icmp eq %"class.blink::GeometryMapperClipCache"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"** %24, align 8
  %26 = icmp eq %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %25, null
  %27 = bitcast %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %25 to i8*
  br i1 %26, label %34, label %28, !prof !5

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #10
  br label %34

34:                                               ; preds = %33, %23
  %35 = bitcast %"class.blink::GeometryMapperClipCache"* %21 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %34, %18
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 6
  %38 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 14
  %39 = bitcast %"class.base::RefCounted"* %38 to %"class.blink::RefCountedPath"**
  %40 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %39, align 8
  %41 = icmp eq %"class.blink::RefCountedPath"* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %43, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #10
  %45 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %43, i64 -4
  %50 = bitcast %"class.base::RefCounted.16"* %49 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %50) #10
  %51 = bitcast %"class.base::RefCounted.16"* %49 to i8*
  tail call void @free(i8* %51) #10
  br label %52

52:                                               ; preds = %48, %42, %36
  %53 = bitcast %"class.base::RefCounted"* %37 to %class.scoped_refptr.0*
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %53) #10
  %54 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %0, i64 2
  %55 = bitcast %"class.base::RefCounted"* %54 to %"class.blink::ClipPaintPropertyNodeOrAlias"**
  %56 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %55, align 8
  %57 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, null
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %59) #10
  %60 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %78

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, i64 0, i32 0, i32 1
  %65 = load i8, i8* %64, align 4, !range !3
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %56, i64 0, i32 0, i32 3, i32 0
  %69 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %68, align 8
  %70 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %69, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink28ClipPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_21ClipPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"* %72) #10
  br label %73

73:                                               ; preds = %71, %67
  %74 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %56 to i8*
  tail call void @free(i8* %74) #10
  br label %78

75:                                               ; preds = %63
  %76 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %56 to %"class.blink::ClipPaintPropertyNode"*
  tail call void @_ZN5blink21ClipPaintPropertyNodeD2Ev(%"class.blink::ClipPaintPropertyNode"* nonnull %76) #10
  %77 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %56 to i8*
  tail call void @free(i8* %77) #10
  br label %78

78:                                               ; preds = %58, %75, %73, %52
  %79 = bitcast %"class.base::RefCounted"* %0 to i8*
  tail call void @free(i8* %79) #10
  br label %80

80:                                               ; preds = %78, %17, %13, %12, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ClipPaintPropertyNodeD2Ev(%"class.blink::ClipPaintPropertyNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::GeometryMapperClipCache"*, %"class.blink::GeometryMapperClipCache"** %2, align 8
  store %"class.blink::GeometryMapperClipCache"* null, %"class.blink::GeometryMapperClipCache"** %2, align 8
  %4 = icmp eq %"class.blink::GeometryMapperClipCache"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"** %6, align 8
  %8 = icmp eq %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %7, null
  %9 = bitcast %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"* %7 to i8*
  br i1 %8, label %16, label %10, !prof !5

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::GeometryMapperClipCache", %"class.blink::GeometryMapperClipCache"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !4

14:                                               ; preds = %10
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #10
  br label %16

16:                                               ; preds = %15, %5
  %17 = bitcast %"class.blink::GeometryMapperClipCache"* %3 to i8*
  tail call void @free(i8* %17) #10
  br label %18

18:                                               ; preds = %1, %16
  %19 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 2, i32 0
  %20 = load %"class.blink::RefCountedPath"*, %"class.blink::RefCountedPath"** %19, align 8
  %21 = icmp eq %"class.blink::RefCountedPath"* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::RefCountedPath", %"class.blink::RefCountedPath"* %20, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %23, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #10
  %25 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted.16", %"class.base::RefCounted.16"* %23, i64 -4
  %30 = bitcast %"class.base::RefCounted.16"* %29 to %"class.blink::Path"*
  tail call void @_ZN5blink4PathD2Ev(%"class.blink::Path"* nonnull %30) #10
  %31 = bitcast %"class.base::RefCounted.16"* %29 to i8*
  tail call void @free(i8* %31) #10
  br label %32

32:                                               ; preds = %18, %22, %28
  %33 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %33) #10
  %34 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %35 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %34, align 8
  %36 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %35, null
  br i1 %36, label %57, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #10
  %39 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %57

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %35, i64 0, i32 0, i32 1
  %44 = load i8, i8* %43, align 4, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %35, i64 0, i32 0, i32 3, i32 0
  %48 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %47, align 8
  %49 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %48, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink28ClipPaintPropertyNodeOrAliasENS1_33PaintPropertyNodeRefCountedTraitsIS2_NS1_21ClipPaintPropertyNodeEEEE7ReleaseEv(%"class.base::RefCounted"* %51) #10
  br label %52

52:                                               ; preds = %50, %46
  %53 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %35 to i8*
  tail call void @free(i8* %53) #10
  br label %57

54:                                               ; preds = %42
  %55 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %35 to %"class.blink::ClipPaintPropertyNode"*
  tail call void @_ZN5blink21ClipPaintPropertyNodeD2Ev(%"class.blink::ClipPaintPropertyNode"* nonnull %55) #10
  %56 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %35 to i8*
  tail call void @free(i8* %56) #10
  ret void

57:                                               ; preds = %37, %52, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink28ClipPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr* %15) #10
  %16 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #10
  ret void

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to %"class.blink::ClipPaintPropertyNode"*
  tail call void @_ZN5blink21ClipPaintPropertyNodeD2Ev(%"class.blink::ClipPaintPropertyNode"* nonnull %18) #10
  %19 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %19) #10
  br label %20

20:                                               ; preds = %5, %17, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.0, %class.scoped_refptr.0* %0, i64 0, i32 0
  %3 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %2, align 8
  %4 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %3, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %15) #10
  %16 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %16) #10
  ret void

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"* nonnull %18) #10
  %19 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %3 to i8*
  tail call void @free(i8* %19) #10
  br label %20

20:                                               ; preds = %5, %17, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::GeometryMapperTransformCache"*, %"class.blink::GeometryMapperTransformCache"** %2, align 8
  store %"class.blink::GeometryMapperTransformCache"* null, %"class.blink::GeometryMapperTransformCache"** %2, align 8
  %4 = icmp eq %"class.blink::GeometryMapperTransformCache"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::GeometryMapperTransformCache", %"class.blink::GeometryMapperTransformCache"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::GeometryMapperTransformCache::ScreenTransform"*, %"struct.blink::GeometryMapperTransformCache::ScreenTransform"** %6, align 8
  store %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* null, %"struct.blink::GeometryMapperTransformCache::ScreenTransform"** %6, align 8
  %8 = icmp eq %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::GeometryMapperTransformCache", %"class.blink::GeometryMapperTransformCache"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"*, %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"** %12, align 8
  store %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* null, %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"** %12, align 8
  %14 = icmp eq %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %11
  %18 = bitcast %"class.blink::GeometryMapperTransformCache"* %3 to i8*
  tail call void @free(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %17
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %21 = load %"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"** %20, align 8
  store %"struct.cc::StickyPositionConstraint"* null, %"struct.cc::StickyPositionConstraint"** %20, align 8
  %22 = icmp eq %"struct.cc::StickyPositionConstraint"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 0
  %27 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %26, align 8
  %28 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %27) #10
  br label %35

35:                                               ; preds = %34, %29, %25
  %36 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %36, align 8
  store %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* null, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %36, align 8
  %38 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %43 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %42, align 8
  %44 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, null
  br i1 %44, label %60, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #10
  %47 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 1
  %52 = load i8, i8* %51, align 4, !range !3
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %43, i64 0, i32 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink33TransformPaintPropertyNodeOrAliasEED2Ev(%class.scoped_refptr.0* %55) #10
  %56 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to i8*
  tail call void @free(i8* %56) #10
  br label %60

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink26TransformPaintPropertyNodeD2Ev(%"class.blink::TransformPaintPropertyNode"* nonnull %58) #10
  %59 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %43 to i8*
  tail call void @free(i8* %59) #10
  ret void

60:                                               ; preds = %45, %54, %41
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  %5 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %0, null
  br i1 %4, label %25, label %6

6:                                                ; preds = %1
  br i1 %5, label %44, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %12) #10
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %15 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %14, align 8
  %16 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #10
  %19 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %15) #10
  br label %23

23:                                               ; preds = %17, %22, %13
  %24 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %24) #10
  br label %44

25:                                               ; preds = %1
  br i1 %5, label %44, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %31) #10
  store i8 0, i8* %27, align 8
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %33, align 8
  %35 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #10
  %38 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %34) #10
  br label %42

42:                                               ; preds = %36, %41, %32
  %43 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %43) #10
  br label %44

44:                                               ; preds = %25, %42, %6, %23
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink4PathD2Ev(%"class.blink::Path"*) unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
