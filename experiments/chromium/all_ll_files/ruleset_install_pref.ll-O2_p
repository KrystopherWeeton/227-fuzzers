; ModuleID = '../../extensions/browser/api/declarative_net_request/ruleset_install_pref.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/ruleset_install_pref.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.extensions::declarative_net_request::RulesetInstallPref" = type <{ %"class.util::IdType", %"class.absl::optional", i8, [3 x i8] }>
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }

@_ZN10extensions23declarative_net_request18RulesetInstallPrefC1EN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEN4absl8optionalIiEEb = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RulesetInstallPref"*, i32, i64, i1), void (%"struct.extensions::declarative_net_request::RulesetInstallPref"*, i32, i64, i1)* @_ZN10extensions23declarative_net_request18RulesetInstallPrefC2EN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEN4absl8optionalIiEEb

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions23declarative_net_request18RulesetInstallPrefC2EN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEN4absl8optionalIiEEb(%"struct.extensions::declarative_net_request::RulesetInstallPref"* nocapture, i32, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesetInstallPref", %"struct.extensions::declarative_net_request::RulesetInstallPref"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesetInstallPref", %"struct.extensions::declarative_net_request::RulesetInstallPref"* %0, i64 0, i32 1
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  store i64 %2, i64* %8, align 4
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesetInstallPref", %"struct.extensions::declarative_net_request::RulesetInstallPref"* %0, i64 0, i32 2
  store i8 %5, i8* %9, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
