; ModuleID = '../../third_party/blink/renderer/core/svg/svg_use_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_use_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.49 }
%union.anon.49 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.73 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.74 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.463", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.69", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.74 }
%"class.WTF::RefCounted.463" = type { %"class.base::RefCounted.464" }
%"class.base::RefCounted.464" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.75" }
%"class.WTF::HashMap.75" = type { %"class.WTF::HashTable.76" }
%"class.WTF::HashTable.76" = type <{ %"struct.WTF::KeyValuePair.79"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.79" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.80 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.81", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.88, i8, %"class.url::Origin" }
%"class.base::RefCounted.81" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.82"*, %"class.std::__1::unique_ptr.82"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.2875" }
%"class.std::__1::__compressed_pair.2875" = type { %"struct.std::__1::__compressed_pair_elem.2876" }
%"struct.std::__1::__compressed_pair_elem.2876" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::unique_ptr.82"* }
%class.scoped_refptr.88 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.89" }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.69" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %class.scoped_refptr.74*, i32, i32 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63" }
%"class.WTF::VectorBufferBase.63" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.118 = type { %"class.base::TimeDelta" }
%union.anon.113 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.123 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.129 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2880", %"class.base::internal::flat_tree.2881" }
%"class.base::RefCountedThreadSafe.2880" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2881" = type { %"class.std::__1::vector.2882" }
%"class.std::__1::vector.2882" = type { %"class.std::__1::__vector_base.2883" }
%"class.std::__1::__vector_base.2883" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2884" }
%"class.std::__1::__compressed_pair.2884" = type { %"struct.std::__1::__compressed_pair_elem.2885" }
%"struct.std::__1::__compressed_pair_elem.2885" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.2736, %"class.mojo::PendingRemote.2737" }
%class.scoped_refptr.2736 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.2737" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.177" = type { %"class.WTF::HashTable.178" }
%"class.WTF::HashTable.178" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.181 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.182", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.182" = type { %"class.base::RefCounted.183" }
%"class.base::RefCounted.183" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.186" }
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type { %"class.blink::WeakMember.193", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.195", i32, [4 x i8], %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.350", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.368", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.375", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.313", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.231" = type { %"struct.std::__1::__atomic_base.232" }
%"struct.std::__1::__atomic_base.232" = type { %"struct.std::__1::__atomic_base.233" }
%"struct.std::__1::__atomic_base.233" = type { %"struct.std::__1::__cxx_atomic_impl.234" }
%"struct.std::__1::__cxx_atomic_impl.234" = type { %"struct.std::__1::__cxx_atomic_base_impl.235" }
%"struct.std::__1::__cxx_atomic_base_impl.235" = type { i64 }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.231" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.291", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.307", [4 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { i64 }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { float }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.316", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.325" }
%"class.WTF::Vector.325" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327" }
%"class.WTF::VectorBufferBase.327" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342" }
%"class.WTF::VectorBufferBase.342" = type { %"struct.std::__1::pair.343"*, i32, i32 }
%"struct.std::__1::pair.343" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.356" }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.242"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.249"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.256"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.263"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.270"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2727", i64 }
%"class.std::__1::vector.2727" = type { %"class.std::__1::__vector_base.2728" }
%"class.std::__1::__vector_base.2728" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2729" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2729" = type { %"struct.std::__1::__compressed_pair_elem.2730" }
%"struct.std::__1::__compressed_pair_elem.2730" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.374 }
%class.scoped_refptr.374 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.375" = type { %"struct.std::__1::__atomic_base.376" }
%"struct.std::__1::__atomic_base.376" = type { %"struct.std::__1::__cxx_atomic_impl.377" }
%"struct.std::__1::__cxx_atomic_impl.377" = type { %"struct.std::__1::__cxx_atomic_base_impl.378" }
%"struct.std::__1::__cxx_atomic_base_impl.378" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.379 = type { %"class.base::RefCountedData.380"* }
%"class.base::RefCountedData.380" = type opaque
%class.scoped_refptr.381 = type { %"class.base::RefCountedData.382"* }
%"class.base::RefCountedData.382" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<blink::QualifiedName, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<blink::QualifiedName, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.89" }
%"class.blink::SVGUseElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::SVGURIReference", %"class.blink::ResourceClient.base", %"class.blink::Member.408", %"class.blink::Member.418", %"class.blink::Member.418", %"class.blink::Member.418", %"class.blink::Member.418", %"class.blink::KURL", i8, i8, i8, %"class.blink::Member.434" }
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.33" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.27", %"class.blink::Member.29" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.652", %"class.blink::Member.414", %"class.blink::Member.0", %"class.blink::Member.654", %"class.blink::Member.654", %"class.blink::Member.438", %"class.blink::Member.678", %"class.blink::Member.680", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.685", %"class.blink::HeapVector.687" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::Document"* }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.658" }
%"class.blink::HeapHashMap.658" = type { %"class.WTF::HashMap.661" }
%"class.WTF::HashMap.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type { %"class.WTF::AtomicString", %"class.blink::Member.665" }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.669", i32, %"class.blink::HeapVector.671" }
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.671" = type { %"class.WTF::Vector.674" }
%"class.WTF::Vector.674" = type { %"class.WTF::VectorBuffer.675" }
%"class.WTF::VectorBuffer.675" = type { %"class.WTF::VectorBufferBase.676" }
%"class.WTF::VectorBufferBase.676" = type { %"class.blink::Member.669"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.682" }
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::HeapHashMap.684"* }
%"class.blink::HeapHashMap.684" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.687" = type { %"class.WTF::Vector.690" }
%"class.WTF::Vector.690" = type { %"class.WTF::VectorBuffer.691" }
%"class.WTF::VectorBuffer.691" = type { %"class.WTF::VectorBufferBase.692" }
%"class.WTF::VectorBufferBase.692" = type { %"class.blink::Member.693"*, i32, i32 }
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.695", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.697, %"class.WTF::Vector.698", %"class.WTF::Vector.698", %"class.blink::Member", %"class.blink::Member.703", %"class.blink::HeapHashSet.707", %"class.blink::Member.414", %"class.WTF::HashSet.714", %"class.WTF::TextPosition", %"class.blink::Member.718", %"class.blink::HeapVector.720", %"class.blink::Member.727" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.697 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.698" = type { %"class.WTF::VectorBuffer.699" }
%"class.WTF::VectorBuffer.699" = type { %"class.WTF::VectorBufferBase.700" }
%"class.WTF::VectorBufferBase.700" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.705" }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.707" = type { %"class.WTF::HashSet.710" }
%"class.WTF::HashSet.710" = type { %"class.WTF::HashTable.711" }
%"class.WTF::HashTable.711" = type <{ %"class.blink::WeakMember.713"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.713" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.714" = type { %"class.WTF::HashTable.715" }
%"class.WTF::HashTable.715" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.720" = type { %"class.WTF::Vector.723" }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725" }
%"class.WTF::VectorBufferBase.725" = type { %"class.blink::Member.703"*, i32, i32 }
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::SVGElement"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.31", %"class.blink::Member.31" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGURIReference" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.35" }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::SVGAnimatedHref"* }
%"class.blink::SVGAnimatedHref" = type opaque
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.37", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.66", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.170", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.384", %"class.blink::ResourceResponse", %class.scoped_refptr.386, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.42", i8, %"class.absl::optional.51", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, [7 x i8], %union.anon.46 }
%union.anon.46 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.56", %"class.WTF::Vector.61" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { i32*, i32, i32 }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.166" }
%"class.WTF::HashMap.166" = type { %"class.WTF::HashTable.167" }
%"class.WTF::HashTable.167" = type <{ %"struct.WTF::KeyValuePair.169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.169" = type <{ %"class.blink::WeakMember.2889", i32, [4 x i8] }>
%"class.blink::WeakMember.2889" = type { %"class.blink::MemberBase.2890" }
%"class.blink::MemberBase.2890" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.37", i8, [7 x i8] }>
%"class.blink::HeapHashSet.170" = type { %"class.WTF::HashSet.173" }
%"class.WTF::HashSet.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"class.blink::WeakMember.176"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.176" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.177", i8, i8, %class.scoped_refptr.181, %class.scoped_refptr.379, %class.scoped_refptr.381 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.130" }
%"class.base::time_internal::TimeBase.130" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.80, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.94", %"class.absl::optional.99", %"class.absl::optional.109", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.119", %"class.absl::optional.109", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.109", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.119", %"class.absl::optional.124", i8, %class.scoped_refptr.129 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.114", %"class.absl::optional.114" }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%"class.absl::optional.119" = type { %"class.absl::optional_internal::optional_data.120" }
%"class.absl::optional_internal::optional_data.120" = type { %"class.absl::optional_internal::optional_data_base.121" }
%"class.absl::optional_internal::optional_data_base.121" = type { %"class.absl::optional_internal::optional_data_dtor_base.122" }
%"class.absl::optional_internal::optional_data_dtor_base.122" = type { i8, %union.anon.123 }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.131", %class.scoped_refptr.145, %class.scoped_refptr.146, %"struct.blink::CacheControlHeader", %"class.absl::optional.114", %"class.absl::optional.147", %"class.absl::optional.147", %"class.absl::optional.147", i64, %"class.blink::KURL", %"class.WTF::Vector.152", %"class.WTF::String", %"class.WTF::Vector.61", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.119", %"class.WTF::Vector.61", %"class.blink::KURL", %"class.absl::optional.157" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.61", %"class.WTF::String", i64, i64, %"class.WTF::Vector.136", %"class.WTF::Vector.140" }
%"class.WTF::Vector.136" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.145 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.146 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%union.anon.151 = type { %"class.base::Time" }
%"class.WTF::Vector.152" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.157" = type { %"class.absl::optional_internal::optional_data.158" }
%"class.absl::optional_internal::optional_data.158" = type { %"class.absl::optional_internal::optional_data_base.159" }
%"class.absl::optional_internal::optional_data_base.159" = type { %"class.absl::optional_internal::optional_data_dtor_base.160" }
%"class.absl::optional_internal::optional_data_dtor_base.160" = type { i8, %union.anon.161 }
%union.anon.161 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.386 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.387", i64, %"class.WTF::Vector.389", %"class.WTF::Vector.394" }
%"class.WTF::RefCounted.387" = type { %"class.base::RefCounted.388" }
%"class.base::RefCounted.388" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { i8*, i32, i32 }
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.std::__1::unique_ptr.397"*, i32, i32 }
%"class.std::__1::unique_ptr.397" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.400", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::SVGResourceDocumentContent"* }
%"class.blink::SVGResourceDocumentContent" = type <{ %"class.blink::Member.412", %"class.blink::Member.414", %"class.blink::Member.416", i8, [7 x i8] }>
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::TextResource"* }
%"class.blink::TextResource" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.500", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.520", %"class.blink::Member.647", %"class.blink::Member.649", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.440" }
%"class.blink::HeapHashMap.440" = type { %"class.WTF::HashMap.443" }
%"class.WTF::HashMap.443" = type { %"class.WTF::HashTable.444" }
%"class.WTF::HashTable.444" = type <{ %"struct.WTF::KeyValuePair.446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.446" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.454" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.447" }
%"class.blink::HeapHashSet.447" = type { %"class.WTF::HashSet.450" }
%"class.WTF::HashSet.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"class.blink::WeakMember.453"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.453" = type opaque
%"class.blink::Supplementable.454" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.455" }
%"class.blink::HeapHashMap.455" = type { %"class.WTF::HashMap.458" }
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.461"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.461" = type { i8*, %"class.blink::Member.2780" }
%"class.blink::Member.2780" = type { %"class.blink::MemberBase.2781" }
%"class.blink::MemberBase.2781" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2782" }
%"class.blink::Member.2782" = type { %"class.blink::MemberBase.2783" }
%"class.blink::MemberBase.2783" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.462, %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.490", %"class.blink::Member.416", i32, [4 x i8], %"class.WTF::HashSet.496", i32, i32 }
%class.scoped_refptr.462 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.477", %"class.std::__1::map.486"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.468" }
%"class.std::__1::__tree.468" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.469", %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::map.477" = type { %"class.std::__1::__tree.478" }
%"class.std::__1::__tree.478" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::map.486" = type opaque
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.504" }
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506" }
%"class.WTF::VectorBufferBase.506" = type { %"class.blink::Member.507"*, i32, i32 }
%"class.blink::Member.507" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.513", i32, i32 }
%"class.blink::HeapHashMap.513" = type { %"class.WTF::HashMap.516" }
%"class.WTF::HashMap.516" = type { %"class.WTF::HashTable.517" }
%"class.WTF::HashTable.517" = type <{ %"struct.WTF::KeyValuePair.519"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.519" = type opaque
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.523" }
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.526" }
%"class.WTF::Vector.526" = type { %"class.WTF::VectorBuffer.527" }
%"class.WTF::VectorBuffer.527" = type { %"class.WTF::VectorBufferBase.528" }
%"class.WTF::VectorBufferBase.528" = type { %"class.mojo::StructPtr.529"*, i32, i32 }
%"class.mojo::StructPtr.529" = type { %"class.std::__1::unique_ptr.530" }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.533", %"class.WTF::HashMap.540", %"class.WTF::HashMap.545", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.61", i32, %"class.mojo::StructPtr.550", %"class.WTF::Vector.61" }
%"class.mojo::StructPtr.533" = type { %"class.std::__1::unique_ptr.534" }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.544" = type opaque
%"class.WTF::HashMap.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.550" = type { %"class.std::__1::unique_ptr.551" }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.61", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.638" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.565", i32 }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.114", %"class.absl::optional.570", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.591", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.613", %"class.std::__1::map.624", i64, %"class.base::OnceCallback.584", %"class.base::OnceCallback.633", i8, %class.scoped_refptr.575, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.634" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.568 }
%class.scoped_refptr.568 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.569", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.569" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.570" = type { %"class.absl::optional_internal::optional_data.571" }
%"class.absl::optional_internal::optional_data.571" = type { %"class.absl::optional_internal::optional_data_base.572" }
%"class.absl::optional_internal::optional_data_base.572" = type { %"class.absl::optional_internal::optional_data_dtor_base.573" }
%"class.absl::optional_internal::optional_data_dtor_base.573" = type { i8, %union.anon.574 }
%union.anon.574 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.584" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.575, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.577 }
%class.scoped_refptr.577 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.578", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.578" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.579" }
%"struct.std::__1::atomic.579" = type { %"struct.std::__1::__atomic_base.580" }
%"struct.std::__1::__atomic_base.580" = type { %"struct.std::__1::__atomic_base.581" }
%"struct.std::__1::__atomic_base.581" = type { %"struct.std::__1::__cxx_atomic_impl.582" }
%"struct.std::__1::__cxx_atomic_impl.582" = type { %"struct.std::__1::__cxx_atomic_base_impl.583" }
%"struct.std::__1::__cxx_atomic_base_impl.583" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.589 }
%class.scoped_refptr.589 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.651", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.575, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.651" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.590 }
%class.scoped_refptr.590 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.594", %class.scoped_refptr.595 }
%"class.base::RepeatingCallback.594" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.595 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.596", [4 x i8] }>
%"class.base::RefCountedThreadSafe.596" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.600", %"class.std::__1::unique_ptr.606", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.612" }
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.612" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.613" = type { %"class.std::__1::__tree.614" }
%"class.std::__1::__tree.614" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.615", %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::map.624" = type { %"class.std::__1::__tree.625" }
%"class.std::__1::__tree.625" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.626", %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.base::OnceCallback.584" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.633" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.575 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.576" }>
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.584" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.634" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::Member.430", %"class.blink::Member.430" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.421", %"class.blink::Member.421" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.420", %"class.blink::QualifiedName"* }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.22" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::SVGLength"* }
%"class.blink::SVGLength" = type <{ %"class.blink::SVGListablePropertyBase", %"class.blink::Member.426", i8, [7 x i8] }>
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::SVGLengthTearOff"* }
%"class.blink::SVGLengthTearOff" = type { %"class.blink::SVGPropertyTearOff" }
%"class.blink::SVGPropertyTearOff" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.421" }
%"class.blink::SVGPropertyTearOffBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.420", %"class.blink::Member.432", i32 }>
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type { i32 (...)**, %"class.blink::Member.438", %"class.WTF::AtomicString" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.730", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.738", %"class.WTF::Vector.738", i8, i32, %"class.blink::Member.743", %"class.blink::Member.416", %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.1662", %"class.blink::Member.1664", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1666", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1672", %"class.blink::Member.1674", %"class.blink::Member.693", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1676", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.671", %"class.blink::Member.669", %"class.blink::Member.1624", %"class.blink::Member.669", %"class.blink::Member.669", %"class.blink::Member.669", %"class.blink::UserActionElementSet", %"class.blink::Member.1691", double, double, i64, i64, %"class.blink::HeapHashSet.1693", %"class.blink::HeapHashSet.1700", i16, i8, %"class.blink::Member.1707", %"class.blink::Member.1709", %"class.blink::Member.1711", %"class.blink::Member.1713", %"class.blink::TextLinkColors", %"class.blink::Member.1715", i8, [7 x i8], %"class.blink::HeapHashMap.1717", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.669", %"class.WTF::Vector.1724", %"class.blink::Member.1729", %"class.blink::Member.1731", i8, %"class.blink::Member.669", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1733", %"class.blink::HeapVector.1735", %"class.std::__1::unique_ptr.1744", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1750", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1763", %"class.WTF::Vector.1765", i8, i8, %"class.std::__1::unique_ptr.1770", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.671", %"class.blink::HeapVector.1776", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1784", i8, i32, %"class.blink::Member.1786", %"class.blink::Member.1788", %"class.blink::Member.1790", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1792", %"class.WTF::HashMap.1794", %"class.blink::Member.1799", %"class.blink::Member.1801", %"class.blink::Member.1803", %"class.blink::Member.1805", %"class.blink::Member.414", %"class.blink::Member.414", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1807", i8, i32, %"class.blink::Member.1814", %"class.blink::Member.1816", i32, %"class.blink::Member.1818", %"class.blink::Member.1820", %"class.blink::Member.1822", %"class.std::__1::unique_ptr.1824", i64, %"class.std::__1::unique_ptr.1830", i32, i32, %"class.blink::Member.1841", %"class.blink::Member.1843", %"class.blink::Member.1845", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1847", %"class.WTF::Vector.1635", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1849", %"class.blink::Member.1856", %"class.std::__1::unique_ptr.1858", %"class.blink::Member.1864", i8, i8, %"class.WTF::String", %"class.blink::Member.1866", i8, [7 x i8], %"class.blink::HeapHashMap.1868", %"class.blink::HeapObserverSet.1875", %"class.blink::Member.1883", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1885", i32, i8, i8, %"class.blink::WeakMember.1887", %"class.blink::Member.1888" }
%"class.blink::Supplementable.730" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.731" }
%"class.blink::HeapHashMap.731" = type { %"class.WTF::HashMap.734" }
%"class.WTF::HashMap.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ %"struct.WTF::KeyValuePair.737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.737" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.738" = type { %"class.WTF::VectorBuffer.739" }
%"class.WTF::VectorBuffer.739" = type { %"class.WTF::VectorBufferBase.740" }
%"class.WTF::VectorBufferBase.740" = type { %"class.base::OnceCallback.584"*, i32, i32 }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.879", %"class.blink::ThreadState::PrefinalizerRegistration.887", %"class.blink::Member.888", %"class.blink::Member.414", %"class.blink::Member.890", i8, %"class.blink::Member.892", %"class.blink::Member.894", %"class.blink::Member.896", %"class.blink::Member.896", %"class.blink::Member.896", %"class.blink::Member.896", %"class.blink::Member.896", %"class.blink::Member.896", %"class.blink::Member.898", %"class.blink::Member.900", %"class.blink::Member.902", %"class.blink::Member.904", %"class.blink::Member.906", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.61", %"class.blink::Member.908", %class.scoped_refptr.910, %"class.blink::HeapHashSet.973", %"class.blink::Member.980", %"class.blink::HeapHashMap.993", %"class.std::__1::unique_ptr.1000", %"class.blink::Member.1012", %"class.blink::Member.1628", %"class.blink::Member.1630", %"class.blink::Member.1632", %"class.WTF::Vector.1635", %"class.util::TokenType", %"class.WTF::HashSet.1640", %"class.WTF::Deque.1644" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.766", %"class.blink::Member.768", %"class.blink::Member.770", %"class.blink::Member.772", i8, %"class.WTF::Vector.774" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.759" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.747" }
%"class.blink::HeapVector.747" = type { %"class.WTF::Vector.750" }
%"class.WTF::Vector.750" = type { %"class.WTF::VectorBuffer.751" }
%"class.WTF::VectorBuffer.751" = type { %"class.WTF::VectorBufferBase.752", [32 x i8] }
%"class.WTF::VectorBufferBase.752" = type { %"struct.std::__1::pair.753"*, i32, i32 }
%"struct.std::__1::pair.753" = type { %"class.WTF::AtomicString", %"class.blink::Member.754" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::HeapVector.756"* }
%"class.blink::HeapVector.756" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.WTF::Vector.762"* }
%"class.WTF::Vector.762" = type opaque
%"class.blink::Member.766" = type { %"class.blink::MemberBase.767" }
%"class.blink::MemberBase.767" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2059", %"class.blink::Member.2061", %"class.blink::Member.2063", i8, i32, i8, i32, %"class.blink::Member.2065", %"class.blink::Member.768", %"class.blink::FrameLifecycle", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.766", %"class.blink::Member.1018", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2076", i8, %"class.base::UnguessableToken", %"class.absl::optional.2078", %"class.absl::optional.119", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.766", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2059" = type { %"class.blink::MemberBase.2060" }
%"class.blink::MemberBase.2060" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.2061" = type { %"class.blink::MemberBase.2062" }
%"class.blink::MemberBase.2062" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2063" = type { %"class.blink::MemberBase.2064" }
%"class.blink::MemberBase.2064" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.2065" = type { %"class.blink::MemberBase.2066" }
%"class.blink::MemberBase.2066" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2090", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2098", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2106", %"class.blink::FrameLoader", %"class.blink::Member.2123", %"class.blink::Member.669", %"class.blink::Member.2125", %"class.blink::Member.2127", %"class.blink::Member.2129", %"class.blink::Member.2131", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2133", %class.scoped_refptr.2353, %"class.blink::Member.2354", %"class.blink::Member.2356", %"class.blink::Member.2358", %"class.blink::Member.2360", %"class.blink::Member.2362", %"class.blink::Member.2366", %"class.blink::Member.2368", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2370", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2373", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2379", %"class.std::__1::unique_ptr.2380", %"class.absl::optional.119", i32, [4 x i8], %"class.std::__1::unique_ptr.2386", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2394", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2399", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2404", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2407", %"class.blink::Member.2409", %"class.blink::Member.2411", %"class.blink::Member.2413", %"class.mojo::StructPtr.2416", %"class.blink::Member.2424", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2426", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2090" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2091" }
%"class.blink::HeapHashMap.2091" = type { %"class.WTF::HashMap.2094" }
%"class.WTF::HashMap.2094" = type { %"class.WTF::HashTable.2095" }
%"class.WTF::HashTable.2095" = type <{ %"struct.WTF::KeyValuePair.2097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2097" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1003", %"class.base::WeakPtrFactory.1008" }
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.base::WeakPtrFactory.1008" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2104" }
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1016" }
%"class.blink::WeakMember.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2792", i64, %"class.std::__1::map.2793", i8*, i64, %"class.base::WeakPtrFactory.2802" }
%"class.base::RepeatingCallback.2792" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2793" = type { %"class.std::__1::__tree.2794" }
%"class.std::__1::__tree.2794" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2795", %"class.std::__1::__compressed_pair.2799" }
%"class.std::__1::__compressed_pair.2795" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.2799" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.base::WeakPtrFactory.2802" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2106" = type { %"class.WTF::HashSet.2109" }
%"class.WTF::HashSet.2109" = type { %"class.WTF::HashTable.2110" }
%"class.WTF::HashTable.2110" = type <{ %"class.blink::WeakMember.2112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2112" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1018", %"class.blink::Member.2113", %"class.blink::Member.2115", %"class.std::__1::unique_ptr.2117", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2030" }
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2117" = type { %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2505", %"class.blink::Member.1018", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2510", i8, i32, %"class.blink::Color", %"class.absl::optional.2512", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2517", %"class.blink::Member.2519", %"class.blink::Member.2519", %"class.std::__1::unique_ptr.2522", i32, [4 x i8], %"class.WTF::HashSet.2525", %"class.blink::Member.2532", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2534", %"class.blink::HeapHashSet.2541", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2549", i8, %"class.blink::Member.2555", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2567", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2581", i8, %"class.std::__1::unique_ptr.2587", %"class.std::__1::unique_ptr.2668", %"class.WTF::Vector.2674", i32, %class.scoped_refptr.2679, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2680", %"class.blink::Member.2682", %"class.blink::Member.2684", %"class.blink::HeapHashSet.2686", %"class.blink::HeapHashSet.2693", %"class.std::__1::unique_ptr.2700", %"class.std::__1::unique_ptr.2706", %"class.WTF::Vector.738" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2505" = type { %"class.WTF::HashTable.2506" }
%"class.WTF::HashTable.2506" = type <{ %class.scoped_refptr.2509*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2509 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2510" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2511", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1681, %"class.base::WeakPtrFactory.1682" }
%class.scoped_refptr.1681 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1682" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2511" = type { %"class.blink::MemberBase.2124" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.2512" = type { %"class.absl::optional_internal::optional_data.2513" }
%"class.absl::optional_internal::optional_data.2513" = type { %"class.absl::optional_internal::optional_data_base.2514" }
%"class.absl::optional_internal::optional_data_base.2514" = type { %"class.absl::optional_internal::optional_data_dtor_base.2515" }
%"class.absl::optional_internal::optional_data_dtor_base.2515" = type { i8, %union.anon.2516 }
%union.anon.2516 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::HeapHashSet.2521"* }
%"class.blink::HeapHashSet.2521" = type opaque
%"class.std::__1::unique_ptr.2522" = type { %"class.std::__1::__compressed_pair.2523" }
%"class.std::__1::__compressed_pair.2523" = type { %"struct.std::__1::__compressed_pair_elem.2524" }
%"struct.std::__1::__compressed_pair_elem.2524" = type { %"class.WTF::HashSet.2525"* }
%"class.WTF::HashSet.2525" = type { %"class.WTF::HashTable.2526" }
%"class.WTF::HashTable.2526" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1022, %"class.blink::UntracedMember.1463", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.1022 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1448", %"class.std::__1::unique_ptr.1450" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1087", %"class.blink::DataRef.1164", %"class.blink::DataRef.1168", %"class.blink::DataRef.1364", %"class.blink::DataRef.1431", %"class.blink::DataRef.1435", %"class.blink::DataRef.1439", %"class.blink::DataRef.1443", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1023 }
%class.scoped_refptr.1023 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1024", %"class.blink::DataRef.1026", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1024" = type { %"class.base::RefCounted.1025" }
%"class.base::RefCounted.1025" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1026" = type { %class.scoped_refptr.1027 }
%class.scoped_refptr.1027 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1028", %"class.blink::Font" }
%"class.WTF::RefCounted.1028" = type { %"class.base::RefCounted.1029" }
%"class.base::RefCounted.1029" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1056 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1031, %class.scoped_refptr.1039, %class.scoped_refptr.1049, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1055 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1030 }
%class.scoped_refptr.1030 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.2055", [4 x i8] }>
%"class.WTF::RefCounted.2055" = type { %"class.base::RefCounted.2056" }
%"class.base::RefCounted.2056" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1031 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1037", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1032" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1039 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1040", %"class.WTF::RefCounted.1047", [4 x i8] }>
%"class.blink::FontSettings.1040" = type { %"class.WTF::Vector.1041" }
%"class.WTF::Vector.1041" = type { %"class.WTF::VectorBuffer.1042" }
%"class.WTF::VectorBuffer.1042" = type { %"class.WTF::VectorBufferBase.1043" }
%"class.WTF::VectorBufferBase.1043" = type { %"class.blink::FontTagValuePair.1044"*, i32, i32 }
%"class.blink::FontTagValuePair.1044" = type { i32, float }
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1049 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1050", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1052, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1050" = type { %"class.base::RefCounted.1051" }
%"class.base::RefCounted.1051" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1052 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1053", [4 x i8] }>
%"class.WTF::RefCounted.1053" = type { %"class.base::RefCounted.1054" }
%"class.base::RefCounted.1054" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1055 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1056 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1057", %"class.WTF::Vector.1059", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1085" }
%"class.WTF::RefCounted.1057" = type { %"class.base::RefCounted.1058" }
%"class.base::RefCounted.1058" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1059" = type { %"class.WTF::VectorBuffer.1060" }
%"class.WTF::VectorBuffer.1060" = type { %"class.WTF::VectorBufferBase.1061", [8 x i8] }
%"class.WTF::VectorBufferBase.1061" = type { %class.scoped_refptr.1062*, i32, i32 }
%class.scoped_refptr.1062 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1063", [4 x i8] }>
%"class.WTF::RefCounted.1063" = type { %"class.base::RefCounted.1064" }
%"class.base::RefCounted.1064" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1073", %class.scoped_refptr.1080, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1063" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1067", %"class.absl::optional.1067", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1067" = type { %"class.absl::optional_internal::optional_data.1068" }
%"class.absl::optional_internal::optional_data.1068" = type { %"class.absl::optional_internal::optional_data_base.1069" }
%"class.absl::optional_internal::optional_data_base.1069" = type { %"class.absl::optional_internal::optional_data_dtor_base.1070" }
%"class.absl::optional_internal::optional_data_dtor_base.1070" = type { i8, %union.anon.1071 }
%union.anon.1071 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1072, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.89" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.89" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.579" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1072 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1076, %class.scoped_refptr.1076 }
%class.scoped_refptr.1076 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1080 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1081", [4 x i8] }>
%"class.WTF::RefCounted.1081" = type { %"class.base::RefCounted.1082" }
%"class.base::RefCounted.1082" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1083" }
%"class.blink::PersistentBase.1083" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.1084" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.1084" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1085" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.835 }
%class.scoped_refptr.835 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.1086, i8, i8, i8, i8 }>
%union.anon.1086 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1087" = type { %class.scoped_refptr.1088 }
%class.scoped_refptr.1088 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1089", [4 x i8], %"class.blink::DataRef.1091", %"class.blink::DataRef.1133", %"class.WTF::Vector.136", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1137, %class.scoped_refptr.1146, %"class.blink::Persistent.1154", %"class.blink::Persistent.1156", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1089" = type { %"class.base::RefCounted.1090" }
%"class.base::RefCounted.1090" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1091" = type { %class.scoped_refptr.1092 }
%class.scoped_refptr.1092 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1093", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1095, %class.scoped_refptr.1103, %"class.blink::Persistent.1120", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1093" = type { %"class.base::RefCounted.1094" }
%"class.base::RefCounted.1094" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1095 = type { %"class.base::RefCountedData.1096"* }
%"class.base::RefCountedData.1096" = type { %"class.base::RefCountedThreadSafe.1097", %"class.WTF::Vector.1098" }
%"class.base::RefCountedThreadSafe.1097" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1103 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1104", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1106", %"class.blink::Persistent.1111" }
%"class.WTF::HashMap.1106" = type { %"class.WTF::HashTable.1107" }
%"class.WTF::HashTable.1107" = type <{ %"struct.WTF::KeyValuePair.1110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1110" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2861 }
%class.scoped_refptr.2861 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2862", %"class.WTF::Vector.61", %"class.WTF::Vector.2864", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2862" = type { %"class.base::RefCounted.2863" }
%"class.base::RefCounted.2863" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2864" = type { %"class.WTF::VectorBuffer.2865" }
%"class.WTF::VectorBuffer.2865" = type { %"class.WTF::VectorBufferBase.2866" }
%"class.WTF::VectorBufferBase.2866" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2867 }
%union.anon.2867 = type { double }
%"class.blink::Persistent.1111" = type { %"class.blink::PersistentBase.1112" }
%"class.blink::PersistentBase.1112" = type { %"class.blink::HeapHashMap.1113"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1113" = type { %"class.WTF::HashMap.1116" }
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1119"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1119" = type opaque
%"class.blink::Persistent.1120" = type { %"class.blink::PersistentBase.1121" }
%"class.blink::PersistentBase.1121" = type { %"class.blink::HeapVector.1122"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1128", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1133" = type { %class.scoped_refptr.1134 }
%class.scoped_refptr.1134 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1135", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1137 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1138", %"class.WTF::Vector.1140" }
%"class.WTF::RefCounted.1138" = type { %"class.base::RefCounted.1139" }
%"class.base::RefCounted.1139" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1140" = type { %"class.WTF::VectorBuffer.1141" }
%"class.WTF::VectorBuffer.1141" = type { %"class.WTF::VectorBufferBase.1142" }
%"class.WTF::VectorBufferBase.1142" = type { %"struct.std::__1::pair.1143"*, i32, i32 }
%"struct.std::__1::pair.1143" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1146 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1147", [4 x i8], %"class.WTF::Vector.1149" }
%"class.WTF::RefCounted.1147" = type { %"class.base::RefCounted.1148" }
%"class.base::RefCounted.1148" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1149" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1151", [28 x i8] }>
%"class.WTF::VectorBufferBase.1151" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1154" = type { %"class.blink::PersistentBase.1155" }
%"class.blink::PersistentBase.1155" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1156" = type { %"class.blink::PersistentBase.1157" }
%"class.blink::PersistentBase.1157" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1160", %"class.blink::Member.1162" }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1164" = type { %class.scoped_refptr.1165 }
%class.scoped_refptr.1165 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1166", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1166" = type { %"class.base::RefCounted.1167" }
%"class.base::RefCounted.1167" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1168" = type { %class.scoped_refptr.1169 }
%class.scoped_refptr.1169 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1170", [4 x i8], %"class.blink::DataRef.1172", %"class.blink::DataRef.1238", %"class.blink::TransformOperations", %class.scoped_refptr.1146, %"class.blink::Persistent.1358", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1170" = type { %"class.base::RefCounted.1171" }
%"class.base::RefCounted.1171" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1172" = type { %class.scoped_refptr.1173 }
%class.scoped_refptr.1173 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1174", [4 x i8], %"class.blink::DataRef.1176", %"class.blink::Persistent.1214", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1174" = type { %"class.base::RefCounted.1175" }
%"class.base::RefCounted.1175" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1176" = type { %class.scoped_refptr.1177 }
%class.scoped_refptr.1177 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1178", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1196, %class.scoped_refptr.1199, %class.scoped_refptr.1202, %class.scoped_refptr.1205, %class.scoped_refptr.1206, %class.scoped_refptr.1207, %"class.blink::Persistent.1214", %"class.blink::Persistent.1229", %"class.absl::optional.1233", %"class.absl::optional.1233", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1178" = type { %"class.base::RefCounted.1179" }
%"class.base::RefCounted.1179" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1180", %"class.std::__1::unique_ptr.1185" }
%"class.WTF::Vector.1180" = type { %"class.WTF::VectorBuffer.1181" }
%"class.WTF::VectorBuffer.1181" = type { %"class.WTF::VectorBufferBase.1182" }
%"class.WTF::VectorBufferBase.1182" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1188", %"class.WTF::Vector.1180", i32, i32 }
%"class.WTF::Vector.1188" = type { %"class.WTF::VectorBuffer.1189" }
%"class.WTF::VectorBuffer.1189" = type { %"class.WTF::VectorBufferBase.1190" }
%"class.WTF::VectorBufferBase.1190" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1196 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1197", [4 x i8] }>
%"class.WTF::RefCounted.1197" = type { %"class.base::RefCounted.1198" }
%"class.base::RefCounted.1198" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1199 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1200", [4 x i8] }>
%"class.WTF::RefCounted.1200" = type { %"class.base::RefCounted.1201" }
%"class.base::RefCounted.1201" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1202 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1203" }>
%"class.WTF::RefCounted.1203" = type { %"class.base::RefCounted.1204" }
%"class.base::RefCounted.1204" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1205 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1206 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1207 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1208", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1210" }
%"class.blink::DataRef.1210" = type { %class.scoped_refptr.1211 }
%class.scoped_refptr.1211 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1154", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1212" }
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1229" = type { %"class.blink::PersistentBase.1230" }
%"class.blink::PersistentBase.1230" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1199, %"class.blink::Member.1128", i32, [4 x i8] }>
%"class.absl::optional.1233" = type { %"class.absl::optional_internal::optional_data.1234" }
%"class.absl::optional_internal::optional_data.1234" = type { %"class.absl::optional_internal::optional_data_base.1235" }
%"class.absl::optional_internal::optional_data_base.1235" = type { %"class.absl::optional_internal::optional_data_dtor_base.1236" }
%"class.absl::optional_internal::optional_data_dtor_base.1236" = type { i8, [3 x i8], %union.anon.1237 }
%union.anon.1237 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1214" = type { %"class.blink::PersistentBase.1215" }
%"class.blink::PersistentBase.1215" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1218" }
%"class.blink::HeapVector.1218" = type { %"class.WTF::Vector.1221" }
%"class.WTF::Vector.1221" = type { %"class.WTF::VectorBuffer.1222" }
%"class.WTF::VectorBuffer.1222" = type { %"class.WTF::VectorBufferBase.1223" }
%"class.WTF::VectorBufferBase.1223" = type { %"class.blink::Member.1224"*, i32, i32 }
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1238" = type { %class.scoped_refptr.1239 }
%class.scoped_refptr.1239 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1240", %"class.blink::DataRef.1242", %"class.blink::DataRef.1246", %"class.blink::DataRef.1255", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1274", %"class.std::__1::unique_ptr.1285", %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1335", %"class.std::__1::unique_ptr.1346", %"class.WTF::Vector.61", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1240" = type { %"class.base::RefCounted.1241" }
%"class.base::RefCounted.1241" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1242" = type { %class.scoped_refptr.1243 }
%class.scoped_refptr.1243 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1244", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1244" = type { %"class.base::RefCounted.1245" }
%"class.base::RefCounted.1245" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1246" = type { %class.scoped_refptr.1247 }
%class.scoped_refptr.1247 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1248", [4 x i8], %"class.WTF::Vector.1250", i8, [7 x i8] }>
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { i32*, i32, i32 }
%"class.blink::DataRef.1255" = type { %class.scoped_refptr.1256 }
%class.scoped_refptr.1256 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1257", [4 x i8], %"class.WTF::HashMap.1259", %"class.WTF::HashMap.1259", %"class.WTF::HashMap.1259", %"class.WTF::HashMap.1259", %"class.WTF::HashMap.1259", %"class.WTF::HashMap.1259", %"class.WTF::HashMap.1264", %"class.WTF::HashMap.1264", %"class.WTF::HashMap.1264", %"class.WTF::HashMap.1264", %"class.WTF::HashMap.1269", %"class.WTF::Vector.1180", %"class.WTF::Vector.1180", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1257" = type { %"class.base::RefCounted.1258" }
%"class.base::RefCounted.1258" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1259" = type { %"class.WTF::HashTable.1260" }
%"class.WTF::HashTable.1260" = type <{ %"struct.WTF::KeyValuePair.1263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1263" = type { %"class.WTF::String", %"class.WTF::Vector.2851" }
%"class.WTF::Vector.2851" = type { %"class.WTF::VectorBuffer.2852" }
%"class.WTF::VectorBuffer.2852" = type { %"class.WTF::VectorBufferBase.2853" }
%"class.WTF::VectorBufferBase.2853" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"struct.WTF::KeyValuePair.1268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1268" = type { i64, %"class.WTF::Vector.61" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1273" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1274" = type { %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1277" }
%"class.WTF::HashMap.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"struct.WTF::KeyValuePair.1281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1281" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2856", %"class.absl::optional.2856", %"class.absl::optional.2856" }
%"class.absl::optional.2856" = type { %"class.absl::optional_internal::optional_data.2857" }
%"class.absl::optional_internal::optional_data.2857" = type { %"class.absl::optional_internal::optional_data_base.2858" }
%"class.absl::optional_internal::optional_data_base.2858" = type { %"class.absl::optional_internal::optional_data_dtor_base.2859" }
%"class.absl::optional_internal::optional_data_dtor_base.2859" = type { i8, %union.anon.2860 }
%union.anon.2860 = type { i32 }
%"class.std::__1::unique_ptr.1285" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.136", %"class.WTF::Vector.1301", %"class.WTF::Vector.1288", %"class.WTF::Vector.1306", %"class.WTF::Vector.1311", %"class.WTF::Vector.1316" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1288", %"class.WTF::Vector.1288", %"class.WTF::Vector.1293" }
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { %class.scoped_refptr.1296*, i32, i32 }
%class.scoped_refptr.1296 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1297", i32 }
%"class.WTF::ThreadSafeRefCounted.1297" = type { %"class.base::RefCountedThreadSafe.1298" }
%"class.base::RefCountedThreadSafe.1298" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1301" = type { %"class.WTF::VectorBuffer.1302" }
%"class.WTF::VectorBuffer.1302" = type { %"class.WTF::VectorBufferBase.1303" }
%"class.WTF::VectorBufferBase.1303" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1288" = type { %"class.WTF::VectorBuffer.1289" }
%"class.WTF::VectorBuffer.1289" = type { %"class.WTF::VectorBufferBase.1290" }
%"class.WTF::VectorBufferBase.1290" = type { double*, i32, i32 }
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { i32*, i32, i32 }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { i32*, i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1327" }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1338" }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { %"class.blink::Persistent.1154"*, i32, i32 }
%"class.std::__1::unique_ptr.1346" = type { %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1154", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1352" }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { %class.scoped_refptr.1355*, i32, i32 }
%class.scoped_refptr.1355 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1203", [4 x i8] }>
%"class.blink::Persistent.1358" = type { %"class.blink::PersistentBase.1359" }
%"class.blink::PersistentBase.1359" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1362" }
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1364" = type { %class.scoped_refptr.1365 }
%class.scoped_refptr.1365 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1366", [4 x i8], %"class.blink::DataRef.1368", %"class.blink::DataRef.1372", %"class.blink::DataRef.1393", %"class.blink::DataRef.1411", %"class.blink::DataRef.1423", %"class.blink::DataRef.1427", %class.scoped_refptr.1397, i32, [4 x i8] }>
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1368" = type { %class.scoped_refptr.1369 }
%class.scoped_refptr.1369 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1370", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1370" = type { %"class.base::RefCounted.1371" }
%"class.base::RefCounted.1371" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1372" = type { %class.scoped_refptr.1373 }
%class.scoped_refptr.1373 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1374", %class.scoped_refptr.1376, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1374" = type { %"class.base::RefCounted.1375" }
%"class.base::RefCounted.1375" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1376 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1377", %"class.std::__1::unique_ptr.1383", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1200" }>
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1386, i32, %"struct.std::__1::atomic.579", %"struct.std::__1::atomic.579", i8, i8 }>
%class.sk_sp.1386 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1387, %class.SkTDArray.1388, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.89" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1387 = type { i8*, i32, i32 }
%class.SkTDArray.1388 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1389 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.89", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1389 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.375", [3 x i8] }
%"class.blink::DataRef.1393" = type { %class.scoped_refptr.1394 }
%class.scoped_refptr.1394 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1395", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1395" = type { %"class.base::RefCounted.1396" }
%"class.base::RefCounted.1396" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1397, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1411" = type { %class.scoped_refptr.1412 }
%class.scoped_refptr.1412 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1413", [4 x i8], %class.scoped_refptr.1415, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1413" = type { %"class.base::RefCounted.1414" }
%"class.base::RefCounted.1414" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1415 = type { %"class.base::RefCountedData.1416"* }
%"class.base::RefCountedData.1416" = type { %"class.base::RefCountedThreadSafe.1417", %"class.WTF::Vector.1418" }
%"class.base::RefCountedThreadSafe.1417" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1418" = type { %"class.WTF::VectorBuffer.1419" }
%"class.WTF::VectorBuffer.1419" = type { %"class.WTF::VectorBufferBase.1420" }
%"class.WTF::VectorBufferBase.1420" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1423" = type { %class.scoped_refptr.1424 }
%class.scoped_refptr.1424 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1425", %class.scoped_refptr.1397, %class.scoped_refptr.1397, %class.scoped_refptr.1397 }
%"class.WTF::RefCounted.1425" = type { %"class.base::RefCounted.1426" }
%"class.base::RefCounted.1426" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1427" = type { %class.scoped_refptr.1428 }
%class.scoped_refptr.1428 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1429", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1429" = type { %"class.base::RefCounted.1430" }
%"class.base::RefCounted.1430" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1397 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1398", %"class.blink::Persistent.1400", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1398" = type { %"class.base::RefCounted.1399" }
%"class.base::RefCounted.1399" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1400" = type { %"class.blink::PersistentBase.1401" }
%"class.blink::PersistentBase.1401" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.669", %"class.blink::HeapHashMap.1404" }
%"class.blink::HeapHashMap.1404" = type { %"class.WTF::HashMap.1407" }
%"class.WTF::HashMap.1407" = type { %"class.WTF::HashTable.1408" }
%"class.WTF::HashTable.1408" = type <{ %"struct.WTF::KeyValuePair.1410"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1410" = type opaque
%"class.blink::DataRef.1431" = type { %class.scoped_refptr.1432 }
%class.scoped_refptr.1432 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1433", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1433" = type { %"class.base::RefCounted.1434" }
%"class.base::RefCounted.1434" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1435" = type { %class.scoped_refptr.1436 }
%class.scoped_refptr.1436 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1437", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1437" = type { %"class.base::RefCounted.1438" }
%"class.base::RefCounted.1438" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1439" = type { %class.scoped_refptr.1440 }
%class.scoped_refptr.1440 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1441", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1441" = type { %"class.base::RefCounted.1442" }
%"class.base::RefCounted.1442" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1443" = type { %class.scoped_refptr.1444 }
%class.scoped_refptr.1444 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1445", %class.scoped_refptr.1447 }
%"class.WTF::RefCounted.1445" = type { %"class.base::RefCounted.1446" }
%"class.base::RefCounted.1446" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1447 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.2053", %"class.blink::StyleVariables", %class.scoped_refptr.1447 }
%"class.WTF::RefCounted.2053" = type { %"class.base::RefCounted.2054" }
%"class.base::RefCounted.2054" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1448" = type { %"class.base::RefCounted.1449" }
%"class.base::RefCounted.1449" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1450" = type { %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1453" }
%"class.std::__1::unique_ptr.1453" = type { %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.1455" }
%"struct.std::__1::__compressed_pair_elem.1455" = type { %"class.WTF::Vector.1456"* }
%"class.WTF::Vector.1456" = type { %"class.WTF::VectorBuffer.2871" }
%"class.WTF::VectorBuffer.2871" = type { %"class.WTF::VectorBufferBase.2872", [32 x i8] }
%"class.WTF::VectorBufferBase.2872" = type { %class.scoped_refptr.1022*, i32, i32 }
%"class.blink::UntracedMember.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1465" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1468", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1474", %"class.std::__1::unique_ptr.1597", i8, %"class.absl::optional.1603", %class.scoped_refptr.1579, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1608" }
%"class.std::__1::unique_ptr.1468" = type { %"class.std::__1::__compressed_pair.1469" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1474" = type { %"class.std::__1::__compressed_pair.1475" }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1477, %class.scoped_refptr.1477, %class.scoped_refptr.1477, %class.scoped_refptr.1477, %class.scoped_refptr.1477, %class.scoped_refptr.1477, %class.scoped_refptr.1512, %class.scoped_refptr.1528, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1529, %class.scoped_refptr.1569, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1570, %class.scoped_refptr.1593 }
%class.scoped_refptr.1477 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1494" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1478", i8, i8, %class.scoped_refptr.1480, i32, i32 }
%"class.WTF::RefCounted.1478" = type { %"class.base::RefCounted.1479" }
%"class.base::RefCounted.1479" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1480 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1487, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1488", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1481" }
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1487 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1513", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1513" = type { %"class.WTF::RefCounted.1514", i8, i8, %class.scoped_refptr.1487, i32, i32 }
%"class.WTF::RefCounted.1514" = type { %"class.base::RefCounted.1515" }
%"class.base::RefCounted.1515" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1516" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1516" = type { %"class.absl::optional_internal::optional_data.1517" }
%"class.absl::optional_internal::optional_data.1517" = type { %"class.absl::optional_internal::optional_data_base.1518" }
%"class.absl::optional_internal::optional_data_base.1518" = type { %"class.absl::optional_internal::optional_data_dtor_base.1519" }
%"class.absl::optional_internal::optional_data_dtor_base.1519" = type { i8, %union.anon.1520 }
%union.anon.1520 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1521", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1521" = type { %"class.std::__1::__vector_base.1522" }
%"class.std::__1::__vector_base.1522" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1523" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1523" = type { %"struct.std::__1::__compressed_pair_elem.1524" }
%"struct.std::__1::__compressed_pair_elem.1524" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1488" = type { %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1497", %"class.std::__1::unique_ptr.1503", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1497" = type { %"class.std::__1::__compressed_pair.1498" }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1512 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1528 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1529 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1530" }
%"class.blink::PaintPropertyNode.1530" = type { %"class.WTF::RefCounted.1531", i8, i8, %class.scoped_refptr.1533, i32, i32 }
%"class.WTF::RefCounted.1531" = type { %"class.base::RefCounted.1532" }
%"class.base::RefCounted.1532" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1533 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1480, %class.scoped_refptr.1534, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1556", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1534 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1571" }
%"class.blink::PaintPropertyNode.1571" = type { %"class.WTF::RefCounted.1572", i8, i8, %class.scoped_refptr.1534, i32, i32 }
%"class.WTF::RefCounted.1572" = type { %"class.base::RefCounted.1573" }
%"class.base::RefCounted.1573" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1535" }
%"class.std::__1::vector.1535" = type { %"class.std::__1::__vector_base.1536" }
%"class.std::__1::__vector_base.1536" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1551" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1537, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1544", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1537 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1538, i32, %"class.absl::optional.1539", i8, i32 }
%class.sk_sp.1538 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1539" = type { %"class.absl::optional_internal::optional_data.1540" }
%"class.absl::optional_internal::optional_data.1540" = type { %"class.absl::optional_internal::optional_data_base.1541" }
%"class.absl::optional_internal::optional_data_base.1541" = type { %"class.absl::optional_internal::optional_data_dtor_base.1542" }
%"class.absl::optional_internal::optional_data_dtor_base.1542" = type { i8, %union.anon.1543 }
%union.anon.1543 = type { %struct.SkRect }
%"class.std::__1::vector.1544" = type { %"class.std::__1::__vector_base.1545" }
%"class.std::__1::__vector_base.1545" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1556" = type { %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.1558" }
%"struct.std::__1::__compressed_pair_elem.1558" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1562" }
%"class.std::__1::vector.1562" = type { %"class.std::__1::__vector_base.1563" }
%"class.std::__1::__vector_base.1563" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1564" }
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { i32* }
%class.scoped_refptr.1569 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1570 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1582" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1480, %"class.absl::optional.1574", %class.scoped_refptr.1579, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1574" = type { %"class.absl::optional_internal::optional_data.1575" }
%"class.absl::optional_internal::optional_data.1575" = type { %"class.absl::optional_internal::optional_data_base.1576" }
%"class.absl::optional_internal::optional_data_base.1576" = type { %"class.absl::optional_internal::optional_data_dtor_base.1577" }
%"class.absl::optional_internal::optional_data_dtor_base.1577" = type { i8, [3 x i8], %union.anon.1578 }
%union.anon.1578 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1582" = type { %"class.std::__1::__compressed_pair.1583" }
%"class.std::__1::__compressed_pair.1583" = type { %"struct.std::__1::__compressed_pair_elem.1584" }
%"struct.std::__1::__compressed_pair_elem.1584" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1585", i32, [4 x i8] }>
%"class.WTF::Vector.1585" = type { %"class.WTF::VectorBuffer.1586" }
%"class.WTF::VectorBuffer.1586" = type { %"class.WTF::VectorBufferBase.1587" }
%"class.WTF::VectorBufferBase.1587" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1593 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1597" = type { %"class.std::__1::__compressed_pair.1598" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1480, %class.scoped_refptr.1534, %class.scoped_refptr.1533 }
%"class.absl::optional.1603" = type { %"class.absl::optional_internal::optional_data.1604" }
%"class.absl::optional_internal::optional_data.1604" = type { %"class.absl::optional_internal::optional_data_base.1605" }
%"class.absl::optional_internal::optional_data_base.1605" = type { %"class.absl::optional_internal::optional_data_dtor_base.1606" }
%"class.absl::optional_internal::optional_data_dtor_base.1606" = type { i8, %union.anon.1607 }
%union.anon.1607 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1579 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1580", [4 x i8] }
%"class.WTF::RefCounted.1580" = type { %"class.base::RefCounted.1581" }
%"class.base::RefCounted.1581" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1608" = type { %"class.std::__1::__compressed_pair.1609" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.1610" }
%"struct.std::__1::__compressed_pair_elem.1610" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2532" = type { %"class.blink::MemberBase.2533" }
%"class.blink::MemberBase.2533" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2534" = type { %"class.WTF::HashSet.2537" }
%"class.WTF::HashSet.2537" = type { %"class.WTF::HashTable.2538" }
%"class.WTF::HashTable.2538" = type <{ %"class.blink::Member.2540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2540" = type opaque
%"class.blink::HeapHashSet.2541" = type { %"class.WTF::HashSet.2544" }
%"class.WTF::HashSet.2544" = type { %"class.WTF::HashTable.2545" }
%"class.WTF::HashTable.2545" = type <{ %"class.blink::Member.2547"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2547" = type { %"class.blink::MemberBase.2548" }
%"class.blink::MemberBase.2548" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2714", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2725", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.669" }
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2716", %"class.blink::Member.2717", %"class.blink::Member.2719", %"class.blink::Member.2721", %"class.blink::Member.2723", %"class.WTF::Vector.738", i16, %class.scoped_refptr.1681 }
%"class.blink::ThreadState::PrefinalizerRegistration.2716" = type { i8 }
%"class.blink::Member.2717" = type { %"class.blink::MemberBase.2718" }
%"class.blink::MemberBase.2718" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2721" = type { %"class.blink::MemberBase.2722" }
%"class.blink::MemberBase.2722" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2723" = type { %"class.blink::MemberBase.2724" }
%"class.blink::MemberBase.2724" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2725" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2726", { i64, i64 } }
%"class.blink::WeakMember.2726" = type { %"class.blink::MemberBase.2548" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2549" = type { %"class.std::__1::__compressed_pair.2550" }
%"class.std::__1::__compressed_pair.2550" = type { %"struct.std::__1::__compressed_pair_elem.2551" }
%"struct.std::__1::__compressed_pair_elem.2551" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2559", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2559" = type { %"class.WTF::HashTable.2560" }
%"class.WTF::HashTable.2560" = type <{ %"struct.WTF::KeyValuePair.2562"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2562" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2563", i32, i32 }
%"class.WTF::Vector.2563" = type { %"class.WTF::VectorBuffer.2564" }
%"class.WTF::VectorBuffer.2564" = type { %"class.WTF::VectorBufferBase.2565" }
%"class.WTF::VectorBufferBase.2565" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2567" = type { %"class.WTF::LinkedHashSet.2570" }
%"class.WTF::LinkedHashSet.2570" = type { %"class.WTF::HashMap.2571", %"class.WTF::VectorBackedLinkedList.2575" }
%"class.WTF::HashMap.2571" = type { %"class.WTF::HashTable.2572" }
%"class.WTF::HashTable.2572" = type <{ %"struct.WTF::KeyValuePair.2574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2574" = type opaque
%"class.WTF::VectorBackedLinkedList.2575" = type { %"class.WTF::Vector.2576", i32, i32 }
%"class.WTF::Vector.2576" = type { %"class.WTF::VectorBuffer.2577" }
%"class.WTF::VectorBuffer.2577" = type { %"class.WTF::VectorBufferBase.2578" }
%"class.WTF::VectorBufferBase.2578" = type { %"class.WTF::VectorBackedLinkedListNode.2579"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2579" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2581" = type { %"class.std::__1::__compressed_pair.2582" }
%"class.std::__1::__compressed_pair.2582" = type { %"struct.std::__1::__compressed_pair_elem.2583" }
%"struct.std::__1::__compressed_pair_elem.2583" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2587" = type { %"class.std::__1::__compressed_pair.2588" }
%"class.std::__1::__compressed_pair.2588" = type { %"struct.std::__1::__compressed_pair_elem.2589" }
%"struct.std::__1::__compressed_pair_elem.2589" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2590, %class.scoped_refptr.2590, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2645", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2650", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2590 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2591", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2598" }
%"class.WTF::RefCounted.2591" = type { %"class.base::RefCounted.2592" }
%"class.base::RefCounted.2592" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2593", i32, [4 x i8] }>
%"class.WTF::Vector.2593" = type { %"class.WTF::VectorBuffer.2594" }
%"class.WTF::VectorBuffer.2594" = type { %"class.WTF::VectorBufferBase.2595" }
%"class.WTF::VectorBufferBase.2595" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2598" = type { %"class.WTF::VectorBuffer.2599" }
%"class.WTF::VectorBuffer.2599" = type { %"class.WTF::VectorBufferBase.2600" }
%"class.WTF::VectorBufferBase.2600" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2601", %"class.std::__1::unique_ptr.2617", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2601" = type { %"class.std::__1::__compressed_pair.2602" }
%"class.std::__1::__compressed_pair.2602" = type { %"struct.std::__1::__compressed_pair_elem.2603" }
%"struct.std::__1::__compressed_pair_elem.2603" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2604", %"class.WTF::Vector.2609", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2604" = type { %"class.WTF::VectorBuffer.2605" }
%"class.WTF::VectorBuffer.2605" = type { %"class.WTF::VectorBufferBase.2606" }
%"class.WTF::VectorBufferBase.2606" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2609" = type { %"class.WTF::VectorBuffer.2610" }
%"class.WTF::VectorBuffer.2610" = type { %"class.WTF::VectorBufferBase.2611" }
%"class.WTF::VectorBufferBase.2611" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2617" = type { %"class.std::__1::__compressed_pair.2618" }
%"class.std::__1::__compressed_pair.2618" = type { %"struct.std::__1::__compressed_pair_elem.2619" }
%"struct.std::__1::__compressed_pair_elem.2619" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2620", %"class.absl::optional.2620" }
%"class.absl::optional.2620" = type { %"class.absl::optional_internal::optional_data.2621" }
%"class.absl::optional_internal::optional_data.2621" = type { %"class.absl::optional_internal::optional_data_base.2622" }
%"class.absl::optional_internal::optional_data_base.2622" = type { %"class.absl::optional_internal::optional_data_dtor_base.2623" }
%"class.absl::optional_internal::optional_data_dtor_base.2623" = type { i8, [3 x i8], %union.anon.2624 }
%union.anon.2624 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2598"*, %"class.absl::optional.2630", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2630" = type { %"class.absl::optional_internal::optional_data.2631" }
%"class.absl::optional_internal::optional_data.2631" = type { %"class.absl::optional_internal::optional_data_base.2632" }
%"class.absl::optional_internal::optional_data_base.2632" = type { %"class.absl::optional_internal::optional_data_dtor_base.2633" }
%"class.absl::optional_internal::optional_data_dtor_base.2633" = type { i8, %union.anon.2634 }
%union.anon.2634 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2635", %"class.WTF::Vector.2640" }
%"class.WTF::Vector.2635" = type { %"class.WTF::VectorBuffer.2636" }
%"class.WTF::VectorBuffer.2636" = type { %"class.WTF::VectorBufferBase.2637", [128 x i8] }
%"class.WTF::VectorBufferBase.2637" = type { i32*, i32, i32 }
%"class.WTF::Vector.2640" = type { %"class.WTF::VectorBuffer.2641" }
%"class.WTF::VectorBuffer.2641" = type { %"class.WTF::VectorBufferBase.2642", [128 x i8] }
%"class.WTF::VectorBufferBase.2642" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2645" = type { %"class.WTF::VectorBuffer.2646" }
%"class.WTF::VectorBuffer.2646" = type { %"class.WTF::VectorBufferBase.2647" }
%"class.WTF::VectorBufferBase.2647" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2650" = type { %"class.WTF::HashTable.2651" }
%"class.WTF::HashTable.2651" = type <{ %"struct.WTF::KeyValuePair.2654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2654" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2655", %"class.WTF::Vector.2660" }
%"class.WTF::HashMap.2655" = type { %"class.WTF::HashTable.2656" }
%"class.WTF::HashTable.2656" = type <{ %"struct.WTF::KeyValuePair.2659"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2659" = type opaque
%"class.WTF::Vector.2660" = type { %"class.WTF::VectorBuffer.2661" }
%"class.WTF::VectorBuffer.2661" = type { %"class.WTF::VectorBufferBase.2662" }
%"class.WTF::VectorBufferBase.2662" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2668" = type { %"class.std::__1::__compressed_pair.2669" }
%"class.std::__1::__compressed_pair.2669" = type { %"struct.std::__1::__compressed_pair_elem.2670" }
%"struct.std::__1::__compressed_pair_elem.2670" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2674" = type { %"class.WTF::VectorBuffer.2675" }
%"class.WTF::VectorBuffer.2675" = type { %"class.WTF::VectorBufferBase.2676" }
%"class.WTF::VectorBufferBase.2676" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2679 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2686" = type { %"class.WTF::HashSet.2689" }
%"class.WTF::HashSet.2689" = type { %"class.WTF::HashTable.2690" }
%"class.WTF::HashTable.2690" = type <{ %"class.blink::WeakMember.2692"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2692" = type opaque
%"class.blink::HeapHashSet.2693" = type { %"class.WTF::HashSet.2696" }
%"class.WTF::HashSet.2696" = type { %"class.WTF::HashTable.2697" }
%"class.WTF::HashTable.2697" = type <{ %"class.blink::WeakMember.2699"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2699" = type opaque
%"class.std::__1::unique_ptr.2700" = type { %"class.std::__1::__compressed_pair.2701" }
%"class.std::__1::__compressed_pair.2701" = type { %"struct.std::__1::__compressed_pair_elem.2702" }
%"struct.std::__1::__compressed_pair_elem.2702" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2706" = type { %"class.std::__1::__compressed_pair.2707" }
%"class.std::__1::__compressed_pair.2707" = type { %"struct.std::__1::__compressed_pair_elem.2708" }
%"struct.std::__1::__compressed_pair_elem.2708" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.147", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.2144", %"class.blink::HeapListHashSet.2155", %"class.blink::HeapListHashSet.2166", %"class.blink::HeapListHashSet.2177", %"class.blink::HeapListHashSet.2188", %"class.blink::HeapListHashSet.2199", %"class.blink::HeapListHashSet.2210", %"class.blink::HeapListHashSet.2221", %"class.blink::HeapListHashSet.2232", %"class.blink::HeapListHashSet.2243", %"class.blink::HeapListHashSet.2254", %"class.blink::HeapListHashSet.2265", %"class.blink::HeapListHashSet.2276", %"class.blink::HeapListHashSet.2287", %"class.blink::HeapListHashSet.2298", %"class.blink::HeapListHashSet.2309", %"class.blink::HeapListHashSet.2320", %"class.blink::HeapListHashSet.2331", %"class.blink::HeapListHashSet.2342" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.2140", %"class.blink::Member.2142", %"class.blink::Member.2142", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2140" = type <{ %"class.blink::Member.2142"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2356", %"class.blink::Member.2142", %"class.blink::Member.2142" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.2144" = type { %"class.WTF::ListHashSet.base.2154", [7 x i8] }
%"class.WTF::ListHashSet.base.2154" = type <{ %"class.WTF::HashTable.2149", %"class.blink::Member.2151", %"class.blink::Member.2151", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2149" = type <{ %"class.blink::Member.2151"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::HeapListHashSetNode.2153"* }
%"class.blink::HeapListHashSetNode.2153" = type { %"class.blink::Member.2499", %"class.blink::Member.2151", %"class.blink::Member.2151" }
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2155" = type { %"class.WTF::ListHashSet.base.2165", [7 x i8] }
%"class.WTF::ListHashSet.base.2165" = type <{ %"class.WTF::HashTable.2160", %"class.blink::Member.2162", %"class.blink::Member.2162", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2160" = type <{ %"class.blink::Member.2162"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::HeapListHashSetNode.2164"* }
%"class.blink::HeapListHashSetNode.2164" = type { %"class.blink::Member.2495", %"class.blink::Member.2162", %"class.blink::Member.2162" }
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2166" = type { %"class.WTF::ListHashSet.base.2176", [7 x i8] }
%"class.WTF::ListHashSet.base.2176" = type <{ %"class.WTF::HashTable.2171", %"class.blink::Member.2173", %"class.blink::Member.2173", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2171" = type <{ %"class.blink::Member.2173"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2173" = type { %"class.blink::MemberBase.2174" }
%"class.blink::MemberBase.2174" = type { %"class.blink::HeapListHashSetNode.2175"* }
%"class.blink::HeapListHashSetNode.2175" = type { %"class.blink::Member.2491", %"class.blink::Member.2173", %"class.blink::Member.2173" }
%"class.blink::Member.2491" = type { %"class.blink::MemberBase.2492" }
%"class.blink::MemberBase.2492" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2177" = type { %"class.WTF::ListHashSet.base.2187", [7 x i8] }
%"class.WTF::ListHashSet.base.2187" = type <{ %"class.WTF::HashTable.2182", %"class.blink::Member.2184", %"class.blink::Member.2184", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2182" = type <{ %"class.blink::Member.2184"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::HeapListHashSetNode.2186"* }
%"class.blink::HeapListHashSetNode.2186" = type { %"class.blink::Member.2487", %"class.blink::Member.2184", %"class.blink::Member.2184" }
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2188" = type { %"class.WTF::ListHashSet.base.2198", [7 x i8] }
%"class.WTF::ListHashSet.base.2198" = type <{ %"class.WTF::HashTable.2193", %"class.blink::Member.2195", %"class.blink::Member.2195", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2193" = type <{ %"class.blink::Member.2195"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2195" = type { %"class.blink::MemberBase.2196" }
%"class.blink::MemberBase.2196" = type { %"class.blink::HeapListHashSetNode.2197"* }
%"class.blink::HeapListHashSetNode.2197" = type { %"class.blink::Member.2483", %"class.blink::Member.2195", %"class.blink::Member.2195" }
%"class.blink::Member.2483" = type { %"class.blink::MemberBase.2484" }
%"class.blink::MemberBase.2484" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2199" = type { %"class.WTF::ListHashSet.base.2209", [7 x i8] }
%"class.WTF::ListHashSet.base.2209" = type <{ %"class.WTF::HashTable.2204", %"class.blink::Member.2206", %"class.blink::Member.2206", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2204" = type <{ %"class.blink::Member.2206"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::HeapListHashSetNode.2208"* }
%"class.blink::HeapListHashSetNode.2208" = type { %"class.blink::Member.2479", %"class.blink::Member.2206", %"class.blink::Member.2206" }
%"class.blink::Member.2479" = type { %"class.blink::MemberBase.2480" }
%"class.blink::MemberBase.2480" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2210" = type { %"class.WTF::ListHashSet.base.2220", [7 x i8] }
%"class.WTF::ListHashSet.base.2220" = type <{ %"class.WTF::HashTable.2215", %"class.blink::Member.2217", %"class.blink::Member.2217", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2215" = type <{ %"class.blink::Member.2217"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::HeapListHashSetNode.2219"* }
%"class.blink::HeapListHashSetNode.2219" = type { %"class.blink::Member.2475", %"class.blink::Member.2217", %"class.blink::Member.2217" }
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2221" = type { %"class.WTF::ListHashSet.base.2231", [7 x i8] }
%"class.WTF::ListHashSet.base.2231" = type <{ %"class.WTF::HashTable.2226", %"class.blink::Member.2228", %"class.blink::Member.2228", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2226" = type <{ %"class.blink::Member.2228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::HeapListHashSetNode.2230"* }
%"class.blink::HeapListHashSetNode.2230" = type { %"class.blink::Member.2471", %"class.blink::Member.2228", %"class.blink::Member.2228" }
%"class.blink::Member.2471" = type { %"class.blink::MemberBase.2472" }
%"class.blink::MemberBase.2472" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2232" = type { %"class.WTF::ListHashSet.base.2242", [7 x i8] }
%"class.WTF::ListHashSet.base.2242" = type <{ %"class.WTF::HashTable.2237", %"class.blink::Member.2239", %"class.blink::Member.2239", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2237" = type <{ %"class.blink::Member.2239"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::HeapListHashSetNode.2241"* }
%"class.blink::HeapListHashSetNode.2241" = type { %"class.blink::Member.2467", %"class.blink::Member.2239", %"class.blink::Member.2239" }
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2243" = type { %"class.WTF::ListHashSet.base.2253", [7 x i8] }
%"class.WTF::ListHashSet.base.2253" = type <{ %"class.WTF::HashTable.2248", %"class.blink::Member.2250", %"class.blink::Member.2250", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2248" = type <{ %"class.blink::Member.2250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::HeapListHashSetNode.2252"* }
%"class.blink::HeapListHashSetNode.2252" = type { %"class.blink::Member.2360", %"class.blink::Member.2250", %"class.blink::Member.2250" }
%"class.blink::HeapListHashSet.2254" = type { %"class.WTF::ListHashSet.base.2264", [7 x i8] }
%"class.WTF::ListHashSet.base.2264" = type <{ %"class.WTF::HashTable.2259", %"class.blink::Member.2261", %"class.blink::Member.2261", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2259" = type <{ %"class.blink::Member.2261"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::HeapListHashSetNode.2263"* }
%"class.blink::HeapListHashSetNode.2263" = type { %"class.blink::Member.2461", %"class.blink::Member.2261", %"class.blink::Member.2261" }
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2265" = type { %"class.WTF::ListHashSet.base.2275", [7 x i8] }
%"class.WTF::ListHashSet.base.2275" = type <{ %"class.WTF::HashTable.2270", %"class.blink::Member.2272", %"class.blink::Member.2272", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2270" = type <{ %"class.blink::Member.2272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::HeapListHashSetNode.2274"* }
%"class.blink::HeapListHashSetNode.2274" = type { %"class.blink::Member.2457", %"class.blink::Member.2272", %"class.blink::Member.2272" }
%"class.blink::Member.2457" = type { %"class.blink::MemberBase.2458" }
%"class.blink::MemberBase.2458" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2276" = type { %"class.WTF::ListHashSet.base.2286", [7 x i8] }
%"class.WTF::ListHashSet.base.2286" = type <{ %"class.WTF::HashTable.2281", %"class.blink::Member.2283", %"class.blink::Member.2283", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2281" = type <{ %"class.blink::Member.2283"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2283" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::HeapListHashSetNode.2285"* }
%"class.blink::HeapListHashSetNode.2285" = type { %"class.blink::Member.2453", %"class.blink::Member.2283", %"class.blink::Member.2283" }
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2287" = type { %"class.WTF::ListHashSet.base.2297", [7 x i8] }
%"class.WTF::ListHashSet.base.2297" = type <{ %"class.WTF::HashTable.2292", %"class.blink::Member.2294", %"class.blink::Member.2294", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2292" = type <{ %"class.blink::Member.2294"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::HeapListHashSetNode.2296"* }
%"class.blink::HeapListHashSetNode.2296" = type { %"class.blink::Member.2449", %"class.blink::Member.2294", %"class.blink::Member.2294" }
%"class.blink::Member.2449" = type { %"class.blink::MemberBase.2450" }
%"class.blink::MemberBase.2450" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2298" = type { %"class.WTF::ListHashSet.base.2308", [7 x i8] }
%"class.WTF::ListHashSet.base.2308" = type <{ %"class.WTF::HashTable.2303", %"class.blink::Member.2305", %"class.blink::Member.2305", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2303" = type <{ %"class.blink::Member.2305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2305" = type { %"class.blink::MemberBase.2306" }
%"class.blink::MemberBase.2306" = type { %"class.blink::HeapListHashSetNode.2307"* }
%"class.blink::HeapListHashSetNode.2307" = type { %"class.blink::Member.2445", %"class.blink::Member.2305", %"class.blink::Member.2305" }
%"class.blink::Member.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2309" = type { %"class.WTF::ListHashSet.base.2319", [7 x i8] }
%"class.WTF::ListHashSet.base.2319" = type <{ %"class.WTF::HashTable.2314", %"class.blink::Member.2316", %"class.blink::Member.2316", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2314" = type <{ %"class.blink::Member.2316"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::HeapListHashSetNode.2318"* }
%"class.blink::HeapListHashSetNode.2318" = type { %"class.blink::Member.2441", %"class.blink::Member.2316", %"class.blink::Member.2316" }
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2320" = type { %"class.WTF::ListHashSet.base.2330", [7 x i8] }
%"class.WTF::ListHashSet.base.2330" = type <{ %"class.WTF::HashTable.2325", %"class.blink::Member.2327", %"class.blink::Member.2327", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2325" = type <{ %"class.blink::Member.2327"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::HeapListHashSetNode.2329"* }
%"class.blink::HeapListHashSetNode.2329" = type { %"class.blink::Member.2437", %"class.blink::Member.2327", %"class.blink::Member.2327" }
%"class.blink::Member.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2331" = type { %"class.WTF::ListHashSet.base.2341", [7 x i8] }
%"class.WTF::ListHashSet.base.2341" = type <{ %"class.WTF::HashTable.2336", %"class.blink::Member.2338", %"class.blink::Member.2338", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2336" = type <{ %"class.blink::Member.2338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::HeapListHashSetNode.2340"* }
%"class.blink::HeapListHashSetNode.2340" = type { %"class.blink::Member.2362", %"class.blink::Member.2338", %"class.blink::Member.2338" }
%"class.blink::HeapListHashSet.2342" = type { %"class.WTF::ListHashSet.base.2352", [7 x i8] }
%"class.WTF::ListHashSet.base.2352" = type <{ %"class.WTF::HashTable.2347", %"class.blink::Member.2349", %"class.blink::Member.2349", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2347" = type <{ %"class.blink::Member.2349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2349" = type { %"class.blink::MemberBase.2350" }
%"class.blink::MemberBase.2350" = type { %"class.blink::HeapListHashSetNode.2351"* }
%"class.blink::HeapListHashSetNode.2351" = type { %"class.blink::Member.2354", %"class.blink::Member.2349", %"class.blink::Member.2349" }
%class.scoped_refptr.2353 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2368" = type { %"class.blink::MemberBase.2369" }
%"class.blink::MemberBase.2369" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2370" = type { %"class.blink::Member.2371" }
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2805" }
%"class.mojo::Remote.2805" = type { %"class.mojo::internal::InterfacePtrState.2806" }
%"class.mojo::internal::InterfacePtrState.2806" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2807" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.778, %"class.std::__1::unique_ptr.565", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.575, i32 }>
%class.scoped_refptr.778 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.575, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.837", %"class.absl::optional.842", %"class.absl::optional.795", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.862", i8, [7 x i8], %class.scoped_refptr.575, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.596" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.584", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.575, %"class.std::__1::unique_ptr.779", %"class.absl::optional.789", %"struct.std::__1::atomic.375", i8, i8, i8, i8, i32, i32, %"class.absl::optional.795", %"class.std::__1::unique_ptr.800", i8, i64, %class.scoped_refptr.834, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.836" }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.575, i8, %"class.mojo::ScopedHandleBase.782", %class.scoped_refptr.783, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.784", i8*, %"class.base::WeakPtrFactory.785" }
%"class.mojo::ScopedHandleBase.782" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.783 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.784" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.785" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.789" = type { %"class.absl::optional_internal::optional_data.790" }
%"class.absl::optional_internal::optional_data.790" = type { %"class.absl::optional_internal::optional_data_base.791" }
%"class.absl::optional_internal::optional_data_base.791" = type { %"class.absl::optional_internal::optional_data_dtor_base.792" }
%"class.absl::optional_internal::optional_data_dtor_base.792" = type { i8, %union.anon.793 }
%union.anon.793 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.794", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.794" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.800" = type { %"class.std::__1::__compressed_pair.801" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.803", i8, i64, %class.scoped_refptr.804, %class.scoped_refptr.829 }
%"class.base::RepeatingCallback.803" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.804 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.805", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.807", %"class.std::__1::map.818", i8, [7 x i8] }>
%"class.base::RefCounted.805" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.806 }
%class.scoped_refptr.806 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.807" = type { %"class.std::__1::__tree.808" }
%"class.std::__1::__tree.808" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.809", %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::map.818" = type { %"class.std::__1::__tree.819" }
%"class.std::__1::__tree.819" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.820", %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%class.scoped_refptr.829 = type { %"class.base::RefCountedData.830"* }
%"class.base::RefCountedData.830" = type opaque
%class.scoped_refptr.834 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.836" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.837" = type { %"class.absl::optional_internal::optional_data.838" }
%"class.absl::optional_internal::optional_data.838" = type { %"class.absl::optional_internal::optional_data_base.839" }
%"class.absl::optional_internal::optional_data_base.839" = type { %"class.absl::optional_internal::optional_data_dtor_base.840" }
%"class.absl::optional_internal::optional_data_dtor_base.840" = type { i8, %union.anon.841 }
%union.anon.841 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.842" = type { %"class.absl::optional_internal::optional_data.843" }
%"class.absl::optional_internal::optional_data.843" = type { %"class.absl::optional_internal::optional_data_base.844" }
%"class.absl::optional_internal::optional_data_base.844" = type { %"class.absl::optional_internal::optional_data_dtor_base.845" }
%"class.absl::optional_internal::optional_data_dtor_base.845" = type { i8, [7 x i8], %union.anon.846 }
%union.anon.846 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.795" = type { %"class.absl::optional_internal::optional_data.796" }
%"class.absl::optional_internal::optional_data.796" = type { %"class.absl::optional_internal::optional_data_base.797" }
%"class.absl::optional_internal::optional_data_base.797" = type { %"class.absl::optional_internal::optional_data_dtor_base.798" }
%"class.absl::optional_internal::optional_data_dtor_base.798" = type { i8, %union.anon.799 }
%union.anon.799 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.847 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.847 = type { %"class.std::__1::map.850" }
%"class.std::__1::map.850" = type { %"class.std::__1::__tree.851" }
%"class.std::__1::__tree.851" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.852", %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.861"*, i64 }
%"class.std::__1::unique_ptr.861" = type opaque
%"class.std::__1::map.862" = type { %"class.std::__1::__tree.863" }
%"class.std::__1::__tree.863" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::unique_ptr.2807" = type { %"class.std::__1::__compressed_pair.2808" }
%"class.std::__1::__compressed_pair.2808" = type { %"struct.std::__1::__compressed_pair_elem.2809" }
%"struct.std::__1::__compressed_pair_elem.2809" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2373" = type { %"class.std::__1::__compressed_pair.2374" }
%"class.std::__1::__compressed_pair.2374" = type { %"struct.std::__1::__compressed_pair_elem.2375" }
%"struct.std::__1::__compressed_pair_elem.2375" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.base::RepeatingCallback.2379" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2380" = type { %"class.std::__1::__compressed_pair.2381" }
%"class.std::__1::__compressed_pair.2381" = type { %"struct.std::__1::__compressed_pair_elem.2382" }
%"struct.std::__1::__compressed_pair_elem.2382" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2386" = type { %"class.std::__1::__compressed_pair.2387" }
%"class.std::__1::__compressed_pair.2387" = type { %"struct.std::__1::__compressed_pair_elem.2388" }
%"struct.std::__1::__compressed_pair_elem.2388" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2392" }
%"class.blink::Member.2392" = type { %"class.blink::MemberBase.2393" }
%"class.blink::MemberBase.2393" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2815" }
%"class.mojo::AssociatedRemote.2815" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2816" }
%"class.mojo::internal::AssociatedInterfacePtrState.2816" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2817" }
%"class.std::__1::unique_ptr.2817" = type { %"class.std::__1::__compressed_pair.2818" }
%"class.std::__1::__compressed_pair.2818" = type { %"struct.std::__1::__compressed_pair_elem.2819" }
%"struct.std::__1::__compressed_pair_elem.2819" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2394" = type { %"class.blink::Member.2395" }
%"class.blink::Member.2395" = type { %"class.blink::MemberBase.2396" }
%"class.blink::MemberBase.2396" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2825" }
%"class.mojo::AssociatedRemote.2825" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2826" }
%"class.mojo::internal::AssociatedInterfacePtrState.2826" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2827" }
%"class.std::__1::unique_ptr.2827" = type { %"class.std::__1::__compressed_pair.2828" }
%"class.std::__1::__compressed_pair.2828" = type { %"struct.std::__1::__compressed_pair_elem.2829" }
%"struct.std::__1::__compressed_pair_elem.2829" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2397" }
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2835", %"class.blink::Member.1018", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2835" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2836" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.565" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2836" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2399" = type { %"class.blink::Member.2400" }
%"class.blink::Member.2400" = type { %"class.blink::MemberBase.2401" }
%"class.blink::MemberBase.2401" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2839", %"class.blink::Member.1018", %"class.mojo::AssociatedReceiver.2840" }
%"class.blink::ThreadState::PrefinalizerRegistration.2839" = type { i8 }
%"class.mojo::AssociatedReceiver.2840" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2841" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2841" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2402" }
%"class.blink::Member.2402" = type { %"class.blink::MemberBase.2403" }
%"class.blink::MemberBase.2403" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2844", %"class.blink::Member.1018", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2844" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.778, %"class.std::__1::unique_ptr.565", %"class.base::WeakPtrFactory.2845" }
%"class.base::WeakPtrFactory.2845" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2404" = type { %"class.blink::Member.2405" }
%"class.blink::Member.2405" = type { %"class.blink::MemberBase.2406" }
%"class.blink::MemberBase.2406" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2848", %"class.blink::Member.1018", %"class.mojo::AssociatedReceiver.2849" }
%"class.blink::ThreadState::PrefinalizerRegistration.2848" = type { i8 }
%"class.mojo::AssociatedReceiver.2849" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2850" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2850" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2407" = type { %"class.blink::MemberBase.2408" }
%"class.blink::MemberBase.2408" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2409" = type { %"class.blink::MemberBase.2410" }
%"class.blink::MemberBase.2410" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2411" = type { %"class.blink::MemberBase.2412" }
%"class.blink::MemberBase.2412" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2413" = type { %"class.blink::MemberBase.2414" }
%"class.blink::MemberBase.2414" = type { %"class.blink::HeapHashMap.2415"* }
%"class.blink::HeapHashMap.2415" = type opaque
%"class.mojo::StructPtr.2416" = type { %"class.std::__1::unique_ptr.2417" }
%"class.std::__1::unique_ptr.2417" = type { %"class.std::__1::__compressed_pair.2418" }
%"class.std::__1::__compressed_pair.2418" = type { %"struct.std::__1::__compressed_pair_elem.2419" }
%"struct.std::__1::__compressed_pair_elem.2419" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2420", %"class.mojo::InlinedStructPtr.1973" }
%"class.mojo::InlinedStructPtr.2420" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1973" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2424" = type { %"class.blink::MemberBase.2425" }
%"class.blink::MemberBase.2425" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2426" = type { %"class.absl::optional_internal::optional_data.2427" }
%"class.absl::optional_internal::optional_data.2427" = type { %"class.absl::optional_internal::optional_data_base.2428" }
%"class.absl::optional_internal::optional_data_base.2428" = type { %"class.absl::optional_internal::optional_data_dtor_base.2429" }
%"class.absl::optional_internal::optional_data_dtor_base.2429" = type { i8, %union.anon.2430 }
%union.anon.2430 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.766", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2067" }
%"class.base::internal::flat_tree.2067" = type { %"class.std::__1::vector.2068" }
%"class.std::__1::vector.2068" = type { %"class.std::__1::__vector_base.2069" }
%"class.std::__1::__vector_base.2069" = type { %"struct.std::__1::pair.2070"*, %"struct.std::__1::pair.2070"*, %"class.std::__1::__compressed_pair.2071" }
%"struct.std::__1::pair.2070" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { %"struct.std::__1::pair.2070"* }
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2078" = type { %"class.absl::optional_internal::optional_data.2079" }
%"class.absl::optional_internal::optional_data.2079" = type { %"class.absl::optional_internal::optional_data_base.2080" }
%"class.absl::optional_internal::optional_data_base.2080" = type { %"class.absl::optional_internal::optional_data_dtor_base.2081" }
%"class.absl::optional_internal::optional_data_dtor_base.2081" = type { i8, %union.anon.2082 }
%union.anon.2082 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2083" }
%"class.blink::HeapHashSet.2083" = type { %"class.WTF::HashSet.2086" }
%"class.WTF::HashSet.2086" = type { %"class.WTF::HashTable.2087" }
%"class.WTF::HashTable.2087" = type <{ %"class.blink::WeakMember.2089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2089" = type opaque
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.776" }
%"class.WTF::VectorBufferBase.776" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.871" }
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.500", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.509", %"class.blink::Member.511", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.520", %"class.blink::Member.647", %"class.blink::Member.649", i8 }>
%"class.blink::Supplementable.879" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.880" }
%"class.blink::HeapHashMap.880" = type { %"class.WTF::HashMap.883" }
%"class.WTF::HashMap.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"struct.WTF::KeyValuePair.886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.886" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.887" = type { i8 }
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.910 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.912", i64, %"class.WTF::Vector.916", %"class.WTF::Vector.921", %"class.WTF::Vector.927", %"class.WTF::Vector.945", %class.scoped_refptr.462, %"class.WTF::HashMap.951", %"class.WTF::Vector.956", %"class.WTF::Vector.916", %"class.WTF::Vector.962", %"class.WTF::HashMap.968", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.911" }
%"class.base::RefCountedThreadSafe.911" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { i8* }
%"class.WTF::Vector.921" = type { %"class.WTF::VectorBuffer.922" }
%"class.WTF::VectorBuffer.922" = type { %"class.WTF::VectorBufferBase.923", [8 x i8] }
%"class.WTF::VectorBufferBase.923" = type { %class.scoped_refptr.924*, i32, i32 }
%class.scoped_refptr.924 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.937" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.930 }
%class.scoped_refptr.930 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.948", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.948" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.951" = type { %"class.WTF::HashTable.952" }
%"class.WTF::HashTable.952" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type opaque
%"class.WTF::Vector.956" = type { %"class.WTF::VectorBuffer.957" }
%"class.WTF::VectorBuffer.957" = type { %"class.WTF::VectorBufferBase.958" }
%"class.WTF::VectorBufferBase.958" = type { %"class.mojo::ScopedHandleBase.959"*, i32, i32 }
%"class.mojo::ScopedHandleBase.959" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918", [16 x i8] }
%"class.WTF::VectorBufferBase.918" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.962" = type { %"class.WTF::VectorBuffer.963" }
%"class.WTF::VectorBuffer.963" = type { %"class.WTF::VectorBufferBase.964" }
%"class.WTF::VectorBufferBase.964" = type { %"class.mojo::PendingRemote.965"*, i32, i32 }
%"class.mojo::PendingRemote.965" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.968" = type { %"class.WTF::HashTable.969" }
%"class.WTF::HashTable.969" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type { i8**, %"class.std::__1::unique_ptr.2784" }
%"class.std::__1::unique_ptr.2784" = type { %"class.std::__1::__compressed_pair.2785" }
%"class.std::__1::__compressed_pair.2785" = type { %"struct.std::__1::__compressed_pair_elem.2786" }
%"struct.std::__1::__compressed_pair_elem.2786" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.973" = type { %"class.WTF::HashSet.976" }
%"class.WTF::HashSet.976" = type { %"class.WTF::HashTable.977" }
%"class.WTF::HashTable.977" = type <{ %"class.blink::WeakMember.979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.979" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.987", %"class.blink::Member.987", %"class.blink::Member.989", %"class.blink::Member.991", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.982" }
%"class.absl::optional.982" = type { %"class.absl::optional_internal::optional_data.983" }
%"class.absl::optional_internal::optional_data.983" = type { %"class.absl::optional_internal::optional_data_base.984" }
%"class.absl::optional_internal::optional_data_base.984" = type { %"class.absl::optional_internal::optional_data_dtor_base.985" }
%"class.absl::optional_internal::optional_data_dtor_base.985" = type { i8, %union.anon.986 }
%union.anon.986 = type { i64 }
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::Event"* }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.993" = type { %"class.WTF::HashMap.996" }
%"class.WTF::HashMap.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ %"struct.WTF::KeyValuePair.999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.999" = type opaque
%"class.std::__1::unique_ptr.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1018", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1624", %"class.blink::Member.1626", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1020", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1617", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1617" = type { %"class.WTF::HashMap.1620" }
%"class.WTF::HashMap.1620" = type { %"class.WTF::HashTable.1621" }
%"class.WTF::HashTable.1621" = type <{ %"struct.WTF::KeyValuePair.1623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1623" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.743", %"class.blink::Member.2049", %"class.blink::Member.2051" }
%"class.blink::Member.2049" = type { %"class.blink::MemberBase.2050" }
%"class.blink::MemberBase.2050" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2051" = type { %"class.blink::MemberBase.2052" }
%"class.blink::MemberBase.2052" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.743", %"class.blink::HeapMojoRemote.2044" }
%"class.blink::HeapMojoRemote.2044" = type { %"class.blink::Member.2045" }
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::HeapHashMap.1634"* }
%"class.blink::HeapHashMap.1634" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.777" }
%"class.base::StrongAlias.777" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1640" = type { %"class.WTF::HashTable.1641" }
%"class.WTF::HashTable.1641" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1644" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1647" }
%"class.WTF::VectorBuffer.1647" = type { %"class.WTF::VectorBufferBase.1648" }
%"class.WTF::VectorBufferBase.1648" = type { i64*, i32, i32 }
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1903", %"class.blink::Member.1904", %"class.blink::Member.1906", %"class.blink::Member.1908", %class.scoped_refptr.1681, %class.scoped_refptr.1681, %"class.blink::Member.1910", %"class.blink::Member.1912", %"class.blink::Member.1918", %"class.blink::Member.1922", %"class.blink::Member.1974", %"class.blink::HeapHashMap.1976", %"class.blink::HeapHashSet.1983", %"class.blink::HeapHashSet.1983", %"class.blink::HeapHashMap.1990", %"class.blink::HeapVector.1997", %"class.blink::Member.2004", %"class.blink::HeapTaskRunnerTimer.2006", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2008", %"class.WTF::Vector.2015", %"class.blink::HeapHashSet.2021", %"class.blink::HeapHashSet.2021", %"class.std::__1::unique_ptr.2027", %"class.base::WeakPtr.1967", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.2039", i8, i8, %"class.base::WeakPtrFactory.2041" }
%"class.blink::ThreadState::PrefinalizerRegistration.1903" = type { i8 }
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1906" = type { %"class.blink::MemberBase.1907" }
%"class.blink::MemberBase.1907" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1910" = type { %"class.blink::MemberBase.1911" }
%"class.blink::MemberBase.1911" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1916" }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1926", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1928", %"class.WTF::HashSet.1933", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1937", %"class.std::__1::map.1944", %"class.std::__1::map.1955", %"class.std::__1::unique_ptr.1964", %"class.blink::Member.1912", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1971", %"class.mojo::InlinedStructPtr.1973", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1928" = type { %"class.WTF::HashTable.1929" }
%"class.WTF::HashTable.1929" = type <{ %"struct.WTF::KeyValuePair.1932"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1932" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1933" = type { %"class.WTF::HashTable.1934" }
%"class.WTF::HashTable.1934" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1937" = type { %"class.WTF::HashMap.1940" }
%"class.WTF::HashMap.1940" = type { %"class.WTF::HashTable.1941" }
%"class.WTF::HashTable.1941" = type <{ %"struct.WTF::KeyValuePair.1943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1943" = type opaque
%"class.std::__1::map.1944" = type { %"class.std::__1::__tree.1945" }
%"class.std::__1::__tree.1945" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1946", %"class.std::__1::__compressed_pair.1950" }
%"class.std::__1::__compressed_pair.1946" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.1950" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::map.1955" = type { %"class.std::__1::__tree.1956" }
%"class.std::__1::__tree.1956" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1957", %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1957" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"class.std::__1::unique_ptr.1964" = type { %"class.std::__1::__compressed_pair.1965" }
%"class.std::__1::__compressed_pair.1965" = type { %"struct.std::__1::__compressed_pair_elem.1966" }
%"struct.std::__1::__compressed_pair_elem.1966" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1967", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1976" = type { %"class.WTF::HashMap.1979" }
%"class.WTF::HashMap.1979" = type { %"class.WTF::HashTable.1980" }
%"class.WTF::HashTable.1980" = type <{ %"struct.WTF::KeyValuePair.1982"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1982" = type opaque
%"class.blink::HeapHashSet.1983" = type { %"class.WTF::HashSet.1986" }
%"class.WTF::HashSet.1986" = type { %"class.WTF::HashTable.1987" }
%"class.WTF::HashTable.1987" = type <{ %"class.blink::WeakMember.1989"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1989" = type { %"class.blink::MemberBase.38" }
%"class.blink::HeapHashMap.1990" = type { %"class.WTF::HashMap.1993" }
%"class.WTF::HashMap.1993" = type { %"class.WTF::HashTable.1994" }
%"class.WTF::HashTable.1994" = type <{ %"struct.WTF::KeyValuePair.1996"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1996" = type opaque
%"class.blink::HeapVector.1997" = type { %"class.WTF::Vector.2000" }
%"class.WTF::Vector.2000" = type { %"class.WTF::VectorBuffer.2001" }
%"class.WTF::VectorBuffer.2001" = type { %"class.WTF::VectorBufferBase.2002" }
%"class.WTF::VectorBufferBase.2002" = type { %"class.blink::Member.37"*, i32, i32 }
%"class.blink::Member.2004" = type { %"class.blink::MemberBase.2005" }
%"class.blink::MemberBase.2005" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.2006" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2007", { i64, i64 } }
%"class.blink::WeakMember.2007" = type { %"class.blink::MemberBase.1650" }
%"class.blink::HeapHashMap.2008" = type { %"class.WTF::HashMap.2011" }
%"class.WTF::HashMap.2011" = type { %"class.WTF::HashTable.2012" }
%"class.WTF::HashTable.2012" = type <{ %"struct.WTF::KeyValuePair.2014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2014" = type opaque
%"class.WTF::Vector.2015" = type { %"class.WTF::VectorBuffer.2016" }
%"class.WTF::VectorBuffer.2016" = type { %"class.WTF::VectorBufferBase.2017" }
%"class.WTF::VectorBufferBase.2017" = type { %class.scoped_refptr.2018*, i32, i32 }
%class.scoped_refptr.2018 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.2021" = type { %"class.WTF::HashSet.2024" }
%"class.WTF::HashSet.2024" = type { %"class.WTF::HashTable.2025" }
%"class.WTF::HashTable.2025" = type <{ %"class.blink::Member.384"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2027" = type { %"class.std::__1::__compressed_pair.2028" }
%"class.std::__1::__compressed_pair.2028" = type { %"struct.std::__1::__compressed_pair_elem.2029" }
%"struct.std::__1::__compressed_pair_elem.2029" = type { %"class.WTF::HashSet.2030"* }
%"class.base::WeakPtr.1967" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2037" }
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2039" = type { %"class.blink::MemberBase.2040" }
%"class.blink::MemberBase.2040" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2041" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.414", %"class.blink::HeapHashSet.1655" }
%"class.blink::HeapHashSet.1655" = type { %"class.WTF::HashSet.1658" }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::WeakMember.1661"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1661" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1666" = type { %"class.std::__1::__compressed_pair.1667" }
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678" }
%"class.WTF::VectorBufferBase.1678" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.181 }
%"class.blink::Member.1624" = type { %"class.blink::MemberBase.1625" }
%"class.blink::MemberBase.1625" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.414", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1684" }
%"class.blink::HeapHashMap.1684" = type { %"class.WTF::HashMap.1687" }
%"class.WTF::HashMap.1687" = type { %"class.WTF::HashTable.1688" }
%"class.WTF::HashTable.1688" = type <{ %"struct.WTF::KeyValuePair.1690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1690" = type opaque
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1693" = type { %"class.WTF::HashSet.1696" }
%"class.WTF::HashSet.1696" = type { %"class.WTF::HashTable.1697" }
%"class.WTF::HashTable.1697" = type <{ %"class.blink::WeakMember.1699"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1699" = type opaque
%"class.blink::HeapHashSet.1700" = type { %"class.WTF::HashSet.1703" }
%"class.WTF::HashSet.1703" = type { %"class.WTF::HashTable.1704" }
%"class.WTF::HashTable.1704" = type <{ %"class.blink::WeakMember.1706"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1706" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1711" = type { %"class.blink::MemberBase.1712" }
%"class.blink::MemberBase.1712" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.687" }
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1717" = type { %"class.WTF::HashMap.1720" }
%"class.WTF::HashMap.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %"struct.WTF::KeyValuePair.1723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1723" = type opaque
%"class.WTF::Vector.1724" = type { %"class.WTF::VectorBuffer.1725" }
%"class.WTF::VectorBuffer.1725" = type { %"class.WTF::VectorBufferBase.1726" }
%"class.WTF::VectorBufferBase.1726" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1735" = type { %"class.WTF::Vector.1738" }
%"class.WTF::Vector.1738" = type { %"class.WTF::VectorBuffer.1739" }
%"class.WTF::VectorBuffer.1739" = type { %"class.WTF::VectorBufferBase.1740" }
%"class.WTF::VectorBufferBase.1740" = type { %"class.blink::Member.1741"*, i32, i32 }
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1750" = type { %"class.WTF::HashSet.1753" }
%"class.WTF::HashSet.1753" = type { %"class.WTF::HashTable.1754" }
%"class.WTF::HashTable.1754" = type <{ %"class.blink::WeakMember.1756"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1756" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1757", i32, [4 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.std::__1::pair.1760"*, i32, i32 }
%"struct.std::__1::pair.1760" = type opaque
%"class.blink::Member.1763" = type { %"class.blink::MemberBase.1764" }
%"class.blink::MemberBase.1764" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1765" = type { %"class.WTF::VectorBuffer.1766" }
%"class.WTF::VectorBuffer.1766" = type { %"class.WTF::VectorBufferBase.1767" }
%"class.WTF::VectorBufferBase.1767" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1770" = type { %"class.std::__1::__compressed_pair.1771" }
%"class.std::__1::__compressed_pair.1771" = type { %"struct.std::__1::__compressed_pair_elem.1772" }
%"struct.std::__1::__compressed_pair_elem.1772" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1776" = type { %"class.WTF::Vector.1779" }
%"class.WTF::Vector.1779" = type { %"class.WTF::VectorBuffer.1780" }
%"class.WTF::VectorBuffer.1780" = type { %"class.WTF::VectorBufferBase.1781" }
%"class.WTF::VectorBufferBase.1781" = type { %"class.blink::Member.1782"*, i32, i32 }
%"class.blink::Member.1782" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.414" }
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1786" = type { %"class.blink::MemberBase.1787" }
%"class.blink::MemberBase.1787" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1788" = type { %"class.blink::MemberBase.1789" }
%"class.blink::MemberBase.1789" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1794" = type { %"class.WTF::HashTable.1795" }
%"class.WTF::HashTable.1795" = type <{ %"struct.WTF::KeyValuePair.1798"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1798" = type opaque
%"class.blink::Member.1799" = type { %"class.blink::MemberBase.1800" }
%"class.blink::MemberBase.1800" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1801" = type { %"class.blink::MemberBase.1802" }
%"class.blink::MemberBase.1802" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1803" = type { %"class.blink::MemberBase.1804" }
%"class.blink::MemberBase.1804" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1683", { i64, i64 } }
%"class.blink::WeakMember.1683" = type { %"class.blink::MemberBase.415" }
%"class.blink::HeapHashSet.1807" = type { %"class.WTF::HashSet.1810" }
%"class.WTF::HashSet.1810" = type { %"class.WTF::HashTable.1811" }
%"class.WTF::HashTable.1811" = type <{ %"class.blink::Member.1813"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1813" = type opaque
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1816" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1818" = type { %"class.blink::MemberBase.1819" }
%"class.blink::MemberBase.1819" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1824" = type { %"class.std::__1::__compressed_pair.1825" }
%"class.std::__1::__compressed_pair.1825" = type { %"struct.std::__1::__compressed_pair_elem.1826" }
%"struct.std::__1::__compressed_pair_elem.1826" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.714", %"class.WTF::HashSet.714", %"class.WTF::HashSet.714", %"class.WTF::HashSet.714", %"class.WTF::HashSet.714", %"class.WTF::HashSet.714", i32, [4 x i8], %"class.WTF::HashMap.1833", %"class.WTF::HashMap.1833", %"class.WTF::HashMap.1833", %"class.WTF::HashMap.1833", %"class.WTF::HashMap.1833", %"class.WTF::HashMap.1833", %"class.WTF::HashMap.1833", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1833" = type { %"class.WTF::HashTable.1834" }
%"class.WTF::HashTable.1834" = type <{ %"struct.WTF::KeyValuePair.1837"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1837" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1841" = type { %"class.blink::MemberBase.1842" }
%"class.blink::MemberBase.1842" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1843" = type { %"class.blink::MemberBase.1844" }
%"class.blink::MemberBase.1844" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1635" = type { %"class.WTF::VectorBuffer.1636" }
%"class.WTF::VectorBuffer.1636" = type { %"class.WTF::VectorBufferBase.1637" }
%"class.WTF::VectorBufferBase.1637" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1849" = type { %"class.WTF::HashMap.1852" }
%"class.WTF::HashMap.1852" = type { %"class.WTF::HashTable.1853" }
%"class.WTF::HashTable.1853" = type <{ %"struct.WTF::KeyValuePair.1855"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1855" = type opaque
%"class.blink::Member.1856" = type { %"class.blink::MemberBase.1857" }
%"class.blink::MemberBase.1857" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1864" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1868" = type { %"class.WTF::HashMap.1871" }
%"class.WTF::HashMap.1871" = type { %"class.WTF::HashTable.1872" }
%"class.WTF::HashTable.1872" = type <{ %"struct.WTF::KeyValuePair.1874"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1874" = type opaque
%"class.blink::HeapObserverSet.1875" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1876" }
%"class.blink::HeapHashSet.1876" = type { %"class.WTF::HashSet.1879" }
%"class.WTF::HashSet.1879" = type { %"class.WTF::HashTable.1880" }
%"class.WTF::HashTable.1880" = type <{ %"class.blink::WeakMember.1882"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1882" = type opaque
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1885" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.414", %"class.blink::HeapHashSet.1892", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1899", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1892" = type { %"class.WTF::HashSet.1895" }
%"class.WTF::HashSet.1895" = type { %"class.WTF::HashTable.1896" }
%"class.WTF::HashTable.1896" = type <{ %"class.blink::Member.1898"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1898" = type opaque
%"class.blink::HeapTaskRunnerTimer.1899" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1900", { i64, i64 } }
%"class.blink::WeakMember.1900" = type { %"class.blink::MemberBase.1886" }
%"class.blink::WeakMember.1887" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1711", %"class.blink::Member.2734", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2734" = type { %"class.blink::MemberBase.2735" }
%"class.blink::MemberBase.2735" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2912" }
%"class.WTF::Vector.2912" = type { %"class.WTF::VectorBuffer.2913" }
%"class.WTF::VectorBuffer.2913" = type { %"class.WTF::VectorBufferBase.2914", [64 x i8] }
%"class.WTF::VectorBufferBase.2914" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2918", %"class.blink::Member.2920", %"class.blink::Member.2922", %"class.blink::Member.2941", %"class.blink::Member.2943" }
%"class.blink::Member.2918" = type { %"class.blink::MemberBase.2919" }
%"class.blink::MemberBase.2919" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1022 }
%"class.blink::Member.2920" = type { %"class.blink::MemberBase.2921" }
%"class.blink::MemberBase.2921" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2922" = type { %"class.blink::MemberBase.2923" }
%"class.blink::MemberBase.2923" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2926", %"class.blink::HeapHashSet.2935" }
%"class.blink::HeapVector.2926" = type { %"class.WTF::Vector.2929" }
%"class.WTF::Vector.2929" = type { %"class.WTF::VectorBuffer.2930" }
%"class.WTF::VectorBuffer.2930" = type { %"class.WTF::VectorBufferBase.2931" }
%"class.WTF::VectorBufferBase.2931" = type { %"class.blink::Member.2932"*, i32, i32 }
%"class.blink::Member.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2935" = type { %"class.WTF::HashSet.2938" }
%"class.WTF::HashSet.2938" = type { %"class.WTF::HashTable.2939" }
%"class.WTF::HashTable.2939" = type <{ %"class.blink::Member.2932"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2941" = type { %"class.blink::MemberBase.2942" }
%"class.blink::MemberBase.2942" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2943" = type { %"class.blink::MemberBase.2944" }
%"class.blink::MemberBase.2944" = type { %"class.blink::HeapHashSet.2945"* }
%"class.blink::HeapHashSet.2945" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::WeakPersistent.2738" = type { %"class.blink::PersistentBase.2739" }
%"class.blink::PersistentBase.2739" = type { %"class.blink::SVGUseElement"*, %"class.blink::PersistentNodePtr.2740" }
%"class.blink::PersistentNodePtr.2740" = type { %"class.blink::PersistentNode"* }
%"class.blink::SVGSVGElement" = type <{ %"class.blink::SVGGraphicsElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8], %"class.blink::Member.418", %"class.blink::Member.418", %"class.blink::Member.418", %"class.blink::Member.418", %"class.blink::Member.2745", %"class.blink::Member.2747", %"class.blink::Member.2749", float, [4 x i8] }>
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2741", %"class.blink::Member.2743" }
%"class.blink::Member.2741" = type { %"class.blink::MemberBase.2742" }
%"class.blink::MemberBase.2742" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type opaque
%"class.blink::Member.2743" = type { %"class.blink::MemberBase.2744" }
%"class.blink::MemberBase.2744" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type opaque
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.2745" = type { %"class.blink::MemberBase.2746" }
%"class.blink::MemberBase.2746" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type opaque
%"class.blink::Member.2747" = type { %"class.blink::MemberBase.2748" }
%"class.blink::MemberBase.2748" = type { %"class.blink::SVGPoint"* }
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::Member.2749" = type { %"class.blink::MemberBase.2750" }
%"class.blink::MemberBase.2750" = type { %"class.blink::SVGViewSpec"* }
%"class.blink::SVGViewSpec" = type opaque
%"class.WTF::HashTable.2950" = type <{ %"class.blink::QualifiedName"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutSVGTransformableContainer" = type { %"class.blink::LayoutSVGContainer.base", i8, %"class.blink::AffineTransform", %"class.blink::FloatSize" }
%"class.blink::LayoutSVGContainer.base" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::SVGContentContainer", i8, i8 }>
%"class.blink::LayoutSVGModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::SVGContentContainer" = type { %"class.blink::LayoutObjectChildList", %"class.blink::FloatRect", %"class.blink::FloatRect" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::SVGGeometryElement" = type { %"class.blink::SVGGraphicsElement", %"class.blink::Member.2751" }
%"class.blink::Member.2751" = type { %"class.blink::MemberBase.2752" }
%"class.blink::MemberBase.2752" = type { %"class.blink::SVGAnimatedNumber"* }
%"class.blink::SVGAnimatedNumber" = type opaque
%"class.blink::Persistent.2753" = type { %"class.blink::PersistentBase.2754" }
%"class.blink::PersistentBase.2754" = type { %"class.blink::SVGUseElement"*, %"class.blink::PersistentNodePtr.2755" }
%"class.blink::PersistentNodePtr.2755" = type { %"class.blink::PersistentNode"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.576", [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2760, %"class.blink::Member.2761", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2765" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2760 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2761" = type { %"class.blink::MemberBase.2762" }
%"class.blink::MemberBase.2762" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2763" }
%"class.blink::Persistent.2763" = type { %"class.blink::PersistentBase.2764" }
%"class.blink::PersistentBase.2764" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2765" = type { %"class.base::StrongAlias.2766" }
%"class.base::StrongAlias.2766" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2767", i8, [7 x i8] }>
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2769" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2769" = type { %"class.v8::TracedReference.2770" }
%"class.v8::TracedReference.2770" = type { %"class.v8::BasicTracedReference.2771" }
%"class.v8::BasicTracedReference.2771" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.2772", %"class.WTF::String"* }
%"class.blink::HeapVector.2772" = type { %"class.WTF::Vector.2775" }
%"class.WTF::Vector.2775" = type { %"class.WTF::VectorBuffer.2776" }
%"class.WTF::VectorBuffer.2776" = type { %"class.WTF::VectorBufferBase.2777" }
%"class.WTF::VectorBufferBase.2777" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.2779" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2897", %"class.blink::FreeList", %"class.WTF::Vector.2902" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2896" }
%"struct.std::__1::array.2896" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2897" = type { %"class.WTF::VectorBuffer.2898" }
%"class.WTF::VectorBuffer.2898" = type { %"class.WTF::VectorBufferBase.2899" }
%"class.WTF::VectorBufferBase.2899" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.2902" = type { %"class.WTF::VectorBuffer.2903" }
%"class.WTF::VectorBuffer.2903" = type { %"class.WTF::VectorBufferBase.2904" }
%"class.WTF::VectorBufferBase.2904" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink13SVGUseElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink18SVGGraphicsElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink18SVGGraphicsElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink18SVGGraphicsElement7IsValidEv = comdat any

$_ZN5blink13SVGUseElement27HaveLoadedRequiredResourcesEv = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZNK5blink14ResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink14ResourceClient19IsRawResourceClientEv = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_ = comdat any

$_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN5blink26SVGAttributeHashTranslator7GetHashERKNS_13QualifiedNameE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_26SVGResourceDocumentContentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink13SVGUseElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13SVGSVGElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_13SVGUseElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink13SVGUseElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink9svg_names7kUseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZTVN5blink13SVGUseElementE = hidden unnamed_addr constant { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] } { [172 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*)* @_ZNK5blink13SVGUseElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGUseElement"*)* @_ZNK5blink13SVGUseElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGUseElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink13SVGUseElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink13SVGUseElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Document"*)* @_ZN5blink13SVGUseElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2779"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink13SVGUseElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::SVGUseElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink13SVGUseElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink10SVGElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGGraphicsElement"*)* @_ZNK5blink18SVGGraphicsElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGUseElement"*)* @_ZNK5blink13SVGUseElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElement20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::SVGGraphicsElement"*, i32)* @_ZNK5blink18SVGGraphicsElement29LocalCoordinateSpaceTransformENS_10SVGElement8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGGraphicsElement"*)* @_ZNK5blink18SVGGraphicsElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGUseElement"*)* @_ZNK5blink13SVGUseElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGGraphicsElement"*)* @_ZNK5blink18SVGGraphicsElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink13SVGUseElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGGraphicsElement"*)* @_ZN5blink18SVGGraphicsElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGUseElement"*)* @_ZNK5blink13SVGUseElement22SelfHasRelativeLengthsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElement7GetBBoxEv to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Resource"*)* @_ZN5blink13SVGUseElement14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGUseElement"*)* @_ZNK5blink13SVGUseElement9DebugNameEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink13SVGUseElement5TraceEPNS_7VisitorE to i8*)], [5 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*)* @_ZThn200_NK5blink13SVGUseElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZThn200_N5blink13SVGUseElementD1Ev to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZThn200_N5blink13SVGUseElementD0Ev to i8*)], [10 x i8*] [i8* inttoptr (i64 -216 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*)* @_ZThn216_NK5blink13SVGUseElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZThn216_N5blink13SVGUseElementD1Ev to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*)* @_ZThn216_N5blink13SVGUseElementD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::SVGUseElement"*, %"class.blink::Resource"*)* @_ZThn216_N5blink13SVGUseElement14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGUseElement"*)* @_ZThn216_NK5blink13SVGUseElement9DebugNameEv to i8*)] }, align 8
@_ZN5blink9svg_names6kXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__const._ZN5blink13SVGUseElement21UpdateTargetReferenceEv.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.80, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.118 } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.113 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.129 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.177", i8, i8, [6 x i8], %class.scoped_refptr.181, %class.scoped_refptr.379, %class.scoped_refptr.381 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.80, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.118 } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.113 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.129 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.80, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.118 } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.113 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.129 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.47" { %"struct.std::__1::__compressed_pair_elem.48" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.49 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.47" { %"struct.std::__1::__compressed_pair_elem.48" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.49 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.73 } } } } { { { { i8, [7 x i8], %union.anon.73 } } } { { { i8, [7 x i8], %union.anon.73 } } { { i8, [7 x i8], %union.anon.73 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.73 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.74 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.74 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.74 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.75" { %"class.WTF::HashTable.76" <{ %"struct.WTF::KeyValuePair.79"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.79"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.80 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.104" { %"class.WTF::VectorBuffer.105" { %"class.WTF::VectorBufferBase.106" { %class.scoped_refptr.74* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.74*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.61" { %"class.WTF::VectorBuffer.62" { %"class.WTF::VectorBufferBase.63" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } } { { { { i8, [7 x i8], %union.anon.113 } } } { { { i8, [7 x i8], %union.anon.113 } } { { i8, [7 x i8], %union.anon.113 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.113 { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.118 } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.118 } } } } { { { { i8, [7 x i8], %union.anon.118 } } } { { { i8, [7 x i8], %union.anon.118 } } { { i8, [7 x i8], %union.anon.118 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.118 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } { { { { i8, [7 x i8], %union.anon.118 } } } { { { i8, [7 x i8], %union.anon.118 } } { { i8, [7 x i8], %union.anon.118 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.118 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.123 } } } } { { { { i8, [7 x i8], %union.anon.123 } } } { { { i8, [7 x i8], %union.anon.123 } } { { i8, [7 x i8], %union.anon.123 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.123 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } } { { { { i8, [7 x i8], %union.anon.113 } } } { { { i8, [7 x i8], %union.anon.113 } } { { i8, [7 x i8], %union.anon.113 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.113 { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.113 } } } } { { { { i8, [7 x i8], %union.anon.113 } } } { { { i8, [7 x i8], %union.anon.113 } } { { i8, [7 x i8], %union.anon.113 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.113 { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.123 } } } } { { { { i8, [7 x i8], %union.anon.123 } } } { { { i8, [7 x i8], %union.anon.123 } } { { i8, [7 x i8], %union.anon.123 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.123 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.129 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.2736 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.2737" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.177", i8, i8, [6 x i8], %class.scoped_refptr.181, %class.scoped_refptr.379, %class.scoped_refptr.381 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.177" { %"class.WTF::HashTable.178" <{ %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.181 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.379 { %"class.base::RefCountedData.380"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.380"*) }, %class.scoped_refptr.381 { %"class.base::RefCountedData.382"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.382"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@_ZN5blink16event_type_names5kLoadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [15 x i8] c"NotifyFinished\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"../../third_party/blink/renderer/core/svg/svg_use_element.cc\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"SVGUseElement\00", align 1
@_ZTVN5blink14ResourceClientE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink19style_change_reason10kAttributeE = external constant [0 x i8], align 1
@_ZN5blink9svg_names10kSymbolTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names7kSVGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.5 = private unnamed_addr constant [60 x i8] c"../../third_party/blink/renderer/core/svg/svg_use_element.h\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"ClosedShadowRoot()\00", align 1
@_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags = internal global i64 0, align 8
@_ZN5blink9svg_names5kATagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names10kCircleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kDescTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kEllipseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names5kGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names9kImageTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kLineTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names12kMetadataTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kPathTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names11kPolygonTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names12kPolylineTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kRectTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names10kSwitchTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names8kTextTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names12kTextPathTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink9svg_names9kTSpanTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::QualifiedName]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink13SVGUseElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink17SVGAnimatedLengthE = external unnamed_addr constant { [12 x i8*], [14 x i8*] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink13SVGUseElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::SVGUseElement"*, %"class.blink::Document"*), void (%"class.blink::SVGUseElement"*, %"class.blink::Document"*)* @_ZN5blink13SVGUseElementC2ERNS_8DocumentE
@_ZN5blink13SVGUseElementD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGUseElement"*), void (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElementC2ERNS_8DocumentE(%"class.blink::SVGUseElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink18SVGGraphicsElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGGraphicsElement"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* dereferenceable(2848) %1, i32 1058) #11
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15SVGURIReferenceC2EPNS_10SVGElementE(%"class.blink::SVGURIReference"* %8, %"class.blink::SVGElement"* %12) #11
  %13 = bitcast %"class.blink::ResourceClient.base"* %10 to %"class.blink::ResourceClient"*
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %14, %"class.blink::ResourceClient"* %13) #11
  %15 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2, i32 3, i32 0, i32 0
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2, i32 4
  store i8 0, i8* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %17 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::SVGResourceDocumentContent"* null, %"class.blink::SVGResourceDocumentContent"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 4
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE, align 8
  %20 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #11
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64**
  store i64* null, i64** %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 16
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #11
  %26 = bitcast i8* %25 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %26, i32 0, i32 0) #11
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = bitcast i8* %24 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %31, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %19, i32 442, i32 0) #11
  %32 = bitcast i8* %24 to i32 (...)***
  %33 = getelementptr inbounds i8, i8* %20, i64 48
  %34 = bitcast i8* %33 to i8**
  store i8* %25, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %20, i64 56
  %36 = bitcast i8* %35 to i8**
  store i8* %25, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %20, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %38 = getelementptr inbounds i8, i8* %20, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = bitcast %"class.blink::Member.418"* %18 to i8**
  store i8* %20, i8** %42, align 8
  %43 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 5
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE, align 8
  %45 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #11
  %46 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i64**
  store i64* null, i64** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #11
  %51 = bitcast i8* %50 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %51, i32 0, i32 1) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  %56 = bitcast i8* %49 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %56, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %44, i32 443, i32 0) #11
  %57 = bitcast i8* %49 to i32 (...)***
  %58 = getelementptr inbounds i8, i8* %45, i64 48
  %59 = bitcast i8* %58 to i8**
  store i8* %50, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %45, i64 56
  %61 = bitcast i8* %60 to i8**
  store i8* %50, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %45, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %63 = getelementptr inbounds i8, i8* %45, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  %67 = bitcast %"class.blink::Member.418"* %43 to i8**
  store i8* %45, i8** %67, align 8
  %68 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 6
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %70 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #11
  %71 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 8
  %73 = bitcast i8* %72 to i64**
  store i64* null, i64** %73, align 8
  %74 = getelementptr inbounds i8, i8* %70, i64 16
  %75 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #11
  %76 = bitcast i8* %75 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %76, i32 0, i32 0) #11
  %77 = getelementptr inbounds i8, i8* %75, i64 -4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = or i16 %79, 1
  store atomic i16 %80, i16* %78 release, align 2
  %81 = bitcast i8* %74 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %81, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %69, i32 0, i32 0) #11
  %82 = bitcast i8* %74 to i32 (...)***
  %83 = getelementptr inbounds i8, i8* %70, i64 48
  %84 = bitcast i8* %83 to i8**
  store i8* %75, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %70, i64 56
  %86 = bitcast i8* %85 to i8**
  store i8* %75, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %70, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %88 = getelementptr inbounds i8, i8* %70, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  %92 = bitcast %"class.blink::Member.418"* %68 to i8**
  store i8* %70, i8** %92, align 8
  %93 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 7
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %95 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #11
  %96 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds i8, i8* %95, i64 8
  %98 = bitcast i8* %97 to i64**
  store i64* null, i64** %98, align 8
  %99 = getelementptr inbounds i8, i8* %95, i64 16
  %100 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #11
  %101 = bitcast i8* %100 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %101, i32 0, i32 1) #11
  %102 = getelementptr inbounds i8, i8* %100, i64 -4
  %103 = bitcast i8* %102 to i16*
  %104 = load atomic i16, i16* %103 monotonic, align 2
  %105 = or i16 %104, 1
  store atomic i16 %105, i16* %103 release, align 2
  %106 = bitcast i8* %99 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %106, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %94, i32 0, i32 0) #11
  %107 = bitcast i8* %99 to i32 (...)***
  %108 = getelementptr inbounds i8, i8* %95, i64 48
  %109 = bitcast i8* %108 to i8**
  store i8* %100, i8** %109, align 8
  %110 = getelementptr inbounds i8, i8* %95, i64 56
  %111 = bitcast i8* %110 to i8**
  store i8* %100, i8** %111, align 8
  %112 = getelementptr inbounds i8, i8* %95, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %113 = getelementptr inbounds i8, i8* %95, i64 -4
  %114 = bitcast i8* %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = or i16 %115, 1
  store atomic i16 %116, i16* %114 release, align 2
  %117 = bitcast %"class.blink::Member.418"* %93 to i8**
  store i8* %95, i8** %117, align 8
  %118 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %118) #11
  %119 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  store i8 1, i8* %119, align 8
  %120 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 10
  store i8 0, i8* %120, align 1
  %121 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  store i8 0, i8* %121, align 2
  %122 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::IdTargetObserver"* null, %"class.blink::IdTargetObserver"** %122, align 8
  %123 = getelementptr inbounds %"class.blink::Member.418", %"class.blink::Member.418"* %18, i64 0, i32 0, i32 0
  %124 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %123, align 8
  %125 = icmp eq %"class.blink::SVGAnimatedLength"* %124, null
  %126 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %124, i64 0, i32 1, i32 0, i32 0
  %127 = select i1 %125, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %126
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %127) #11
  %128 = getelementptr inbounds %"class.blink::Member.418", %"class.blink::Member.418"* %43, i64 0, i32 0, i32 0
  %129 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %128, align 8
  %130 = icmp eq %"class.blink::SVGAnimatedLength"* %129, null
  %131 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %129, i64 0, i32 1, i32 0, i32 0
  %132 = select i1 %130, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %131
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %132) #11
  %133 = getelementptr inbounds %"class.blink::Member.418", %"class.blink::Member.418"* %68, i64 0, i32 0, i32 0
  %134 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %133, align 8
  %135 = icmp eq %"class.blink::SVGAnimatedLength"* %134, null
  %136 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %134, i64 0, i32 1, i32 0, i32 0
  %137 = select i1 %135, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %136
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %137) #11
  %138 = getelementptr inbounds %"class.blink::Member.418", %"class.blink::Member.418"* %93, i64 0, i32 0, i32 0
  %139 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %138, align 8
  %140 = icmp eq %"class.blink::SVGAnimatedLength"* %139, null
  %141 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %139, i64 0, i32 1, i32 0, i32 0
  %142 = select i1 %140, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %141
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %142) #11
  %143 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %144 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element24AttachShadowRootInternalENS_14ShadowRootTypeENS_15FocusDelegationENS_18SlotAssignmentModeE(%"class.blink::Element"* %143, i32 1, i32 0, i32 1) #11
  ret void
}

declare void @_ZN5blink18SVGGraphicsElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGGraphicsElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink15SVGURIReferenceC2EPNS_10SVGElementE(%"class.blink::SVGURIReference"*, %"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::SVGAnimatedPropertyBase"*) local_unnamed_addr #1

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element24AttachShadowRootInternalENS_14ShadowRootTypeENS_15FocusDelegationENS_18SlotAssignmentModeE(%"class.blink::Element"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElementD2Ev(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %7) #11
  %8 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %8) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn200_N5blink13SVGUseElementD1Ev(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 2
  %3 = bitcast %"class.blink::ResourceClient.base"* %2 to %"class.blink::SVGUseElement"*
  %4 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 8, i32 3
  %9 = bitcast %"class.blink::Member.37"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 11, i32 2, i64 4
  %11 = bitcast i8* %10 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %11) #11
  %12 = bitcast %"class.blink::ResourceClient.base"* %2 to %"class.blink::SVGGraphicsElement"*
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn216_N5blink13SVGUseElementD1Ev(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 10, i32 1
  %6 = bitcast %"class.blink::Member.35"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 12, i32 1
  %8 = bitcast %"class.blink::Member.35"* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 13, i32 1
  %10 = bitcast %"class.blink::Member.35"* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 18
  %12 = bitcast %"class.blink::SVGURIReference"* %11 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %12) #11
  %13 = bitcast %"class.blink::SVGURIReference"* %2 to %"class.blink::SVGGraphicsElement"*
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElementD0Ev(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %7) #11
  %8 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn200_N5blink13SVGUseElementD0Ev(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 2
  %3 = bitcast %"class.blink::ResourceClient.base"* %2 to %"class.blink::SVGUseElement"*
  %4 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 8, i32 3
  %9 = bitcast %"class.blink::Member.37"* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %2, i64 11, i32 2, i64 4
  %11 = bitcast i8* %10 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %11) #11
  %12 = bitcast %"class.blink::ResourceClient.base"* %2 to %"class.blink::SVGGraphicsElement"*
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn216_N5blink13SVGUseElementD0Ev(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 1
  %3 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 10, i32 1
  %6 = bitcast %"class.blink::Member.35"* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 12, i32 1
  %8 = bitcast %"class.blink::Member.35"* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 13, i32 1
  %10 = bitcast %"class.blink::Member.35"* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }, { [172 x i8*], [3 x i8*], [3 x i8*], [5 x i8*], [10 x i8*] }* @_ZTVN5blink13SVGUseElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::SVGURIReference", %"class.blink::SVGURIReference"* %2, i64 18
  %12 = bitcast %"class.blink::SVGURIReference"* %11 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %12) #11
  %13 = bitcast %"class.blink::SVGURIReference"* %2 to %"class.blink::SVGGraphicsElement"*
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.408"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26SVGResourceDocumentContentEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.418"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::Member.418"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 6
  %37 = bitcast %"class.blink::Member.418"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 7
  %48 = bitcast %"class.blink::Member.418"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #11
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 12
  %59 = bitcast %"class.blink::Member.434"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv) #11
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  tail call void @_ZNK5blink18SVGGraphicsElement5TraceEPNS_7VisitorE(%"class.blink::SVGGraphicsElement"* %69, %"class.blink::Visitor"* %1) #11
  %70 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 1
  tail call void @_ZNK5blink15SVGURIReference5TraceEPNS_7VisitorE(%"class.blink::SVGURIReference"* %70, %"class.blink::Visitor"* %1) #11
  %71 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2
  %72 = bitcast %"class.blink::ResourceClient.base"* %71 to %"class.blink::ResourceClient"*
  tail call void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"* %72, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink18SVGGraphicsElement5TraceEPNS_7VisitorE(%"class.blink::SVGGraphicsElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15SVGURIReference5TraceEPNS_7VisitorE(%"class.blink::SVGURIReference"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 3
  %4 = bitcast %"class.blink::Member.408"* %3 to %"class.blink::SVGUseElement"*
  tail call void @_ZNK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn200_NK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 2
  %4 = bitcast %"class.blink::ResourceClient.base"* %3 to %"class.blink::SVGUseElement"*
  tail call void @_ZNK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn216_NK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::SVGURIReference"* %3 to %"class.blink::SVGUseElement"*
  tail call void @_ZNK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13SVGUseElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGUseElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %4 = tail call i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #11
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %10) #11
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  store i8 1, i8* %13, align 2
  %17 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %20, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  br label %21

21:                                               ; preds = %2, %16, %12, %9
  ret i32 0
}

declare i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement20InvalidateShadowTreeEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %2) #11
  br i1 %3, label %4, label %13

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  store i8 1, i8* %5, align 2
  %9 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %12, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  br label %13

13:                                               ; preds = %4, %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGUseElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #11
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 12
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.434"* dereferenceable(8) %9) #11
  tail call void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"* %3) #11
  %10 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  store i8 0, i8* %10, align 2
  %11 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  tail call void @_ZN5blink8Document29UnscheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %14, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  br label %15

15:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement22ClearResourceReferenceEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 12
  tail call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.434"* dereferenceable(8) %2) #11
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement26CancelShadowTreeRecreationEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  store i8 0, i8* %2, align 2
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document29UnscheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %6, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::SVGUseElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"* %3, %"class.blink::Document"* dereferenceable(2848) %1) #11
  tail call void @_ZN5blink13SVGUseElement21UpdateTargetReferenceEv(%"class.blink::SVGUseElement"* %0)
  ret void
}

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement21UpdateTargetReferenceEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %4 = alloca %"class.blink::FetchParameters", align 8
  %5 = alloca %"class.blink::ResourceRequest", align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 1
  %7 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink15SVGURIReference10HrefStringEv(%"class.blink::SVGURIReference"* %6) #11
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Document"* %12, %"class.WTF::String"* dereferenceable(8) %7) #11
  %13 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  %14 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %13, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #11
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  store i8 0, i8* %19, align 8
  br label %24

20:                                               ; preds = %1
  %21 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithEDs(%"class.WTF::StringImpl"* nonnull %16, i16 zeroext 35) #11
  %22 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 8
  br i1 %21, label %38, label %24

24:                                               ; preds = %20, %18
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 19
  %29 = call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %13, %"class.blink::KURL"* dereferenceable(112) %28) #11
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %33, i64 0, i32 5, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -2
  %37 = icmp ult i32 %36, 18
  br i1 %37, label %43, label %38

38:                                               ; preds = %24, %20, %30
  %39 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2
  %40 = bitcast %"class.blink::ResourceClient.base"* %39 to %"class.blink::ResourceClient"*
  call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %40, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #11
  %41 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 3
  %42 = bitcast %"class.blink::Member.408"* %41 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  br label %114

43:                                               ; preds = %30
  %44 = call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %13) #11
  br i1 %44, label %45, label %114

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::Member.408", %"class.blink::Member.408"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::SVGResourceDocumentContent"*, %"class.blink::SVGResourceDocumentContent"** %47, align 8
  %49 = icmp eq %"class.blink::SVGResourceDocumentContent"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink26SVGResourceDocumentContent3UrlEv(%"class.blink::SVGResourceDocumentContent"* nonnull %48) #11
  %52 = call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %13, %"class.blink::KURL"* dereferenceable(112) %51) #11
  br i1 %52, label %114, label %53

53:                                               ; preds = %45, %50
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %56) #11
  %58 = bitcast %"struct.blink::ResourceLoaderOptions"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %58) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 112, i1 false)
  %59 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %57) #11
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %3, %"class.blink::DOMWrapperWorld"* %59) #11
  %60 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #11
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %80, %65, %53
  %83 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %84 = bitcast %"struct.blink::ResourceLoaderOptions"* %3 to i64*
  %85 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #11
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %102) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %102, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.80, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.118 } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.113 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.129 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.177", i8, i8, [6 x i8], %class.scoped_refptr.181, %class.scoped_refptr.379, %class.scoped_refptr.381 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.73 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.74, %class.scoped_refptr.74, %class.scoped_refptr.74, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.80, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.104", %"class.WTF::Vector.61", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.118 } } } }, { { { { i8, [7 x i8], %union.anon.118 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], %union.anon.113 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.113 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.123 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.129 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.177", i8, i8, [6 x i8], %class.scoped_refptr.181, %class.scoped_refptr.379, %class.scoped_refptr.381 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink13SVGUseElement21UpdateTargetReferenceEv.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %13) #11
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %4, %"class.blink::ResourceRequest"* nonnull %5, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %3) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %5) #11
  %103 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 2
  %104 = bitcast %"class.blink::ResourceClient.base"* %103 to %"class.blink::ResourceClient"*
  %105 = call %"class.blink::SVGResourceDocumentContent"* @_ZN5blink26SVGResourceDocumentContent5FetchERNS_15FetchParametersERNS_8DocumentEPNS_14ResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %4, %"class.blink::Document"* dereferenceable(2848) %56, %"class.blink::ResourceClient"* %104) #11
  %106 = ptrtoint %"class.blink::SVGResourceDocumentContent"* %105 to i64
  %107 = bitcast %"class.blink::Member.408"* %46 to i64*
  store atomic i64 %106, i64* %107 monotonic, align 8
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %101
  %111 = bitcast %"class.blink::SVGResourceDocumentContent"* %105 to i8*
  %112 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %111) #11
  br label %113

113:                                              ; preds = %101, %110
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %102) #11
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %58) #11
  br label %114

114:                                              ; preds = %43, %50, %113, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGUseElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  %7 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %7, align 8
  %9 = icmp eq %"class.blink::SVGAnimatedLength"* %8, null
  %10 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %8, i64 0, i32 1, i32 0, i32 0
  %11 = select i1 %9, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %10
  %12 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %6, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %6, i64 0, i32 1
  %16 = bitcast i24* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = lshr i32 %17, 5
  %19 = and i32 %18, 2047
  %20 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %23, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"* %14, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %19, %"class.blink::CSSValue"* dereferenceable(3) %24) #11
  br label %46

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %26, align 8
  %28 = icmp eq %"class.blink::SVGAnimatedLength"* %27, null
  %29 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %27, i64 0, i32 1, i32 0, i32 0
  %30 = select i1 %28, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %29
  %31 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %6, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %6, i64 0, i32 1
  %35 = bitcast i24* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = lshr i32 %36, 5
  %38 = and i32 %37, 2047
  %39 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %27, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %42, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"* %33, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %38, %"class.blink::CSSValue"* dereferenceable(3) %43) #11
  br label %46

44:                                               ; preds = %25
  %45 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGGraphicsElement"* %45, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #11
  br label %46

46:                                               ; preds = %32, %44, %13
  ret void
}

declare %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

declare void @_ZN5blink18SVGGraphicsElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGGraphicsElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGUseElement22IsStructurallyExternalEv(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 19
  %12 = tail call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %6, %"class.blink::KURL"* dereferenceable(112) %11) #11
  %13 = xor i1 %12, true
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi i1 [ false, %1 ], [ %13, %5 ]
  ret i1 %15
}

declare zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink15SVGURIReference10HrefStringEv(%"class.blink::SVGURIReference"*) local_unnamed_addr #1

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink26SVGResourceDocumentContent3UrlEv(%"class.blink::SVGResourceDocumentContent"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare %"class.blink::SVGResourceDocumentContent"* @_ZN5blink26SVGResourceDocumentContent5FetchERNS_15FetchParametersERNS_8DocumentEPNS_14ResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ResourceClient"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGUseElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %15
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %20
  br i1 %21, label %88, label %22

22:                                               ; preds = %17
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %25
  br i1 %26, label %88, label %119

27:                                               ; preds = %12, %2
  %28 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %29, align 8
  %31 = icmp eq %"class.blink::ElementData"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::UniqueElementData"*
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %32, %27
  tail call void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"* %28) #11
  %39 = bitcast %"class.blink::ElementData"** %29 to %"class.blink::UniqueElementData"**
  %40 = load %"class.blink::UniqueElementData"*, %"class.blink::UniqueElementData"** %39, align 8
  br label %41

41:                                               ; preds = %32, %38
  %42 = phi %"class.blink::UniqueElementData"* [ %40, %38 ], [ %33, %32 ]
  %43 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = or i32 %44, 536870912
  store atomic i32 %45, i32* %43 monotonic, align 4
  %46 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #11
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #11
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %57
  tail call void @llvm.trap() #11
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %41, %52, %67
  %70 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAttributeE, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %71, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %46, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #11
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #11
  br label %87

87:                                               ; preds = %69, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #11
  br label %88

88:                                               ; preds = %17, %22, %87
  %89 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %90 = bitcast %"class.blink::SVGUseElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %91 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %91, i64 166
  %93 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::SVGElement"* %89) #11
  call void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"* %89, i1 zeroext %94, %"class.blink::SVGElement"* %89) #11
  %95 = call %"class.blink::SVGElement"* @_ZNK5blink13SVGUseElement12InstanceRootEv(%"class.blink::SVGUseElement"* %0)
  %96 = icmp eq %"class.blink::SVGElement"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %88
  %98 = call %"class.blink::SVGElement"* @_ZNK5blink10SVGElement20CorrespondingElementEv(%"class.blink::SVGElement"* nonnull %95) #11
  call fastcc void @_ZN5blinkL33TransferUseWidthAndHeightIfNeededERKNS_13SVGUseElementERNS_10SVGElementERKS3_(%"class.blink::SVGUseElement"* dereferenceable(416) %0, %"class.blink::SVGElement"* nonnull dereferenceable(168) %95, %"class.blink::SVGElement"* dereferenceable(168) %98)
  br label %99

99:                                               ; preds = %88, %97
  %100 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %103, label %109, label %105

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::NodeData"** %104 to %"class.blink::NodeRareData"**
  %107 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %107, i64 0, i32 1, i32 0, i32 0
  br label %111

109:                                              ; preds = %99
  %110 = bitcast %"class.blink::NodeData"** %104 to %"class.blink::NodeRenderingData"**
  br label %111

111:                                              ; preds = %105, %109
  %112 = phi %"class.blink::NodeRenderingData"** [ %108, %105 ], [ %110, %109 ]
  %113 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %113, i64 0, i32 1
  %115 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %114, align 8
  %116 = icmp eq %"class.blink::LayoutObject"* %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %111
  call void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %115) #11
  br label %118

118:                                              ; preds = %111, %117
  call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %89) #11
  br label %137

119:                                              ; preds = %22
  %120 = tail call zeroext i1 @_ZN5blink15SVGURIReference16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %5) #11
  br i1 %120, label %121, label %135

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13SVGUseElement21UpdateTargetReferenceEv(%"class.blink::SVGUseElement"* %0)
  %123 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %123) #11
  br i1 %124, label %125, label %134

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %127 = load i8, i8* %126, align 2, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %134

129:                                              ; preds = %125
  store i8 1, i8* %126, align 2
  %130 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %131 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %131, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::Document"*, %"class.blink::Document"** %132, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %133, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  br label %134

134:                                              ; preds = %121, %125, %129
  tail call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %122) #11
  br label %137

135:                                              ; preds = %119
  %136 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGGraphicsElement"* %136, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16) %1) #11
  br label %137

137:                                              ; preds = %135, %134, %118
  ret void
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGElement"* @_ZNK5blink13SVGUseElement12InstanceRootEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %3) #11
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %10) #11
  %12 = icmp eq %"class.blink::ShadowRoot"* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #11
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %16

16:                                               ; preds = %9, %13
  %17 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %10) #11
  %18 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.blink::Node"** %18 to %"class.blink::SVGElement"**
  %20 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %19, align 8
  br label %21

21:                                               ; preds = %5, %1, %16
  %22 = phi %"class.blink::SVGElement"* [ %20, %16 ], [ null, %5 ], [ null, %1 ]
  ret %"class.blink::SVGElement"* %22
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL33TransferUseWidthAndHeightIfNeededERKNS_13SVGUseElementERNS_10SVGElementERKS3_(%"class.blink::SVGUseElement"* nocapture readonly dereferenceable(416), %"class.blink::SVGElement"* dereferenceable(168), %"class.blink::SVGElement"* dereferenceable(168)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kSymbolTagE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::SVGElement"* %2, null
  br i1 %8, label %233, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 32
  br i1 %13, label %14, label %233

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %18 = bitcast %"class.blink::Member"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %37, label %25

25:                                               ; preds = %14
  %26 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE, align 8
  %27 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %30 = bitcast %"class.blink::Member"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %233

37:                                               ; preds = %25, %14
  %38 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %41, i64 0, i32 1, i32 0, i32 0
  %43 = tail call zeroext i1 @_ZNK5blink23SVGAnimatedPropertyBase11IsSpecifiedEv(%"class.blink::SVGAnimatedPropertyBase"* %42) #11
  br i1 %43, label %70, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %47 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %45, %"class.blink::QualifiedName"* dereferenceable(8) %46) #11
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 0, i64* %52, align 8
  br label %117

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %78

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #11
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !3

67:                                               ; preds = %58
  tail call void @llvm.trap() #11
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %78

70:                                               ; preds = %37
  %71 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %40, align 8
  %72 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %71, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %72, align 8
  %74 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9SVGLength13ValueAsStringEv(%"class.blink::SVGLength"* %73) #11
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %70
  %77 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 0, i64* %77, align 8
  br label %117

78:                                               ; preds = %68, %53, %70
  %79 = phi %"class.WTF::StringImpl"* [ %74, %70 ], [ %49, %53 ], [ %49, %68 ]
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %100, label %84

84:                                               ; preds = %78
  %85 = load atomic i32, i32* %80 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %102

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #11
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #11
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %102

100:                                              ; preds = %78
  %101 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %79) #11
  br label %102

102:                                              ; preds = %84, %100, %98
  %103 = phi %"class.WTF::StringImpl"* [ %101, %100 ], [ %79, %98 ], [ %79, %84 ]
  %104 = ptrtoint %"class.WTF::StringImpl"* %103 to i64
  %105 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %104, i64* %105, align 8
  %106 = load atomic i32, i32* %80 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %102
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %102
  %114 = phi i32 [ %112, %111 ], [ %110, %102 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #11
  br label %117

117:                                              ; preds = %51, %76, %113, %116
  %118 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0
  %119 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %118, %"class.blink::QualifiedName"* dereferenceable(8) %119, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #11
  %120 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %121, align 8
  %122 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 7, i32 0, i32 0
  %123 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %123, i64 0, i32 1, i32 0, i32 0
  %125 = call zeroext i1 @_ZNK5blink23SVGAnimatedPropertyBase11IsSpecifiedEv(%"class.blink::SVGAnimatedPropertyBase"* %124) #11
  br i1 %125, label %152, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0
  %128 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %129 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %127, %"class.blink::QualifiedName"* dereferenceable(8) %128) #11
  %130 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %133, label %135

133:                                              ; preds = %126
  %134 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 0, i64* %134, align 8
  br label %199

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %160

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #11
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !3

149:                                              ; preds = %140
  call void @llvm.trap() #11
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %160

152:                                              ; preds = %117
  %153 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %122, align 8
  %154 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %153, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %155 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %154, align 8
  %156 = call %"class.WTF::StringImpl"* @_ZNK5blink9SVGLength13ValueAsStringEv(%"class.blink::SVGLength"* %155) #11
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %158, label %160

158:                                              ; preds = %152
  %159 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 0, i64* %159, align 8
  br label %199

160:                                              ; preds = %150, %135, %152
  %161 = phi %"class.WTF::StringImpl"* [ %156, %152 ], [ %131, %135 ], [ %131, %150 ]
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 acquire, align 4
  %164 = and i32 %163, 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %160
  %167 = load atomic i32, i32* %162 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %184

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i33
  %174 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %173, i33 1) #11
  %175 = extractvalue { i33, i1 } %174, 1
  %176 = extractvalue { i33, i1 } %174, 0
  %177 = icmp slt i33 %176, 0
  %178 = or i1 %175, %177
  br i1 %178, label %179, label %180, !prof !3

179:                                              ; preds = %170
  call void @llvm.trap() #11
  unreachable

180:                                              ; preds = %170
  %181 = trunc i33 %176 to i32
  store i32 %181, i32* %171, align 4
  br label %184

182:                                              ; preds = %160
  %183 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %161) #11
  br label %184

184:                                              ; preds = %166, %182, %180
  %185 = phi %"class.WTF::StringImpl"* [ %183, %182 ], [ %161, %180 ], [ %161, %166 ]
  %186 = ptrtoint %"class.WTF::StringImpl"* %185 to i64
  %187 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %186, i64* %187, align 8
  %188 = load atomic i32, i32* %162 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %184
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %184
  %196 = phi i32 [ %194, %193 ], [ %192, %184 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #11
  br label %199

199:                                              ; preds = %133, %158, %195, %198
  %200 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %118, %"class.blink::QualifiedName"* dereferenceable(8) %200, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #11
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #11
  br label %216

216:                                              ; preds = %199, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #11
  br label %232

232:                                              ; preds = %216, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %233

233:                                              ; preds = %9, %3, %25, %232
  ret void
}

declare %"class.blink::SVGElement"* @_ZNK5blink10SVGElement20CorrespondingElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15SVGURIReference16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink18SVGGraphicsElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGGraphicsElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement28ScheduleShadowTreeRecreationEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  store i8 1, i8* %2, align 2
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %6, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  ret void
}

declare void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"*, %"class.blink::SVGUseElement"* dereferenceable(416)) local_unnamed_addr #1

declare void @_ZN5blink8Document29UnscheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"*, %"class.blink::SVGUseElement"* dereferenceable(416)) local_unnamed_addr #1

declare void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.434"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink13SVGUseElement20ResolveTargetElementEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"class.blink::WeakPersistent.2738", align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  %7 = tail call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %6) #11
  br i1 %7, label %8, label %185

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* %6) #11
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* nonnull dereferenceable(8) %3, i32 1) #11
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %16
  %22 = load atomic i32, i32* %17 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #11
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  call void @llvm.trap() #11
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %41

37:                                               ; preds = %16
  %38 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %41

39:                                               ; preds = %8
  %40 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 0, i64* %40, align 8
  br label %56

41:                                               ; preds = %21, %35, %37
  %42 = phi %"class.WTF::StringImpl"* [ %14, %35 ], [ %14, %21 ], [ %38, %37 ]
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %44 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load atomic i32, i32* %17 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %41
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %41
  %53 = phi i32 [ %51, %50 ], [ %49, %41 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %73 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %80, i64 0, i32 19
  %82 = call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %6, %"class.blink::KURL"* dereferenceable(112) %81) #11
  br i1 %82, label %83, label %155

83:                                               ; preds = %76, %72
  %84 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %85 = call zeroext i1 @_ZNK5blink10SVGElement15InUseShadowTreeEv(%"class.blink::SVGElement"* %84) #11
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = call dereferenceable(104) %"class.blink::TreeScope"* @_ZNK5blink4Node20OriginatingTreeScopeEv(%"class.blink::Node"* %87) #11
  %89 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %88, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #11
  br label %167

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 12
  %92 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = call dereferenceable(104) %"class.blink::TreeScope"* @_ZNK5blink4Node20OriginatingTreeScopeEv(%"class.blink::Node"* %92) #11
  %94 = bitcast %"class.blink::WeakPersistent.2738"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.blink::WeakPersistent.2738", %"class.blink::WeakPersistent.2738"* %5, i64 0, i32 0
  %96 = getelementptr inbounds %"class.blink::WeakPersistent.2738", %"class.blink::WeakPersistent.2738"* %5, i64 0, i32 0, i32 0
  store %"class.blink::SVGUseElement"* %0, %"class.blink::SVGUseElement"** %96, align 8, !alias.scope !4
  %97 = getelementptr inbounds %"class.blink::WeakPersistent.2738", %"class.blink::WeakPersistent.2738"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %97, align 8, !alias.scope !4
  %98 = ptrtoint %"class.blink::SVGUseElement"* %0 to i64
  switch i64 %98, label %99 [
    i64 0, label %114
    i64 -1, label %114
  ]

99:                                               ; preds = %90
  %100 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !4
  %101 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %101, align 8, !noalias !4
  %103 = icmp eq %"class.blink::PersistentNode"* %102, null
  br i1 %103, label %104, label %107, !prof !3

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %100, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %105) #11
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %101, align 8
  br label %107

107:                                              ; preds = %104, %99
  %108 = phi %"class.blink::PersistentNode"* [ %106, %104 ], [ %102, %99 ]
  %109 = bitcast %"class.blink::PersistentNode"* %108 to i64*
  %110 = load i64, i64* %109, align 8, !noalias !4
  %111 = bitcast %"class.blink::PersistentRegion"* %100 to i64*
  store i64 %110, i64* %111, align 8, !noalias !4
  %112 = bitcast %"class.blink::PersistentNode"* %108 to %"class.blink::PersistentBase.2739"**
  store %"class.blink::PersistentBase.2739"* %95, %"class.blink::PersistentBase.2739"** %112, align 8, !noalias !4
  %113 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %108, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %113, align 8
  store %"class.blink::PersistentNode"* %108, %"class.blink::PersistentNode"** %97, align 8, !alias.scope !4
  br label %114

114:                                              ; preds = %90, %90, %107
  %115 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %115, align 8, !alias.scope !7
  %116 = call i8* @_Znwm(i64 64) #12, !noalias !10
  %117 = bitcast i8* %116 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %117, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink13SVGUseElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #11, !noalias !10
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = bitcast i8* %118 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElement25InvalidateTargetReferenceEv to i64), i64 0>, <2 x i64>* %119, align 8, !noalias !10
  %120 = getelementptr inbounds i8, i8* %116, i64 48
  %121 = bitcast %"class.blink::WeakPersistent.2738"* %5 to i64*
  %122 = load i64, i64* %121, align 8, !noalias !10
  %123 = bitcast i8* %120 to i64*
  store i64 %122, i64* %123, align 8, !noalias !10
  %124 = getelementptr inbounds i8, i8* %116, i64 56
  %125 = bitcast i8* %124 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %125, align 8, !noalias !10
  switch i64 %122, label %126 [
    i64 0, label %141
    i64 -1, label %141
  ]

126:                                              ; preds = %114
  %127 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8, !noalias !10
  %128 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %128, align 8, !noalias !10
  %130 = icmp eq %"class.blink::PersistentNode"* %129, null
  br i1 %130, label %131, label %134, !prof !3

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %127, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %132) #11, !noalias !10
  %133 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %128, align 8, !noalias !10
  br label %134

134:                                              ; preds = %131, %126
  %135 = phi %"class.blink::PersistentNode"* [ %133, %131 ], [ %129, %126 ]
  %136 = bitcast %"class.blink::PersistentNode"* %135 to i64*
  %137 = load i64, i64* %136, align 8, !noalias !10
  %138 = bitcast %"class.blink::PersistentRegion"* %127 to i64*
  store i64 %137, i64* %138, align 8, !noalias !10
  %139 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %135, i64 0, i32 0
  store i8* %120, i8** %139, align 8, !noalias !10
  %140 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %135, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %140, align 8, !noalias !10
  store %"class.blink::PersistentNode"* %135, %"class.blink::PersistentNode"** %125, align 8, !noalias !10
  br label %141

141:                                              ; preds = %114, %114, %134
  %142 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %116, i8** %142, align 8, !alias.scope !10
  %143 = call %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_9TreeScopeERKN3WTF12AtomicStringEN4base17RepeatingCallbackIFvvEEE(%"class.blink::Member.434"* dereferenceable(8) %91, %"class.blink::TreeScope"* dereferenceable(104) %93, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2, %"class.base::RepeatingCallback"* nonnull %4) #11
  %144 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %144) #11
  %145 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %97, align 8
  %146 = icmp eq %"class.blink::PersistentNode"* %145, null
  br i1 %146, label %154, label %147

147:                                              ; preds = %141
  %148 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %149 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %148, i64 0, i32 0, i32 0
  %150 = bitcast %"class.blink::PersistentRegion"* %148 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.blink::PersistentNode"* %145 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %145, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %153, align 8
  store %"class.blink::PersistentNode"* %145, %"class.blink::PersistentNode"** %149, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %97, align 8
  br label %154

154:                                              ; preds = %141, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #11
  br label %167

155:                                              ; preds = %76
  %156 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::SVGResourceDocumentContent"*, %"class.blink::SVGResourceDocumentContent"** %156, align 8
  %158 = icmp eq %"class.blink::SVGResourceDocumentContent"* %157, null
  br i1 %158, label %167, label %159

159:                                              ; preds = %155
  %160 = call %"class.blink::Document"* @_ZN5blink26SVGResourceDocumentContent11GetDocumentEv(%"class.blink::SVGResourceDocumentContent"* nonnull %157) #11
  %161 = icmp eq %"class.blink::Document"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %159
  %163 = load %"class.blink::SVGResourceDocumentContent"*, %"class.blink::SVGResourceDocumentContent"** %156, align 8
  %164 = call %"class.blink::Document"* @_ZN5blink26SVGResourceDocumentContent11GetDocumentEv(%"class.blink::SVGResourceDocumentContent"* %163) #11
  %165 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %164, i64 0, i32 1
  %166 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %165, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #11
  br label %167

167:                                              ; preds = %155, %159, %162, %154, %86
  %168 = phi %"class.blink::Element"* [ %166, %162 ], [ %89, %86 ], [ %143, %154 ], [ null, %159 ], [ null, %155 ]
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #11
  br label %184

184:                                              ; preds = %167, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %185

185:                                              ; preds = %1, %184
  %186 = phi %"class.blink::Element"* [ %168, %184 ], [ null, %1 ]
  ret %"class.blink::Element"* %186
}

declare %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink10SVGElement15InUseShadowTreeEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::TreeScope"* @_ZNK5blink4Node20OriginatingTreeScopeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink15SVGURIReference13ObserveTargetERNS_6MemberINS_16IdTargetObserverEEERNS_9TreeScopeERKN3WTF12AtomicStringEN4base17RepeatingCallbackIFvvEEE(%"class.blink::Member.434"* dereferenceable(8), %"class.blink::TreeScope"* dereferenceable(104), %"class.WTF::AtomicString"* dereferenceable(8), %"class.base::RepeatingCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement25InvalidateTargetReferenceEv(%"class.blink::SVGUseElement"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %2) #11
  br i1 %3, label %4, label %13

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  store i8 1, i8* %5, align 2
  %9 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %12, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  br label %13

13:                                               ; preds = %1, %4, %8
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %15 = tail call dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %14) #11
  %16 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %15, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::WeakMember"*, %"class.blink::WeakMember"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %15, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %20, i64 %23
  br i1 %18, label %37, label %25

25:                                               ; preds = %13
  %26 = icmp eq i32 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"class.blink::WeakMember"* [ %32, %31 ], [ %20, %25 ]
  %29 = bitcast %"class.blink::WeakMember"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  switch i64 %30, label %34 [
    i64 -1, label %31
    i64 0, label %31
  ]

31:                                               ; preds = %27, %27
  %32 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %28, i64 1
  %33 = icmp eq %"class.blink::WeakMember"* %32, %24
  br i1 %33, label %37, label %27

34:                                               ; preds = %27, %25
  %35 = phi %"class.blink::WeakMember"* [ %20, %25 ], [ %28, %27 ]
  %36 = icmp eq %"class.blink::WeakMember"* %35, %24
  br i1 %36, label %37, label %38

37:                                               ; preds = %31, %53, %63, %60, %13, %34
  ret void

38:                                               ; preds = %34, %63
  %39 = phi %"class.blink::WeakMember"* [ %57, %63 ], [ %35, %34 ]
  %40 = bitcast %"class.blink::WeakMember"* %39 to %"class.blink::SVGUseElement"**
  %41 = load %"class.blink::SVGUseElement"*, %"class.blink::SVGUseElement"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %42) #11
  br i1 %43, label %44, label %53

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %41, i64 0, i32 11
  %46 = load i8, i8* %45, align 2, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  store i8 1, i8* %45, align 2
  %49 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %52, %"class.blink::SVGUseElement"* dereferenceable(416) %41) #11
  br label %53

53:                                               ; preds = %38, %44, %48
  %54 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %39, i64 1
  %55 = icmp eq %"class.blink::WeakMember"* %54, %24
  br i1 %55, label %37, label %56

56:                                               ; preds = %53, %60
  %57 = phi %"class.blink::WeakMember"* [ %61, %60 ], [ %54, %53 ]
  %58 = bitcast %"class.blink::WeakMember"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  switch i64 %59, label %63 [
    i64 -1, label %60
    i64 0, label %60
  ]

60:                                               ; preds = %56, %56
  %61 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %57, i64 1
  %62 = icmp eq %"class.blink::WeakMember"* %61, %24
  br i1 %62, label %37, label %56

63:                                               ; preds = %56
  %64 = icmp eq %"class.blink::WeakMember"* %57, %24
  br i1 %64, label %37, label %38
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare %"class.blink::Document"* @_ZN5blink26SVGResourceDocumentContent11GetDocumentEv(%"class.blink::SVGResourceDocumentContent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGUseElement24ShadowTreeRebuildPendingEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %2) #11
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp ne i8 %6, 0
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ true, %1 ], [ %7, %4 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement20BuildPendingResourceEv(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  tail call void @_ZN5blink8Document29UnscheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %12, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  %13 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %14 = tail call %"class.blink::SVGUseElement"* @_ZNK5blink10SVGElement20GeneratingUseElementEv(%"class.blink::SVGElement"* %13) #11
  %15 = icmp eq %"class.blink::SVGUseElement"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %7, %21
  %17 = phi %"class.blink::SVGUseElement"* [ %23, %21 ], [ %14, %7 ]
  %18 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %17, i64 0, i32 11
  %19 = load i8, i8* %18, align 2, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %17, i64 0, i32 0, i32 0
  %23 = tail call %"class.blink::SVGUseElement"* @_ZNK5blink10SVGElement20GeneratingUseElementEv(%"class.blink::SVGElement"* %22) #11
  %24 = icmp eq %"class.blink::SVGUseElement"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %21, %7
  %26 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %26) #11
  %28 = icmp eq %"class.blink::ShadowRoot"* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #11
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  br label %32

32:                                               ; preds = %25, %29
  %33 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %26) #11
  %34 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %33, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %34, i32 1) #11
  %35 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 12
  call void @_ZN5blink15SVGURIReference15UnobserveTargetERNS_6MemberINS_16IdTargetObserverEEE(%"class.blink::Member.434"* dereferenceable(8) %35) #11
  call void @_ZN5blink10SVGElement27RemoveAllOutgoingReferencesEv(%"class.blink::SVGElement"* %13) #11
  %36 = call %"class.blink::Element"* @_ZN5blink13SVGUseElement20ResolveTargetElementEv(%"class.blink::SVGUseElement"* %0)
  %37 = icmp eq %"class.blink::Element"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %36, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 48
  %42 = icmp eq i32 %41, 32
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::Element"* %36 to %"class.blink::SVGElement"*
  call void @_ZN5blink13SVGUseElement16AttachShadowTreeERNS_10SVGElementE(%"class.blink::SVGUseElement"* %0, %"class.blink::SVGElement"* nonnull dereferenceable(168) %44)
  br label %45

45:                                               ; preds = %16, %38, %1, %32, %43
  ret void
}

declare %"class.blink::SVGUseElement"* @_ZNK5blink10SVGElement20GeneratingUseElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement16DetachShadowTreeEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %3) #11
  %5 = icmp eq %"class.blink::ShadowRoot"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #11
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br label %9

9:                                                ; preds = %1, %6
  %10 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %3) #11
  %11 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %10, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %11, i32 1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement16AttachShadowTreeERNS_10SVGElementE(%"class.blink::SVGUseElement"*, %"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0
  %6 = tail call fastcc zeroext i1 @_ZN5blinkL19IsDisallowedElementERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %5)
  br i1 %6, label %125, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK5blink13SVGUseElement22HasCycleUseReferencingERKNS_13ContainerNodeERKNS_10SVGElementE(%"class.blink::SVGUseElement"* %0, %"class.blink::ContainerNode"* dereferenceable(80) %8, %"class.blink::SVGElement"* dereferenceable(168) %1)
  br i1 %9, label %125, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %11) #11
  %13 = icmp eq %"class.blink::ShadowRoot"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #11
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  br label %17

17:                                               ; preds = %10, %14
  %18 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %11) #11
  %19 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %18, i64 0, i32 0, i32 0
  %20 = call %"class.blink::SVGElement"* @_ZNK5blink13SVGUseElement18CreateInstanceTreeERNS_10SVGElementE(%"class.blink::SVGUseElement"* %0, %"class.blink::SVGElement"* dereferenceable(168) %1)
  %21 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %19, %"class.blink::Node"* %21) #11
  %23 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %11) #11
  %24 = icmp eq %"class.blink::ShadowRoot"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %17
  %26 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5, i64 0, i64 0), i32 95, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #11
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br label %28

28:                                               ; preds = %17, %25
  %29 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"* %11) #11
  %30 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = icmp eq %"class.blink::ShadowRoot"* %29, null
  br i1 %31, label %125, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1
  %39 = bitcast %"class.blink::Node"* %38 to %"class.blink::Node"**
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %67, label %42

42:                                               ; preds = %37, %64
  %43 = phi %"class.blink::Node"* [ %65, %64 ], [ %40, %37 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 32
  br i1 %47, label %67, label %48

48:                                               ; preds = %42
  %49 = and i32 %45, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1
  %53 = bitcast %"class.blink::Node"* %52 to %"class.blink::Node"**
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %53, align 8
  %55 = icmp eq %"class.blink::Node"* %54, null
  br i1 %55, label %56, label %64

56:                                               ; preds = %51, %48
  %57 = icmp eq %"class.blink::Node"* %43, %30
  br i1 %57, label %67, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %43, %"class.blink::Node"* nonnull %30) #11
  br label %64

64:                                               ; preds = %62, %58, %51
  %65 = phi %"class.blink::Node"* [ %63, %62 ], [ %60, %58 ], [ %54, %51 ]
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %67, label %42

67:                                               ; preds = %42, %56, %64, %32, %37
  %68 = phi %"class.blink::Node"* [ null, %37 ], [ null, %32 ], [ null, %56 ], [ %43, %42 ], [ null, %64 ]
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %125, label %70

70:                                               ; preds = %100, %67
  %71 = phi %"class.blink::Node"* [ %68, %67 ], [ %101, %100 ]
  %72 = bitcast %"class.blink::Node"* %71 to %"class.blink::SVGElement"*
  %73 = call %"class.blink::SVGElement"* @_ZNK5blink10SVGElement20CorrespondingElementEv(%"class.blink::SVGElement"* nonnull %72) #11
  %74 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.blink::SVGElement"* %73 to %"class.blink::EventTargetData"* (%"class.blink::Node"*)***
  %76 = load %"class.blink::EventTargetData"* (%"class.blink::Node"*)**, %"class.blink::EventTargetData"* (%"class.blink::Node"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::Node"*)*, %"class.blink::EventTargetData"* (%"class.blink::Node"*)** %76, i64 25
  %78 = load %"class.blink::EventTargetData"* (%"class.blink::Node"*)*, %"class.blink::EventTargetData"* (%"class.blink::Node"*)** %77, align 8
  %79 = call %"class.blink::EventTargetData"* %78(%"class.blink::Node"* %74) #11
  %80 = icmp eq %"class.blink::EventTargetData"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %79, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 0
  call void @_ZN5blink16EventListenerMap46CopyEventListenersNotCreatedFromMarkupToTargetEPNS_11EventTargetE(%"class.blink::EventListenerMap"* %82, %"class.blink::EventTarget"* %83) #11
  br label %84

84:                                               ; preds = %70, %81
  call void @_ZN5blink10SVGElement20MapInstanceToElementEPS0_(%"class.blink::SVGElement"* %73, %"class.blink::SVGElement"* nonnull %72) #11
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 1
  %86 = bitcast %"class.blink::Node"* %85 to %"class.blink::Node"**
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %89, label %98

89:                                               ; preds = %84
  %90 = icmp eq %"class.blink::Node"* %71, %30
  br i1 %90, label %125, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 5, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %95, label %98

95:                                               ; preds = %91
  %96 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %71, %"class.blink::Node"* %30) #11
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %125, label %98

98:                                               ; preds = %95, %91, %84
  %99 = phi %"class.blink::Node"* [ %87, %84 ], [ %93, %91 ], [ %96, %95 ]
  br label %100

100:                                              ; preds = %98, %122
  %101 = phi %"class.blink::Node"* [ %123, %122 ], [ %99, %98 ]
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 48
  %105 = icmp eq i32 %104, 32
  br i1 %105, label %70, label %106

106:                                              ; preds = %100
  %107 = and i32 %103, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %101, i64 1
  %111 = bitcast %"class.blink::Node"* %110 to %"class.blink::Node"**
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %114, label %122

114:                                              ; preds = %109, %106
  %115 = icmp eq %"class.blink::Node"* %101, %30
  br i1 %115, label %125, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %101, i64 0, i32 5, i32 0, i32 0
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %117, align 8
  %119 = icmp eq %"class.blink::Node"* %118, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %101, %"class.blink::Node"* %30) #11
  br label %122

122:                                              ; preds = %120, %116, %109
  %123 = phi %"class.blink::Node"* [ %121, %120 ], [ %118, %116 ], [ %112, %109 ]
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %125, label %100

125:                                              ; preds = %89, %95, %122, %114, %28, %67, %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13SVGUseElement5titleEv(%"class.blink::SVGUseElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %24, %5
  %9 = phi %"class.blink::Node"* [ %3, %5 ], [ %26, %24 ]
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 32
  br i1 %13, label %14, label %24

14:                                               ; preds = %8
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %17 = bitcast %"class.blink::Member"* %16 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, %22
  br i1 %23, label %28, label %24

24:                                               ; preds = %14, %8
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %32, label %8

28:                                               ; preds = %14
  %29 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  %30 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* nonnull %29) #11
  %31 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  br label %66

32:                                               ; preds = %24, %1
  %33 = tail call %"class.blink::SVGElement"* @_ZNK5blink13SVGUseElement12InstanceRootEv(%"class.blink::SVGUseElement"* %0)
  %34 = icmp eq %"class.blink::SVGElement"* %33, null
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %35
  %40 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE, align 8
  %41 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %40, i64 0, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %58, %39
  %43 = phi %"class.blink::Node"* [ %37, %39 ], [ %60, %58 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 32
  br i1 %47, label %48, label %58

48:                                               ; preds = %42
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1, i32 2
  %51 = bitcast %"class.blink::Member"* %50 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %54, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %48, %42
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %66, label %42

62:                                               ; preds = %48
  %63 = bitcast %"class.blink::Node"* %43 to %"class.blink::Element"*
  %64 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* nonnull %63) #11
  %65 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  br label %66

66:                                               ; preds = %58, %35, %32, %62, %28
  %67 = phi i64 [ %65, %62 ], [ %31, %28 ], [ 0, %32 ], [ 0, %35 ], [ 0, %58 ]
  %68 = inttoptr i64 %67 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %68
}

declare %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGElement"* @_ZNK5blink13SVGUseElement18CreateInstanceTreeERNS_10SVGElementE(%"class.blink::SVGUseElement"* nocapture readonly, %"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0
  %4 = tail call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element17CloneWithChildrenEPNS_8DocumentE(%"class.blink::Element"* %3, %"class.blink::Document"* null) #11
  %5 = bitcast %"class.blink::Element"* %4 to %"class.blink::SVGElement"*
  %6 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kSymbolTagE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::SVGElement"* %1, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 32
  br i1 %13, label %14, label %44

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %18 = bitcast %"class.blink::Member"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %44

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = tail call %"class.blink::SVGSVGElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13SVGSVGElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %29) #11
  %31 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %30, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element19CloneAttributesFromERKS0_(%"class.blink::Element"* %31, %"class.blink::Element"* dereferenceable(104) %4) #11
  %32 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %25, %36
  %37 = phi %"class.blink::Node"* [ %39, %36 ], [ %34, %25 ]
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 5, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %32, %"class.blink::Node"* nonnull %37) #11
  %41 = icmp eq %"class.blink::Node"* %39, null
  br i1 %41, label %42, label %36

42:                                               ; preds = %36, %25
  %43 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %30, i64 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %2, %9, %42, %14
  %45 = phi %"class.blink::SVGElement"* [ %43, %42 ], [ %5, %14 ], [ %5, %9 ], [ %5, %2 ]
  tail call fastcc void @_ZN5blinkL33TransferUseWidthAndHeightIfNeededERKNS_13SVGUseElementERNS_10SVGElementERKS3_(%"class.blink::SVGUseElement"* dereferenceable(416) %0, %"class.blink::SVGElement"* dereferenceable(168) %45, %"class.blink::SVGElement"* dereferenceable(168) %1)
  %46 = icmp eq %"class.blink::SVGElement"* %45, null
  br i1 %46, label %137, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %45, i64 0, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %135, %47
  %50 = phi %"class.blink::SVGElement"* [ %45, %47 ], [ %136, %135 ]
  %51 = phi %"class.blink::SVGElement"* [ %1, %47 ], [ %94, %135 ]
  tail call void @_ZN5blink10SVGElement23SetCorrespondingElementEPS0_(%"class.blink::SVGElement"* nonnull %50, %"class.blink::SVGElement"* %51) #11
  %52 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %55, label %65

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %51, i64 0, i32 0, i32 0, i32 0
  %57 = icmp eq %"class.blink::SVGElement"* %51, %1
  br i1 %57, label %92, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %51, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::Node"*, %"class.blink::Node"** %59, align 8
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %56, %"class.blink::Node"* %7) #11
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %62, %58, %49
  %66 = phi %"class.blink::Node"* [ %53, %49 ], [ %60, %58 ], [ %63, %62 ]
  br label %67

67:                                               ; preds = %65, %89
  %68 = phi %"class.blink::Node"* [ %90, %89 ], [ %66, %65 ]
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 48
  %72 = icmp eq i32 %71, 32
  br i1 %72, label %92, label %73

73:                                               ; preds = %67
  %74 = and i32 %70, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 1
  %78 = bitcast %"class.blink::Node"* %77 to %"class.blink::Node"**
  %79 = load %"class.blink::Node"*, %"class.blink::Node"** %78, align 8
  %80 = icmp eq %"class.blink::Node"* %79, null
  br i1 %80, label %81, label %89

81:                                               ; preds = %76, %73
  %82 = icmp eq %"class.blink::Node"* %68, %7
  br i1 %82, label %92, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::Node"*, %"class.blink::Node"** %84, align 8
  %86 = icmp eq %"class.blink::Node"* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %68, %"class.blink::Node"* %7) #11
  br label %89

89:                                               ; preds = %87, %83, %76
  %90 = phi %"class.blink::Node"* [ %88, %87 ], [ %85, %83 ], [ %79, %76 ]
  %91 = icmp eq %"class.blink::Node"* %90, null
  br i1 %91, label %92, label %67

92:                                               ; preds = %89, %81, %67, %62, %55
  %93 = phi %"class.blink::Node"* [ null, %62 ], [ null, %55 ], [ null, %81 ], [ %68, %67 ], [ null, %89 ]
  %94 = bitcast %"class.blink::Node"* %93 to %"class.blink::SVGElement"*
  %95 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %50, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %98, label %108

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %50, i64 0, i32 0, i32 0, i32 0
  %100 = icmp eq %"class.blink::SVGElement"* %50, %45
  br i1 %100, label %137, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %50, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %103 = load %"class.blink::Node"*, %"class.blink::Node"** %102, align 8
  %104 = icmp eq %"class.blink::Node"* %103, null
  br i1 %104, label %105, label %108

105:                                              ; preds = %101
  %106 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %99, %"class.blink::Node"* %48) #11
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %137, label %108

108:                                              ; preds = %105, %101, %92
  %109 = phi %"class.blink::Node"* [ %96, %92 ], [ %103, %101 ], [ %106, %105 ]
  br label %110

110:                                              ; preds = %108, %132
  %111 = phi %"class.blink::Node"* [ %133, %132 ], [ %109, %108 ]
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %111, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 48
  %115 = icmp eq i32 %114, 32
  br i1 %115, label %135, label %116

116:                                              ; preds = %110
  %117 = and i32 %113, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %124, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %111, i64 1
  %121 = bitcast %"class.blink::Node"* %120 to %"class.blink::Node"**
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %121, align 8
  %123 = icmp eq %"class.blink::Node"* %122, null
  br i1 %123, label %124, label %132

124:                                              ; preds = %119, %116
  %125 = icmp eq %"class.blink::Node"* %111, %48
  br i1 %125, label %137, label %126

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %111, i64 0, i32 5, i32 0, i32 0
  %128 = load %"class.blink::Node"*, %"class.blink::Node"** %127, align 8
  %129 = icmp eq %"class.blink::Node"* %128, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %111, %"class.blink::Node"* %48) #11
  br label %132

132:                                              ; preds = %130, %126, %119
  %133 = phi %"class.blink::Node"* [ %131, %130 ], [ %128, %126 ], [ %122, %119 ]
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %137, label %110

135:                                              ; preds = %110
  %136 = bitcast %"class.blink::Node"* %111 to %"class.blink::SVGElement"*
  br label %49

137:                                              ; preds = %98, %105, %124, %132, %44
  %138 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %139 = load %"class.blink::Node"*, %"class.blink::Node"** %138, align 8
  %140 = icmp eq %"class.blink::Node"* %139, null
  br i1 %140, label %225, label %141

141:                                              ; preds = %137, %147
  %142 = phi %"class.blink::Node"* [ %149, %147 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 12
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 5, i32 0, i32 0
  %149 = load %"class.blink::Node"*, %"class.blink::Node"** %148, align 8
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %225, label %141

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %45, i64 0, i32 0, i32 0, i32 0
  br label %153

153:                                              ; preds = %222, %151
  %154 = phi %"class.blink::Node"* [ %142, %151 ], [ %223, %222 ]
  %155 = bitcast %"class.blink::Node"* %154 to %"class.blink::Element"*
  %156 = tail call fastcc zeroext i1 @_ZN5blinkL19IsDisallowedElementERKNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %155) #11
  br i1 %156, label %157, label %189

157:                                              ; preds = %153
  %158 = icmp eq %"class.blink::Node"* %154, %152
  br i1 %158, label %185, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %154, i64 0, i32 5, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %154, %"class.blink::Node"* %152) #11
  %165 = icmp eq %"class.blink::Node"* %164, null
  br i1 %165, label %185, label %166

166:                                              ; preds = %163, %159
  %167 = phi %"class.blink::Node"* [ %161, %159 ], [ %164, %163 ]
  br label %168

168:                                              ; preds = %166, %182
  %169 = phi %"class.blink::Node"* [ %183, %182 ], [ %167, %166 ]
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %169, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = and i32 %171, 12
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %168
  %175 = icmp eq %"class.blink::Node"* %169, %152
  br i1 %175, label %185, label %176

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %169, i64 0, i32 5, i32 0, i32 0
  %178 = load %"class.blink::Node"*, %"class.blink::Node"** %177, align 8
  %179 = icmp eq %"class.blink::Node"* %178, null
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %169, %"class.blink::Node"* %152) #11
  br label %182

182:                                              ; preds = %180, %176
  %183 = phi %"class.blink::Node"* [ %181, %180 ], [ %178, %176 ]
  %184 = icmp eq %"class.blink::Node"* %183, null
  br i1 %184, label %185, label %168

185:                                              ; preds = %182, %174, %168, %163, %157
  %186 = phi %"class.blink::Node"* [ null, %163 ], [ null, %157 ], [ null, %174 ], [ %169, %168 ], [ null, %182 ]
  %187 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %154) #11
  %188 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %187, %"class.blink::Node"* nonnull %154) #11
  br label %222

189:                                              ; preds = %153
  %190 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %154, i64 1
  %191 = bitcast %"class.blink::Node"* %190 to %"class.blink::Node"**
  %192 = load %"class.blink::Node"*, %"class.blink::Node"** %191, align 8
  %193 = icmp eq %"class.blink::Node"* %192, null
  br i1 %193, label %194, label %203

194:                                              ; preds = %189
  %195 = icmp eq %"class.blink::Node"* %154, %152
  br i1 %195, label %225, label %196

196:                                              ; preds = %194
  %197 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %154, i64 0, i32 5, i32 0, i32 0
  %198 = load %"class.blink::Node"*, %"class.blink::Node"** %197, align 8
  %199 = icmp eq %"class.blink::Node"* %198, null
  br i1 %199, label %200, label %203

200:                                              ; preds = %196
  %201 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %154, %"class.blink::Node"* %152) #11
  %202 = icmp eq %"class.blink::Node"* %201, null
  br i1 %202, label %225, label %203

203:                                              ; preds = %200, %196, %189
  %204 = phi %"class.blink::Node"* [ %192, %189 ], [ %198, %196 ], [ %201, %200 ]
  br label %205

205:                                              ; preds = %203, %219
  %206 = phi %"class.blink::Node"* [ %220, %219 ], [ %204, %203 ]
  %207 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = and i32 %208, 12
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %222, label %211

211:                                              ; preds = %205
  %212 = icmp eq %"class.blink::Node"* %206, %152
  br i1 %212, label %225, label %213

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 0, i32 5, i32 0, i32 0
  %215 = load %"class.blink::Node"*, %"class.blink::Node"** %214, align 8
  %216 = icmp eq %"class.blink::Node"* %215, null
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  %218 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %206, %"class.blink::Node"* %152) #11
  br label %219

219:                                              ; preds = %217, %213
  %220 = phi %"class.blink::Node"* [ %218, %217 ], [ %215, %213 ]
  %221 = icmp eq %"class.blink::Node"* %220, null
  br i1 %221, label %225, label %205

222:                                              ; preds = %205, %185
  %223 = phi %"class.blink::Node"* [ %186, %185 ], [ %206, %205 ]
  %224 = icmp eq %"class.blink::Node"* %223, null
  br i1 %224, label %225, label %153

225:                                              ; preds = %147, %194, %200, %222, %211, %219, %137
  ret %"class.blink::SVGElement"* %45
}

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element17CloneWithChildrenEPNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink7Element19CloneAttributesFromERKS0_(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL19IsDisallowedElementERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) unnamed_addr #0 {
  %2 = alloca [20 x %"class.blink::QualifiedName"], align 8
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 48
  %6 = icmp eq i32 %5, 32
  br i1 %6, label %7, label %383

7:                                                ; preds = %1
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %315, !prof !15

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %315, label %13

13:                                               ; preds = %10
  %14 = bitcast [20 x %"class.blink::QualifiedName"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %14) #11
  %15 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 0
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777216
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #11
  br label %28

28:                                               ; preds = %26, %21, %13
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kCircleTagE to %"class.blink::QualifiedName"**), align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 1, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %31, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %31, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 16777216
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #11
  br label %41

41:                                               ; preds = %39, %34, %28
  %42 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kDescTagE to %"class.blink::QualifiedName"**), align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 2, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %44, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %44, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 16777216
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #11
  br label %54

54:                                               ; preds = %52, %47, %41
  %55 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kEllipseTagE to %"class.blink::QualifiedName"**), align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 3, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %57, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %59 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %57, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 16777216
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %66) #11
  br label %67

67:                                               ; preds = %65, %60, %54
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names5kGTagE to %"class.blink::QualifiedName"**), align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 4, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %70, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %72 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %70, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 16777216
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #11
  br label %80

80:                                               ; preds = %78, %73, %67
  %81 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kImageTagE to %"class.blink::QualifiedName"**), align 8
  %82 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 5, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %83, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %85 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %83, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 16777216
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %92) #11
  br label %93

93:                                               ; preds = %91, %86, %80
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kLineTagE to %"class.blink::QualifiedName"**), align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %97 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 6, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %96, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %96, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 16777216
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %96, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #11
  br label %106

106:                                              ; preds = %104, %99, %93
  %107 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kMetadataTagE to %"class.blink::QualifiedName"**), align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %108, align 8
  %110 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 7, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %109, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %109, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %109, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %118) #11
  br label %119

119:                                              ; preds = %117, %112, %106
  %120 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kPathTagE to %"class.blink::QualifiedName"**), align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 8, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %122, %"class.blink::QualifiedName::QualifiedNameImpl"** %123, align 8
  %124 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %122, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 16777216
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %131) #11
  br label %132

132:                                              ; preds = %130, %125, %119
  %133 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kPolygonTagE to %"class.blink::QualifiedName"**), align 8
  %134 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %133, i64 0, i32 0, i32 0
  %135 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %134, align 8
  %136 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 9, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %135, %"class.blink::QualifiedName::QualifiedNameImpl"** %136, align 8
  %137 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %135, null
  br i1 %137, label %145, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = and i32 %140, 16777216
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %135, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %144) #11
  br label %145

145:                                              ; preds = %143, %138, %132
  %146 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kPolylineTagE to %"class.blink::QualifiedName"**), align 8
  %147 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %147, align 8
  %149 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 10, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %148, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %150 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %148, null
  br i1 %150, label %158, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 16777216
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %148, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %157) #11
  br label %158

158:                                              ; preds = %156, %151, %145
  %159 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kRectTagE to %"class.blink::QualifiedName"**), align 8
  %160 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %160, align 8
  %162 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 11, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %161, %"class.blink::QualifiedName::QualifiedNameImpl"** %162, align 8
  %163 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %161, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %161, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = and i32 %166, 16777216
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %161, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %170) #11
  br label %171

171:                                              ; preds = %169, %164, %158
  %172 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE to %"class.blink::QualifiedName"**), align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %172, i64 0, i32 0, i32 0
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %175 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 12, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %174, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8
  %176 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %174, null
  br i1 %176, label %184, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, 16777216
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %183) #11
  br label %184

184:                                              ; preds = %182, %177, %171
  %185 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kSwitchTagE to %"class.blink::QualifiedName"**), align 8
  %186 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %186, align 8
  %188 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 13, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %187, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %189 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %187, null
  br i1 %189, label %197, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %187, i64 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = and i32 %192, 16777216
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %187, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %196) #11
  br label %197

197:                                              ; preds = %195, %190, %184
  %198 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kSymbolTagE to %"class.blink::QualifiedName"**), align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %199, align 8
  %201 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 14, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %200, %"class.blink::QualifiedName::QualifiedNameImpl"** %201, align 8
  %202 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %200, null
  br i1 %202, label %210, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = and i32 %205, 16777216
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %209) #11
  br label %210

210:                                              ; preds = %208, %203, %197
  %211 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kTextTagE to %"class.blink::QualifiedName"**), align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %211, i64 0, i32 0, i32 0
  %213 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %212, align 8
  %214 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 15, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %213, %"class.blink::QualifiedName::QualifiedNameImpl"** %214, align 8
  %215 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %213, null
  br i1 %215, label %223, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %213, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  %219 = and i32 %218, 16777216
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %213, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %222) #11
  br label %223

223:                                              ; preds = %221, %216, %210
  %224 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kTextPathTagE to %"class.blink::QualifiedName"**), align 8
  %225 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %224, i64 0, i32 0, i32 0
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %227 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 16, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %226, %"class.blink::QualifiedName::QualifiedNameImpl"** %227, align 8
  %228 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %226, null
  br i1 %228, label %236, label %229

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, 16777216
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %235) #11
  br label %236

236:                                              ; preds = %234, %229, %223
  %237 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %237, i64 0, i32 0, i32 0
  %239 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %238, align 8
  %240 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 17, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %239, %"class.blink::QualifiedName::QualifiedNameImpl"** %240, align 8
  %241 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %239, null
  br i1 %241, label %249, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = and i32 %244, 16777216
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %239, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %248) #11
  br label %249

249:                                              ; preds = %247, %242, %236
  %250 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTSpanTagE to %"class.blink::QualifiedName"**), align 8
  %251 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %250, i64 0, i32 0, i32 0
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %251, align 8
  %253 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 18, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %252, %"class.blink::QualifiedName::QualifiedNameImpl"** %253, align 8
  %254 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %252, null
  br i1 %254, label %262, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = and i32 %257, 16777216
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %261) #11
  br label %262

262:                                              ; preds = %260, %255, %249
  %263 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE to %"class.blink::QualifiedName"**), align 8
  %264 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %263, i64 0, i32 0, i32 0
  %265 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %264, align 8
  %266 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 19, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %265, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %267 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %265, null
  br i1 %267, label %275, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %265, i64 0, i32 1
  %270 = load i32, i32* %269, align 4
  %271 = and i32 %270, 16777216
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %265, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %274) #11
  br label %275

275:                                              ; preds = %262, %268, %273
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), i32 20) #11
  %276 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* nonnull dereferenceable(8) %15, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %15) #11
  %277 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 1
  %278 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %277, %"class.blink::QualifiedName"* dereferenceable(8) %277) #11
  %279 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 2
  %280 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %279, %"class.blink::QualifiedName"* dereferenceable(8) %279) #11
  %281 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 3
  %282 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %281, %"class.blink::QualifiedName"* dereferenceable(8) %281) #11
  %283 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 4
  %284 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %283, %"class.blink::QualifiedName"* dereferenceable(8) %283) #11
  %285 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 5
  %286 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %285, %"class.blink::QualifiedName"* dereferenceable(8) %285) #11
  %287 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 6
  %288 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %287, %"class.blink::QualifiedName"* dereferenceable(8) %287) #11
  %289 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 7
  %290 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %289, %"class.blink::QualifiedName"* dereferenceable(8) %289) #11
  %291 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 8
  %292 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %291, %"class.blink::QualifiedName"* dereferenceable(8) %291) #11
  %293 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 9
  %294 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %293, %"class.blink::QualifiedName"* dereferenceable(8) %293) #11
  %295 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 10
  %296 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %295, %"class.blink::QualifiedName"* dereferenceable(8) %295) #11
  %297 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 11
  %298 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %297, %"class.blink::QualifiedName"* dereferenceable(8) %297) #11
  %299 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 12
  %300 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %299, %"class.blink::QualifiedName"* dereferenceable(8) %299) #11
  %301 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 13
  %302 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %301, %"class.blink::QualifiedName"* dereferenceable(8) %301) #11
  %303 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 14
  %304 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %303, %"class.blink::QualifiedName"* dereferenceable(8) %303) #11
  %305 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 15
  %306 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %305, %"class.blink::QualifiedName"* dereferenceable(8) %305) #11
  %307 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 16
  %308 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %307, %"class.blink::QualifiedName"* dereferenceable(8) %307) #11
  %309 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 17
  %310 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %309, %"class.blink::QualifiedName"* dereferenceable(8) %309) #11
  %311 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 18
  %312 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %311, %"class.blink::QualifiedName"* dereferenceable(8) %311) #11
  %313 = getelementptr inbounds [20 x %"class.blink::QualifiedName"], [20 x %"class.blink::QualifiedName"]* %2, i64 0, i64 19
  %314 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.WTF::HashTable.2950"*), %"class.blink::QualifiedName"* dereferenceable(8) %313, %"class.blink::QualifiedName"* dereferenceable(8) %313) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %313) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %311) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %309) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %307) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %305) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %303) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %301) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %299) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %297) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %295) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %293) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %291) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %289) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %287) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %285) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %283) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %281) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %279) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %277) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %14) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags) #11
  br label %315

315:                                              ; preds = %10, %275, %7
  %316 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 2
  %317 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags to %"class.blink::QualifiedName"**), align 8
  %318 = icmp eq %"class.blink::QualifiedName"* %317, null
  br i1 %318, label %380, label %319

319:                                              ; preds = %315
  %320 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL19IsDisallowedElementERKNS_7ElementEE22s_allowed_element_tags, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %321 = add i32 %320, -1
  %322 = zext i32 %321 to i64
  %323 = call i32 @_ZN5blink26SVGAttributeHashTranslator7GetHashERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %316) #11
  %324 = and i32 %323, %321
  %325 = zext i32 %324 to i64
  %326 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %317, i64 %325
  %327 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %328 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %326, i64 0, i32 0, i32 0
  %329 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %327, i64 0, i32 0, i32 0
  %331 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %330, align 8
  %332 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %329, %331
  br i1 %332, label %380, label %333

333:                                              ; preds = %319
  %334 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %316, i64 0, i32 0, i32 0
  %335 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %335, i64 0, i32 3, i32 0, i32 0, i32 0
  %337 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %335, i64 0, i32 4, i32 0, i32 0, i32 0
  %338 = xor i32 %323, -1
  %339 = lshr i32 %323, 23
  %340 = add i32 %339, %338
  %341 = shl i32 %340, 12
  %342 = xor i32 %341, %340
  %343 = lshr i32 %342, 7
  %344 = xor i32 %343, %342
  %345 = shl i32 %344, 2
  %346 = xor i32 %345, %344
  %347 = lshr i32 %346, 20
  %348 = xor i32 %347, %346
  %349 = or i32 %348, 1
  %350 = zext i32 %349 to i64
  br label %351

351:                                              ; preds = %371, %333
  %352 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %329, %333 ], [ %378, %371 ]
  %353 = phi %"class.blink::QualifiedName"* [ %326, %333 ], [ %376, %371 ]
  %354 = phi i64 [ %325, %333 ], [ %375, %371 ]
  %355 = phi i64 [ 0, %333 ], [ %373, %371 ]
  %356 = bitcast %"class.blink::QualifiedName"* %353 to i8**
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, inttoptr (i64 -1 to i8*)
  br i1 %358, label %371, label %359

359:                                              ; preds = %351
  %360 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %352, %335
  br i1 %360, label %380, label %361

361:                                              ; preds = %359
  %362 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %352, i64 0, i32 3, i32 0, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %363, %364
  br i1 %365, label %366, label %371

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %352, i64 0, i32 4, i32 0, i32 0, i32 0
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %367, align 8
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %368, %369
  br i1 %370, label %380, label %371

371:                                              ; preds = %366, %361, %351
  %372 = icmp eq i64 %355, 0
  %373 = select i1 %372, i64 %350, i64 %355
  %374 = add i64 %373, %354
  %375 = and i64 %374, %322
  %376 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %317, i64 %375
  %377 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %376, i64 0, i32 0, i32 0
  %378 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %377, align 8
  %379 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %378, %331
  br i1 %379, label %380, label %351

380:                                              ; preds = %359, %366, %371, %315, %319
  %381 = phi %"class.blink::QualifiedName"* [ null, %315 ], [ null, %319 ], [ %353, %359 ], [ %353, %366 ], [ null, %371 ]
  %382 = icmp eq %"class.blink::QualifiedName"* %381, null
  br label %383

383:                                              ; preds = %1, %380
  %384 = phi i1 [ %382, %380 ], [ true, %1 ]
  ret i1 %384
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGUseElement22HasCycleUseReferencingERKNS_13ContainerNodeERKNS_10SVGElementE(%"class.blink::SVGUseElement"* readnone, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::SVGElement"* readonly dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0
  %5 = icmp eq %"class.blink::SVGElement"* %4, %2
  br i1 %5, label %201, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %67, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %10
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %23 = bitcast %"class.blink::Member.14"* %22 to %"class.blink::Attribute"**
  %24 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %21, i64 0, i32 2, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  br label %32

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %29 = bitcast %"class.blink::ElementData"* %28 to %"class.blink::Attribute"*
  %30 = lshr i32 %17, 1
  %31 = and i32 %30, 268435455
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi %"class.blink::Attribute"* [ %29, %27 ], [ %24, %20 ]
  %34 = phi i32 [ %31, %27 ], [ %26, %20 ]
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %33, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %65, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %58, %38
  %44 = phi %"class.blink::Attribute"* [ %33, %38 ], [ %59, %58 ]
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %46, %40
  br i1 %47, label %61, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %55, %56
  br i1 %57, label %61, label %58

58:                                               ; preds = %53, %48
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 1
  %60 = icmp eq %"class.blink::Attribute"* %59, %36
  br i1 %60, label %65, label %43

61:                                               ; preds = %53, %43
  %62 = icmp eq %"class.blink::Attribute"* %44, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %44, i64 0, i32 1
  br label %69

65:                                               ; preds = %58, %61, %32
  %66 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %69

67:                                               ; preds = %10, %6
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %69

69:                                               ; preds = %63, %65, %67
  %70 = phi %"class.WTF::AtomicString"* [ %68, %67 ], [ %66, %65 ], [ %64, %63 ]
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #11
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  tail call void @llvm.trap() #11
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %69, %74, %89
  %92 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %93 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %92) #11
  %94 = icmp eq %"class.blink::Element"* %93, null
  br i1 %94, label %186, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %93, i64 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 48
  %99 = icmp eq i32 %98, 32
  br i1 %99, label %100, label %186

100:                                              ; preds = %95
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %104 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  br label %105

105:                                              ; preds = %181, %100
  %106 = phi %"class.blink::Element"* [ %93, %100 ], [ %179, %181 ]
  %107 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %106, i64 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %107, align 8
  %109 = icmp eq %"class.blink::ElementData"* %108, null
  br i1 %109, label %177, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %177, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %108, i64 0, i32 0, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %114
  %120 = bitcast %"class.blink::ElementData"* %108 to %"class.blink::UniqueElementData"*
  %121 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %108, i64 1, i32 1
  %122 = bitcast %"class.blink::Member.14"* %121 to %"class.blink::Attribute"**
  %123 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %120, i64 0, i32 2, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  br label %131

126:                                              ; preds = %114
  %127 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %108, i64 1
  %128 = bitcast %"class.blink::ElementData"* %127 to %"class.blink::Attribute"*
  %129 = lshr i32 %116, 1
  %130 = and i32 %129, 268435455
  br label %131

131:                                              ; preds = %126, %119
  %132 = phi %"class.blink::Attribute"* [ %128, %126 ], [ %123, %119 ]
  %133 = phi i32 [ %130, %126 ], [ %125, %119 ]
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %132, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %163, label %137

137:                                              ; preds = %131
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %141

141:                                              ; preds = %156, %137
  %142 = phi %"class.blink::Attribute"* [ %132, %137 ], [ %157, %156 ]
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %143, align 8
  %145 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %144, %138
  br i1 %145, label %159, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %148, %149
  br i1 %150, label %151, label %156

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %153, %154
  br i1 %155, label %159, label %156

156:                                              ; preds = %151, %146
  %157 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 1
  %158 = icmp eq %"class.blink::Attribute"* %157, %135
  br i1 %158, label %163, label %141

159:                                              ; preds = %151, %141
  %160 = icmp eq %"class.blink::Attribute"* %142, null
  %161 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 0, i32 1
  %162 = select i1 %160, %"class.WTF::AtomicString"* %103, %"class.WTF::AtomicString"* %161
  br label %163

163:                                              ; preds = %156, %159, %131
  %164 = phi %"class.WTF::AtomicString"* [ %103, %131 ], [ %162, %159 ], [ %103, %156 ]
  %165 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, %72
  br i1 %167, label %168, label %177

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %106, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %170 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %170, i64 0, i32 2, i32 0, i32 0
  %172 = load %"class.blink::Document"*, %"class.blink::Document"** %171, align 8
  %173 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %104, align 8
  %174 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %173, i64 0, i32 2, i32 0, i32 0
  %175 = load %"class.blink::Document"*, %"class.blink::Document"** %174, align 8
  %176 = icmp eq %"class.blink::Document"* %172, %175
  br i1 %176, label %186, label %177

177:                                              ; preds = %110, %105, %168, %163
  %178 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %106, i64 0, i32 0, i32 0
  %179 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %178) #11
  %180 = icmp eq %"class.blink::Element"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %179, i64 0, i32 0, i32 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = and i32 %183, 48
  %185 = icmp eq i32 %184, 32
  br i1 %185, label %105, label %186

186:                                              ; preds = %181, %177, %168, %95, %91
  %187 = phi i1 [ false, %95 ], [ false, %91 ], [ false, %177 ], [ false, %181 ], [ true, %168 ]
  br i1 %73, label %201, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #11
  br label %201

201:                                              ; preds = %200, %197, %186, %3
  %202 = phi i1 [ true, %3 ], [ %187, %186 ], [ %187, %197 ], [ %187, %200 ]
  ret i1 %202
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink16EventListenerMap46CopyEventListenersNotCreatedFromMarkupToTargetEPNS_11EventTargetE(%"class.blink::EventListenerMap"*, %"class.blink::EventTarget"*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement20MapInstanceToElementEPS0_(%"class.blink::SVGElement"*, %"class.blink::SVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink13SVGUseElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::SVGUseElement"*, %"class.blink::ComputedStyle"* nocapture readnone dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 200) #11
  %5 = bitcast i8* %4 to %"class.blink::LayoutSVGTransformableContainer"*
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink31LayoutSVGTransformableContainerC1EPNS_18SVGGraphicsElementE(%"class.blink::LayoutSVGTransformableContainer"* %5, %"class.blink::SVGGraphicsElement"* %6) #11
  %7 = bitcast i8* %4 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %7
}

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink31LayoutSVGTransformableContainerC1EPNS_18SVGGraphicsElementE(%"class.blink::LayoutSVGTransformableContainer"*, %"class.blink::SVGGraphicsElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13SVGUseElement10ToClipPathEv(%"class.blink::Path"* noalias sret, %"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Path", align 8
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = tail call %"class.blink::SVGGraphicsElement"* @_ZNK5blink13SVGUseElement39VisibleTargetGraphicsElementForClippingEv(%"class.blink::SVGUseElement"* %1)
  %6 = icmp eq %"class.blink::SVGGraphicsElement"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %5, i64 0, i32 0
  %9 = bitcast %"class.blink::SVGGraphicsElement"* %5 to i1 (%"class.blink::SVGElement"*)***
  %10 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %10, i64 156
  %12 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::SVGElement"* %8) #11
  br i1 %13, label %15, label %14

14:                                               ; preds = %7, %2
  tail call void @_ZN5blink4PathC1Ev(%"class.blink::Path"* %0) #11
  br label %44

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::SVGGraphicsElement"* %5 to %"class.blink::SVGGeometryElement"*
  %17 = bitcast %"class.blink::Path"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = bitcast %"class.blink::Path"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink18SVGGeometryElement10ToClipPathEv(%"class.blink::Path"* nonnull sret %3, %"class.blink::SVGGeometryElement"* nonnull %16) #11
  %19 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -1, i64 48, i1 false)
  %22 = load i32, i32* %20, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %24, label %30, label %26

26:                                               ; preds = %15
  %27 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  br label %32

30:                                               ; preds = %15
  %31 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRenderingData"**
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi %"class.blink::NodeRenderingData"** [ %29, %26 ], [ %31, %30 ]
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 1
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = bitcast %"class.blink::LayoutObject"* %36 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %38 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %38, i64 41
  %40 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %39, align 8
  call void %40(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::LayoutObject"* %36) #11
  %41 = call zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"* nonnull %4) #11
  br i1 %41, label %43, label %42

42:                                               ; preds = %32
  call void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"* nonnull %3, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %4) #11
  br label %43

43:                                               ; preds = %42, %32
  call void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"* %0, %"class.blink::Path"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #11
  call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  br label %44

44:                                               ; preds = %43, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGGraphicsElement"* @_ZNK5blink13SVGUseElement39VisibleTargetGraphicsElementForClippingEv(%"class.blink::SVGUseElement"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::SVGElement"* @_ZNK5blink13SVGUseElement12InstanceRootEv(%"class.blink::SVGUseElement"* %0)
  %3 = icmp eq %"class.blink::SVGElement"* %2, null
  br i1 %3, label %72, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::SVGElement"* %2 to i1 (%"class.blink::SVGElement"*)***
  %6 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %6, i64 157
  %8 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::SVGElement"* nonnull %2) #11
  %10 = bitcast %"class.blink::SVGElement"* %2 to %"class.blink::SVGGraphicsElement"*
  br i1 %9, label %11, label %72

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 32
  br i1 %15, label %16, label %72

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kPathTagE, align 8
  %19 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %22 = bitcast %"class.blink::Member"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %71, label %29

29:                                               ; preds = %16
  %30 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kRectTagE, align 8
  %31 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %25, %34
  br i1 %35, label %71, label %36

36:                                               ; preds = %29
  %37 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kCircleTagE, align 8
  %38 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %25, %41
  br i1 %42, label %71, label %43

43:                                               ; preds = %36
  %44 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kEllipseTagE, align 8
  %45 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %25, %48
  br i1 %49, label %71, label %50

50:                                               ; preds = %43
  %51 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kPolygonTagE, align 8
  %52 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %25, %55
  br i1 %56, label %71, label %57

57:                                               ; preds = %50
  %58 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names12kPolylineTagE, align 8
  %59 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %25, %62
  br i1 %63, label %71, label %64

64:                                               ; preds = %57
  %65 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kTextTagE, align 8
  %66 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %25, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %16, %29, %36, %43, %50, %57, %64
  br label %72

72:                                               ; preds = %4, %11, %1, %71, %64
  %73 = phi %"class.blink::SVGGraphicsElement"* [ %10, %71 ], [ null, %64 ], [ null, %4 ], [ null, %1 ], [ null, %11 ]
  ret %"class.blink::SVGGraphicsElement"* %73
}

declare void @_ZN5blink4PathC1Ev(%"class.blink::Path"*) unnamed_addr #1

declare void @_ZNK5blink18SVGGeometryElement10ToClipPathEv(%"class.blink::Path"* sret, %"class.blink::SVGGeometryElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink15AffineTransform10IsIdentityEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

declare void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN5blink4PathC1ERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #3

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::HeapHashSet"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGUseElement22SelfHasRelativeLengthsEv(%"class.blink::SVGUseElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %5) #11
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %11) #11
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %15, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %17) #11
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %21, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %23) #11
  br label %25

25:                                               ; preds = %19, %13, %7, %1
  %26 = phi i1 [ true, %13 ], [ true, %7 ], [ true, %1 ], [ %24, %19 ]
  ret i1 %26
}

declare zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN5blink13SVGUseElement7GetBBoxEv(%"class.blink::SVGUseElement"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = bitcast %"class.blink::LayoutObject"** %16 to %"class.blink::LayoutSVGTransformableContainer"**
  %18 = load %"class.blink::LayoutSVGTransformableContainer"*, %"class.blink::LayoutSVGTransformableContainer"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutSVGTransformableContainer", %"class.blink::LayoutSVGTransformableContainer"* %18, i64 0, i32 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::LayoutSVGTransformableContainer", %"class.blink::LayoutSVGTransformableContainer"* %18, i64 0, i32 0, i32 1, i32 1
  %24 = bitcast %"class.blink::FloatRect"* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutSVGTransformableContainer", %"class.blink::LayoutSVGTransformableContainer"* %18, i64 0, i32 0, i32 1, i32 1, i32 1
  %27 = bitcast %"class.blink::FloatSize"* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = getelementptr inbounds %"class.blink::LayoutSVGTransformableContainer", %"class.blink::LayoutSVGTransformableContainer"* %18, i64 0, i32 3, i32 0
  %30 = bitcast float* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  %32 = fadd <2 x float> %25, %31
  br label %33

33:                                               ; preds = %13, %22
  %34 = phi <2 x float> [ %28, %22 ], [ zeroinitializer, %13 ]
  %35 = phi <2 x float> [ %32, %22 ], [ zeroinitializer, %13 ]
  %36 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %35, 0
  %37 = insertvalue { <2 x float>, <2 x float> } %36, <2 x float> %34, 1
  ret { <2 x float>, <2 x float> } %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement20DispatchPendingEventEv(%"class.blink::SVGUseElement"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #11
  %5 = bitcast i8* %4 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3, i32 1, i32 1, i32 1) #11
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %2, %"class.blink::Event"* dereferenceable(104) %5) #11
  ret void
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGUseElement14NotifyFinishedEPNS_8ResourceE(%"class.blink::SVGUseElement"*, %"class.blink::Resource"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.584", align 8
  %5 = alloca %"class.blink::Persistent.2753", align 8
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %135, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = tail call zeroext i1 @_ZNK5blink4Node16InActiveDocumentEv(%"class.blink::Node"* %11) #11
  br i1 %12, label %13, label %22

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 11
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  store i8 1, i8* %14, align 2
  %18 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  tail call void @_ZN5blink8Document27ScheduleUseShadowTreeUpdateERNS_13SVGUseElementE(%"class.blink::Document"* %21, %"class.blink::SVGUseElement"* dereferenceable(416) %0) #11
  br label %22

22:                                               ; preds = %10, %13, %17
  %23 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = add i8 %24, -3
  %26 = icmp ult i8 %25, 2
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::SVGResourceDocumentContent"*, %"class.blink::SVGResourceDocumentContent"** %28, align 8
  %30 = tail call %"class.blink::Document"* @_ZN5blink26SVGResourceDocumentContent11GetDocumentEv(%"class.blink::SVGResourceDocumentContent"* %29) #11
  %31 = icmp eq %"class.blink::Document"* %30, null
  br i1 %31, label %32, label %42

32:                                               ; preds = %27, %22
  %33 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %35 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #11
  %36 = bitcast i8* %35 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %36, %"class.WTF::AtomicString"* dereferenceable(8) %34, i32 1, i32 1, i32 1) #11
  %37 = getelementptr inbounds i8, i8* %35, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %33, %"class.blink::Event"* dereferenceable(104) %36) #11
  br label %135

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 10
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %135

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %135

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  %52 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %55, i64 0, i32 19
  %57 = tail call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %51, %"class.blink::KURL"* dereferenceable(112) %56) #11
  br i1 %57, label %135, label %58

58:                                               ; preds = %50
  store i8 1, i8* %43, align 1
  %59 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %60 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::Document"*, %"class.blink::Document"** %60, align 8
  %62 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %61, i8 zeroext 1) #11
  %63 = bitcast %"class.base::SingleThreadTaskRunner"* %62 to %"class.base::TaskRunner"*
  %64 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 604) #11
  %65 = bitcast %"class.blink::Persistent.2753"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.blink::Persistent.2753", %"class.blink::Persistent.2753"* %5, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::Persistent.2753", %"class.blink::Persistent.2753"* %5, i64 0, i32 0, i32 0
  store %"class.blink::SVGUseElement"* %0, %"class.blink::SVGUseElement"** %67, align 8, !alias.scope !16
  %68 = getelementptr inbounds %"class.blink::Persistent.2753", %"class.blink::Persistent.2753"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %68, align 8, !alias.scope !16
  %69 = ptrtoint %"class.blink::SVGUseElement"* %0 to i64
  switch i64 %69, label %70 [
    i64 0, label %85
    i64 -1, label %85
  ]

70:                                               ; preds = %58
  %71 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !16
  %72 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %72, align 8, !noalias !16
  %74 = icmp eq %"class.blink::PersistentNode"* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %71, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %76) #11
  %77 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %72, align 8
  br label %78

78:                                               ; preds = %75, %70
  %79 = phi %"class.blink::PersistentNode"* [ %77, %75 ], [ %73, %70 ]
  %80 = bitcast %"class.blink::PersistentNode"* %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !16
  %82 = bitcast %"class.blink::PersistentRegion"* %71 to i64*
  store i64 %81, i64* %82, align 8, !noalias !16
  %83 = bitcast %"class.blink::PersistentNode"* %79 to %"class.blink::PersistentBase.2754"**
  store %"class.blink::PersistentBase.2754"* %66, %"class.blink::PersistentBase.2754"** %83, align 8, !noalias !16
  %84 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %79, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %84, align 8
  store %"class.blink::PersistentNode"* %79, %"class.blink::PersistentNode"** %68, align 8, !alias.scope !16
  br label %85

85:                                               ; preds = %58, %58, %78
  %86 = getelementptr inbounds %"class.base::OnceCallback.584", %"class.base::OnceCallback.584"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %86, align 8, !alias.scope !19
  %87 = call i8* @_Znwm(i64 64) #12, !noalias !22
  %88 = bitcast i8* %87 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %88, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink13SVGUseElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !22
  %89 = getelementptr inbounds i8, i8* %87, i64 32
  %90 = bitcast i8* %89 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::SVGUseElement"*)* @_ZN5blink13SVGUseElement20DispatchPendingEventEv to i64), i64 0>, <2 x i64>* %90, align 8, !noalias !22
  %91 = getelementptr inbounds i8, i8* %87, i64 48
  %92 = bitcast %"class.blink::Persistent.2753"* %5 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !22
  %94 = bitcast i8* %91 to i64*
  store i64 %93, i64* %94, align 8, !noalias !22
  %95 = getelementptr inbounds i8, i8* %87, i64 56
  %96 = bitcast i8* %95 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %96, align 8, !noalias !22
  switch i64 %93, label %97 [
    i64 0, label %112
    i64 -1, label %112
  ]

97:                                               ; preds = %85
  %98 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8, !noalias !22
  %99 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %99, align 8, !noalias !22
  %101 = icmp eq %"class.blink::PersistentNode"* %100, null
  br i1 %101, label %102, label %105, !prof !3

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %103) #11, !noalias !22
  %104 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %99, align 8, !noalias !22
  br label %105

105:                                              ; preds = %102, %97
  %106 = phi %"class.blink::PersistentNode"* [ %104, %102 ], [ %100, %97 ]
  %107 = bitcast %"class.blink::PersistentNode"* %106 to i64*
  %108 = load i64, i64* %107, align 8, !noalias !22
  %109 = bitcast %"class.blink::PersistentRegion"* %98 to i64*
  store i64 %108, i64* %109, align 8, !noalias !22
  %110 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %106, i64 0, i32 0
  store i8* %91, i8** %110, align 8, !noalias !22
  %111 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %106, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %111, align 8, !noalias !22
  store %"class.blink::PersistentNode"* %106, %"class.blink::PersistentNode"** %96, align 8, !noalias !22
  br label %112

112:                                              ; preds = %85, %85, %105
  %113 = bitcast %"class.base::OnceCallback.584"* %4 to i8**
  store i8* %87, i8** %113, align 8, !alias.scope !22
  %114 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %63, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.584"* nonnull %4) #11
  %115 = getelementptr inbounds %"class.base::OnceCallback.584", %"class.base::OnceCallback.584"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %115) #11
  %116 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  %117 = icmp eq %"class.blink::PersistentNode"* %116, null
  br i1 %117, label %125, label %118

118:                                              ; preds = %112
  %119 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %120 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %119, i64 0, i32 0, i32 0
  %121 = bitcast %"class.blink::PersistentRegion"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.blink::PersistentNode"* %116 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %116, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %124, align 8
  store %"class.blink::PersistentNode"* %116, %"class.blink::PersistentNode"** %120, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %68, align 8
  br label %125

125:                                              ; preds = %112, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #11
  %126 = icmp eq %"class.base::SingleThreadTaskRunner"* %62, null
  br i1 %126, label %135, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %62, i64 0, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %135

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %128, i64 -2
  %134 = bitcast %"class.base::RefCountedThreadSafe.576"* %133 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %134) #11
  br label %135

135:                                              ; preds = %50, %2, %46, %132, %127, %125, %42, %32
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.584"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn216_N5blink13SVGUseElement14NotifyFinishedEPNS_8ResourceE(%"class.blink::SVGUseElement"*, %"class.blink::Resource"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::SVGURIReference"* %3 to %"class.blink::SVGUseElement"*
  tail call void @_ZN5blink13SVGUseElement14NotifyFinishedEPNS_8ResourceE(%"class.blink::SVGUseElement"* %4, %"class.blink::Resource"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13SVGUseElement9DebugNameEv(%"class.blink::SVGUseElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #11
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn216_NK5blink13SVGUseElement9DebugNameEv(%"class.blink::SVGUseElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #11
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13SVGUseElement18GetWrapperTypeInfoEv(%"class.blink::SVGUseElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13SVGUseElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.2779"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink10SVGElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGElement"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18SVGGraphicsElement13SupportsFocusEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"* %2) #11
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink10SVGElement22HasFocusEventListenersEv(%"class.blink::SVGElement"* %5) #11
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ true, %1 ], [ %6, %4 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink18SVGGraphicsElement29LocalCoordinateSpaceTransformENS_10SVGElement8CTMScopeE(%"class.blink::AffineTransform"* sret, %"class.blink::SVGGraphicsElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18SVGGraphicsElement20IsSVGGraphicsElementEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18SVGGraphicsElement7IsValidEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"* %2) #11
  ret i1 %3
}

declare %"class.blink::AffineTransform"* @_ZN5blink18SVGGraphicsElement22AnimateMotionTransformEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13SVGUseElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGUseElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 19
  %12 = tail call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %6, %"class.blink::KURL"* dereferenceable(112) %11) #11
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %0, i64 0, i32 10
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp ne i8 %15, 0
  br label %17

17:                                               ; preds = %5, %1, %13
  %18 = phi i1 [ true, %5 ], [ %16, %13 ], [ true, %1 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient20IsFontResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient19IsRawResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #11
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !3

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #11
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.343"*, %"struct.std::__1::pair.343"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.343"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceClient"*
  %4 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::ResourceClient"* %3)
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %3, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #11
  br label %6

6:                                                ; preds = %2, %5
  %7 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %7
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.343"*, %"struct.std::__1::pair.343"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #11
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.343"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.343"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.343"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !27

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.343"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.343"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.343"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.343"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #11
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.343"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !27

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.343"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #11
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.343"*, %"struct.std::__1::pair.343"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.343"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.343"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.343"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !27

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.343", %"struct.std::__1::pair.343"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.343"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.343"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.343"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.343"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #11
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.343"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ResourceClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ResourceClient"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #11, !range !28
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #1

declare void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"*, i1 zeroext, %"class.blink::SVGElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink23SVGAnimatedPropertyBase11IsSpecifiedEv(%"class.blink::SVGAnimatedPropertyBase"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9SVGLength13ValueAsStringEv(%"class.blink::SVGLength"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element16ClosedShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement23SetCorrespondingElementEPS0_(%"class.blink::SVGElement"*, %"class.blink::SVGElement"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2950"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::QualifiedName"*
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %45, %26
  %34 = phi i64 [ 0, %26 ], [ %46, %45 ]
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 %34, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %37 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 16777216
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #11
  br label %45

45:                                               ; preds = %43, %38, %33
  %46 = add nuw nsw i64 %34, 1
  %47 = icmp eq i64 %46, %27
  br i1 %47, label %48, label %33

48:                                               ; preds = %45
  %49 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.2950"* %0, %"class.blink::QualifiedName"* %30, i32 %17, %"class.blink::QualifiedName"* null) #11
  br label %50

50:                                               ; preds = %48, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.2950"*, %"class.blink::QualifiedName"*, i32, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2950", align 8
  %6 = bitcast %"class.WTF::HashTable.2950"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2950"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::QualifiedName"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2950"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2950"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %25 = ptrtoint %"class.blink::QualifiedName"* %24 to i64
  br label %59

26:                                               ; preds = %93
  %27 = bitcast %"class.WTF::HashTable.2950"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.2950"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %94, %26 ]
  %35 = phi %"class.blink::QualifiedName"* [ null, %16 ], [ %97, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %95, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"class.blink::QualifiedName"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %50, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %50 ]
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 %44
  %46 = bitcast %"class.blink::QualifiedName"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %45) #11
  br label %50

50:                                               ; preds = %49, %43
  %51 = add nuw nsw i64 %44, 1
  %52 = icmp eq i64 %51, %42
  br i1 %52, label %53, label %43

53:                                               ; preds = %50, %39
  %54 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #11
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %30, %53
  %56 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, -2147483648
  store i32 %58, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"class.blink::QualifiedName"* %35

59:                                               ; preds = %21, %93
  %60 = phi i64 [ %25, %21 ], [ %94, %93 ]
  %61 = phi i32 [ %13, %21 ], [ %95, %93 ]
  %62 = phi %"class.blink::QualifiedName"* [ %24, %21 ], [ %96, %93 ]
  %63 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %97, %93 ]
  %64 = phi i32 [ 0, %21 ], [ %98, %93 ]
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 %65
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %69
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %72 = or i1 %71, %70
  br i1 %72, label %93, label %73

73:                                               ; preds = %59
  %74 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2950"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %66) #11
  %75 = extractvalue { %"class.blink::QualifiedName"*, i8 } %74, 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %75) #11
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %75, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %76, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %76, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777216
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #11
  br label %86

86:                                               ; preds = %73, %79, %84
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 %65
  %89 = icmp eq %"class.blink::QualifiedName"* %88, %3
  %90 = select i1 %89, %"class.blink::QualifiedName"* %75, %"class.blink::QualifiedName"* %63
  %91 = load i32, i32* %12, align 8
  %92 = ptrtoint %"class.blink::QualifiedName"* %87 to i64
  br label %93

93:                                               ; preds = %59, %86
  %94 = phi i64 [ %60, %59 ], [ %92, %86 ]
  %95 = phi i32 [ %61, %59 ], [ %91, %86 ]
  %96 = phi %"class.blink::QualifiedName"* [ %62, %59 ], [ %87, %86 ]
  %97 = phi %"class.blink::QualifiedName"* [ %63, %59 ], [ %90, %86 ]
  %98 = add i32 %64, 1
  %99 = icmp eq i32 %98, %95
  br i1 %99, label %26, label %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.2950"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #11
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %24
  %26 = ptrtoint %"class.blink::QualifiedName"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"class.blink::QualifiedName"* %52, null
  %54 = ptrtoint %"class.blink::QualifiedName"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"class.blink::QualifiedName"* [ null, %33 ], [ %69, %68 ]
  %58 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %29, %33 ], [ %77, %68 ]
  %59 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %60 = phi %"class.blink::QualifiedName"* [ %25, %33 ], [ %74, %68 ]
  %61 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %62 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %63 = bitcast %"class.blink::QualifiedName"* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %34
  br i1 %67, label %79, label %68

68:                                               ; preds = %66, %56
  %69 = phi %"class.blink::QualifiedName"* [ %57, %66 ], [ %60, %56 ]
  %70 = icmp eq i64 %62, 0
  %71 = select i1 %70, i64 %47, i64 %62
  %72 = add i64 %71, %61
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %73
  %75 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  %76 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %66, %50
  %80 = phi i64 [ %55, %50 ], [ %59, %66 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %66 ]
  %82 = inttoptr i64 %80 to %"class.blink::QualifiedName"*
  %83 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %82, 0
  %84 = insertvalue { %"class.blink::QualifiedName"*, i8 } %83, i8 %81, 1
  ret { %"class.blink::QualifiedName"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKS2_SD_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.2950"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = icmp eq %"class.blink::QualifiedName"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2950"* %0, %"class.blink::QualifiedName"* null)
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::QualifiedName"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %17) #11
  %24 = load i32, i32* %18, align 4
  %25 = and i32 %23, 16777215
  %26 = and i32 %24, -16777216
  %27 = or i32 %26, %25
  store i32 %27, i32* %18, align 4
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i32 [ %20, %10 ], [ %25, %22 ]
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %31
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %37
  br i1 %38, label %94, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %41 = xor i32 %29, -1
  %42 = lshr i32 %29, 23
  %43 = add nsw i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %39, %65
  %55 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %35, %39 ], [ %73, %65 ]
  %56 = phi %"class.blink::QualifiedName"* [ %32, %39 ], [ %71, %65 ]
  %57 = phi %"class.blink::QualifiedName"* [ null, %39 ], [ %66, %65 ]
  %58 = phi i64 [ %31, %39 ], [ %70, %65 ]
  %59 = phi i64 [ 0, %39 ], [ %68, %65 ]
  %60 = bitcast %"class.blink::QualifiedName"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %55, %40
  br i1 %64, label %136, label %65

65:                                               ; preds = %54, %63
  %66 = phi %"class.blink::QualifiedName"* [ %57, %63 ], [ %56, %54 ]
  %67 = icmp eq i64 %59, 0
  %68 = select i1 %67, i64 %53, i64 %59
  %69 = add i64 %68, %58
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %70
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %37
  br i1 %74, label %75, label %54

75:                                               ; preds = %65
  %76 = icmp eq %"class.blink::QualifiedName"* %66, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %86) #11
  br label %87

87:                                               ; preds = %77, %80, %85
  %88 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 2147483647
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  br label %94

94:                                               ; preds = %28, %75, %87
  %95 = phi %"class.blink::QualifiedName"* [ %66, %87 ], [ %71, %75 ], [ %32, %28 ]
  %96 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %2, i64 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 16777216
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #11
  br label %106

106:                                              ; preds = %104, %99, %94
  %107 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %97 to i64
  %108 = bitcast %"class.blink::QualifiedName"* %95 to i64*
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #11
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %110) #11
  %123 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %110 to i8*
  tail call void @free(i8* %123) #11
  br label %124

124:                                              ; preds = %106, %112, %117, %122
  %125 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2950"* %0, %"class.blink::QualifiedName"* %95)
  br label %136

136:                                              ; preds = %63, %124, %134
  %137 = phi i8 [ 1, %124 ], [ 1, %134 ], [ 0, %63 ]
  %138 = phi %"class.blink::QualifiedName"* [ %95, %124 ], [ %135, %134 ], [ %56, %63 ]
  %139 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %138, 0
  %140 = insertvalue { %"class.blink::QualifiedName"*, i8 } %139, i8 %137, 1
  ret { %"class.blink::QualifiedName"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.2950"*, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2950", %"class.WTF::HashTable.2950"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"class.blink::QualifiedName"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %53, %38
  %42 = phi i64 [ 0, %38 ], [ %54, %53 ]
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 %42, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 16777216
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #11
  br label %53

53:                                               ; preds = %51, %46, %41
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %31
  %57 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.2950"* %0, %"class.blink::QualifiedName"* %36, i32 %32, %"class.blink::QualifiedName"* %1) #11
  ret %"class.blink::QualifiedName"* %57
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink26SVGAttributeHashTranslator7GetHashERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2, align 8
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %6, %8
  br i1 %9, label %100, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = bitcast %"class.WTF::StringImpl"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 65535
  %20 = add nuw nsw i32 %19, -1640531527
  %21 = shl i32 %20, 16
  %22 = lshr i64 %17, 5
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 134215680
  %25 = xor i32 %24, %20
  %26 = xor i32 %25, %21
  %27 = lshr i32 %26, 11
  %28 = lshr i64 %17, 32
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 65535
  %31 = add i32 %26, %30
  %32 = add i32 %31, %27
  %33 = shl i32 %32, 16
  %34 = lshr i64 %17, 37
  %35 = trunc i64 %34 to i32
  %36 = and i32 %35, 134215680
  %37 = xor i32 %32, %36
  %38 = xor i32 %37, %33
  %39 = lshr i32 %38, 11
  %40 = trunc i64 %13 to i32
  %41 = and i32 %40, 65535
  %42 = add i32 %39, %38
  %43 = add i32 %42, %41
  %44 = shl i32 %43, 16
  %45 = lshr i64 %13, 5
  %46 = trunc i64 %45 to i32
  %47 = and i32 %46, 134215680
  %48 = xor i32 %43, %47
  %49 = xor i32 %48, %44
  %50 = lshr i32 %49, 11
  %51 = lshr i64 %13, 32
  %52 = trunc i64 %51 to i32
  %53 = and i32 %52, 65535
  %54 = add i32 %49, %53
  %55 = add i32 %54, %50
  %56 = shl i32 %55, 16
  %57 = lshr i64 %13, 37
  %58 = trunc i64 %57 to i32
  %59 = and i32 %58, 134215680
  %60 = xor i32 %55, %59
  %61 = xor i32 %60, %56
  %62 = lshr i32 %61, 11
  %63 = trunc i64 %16 to i32
  %64 = and i32 %63, 65535
  %65 = add i32 %61, %64
  %66 = add i32 %65, %62
  %67 = shl i32 %66, 16
  %68 = lshr i64 %16, 5
  %69 = trunc i64 %68 to i32
  %70 = and i32 %69, 134215680
  %71 = xor i32 %66, %70
  %72 = xor i32 %71, %67
  %73 = lshr i32 %72, 11
  %74 = lshr i64 %16, 32
  %75 = trunc i64 %74 to i32
  %76 = and i32 %75, 65535
  %77 = add i32 %72, %76
  %78 = add i32 %77, %73
  %79 = shl i32 %78, 16
  %80 = lshr i64 %16, 37
  %81 = trunc i64 %80 to i32
  %82 = and i32 %81, 134215680
  %83 = xor i32 %78, %82
  %84 = xor i32 %83, %79
  %85 = lshr i32 %84, 11
  %86 = add i32 %85, %84
  %87 = shl i32 %86, 3
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 5
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 15
  %94 = add i32 %93, %92
  %95 = shl i32 %94, 10
  %96 = xor i32 %95, %94
  %97 = and i32 %96, 16777215
  %98 = icmp eq i32 %97, 0
  %99 = select i1 %98, i32 8388608, i32 %97
  br label %111

100:                                              ; preds = %1
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = and i32 %102, 16777215
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %100
  %106 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %3) #11
  %107 = load i32, i32* %101, align 4
  %108 = and i32 %106, 16777215
  %109 = and i32 %107, -16777216
  %110 = or i32 %109, %108
  store i32 %110, i32* %101, align 4
  br label %111

111:                                              ; preds = %105, %100, %10
  %112 = phi i32 [ %99, %10 ], [ %103, %100 ], [ %108, %105 ]
  ret i32 %112
}

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10SVGElement22HasFocusEventListenersEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"*, i32, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26SVGResourceDocumentContentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGResourceDocumentContent"*
  tail call void @_ZNK5blink26SVGResourceDocumentContent5TraceEPNS_7VisitorE(%"class.blink::SVGResourceDocumentContent"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink26SVGResourceDocumentContent5TraceEPNS_7VisitorE(%"class.blink::SVGResourceDocumentContent"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGAnimatedLength"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGAnimatedLength"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IdTargetObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IdTargetObserver"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGUseElement"**
  %4 = load %"class.blink::SVGUseElement"*, %"class.blink::SVGUseElement"** %3, align 8
  %5 = icmp eq %"class.blink::SVGUseElement"* %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SVGUseElement", %"class.blink::SVGUseElement"* %4, i64 -1, i32 12
  %20 = bitcast %"class.blink::Member.434"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %18
  store %"class.blink::SVGUseElement"* null, %"class.blink::SVGUseElement"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %25
  %31 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::PersistentRegion"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %32, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %37

37:                                               ; preds = %18, %13, %30, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::SVGUseElement"**
  %4 = load %"class.blink::SVGUseElement"*, %"class.blink::SVGUseElement"** %3, align 8
  %5 = icmp eq %"class.blink::SVGUseElement"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::SVGUseElement"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::SVGUseElement"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::SVGUseElement"*)**
  %24 = load void (%"class.blink::SVGUseElement"*)*, void (%"class.blink::SVGUseElement"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::SVGUseElement"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::SVGUseElement"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::SVGUseElement"* %15) #11
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink13SVGUseElementEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 24) to %"class.blink::PersistentRegion"**), align 8
  %10 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::PersistentRegion"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::PersistentNode"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %6, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %14, align 8
  store %"class.blink::PersistentNode"* %6, %"class.blink::PersistentNode"** %10, align 8
  br label %15

15:                                               ; preds = %3, %8
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::SVGUseElement"**
  %6 = load %"class.blink::SVGUseElement"*, %"class.blink::SVGUseElement"** %5, align 8
  %7 = icmp eq %"class.blink::SVGUseElement"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGSVGElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13SVGSVGElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 312
  br i1 %15, label %46, label %16, !prof !3

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 312
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -312
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 156, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 312, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::SVGSVGElement"*
  tail call void @_ZN5blink13SVGSVGElementC1ERNS_8DocumentE(%"class.blink::SVGSVGElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::SVGSVGElement"* %51
}

declare void @_ZN5blink13SVGSVGElementC1ERNS_8DocumentE(%"class.blink::SVGSVGElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13SVGUseElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SVGUseElement"**
  %5 = load %"class.blink::SVGUseElement"*, %"class.blink::SVGUseElement"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::SVGUseElement"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SVGUseElement"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13SVGUseElementEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13SVGUseElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGUseElement"*
  tail call void @_ZNK5blink13SVGUseElement5TraceEPNS_7VisitorE(%"class.blink::SVGUseElement"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13SVGUseElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::SVGUseElement"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::SVGUseElement"*)**
  %21 = load void (%"class.blink::SVGUseElement"*)*, void (%"class.blink::SVGUseElement"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::SVGUseElement"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::SVGUseElement"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::SVGUseElement"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink13SVGUseElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %17, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %10 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::PersistentRegion"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::PersistentNode"* %6 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %6, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %14, align 8
  store %"class.blink::PersistentNode"* %6, %"class.blink::PersistentNode"** %10, align 8
  br label %15

15:                                               ; preds = %3, %8
  %16 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink18WrapWeakPersistentINS_13SVGUseElementEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink18WrapWeakPersistentINS_13SVGUseElementEEENS_14WeakPersistentIT_EEPS3_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF13BindRepeatingIMN5blink13SVGUseElementEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF13BindRepeatingIMN5blink13SVGUseElementEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!10 = !{!11, !13, !8}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink13SVGUseElementEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base13BindRepeatingIRMN5blink13SVGUseElementEFvvEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!14 = distinct !{!14, !"_ZN4base13BindRepeatingIRMN5blink13SVGUseElementEFvvEJNS1_14WeakPersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!15 = !{!"branch_weights", i32 1, i32 1048575}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink22WrapPersistentInternalINS_13SVGUseElementEEENS_10PersistentIT_EEPS3_: argument 0"}
!18 = distinct !{!18, !"_ZN5blink22WrapPersistentInternalINS_13SVGUseElementEEENS_10PersistentIT_EEPS3_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTF4BindIMN5blink13SVGUseElementEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF4BindIMN5blink13SVGUseElementEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!22 = !{!23, !25, !20}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink13SVGUseElementEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink13SVGUseElementEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIMN5blink13SVGUseElementEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIMN5blink13SVGUseElementEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{i32 24, i32 33}
