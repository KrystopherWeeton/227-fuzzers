; ModuleID = '../../content/browser/renderer_host/overscroll_configuration.cc'
source_filename = "../../content/browser/renderer_host/overscroll_configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN7content16OverscrollConfig33kCompleteTouchpadThresholdPercentE = hidden local_unnamed_addr constant float 0x3FD3333340000000, align 4
@_ZN7content16OverscrollConfig36kCompleteTouchscreenThresholdPercentE = hidden local_unnamed_addr constant float 2.500000e-01, align 4
@_ZN7content16OverscrollConfig27kStartTouchpadThresholdDipsE = hidden local_unnamed_addr constant float 6.000000e+01, align 4
@_ZN7content16OverscrollConfig30kStartTouchscreenThresholdDipsE = hidden local_unnamed_addr constant float 5.000000e+01, align 4
@_ZN12_GLOBAL__N_125g_is_ptr_mode_initializedE = internal unnamed_addr global i1 false, align 1
@_ZN12_GLOBAL__N_110g_ptr_modeE = internal unnamed_addr global i32 0, align 4
@_ZN8switches14kPullToRefreshE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN12_GLOBAL__N_163g_is_touchpad_overscroll_history_navigation_enabled_initializedE = internal unnamed_addr global i1 false, align 1
@_ZN8features36kTouchpadOverscrollHistoryNavigationE = external global %"struct.base::Feature", align 8
@_ZN12_GLOBAL__N_148g_touchpad_overscroll_history_navigation_enabledE = internal unnamed_addr global i8 0, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content16OverscrollConfig20GetPullToRefreshModeEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.std::__1::basic_string", align 8
  %2 = load i1, i1* @_ZN12_GLOBAL__N_125g_is_ptr_mode_initializedE, align 1
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = load i32, i32* @_ZN12_GLOBAL__N_110g_ptr_modeE, align 4
  br label %46

5:                                                ; preds = %0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #7
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches14kPullToRefreshE, i64 0, i64 0)) #7
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %1, %"class.base::CommandLine"* %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches14kPullToRefreshE, i64 0, i64 0), i64 %11) #7
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = load i64, i64* %8, align 8
  %17 = zext i8 %14 to i64
  %18 = select i1 %15, i64 %16, i64 %17
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %28

20:                                               ; preds = %5
  %21 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #7
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = load i8, i8* %13, align 1
  %25 = load i64, i64* %8, align 8
  %26 = zext i8 %24 to i64
  br label %28

27:                                               ; preds = %20
  store i32 1, i32* @_ZN12_GLOBAL__N_110g_ptr_modeE, align 4
  br label %39

28:                                               ; preds = %23, %5
  %29 = phi i64 [ %26, %23 ], [ %17, %5 ]
  %30 = phi i64 [ %25, %23 ], [ %16, %5 ]
  %31 = phi i8 [ %24, %23 ], [ %14, %5 ]
  %32 = icmp slt i8 %31, 0
  %33 = select i1 %32, i64 %30, i64 %29
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #7
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i32 2, i32* @_ZN12_GLOBAL__N_110g_ptr_modeE, align 4
  br label %39

39:                                               ; preds = %28, %35, %38, %27
  store i1 true, i1* @_ZN12_GLOBAL__N_125g_is_ptr_mode_initializedE, align 1
  %40 = load i32, i32* @_ZN12_GLOBAL__N_110g_ptr_modeE, align 4
  %41 = load i8, i8* %13, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %39, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  br label %46

46:                                               ; preds = %45, %3
  %47 = phi i32 [ %4, %3 ], [ %40, %45 ]
  ret i32 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content16OverscrollConfig20SetPullToRefreshModeENS0_17PullToRefreshModeE(i32) local_unnamed_addr #3 align 2 {
  store i32 %0, i32* @_ZN12_GLOBAL__N_110g_ptr_modeE, align 4
  store i1 true, i1* @_ZN12_GLOBAL__N_125g_is_ptr_mode_initializedE, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content16OverscrollConfig22ResetPullToRefreshModeEv() local_unnamed_addr #3 align 2 {
  store i1 false, i1* @_ZN12_GLOBAL__N_125g_is_ptr_mode_initializedE, align 1
  store i32 0, i32* @_ZN12_GLOBAL__N_110g_ptr_modeE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content16OverscrollConfig42TouchpadOverscrollHistoryNavigationEnabledEv() local_unnamed_addr #0 align 2 {
  %1 = load i1, i1* @_ZN12_GLOBAL__N_163g_is_touchpad_overscroll_history_navigation_enabled_initializedE, align 1
  br i1 %1, label %2, label %4

2:                                                ; preds = %0
  %3 = load i8, i8* @_ZN12_GLOBAL__N_148g_touchpad_overscroll_history_navigation_enabledE, align 1, !range !2
  br label %7

4:                                                ; preds = %0
  store i1 true, i1* @_ZN12_GLOBAL__N_163g_is_touchpad_overscroll_history_navigation_enabled_initializedE, align 1
  %5 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features36kTouchpadOverscrollHistoryNavigationE) #7
  %6 = zext i1 %5 to i8
  store i8 %6, i8* @_ZN12_GLOBAL__N_148g_touchpad_overscroll_history_navigation_enabledE, align 1
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i8 [ %3, %2 ], [ %6, %4 ]
  %9 = icmp ne i8 %8, 0
  ret i1 %9
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content16OverscrollConfig47ResetTouchpadOverscrollHistoryNavigationEnabledEv() local_unnamed_addr #3 align 2 {
  store i1 false, i1* @_ZN12_GLOBAL__N_163g_is_touchpad_overscroll_history_navigation_enabled_initializedE, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN7content16OverscrollConfig45MaxInertialEventsBeforeOverscrollCancellationEv() local_unnamed_addr #4 align 2 {
  ret i64 300000
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
