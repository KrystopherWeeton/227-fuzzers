; ModuleID = '../../components/sync/trusted_vault/trusted_vault_access_token_fetcher_impl.cc'
source_filename = "../../components/sync/trusted_vault/trusted_vault_access_token_fetcher_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::TrustedVaultAccessTokenFetcherImpl" = type { %"class.syncer::TrustedVaultAccessTokenFetcher", %"class.base::WeakPtr", %class.scoped_refptr.6 }
%"class.syncer::TrustedVaultAccessTokenFetcher" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.scoped_refptr.6 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7" }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.7", [4 x i8] }>
%struct.CoreAccountId = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.10", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.11" = type { %"class.base::internal::CallbackBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"struct.signin::AccessTokenInfo" }
%"struct.signin::AccessTokenInfo" = type { %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.syncer::TrustedVaultAccessTokenFetcherFrontend" = type { %"class.signin::IdentityManager::Observer", %"class.signin::IdentityManager"*, %"class.std::__1::unique_ptr.133", %struct.CoreAccountId, %"class.std::__1::vector.139", %"class.base::WeakPtrFactory.146" }
%"class.signin::IdentityManager::Observer" = type { i32 (...)** }
%"class.signin::IdentityManager" = type <{ %class.KeyedService, %"class.OAuth2AccessTokenManager::DiagnosticsObserver", %"class.PrimaryAccountManager::Observer", %class.ProfileOAuth2TokenServiceObserver, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.88", %"class.signin::IdentityMutator", %"class.std::__1::unique_ptr.118", %"class.base::ScopedObservation", %"class.base::ScopedObservation.124", %"class.base::ObserverList.125", %"class.base::ObserverList.129", i8, [7 x i8] }>
%class.KeyedService = type { i32 (...)** }
%"class.OAuth2AccessTokenManager::DiagnosticsObserver" = type { i32 (...)** }
%"class.PrimaryAccountManager::Observer" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::WeakReference::Flag"* }
%class.ProfileOAuth2TokenServiceObserver = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.AccountTrackerService* }
%class.AccountTrackerService = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.ProfileOAuth2TokenService* }
%class.ProfileOAuth2TokenService = type <{ %"class.OAuth2AccessTokenManager::Delegate", %class.ProfileOAuth2TokenServiceObserver, %class.PrefService*, %"class.std::__1::unique_ptr.20", i8, [7 x i8], %"class.std::__1::unique_ptr.26", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.54", i32, [4 x i8] }>
%"class.OAuth2AccessTokenManager::Delegate" = type { i32 (...)** }
%class.PrefService = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.ProfileOAuth2TokenServiceDelegate* }
%class.ProfileOAuth2TokenServiceDelegate = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.OAuth2AccessTokenManager* }
%class.OAuth2AccessTokenManager = type { i32 (...)**, %"class.std::__1::map", %"class.base::ObserverList", %"class.OAuth2AccessTokenManager::Delegate"*, %"class.std::__1::map.42" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.37" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::map.42" = type { %"class.std::__1::__tree.43" }
%"class.std::__1::__tree.43" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.54" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.GaiaCookieManagerService* }
%class.GaiaCookieManagerService = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.PrimaryAccountManager* }
%class.PrimaryAccountManager = type { %class.ProfileOAuth2TokenServiceObserver, %class.SigninClient*, %class.ProfileOAuth2TokenService*, %class.AccountTrackerService*, i8, [7 x i8], %struct.CoreAccountInfo, %"class.std::__1::unique_ptr.67", %"class.base::ObserverList.73" }
%class.SigninClient = type { %class.KeyedService }
%struct.CoreAccountInfo = type <{ %struct.CoreAccountId, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.PrimaryAccountPolicyManager* }
%class.PrimaryAccountPolicyManager = type opaque
%"class.base::ObserverList.73" = type <{ %"class.std::__1::vector.74", %"class.base::LinkedList.82", i64, i32, [4 x i8] }>
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.77" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr.76" }
%"class.base::WeakPtr.76" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.82" = type { %"class.base::LinkNode.83" }
%"class.base::LinkNode.83" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.AccountFetcherService* }
%class.AccountFetcherService = type opaque
%"class.signin::IdentityMutator" = type { i32 (...)**, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.signin::PrimaryAccountMutator"* }
%"class.signin::PrimaryAccountMutator" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.signin::AccountsMutator"* }
%"class.signin::AccountsMutator" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.signin::AccountsCookieMutator"* }
%"class.signin::AccountsCookieMutator" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.signin::DeviceAccountsSynchronizer"* }
%"class.signin::DeviceAccountsSynchronizer" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.signin::DiagnosticsProvider"* }
%"class.signin::DiagnosticsProvider" = type opaque
%"class.base::ScopedObservation" = type { %"class.PrimaryAccountManager::Observer"*, %class.PrimaryAccountManager* }
%"class.base::ScopedObservation.124" = type { %class.ProfileOAuth2TokenServiceObserver*, %class.ProfileOAuth2TokenService* }
%"class.base::ObserverList.125" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.126", i64, i32, [4 x i8] }>
%"class.base::LinkedList.126" = type { %"class.base::LinkNode.127" }
%"class.base::LinkNode.127" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.129" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.130", i64, i32, [4 x i8] }>
%"class.base::LinkedList.130" = type { %"class.base::LinkNode.131" }
%"class.base::LinkNode.131" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.signin::PrimaryAccountAccessTokenFetcher"* }
%"class.signin::PrimaryAccountAccessTokenFetcher" = type opaque
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.base::OnceCallback"* }
%"class.base::WeakPtrFactory.146" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::BindPostTaskTrampoline" = type { %class.scoped_refptr.147, %"class.base::Location", %"class.base::OnceCallback" }
%class.scoped_refptr.147 = type { %"class.base::TaskRunner"* }
%"struct.base::internal::BindState.157" = type { %"class.base::internal::BindStateBase", %"class.base::OnceCallback", %"class.std::__1::tuple.158" }
%"class.std::__1::tuple.158" = type { %"struct.std::__1::__tuple_impl.159" }
%"struct.std::__1::__tuple_impl.159" = type { %"class.std::__1::__tuple_leaf.160" }
%"class.std::__1::__tuple_leaf.160" = type { %"class.absl::optional" }

$_ZN4base12BindPostTaskIvJN4absl8optionalIN6signin15AccessTokenInfoEEEEEENS_12OnceCallbackIFvDpT0_EEE13scoped_refptrINS_10TaskRunnerEENS6_IFT_S8_EEERKNS_8LocationE = comdat any

$_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE3RunIJS7_EEEvDpT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS9_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEESA_E7RunOnceEPNS0_13BindStateBaseEOS9_ = comdat any

$_ZN4base8internal9BindStateIMNS0_22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EE6CreateIS9_JS7_EEEPSA_PFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal13FunctorTraitsINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEvE6InvokeIS9_JS7_EEEvOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS8_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE = comdat any

$_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEED2Ev = comdat any

$_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE27DestroyCallbackOnTaskRunnerES9_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJSA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS6_S7_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS5_S6_SG_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN6syncer34TrustedVaultAccessTokenFetcherImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*)* @_ZN6syncer34TrustedVaultAccessTokenFetcherImplD2Ev to i8*), i8* bitcast (void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*)* @_ZN6syncer34TrustedVaultAccessTokenFetcherImplD0Ev to i8*), i8* bitcast (void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)* @_ZN6syncer34TrustedVaultAccessTokenFetcherImpl16FetchAccessTokenERK13CoreAccountIdN4base12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"FetchAccessToken\00", align 1
@.str.1 = private unnamed_addr constant [79 x i8] c"../../components/sync/trusted_vault/trusted_vault_access_token_fetcher_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"../../base/bind_post_task_internal.h\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"callback_\00", align 1

@_ZN6syncer34TrustedVaultAccessTokenFetcherImplC1EN4base7WeakPtrINS_38TrustedVaultAccessTokenFetcherFrontendEEE = hidden unnamed_addr alias void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*, %"class.base::WeakPtr"*), void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*, %"class.base::WeakPtr"*)* @_ZN6syncer34TrustedVaultAccessTokenFetcherImplC2EN4base7WeakPtrINS_38TrustedVaultAccessTokenFetcherFrontendEEE
@_ZN6syncer34TrustedVaultAccessTokenFetcherImplD1Ev = hidden unnamed_addr alias void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*), void (%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*)* @_ZN6syncer34TrustedVaultAccessTokenFetcherImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer34TrustedVaultAccessTokenFetcherImplC2EN4base7WeakPtrINS_38TrustedVaultAccessTokenFetcherFrontendEEE(%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6syncer34TrustedVaultAccessTokenFetcherImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %4, %"class.base::internal::WeakReference"* dereferenceable(8) %5) #6
  %6 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %9, i64 0, i32 0
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %10, align 8
  %11 = tail call dereferenceable(8) %class.scoped_refptr.6* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #6
  %12 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %11, i64 0, i32 0
  %13 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %12, align 8
  %14 = icmp eq %"class.base::SequencedTaskRunner"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %13, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %2, %15
  %19 = ptrtoint %"class.base::SequencedTaskRunner"* %13 to i64
  %20 = bitcast %class.scoped_refptr.6* %9 to i64*
  %21 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %10, align 8
  store i64 %19, i64* %20, align 8
  %22 = icmp eq %"class.base::SequencedTaskRunner"* %21, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %21, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe.7"* %29 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %30) #6
  br label %31

31:                                               ; preds = %18, %23, %28
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.6* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer34TrustedVaultAccessTokenFetcherImplD2Ev(%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6syncer34TrustedVaultAccessTokenFetcherImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.7"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #6
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %15) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer34TrustedVaultAccessTokenFetcherImplD0Ev(%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6syncer34TrustedVaultAccessTokenFetcherImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.7"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #6
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %15) #6
  %16 = bitcast %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer34TrustedVaultAccessTokenFetcherImpl16FetchAccessTokenERK13CoreAccountIdN4base12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEE(%"class.syncer::TrustedVaultAccessTokenFetcherImpl"*, %struct.CoreAccountId* dereferenceable(24), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback.11", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 2, i32 0
  %11 = bitcast %"class.base::SequencedTaskRunner"** %10 to %"class.base::TaskRunner"**
  %12 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %11, align 8
  %13 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 47) #6
  %14 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 49) #6
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = call dereferenceable(8) %class.scoped_refptr.6* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #6, !noalias !2
  %22 = bitcast %class.scoped_refptr.6* %21 to %"class.base::TaskRunner"**
  %23 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %22, align 8, !noalias !2
  %24 = icmp eq %"class.base::TaskRunner"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %3, %25
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %17, i64* %30, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8, !noalias !2
  call void @_ZN4base12BindPostTaskIvJN4absl8optionalIN6signin15AccessTokenInfoEEEEEENS_12OnceCallbackIFvDpT0_EEE13scoped_refptrINS_10TaskRunnerEENS6_IFT_S8_EEERKNS_8LocationE(%"class.base::OnceCallback"* nonnull sret %7, %"class.base::TaskRunner"* %23, %"class.base::OnceCallback"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %9) #6
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %32 = call i8* @_Znwm(i64 88) #7, !noalias !5
  %33 = bitcast i8* %32 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %33, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS6_S7_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS5_S6_SG_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !5
  %34 = getelementptr inbounds i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to void (%"class.base::WeakPtr"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)**
  store void (%"class.base::WeakPtr"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)* @_ZN6syncer12_GLOBAL__N_126FetchAccessTokenOnUIThreadEN4base7WeakPtrINS_38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS1_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEE, void (%"class.base::WeakPtr"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)** %35, align 8, !noalias !5
  %36 = getelementptr inbounds i8, i8* %32, i64 40
  %37 = bitcast i8* %36 to %"class.base::internal::WeakReference"*
  %38 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %37, %"class.base::internal::WeakReference"* dereferenceable(8) %38) #6, !noalias !5
  %39 = getelementptr inbounds i8, i8* %32, i64 48
  %40 = bitcast i8* %39 to i64*
  %41 = getelementptr inbounds %"class.syncer::TrustedVaultAccessTokenFetcherImpl", %"class.syncer::TrustedVaultAccessTokenFetcherImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !5
  store i64 %42, i64* %40, align 8, !noalias !5
  %43 = getelementptr inbounds i8, i8* %32, i64 56
  %44 = bitcast i8* %43 to %struct.CoreAccountId*
  call void @_ZN13CoreAccountIdC1ERKS_(%struct.CoreAccountId* %44, %struct.CoreAccountId* dereferenceable(24) %1) #6, !noalias !5
  %45 = getelementptr inbounds i8, i8* %32, i64 80
  %46 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !5
  %49 = bitcast i8* %45 to i64*
  store i64 %48, i64* %49, align 8, !noalias !5
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8, !noalias !5
  %50 = bitcast %"class.base::OnceCallback.11"* %6 to i8**
  store i8* %32, i8** %50, align 8, !alias.scope !5
  %51 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %12, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback.11"* nonnull %6) #6
  %52 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #6
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #6
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.11"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6syncer12_GLOBAL__N_126FetchAccessTokenOnUIThreadEN4base7WeakPtrINS_38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS1_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEE(%"class.base::WeakPtr"*, %struct.CoreAccountId* dereferenceable(24), %"class.base::OnceCallback"* nocapture) #0 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #6
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"**
  %13 = load %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"*, %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"** %12, align 8
  %14 = icmp eq %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"* %13, null
  br i1 %14, label %15, label %50

15:                                               ; preds = %10, %3
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %union.anon.12* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #6
  %19 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %25 = inttoptr i64 %22 to %"class.base::internal::BindStateBase"*
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %28 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %27, align 8
  call void %28(%"class.base::internal::BindStateBase"* %25, %"class.absl::optional"* nonnull dereferenceable(64) %6) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  %29 = load i8, i8* %16, align 8, !range !10
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %66, label %31

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #7
  br label %41

41:                                               ; preds = %38, %31
  %42 = bitcast %"struct.signin::AccessTokenInfo"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.signin::AccessTokenInfo", %"struct.signin::AccessTokenInfo"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #7
  br label %49

49:                                               ; preds = %46, %41
  store i8 0, i8* %16, align 8
  br label %66

50:                                               ; preds = %10
  %51 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #6
  br i1 %51, label %55, label %52

52:                                               ; preds = %50
  %53 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #6
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #6
  br label %55

55:                                               ; preds = %52, %50
  %56 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #6
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = load %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"*, %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"** %12, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi %"class.syncer::TrustedVaultAccessTokenFetcherFrontend"* [ %58, %57 ], [ null, %55 ]
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %63, i64* %64, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %61, align 8
  call void @_ZN6syncer38TrustedVaultAccessTokenFetcherFrontend16FetchAccessTokenERK13CoreAccountIdN4base12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEE(%"class.syncer::TrustedVaultAccessTokenFetcherFrontend"* %60, %struct.CoreAccountId* dereferenceable(24) %1, %"class.base::OnceCallback"* nonnull %7) #6
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #6
  br label %66

66:                                               ; preds = %49, %15, %59
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN6syncer38TrustedVaultAccessTokenFetcherFrontend16FetchAccessTokenERK13CoreAccountIdN4base12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEE(%"class.syncer::TrustedVaultAccessTokenFetcherFrontend"*, %struct.CoreAccountId* dereferenceable(24), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12BindPostTaskIvJN4absl8optionalIN6signin15AccessTokenInfoEEEEEENS_12OnceCallbackIFvDpT0_EEE13scoped_refptrINS_10TaskRunnerEENS6_IFT_S8_EEERKNS_8LocationE(%"class.base::OnceCallback"* noalias sret, %"class.base::TaskRunner"*, %"class.base::OnceCallback"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = ptrtoint %"class.base::TaskRunner"* %1 to i64
  %8 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = tail call i8* @_Znwm(i64 48) #7
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %13 = bitcast i8* %9 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to %"class.base::Location"*
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %15, %"class.base::Location"* dereferenceable(32) %3) #6
  %16 = getelementptr inbounds i8, i8* %9, i64 40
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast i8* %16 to i64*
  store i64 %12, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %19 = icmp eq i64 %12, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %4
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %4, %20
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  %25 = ptrtoint i8* %9 to i64
  %26 = call i8* @_Znwm(i64 56) #7, !noalias !11
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS9_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEESA_E7RunOnceEPNS0_13BindStateBaseEOS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS0_22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !11
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*)* @_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE3RunIJS7_EEEvDpT_ to i64), i64 0>, <2 x i64>* %29, align 8, !noalias !11
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8, !noalias !11
  %32 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %26, i8** %32, align 8, !alias.scope !11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE3RunIJS7_EEEvDpT_(%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.11", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 2
  %8 = tail call %"struct.base::internal::BindState.157"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EE6CreateIS9_JS7_EEEPSA_PFvvEOT_DpOT0_(void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), %"class.base::OnceCallback"* dereferenceable(8) %7, %"class.absl::optional"* dereferenceable(64) %1) #6, !noalias !16
  %9 = getelementptr inbounds %"struct.base::internal::BindState.157", %"struct.base::internal::BindState.157"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* %9, %"class.base::internal::BindStateBase"** %10, align 8, !alias.scope !16
  %11 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %5, %"class.base::Location"* dereferenceable(32) %6, %"class.base::OnceCallback.11"* nonnull %3) #6
  %12 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS0_22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS9_EJNSt3__110unique_ptrISC_NSF_14default_deleteISC_EEEEEEESA_E7RunOnceEPNS0_13BindStateBaseEOS9_(%"class.base::internal::BindStateBase"*, %"class.absl::optional"* dereferenceable(64)) #0 comdat align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #6
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = bitcast i8* %14 to %"class.base::internal::BindPostTaskTrampoline"*
  %16 = and i64 %7, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %2
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %7, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*)**
  %24 = load void (%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*)** %23, align 8
  br label %27

25:                                               ; preds = %2
  %26 = inttoptr i64 %7 to void (%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.base::internal::BindPostTaskTrampoline"*, %"class.absl::optional"*)* [ %24, %18 ], [ %26, %25 ]
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 64, i1 false) #6
  %30 = load i8, i8* %29, align 8, !range !10
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = bitcast %"struct.signin::AccessTokenInfo"* %34 to i8*
  %36 = bitcast %"struct.signin::AccessTokenInfo"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #6
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %11, align 8
  br label %44

44:                                               ; preds = %32, %27
  call void %28(%"class.base::internal::BindPostTaskTrampoline"* %15, %"class.absl::optional"* nonnull %3) #6
  %45 = load i8, i8* %11, align 8, !range !10
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #7
  br label %57

57:                                               ; preds = %54, %47
  %58 = bitcast %"struct.signin::AccessTokenInfo"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.signin::AccessTokenInfo", %"struct.signin::AccessTokenInfo"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #7
  br label %65

65:                                               ; preds = %62, %57
  store i8 0, i8* %11, align 8
  br label %66

66:                                               ; preds = %44, %65
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS0_22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::BindPostTaskTrampoline"**
  %6 = load %"class.base::internal::BindPostTaskTrampoline"*, %"class.base::internal::BindPostTaskTrampoline"** %5, align 8
  store %"class.base::internal::BindPostTaskTrampoline"* null, %"class.base::internal::BindPostTaskTrampoline"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindPostTaskTrampoline"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  tail call void @_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEED2Ev(%"class.base::internal::BindPostTaskTrampoline"* nonnull %6) #6
  %9 = bitcast %"class.base::internal::BindPostTaskTrampoline"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %3, %8
  %11 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %10, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::internal::BindState.157"* @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EE6CreateIS9_JS7_EEEPSA_PFvvEOT_DpOT0_(void ()*, %"class.base::OnceCallback"* dereferenceable(8), %"class.absl::optional"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_Znwm(i64 104) #7
  %6 = bitcast i8* %5 to %"struct.base::internal::BindState.157"*
  %7 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %7, void ()* %0, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS8_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE) #6
  %8 = getelementptr inbounds i8, i8* %5, i64 32
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 40
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 64, i1 false) #6
  %15 = load i8, i8* %14, align 8, !range !10
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds i8, i8* %5, i64 48
  %20 = bitcast %"struct.signin::AccessTokenInfo"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #6
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds i8, i8* %5, i64 72
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %21, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %5, i64 80
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %27 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %13, align 8
  br label %28

28:                                               ; preds = %17, %3
  %29 = icmp eq i64 %11, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)) #6
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  br label %33

33:                                               ; preds = %28, %30
  ret %"struct.base::internal::BindState.157"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS8_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to %"class.base::OnceCallback"*
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.absl::optional"*
  tail call void @_ZN4base8internal13FunctorTraitsINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEvE6InvokeIS9_JS7_EEEvOT_DpOT0_(%"class.base::OnceCallback"* dereferenceable(8) %3, %"class.absl::optional"* dereferenceable(64) %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEvE6InvokeIS9_JS7_EEEvOT_DpOT0_(%"class.base::OnceCallback"* dereferenceable(8), %"class.absl::optional"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 64, i1 false) #6
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = bitcast %"struct.signin::AccessTokenInfo"* %11 to i8*
  %13 = bitcast %"struct.signin::AccessTokenInfo"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #6
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %5, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %28 = inttoptr i64 %25 to %"class.base::internal::BindStateBase"*
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %28, i64 0, i32 1
  %30 = bitcast void ()** %29 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)**
  %31 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)** %30, align 8
  call void %31(%"class.base::internal::BindStateBase"* %28, %"class.absl::optional"* nonnull dereferenceable(64) %4) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  %32 = load i8, i8* %5, align 8, !range !10
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %53, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #7
  br label %44

44:                                               ; preds = %41, %34
  %45 = bitcast %"struct.signin::AccessTokenInfo"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.signin::AccessTokenInfo", %"struct.signin::AccessTokenInfo"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #7
  br label %52

52:                                               ; preds = %49, %44
  store i8 0, i8* %5, align 8
  br label %53

53:                                               ; preds = %21, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8*
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %15, %8
  %19 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #7
  br label %26

26:                                               ; preds = %23, %18
  store i8 0, i8* %5, align 8
  br label %27

27:                                               ; preds = %3, %26
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %29 = bitcast %"class.base::internal::BindStateBase"* %28 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %29) #6
  %30 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS8_EEEEEbPKNS0_13BindStateBaseENSC_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #6
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #6
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEED2Ev(%"class.base::internal::BindPostTaskTrampoline"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.11", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %7 = icmp eq %"class.base::internal::BindStateBase"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 1
  %12 = tail call i8* @_Znwm(i64 48) #7, !noalias !23
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJSA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !23
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*)* @_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE27DestroyCallbackOnTaskRunnerES9_ to i64), i64* %15, align 8, !noalias !23
  %16 = getelementptr inbounds i8, i8* %12, i64 40
  %17 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !23
  %19 = bitcast i8* %16 to i64*
  store i64 %18, i64* %19, align 8, !noalias !23
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8, !noalias !23
  %20 = bitcast %"class.base::OnceCallback.11"* %2 to i8**
  store i8* %12, i8** %20, align 8, !alias.scope !23
  %21 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %10, %"class.base::Location"* dereferenceable(32) %11, %"class.base::OnceCallback.11"* nonnull %2) #6
  %22 = getelementptr inbounds %"class.base::OnceCallback.11", %"class.base::OnceCallback.11"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #6
  br label %23

23:                                               ; preds = %1, %8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #6
  %24 = getelementptr inbounds %"class.base::internal::BindPostTaskTrampoline", %"class.base::internal::BindPostTaskTrampoline"* %0, i64 0, i32 0, i32 0
  %25 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %24, align 8
  %26 = icmp eq %"class.base::TaskRunner"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %25, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe.7", %"class.base::RefCountedThreadSafe.7"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe.7"* %33 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #6
  br label %35

35:                                               ; preds = %23, %27, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE27DestroyCallbackOnTaskRunnerES9_(%"class.base::OnceCallback"*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJSA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load void (%"class.base::OnceCallback"*)*, void (%"class.base::OnceCallback"*)** %4, align 8
  %8 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %9 = bitcast void ()** %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  call void %7(%"class.base::OnceCallback"* nonnull %2) #6
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #6
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS6_S7_SH_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::WeakPtr"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = getelementptr inbounds void ()*, void ()** %6, i64 2
  %8 = bitcast void ()** %7 to %struct.CoreAccountId*
  %9 = getelementptr inbounds void ()*, void ()** %6, i64 5
  %10 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = load void (%"class.base::WeakPtr"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)*, void (%"class.base::WeakPtr"*, %struct.CoreAccountId*, %"class.base::OnceCallback"*)** %5, align 8
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %14 = bitcast void ()** %6 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %13, %"class.base::internal::WeakReference"* dereferenceable(8) %14) #6
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds void ()*, void ()** %6, i64 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  %19 = bitcast void ()** %9 to %"class.base::internal::BindStateBase"**
  %20 = bitcast void ()** %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  call void %12(%"class.base::WeakPtr"* nonnull %2, %struct.CoreAccountId* dereferenceable(24) %8, %"class.base::OnceCallback"* nonnull %3) #6
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #6
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %24) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS5_S6_SG_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #6
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %7 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %6 to %struct.CoreAccountId*
  tail call void @_ZN13CoreAccountIdD1Ev(%struct.CoreAccountId* %7) #6
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %9) #6
  %10 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13CoreAccountIdD1Ev(%struct.CoreAccountId*) unnamed_addr #2

declare void @_ZN13CoreAccountIdC1ERKS_(%struct.CoreAccountId*, %struct.CoreAccountId* dereferenceable(24)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6syncer21BindToCurrentSequenceIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEN4base12OnceCallbackIT_EESA_RKNS7_8LocationE: argument 0"}
!4 = distinct !{!4, !"_ZN6syncer21BindToCurrentSequenceIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEN4base12OnceCallbackIT_EESA_RKNS7_8LocationE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJRS6_S9_SG_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJRS6_S9_SG_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJRS4_S7_SF_EEENS8_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN6syncer38TrustedVaultAccessTokenFetcherFrontendEEERK13CoreAccountIdNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJRS4_S7_SF_EEENS8_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!10 = !{i8 0, i8 2}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS0_22BindPostTaskTrampolineINS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS0_22BindPostTaskTrampolineINS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMNS_8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMNS_8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEEFvS8_EJNSt3__110unique_ptrISB_NSE_14default_deleteISB_EEEEEEENS3_INS1_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS7_EEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS6_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEJS6_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!21 = distinct !{!21, !22, !"_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE10GetClosureIJS7_EEENS2_IFvvEEEPNS2_IFvDpT_EEEDpOSE_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal22BindPostTaskTrampolineINS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEE10GetClosureIJS7_EEENS2_IFvvEEEPNS2_IFvDpT_EEEDpOSE_"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS9_EEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS9_EEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS8_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvN4absl8optionalIN6signin15AccessTokenInfoEEEEEEEJS8_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
