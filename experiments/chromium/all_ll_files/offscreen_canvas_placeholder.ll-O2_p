; ModuleID = '../../third_party/blink/renderer/platform/graphics/offscreen_canvas_placeholder.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/offscreen_canvas_placeholder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<int, blink::OffscreenCanvasPlaceholder *, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<blink::OffscreenCanvasPlaceholder *>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<int, blink::OffscreenCanvasPlaceholder *, WTF::IntHash<int>, WTF::HashTraits<int>, WTF::HashTraits<blink::OffscreenCanvasPlaceholder *>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::OffscreenCanvasPlaceholder" = type <{ i32 (...)**, %class.scoped_refptr, %"class.base::WeakPtr.10", %class.scoped_refptr.1, %"class.util::IdType.11", i32, i32, %"class.absl::optional", [4 x i8] }>
%class.scoped_refptr = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.1, %"struct.gpu::SyncToken", %"class.base::WeakPtr", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.base::WeakPtr.10" = type { %"class.base::internal::WeakPtrBase" }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.util::IdType.11" = type { %"class.base::StrongAlias.12" }
%"class.base::StrongAlias.12" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::OffscreenCanvasPlaceholder"* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.23 }
%union.anon.23 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::CanvasResourceDispatcher" = type { %"class.viz::mojom::blink::CompositorFrameSinkClient", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.viz::FrameSinkId", %"class.blink::IntSize", i8, i8, i8, i32, %"class.mojo::Remote", %"class.mojo::Remote.185", %"class.mojo::Receiver", i32, %"class.viz::ResourceIdGenerator", [4 x i8], %"class.WTF::HashMap.194", %"class.viz::FrameTokenGenerator", %class.scoped_refptr, %"class.util::IdType.11", i32, %"struct.viz::BeginFrameAck", %"class.blink::CanvasResourceDispatcherClient"*, %"class.std::__1::unique_ptr.199", %"class.base::WeakPtrFactory.205" }
%"class.viz::mojom::blink::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.179" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.20, %"class.std::__1::unique_ptr.129", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.22, i32 }>
%class.scoped_refptr.20 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.22, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.96", %"class.absl::optional.101", %"class.absl::optional.58", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.120", i8, [7 x i8], %class.scoped_refptr.22, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21" }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.28", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.22, %"class.std::__1::unique_ptr.35", %"class.absl::optional.44", %"struct.std::__1::atomic.54", i8, i8, i8, i8, i32, i32, %"class.absl::optional.58", %"class.std::__1::unique_ptr.63", i8, i64, %class.scoped_refptr.92, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.94", %"class.base::WeakPtrFactory.95" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.22, i8, %"class.mojo::ScopedHandleBase.38", %class.scoped_refptr.39, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.40" }
%"class.mojo::ScopedHandleBase.38" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.39 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.40" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.49", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.49" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.66", i8, i64, %class.scoped_refptr.67, %class.scoped_refptr.88 }
%"class.base::RepeatingCallback.66" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.67 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.77", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.std::__1::map.77" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%class.scoped_refptr.88 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.92 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.206", [4 x i8], %"class.base::RepeatingCallback.132", %class.scoped_refptr.22, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.207", [4 x i8] }>
%"class.base::RefCountedThreadSafe.206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.132" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__cxx_atomic_impl.210" }
%"struct.std::__1::__cxx_atomic_impl.210" = type { %"struct.std::__1::__cxx_atomic_base_impl.211" }
%"struct.std::__1::__cxx_atomic_base_impl.211" = type { i32 }
%"class.base::WeakPtr.94" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.95" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, [7 x i8], %union.anon.105 }
%union.anon.105 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.106 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.106 = type { %"class.std::__1::map.108" }
%"class.std::__1::map.108" = type { %"class.std::__1::__tree.109" }
%"class.std::__1::__tree.109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.119"*, i64 }
%"class.std::__1::unique_ptr.119" = type opaque
%"class.std::__1::map.120" = type { %"class.std::__1::__tree.121" }
%"class.std::__1::__tree.121" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.132", %"class.base::OnceCallback.133", %"class.absl::optional.134", %"class.absl::optional.139", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.146", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.154", %"class.std::__1::map.165", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.174", i8, %class.scoped_refptr.22, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.175" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.133" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.134" = type { %"class.absl::optional_internal::optional_data.135" }
%"class.absl::optional_internal::optional_data.135" = type { %"class.absl::optional_internal::optional_data_base.136" }
%"class.absl::optional_internal::optional_data_base.136" = type { %"class.absl::optional_internal::optional_data_dtor_base.137" }
%"class.absl::optional_internal::optional_data_dtor_base.137" = type { i8, %union.anon.138 }
%union.anon.138 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.139" = type { %"class.absl::optional_internal::optional_data.140" }
%"class.absl::optional_internal::optional_data.140" = type { %"class.absl::optional_internal::optional_data_base.141" }
%"class.absl::optional_internal::optional_data_base.141" = type { %"class.absl::optional_internal::optional_data_dtor_base.142" }
%"class.absl::optional_internal::optional_data_dtor_base.142" = type { i8, %union.anon.143 }
%union.anon.143 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.22, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.144" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.144" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.145 }
%class.scoped_refptr.145 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.149", %class.scoped_refptr.150 }
%"class.base::RepeatingCallback.149" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.150 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.154" = type { %"class.std::__1::__tree.155" }
%"class.std::__1::__tree.155" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.base::OnceCallback.174" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.175" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.22 = type { %"class.base::SequencedTaskRunner"* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.viz::mojom::blink::CompositorFrameSinkProxy"* }
%"class.viz::mojom::blink::CompositorFrameSinkProxy" = type { %"class.viz::mojom::blink::CompositorFrameSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::blink::CompositorFrameSink" = type { i32 (...)** }
%"class.mojo::Remote.185" = type { %"class.mojo::internal::InterfacePtrState.186" }
%"class.mojo::internal::InterfacePtrState.186" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::mojom::blink::SurfaceEmbedderProxy"* }
%"class.blink::mojom::blink::SurfaceEmbedderProxy" = type { %"class.blink::mojom::blink::SurfaceEmbedder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.viz::mojom::blink::CompositorFrameSinkClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.20, %"class.std::__1::unique_ptr.129", %"class.base::WeakPtrFactory.193" }
%"class.base::WeakPtrFactory.193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::mojom::blink::CompositorFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.viz::mojom::blink::CompositorFrameSinkClient"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.WTF::HashMap.194" = type { %"class.WTF::HashTable.195" }
%"class.WTF::HashTable.195" = type <{ %"struct.WTF::KeyValuePair.198"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.198" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.blink::CanvasResourceDispatcherClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.205" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF7HashMapIiPN5blink26OffscreenCanvasPlaceholderENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZNK5blink26OffscreenCanvasPlaceholder16HasCanvasCaptureEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS4_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS6_S9_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS3_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS5_S8_SD_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK4base7WeakPtrIN5blink24CanvasResourceDispatcherEEptEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS6_S7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS5_S6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS6_bEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS5_bEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

@_ZTVN5blink26OffscreenCanvasPlaceholderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::OffscreenCanvasPlaceholder"*, %"class.blink::CanvasResource"*, i32)* @_ZN5blink26OffscreenCanvasPlaceholder26SetOffscreenCanvasResourceE13scoped_refptrINS_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEE to i8*), i8* bitcast (i1 (%"class.blink::OffscreenCanvasPlaceholder"*)* @_ZNK5blink26OffscreenCanvasPlaceholder16HasCanvasCaptureEv to i8*)] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"ReleaseOffscreenCanvasFrame\00", align 1
@.str.1 = private unnamed_addr constant [83 x i8] c"../../third_party/blink/renderer/platform/graphics/offscreen_canvas_placeholder.cc\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"UpdateOffscreenCanvasFilterQuality\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"PostSetSuspendAnimationToOffscreenCanvasThread\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, blink::OffscreenCanvasPlaceholder *>]\00", align 1

@_ZN5blink26OffscreenCanvasPlaceholderD1Ev = hidden unnamed_addr alias void (%"class.blink::OffscreenCanvasPlaceholder"*), void (%"class.blink::OffscreenCanvasPlaceholder"*)* @_ZN5blink26OffscreenCanvasPlaceholderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholderD2Ev(%"class.blink::OffscreenCanvasPlaceholder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink26OffscreenCanvasPlaceholderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  br label %13

13:                                               ; preds = %12, %9, %6
  tail call void @_ZN3WTF7HashMapIiPN5blink26OffscreenCanvasPlaceholderENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to %"class.WTF::HashMap"*), i32* dereferenceable(4) %3) #8
  store i32 -1, i32* %3, align 4
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 3, i32 0
  %16 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %15, align 8
  %17 = icmp eq %"class.base::SingleThreadTaskRunner"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %16, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.2"* %24 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %25) #8
  br label %26

26:                                               ; preds = %14, %18, %23
  %27 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %27) #8
  %28 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 1, i32 0
  %29 = load %"class.blink::CanvasResource"*, %"class.blink::CanvasResource"** %28, align 8
  %30 = icmp eq %"class.blink::CanvasResource"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::CanvasResource", %"class.blink::CanvasResource"* %29, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.blink::CanvasResource"*
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %37 to void (%"class.blink::CanvasResource"*)***
  %40 = load void (%"class.blink::CanvasResource"*)**, void (%"class.blink::CanvasResource"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %40, i64 1
  %42 = load void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %41, align 8
  tail call void %42(%"class.blink::CanvasResource"* nonnull %38) #8
  br label %43

43:                                               ; preds = %26, %31, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder27UnregisterPlaceholderCanvasEv(%"class.blink::OffscreenCanvasPlaceholder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !2

8:                                                ; preds = %5
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  br label %12

12:                                               ; preds = %5, %8, %11
  tail call void @_ZN3WTF7HashMapIiPN5blink26OffscreenCanvasPlaceholderENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to %"class.WTF::HashMap"*), i32* dereferenceable(4) %2)
  store i32 -1, i32* %2, align 4
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder26SetOffscreenCanvasResourceE13scoped_refptrINS_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.blink::OffscreenCanvasPlaceholder"*, %"class.blink::CanvasResource"*, i32) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::CanvasResource"* %1 to i64
  tail call void @_ZN5blink26OffscreenCanvasPlaceholder27ReleaseOffscreenCanvasFrameEv(%"class.blink::OffscreenCanvasPlaceholder"* %0)
  %5 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %8 = load %"class.blink::CanvasResource"*, %"class.blink::CanvasResource"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.blink::CanvasResource"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::CanvasResource", %"class.blink::CanvasResource"* %8, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.blink::CanvasResource"*
  %18 = bitcast %"class.base::RefCountedThreadSafe"* %16 to void (%"class.blink::CanvasResource"*)***
  %19 = load void (%"class.blink::CanvasResource"*)**, void (%"class.blink::CanvasResource"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %19, i64 1
  %21 = load void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %20, align 8
  tail call void %21(%"class.blink::CanvasResource"* nonnull %17) #8
  br label %22

22:                                               ; preds = %3, %10, %15
  %23 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 %2, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 6
  %25 = load i32, i32* %24, align 8
  switch i32 %25, label %31 [
    i32 2, label %27
    i32 3, label %26
  ]

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %22, %26
  %28 = phi i1 [ false, %26 ], [ true, %22 ]
  %29 = phi i32 [ 0, %26 ], [ 1, %22 ]
  %30 = tail call zeroext i1 @_ZN5blink26OffscreenCanvasPlaceholder46PostSetSuspendAnimationToOffscreenCanvasThreadEb(%"class.blink::OffscreenCanvasPlaceholder"* %0, i1 zeroext %28)
  store i32 %29, i32* %24, align 8
  br label %31

31:                                               ; preds = %27, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder27ReleaseOffscreenCanvasFrameEv(%"class.blink::OffscreenCanvasPlaceholder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::WeakPtr.10", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 0, i32 0
  %11 = load %"class.blink::CanvasResource"*, %"class.blink::CanvasResource"** %10, align 8
  %12 = icmp eq %"class.blink::CanvasResource"* %11, null
  br i1 %12, label %66, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::CanvasResource"* %11 to void (%"class.blink::CanvasResource"*)***
  %15 = load void (%"class.blink::CanvasResource"*)**, void (%"class.blink::CanvasResource"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %15, i64 9
  %17 = load void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %16, align 8
  tail call void %17(%"class.blink::CanvasResource"* nonnull %11) #8
  %18 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 3, i32 0
  %19 = bitcast %"class.base::SingleThreadTaskRunner"** %18 to %"class.base::SequencedTaskRunner"**
  %20 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %19, align 8
  %21 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i64 0, i64 0), i32 103) #8
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = bitcast %"class.base::WeakPtr.10"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8, !noalias !3
  %24 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %4, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %24, %"class.base::internal::WeakReference"* dereferenceable(8) %25) #8, !noalias !3
  %26 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !6
  store i64 %28, i64* %26, align 8, !alias.scope !9, !noalias !3
  %29 = bitcast %class.scoped_refptr* %9 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !3
  store %"class.blink::CanvasResource"* null, %"class.blink::CanvasResource"** %10, align 8, !noalias !3
  %31 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = load i32, i32* %31, align 4, !noalias !3
  %33 = call i8* @_Znwm(i64 72) #9, !noalias !10
  %34 = bitcast i8* %33 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %34, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS4_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS6_S9_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS3_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS5_S8_SD_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !10
  %35 = getelementptr inbounds i8, i8* %33, i64 32
  %36 = bitcast i8* %35 to void (%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32)**
  store void (%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32)* @_ZN12_GLOBAL__N_124releaseFrameToDispatcherEN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS2_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEE, void (%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32)** %36, align 8, !noalias !10
  %37 = getelementptr inbounds i8, i8* %33, i64 40
  %38 = bitcast i8* %37 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %38, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %24) #8, !noalias !10
  %39 = getelementptr inbounds i8, i8* %33, i64 48
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %26, align 8, !noalias !10
  store i64 %41, i64* %40, align 8, !noalias !10
  %42 = getelementptr inbounds i8, i8* %33, i64 56
  %43 = bitcast i8* %42 to i64*
  store i64 %30, i64* %43, align 8, !noalias !10
  %44 = getelementptr inbounds i8, i8* %33, i64 64
  %45 = bitcast i8* %44 to i32*
  store i32 %32, i32* %45, align 4, !noalias !10
  %46 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8, !noalias !3
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %48 = ptrtoint i8* %33 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8, !noalias !15
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8, !noalias !15
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #8, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8, !noalias !3
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #8, !noalias !3
  %52 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %52) #8, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %53 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = bitcast %"class.base::SequencedTaskRunner"* %20 to %"class.base::TaskRunner"*
  %56 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %48, i64* %58, align 8, !alias.scope !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8, !noalias !18
  %59 = bitcast %"class.base::SequencedTaskRunner"* %20 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %60 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %59, align 8
  %61 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %60, align 8
  %62 = call zeroext i1 %61(%"class.base::TaskRunner"* %55, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %5, i64 0) #8
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #8
  %64 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %65 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  br label %66

66:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26OffscreenCanvasPlaceholder46PostSetSuspendAnimationToOffscreenCanvasThreadEb(%"class.blink::OffscreenCanvasPlaceholder"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.10", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 3, i32 0
  %11 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %10, align 8
  %12 = icmp eq %"class.base::SingleThreadTaskRunner"* %11, null
  br i1 %12, label %53, label %13

13:                                               ; preds = %2
  %14 = zext i1 %1 to i8
  %15 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i64 0, i64 0), i32 197) #8
  %16 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.base::WeakPtr.10"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8, !noalias !21
  %18 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %18, %"class.base::internal::WeakReference"* dereferenceable(8) %19) #8, !noalias !21
  %20 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 1
  %22 = load i64, i64* %21, align 8, !noalias !24
  store i64 %22, i64* %20, align 8, !alias.scope !27, !noalias !21
  %23 = call i8* @_Znwm(i64 64) #9, !noalias !28
  %24 = bitcast i8* %23 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %24, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS6_bEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS5_bEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !28
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to void (%"class.base::WeakPtr.10"*, i1)**
  store void (%"class.base::WeakPtr.10"*, i1)* @_ZN12_GLOBAL__N_119SetSuspendAnimationEN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEb, void (%"class.base::WeakPtr.10"*, i1)** %26, align 8, !noalias !28
  %27 = getelementptr inbounds i8, i8* %23, i64 40
  %28 = bitcast i8* %27 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %28, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %18) #8, !noalias !28
  %29 = getelementptr inbounds i8, i8* %23, i64 48
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %20, align 8, !noalias !28
  store i64 %31, i64* %30, align 8, !noalias !28
  %32 = getelementptr inbounds i8, i8* %23, i64 56
  store i8 %14, i8* %32, align 1, !noalias !28
  %33 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8, !noalias !21
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = ptrtoint i8* %23 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !33
  %36 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8, !noalias !33
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #8, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8, !noalias !21
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #8, !noalias !21
  %39 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %39) #8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %40 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = bitcast %"class.WTF::CrossThreadOnceFunction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = bitcast %"class.base::SingleThreadTaskRunner"* %11 to %"class.base::TaskRunner"*
  %43 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %35, i64* %45, align 8, !alias.scope !36
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8, !noalias !36
  %46 = bitcast %"class.base::SingleThreadTaskRunner"* %11 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %47 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %46, align 8
  %48 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %47, align 8
  %49 = call zeroext i1 %48(%"class.base::TaskRunner"* nonnull %42, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback"* nonnull %6, i64 0) #8
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #8
  %51 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %52 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #8
  br label %53

53:                                               ; preds = %2, %13
  %54 = phi i1 [ true, %13 ], [ false, %2 ]
  ret i1 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder28SetOffscreenCanvasDispatcherEN4base7WeakPtrINS_24CanvasResourceDispatcherEEE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.blink::OffscreenCanvasPlaceholder"*, %"class.base::WeakPtr.10"* nocapture, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::WeakPtr.10"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %6, align 8
  %9 = bitcast %"class.base::WeakPtr.10"* %5 to i64*
  %10 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %10, align 8
  store i64 %8, i64* %9, align 8
  %12 = icmp eq %"class.base::internal::WeakReference::Flag"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %11) #8
  %18 = bitcast %"class.base::internal::WeakReference::Flag"* %11 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %3, %13, %17
  %20 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %1, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 3
  %24 = bitcast %class.scoped_refptr.1* %23 to i64*
  %25 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %23, i64 0, i32 0
  %26 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %25, align 8
  store i64 %4, i64* %24, align 8
  %27 = icmp eq %"class.base::SingleThreadTaskRunner"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %26, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.2"* %34 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %35) #8
  br label %36

36:                                               ; preds = %19, %28, %33
  %37 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 4, !range !39
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  store i8 0, i8* %37, align 4
  tail call void @_ZN5blink26OffscreenCanvasPlaceholder34UpdateOffscreenCanvasFilterQualityE15SkFilterQuality(%"class.blink::OffscreenCanvasPlaceholder"* %0, i32 %42)
  br label %43

43:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder34UpdateOffscreenCanvasFilterQualityE15SkFilterQuality(%"class.blink::OffscreenCanvasPlaceholder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr.10", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::WeakPtr.10", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %12 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  %14 = icmp eq %"class.base::SingleThreadTaskRunner"* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast i8* %16 to i64*
  %18 = zext i32 %1 to i64
  %19 = shl nuw i64 %18, 32
  %20 = or i64 %19, 1
  store i64 %20, i64* %17, align 4
  br label %115

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 7
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8, i8* %23, align 4, !range !39
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %115, label %30

30:                                               ; preds = %21, %26
  %31 = bitcast %"class.absl::optional"* %22 to i64*
  %32 = zext i32 %1 to i64
  %33 = shl nuw i64 %32, 32
  %34 = or i64 %33, 1
  store i64 %34, i64* %31, align 4
  %35 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #8
  %36 = bitcast %"class.blink::Thread"* %35 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %37 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %37, i64 3
  %39 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %38, align 8
  %40 = tail call %"class.base::SingleThreadTaskRunner"* %39(%"class.blink::Thread"* %35) #8
  %41 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  %42 = icmp eq %"class.base::SingleThreadTaskRunner"* %40, %41
  br i1 %42, label %43, label %65

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %9, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %44, %"class.base::internal::WeakReference"* dereferenceable(8) %45) #8
  %46 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %9, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %46, align 8
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %44) #8
  br i1 %49, label %50, label %63

50:                                               ; preds = %43
  %51 = bitcast i64* %46 to %"class.blink::CanvasResourceDispatcher"**
  %52 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %51, align 8
  %53 = icmp eq %"class.blink::CanvasResourceDispatcher"* %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %50
  %55 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %44) #8
  br i1 %55, label %59, label %56

56:                                               ; preds = %54
  %57 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #8
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %59

59:                                               ; preds = %56, %54
  %60 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %44) #8
  %61 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %51, align 8
  %62 = select i1 %60, %"class.blink::CanvasResourceDispatcher"* %61, %"class.blink::CanvasResourceDispatcher"* null
  call void @_ZN5blink24CanvasResourceDispatcher16SetFilterQualityE15SkFilterQuality(%"class.blink::CanvasResourceDispatcher"* %62, i32 %1) #8
  br label %63

63:                                               ; preds = %43, %50, %59
  %64 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %64) #8
  br label %105

65:                                               ; preds = %30
  %66 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i64 0, i64 0), i32 126) #8
  %67 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = bitcast %"class.base::WeakPtr.10"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #8, !noalias !40
  %69 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %69, %"class.base::internal::WeakReference"* dereferenceable(8) %70) #8, !noalias !40
  %71 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 2, i32 0, i32 1
  %73 = load i64, i64* %72, align 8, !noalias !43
  store i64 %73, i64* %71, align 8, !alias.scope !46, !noalias !40
  %74 = call i8* @_Znwm(i64 64) #9, !noalias !47
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS6_S7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS5_S6_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !47
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to void (%"class.base::WeakPtr.10"*, i32)**
  store void (%"class.base::WeakPtr.10"*, i32)* @_ZN12_GLOBAL__N_129UpdateDispatcherFilterQualityEN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQuality, void (%"class.base::WeakPtr.10"*, i32)** %77, align 8, !noalias !47
  %78 = getelementptr inbounds i8, i8* %74, i64 40
  %79 = bitcast i8* %78 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %79, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %69) #8, !noalias !47
  %80 = getelementptr inbounds i8, i8* %74, i64 48
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %71, align 8, !noalias !47
  store i64 %82, i64* %81, align 8, !noalias !47
  %83 = getelementptr inbounds i8, i8* %74, i64 56
  %84 = bitcast i8* %83 to i32*
  store i32 %1, i32* %84, align 4, !noalias !47
  %85 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #8, !noalias !40
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %87 = ptrtoint i8* %74 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %86, align 8, !noalias !52
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %88, align 8, !noalias !52
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #8, !noalias !52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #8, !noalias !40
  %90 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %90) #8, !noalias !40
  %91 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %91) #8, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #8, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  %92 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = bitcast %"class.base::SingleThreadTaskRunner"* %41 to %"class.base::TaskRunner"*
  %95 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %87, i64* %97, align 8, !alias.scope !55
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %96, align 8, !noalias !55
  %98 = bitcast %"class.base::SingleThreadTaskRunner"* %41 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %99 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %98, align 8
  %100 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %99, align 8
  %101 = call zeroext i1 %100(%"class.base::TaskRunner"* %94, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback"* nonnull %7, i64 0) #8
  %102 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #8
  %103 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %103) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  %104 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #8
  br label %105

105:                                              ; preds = %65, %63
  %106 = icmp eq %"class.base::SingleThreadTaskRunner"* %40, null
  br i1 %106, label %115, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %40, i64 0, i32 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw sub i32* %109, i32 1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %108, i64 -2
  %114 = bitcast %"class.base::RefCountedThreadSafe.2"* %113 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %114) #8
  br label %115

115:                                              ; preds = %112, %107, %105, %26, %15
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_124releaseFrameToDispatcherEN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS2_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32) #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.blink::CanvasResource"* %1, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::CanvasResource", %"class.blink::CanvasResource"* %1, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::CanvasResource"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::CanvasResource"*)***
  %15 = load void (%"class.blink::CanvasResource"*)**, void (%"class.blink::CanvasResource"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %15, i64 1
  %17 = load void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %16, align 8
  tail call void %17(%"class.blink::CanvasResource"* nonnull %13) #8
  br label %18

18:                                               ; preds = %3, %6, %11
  %19 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 0
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #8
  br i1 %20, label %21, label %37

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 1
  %23 = bitcast i64* %22 to %"class.blink::CanvasResourceDispatcher"**
  %24 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %23, align 8
  %25 = icmp eq %"class.blink::CanvasResourceDispatcher"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %21
  %27 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #8
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %26
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #8
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %23, align 8
  br label %35

35:                                               ; preds = %31, %33
  %36 = phi %"class.blink::CanvasResourceDispatcher"* [ %34, %33 ], [ null, %31 ]
  call void @_ZN5blink24CanvasResourceDispatcher15ReclaimResourceEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.blink::CanvasResourceDispatcher"* %36, i32 %2) #8
  br label %37

37:                                               ; preds = %21, %18, %35
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_129UpdateDispatcherFilterQualityEN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQuality(%"class.base::WeakPtr.10"*, i32) #0 {
  %3 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i64* %6 to %"class.blink::CanvasResourceDispatcher"**
  %8 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %7, align 8
  %9 = icmp eq %"class.blink::CanvasResourceDispatcher"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call %"class.blink::CanvasResourceDispatcher"* @_ZNK4base7WeakPtrIN5blink24CanvasResourceDispatcherEEptEv(%"class.base::WeakPtr.10"* %0)
  tail call void @_ZN5blink24CanvasResourceDispatcher16SetFilterQualityE15SkFilterQuality(%"class.blink::CanvasResourceDispatcher"* %11, i32 %1) #8
  br label %12

12:                                               ; preds = %5, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder34SetSuspendOffscreenCanvasAnimationEb(%"class.blink::OffscreenCanvasPlaceholder"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %19 [
    i32 0, label %5
    i32 1, label %10
    i32 2, label %15
    i32 3, label %17
  ]

5:                                                ; preds = %2
  br i1 %1, label %6, label %19

6:                                                ; preds = %5
  %7 = tail call zeroext i1 @_ZN5blink26OffscreenCanvasPlaceholder46PostSetSuspendAnimationToOffscreenCanvasThreadEb(%"class.blink::OffscreenCanvasPlaceholder"* %0, i1 zeroext true)
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %3, align 8
  br label %19

9:                                                ; preds = %6
  store i32 2, i32* %3, align 8
  br label %19

10:                                               ; preds = %2
  br i1 %1, label %19, label %11

11:                                               ; preds = %10
  %12 = tail call zeroext i1 @_ZN5blink26OffscreenCanvasPlaceholder46PostSetSuspendAnimationToOffscreenCanvasThreadEb(%"class.blink::OffscreenCanvasPlaceholder"* %0, i1 zeroext false)
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store i32 0, i32* %3, align 8
  br label %19

14:                                               ; preds = %11
  store i32 3, i32* %3, align 8
  br label %19

15:                                               ; preds = %2
  br i1 %1, label %19, label %16

16:                                               ; preds = %15
  store i32 0, i32* %3, align 8
  br label %19

17:                                               ; preds = %2
  br i1 %1, label %18, label %19

18:                                               ; preds = %17
  store i32 1, i32* %3, align 8
  br label %19

19:                                               ; preds = %2, %17, %18, %15, %16, %10, %14, %13, %5, %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::OffscreenCanvasPlaceholder"* @_ZN5blink26OffscreenCanvasPlaceholder24GetPlaceholderCanvasByIdEj(i32) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to %"struct.WTF::KeyValuePair"**), align 8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, null
  %11 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %10, label %65, label %12

12:                                               ; preds = %8
  %13 = add i32 %11, -1
  %14 = zext i32 %13 to i64
  %15 = shl i32 %0, 15
  %16 = xor i32 %15, -1
  %17 = add i32 %16, %0
  %18 = lshr i32 %17, 10
  %19 = xor i32 %18, %17
  %20 = mul i32 %19, 9
  %21 = lshr i32 %20, 6
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 11
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = and i32 %13, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %29
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %0
  br i1 %33, label %62, label %34

34:                                               ; preds = %12
  %35 = xor i32 %27, -1
  %36 = lshr i32 %25, 23
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %53, %34
  %49 = phi i32 [ %32, %34 ], [ %60, %53 ]
  %50 = phi i64 [ %29, %34 ], [ %57, %53 ]
  %51 = phi i64 [ 0, %34 ], [ %55, %53 ]
  %52 = icmp eq i32 %49, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %48
  %54 = icmp eq i64 %51, 0
  %55 = select i1 %54, i64 %47, i64 %51
  %56 = add i64 %55, %50
  %57 = and i64 %56, %14
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %0
  br i1 %61, label %62, label %48

62:                                               ; preds = %53, %12
  %63 = phi %"struct.WTF::KeyValuePair"* [ %30, %12 ], [ %58, %53 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, null
  br i1 %64, label %65, label %68

65:                                               ; preds = %48, %62, %8
  %66 = zext i32 %11 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %9, i64 %66
  br label %68

68:                                               ; preds = %62, %65
  %69 = phi %"struct.WTF::KeyValuePair"* [ %67, %65 ], [ %63, %62 ]
  %70 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to i8*) acquire, align 8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %76, !prof !2

72:                                               ; preds = %68
  %73 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  br label %76

76:                                               ; preds = %68, %72, %75
  %77 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to %"struct.WTF::KeyValuePair"**), align 8
  %78 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %79
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %69, %80
  br i1 %81, label %85, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %84 = load %"class.blink::OffscreenCanvasPlaceholder"*, %"class.blink::OffscreenCanvasPlaceholder"** %83, align 8
  br label %85

85:                                               ; preds = %76, %82
  %86 = phi %"class.blink::OffscreenCanvasPlaceholder"* [ %84, %82 ], [ null, %76 ]
  ret %"class.blink::OffscreenCanvasPlaceholder"* %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26OffscreenCanvasPlaceholder25RegisterPlaceholderCanvasEj(%"class.blink::OffscreenCanvasPlaceholder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::OffscreenCanvasPlaceholder"*, align 8
  store i32 %1, i32* %3, align 4
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry) #8
  br label %11

11:                                               ; preds = %2, %7, %10
  %12 = bitcast %"class.blink::OffscreenCanvasPlaceholder"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store %"class.blink::OffscreenCanvasPlaceholder"* %0, %"class.blink::OffscreenCanvasPlaceholder"** %4, align 8
  %13 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN12_GLOBAL__N_119placeholderRegistryEvE23s_s_placeholderRegistry to %"class.WTF::HashTable"*), i32* nonnull dereferenceable(4) %3, %"class.blink::OffscreenCanvasPlaceholder"** nonnull dereferenceable(8) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %14 = load i32, i32* %3, align 4
  %15 = getelementptr inbounds %"class.blink::OffscreenCanvasPlaceholder", %"class.blink::OffscreenCanvasPlaceholder"* %0, i64 0, i32 5
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIiPN5blink26OffscreenCanvasPlaceholderENS_7IntHashIiEENS_10HashTraitsIiEENS6_IS3_EENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, %69
  br i1 %72, label %96, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 4
  %84 = mul i32 %83, 6
  %85 = load i32, i32* %6, align 8
  %86 = icmp ult i32 %84, %85
  %87 = icmp ugt i32 %85, 8
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %73
  %90 = lshr i32 %85, 1
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 4
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEEEEPKcv, i64 0, i64 0)) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 0, i64 %92, i1 false) #8
  %94 = bitcast i8* %93 to %"struct.WTF::KeyValuePair"*
  %95 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %70, %"struct.WTF::KeyValuePair"* %94, i32 %90, %"struct.WTF::KeyValuePair"* null) #8
  br label %96

96:                                               ; preds = %67, %73, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119SetSuspendAnimationEN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEb(%"class.base::WeakPtr.10"*, i1 zeroext) #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #8
  br i1 %5, label %6, label %22

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i64* %7 to %"class.blink::CanvasResourceDispatcher"**
  %9 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %8, align 8
  %10 = icmp eq %"class.blink::CanvasResourceDispatcher"* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #8
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #8
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  br label %16

16:                                               ; preds = %13, %11
  %17 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #8
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %8, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi %"class.blink::CanvasResourceDispatcher"* [ %19, %18 ], [ null, %16 ]
  call void @_ZN5blink24CanvasResourceDispatcher19SetSuspendAnimationEb(%"class.blink::CanvasResourceDispatcher"* %21, i1 zeroext %1) #8
  br label %22

22:                                               ; preds = %6, %2, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26OffscreenCanvasPlaceholder16HasCanvasCaptureEv(%"class.blink::OffscreenCanvasPlaceholder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS4_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS6_S9_SE_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr.10", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr.10"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = load void (%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32)*, void (%"class.base::WeakPtr.10"*, %"class.blink::CanvasResource"*, i32)** %4, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #8
  %10 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %15 = bitcast void ()** %14 to %"class.blink::CanvasResource"**
  %16 = load %"class.blink::CanvasResource"*, %"class.blink::CanvasResource"** %15, align 8
  store %"class.blink::CanvasResource"* null, %"class.blink::CanvasResource"** %15, align 8
  %17 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %18 = bitcast void ()** %17 to i32*
  %19 = load i32, i32* %18, align 4
  call void %7(%"class.base::WeakPtr.10"* nonnull %2, %"class.blink::CanvasResource"* %16, i32 %19) #8
  %20 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS3_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS5_S8_SD_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::CanvasResource"**
  %6 = load %"class.blink::CanvasResource"*, %"class.blink::CanvasResource"** %5, align 8
  %7 = icmp eq %"class.blink::CanvasResource"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::CanvasResource", %"class.blink::CanvasResource"* %6, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.blink::CanvasResource"*
  %16 = bitcast %"class.base::RefCountedThreadSafe"* %14 to void (%"class.blink::CanvasResource"*)***
  %17 = load void (%"class.blink::CanvasResource"*)**, void (%"class.blink::CanvasResource"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %17, i64 1
  %19 = load void (%"class.blink::CanvasResource"*)*, void (%"class.blink::CanvasResource"*)** %18, align 8
  tail call void %19(%"class.blink::CanvasResource"* nonnull %15) #8
  br label %20

20:                                               ; preds = %3, %8, %13
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %22 = bitcast void ()** %21 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %22) #8
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %20, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CanvasResourceDispatcher"* @_ZNK4base7WeakPtrIN5blink24CanvasResourceDispatcherEEptEv(%"class.base::WeakPtr.10"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #8
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  br label %8

8:                                                ; preds = %1, %5
  %9 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #8
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %0, i64 0, i32 0, i32 1
  %12 = bitcast i64* %11 to %"class.blink::CanvasResourceDispatcher"**
  %13 = load %"class.blink::CanvasResourceDispatcher"*, %"class.blink::CanvasResourceDispatcher"** %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi %"class.blink::CanvasResourceDispatcher"* [ %13, %10 ], [ null, %8 ]
  ret %"class.blink::CanvasResourceDispatcher"* %15
}

declare void @_ZN5blink24CanvasResourceDispatcher15ReclaimResourceEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.blink::CanvasResourceDispatcher"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare void @_ZN5blink24CanvasResourceDispatcher16SetFilterQualityE15SkFilterQuality(%"class.blink::CanvasResourceDispatcher"*, i32) local_unnamed_addr #3

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS6_S7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr.10", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr.10"*, i32)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %7 = bitcast void ()** %6 to i32*
  %8 = bitcast %"class.base::WeakPtr.10"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = load void (%"class.base::WeakPtr.10"*, i32)*, void (%"class.base::WeakPtr.10"*, i32)** %4, align 8
  %10 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0, i32 0
  %11 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %10, %"class.base::internal::WeakReference"* dereferenceable(8) %11) #8
  %12 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  %16 = load i32, i32* %7, align 4
  call void %9(%"class.base::WeakPtr.10"* nonnull %2, i32 %16) #8
  %17 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS5_S6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS6_bEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr.10", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr.10"*, i1)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %7 = bitcast void ()** %6 to i8*
  %8 = bitcast %"class.base::WeakPtr.10"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = load void (%"class.base::WeakPtr.10"*, i1)*, void (%"class.base::WeakPtr.10"*, i1)** %4, align 8
  %10 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0, i32 0
  %11 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %10, %"class.base::internal::WeakReference"* dereferenceable(8) %11) #8
  %12 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  %16 = load i8, i8* %7, align 1, !range !39
  %17 = icmp ne i8 %16, 0
  call void %9(%"class.base::WeakPtr.10"* nonnull %2, i1 zeroext %17) #8
  %18 = getelementptr inbounds %"class.base::WeakPtr.10", %"class.base::WeakPtr.10"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS5_bEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN5blink24CanvasResourceDispatcher19SetSuspendAnimationEb(%"class.blink::CanvasResourceDispatcher"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERjS4_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.blink::OffscreenCanvasPlaceholder"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %98, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = bitcast %"class.blink::OffscreenCanvasPlaceholder"** %2 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::OffscreenCanvasPlaceholder"** %83 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add i32 %91, %89
  %93 = shl i32 %92, 1
  %94 = load i32, i32* %12, align 8
  %95 = icmp ult i32 %93, %94
  br i1 %95, label %98, label %96

96:                                               ; preds = %79
  %97 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %98

98:                                               ; preds = %50, %79, %96
  %99 = phi i8 [ 1, %79 ], [ 1, %96 ], [ 0, %50 ]
  %100 = phi %"struct.WTF::KeyValuePair"* [ %81, %79 ], [ %97, %96 ], [ %52, %50 ]
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %100, 0
  %102 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %101, i8 %99, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiPN5blink26OffscreenCanvasPlaceholderEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSA_IS4_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %117
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %118, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %121, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %117
  %32 = phi i64 [ %17, %13 ], [ %118, %117 ]
  %33 = phi i32 [ %7, %13 ], [ %119, %117 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %120, %117 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %121, %117 ]
  %36 = phi i32 [ 0, %13 ], [ %122, %117 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %117, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair"*
  %109 = inttoptr i64 %107 to i8*
  %110 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #8
  %111 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %111, i64 %37
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair"* %108, %"struct.WTF::KeyValuePair"* %35
  %115 = load i32, i32* %6, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair"* %111 to i64
  br label %117

117:                                              ; preds = %31, %106
  %118 = phi i64 [ %32, %31 ], [ %116, %106 ]
  %119 = phi i32 [ %33, %31 ], [ %115, %106 ]
  %120 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %111, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %114, %106 ]
  %122 = add i32 %36, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTF19CrossThreadBindOnceIRFvN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS3_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJRS5_S8_RSD_EEEDaOT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTF19CrossThreadBindOnceIRFvN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS3_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJRS5_S8_RSD_EEEDaOT_DpOT0_"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEE4CopyERKS5_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEE4CopyERKS5_"}
!9 = !{!7}
!10 = !{!11, !13, !4}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS4_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS6_S9_SE_EEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS4_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS6_S9_SE_EEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS2_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS4_S7_SC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE13scoped_refptrINS2_14CanvasResourceEEN4util6IdTypeIN3viz20ResourceIdTypeMarkerEjLj0ELj1EEEEJS4_S7_SC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!15 = !{!16, !4}
!16 = distinct !{!16, !17, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF19CrossThreadBindOnceIRFvN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJRS5_RbEEEDaOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF19CrossThreadBindOnceIRFvN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJRS5_RbEEEDaOT_DpOT0_"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEE4CopyERKS5_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEE4CopyERKS5_"}
!27 = !{!25}
!28 = !{!29, !31, !22}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS6_bEEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS6_bEEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS4_bEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEEbEJS4_bEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!33 = !{!34, !22}
!34 = distinct !{!34, !35, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!39 = !{i8 0, i8 2}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN3WTF19CrossThreadBindOnceIRFvN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJRS5_RS6_EEEDaOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZN3WTF19CrossThreadBindOnceIRFvN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJRS5_RS6_EEEDaOT_DpOT0_"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEE4CopyERKS5_: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink24CanvasResourceDispatcherEEEE4CopyERKS5_"}
!46 = !{!44}
!47 = !{!48, !50, !41}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS6_S7_EEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS6_S7_EEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS4_S5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!51 = distinct !{!51, !"_ZN4base8BindOnceIRFvNS_7WeakPtrIN5blink24CanvasResourceDispatcherEEE15SkFilterQualityEJS4_S5_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!52 = !{!53, !41}
!53 = distinct !{!53, !54, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!54 = distinct !{!54, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!57 = distinct !{!57, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
