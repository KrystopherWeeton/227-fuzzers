; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_scaledrenderbuffer.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_scaledrenderbuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ScaledRenderBuffer = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.5", %struct.FX_RECT, %"class.fxcrt::UnownedPtr.18", %"class.std::__1::unique_ptr.19", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector.25" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i32*, i32*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.30", %"class.fxcrt::UnownedPtr.34" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i8* }
%"class.fxcrt::UnownedPtr.34" = type { i8* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.5" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr.6", %"class.fxcrt::RetainPtr.7", %"class.fxcrt::UnownedPtr.13", %"class.std::__1::vector" }
%"class.fxcrt::UnownedPtr.6" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type opaque
%"class.fxcrt::UnownedPtr.13" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.15" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.14", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.14" = type { %class.CPDF_PageObjectHolder* }
%class.CPDF_PageObjectHolder = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.CPDF_RenderContext::Layer"* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.fxcrt::UnownedPtr.18" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CFX_DefaultRenderDevice* }
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_RenderOptions = type opaque
%class.CFX_FloatRect = type { float, float, float, float }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CFX_DIBBase* }

@_ZN23CPDF_ScaledRenderBufferC1Ev = hidden unnamed_addr alias void (%class.CPDF_ScaledRenderBuffer*), void (%class.CPDF_ScaledRenderBuffer*)* @_ZN23CPDF_ScaledRenderBufferC2Ev
@_ZN23CPDF_ScaledRenderBufferD1Ev = hidden unnamed_addr alias void (%class.CPDF_ScaledRenderBuffer*), void (%class.CPDF_ScaledRenderBuffer*)* @_ZN23CPDF_ScaledRenderBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CPDF_ScaledRenderBufferC2Ev(%class.CPDF_ScaledRenderBuffer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 5, i32 0
  %3 = bitcast %class.CPDF_ScaledRenderBuffer* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  %4 = bitcast float* %2 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %4, align 4
  %5 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 5, i32 4
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 5, i32 5
  store float 0.000000e+00, float* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CPDF_ScaledRenderBufferD2Ev(%class.CPDF_ScaledRenderBuffer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice** %2, align 8
  store %class.CFX_DefaultRenderDevice* null, %class.CFX_DefaultRenderDevice** %2, align 8
  %4 = icmp eq %class.CFX_DefaultRenderDevice* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CFX_DefaultRenderDevice* %3 to void (%class.CFX_DefaultRenderDevice*)***
  %7 = load void (%class.CFX_DefaultRenderDevice*)**, void (%class.CFX_DefaultRenderDevice*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.CFX_DefaultRenderDevice*)*, void (%class.CFX_DefaultRenderDevice*)** %7, i64 1
  %9 = load void (%class.CFX_DefaultRenderDevice*)*, void (%class.CFX_DefaultRenderDevice*)** %8, align 8
  tail call void %9(%class.CFX_DefaultRenderDevice* nonnull %3) #5
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN23CPDF_ScaledRenderBuffer10InitializeEP18CPDF_RenderContextP16CFX_RenderDeviceRK7FX_RECTPK15CPDF_PageObjectPK18CPDF_RenderOptionsi(%class.CPDF_ScaledRenderBuffer*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), %class.CPDF_PageObject*, %class.CPDF_RenderOptions*, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.CFX_Matrix, align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %class.CFX_FloatRect*
  %11 = alloca %class.CFX_FloatRect, align 4
  %12 = alloca %"class.fxcrt::RetainPtr", align 8
  %13 = alloca %"class.fxcrt::RetainPtr", align 8
  %14 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* %2, %class.CFX_RenderDevice** %14, align 8
  %15 = tail call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %2, i32 7) #5
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %114

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 1, i32 0
  store %class.CPDF_RenderContext* %1, %class.CPDF_RenderContext** %19, align 8
  %20 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 2
  %21 = bitcast %struct.FX_RECT* %20 to i8*
  %22 = bitcast %struct.FX_RECT* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 3, i32 0
  store %class.CPDF_PageObject* %4, %class.CPDF_PageObject** %23, align 8
  %24 = bitcast %class.CFX_Matrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #5
  call void @_ZN17CPDF_DeviceBuffer15CalculateMatrixEP16CFX_RenderDeviceRK7FX_RECTib(%class.CFX_Matrix* nonnull sret %8, %class.CFX_RenderDevice* %2, %struct.FX_RECT* dereferenceable(16) %3, i32 %6, i1 zeroext true) #5
  %25 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 5
  %26 = bitcast %class.CFX_Matrix* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 4 %24, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #5
  %27 = call i8* @_Znwm(i64 64) #6
  %28 = bitcast i8* %27 to %class.CFX_DefaultRenderDevice*
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %28) #5
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.19"* %30 to i64*
  store i64 %29, i64* %33, align 8
  %34 = icmp eq %class.CFX_DefaultRenderDevice* %32, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %18
  %36 = bitcast %class.CFX_DefaultRenderDevice* %32 to void (%class.CFX_DefaultRenderDevice*)***
  %37 = load void (%class.CFX_DefaultRenderDevice*)**, void (%class.CFX_DefaultRenderDevice*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.CFX_DefaultRenderDevice*)*, void (%class.CFX_DefaultRenderDevice*)** %37, i64 1
  %39 = load void (%class.CFX_DefaultRenderDevice*)*, void (%class.CFX_DefaultRenderDevice*)** %38, align 8
  call void %39(%class.CFX_DefaultRenderDevice* nonnull %32) #5
  br label %40

40:                                               ; preds = %35, %18
  %41 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %14, align 8
  %42 = call i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* %41, i32 7) #5
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i16 24, i16 544
  %46 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %47 = bitcast %class.CFX_FloatRect* %11 to i8*
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %50 = bitcast %"class.fxcrt::RetainPtr"* %12 to i8*
  %51 = bitcast %"class.fxcrt::RetainPtr"* %12 to i64*
  %52 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %92, %40
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #5
  call void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect* nonnull %11, %struct.FX_RECT* dereferenceable(16) %3) #5
  %54 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %25, %class.CFX_FloatRect* nonnull dereferenceable(16) %11) #5
  %55 = extractvalue { <2 x float>, <2 x float> } %54, 0
  store <2 x float> %55, <2 x float>* %48, align 8
  %56 = extractvalue { <2 x float>, <2 x float> } %54, 1
  store <2 x float> %56, <2 x float>* %49, align 8
  %57 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %10) #5
  %58 = extractvalue { i64, i64 } %57, 0
  %59 = trunc i64 %58 to i32
  %60 = lshr i64 %58, 32
  %61 = trunc i64 %60 to i32
  %62 = extractvalue { i64, i64 } %57, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #5
  %63 = trunc i64 %62 to i32
  %64 = sub nsw i32 %63, %59
  %65 = lshr i64 %62, 32
  %66 = trunc i64 %65 to i32
  %67 = sub nsw i32 %66, %61
  %68 = call { i64, i32 } @_ZN12CFX_DIBitmap21CalculatePitchAndSizeEii12FXDIB_Formatj(i32 %64, i32 %67, i16 zeroext %45, i32 0) #5
  %69 = extractvalue { i64, i32 } %68, 0
  %70 = trunc i64 %69 to i8
  switch i8 %70, label %71 [
    i8 0, label %114
    i8 1, label %72
  ], !prof !2

71:                                               ; preds = %53
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !3
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !4
  unreachable

72:                                               ; preds = %53
  %73 = extractvalue { i64, i32 } %68, 1
  %74 = icmp ult i32 %73, 31457281
  br i1 %74, label %75, label %92

75:                                               ; preds = %72
  %76 = load %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #5
  store i64 0, i64* %51, align 8
  %77 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice* %76, i32 %64, i32 %67, i16 zeroext %45, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %12) #5
  %78 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %52, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %52, align 8
  %79 = icmp eq %class.CFX_DIBitmap* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %78, i64 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = add nsw i64 %82, -1
  store i64 %83, i64* %81, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %78, i64 0, i32 0, i32 0
  %87 = bitcast %class.CFX_DIBitmap* %78 to void (%"class.fxcrt::Retainable"*)***
  %88 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, i64 1
  %90 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %89, align 8
  call void %90(%"class.fxcrt::Retainable"* nonnull %86) #5
  br label %91

91:                                               ; preds = %85, %80, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #5
  br i1 %77, label %93, label %92

92:                                               ; preds = %72, %91
  call void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix* %25, float 5.000000e-01, float 5.000000e-01) #5
  br label %53

93:                                               ; preds = %91
  %94 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %19, align 8
  %95 = bitcast %"class.fxcrt::RetainPtr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #5
  %96 = load %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice** %31, align 8
  %97 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %96, i64 0, i32 0
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %13, %class.CFX_RenderDevice* %97) #5
  %98 = load %class.CPDF_PageObject*, %class.CPDF_PageObject** %23, align 8
  call void @_ZN18CPDF_RenderContext13GetBackgroundERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK15CPDF_PageObjectPK18CPDF_RenderOptionsRK10CFX_Matrix(%class.CPDF_RenderContext* %94, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %13, %class.CPDF_PageObject* %98, %class.CPDF_RenderOptions* %5, %class.CFX_Matrix* dereferenceable(24) %25) #5
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %99, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %99, align 8
  %101 = icmp eq %class.CFX_DIBitmap* %100, null
  br i1 %101, label %113, label %102

102:                                              ; preds = %93
  %103 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, -1
  store i64 %105, i64* %103, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %102
  %108 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %100, i64 0, i32 0, i32 0
  %109 = bitcast %class.CFX_DIBitmap* %100 to void (%"class.fxcrt::Retainable"*)***
  %110 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, i64 1
  %112 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, align 8
  call void %112(%"class.fxcrt::Retainable"* nonnull %108) #5
  br label %113

113:                                              ; preds = %93, %102, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #5
  br label %114

114:                                              ; preds = %53, %113, %7
  %115 = phi i1 [ true, %7 ], [ true, %113 ], [ false, %53 ]
  ret i1 %115
}

declare i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN17CPDF_DeviceBuffer15CalculateMatrixEP16CFX_RenderDeviceRK7FX_RECTib(%class.CFX_Matrix* sret, %class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN13CFX_FloatRectC1ERK7FX_RECT(%class.CFX_FloatRect*, %struct.FX_RECT* dereferenceable(16)) unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

declare { i64, i32 } @_ZN12CFX_DIBitmap21CalculatePitchAndSizeEii12FXDIB_Formatj(i32, i32, i16 zeroext, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice*, i32, i32, i16 zeroext, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #1

declare void @_ZN18CPDF_RenderContext13GetBackgroundERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK15CPDF_PageObjectPK18CPDF_RenderOptionsRK10CFX_Matrix(%class.CPDF_RenderContext*, %"class.fxcrt::RetainPtr"* dereferenceable(8), %class.CPDF_PageObject*, %class.CPDF_RenderOptions*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_RenderDevice*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_RenderDevice* @_ZNK23CPDF_ScaledRenderBuffer9GetDeviceEv(%class.CPDF_ScaledRenderBuffer* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice** %2, align 8
  %4 = icmp eq %class.CFX_DefaultRenderDevice* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %3, i64 0, i32 0
  br label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 0, i32 0
  %9 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %8, align 8
  br label %10

10:                                               ; preds = %7, %5
  %11 = phi %class.CFX_RenderDevice* [ %6, %5 ], [ %9, %7 ]
  ret %class.CFX_RenderDevice* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23CPDF_ScaledRenderBuffer14OutputToDeviceEv(%class.CPDF_ScaledRenderBuffer* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.FXDIB_ResampleOptions, align 1
  %3 = alloca %"class.fxcrt::RetainPtr.35", align 8
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice** %5, align 8
  %7 = icmp eq %class.CFX_DefaultRenderDevice* %6, null
  br i1 %7, label %65, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 0, i32 0
  %10 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %9, align 8
  %11 = bitcast %"class.fxcrt::RetainPtr.35"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #5
  %12 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %13 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %6, i64 0, i32 0
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* nonnull sret %4, %class.CFX_RenderDevice* %13) #5
  %14 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %14, align 8
  %16 = ptrtoint %class.CFX_DIBitmap* %15 to i64
  %17 = bitcast %"class.fxcrt::RetainPtr.35"* %3 to i64*
  store i64 %16, i64* %17, align 8
  %18 = icmp eq %class.CFX_DIBitmap* %15, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %15, i64 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8
  br label %23

23:                                               ; preds = %8, %19
  %24 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 2, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 2, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 2, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = sub nsw i32 %29, %25
  %31 = getelementptr inbounds %class.CPDF_ScaledRenderBuffer, %class.CPDF_ScaledRenderBuffer* %0, i64 0, i32 2, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %32, %27
  %34 = getelementptr inbounds %struct.FXDIB_ResampleOptions, %struct.FXDIB_ResampleOptions* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #5
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %2) #5
  %35 = call zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice* %10, %"class.fxcrt::RetainPtr.35"* nonnull dereferenceable(8) %3, i32 %25, i32 %27, i32 %30, i32 %33, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %2, i32 0) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #5
  %36 = getelementptr inbounds %"class.fxcrt::RetainPtr.35", %"class.fxcrt::RetainPtr.35"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %36, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %36, align 8
  %38 = icmp eq %class.CFX_DIBBase* %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %23
  %40 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %37, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, -1
  store i64 %42, i64* %40, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %37, i64 0, i32 0
  %46 = bitcast %class.CFX_DIBBase* %37 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %45) #5
  br label %50

50:                                               ; preds = %23, %39, %44
  %51 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %14, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %14, align 8
  %52 = icmp eq %class.CFX_DIBitmap* %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %51, i64 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %51, i64 0, i32 0, i32 0
  %60 = bitcast %class.CFX_DIBitmap* %51 to void (%"class.fxcrt::Retainable"*)***
  %61 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, i64 1
  %63 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, align 8
  call void %63(%"class.fxcrt::Retainable"* nonnull %59) #5
  br label %64

64:                                               ; preds = %50, %53, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #5
  br label %65

65:                                               ; preds = %1, %64
  ret void
}

declare zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.35"* dereferenceable(8), i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), i32) local_unnamed_addr #1

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!3 = !{i32 -2143860887}
!4 = !{i32 -2143860866}
