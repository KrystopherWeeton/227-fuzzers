; ModuleID = '../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-hangul.cc'
source_filename = "../../third_party/harfbuzz-ng/src/src/hb-ot-shape-complex-hangul.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.hb_ot_shape_planner_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, %struct.hb_ot_map_builder_t, %struct.hb_aat_map_builder_t, i8, %struct.hb_ot_complex_shaper_t* }
%struct.hb_face_t = type { %struct.hb_object_header_t, %struct.hb_blob_t* (%struct.hb_face_t*, i32, i8*)*, i8*, void (i8*)*, i32, %struct.hb_atomic_int_t, %struct.hb_atomic_int_t, %struct.hb_shaper_object_dataset_t, %struct.hb_ot_face_t, %struct.hb_atomic_ptr_t.126 }
%struct.hb_object_header_t = type { %struct.hb_reference_count_t, %struct.hb_atomic_int_t, %struct.hb_atomic_ptr_t }
%struct.hb_reference_count_t = type { %struct.hb_atomic_int_t }
%struct.hb_atomic_ptr_t = type { %struct.hb_user_data_array_t* }
%struct.hb_user_data_array_t = type { %struct.hb_mutex_t, %struct.hb_lockable_set_t }
%struct.hb_mutex_t = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.hb_lockable_set_t = type { %struct.hb_vector_t }
%struct.hb_vector_t = type { i32, i32, %"struct.hb_user_data_array_t::hb_user_data_item_t"* }
%"struct.hb_user_data_array_t::hb_user_data_item_t" = type { %struct.hb_user_data_key_t*, i8*, void (i8*)* }
%struct.hb_user_data_key_t = type { i8 }
%struct.hb_blob_t = type { %struct.hb_object_header_t, i8*, i32, i32, i8*, void (i8*)* }
%struct.hb_atomic_int_t = type { i32 }
%struct.hb_shaper_object_dataset_t = type { %struct.hb_face_t*, %struct.hb_shaper_lazy_loader_t }
%struct.hb_shaper_lazy_loader_t = type { %struct.hb_lazy_loader_t }
%struct.hb_lazy_loader_t = type { %struct.hb_atomic_ptr_t.0 }
%struct.hb_atomic_ptr_t.0 = type { %struct.hb_ot_face_data_t* }
%struct.hb_ot_face_data_t = type opaque
%struct.hb_ot_face_t = type { %struct.hb_face_t*, %struct.hb_table_lazy_loader_t, %struct.hb_face_lazy_loader_t, %struct.hb_table_lazy_loader_t.6, %struct.hb_face_lazy_loader_t.9, %struct.hb_table_lazy_loader_t.13, %struct.hb_face_lazy_loader_t.16, %struct.hb_face_lazy_loader_t.20, %struct.hb_table_lazy_loader_t.24, %struct.hb_face_lazy_loader_t.27, %struct.hb_table_lazy_loader_t.31, %struct.hb_face_lazy_loader_t.34, %struct.hb_face_lazy_loader_t.38, %struct.hb_face_lazy_loader_t.42, %struct.hb_face_lazy_loader_t.46, %struct.hb_table_lazy_loader_t.50, %struct.hb_table_lazy_loader_t.53, %struct.hb_table_lazy_loader_t.56, %struct.hb_face_lazy_loader_t.59, %struct.hb_table_lazy_loader_t.63, %struct.hb_table_lazy_loader_t.66, %struct.hb_face_lazy_loader_t.69, %struct.hb_face_lazy_loader_t.73, %struct.hb_face_lazy_loader_t.77, %struct.hb_table_lazy_loader_t.81, %struct.hb_table_lazy_loader_t.84, %struct.hb_table_lazy_loader_t.87, %struct.hb_table_lazy_loader_t.90, %struct.hb_table_lazy_loader_t.93, %struct.hb_table_lazy_loader_t.96, %struct.hb_table_lazy_loader_t.99, %struct.hb_table_lazy_loader_t.102, %struct.hb_table_lazy_loader_t.105, %struct.hb_table_lazy_loader_t.108, %struct.hb_face_lazy_loader_t.111, %struct.hb_face_lazy_loader_t.115, %struct.hb_face_lazy_loader_t.119, %struct.hb_table_lazy_loader_t.123 }
%struct.hb_table_lazy_loader_t = type { %struct.hb_lazy_loader_t.1 }
%struct.hb_lazy_loader_t.1 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.2 = type { %struct.hb_blob_t* }
%struct.hb_face_lazy_loader_t = type { %struct.hb_lazy_loader_t.3 }
%struct.hb_lazy_loader_t.3 = type { %struct.hb_atomic_ptr_t.5 }
%struct.hb_atomic_ptr_t.5 = type { %"struct.OT::cmap_accelerator_t"* }
%"struct.OT::cmap_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.6 = type { %struct.hb_lazy_loader_t.7 }
%struct.hb_lazy_loader_t.7 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.9 = type { %struct.hb_lazy_loader_t.10 }
%struct.hb_lazy_loader_t.10 = type { %struct.hb_atomic_ptr_t.12 }
%struct.hb_atomic_ptr_t.12 = type { %"struct.OT::hmtx_accelerator_t"* }
%"struct.OT::hmtx_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.13 = type { %struct.hb_lazy_loader_t.14 }
%struct.hb_lazy_loader_t.14 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.16 = type { %struct.hb_lazy_loader_t.17 }
%struct.hb_lazy_loader_t.17 = type { %struct.hb_atomic_ptr_t.19 }
%struct.hb_atomic_ptr_t.19 = type { %"struct.OT::post_accelerator_t"* }
%"struct.OT::post_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.20 = type { %struct.hb_lazy_loader_t.21 }
%struct.hb_lazy_loader_t.21 = type { %struct.hb_atomic_ptr_t.23 }
%struct.hb_atomic_ptr_t.23 = type { %"struct.OT::name_accelerator_t"* }
%"struct.OT::name_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.24 = type { %struct.hb_lazy_loader_t.25 }
%struct.hb_lazy_loader_t.25 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.27 = type { %struct.hb_lazy_loader_t.28 }
%struct.hb_lazy_loader_t.28 = type { %struct.hb_atomic_ptr_t.30 }
%struct.hb_atomic_ptr_t.30 = type { %"struct.OT::meta_accelerator_t"* }
%"struct.OT::meta_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.31 = type { %struct.hb_lazy_loader_t.32 }
%struct.hb_lazy_loader_t.32 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.34 = type { %struct.hb_lazy_loader_t.35 }
%struct.hb_lazy_loader_t.35 = type { %struct.hb_atomic_ptr_t.37 }
%struct.hb_atomic_ptr_t.37 = type { %"struct.OT::vmtx_accelerator_t"* }
%"struct.OT::vmtx_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.38 = type { %struct.hb_lazy_loader_t.39 }
%struct.hb_lazy_loader_t.39 = type { %struct.hb_atomic_ptr_t.41 }
%struct.hb_atomic_ptr_t.41 = type { %"struct.OT::glyf_accelerator_t"* }
%"struct.OT::glyf_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.42 = type { %struct.hb_lazy_loader_t.43 }
%struct.hb_lazy_loader_t.43 = type { %struct.hb_atomic_ptr_t.45 }
%struct.hb_atomic_ptr_t.45 = type { %"struct.OT::cff1_accelerator_t"* }
%"struct.OT::cff1_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.46 = type { %struct.hb_lazy_loader_t.47 }
%struct.hb_lazy_loader_t.47 = type { %struct.hb_atomic_ptr_t.49 }
%struct.hb_atomic_ptr_t.49 = type { %"struct.OT::cff2_accelerator_t"* }
%"struct.OT::cff2_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.50 = type { %struct.hb_lazy_loader_t.51 }
%struct.hb_lazy_loader_t.51 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.53 = type { %struct.hb_lazy_loader_t.54 }
%struct.hb_lazy_loader_t.54 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.56 = type { %struct.hb_lazy_loader_t.57 }
%struct.hb_lazy_loader_t.57 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.59 = type { %struct.hb_lazy_loader_t.60 }
%struct.hb_lazy_loader_t.60 = type { %struct.hb_atomic_ptr_t.62 }
%struct.hb_atomic_ptr_t.62 = type { %"struct.OT::gvar_accelerator_t"* }
%"struct.OT::gvar_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.63 = type { %struct.hb_lazy_loader_t.64 }
%struct.hb_lazy_loader_t.64 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.66 = type { %struct.hb_lazy_loader_t.67 }
%struct.hb_lazy_loader_t.67 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.69 = type { %struct.hb_lazy_loader_t.70 }
%struct.hb_lazy_loader_t.70 = type { %struct.hb_atomic_ptr_t.72 }
%struct.hb_atomic_ptr_t.72 = type { %"struct.OT::GDEF_accelerator_t"* }
%"struct.OT::GDEF_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.73 = type { %struct.hb_lazy_loader_t.74 }
%struct.hb_lazy_loader_t.74 = type { %struct.hb_atomic_ptr_t.76 }
%struct.hb_atomic_ptr_t.76 = type { %"struct.OT::GSUB_accelerator_t"* }
%"struct.OT::GSUB_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.77 = type { %struct.hb_lazy_loader_t.78 }
%struct.hb_lazy_loader_t.78 = type { %struct.hb_atomic_ptr_t.80 }
%struct.hb_atomic_ptr_t.80 = type { %"struct.OT::GPOS_accelerator_t"* }
%"struct.OT::GPOS_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.81 = type { %struct.hb_lazy_loader_t.82 }
%struct.hb_lazy_loader_t.82 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.84 = type { %struct.hb_lazy_loader_t.85 }
%struct.hb_lazy_loader_t.85 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.87 = type { %struct.hb_lazy_loader_t.88 }
%struct.hb_lazy_loader_t.88 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.90 = type { %struct.hb_lazy_loader_t.91 }
%struct.hb_lazy_loader_t.91 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.93 = type { %struct.hb_lazy_loader_t.94 }
%struct.hb_lazy_loader_t.94 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.96 = type { %struct.hb_lazy_loader_t.97 }
%struct.hb_lazy_loader_t.97 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.99 = type { %struct.hb_lazy_loader_t.100 }
%struct.hb_lazy_loader_t.100 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.102 = type { %struct.hb_lazy_loader_t.103 }
%struct.hb_lazy_loader_t.103 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.105 = type { %struct.hb_lazy_loader_t.106 }
%struct.hb_lazy_loader_t.106 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_table_lazy_loader_t.108 = type { %struct.hb_lazy_loader_t.109 }
%struct.hb_lazy_loader_t.109 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_face_lazy_loader_t.111 = type { %struct.hb_lazy_loader_t.112 }
%struct.hb_lazy_loader_t.112 = type { %struct.hb_atomic_ptr_t.114 }
%struct.hb_atomic_ptr_t.114 = type { %"struct.OT::CBDT_accelerator_t"* }
%"struct.OT::CBDT_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.115 = type { %struct.hb_lazy_loader_t.116 }
%struct.hb_lazy_loader_t.116 = type { %struct.hb_atomic_ptr_t.118 }
%struct.hb_atomic_ptr_t.118 = type { %"struct.OT::sbix_accelerator_t"* }
%"struct.OT::sbix_accelerator_t" = type opaque
%struct.hb_face_lazy_loader_t.119 = type { %struct.hb_lazy_loader_t.120 }
%struct.hb_lazy_loader_t.120 = type { %struct.hb_atomic_ptr_t.122 }
%struct.hb_atomic_ptr_t.122 = type { %"struct.OT::SVG_accelerator_t"* }
%"struct.OT::SVG_accelerator_t" = type opaque
%struct.hb_table_lazy_loader_t.123 = type { %struct.hb_lazy_loader_t.124 }
%struct.hb_lazy_loader_t.124 = type { %struct.hb_atomic_ptr_t.2 }
%struct.hb_atomic_ptr_t.126 = type { %"struct.hb_face_t::plan_node_t"* }
%"struct.hb_face_t::plan_node_t" = type { %struct.hb_shape_plan_t*, %"struct.hb_face_t::plan_node_t"* }
%struct.hb_shape_plan_t = type { %struct.hb_object_header_t, %struct.hb_face_t*, %struct.hb_shape_plan_key_t, %struct.hb_ot_shape_plan_t }
%struct.hb_shape_plan_key_t = type { %struct.hb_segment_properties_t, %struct.hb_feature_t*, i32, %struct.hb_ot_shape_plan_key_t, i32 (%struct.hb_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*, %struct.hb_feature_t*, i32)*, i8* }
%struct.hb_feature_t = type { i32, i32, i32, i32 }
%struct.hb_ot_shape_plan_key_t = type { [2 x i32] }
%struct.hb_font_t = type { %struct.hb_object_header_t, %struct.hb_font_t*, %struct.hb_face_t*, i32, i32, i64, i64, i32, i32, float, i32, i32*, float*, %struct.hb_font_funcs_t*, i8*, void (i8*)*, %struct.hb_shaper_object_dataset_t.128 }
%struct.hb_font_funcs_t = type { %struct.hb_object_header_t, %struct.anon, %struct.anon.127, %"union.hb_font_funcs_t::get_t" }
%struct.anon = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.127 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%"union.hb_font_funcs_t::get_t" = type { %"struct.hb_font_funcs_t::get_t::get_funcs_t" }
%"struct.hb_font_funcs_t::get_t::get_funcs_t" = type { i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, %struct.hb_font_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, void (%struct.hb_font_t*, i8*, i32, i32*, i32, i32*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, %struct.hb_glyph_extents_t*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32, i32*, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i8*, i32, i8*)*, i32 (%struct.hb_font_t*, i8*, i8*, i32, i32*, i8*)* }
%struct.hb_font_extents_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hb_glyph_extents_t = type { i32, i32, i32, i32 }
%struct.hb_shaper_object_dataset_t.128 = type { %struct.hb_font_t*, %struct.hb_shaper_lazy_loader_t.129 }
%struct.hb_shaper_lazy_loader_t.129 = type { %struct.hb_lazy_loader_t.130 }
%struct.hb_lazy_loader_t.130 = type { %struct.hb_atomic_ptr_t.132 }
%struct.hb_atomic_ptr_t.132 = type { %struct.hb_ot_font_data_t* }
%struct.hb_ot_font_data_t = type opaque
%struct.hb_buffer_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hb_segment_properties_t, i8, i8, i8, i32, i32, i32, i32, %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t*, %struct.hb_glyph_position_t*, i32, [2 x [5 x i32]], [2 x i32], i32 (%struct.hb_buffer_t*, %struct.hb_font_t*, i8*, i8*)*, i8*, void (i8*)* }
%struct.hb_unicode_funcs_t = type { %struct.hb_object_header_t, %struct.hb_unicode_funcs_t*, %struct.anon.133, %struct.anon.134, %struct.anon.135 }
%struct.anon.133 = type { i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i32*, i8*)*, i32 (%struct.hb_unicode_funcs_t*, i32, i32*, i8*)* }
%struct.anon.134 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct.anon.135 = type { void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)* }
%struct.hb_glyph_info_t = type { i32, i32, i32, %union._hb_var_int_t, %union._hb_var_int_t }
%union._hb_var_int_t = type { i32 }
%struct.hb_glyph_position_t = type { i32, i32, i32, i32, %union._hb_var_int_t }
%struct.hb_ot_shape_plan_t = type <{ %struct.hb_segment_properties_t, %struct.hb_ot_complex_shaper_t*, %struct.hb_ot_map_t, %struct.hb_aat_map_t, i8*, i32, i32, i32, i32, i32, i32, i16, [6 x i8] }>
%struct.hb_ot_map_t = type { [2 x i32], [2 x i8], i32, %struct.hb_sorted_vector_t, [2 x %struct.hb_vector_t.137], [2 x %struct.hb_vector_t.138] }
%struct.hb_sorted_vector_t = type { %struct.hb_vector_t.136 }
%struct.hb_vector_t.136 = type { i32, i32, %"struct.hb_ot_map_t::feature_map_t"* }
%"struct.hb_ot_map_t::feature_map_t" = type { i32, [2 x i32], [2 x i32], i32, i32, i32, i8 }
%struct.hb_vector_t.137 = type { i32, i32, %"struct.hb_ot_map_t::lookup_map_t"* }
%"struct.hb_ot_map_t::lookup_map_t" = type { i16, i8, i32 }
%struct.hb_vector_t.138 = type { i32, i32, %"struct.hb_ot_map_t::stage_map_t"* }
%"struct.hb_ot_map_t::stage_map_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_t = type { %struct.hb_vector_t.139 }
%struct.hb_vector_t.139 = type { i32, i32, i32* }
%struct.hb_segment_properties_t = type { i32, i32, %struct.hb_language_impl_t*, i8*, i8* }
%struct.hb_language_impl_t = type opaque
%struct.hb_ot_map_builder_t = type { %struct.hb_face_t*, %struct.hb_segment_properties_t, [2 x i32], [2 x i8], [2 x i32], [2 x i32], [2 x i32], %struct.hb_vector_t.140, [2 x %struct.hb_vector_t.141] }
%struct.hb_vector_t.140 = type { i32, i32, %"struct.hb_ot_map_builder_t::feature_info_t"* }
%"struct.hb_ot_map_builder_t::feature_info_t" = type { i32, i32, i32, i32, i32, [2 x i32] }
%struct.hb_vector_t.141 = type { i32, i32, %"struct.hb_ot_map_builder_t::stage_info_t"* }
%"struct.hb_ot_map_builder_t::stage_info_t" = type { i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_font_t*, %struct.hb_buffer_t*)* }
%struct.hb_aat_map_builder_t = type { %struct.hb_face_t*, %struct.hb_sorted_vector_t.142 }
%struct.hb_sorted_vector_t.142 = type { %struct.hb_vector_t.143 }
%struct.hb_vector_t.143 = type { i32, i32, %"struct.hb_aat_map_builder_t::feature_info_t"* }
%"struct.hb_aat_map_builder_t::feature_info_t" = type { i32, i32, i8, i32 }
%struct.hb_ot_complex_shaper_t = type { {}*, {}*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 }
%struct.hb_ot_shape_normalize_context_t = type { %struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*, %struct.hb_unicode_funcs_t*, {}*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* }
%struct.hangul_shape_plan_t = type { [4 x i32] }

@_hb_ot_complex_shaper_hangul = hidden local_unnamed_addr constant { void (%struct.hb_ot_shape_planner_t*)*, void (%struct.hb_ot_shape_planner_t*)*, i8* (%struct.hb_ot_shape_plan_t*)*, void (i8*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)*, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)*, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)*, i32, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)*, i32, i8 } { void (%struct.hb_ot_shape_planner_t*)* @_ZL23collect_features_hangulP21hb_ot_shape_planner_t, void (%struct.hb_ot_shape_planner_t*)* @_ZL24override_features_hangulP21hb_ot_shape_planner_t, i8* (%struct.hb_ot_shape_plan_t*)* @_ZL18data_create_hangulPK18hb_ot_shape_plan_t, void (i8*)* @_ZL19data_destroy_hangulPv, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL22preprocess_text_hangulPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* null, i32 0, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32*, i32*)* null, i1 (%struct.hb_ot_shape_normalize_context_t*, i32, i32, i32*)* null, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, %struct.hb_font_t*)* @_ZL18setup_masks_hangulPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t, i32 0, void (%struct.hb_ot_shape_plan_t*, %struct.hb_buffer_t*, i32, i32)* null, i32 0, i8 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23collect_features_hangulP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1818914159, i32 0, i32 1) #7
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1986686319, i32 0, i32 1) #7
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1953131887, i32 0, i32 1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL24override_features_hangulP21hb_ot_shape_planner_t(%struct.hb_ot_shape_planner_t*) #0 {
  %2 = getelementptr inbounds %struct.hb_ot_shape_planner_t, %struct.hb_ot_shape_planner_t* %0, i64 0, i32 2
  tail call void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t* %2, i32 1667329140, i32 1, i32 0) #7
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias i8* @_ZL18data_create_hangulPK18hb_ot_shape_plan_t(%struct.hb_ot_shape_plan_t* nocapture readonly) #1 {
  %2 = tail call noalias i8* @calloc(i64 1, i64 16) #7
  %3 = icmp eq i8* %2, null
  br i1 %3, label %32, label %4, !prof !2

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 2
  %6 = load %"struct.hb_ot_map_t::feature_map_t"*, %"struct.hb_ot_map_t::feature_map_t"** %5, align 8
  %7 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 2, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  %10 = add nsw i32 %8, -1
  br i1 %9, label %11, label %12

11:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %2, i8 0, i64 16, i1 false)
  br label %32

12:                                               ; preds = %4, %19
  %13 = phi i32 [ %20, %19 ], [ %10, %4 ]
  %14 = lshr i32 %13, 1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %15, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = add nsw i32 %14, -1
  %21 = icmp eq i32 %14, 0
  br i1 %21, label %29, label %12

22:                                               ; preds = %12
  %23 = zext i32 %14 to i64
  %24 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %23
  %25 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %23, i32 5
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %19, %22, %26
  %30 = phi i32 [ %28, %26 ], [ 0, %22 ], [ 0, %19 ]
  %31 = bitcast i8* %2 to i32*
  store i32 %30, i32* %31, align 4
  br label %33

32:                                               ; preds = %119, %11, %1
  ret i8* %2

33:                                               ; preds = %55, %29
  %34 = phi i32 [ %10, %29 ], [ %57, %55 ]
  %35 = phi i32 [ 0, %29 ], [ %56, %55 ]
  %36 = add i32 %35, %34
  %37 = lshr i32 %36, 1
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %38, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, 1818914159
  br i1 %41, label %53, label %42

42:                                               ; preds = %33
  %43 = icmp eq i32 %40, 1818914159
  br i1 %43, label %44, label %51

44:                                               ; preds = %42
  %45 = zext i32 %37 to i64
  %46 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %45
  %47 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %45, i32 5
  %50 = load i32, i32* %49, align 4
  br label %59

51:                                               ; preds = %42
  %52 = add nuw nsw i32 %37, 1
  br label %55

53:                                               ; preds = %33
  %54 = add nsw i32 %37, -1
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i32 [ %35, %53 ], [ %52, %51 ]
  %57 = phi i32 [ %54, %53 ], [ %34, %51 ]
  %58 = icmp sgt i32 %56, %57
  br i1 %58, label %59, label %33

59:                                               ; preds = %55, %48, %44
  %60 = phi i32 [ %50, %48 ], [ 0, %44 ], [ 0, %55 ]
  %61 = getelementptr inbounds i8, i8* %2, i64 4
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  br label %63

63:                                               ; preds = %85, %59
  %64 = phi i32 [ %10, %59 ], [ %87, %85 ]
  %65 = phi i32 [ 0, %59 ], [ %86, %85 ]
  %66 = add i32 %65, %64
  %67 = lshr i32 %66, 1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp ugt i32 %70, 1986686319
  br i1 %71, label %83, label %72

72:                                               ; preds = %63
  %73 = icmp eq i32 %70, 1986686319
  br i1 %73, label %74, label %81

74:                                               ; preds = %72
  %75 = zext i32 %67 to i64
  %76 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %75
  %77 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %76, null
  br i1 %77, label %89, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %75, i32 5
  %80 = load i32, i32* %79, align 4
  br label %89

81:                                               ; preds = %72
  %82 = add nuw nsw i32 %67, 1
  br label %85

83:                                               ; preds = %63
  %84 = add nsw i32 %67, -1
  br label %85

85:                                               ; preds = %83, %81
  %86 = phi i32 [ %65, %83 ], [ %82, %81 ]
  %87 = phi i32 [ %84, %83 ], [ %64, %81 ]
  %88 = icmp sgt i32 %86, %87
  br i1 %88, label %89, label %63

89:                                               ; preds = %85, %78, %74
  %90 = phi i32 [ %80, %78 ], [ 0, %74 ], [ 0, %85 ]
  %91 = getelementptr inbounds i8, i8* %2, i64 8
  %92 = bitcast i8* %91 to i32*
  store i32 %90, i32* %92, align 4
  br label %93

93:                                               ; preds = %115, %89
  %94 = phi i32 [ %10, %89 ], [ %117, %115 ]
  %95 = phi i32 [ 0, %89 ], [ %116, %115 ]
  %96 = add i32 %95, %94
  %97 = lshr i32 %96, 1
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %98, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp ugt i32 %100, 1953131887
  br i1 %101, label %113, label %102

102:                                              ; preds = %93
  %103 = icmp eq i32 %100, 1953131887
  br i1 %103, label %104, label %111

104:                                              ; preds = %102
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %105
  %107 = icmp eq %"struct.hb_ot_map_t::feature_map_t"* %106, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"struct.hb_ot_map_t::feature_map_t", %"struct.hb_ot_map_t::feature_map_t"* %6, i64 %105, i32 5
  %110 = load i32, i32* %109, align 4
  br label %119

111:                                              ; preds = %102
  %112 = add nuw nsw i32 %97, 1
  br label %115

113:                                              ; preds = %93
  %114 = add nsw i32 %97, -1
  br label %115

115:                                              ; preds = %113, %111
  %116 = phi i32 [ %95, %113 ], [ %112, %111 ]
  %117 = phi i32 [ %114, %113 ], [ %94, %111 ]
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %119, label %93

119:                                              ; preds = %115, %108, %104
  %120 = phi i32 [ %110, %108 ], [ 0, %104 ], [ 0, %115 ]
  %121 = getelementptr inbounds i8, i8* %2, i64 12
  %122 = bitcast i8* %121 to i32*
  store i32 %120, i32* %122, align 4
  br label %32
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL19data_destroy_hangulPv(i8* nocapture) #0 {
  tail call void @free(i8* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL22preprocess_text_hangulPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* nocapture readnone, %struct.hb_buffer_t*, %struct.hb_font_t*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [3 x i32], align 4
  tail call void @_ZN11hb_buffer_t12clear_outputEv(%struct.hb_buffer_t* %1) #7
  %14 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 15
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 14
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 11
  %18 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 18
  %19 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 16
  %20 = bitcast i32* %4 to i8*
  %21 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 13
  %22 = getelementptr inbounds %struct.hb_font_t, %struct.hb_font_t* %2, i64 0, i32 14
  %23 = bitcast i32* %5 to i8*
  %24 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 19
  %25 = bitcast [3 x i32]* %13 to i8*
  %26 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %27 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %28 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %29 = bitcast i32* %7 to i8*
  %30 = bitcast i32* %8 to i8*
  %31 = bitcast i32* %9 to i8*
  %32 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 12
  %33 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 3
  %34 = bitcast i32* %6 to i8*
  %35 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 2
  %36 = bitcast i32* %11 to i8*
  %37 = bitcast i32* %10 to i8*
  %38 = bitcast i32* %12 to i8*
  %39 = icmp eq i32 %15, 0
  br i1 %39, label %729, label %40

40:                                               ; preds = %3
  %41 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  br label %43

43:                                               ; preds = %40, %724
  %44 = phi i32 [ %725, %724 ], [ 0, %40 ]
  %45 = phi i32 [ %726, %724 ], [ 0, %40 ]
  %46 = phi i32 [ %727, %724 ], [ 0, %40 ]
  %47 = load i8, i8* %17, align 8, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %729, label %49

49:                                               ; preds = %43
  %50 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %50, i64 %51, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp eq i32 %54, 12334
  br i1 %55, label %56, label %213

56:                                               ; preds = %49
  %57 = icmp ugt i32 %45, %44
  br i1 %57, label %58, label %120

58:                                               ; preds = %56
  %59 = load i32, i32* %19, align 4
  %60 = icmp eq i32 %45, %59
  br i1 %60, label %61, label %120

61:                                               ; preds = %58
  call void @_ZN11hb_buffer_t30unsafe_to_break_from_outbufferEjj(%struct.hb_buffer_t* %1, i32 %44, i32 %46) #7
  %62 = load i8, i8* %32, align 1, !range !3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %89, label %64

64:                                               ; preds = %61
  %65 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %66 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %67 = icmp eq %struct.hb_glyph_info_t* %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = load i32, i32* %19, align 4
  %70 = load i32, i32* %16, align 4
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %86, label %72

72:                                               ; preds = %68, %64
  %73 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %73, label %74, label %729, !prof !4

74:                                               ; preds = %72
  %75 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %76 = load i32, i32* %16, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %75, i64 %77
  %79 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %80 = load i32, i32* %19, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %79, i64 %81
  %83 = bitcast %struct.hb_glyph_info_t* %82 to i8*
  %84 = bitcast %struct.hb_glyph_info_t* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 20, i1 false) #7
  %85 = load i32, i32* %19, align 4
  br label %86

86:                                               ; preds = %74, %68
  %87 = phi i32 [ %69, %68 ], [ %85, %74 ]
  %88 = add i32 %87, 1
  store i32 %88, i32* %19, align 4
  br label %89

89:                                               ; preds = %61, %86
  %90 = load i32, i32* %16, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #7
  store i32 -1431655766, i32* %12, align 4
  %92 = call i32 @hb_font_get_glyph(%struct.hb_font_t* %2, i32 %53, i32 0, i32* nonnull %12) #7
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #7
  br label %99

95:                                               ; preds = %89
  %96 = load i32, i32* %12, align 4
  %97 = call i32 @hb_font_get_glyph_h_advance(%struct.hb_font_t* %2, i32 %96) #7
  %98 = icmp eq i32 %97, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #7
  br i1 %98, label %211, label %99

99:                                               ; preds = %94, %95
  %100 = add i32 %45, 1
  call void @_ZN11hb_buffer_t18merge_out_clustersEjj(%struct.hb_buffer_t* %1, i32 %44, i32 %100) #7
  %101 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %102 = zext i32 %45 to i64
  %103 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %101, i64 %102, i32 0
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %101, i64 %102, i32 4, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = add nuw i32 %44, 1
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %101, i64 %109
  %111 = bitcast %struct.hb_glyph_info_t* %110 to i8*
  %112 = zext i32 %44 to i64
  %113 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %101, i64 %112
  %114 = bitcast %struct.hb_glyph_info_t* %113 to i8*
  %115 = sub i32 %45, %44
  %116 = zext i32 %115 to i64
  %117 = mul nuw nsw i64 %116, 20
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %114, i64 %117, i1 false)
  %118 = bitcast %struct.hb_glyph_info_t* %113 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %118, align 4
  %119 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %101, i64 %112, i32 4, i32 0
  store i32 %107, i32* %119, align 4
  br label %211

120:                                              ; preds = %58, %56
  %121 = load i32, i32* %35, align 8
  %122 = and i32 %121, 16
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %180

124:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #7
  store i32 0, i32* %11, align 4
  %125 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %126 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %125, i64 0, i32 3, i32 0, i32 2
  %127 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %126, align 8
  %128 = load i8*, i8** %22, align 8
  %129 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %125, i64 0, i32 1, i32 2
  %130 = load i8*, i8** %129, align 8
  %131 = call i32 %127(%struct.hb_font_t* %2, i8* %128, i32 9676, i32* nonnull %11, i8* %130) #7
  %132 = icmp eq i32 %131, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #7
  br i1 %132, label %180, label %133

133:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #7
  store i32 -1431655766, i32* %10, align 4
  %134 = call i32 @hb_font_get_glyph(%struct.hb_font_t* %2, i32 %53, i32 0, i32* nonnull %10) #7
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #7
  br label %141

137:                                              ; preds = %133
  %138 = load i32, i32* %10, align 4
  %139 = call i32 @hb_font_get_glyph_h_advance(%struct.hb_font_t* %2, i32 %138) #7
  %140 = icmp eq i32 %139, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #7
  br i1 %140, label %142, label %141

141:                                              ; preds = %137, %136
  br label %142

142:                                              ; preds = %137, %141
  %143 = phi i32 [ %53, %141 ], [ 9676, %137 ]
  %144 = phi i32 [ 9676, %141 ], [ %53, %137 ]
  %145 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 2) #7
  br i1 %145, label %146, label %211, !prof !4

146:                                              ; preds = %142
  %147 = load i32, i32* %16, align 4
  %148 = load i32, i32* %14, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %152 = zext i32 %147 to i64
  %153 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %151, i64 %152
  %154 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %155 = load i32, i32* %19, align 4
  br label %164

156:                                              ; preds = %146
  %157 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %158 = load i32, i32* %19, align 4
  %159 = icmp eq i32 %158, 0
  %160 = add i32 %158, -1
  %161 = select i1 %159, i32 0, i32 %160
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %157, i64 %162
  br label %164

164:                                              ; preds = %156, %150
  %165 = phi i32 [ %155, %150 ], [ %158, %156 ]
  %166 = phi %struct.hb_glyph_info_t* [ %154, %150 ], [ %157, %156 ]
  %167 = phi %struct.hb_glyph_info_t* [ %153, %150 ], [ %163, %156 ]
  %168 = zext i32 %165 to i64
  %169 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %166, i64 %168
  %170 = bitcast %struct.hb_glyph_info_t* %167 to i8*
  %171 = bitcast %struct.hb_glyph_info_t* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %170, i64 20, i1 false) #7
  %172 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %169, i64 0, i32 0
  store i32 %143, i32* %172, align 4
  %173 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %169, i64 1
  %174 = bitcast %struct.hb_glyph_info_t* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %170, i64 20, i1 false) #7
  %175 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %173, i64 0, i32 0
  store i32 %144, i32* %175, align 4
  %176 = load i32, i32* %16, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %16, align 4
  %178 = load i32, i32* %19, align 4
  %179 = add i32 %178, 2
  store i32 %179, i32* %19, align 4
  br label %211

180:                                              ; preds = %124, %120
  %181 = load i8, i8* %32, align 1, !range !3
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %208, label %183

183:                                              ; preds = %180
  %184 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %185 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %186 = icmp eq %struct.hb_glyph_info_t* %184, %185
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = load i32, i32* %19, align 4
  %189 = load i32, i32* %16, align 4
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %205, label %191

191:                                              ; preds = %187, %183
  %192 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %192, label %193, label %211, !prof !4

193:                                              ; preds = %191
  %194 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %195 = load i32, i32* %16, align 4
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %194, i64 %196
  %198 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %199 = load i32, i32* %19, align 4
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %198, i64 %200
  %202 = bitcast %struct.hb_glyph_info_t* %201 to i8*
  %203 = bitcast %struct.hb_glyph_info_t* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %202, i8* align 4 %203, i64 20, i1 false) #7
  %204 = load i32, i32* %19, align 4
  br label %205

205:                                              ; preds = %193, %187
  %206 = phi i32 [ %188, %187 ], [ %204, %193 ]
  %207 = add i32 %206, 1
  store i32 %207, i32* %19, align 4
  br label %208

208:                                              ; preds = %205, %180
  %209 = load i32, i32* %16, align 4
  %210 = add i32 %209, 1
  store i32 %210, i32* %16, align 4
  br label %211

211:                                              ; preds = %164, %142, %208, %191, %95, %99
  %212 = load i32, i32* %19, align 4
  br label %724

213:                                              ; preds = %49
  %214 = load i32, i32* %19, align 4
  %215 = add i32 %53, -4352
  %216 = icmp ult i32 %215, 96
  %217 = add i32 %53, -43360
  %218 = icmp ult i32 %217, 29
  %219 = or i1 %216, %218
  br i1 %219, label %220, label %436

220:                                              ; preds = %213
  %221 = add nuw i32 %46, 1
  %222 = icmp ult i32 %221, %15
  br i1 %222, label %223, label %436

223:                                              ; preds = %220
  %224 = zext i32 %221 to i64
  %225 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %50, i64 %224, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = add i32 %226, -4448
  %228 = icmp ult i32 %227, 72
  %229 = add i32 %226, -55216
  %230 = icmp ult i32 %229, 23
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %690

232:                                              ; preds = %223
  %233 = add nuw i32 %46, 2
  %234 = icmp ult i32 %233, %15
  br i1 %234, label %235, label %247

235:                                              ; preds = %232
  %236 = zext i32 %233 to i64
  %237 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %50, i64 %236, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = add i32 %238, -4520
  %240 = icmp ult i32 %239, 88
  %241 = add i32 %238, -55243
  %242 = icmp ult i32 %241, 49
  %243 = or i1 %240, %242
  %244 = add i32 %238, -4519
  %245 = select i1 %243, i32 %244, i32 0
  %246 = select i1 %243, i32 %238, i32 0
  br label %247

247:                                              ; preds = %235, %232
  %248 = phi i32 [ 0, %232 ], [ %246, %235 ]
  %249 = phi i32 [ 0, %232 ], [ %245, %235 ]
  %250 = icmp ne i32 %248, 0
  %251 = select i1 %250, i32 3, i32 2
  %252 = add i32 %251, %46
  call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %1, i32 %46, i32 %252) #7
  %253 = icmp ult i32 %215, 19
  %254 = add i32 %226, -4449
  %255 = icmp ult i32 %254, 21
  %256 = and i1 %253, %255
  br i1 %256, label %257, label %313

257:                                              ; preds = %247
  %258 = icmp eq i32 %248, 0
  %259 = add i32 %248, -4520
  %260 = icmp ult i32 %259, 27
  %261 = or i1 %258, %260
  br i1 %261, label %262, label %313

262:                                              ; preds = %257
  %263 = mul i32 %53, 588
  %264 = mul i32 %226, 28
  %265 = add nuw nsw i32 %263, -2639516
  %266 = add nsw i32 %265, %264
  %267 = add i32 %266, %249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #7
  store i32 0, i32* %6, align 4
  %268 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %269 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %268, i64 0, i32 3, i32 0, i32 2
  %270 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %269, align 8
  %271 = load i8*, i8** %22, align 8
  %272 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %268, i64 0, i32 1, i32 2
  %273 = load i8*, i8** %272, align 8
  %274 = call i32 %270(%struct.hb_font_t* %2, i8* %271, i32 %267, i32* nonnull %6, i8* %273) #7
  %275 = icmp eq i32 %274, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #7
  br i1 %275, label %313, label %276

276:                                              ; preds = %262
  %277 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 %251, i32 1) #7
  br i1 %277, label %278, label %311, !prof !4

278:                                              ; preds = %276
  %279 = load i32, i32* %16, align 4
  %280 = add i32 %279, %251
  call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %1, i32 %279, i32 %280) #7
  %281 = load i32, i32* %16, align 4
  %282 = load i32, i32* %14, align 8
  %283 = icmp ult i32 %281, %282
  br i1 %283, label %284, label %290

284:                                              ; preds = %278
  %285 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %286 = zext i32 %281 to i64
  %287 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %285, i64 %286
  %288 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %289 = load i32, i32* %19, align 4
  br label %298

290:                                              ; preds = %278
  %291 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %292 = load i32, i32* %19, align 4
  %293 = icmp eq i32 %292, 0
  %294 = add i32 %292, -1
  %295 = select i1 %293, i32 0, i32 %294
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %291, i64 %296
  br label %298

298:                                              ; preds = %290, %284
  %299 = phi i32 [ %289, %284 ], [ %292, %290 ]
  %300 = phi %struct.hb_glyph_info_t* [ %288, %284 ], [ %291, %290 ]
  %301 = phi %struct.hb_glyph_info_t* [ %287, %284 ], [ %297, %290 ]
  %302 = zext i32 %299 to i64
  %303 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %300, i64 %302
  %304 = bitcast %struct.hb_glyph_info_t* %301 to i8*
  %305 = bitcast %struct.hb_glyph_info_t* %303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %305, i8* align 4 %304, i64 20, i1 false) #7
  %306 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %303, i64 0, i32 0
  store i32 %267, i32* %306, align 4
  %307 = load i32, i32* %16, align 4
  %308 = add i32 %307, %251
  store i32 %308, i32* %16, align 4
  %309 = load i32, i32* %19, align 4
  %310 = add i32 %309, 1
  store i32 %310, i32* %19, align 4
  br label %311

311:                                              ; preds = %298, %276
  %312 = add i32 %214, 1
  br label %724

313:                                              ; preds = %262, %257, %247
  %314 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %315 = load i32, i32* %16, align 4
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %314, i64 %316, i32 4
  %318 = bitcast %union._hb_var_int_t* %317 to [4 x i8]*
  %319 = getelementptr inbounds [4 x i8], [4 x i8]* %318, i64 0, i64 3
  store i8 1, i8* %319, align 1
  %320 = load i8, i8* %32, align 1, !range !3
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %349, label %322

322:                                              ; preds = %313
  %323 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %324 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %325 = icmp eq %struct.hb_glyph_info_t* %323, %324
  br i1 %325, label %326, label %330

326:                                              ; preds = %322
  %327 = load i32, i32* %19, align 4
  %328 = load i32, i32* %16, align 4
  %329 = icmp eq i32 %327, %328
  br i1 %329, label %346, label %330

330:                                              ; preds = %326, %322
  %331 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %331, label %334, label %332, !prof !4

332:                                              ; preds = %330
  %333 = load i32, i32* %16, align 4
  br label %352

334:                                              ; preds = %330
  %335 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %336 = load i32, i32* %16, align 4
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %335, i64 %337
  %339 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %340 = load i32, i32* %19, align 4
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %339, i64 %341
  %343 = bitcast %struct.hb_glyph_info_t* %342 to i8*
  %344 = bitcast %struct.hb_glyph_info_t* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %343, i8* align 4 %344, i64 20, i1 false) #7
  %345 = load i32, i32* %19, align 4
  br label %346

346:                                              ; preds = %334, %326
  %347 = phi i32 [ %327, %326 ], [ %345, %334 ]
  %348 = add i32 %347, 1
  store i32 %348, i32* %19, align 4
  br label %349

349:                                              ; preds = %346, %313
  %350 = load i32, i32* %16, align 4
  %351 = add i32 %350, 1
  store i32 %351, i32* %16, align 4
  br label %352

352:                                              ; preds = %332, %349
  %353 = phi i32 [ %333, %332 ], [ %351, %349 ]
  %354 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %355 = zext i32 %353 to i64
  %356 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %354, i64 %355, i32 4
  %357 = bitcast %union._hb_var_int_t* %356 to [4 x i8]*
  %358 = getelementptr inbounds [4 x i8], [4 x i8]* %357, i64 0, i64 3
  store i8 2, i8* %358, align 1
  %359 = load i8, i8* %32, align 1, !range !3
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %386, label %361

361:                                              ; preds = %352
  %362 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %363 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %364 = icmp eq %struct.hb_glyph_info_t* %362, %363
  br i1 %364, label %365, label %369

365:                                              ; preds = %361
  %366 = load i32, i32* %19, align 4
  %367 = load i32, i32* %16, align 4
  %368 = icmp eq i32 %366, %367
  br i1 %368, label %383, label %369

369:                                              ; preds = %365, %361
  %370 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %370, label %371, label %389, !prof !4

371:                                              ; preds = %369
  %372 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %373 = load i32, i32* %16, align 4
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %372, i64 %374
  %376 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %377 = load i32, i32* %19, align 4
  %378 = zext i32 %377 to i64
  %379 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %376, i64 %378
  %380 = bitcast %struct.hb_glyph_info_t* %379 to i8*
  %381 = bitcast %struct.hb_glyph_info_t* %375 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %380, i8* align 4 %381, i64 20, i1 false) #7
  %382 = load i32, i32* %19, align 4
  br label %383

383:                                              ; preds = %371, %365
  %384 = phi i32 [ %366, %365 ], [ %382, %371 ]
  %385 = add i32 %384, 1
  store i32 %385, i32* %19, align 4
  br label %386

386:                                              ; preds = %383, %352
  %387 = load i32, i32* %16, align 4
  %388 = add i32 %387, 1
  store i32 %388, i32* %16, align 4
  br label %389

389:                                              ; preds = %369, %386
  br i1 %250, label %390, label %427

390:                                              ; preds = %389
  %391 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %392 = load i32, i32* %16, align 4
  %393 = zext i32 %392 to i64
  %394 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %391, i64 %393, i32 4
  %395 = bitcast %union._hb_var_int_t* %394 to [4 x i8]*
  %396 = getelementptr inbounds [4 x i8], [4 x i8]* %395, i64 0, i64 3
  store i8 3, i8* %396, align 1
  %397 = load i8, i8* %32, align 1, !range !3
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %424, label %399

399:                                              ; preds = %390
  %400 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %401 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %402 = icmp eq %struct.hb_glyph_info_t* %400, %401
  br i1 %402, label %403, label %407

403:                                              ; preds = %399
  %404 = load i32, i32* %19, align 4
  %405 = load i32, i32* %16, align 4
  %406 = icmp eq i32 %404, %405
  br i1 %406, label %421, label %407

407:                                              ; preds = %403, %399
  %408 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %408, label %409, label %427, !prof !4

409:                                              ; preds = %407
  %410 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %411 = load i32, i32* %16, align 4
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %410, i64 %412
  %414 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %415 = load i32, i32* %19, align 4
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %414, i64 %416
  %418 = bitcast %struct.hb_glyph_info_t* %417 to i8*
  %419 = bitcast %struct.hb_glyph_info_t* %413 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %418, i8* align 4 %419, i64 20, i1 false) #7
  %420 = load i32, i32* %19, align 4
  br label %421

421:                                              ; preds = %409, %403
  %422 = phi i32 [ %404, %403 ], [ %420, %409 ]
  %423 = add i32 %422, 1
  store i32 %423, i32* %19, align 4
  br label %424

424:                                              ; preds = %421, %390
  %425 = load i32, i32* %16, align 4
  %426 = add i32 %425, 1
  store i32 %426, i32* %16, align 4
  br label %427

427:                                              ; preds = %389, %424, %407
  %428 = phi i32 [ 3, %407 ], [ 3, %424 ], [ 2, %389 ]
  %429 = add i32 %214, %428
  %430 = load i8, i8* %17, align 8, !range !3
  %431 = icmp eq i8 %430, 1
  br i1 %431, label %432, label %729, !prof !4

432:                                              ; preds = %427
  %433 = load i32, i32* %33, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %724

435:                                              ; preds = %432
  call void @_ZN11hb_buffer_t18merge_out_clustersEjj(%struct.hb_buffer_t* %1, i32 %214, i32 %429) #7
  br label %724

436:                                              ; preds = %213, %220
  %437 = add i32 %53, -44032
  %438 = icmp ult i32 %437, 11172
  br i1 %438, label %439, label %690

439:                                              ; preds = %436
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #7
  store i32 0, i32* %4, align 4
  %440 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %441 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %440, i64 0, i32 3, i32 0, i32 2
  %442 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %441, align 8
  %443 = load i8*, i8** %22, align 8
  %444 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %440, i64 0, i32 1, i32 2
  %445 = load i8*, i8** %444, align 8
  %446 = call i32 %442(%struct.hb_font_t* %2, i8* %443, i32 %53, i32* nonnull %4, i8* %445) #7
  %447 = icmp ne i32 %446, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #7
  %448 = trunc i32 %437 to i16
  %449 = udiv i16 %448, 588
  %450 = trunc i32 %437 to i16
  %451 = urem i16 %450, 588
  %452 = udiv i16 %451, 28
  %453 = urem i16 %451, 28
  %454 = icmp ne i16 %453, 0
  br i1 %454, label %517, label %455

455:                                              ; preds = %439
  %456 = load i32, i32* %16, align 4
  %457 = add i32 %456, 1
  %458 = icmp ult i32 %457, %15
  br i1 %458, label %459, label %517

459:                                              ; preds = %455
  %460 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %461 = zext i32 %457 to i64
  %462 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %460, i64 %461, i32 0
  %463 = load i32, i32* %462, align 4
  %464 = add i32 %463, -4520
  %465 = icmp ult i32 %464, 27
  br i1 %465, label %466, label %517

466:                                              ; preds = %459
  %467 = add nsw i32 %53, -4519
  %468 = add nuw nsw i32 %467, %463
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #7
  store i32 0, i32* %5, align 4
  %469 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %470 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %469, i64 0, i32 3, i32 0, i32 2
  %471 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %470, align 8
  %472 = load i8*, i8** %22, align 8
  %473 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %469, i64 0, i32 1, i32 2
  %474 = load i8*, i8** %473, align 8
  %475 = call i32 %471(%struct.hb_font_t* %2, i8* %472, i32 %468, i32* nonnull %5, i8* %474) #7
  %476 = icmp eq i32 %475, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #7
  br i1 %476, label %512, label %477

477:                                              ; preds = %466
  %478 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 2, i32 1) #7
  br i1 %478, label %479, label %515, !prof !4

479:                                              ; preds = %477
  %480 = load i32, i32* %16, align 4
  %481 = add i32 %480, 2
  call void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t* %1, i32 %480, i32 %481) #7
  %482 = load i32, i32* %16, align 4
  %483 = load i32, i32* %14, align 8
  %484 = icmp ult i32 %482, %483
  br i1 %484, label %485, label %491

485:                                              ; preds = %479
  %486 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %487 = zext i32 %482 to i64
  %488 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %486, i64 %487
  %489 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %490 = load i32, i32* %19, align 4
  br label %499

491:                                              ; preds = %479
  %492 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %493 = load i32, i32* %19, align 4
  %494 = icmp eq i32 %493, 0
  %495 = add i32 %493, -1
  %496 = select i1 %494, i32 0, i32 %495
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %492, i64 %497
  br label %499

499:                                              ; preds = %491, %485
  %500 = phi i32 [ %490, %485 ], [ %493, %491 ]
  %501 = phi %struct.hb_glyph_info_t* [ %489, %485 ], [ %492, %491 ]
  %502 = phi %struct.hb_glyph_info_t* [ %488, %485 ], [ %498, %491 ]
  %503 = zext i32 %500 to i64
  %504 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %501, i64 %503
  %505 = bitcast %struct.hb_glyph_info_t* %502 to i8*
  %506 = bitcast %struct.hb_glyph_info_t* %504 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %506, i8* align 4 %505, i64 20, i1 false) #7
  %507 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %504, i64 0, i32 0
  store i32 %468, i32* %507, align 4
  %508 = load i32, i32* %16, align 4
  %509 = add i32 %508, 2
  store i32 %509, i32* %16, align 4
  %510 = load i32, i32* %19, align 4
  %511 = add i32 %510, 1
  store i32 %511, i32* %19, align 4
  br label %515

512:                                              ; preds = %466
  %513 = load i32, i32* %16, align 4
  %514 = add i32 %513, 2
  call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %1, i32 %513, i32 %514) #7
  br label %517

515:                                              ; preds = %499, %477
  %516 = add i32 %214, 1
  br label %724

517:                                              ; preds = %512, %459, %455, %439
  br i1 %447, label %518, label %533

518:                                              ; preds = %517
  br i1 %454, label %687, label %519

519:                                              ; preds = %518
  %520 = load i32, i32* %16, align 4
  %521 = add i32 %520, 1
  %522 = icmp ult i32 %521, %15
  br i1 %522, label %523, label %687

523:                                              ; preds = %519
  %524 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %525 = zext i32 %521 to i64
  %526 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %524, i64 %525, i32 0
  %527 = load i32, i32* %526, align 4
  %528 = add i32 %527, -4520
  %529 = icmp ult i32 %528, 88
  %530 = add i32 %527, -55243
  %531 = icmp ult i32 %530, 49
  %532 = or i1 %529, %531
  br i1 %532, label %533, label %687

533:                                              ; preds = %523, %517
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %25) #7
  %534 = or i16 %449, 4352
  %535 = zext i16 %534 to i32
  store i32 %535, i32* %26, align 4
  %536 = add nuw nsw i16 %452, 4449
  %537 = zext i16 %536 to i32
  store i32 %537, i32* %27, align 4
  %538 = add nuw nsw i16 %453, 4519
  %539 = zext i16 %538 to i32
  store i32 %539, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #7
  store i32 0, i32* %7, align 4
  %540 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %541 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %540, i64 0, i32 3, i32 0, i32 2
  %542 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %541, align 8
  %543 = load i8*, i8** %22, align 8
  %544 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %540, i64 0, i32 1, i32 2
  %545 = load i8*, i8** %544, align 8
  %546 = call i32 %542(%struct.hb_font_t* %2, i8* %543, i32 %535, i32* nonnull %7, i8* %545) #7
  %547 = icmp eq i32 %546, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #7
  br i1 %547, label %669, label %548

548:                                              ; preds = %533
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #7
  store i32 0, i32* %8, align 4
  %549 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %550 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %549, i64 0, i32 3, i32 0, i32 2
  %551 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %550, align 8
  %552 = load i8*, i8** %22, align 8
  %553 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %549, i64 0, i32 1, i32 2
  %554 = load i8*, i8** %553, align 8
  %555 = call i32 %551(%struct.hb_font_t* %2, i8* %552, i32 %537, i32* nonnull %8, i8* %554) #7
  %556 = icmp eq i32 %555, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #7
  br i1 %556, label %669, label %557

557:                                              ; preds = %548
  br i1 %454, label %558, label %567

558:                                              ; preds = %557
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #7
  store i32 0, i32* %9, align 4
  %559 = load %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t** %21, align 8
  %560 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %559, i64 0, i32 3, i32 0, i32 2
  %561 = load i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)*, i32 (%struct.hb_font_t*, i8*, i32, i32*, i8*)** %560, align 8
  %562 = load i8*, i8** %22, align 8
  %563 = getelementptr inbounds %struct.hb_font_funcs_t, %struct.hb_font_funcs_t* %559, i64 0, i32 1, i32 2
  %564 = load i8*, i8** %563, align 8
  %565 = call i32 %561(%struct.hb_font_t* %2, i8* %562, i32 %539, i32* nonnull %9, i8* %564) #7
  %566 = icmp eq i32 %565, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #7
  br i1 %566, label %686, label %567

567:                                              ; preds = %558, %557
  %568 = select i1 %454, i32 3, i32 2
  %569 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 %568) #7
  br i1 %569, label %570, label %606, !prof !4

570:                                              ; preds = %567
  %571 = load i32, i32* %16, align 4
  %572 = load i32, i32* %14, align 8
  %573 = icmp ult i32 %571, %572
  br i1 %573, label %574, label %580

574:                                              ; preds = %570
  %575 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %576 = zext i32 %571 to i64
  %577 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %575, i64 %576
  %578 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %579 = load i32, i32* %19, align 4
  br label %588

580:                                              ; preds = %570
  %581 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %582 = load i32, i32* %19, align 4
  %583 = icmp eq i32 %582, 0
  %584 = add i32 %582, -1
  %585 = select i1 %583, i32 0, i32 %584
  %586 = zext i32 %585 to i64
  %587 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %581, i64 %586
  br label %588

588:                                              ; preds = %580, %574
  %589 = phi i32 [ %579, %574 ], [ %582, %580 ]
  %590 = phi %struct.hb_glyph_info_t* [ %578, %574 ], [ %581, %580 ]
  %591 = phi %struct.hb_glyph_info_t* [ %577, %574 ], [ %587, %580 ]
  %592 = zext i32 %589 to i64
  %593 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %590, i64 %592
  %594 = bitcast %struct.hb_glyph_info_t* %591 to i8*
  %595 = bitcast %struct.hb_glyph_info_t* %593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %595, i8* align 4 %594, i64 20, i1 false) #7
  %596 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %593, i64 0, i32 0
  store i32 %535, i32* %596, align 4
  %597 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %593, i64 1
  %598 = load i32, i32* %41, align 4
  %599 = bitcast %struct.hb_glyph_info_t* %597 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %599, i8* align 4 %594, i64 20, i1 false) #7
  %600 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %597, i64 0, i32 0
  store i32 %598, i32* %600, align 4
  br i1 %454, label %730, label %601

601:                                              ; preds = %588, %730
  %602 = load i32, i32* %16, align 4
  %603 = add i32 %602, 1
  store i32 %603, i32* %16, align 4
  %604 = load i32, i32* %19, align 4
  %605 = add i32 %604, %568
  store i32 %605, i32* %19, align 4
  br label %606

606:                                              ; preds = %567, %601
  %607 = xor i1 %447, true
  %608 = or i1 %454, %607
  br i1 %608, label %642, label %609

609:                                              ; preds = %606
  %610 = load i8, i8* %32, align 1, !range !3
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %637, label %612

612:                                              ; preds = %609
  %613 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %614 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %615 = icmp eq %struct.hb_glyph_info_t* %613, %614
  br i1 %615, label %616, label %620

616:                                              ; preds = %612
  %617 = load i32, i32* %19, align 4
  %618 = load i32, i32* %16, align 4
  %619 = icmp eq i32 %617, %618
  br i1 %619, label %634, label %620

620:                                              ; preds = %616, %612
  %621 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %621, label %622, label %640, !prof !4

622:                                              ; preds = %620
  %623 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %624 = load i32, i32* %16, align 4
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %623, i64 %625
  %627 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %628 = load i32, i32* %19, align 4
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %627, i64 %629
  %631 = bitcast %struct.hb_glyph_info_t* %630 to i8*
  %632 = bitcast %struct.hb_glyph_info_t* %626 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %631, i8* align 4 %632, i64 20, i1 false) #7
  %633 = load i32, i32* %19, align 4
  br label %634

634:                                              ; preds = %622, %616
  %635 = phi i32 [ %617, %616 ], [ %633, %622 ]
  %636 = add i32 %635, 1
  store i32 %636, i32* %19, align 4
  br label %637

637:                                              ; preds = %634, %609
  %638 = load i32, i32* %16, align 4
  %639 = add i32 %638, 1
  store i32 %639, i32* %16, align 4
  br label %640

640:                                              ; preds = %620, %637
  %641 = add nuw nsw i32 %568, 1
  br label %642

642:                                              ; preds = %606, %640
  %643 = phi i32 [ %568, %606 ], [ %641, %640 ]
  %644 = load i8, i8* %17, align 8, !range !3
  %645 = icmp eq i8 %644, 1
  br i1 %645, label %646, label %723, !prof !4

646:                                              ; preds = %642
  %647 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %648 = add i32 %643, %214
  %649 = add i32 %214, 1
  %650 = zext i32 %214 to i64
  %651 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %647, i64 %650, i32 4
  %652 = bitcast %union._hb_var_int_t* %651 to [4 x i8]*
  %653 = getelementptr inbounds [4 x i8], [4 x i8]* %652, i64 0, i64 3
  store i8 1, i8* %653, align 1
  %654 = add i32 %214, 2
  %655 = zext i32 %649 to i64
  %656 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %647, i64 %655, i32 4
  %657 = bitcast %union._hb_var_int_t* %656 to [4 x i8]*
  %658 = getelementptr inbounds [4 x i8], [4 x i8]* %657, i64 0, i64 3
  store i8 2, i8* %658, align 1
  %659 = icmp ult i32 %654, %648
  br i1 %659, label %660, label %665

660:                                              ; preds = %646
  %661 = zext i32 %654 to i64
  %662 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %647, i64 %661, i32 4
  %663 = bitcast %union._hb_var_int_t* %662 to [4 x i8]*
  %664 = getelementptr inbounds [4 x i8], [4 x i8]* %663, i64 0, i64 3
  store i8 3, i8* %664, align 1
  br label %665

665:                                              ; preds = %660, %646
  %666 = load i32, i32* %33, align 4
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %722

668:                                              ; preds = %665
  call void @_ZN11hb_buffer_t18merge_out_clustersEjj(%struct.hb_buffer_t* %1, i32 %214, i32 %648) #7
  br label %722

669:                                              ; preds = %548, %533
  br i1 %454, label %686, label %670

670:                                              ; preds = %669
  %671 = load i32, i32* %16, align 4
  %672 = add i32 %671, 1
  %673 = icmp ult i32 %672, %15
  br i1 %673, label %674, label %686

674:                                              ; preds = %670
  %675 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %676 = zext i32 %672 to i64
  %677 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %675, i64 %676, i32 0
  %678 = load i32, i32* %677, align 4
  %679 = add i32 %678, -4520
  %680 = icmp ult i32 %679, 88
  %681 = add i32 %678, -55243
  %682 = icmp ult i32 %681, 49
  %683 = or i1 %680, %682
  br i1 %683, label %684, label %686

684:                                              ; preds = %674
  %685 = add i32 %671, 2
  call void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t* %1, i32 %671, i32 %685) #7
  br label %686

686:                                              ; preds = %558, %674, %669, %670, %684
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25) #7
  br label %687

687:                                              ; preds = %523, %518, %519, %686
  %688 = add i32 %214, 1
  %689 = select i1 %447, i32 %688, i32 %45
  br label %690

690:                                              ; preds = %223, %687, %436
  %691 = phi i32 [ %689, %687 ], [ %45, %436 ], [ %45, %223 ]
  %692 = load i8, i8* %32, align 1, !range !3
  %693 = icmp eq i8 %692, 0
  br i1 %693, label %719, label %694

694:                                              ; preds = %690
  %695 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %696 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %697 = icmp eq %struct.hb_glyph_info_t* %695, %696
  br i1 %697, label %698, label %702

698:                                              ; preds = %694
  %699 = load i32, i32* %19, align 4
  %700 = load i32, i32* %16, align 4
  %701 = icmp eq i32 %699, %700
  br i1 %701, label %716, label %702

702:                                              ; preds = %698, %694
  %703 = call zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t* %1, i32 1, i32 1) #7
  br i1 %703, label %704, label %724, !prof !4

704:                                              ; preds = %702
  %705 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %18, align 8
  %706 = load i32, i32* %16, align 4
  %707 = zext i32 %706 to i64
  %708 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %705, i64 %707
  %709 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %24, align 8
  %710 = load i32, i32* %19, align 4
  %711 = zext i32 %710 to i64
  %712 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %709, i64 %711
  %713 = bitcast %struct.hb_glyph_info_t* %712 to i8*
  %714 = bitcast %struct.hb_glyph_info_t* %708 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %713, i8* align 4 %714, i64 20, i1 false) #7
  %715 = load i32, i32* %19, align 4
  br label %716

716:                                              ; preds = %704, %698
  %717 = phi i32 [ %699, %698 ], [ %715, %704 ]
  %718 = add i32 %717, 1
  store i32 %718, i32* %19, align 4
  br label %719

719:                                              ; preds = %716, %690
  %720 = load i32, i32* %16, align 4
  %721 = add i32 %720, 1
  store i32 %721, i32* %16, align 4
  br label %724

722:                                              ; preds = %668, %665
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25) #7
  br label %724

723:                                              ; preds = %642
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25) #7
  br label %729

724:                                              ; preds = %515, %311, %435, %432, %719, %702, %211, %722
  %725 = phi i32 [ %214, %722 ], [ %214, %515 ], [ %214, %311 ], [ %214, %435 ], [ %214, %432 ], [ %214, %719 ], [ %214, %702 ], [ %212, %211 ]
  %726 = phi i32 [ %648, %722 ], [ %516, %515 ], [ %312, %311 ], [ %429, %435 ], [ %429, %432 ], [ %691, %719 ], [ %691, %702 ], [ %212, %211 ]
  %727 = load i32, i32* %16, align 4
  %728 = icmp ult i32 %727, %15
  br i1 %728, label %43, label %729

729:                                              ; preds = %724, %43, %72, %427, %3, %723
  call void @_ZN11hb_buffer_t12swap_buffersEv(%struct.hb_buffer_t* %1) #7
  ret void

730:                                              ; preds = %588
  %731 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %597, i64 1
  %732 = load i32, i32* %42, align 4
  %733 = bitcast %struct.hb_glyph_info_t* %731 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %733, i8* align 4 %594, i64 20, i1 false) #7
  %734 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %731, i64 0, i32 0
  store i32 %732, i32* %734, align 4
  br label %601
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZL18setup_masks_hangulPK18hb_ot_shape_plan_tP11hb_buffer_tP9hb_font_t(%struct.hb_ot_shape_plan_t* nocapture readonly, %struct.hb_buffer_t* nocapture readonly, %struct.hb_font_t* nocapture readnone) #2 {
  %4 = getelementptr inbounds %struct.hb_ot_shape_plan_t, %struct.hb_ot_shape_plan_t* %0, i64 0, i32 4
  %5 = bitcast i8** %4 to %struct.hangul_shape_plan_t**
  %6 = load %struct.hangul_shape_plan_t*, %struct.hangul_shape_plan_t** %5, align 8
  %7 = icmp eq %struct.hangul_shape_plan_t* %6, null
  br i1 %7, label %85, label %8, !prof !2

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 15
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %85, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.hb_buffer_t, %struct.hb_buffer_t* %1, i64 0, i32 18
  %14 = load %struct.hb_glyph_info_t*, %struct.hb_glyph_info_t** %13, align 8
  %15 = add i32 %10, -1
  %16 = and i32 %10, 3
  %17 = icmp ult i32 %15, 3
  br i1 %17, label %66, label %18

18:                                               ; preds = %12
  %19 = sub i32 %10, %16
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %struct.hb_glyph_info_t* [ %14, %18 ], [ %63, %20 ]
  %22 = phi i32 [ %19, %18 ], [ %64, %20 ]
  %23 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 0, i32 4
  %24 = bitcast %union._hb_var_int_t* %23 to [4 x i8]*
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* %24, i64 0, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds %struct.hangul_shape_plan_t, %struct.hangul_shape_plan_t* %6, i64 0, i32 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, %29
  store i32 %32, i32* %30, align 4
  %33 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 1, i32 4
  %34 = bitcast %union._hb_var_int_t* %33 to [4 x i8]*
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* %34, i64 0, i64 3
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds %struct.hangul_shape_plan_t, %struct.hangul_shape_plan_t* %6, i64 0, i32 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 1, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = or i32 %41, %39
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 2, i32 4
  %44 = bitcast %union._hb_var_int_t* %43 to [4 x i8]*
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* %44, i64 0, i64 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds %struct.hangul_shape_plan_t, %struct.hangul_shape_plan_t* %6, i64 0, i32 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 2, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = or i32 %51, %49
  store i32 %52, i32* %50, align 4
  %53 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 3, i32 4
  %54 = bitcast %union._hb_var_int_t* %53 to [4 x i8]*
  %55 = getelementptr inbounds [4 x i8], [4 x i8]* %54, i64 0, i64 3
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds %struct.hangul_shape_plan_t, %struct.hangul_shape_plan_t* %6, i64 0, i32 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 3, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = or i32 %61, %59
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %21, i64 4
  %64 = add i32 %22, -4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %20

66:                                               ; preds = %20, %12
  %67 = phi %struct.hb_glyph_info_t* [ %14, %12 ], [ %63, %20 ]
  %68 = icmp eq i32 %16, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %66, %69
  %70 = phi %struct.hb_glyph_info_t* [ %82, %69 ], [ %67, %66 ]
  %71 = phi i32 [ %83, %69 ], [ %16, %66 ]
  %72 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %70, i64 0, i32 4
  %73 = bitcast %union._hb_var_int_t* %72 to [4 x i8]*
  %74 = getelementptr inbounds [4 x i8], [4 x i8]* %73, i64 0, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds %struct.hangul_shape_plan_t, %struct.hangul_shape_plan_t* %6, i64 0, i32 0, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %70, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = or i32 %80, %78
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %struct.hb_glyph_info_t, %struct.hb_glyph_info_t* %70, i64 1
  %83 = add i32 %71, -1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %69, !llvm.loop !5

85:                                               ; preds = %66, %69, %8, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare hidden void @_ZN19hb_ot_map_builder_t11add_featureEj25hb_ot_map_feature_flags_tj(%struct.hb_ot_map_builder_t*, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare hidden void @_ZN11hb_buffer_t12clear_outputEv(%struct.hb_buffer_t*) local_unnamed_addr #4

declare hidden void @_ZN11hb_buffer_t30unsafe_to_break_from_outbufferEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

declare hidden void @_ZN11hb_buffer_t18merge_out_clustersEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare hidden void @_ZN11hb_buffer_t12swap_buffersEv(%struct.hb_buffer_t*) local_unnamed_addr #4

declare hidden zeroext i1 @_ZN11hb_buffer_t13make_room_forEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

declare i32 @hb_font_get_glyph(%struct.hb_font_t*, i32, i32, i32*) local_unnamed_addr #4

declare i32 @hb_font_get_glyph_h_advance(%struct.hb_font_t*, i32) local_unnamed_addr #4

declare hidden void @_ZN11hb_buffer_t19merge_clusters_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

declare hidden void @_ZN11hb_buffer_t20unsafe_to_break_implEjj(%struct.hb_buffer_t*, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
