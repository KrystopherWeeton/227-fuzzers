; ModuleID = '../../third_party/blink/renderer/core/script/script_loader.cc'
source_filename = "../../third_party/blink/renderer/core/script/script_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.158", i32, [4 x i8], %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.296", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.313", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.331", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.338", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.276", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i64 }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::Worklist.205"* }
%"class.blink::Worklist.205" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::Worklist.212"* }
%"class.blink::Worklist.212" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::Worklist.219"* }
%"class.blink::Worklist.219" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::Worklist.226"* }
%"class.blink::Worklist.226" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::Worklist.233"* }
%"class.blink::Worklist.233" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::Worklist.240"* }
%"class.blink::Worklist.240" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::Worklist.247"* }
%"class.blink::Worklist.247" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.194" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.254", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.270", [4 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256", %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { i64 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { float }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.279", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305" }
%"class.WTF::VectorBufferBase.305" = type { %"struct.std::__1::pair.306"*, i32, i32 }
%"struct.std::__1::pair.306" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.319" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.205"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.212"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.219"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.226"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.233"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.371", i64 }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.373" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.338" = type { %"struct.std::__1::__atomic_base.339" }
%"struct.std::__1::__atomic_base.339" = type { %"struct.std::__1::__cxx_atomic_impl.340" }
%"struct.std::__1::__cxx_atomic_impl.340" = type { %"struct.std::__1::__cxx_atomic_base_impl.341" }
%"struct.std::__1::__cxx_atomic_base_impl.341" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::ScriptLoader" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member", i8, %"class.blink::WeakMember", i8, i8, i8, i8, i32, i8, i8, i8, %"class.blink::Member.1", %"class.blink::Member.1", %"class.blink::Member.10" }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.708", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.716", %"class.WTF::Vector.716", i8, i32, %"class.blink::Member.721", %"class.blink::Member.434", %"class.blink::Member.1033", %"class.blink::Member.1035", %"class.blink::Member.1046", %"class.blink::Member.1048", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1050", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.blink::Member.671", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1060", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.647", %"class.blink::Member.627", %"class.blink::Member.1008", %"class.blink::Member.627", %"class.blink::Member.627", %"class.blink::Member.627", %"class.blink::UserActionElementSet", %"class.blink::Member.1074", double, double, i64, i64, %"class.blink::HeapHashSet.1076", %"class.blink::HeapHashSet.1083", i16, i8, %"class.blink::Member.1090", %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::Member.1096", %"class.blink::TextLinkColors", %"class.blink::Member.1098", i8, [7 x i8], %"class.blink::HeapHashMap.1100", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.627", %"class.WTF::Vector.1107", %"class.blink::Member.1112", %"class.blink::Member.1114", i8, %"class.blink::Member.627", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1116", %"class.blink::HeapVector.1132", %"class.std::__1::unique_ptr.1139", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1145", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1158", %"class.WTF::Vector.1160", i8, i8, %"class.std::__1::unique_ptr.1165", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.647", %"class.blink::HeapVector.1171", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1179", i8, i32, %"class.blink::Member.1181", %"class.blink::Member.1183", %"class.blink::Member.1185", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1187", %"class.WTF::HashMap.1189", %"class.blink::Member.1194", %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.blink::Member.1200", %"class.blink::Member.611", %"class.blink::Member.611", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1202", i8, i32, %"class.blink::Member.1209", %"class.blink::Member.1211", i32, %"class.blink::Member.1213", %"class.blink::Member.1215", %"class.blink::Member.1217", %"class.std::__1::unique_ptr.1219", i64, %"class.std::__1::unique_ptr.1225", i32, i32, %"class.blink::Member.1231", %"class.blink::Member.1233", %"class.blink::Member.1235", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1237", %"class.WTF::Vector.1019", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1239", %"class.blink::Member.1246", %"class.std::__1::unique_ptr.1248", %"class.blink::Member.1254", i8, i8, %"class.WTF::String", %"class.blink::Member.1256", i8, [7 x i8], %"class.blink::HeapHashMap.1258", %"class.blink::HeapObserverSet.1265", %"class.blink::Member.1273", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1275", i32, i8, i8, %"class.blink::WeakMember.1277", %"class.blink::Member.1278" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.601", %"class.blink::Member.601" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.601", %"class.blink::Member.603", %"class.blink::Member.601", %"class.blink::Member.601", %"class.blink::Member.605" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.609", %"class.blink::Member.611", %"class.blink::Member.603", %"class.blink::Member.612", %"class.blink::Member.612", %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::Member.658", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.663", %"class.blink::HeapVector.665" }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.616" }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { %"class.WTF::AtomicString", %"class.blink::Member.623" }
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.627", i32, %"class.blink::HeapVector.647" }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.660" }
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::HeapHashMap.662"* }
%"class.blink::HeapHashMap.662" = type opaque
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.665" = type { %"class.WTF::Vector.668" }
%"class.WTF::Vector.668" = type { %"class.WTF::VectorBuffer.669" }
%"class.WTF::VectorBuffer.669" = type { %"class.WTF::VectorBufferBase.670" }
%"class.WTF::VectorBufferBase.670" = type { %"class.blink::Member.671"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.708" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.709" }
%"class.blink::HeapHashMap.709" = type { %"class.WTF::HashMap.712" }
%"class.WTF::HashMap.712" = type { %"class.WTF::HashTable.713" }
%"class.WTF::HashTable.713" = type <{ %"struct.WTF::KeyValuePair.715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.715" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.716" = type { %"class.WTF::VectorBuffer.717" }
%"class.WTF::VectorBuffer.717" = type { %"class.WTF::VectorBufferBase.718" }
%"class.WTF::VectorBufferBase.718" = type { %"class.base::OnceCallback.523"*, i32, i32 }
%"class.base::OnceCallback.523" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.507 }
%class.scoped_refptr.507 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.508", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.508" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.53" }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.857", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.865", %"class.blink::Member.611", %"class.blink::Member.867", i8, %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::Member.873", %"class.blink::Member.873", %"class.blink::Member.873", %"class.blink::Member.873", %"class.blink::Member.873", %"class.blink::Member.875", %"class.blink::Member.877", %"class.blink::Member.879", %"class.blink::Member.881", %"class.blink::Member.885", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.29", %"class.blink::Member.887", %class.scoped_refptr.889, %"class.blink::HeapHashSet.952", %"class.blink::Member.959", %"class.blink::HeapHashMap.972", %"class.std::__1::unique_ptr.979", %"class.blink::Member.991", %"class.blink::Member.1012", %"class.blink::Member.1014", %"class.blink::Member.1016", %"class.WTF::Vector.1019", %"class.util::TokenType", %"class.WTF::HashSet.1024", %"class.WTF::Deque.1028" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::Member.750", i8, %"class.WTF::Vector.752" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.737" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.725" }
%"class.blink::HeapVector.725" = type { %"class.WTF::Vector.728" }
%"class.WTF::Vector.728" = type { %"class.WTF::VectorBuffer.729" }
%"class.WTF::VectorBuffer.729" = type { %"class.WTF::VectorBufferBase.730", [32 x i8] }
%"class.WTF::VectorBufferBase.730" = type { %"struct.std::__1::pair.731"*, i32, i32 }
%"struct.std::__1::pair.731" = type { %"class.WTF::AtomicString", %"class.blink::Member.732" }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::HeapVector.734"* }
%"class.blink::HeapVector.734" = type opaque
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.WTF::Vector.740"* }
%"class.WTF::Vector.740" = type opaque
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1445", %"class.blink::Member.1447", %"class.blink::Member.1449", i8, i32, i8, i32, %"class.blink::Member.1451", %"class.blink::Member.746", %"class.blink::FrameLifecycle", %"class.blink::Member.744", %"class.blink::Member.744", %"class.blink::Member.744", %"class.blink::Member.744", %"class.blink::Member.744", %"class.blink::Member.744", %"class.blink::Member.997", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1461", i8, %"class.base::UnguessableToken", %"class.absl::optional.1463", %"class.absl::optional.83", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.744", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1475", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1483", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1491", %"class.blink::FrameLoader", %"class.blink::Member.1508", %"class.blink::Member.627", %"class.blink::Member.1510", %"class.blink::Member.1512", %"class.blink::Member.1514", %"class.blink::Member.1516", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1518", %class.scoped_refptr.1520, %"class.blink::Member.1521", %"class.blink::Member.1523", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::Member.1529", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1535", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1538", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1544", %"class.std::__1::unique_ptr.1545", %"class.absl::optional.83", i32, [4 x i8], %"class.std::__1::unique_ptr.1551", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1559", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1564", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1569", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1572", %"class.blink::Member.1574", %"class.blink::Member.1576", %"class.blink::Member.1578", %"class.mojo::StructPtr.1581", %"class.blink::Member.1589", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1591", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1475" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1476" }
%"class.blink::HeapHashMap.1476" = type { %"class.WTF::HashMap.1479" }
%"class.WTF::HashMap.1479" = type { %"class.WTF::HashTable.1480" }
%"class.WTF::HashTable.1480" = type <{ %"struct.WTF::KeyValuePair.1482"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1482" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1483" = type { %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.982", %"class.base::WeakPtrFactory.987" }
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.986" = type opaque
%"class.base::WeakPtrFactory.987" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.516 }
%class.scoped_refptr.516 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.517", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.517" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.518" }
%"struct.std::__1::atomic.518" = type { %"struct.std::__1::__atomic_base.519" }
%"struct.std::__1::__atomic_base.519" = type { %"struct.std::__1::__atomic_base.520" }
%"struct.std::__1::__atomic_base.520" = type { %"struct.std::__1::__cxx_atomic_impl.521" }
%"struct.std::__1::__cxx_atomic_impl.521" = type { %"struct.std::__1::__cxx_atomic_base_impl.522" }
%"struct.std::__1::__cxx_atomic_base_impl.522" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1489" }
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.995" }
%"class.blink::WeakMember.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.387" }
%"class.blink::HeapHashSet.387" = type { %"class.WTF::HashSet.390" }
%"class.WTF::HashSet.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"class.blink::WeakMember.393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.393" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2123", i64, %"class.std::__1::map.2124", i8*, i64, %"class.base::WeakPtrFactory.2133" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2123" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2124" = type { %"class.std::__1::__tree.2125" }
%"class.std::__1::__tree.2125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2126", %"class.std::__1::__compressed_pair.2130" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2126" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2130" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.base::WeakPtrFactory.2133" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1491" = type { %"class.WTF::HashSet.1494" }
%"class.WTF::HashSet.1494" = type { %"class.WTF::HashTable.1495" }
%"class.WTF::HashTable.1495" = type <{ %"class.blink::WeakMember.1497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1497" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.997", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.std::__1::unique_ptr.1502", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1420" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1502" = type { %"class.std::__1::__compressed_pair.1503" }
%"class.std::__1::__compressed_pair.1503" = type { %"struct.std::__1::__compressed_pair_elem.1504" }
%"struct.std::__1::__compressed_pair_elem.1504" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1420" = type { %"class.WTF::HashTable.1421" }
%"class.WTF::HashTable.1421" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1598", %"class.blink::Member.997", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1603", i8, i32, %"class.blink::Color", %"class.absl::optional.1605", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1610", %"class.blink::Member.1612", %"class.blink::Member.1612", %"class.std::__1::unique_ptr.1615", i32, [4 x i8], %"class.WTF::HashSet.1618", %"class.blink::Member.1625", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1627", %"class.blink::HeapHashSet.1634", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1642", i8, %"class.blink::Member.1648", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1660", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1674", i8, %"class.std::__1::unique_ptr.1680", %"class.std::__1::unique_ptr.1797", %"class.WTF::Vector.1803", i32, %class.scoped_refptr.1808, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1809", %"class.blink::Member.1811", %"class.blink::Member.1813", %"class.blink::HeapHashSet.1815", %"class.blink::HeapHashSet.1822", %"class.std::__1::unique_ptr.1829", %"class.std::__1::unique_ptr.1835", %"class.WTF::Vector.716" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1598" = type { %"class.WTF::HashTable.1599" }
%"class.WTF::HashTable.1599" = type <{ %class.scoped_refptr.1602*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1602 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1603" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1604", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1065, %"class.base::WeakPtrFactory.1066" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1065 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.515" }>
%"class.base::RefCountedThreadSafe.515" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.1066" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1604" = type { %"class.blink::MemberBase.1509" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1605" = type { %"class.absl::optional_internal::optional_data.1606" }
%"class.absl::optional_internal::optional_data.1606" = type { %"class.absl::optional_internal::optional_data_base.1607" }
%"class.absl::optional_internal::optional_data_base.1607" = type { %"class.absl::optional_internal::optional_data_dtor_base.1608" }
%"class.absl::optional_internal::optional_data_dtor_base.1608" = type { i8, %union.anon.1609 }
%union.anon.1609 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::HeapHashSet.1614"* }
%"class.blink::HeapHashSet.1614" = type opaque
%"class.std::__1::unique_ptr.1615" = type { %"class.std::__1::__compressed_pair.1616" }
%"class.std::__1::__compressed_pair.1616" = type { %"struct.std::__1::__compressed_pair_elem.1617" }
%"struct.std::__1::__compressed_pair_elem.1617" = type { %"class.WTF::HashSet.1618"* }
%"class.WTF::HashSet.1618" = type { %"class.WTF::HashTable.1619" }
%"class.WTF::HashTable.1619" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1627" = type { %"class.WTF::HashSet.1630" }
%"class.WTF::HashSet.1630" = type { %"class.WTF::HashTable.1631" }
%"class.WTF::HashTable.1631" = type <{ %"class.blink::Member.1633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1633" = type opaque
%"class.blink::HeapHashSet.1634" = type { %"class.WTF::HashSet.1637" }
%"class.WTF::HashSet.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"class.blink::Member.1640"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1864", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1875", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.627" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1864" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1866", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1871", %"class.blink::Member.1873", %"class.WTF::Vector.716", i16, %class.scoped_refptr.1065 }
%"class.blink::ThreadState::PrefinalizerRegistration.1866" = type { i8 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1875" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1876", { i64, i64 } }
%"class.blink::WeakMember.1876" = type { %"class.blink::MemberBase.1641" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1652", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1652" = type { %"class.WTF::HashTable.1653" }
%"class.WTF::HashTable.1653" = type <{ %"struct.WTF::KeyValuePair.1655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1655" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1656", i32, i32 }
%"class.WTF::Vector.1656" = type { %"class.WTF::VectorBuffer.1657" }
%"class.WTF::VectorBuffer.1657" = type { %"class.WTF::VectorBufferBase.1658" }
%"class.WTF::VectorBufferBase.1658" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1660" = type { %"class.WTF::LinkedHashSet.1663" }
%"class.WTF::LinkedHashSet.1663" = type { %"class.WTF::HashMap.1664", %"class.WTF::VectorBackedLinkedList.1668" }
%"class.WTF::HashMap.1664" = type { %"class.WTF::HashTable.1665" }
%"class.WTF::HashTable.1665" = type <{ %"struct.WTF::KeyValuePair.1667"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1667" = type opaque
%"class.WTF::VectorBackedLinkedList.1668" = type { %"class.WTF::Vector.1669", i32, i32 }
%"class.WTF::Vector.1669" = type { %"class.WTF::VectorBuffer.1670" }
%"class.WTF::VectorBuffer.1670" = type { %"class.WTF::VectorBufferBase.1671" }
%"class.WTF::VectorBufferBase.1671" = type { %"class.WTF::VectorBackedLinkedListNode.1672"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1672" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1674" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1680" = type { %"class.std::__1::__compressed_pair.1681" }
%"class.std::__1::__compressed_pair.1681" = type { %"struct.std::__1::__compressed_pair_elem.1682" }
%"struct.std::__1::__compressed_pair_elem.1682" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1683, %class.scoped_refptr.1683, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1774", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1779", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1683 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1684", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1691" }
%"class.WTF::RefCounted.1684" = type { %"class.base::RefCounted.1685" }
%"class.base::RefCounted.1685" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1686", i32, [4 x i8] }>
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688" }
%"class.WTF::VectorBufferBase.1688" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1691" = type { %"class.WTF::VectorBuffer.1692" }
%"class.WTF::VectorBuffer.1692" = type { %"class.WTF::VectorBufferBase.1693" }
%"class.WTF::VectorBufferBase.1693" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1697", %"class.std::__1::unique_ptr.1746", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1694, %class.scoped_refptr.1695, %class.scoped_refptr.1696 }
%class.scoped_refptr.1694 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1710", i8, i8, %class.scoped_refptr.1694, i32, i32 }
%"class.WTF::RefCounted.1710" = type { %"class.base::RefCounted.1711" }
%"class.base::RefCounted.1711" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1695 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1859" }
%"class.blink::PaintPropertyNode.1859" = type { %"class.WTF::RefCounted.1860", i8, i8, %class.scoped_refptr.1695, i32, i32 }
%"class.WTF::RefCounted.1860" = type { %"class.base::RefCounted.1861" }
%"class.base::RefCounted.1861" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1696 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1856" }
%"class.blink::PaintPropertyNode.1856" = type { %"class.WTF::RefCounted.1857", i8, i8, %class.scoped_refptr.1696, i32, i32 }
%"class.WTF::RefCounted.1857" = type { %"class.base::RefCounted.1858" }
%"class.base::RefCounted.1858" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1700", %"class.WTF::Vector.1705", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1700" = type { %"class.WTF::VectorBuffer.1701" }
%"class.WTF::VectorBuffer.1701" = type { %"class.WTF::VectorBufferBase.1702" }
%"class.WTF::VectorBufferBase.1702" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1725" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1718, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1719", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1712" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1712" = type { %"class.std::__1::__compressed_pair.1713" }
%"class.std::__1::__compressed_pair.1713" = type { %"struct.std::__1::__compressed_pair_elem.1714" }
%"struct.std::__1::__compressed_pair_elem.1714" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1718 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1841", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1841" = type { %"class.WTF::RefCounted.1842", i8, i8, %class.scoped_refptr.1718, i32, i32 }
%"class.WTF::RefCounted.1842" = type { %"class.base::RefCounted.1843" }
%"class.base::RefCounted.1843" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1844" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1844" = type { %"class.absl::optional_internal::optional_data.1845" }
%"class.absl::optional_internal::optional_data.1845" = type { %"class.absl::optional_internal::optional_data_base.1846" }
%"class.absl::optional_internal::optional_data_base.1846" = type { %"class.absl::optional_internal::optional_data_dtor_base.1847" }
%"class.absl::optional_internal::optional_data_dtor_base.1847" = type { i8, %union.anon.1848 }
%union.anon.1848 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1849", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1849" = type { %"class.std::__1::__vector_base.1850" }
%"class.std::__1::__vector_base.1850" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1851" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1725" = type { %"class.std::__1::__compressed_pair.1726" }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.1727" }
%"struct.std::__1::__compressed_pair_elem.1727" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1728", %"class.std::__1::unique_ptr.1734", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1728" = type { %"class.std::__1::__compressed_pair.1729" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.1730" }
%"struct.std::__1::__compressed_pair_elem.1730" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1734" = type { %"class.std::__1::__compressed_pair.1735" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1749", %"class.absl::optional.1749" }
%"class.absl::optional.1749" = type { %"class.absl::optional_internal::optional_data.1750" }
%"class.absl::optional_internal::optional_data.1750" = type { %"class.absl::optional_internal::optional_data_base.1751" }
%"class.absl::optional_internal::optional_data_base.1751" = type { %"class.absl::optional_internal::optional_data_dtor_base.1752" }
%"class.absl::optional_internal::optional_data_dtor_base.1752" = type { i8, [3 x i8], %union.anon.1753 }
%union.anon.1753 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1691"*, %"class.absl::optional.1759", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1759" = type { %"class.absl::optional_internal::optional_data.1760" }
%"class.absl::optional_internal::optional_data.1760" = type { %"class.absl::optional_internal::optional_data_base.1761" }
%"class.absl::optional_internal::optional_data_base.1761" = type { %"class.absl::optional_internal::optional_data_dtor_base.1762" }
%"class.absl::optional_internal::optional_data_dtor_base.1762" = type { i8, %union.anon.1763 }
%union.anon.1763 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1764", %"class.WTF::Vector.1769" }
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [128 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { i32*, i32, i32 }
%"class.WTF::Vector.1769" = type { %"class.WTF::VectorBuffer.1770" }
%"class.WTF::VectorBuffer.1770" = type { %"class.WTF::VectorBufferBase.1771", [128 x i8] }
%"class.WTF::VectorBufferBase.1771" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1774" = type { %"class.WTF::VectorBuffer.1775" }
%"class.WTF::VectorBuffer.1775" = type { %"class.WTF::VectorBufferBase.1776" }
%"class.WTF::VectorBufferBase.1776" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1779" = type { %"class.WTF::HashTable.1780" }
%"class.WTF::HashTable.1780" = type <{ %"struct.WTF::KeyValuePair.1783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1783" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1784", %"class.WTF::Vector.1789" }
%"class.WTF::HashMap.1784" = type { %"class.WTF::HashTable.1785" }
%"class.WTF::HashTable.1785" = type <{ %"struct.WTF::KeyValuePair.1788"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1788" = type opaque
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1808 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1813" = type { %"class.blink::MemberBase.1814" }
%"class.blink::MemberBase.1814" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1815" = type { %"class.WTF::HashSet.1818" }
%"class.WTF::HashSet.1818" = type { %"class.WTF::HashTable.1819" }
%"class.WTF::HashTable.1819" = type <{ %"class.blink::WeakMember.1821"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1821" = type opaque
%"class.blink::HeapHashSet.1822" = type { %"class.WTF::HashSet.1825" }
%"class.WTF::HashSet.1825" = type { %"class.WTF::HashTable.1826" }
%"class.WTF::HashTable.1826" = type <{ %"class.blink::WeakMember.1828"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1828" = type opaque
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.94" }
%"class.base::time_internal::TimeBase.94" = type { i64 }
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.112", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.112" = type { %"class.absl::optional_internal::optional_data.113" }
%"class.absl::optional_internal::optional_data.113" = type { %"class.absl::optional_internal::optional_data_base.114" }
%"class.absl::optional_internal::optional_data_base.114" = type { %"class.absl::optional_internal::optional_data_dtor_base.115" }
%"class.absl::optional_internal::optional_data_dtor_base.115" = type { i8, %union.anon.116 }
%union.anon.116 = type { %"class.base::Time" }
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1520 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1535" = type { %"class.blink::Member.1536" }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2136" }
%"class.mojo::Remote.2136" = type { %"class.mojo::internal::InterfacePtrState.2137" }
%"class.mojo::internal::InterfacePtrState.2137" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2138" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.756, %"class.std::__1::unique_ptr.504", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.514, i32 }>
%class.scoped_refptr.756 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.514, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.815", %"class.absl::optional.820", %"class.absl::optional.773", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.840", i8, [7 x i8], %class.scoped_refptr.514, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.535" }>
%"class.base::RefCountedThreadSafe.535" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.22 }
%union.anon.22 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.539", %"class.std::__1::unique_ptr.545", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.551" }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.551" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.523", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.514, %"class.std::__1::unique_ptr.757", %"class.absl::optional.767", %"struct.std::__1::atomic.338", i8, i8, i8, i8, i32, i32, %"class.absl::optional.773", %"class.std::__1::unique_ptr.778", i8, i64, %class.scoped_refptr.812, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.814" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.514, i8, %"class.mojo::ScopedHandleBase.760", %class.scoped_refptr.761, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.762", i8*, %"class.base::WeakPtrFactory.763" }
%"class.mojo::ScopedHandleBase.760" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.761 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.762" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.763" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.767" = type { %"class.absl::optional_internal::optional_data.768" }
%"class.absl::optional_internal::optional_data.768" = type { %"class.absl::optional_internal::optional_data_base.769" }
%"class.absl::optional_internal::optional_data_base.769" = type { %"class.absl::optional_internal::optional_data_dtor_base.770" }
%"class.absl::optional_internal::optional_data_dtor_base.770" = type { i8, %union.anon.771 }
%union.anon.771 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.772", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.772" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.781", i8, i64, %class.scoped_refptr.782, %class.scoped_refptr.807 }
%"class.base::RepeatingCallback.781" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.782 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.783", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.785", %"class.std::__1::map.796", i8, [7 x i8] }>
%"class.base::RefCounted.783" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.784 }
%class.scoped_refptr.784 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.785" = type { %"class.std::__1::__tree.786" }
%"class.std::__1::__tree.786" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.787", %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::map.796" = type { %"class.std::__1::__tree.797" }
%"class.std::__1::__tree.797" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.798", %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%class.scoped_refptr.807 = type { %"class.base::RefCountedData.808"* }
%"class.base::RefCountedData.808" = type opaque
%class.scoped_refptr.812 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.528 }
%class.scoped_refptr.528 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.600", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.514, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.600" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.813 }
%class.scoped_refptr.813 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.814" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.815" = type { %"class.absl::optional_internal::optional_data.816" }
%"class.absl::optional_internal::optional_data.816" = type { %"class.absl::optional_internal::optional_data_base.817" }
%"class.absl::optional_internal::optional_data_base.817" = type { %"class.absl::optional_internal::optional_data_dtor_base.818" }
%"class.absl::optional_internal::optional_data_dtor_base.818" = type { i8, %union.anon.819 }
%union.anon.819 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.820" = type { %"class.absl::optional_internal::optional_data.821" }
%"class.absl::optional_internal::optional_data.821" = type { %"class.absl::optional_internal::optional_data_base.822" }
%"class.absl::optional_internal::optional_data_base.822" = type { %"class.absl::optional_internal::optional_data_dtor_base.823" }
%"class.absl::optional_internal::optional_data_dtor_base.823" = type { i8, [7 x i8], %union.anon.824 }
%union.anon.824 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.773" = type { %"class.absl::optional_internal::optional_data.774" }
%"class.absl::optional_internal::optional_data.774" = type { %"class.absl::optional_internal::optional_data_base.775" }
%"class.absl::optional_internal::optional_data_base.775" = type { %"class.absl::optional_internal::optional_data_dtor_base.776" }
%"class.absl::optional_internal::optional_data_dtor_base.776" = type { i8, %union.anon.777 }
%union.anon.777 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.825 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.825 = type { %"class.std::__1::map.828" }
%"class.std::__1::map.828" = type { %"class.std::__1::__tree.829" }
%"class.std::__1::__tree.829" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.830", %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.839"*, i64 }
%"class.std::__1::unique_ptr.839" = type opaque
%"class.std::__1::map.840" = type { %"class.std::__1::__tree.841" }
%"class.std::__1::__tree.841" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.842", %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.78", %"class.absl::optional.509", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.530", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.552", %"class.std::__1::map.563", i64, %"class.base::OnceCallback.523", %"class.base::OnceCallback.572", i8, %class.scoped_refptr.514, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.573" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.base::TimeDelta" }
%"class.absl::optional.509" = type { %"class.absl::optional_internal::optional_data.510" }
%"class.absl::optional_internal::optional_data.510" = type { %"class.absl::optional_internal::optional_data_base.511" }
%"class.absl::optional_internal::optional_data_base.511" = type { %"class.absl::optional_internal::optional_data_dtor_base.512" }
%"class.absl::optional_internal::optional_data_dtor_base.512" = type { i8, %union.anon.513 }
%union.anon.513 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.523" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.514, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.529 }
%class.scoped_refptr.529 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.533", %class.scoped_refptr.534 }
%"class.base::RepeatingCallback.533" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.534 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.535", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.552" = type { %"class.std::__1::__tree.553" }
%"class.std::__1::__tree.553" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.554", %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::map.563" = type { %"class.std::__1::__tree.564" }
%"class.std::__1::__tree.564" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.565", %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.base::OnceCallback.572" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.523" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.573" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.514 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.2138" = type { %"class.std::__1::__compressed_pair.2139" }
%"class.std::__1::__compressed_pair.2139" = type { %"struct.std::__1::__compressed_pair_elem.2140" }
%"struct.std::__1::__compressed_pair_elem.2140" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1544" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1545" = type { %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1551" = type { %"class.std::__1::__compressed_pair.1552" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.1553" }
%"struct.std::__1::__compressed_pair_elem.1553" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1557" }
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2146" }
%"class.mojo::AssociatedRemote.2146" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2147" }
%"class.mojo::internal::AssociatedInterfacePtrState.2147" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2148" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.504", i32 }>
%"class.std::__1::unique_ptr.2148" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1559" = type { %"class.blink::Member.1560" }
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2156" }
%"class.mojo::AssociatedRemote.2156" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2157" }
%"class.mojo::internal::AssociatedInterfacePtrState.2157" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2158" }
%"class.std::__1::unique_ptr.2158" = type { %"class.std::__1::__compressed_pair.2159" }
%"class.std::__1::__compressed_pair.2159" = type { %"struct.std::__1::__compressed_pair_elem.2160" }
%"struct.std::__1::__compressed_pair_elem.2160" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1562" }
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2166", %"class.blink::Member.997", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2166" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2167" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.504" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2167" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1564" = type { %"class.blink::Member.1565" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2170", %"class.blink::Member.997", %"class.mojo::AssociatedReceiver.2171" }
%"class.blink::ThreadState::PrefinalizerRegistration.2170" = type { i8 }
%"class.mojo::AssociatedReceiver.2171" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2172" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2172" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1567" }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2175", %"class.blink::Member.997", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2175" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.756, %"class.std::__1::unique_ptr.504", %"class.base::WeakPtrFactory.2176" }
%"class.base::WeakPtrFactory.2176" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1569" = type { %"class.blink::Member.1570" }
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2179", %"class.blink::Member.997", %"class.mojo::AssociatedReceiver.2180" }
%"class.blink::ThreadState::PrefinalizerRegistration.2179" = type { i8 }
%"class.mojo::AssociatedReceiver.2180" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2181" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2181" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::HeapHashMap.1580"* }
%"class.blink::HeapHashMap.1580" = type opaque
%"class.mojo::StructPtr.1581" = type { %"class.std::__1::unique_ptr.1582" }
%"class.std::__1::unique_ptr.1582" = type { %"class.std::__1::__compressed_pair.1583" }
%"class.std::__1::__compressed_pair.1583" = type { %"struct.std::__1::__compressed_pair_elem.1584" }
%"struct.std::__1::__compressed_pair_elem.1584" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1585", %"class.mojo::InlinedStructPtr.1363" }
%"class.mojo::InlinedStructPtr.1585" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1363" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1591" = type { %"class.absl::optional_internal::optional_data.1592" }
%"class.absl::optional_internal::optional_data.1592" = type { %"class.absl::optional_internal::optional_data_base.1593" }
%"class.absl::optional_internal::optional_data_base.1593" = type { %"class.absl::optional_internal::optional_data_dtor_base.1594" }
%"class.absl::optional_internal::optional_data_dtor_base.1594" = type { i8, %union.anon.1595 }
%union.anon.1595 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.744", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1453" }
%"class.std::__1::vector.1453" = type { %"class.std::__1::__vector_base.1454" }
%"class.std::__1::__vector_base.1454" = type { %"struct.std::__1::pair.1455"*, %"struct.std::__1::pair.1455"*, %"class.std::__1::__compressed_pair.1456" }
%"struct.std::__1::pair.1455" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1456" = type { %"struct.std::__1::__compressed_pair_elem.1457" }
%"struct.std::__1::__compressed_pair_elem.1457" = type { %"struct.std::__1::pair.1455"* }
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1463" = type { %"class.absl::optional_internal::optional_data.1464" }
%"class.absl::optional_internal::optional_data.1464" = type { %"class.absl::optional_internal::optional_data_base.1465" }
%"class.absl::optional_internal::optional_data_base.1465" = type { %"class.absl::optional_internal::optional_data_dtor_base.1466" }
%"class.absl::optional_internal::optional_data_dtor_base.1466" = type { i8, %union.anon.1467 }
%union.anon.1467 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1468" }
%"class.blink::HeapHashSet.1468" = type { %"class.WTF::HashSet.1471" }
%"class.WTF::HashSet.1471" = type { %"class.WTF::HashTable.1472" }
%"class.WTF::HashTable.1472" = type <{ %"class.blink::WeakMember.1474"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1474" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.849" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.439", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.459", %"class.blink::Member.586", %"class.blink::Member.588", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.380" }
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.394" }
%"class.blink::Supplementable.394" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.395" }
%"class.blink::HeapHashMap.395" = type { %"class.WTF::HashMap.398" }
%"class.WTF::HashMap.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type { i8*, %"class.blink::Member.2110" }
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::Supplement.2112"* }
%"class.blink::Supplement.2112" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2113" }
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.402, %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.428", %"class.blink::Member.434", i32, [4 x i8], %"class.WTF::HashSet.435", i32, i32 }
%class.scoped_refptr.402 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.378", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.37", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.42 }
%"class.WTF::RefCounted.378" = type { %"class.base::RefCounted.379" }
%"class.base::RefCounted.379" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.42 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.415", %"class.std::__1::map.424"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.37" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.406" }
%"class.std::__1::__tree.406" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::map.415" = type { %"class.std::__1::__tree.416" }
%"class.std::__1::__tree.416" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::map.424" = type opaque
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::Member.446"*, i32, i32 }
%"class.blink::Member.446" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.452", i32, i32 }
%"class.blink::HeapHashMap.452" = type { %"class.WTF::HashMap.455" }
%"class.WTF::HashMap.455" = type { %"class.WTF::HashTable.456" }
%"class.WTF::HashTable.456" = type <{ %"struct.WTF::KeyValuePair.458"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.458" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.462" }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.465" }
%"class.WTF::Vector.465" = type { %"class.WTF::VectorBuffer.466" }
%"class.WTF::VectorBuffer.466" = type { %"class.WTF::VectorBufferBase.467" }
%"class.WTF::VectorBufferBase.467" = type { %"class.mojo::StructPtr.468"*, i32, i32 }
%"class.mojo::StructPtr.468" = type { %"class.std::__1::unique_ptr.469" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.472", %"class.WTF::HashMap.479", %"class.WTF::HashMap.484", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.29", i32, %"class.mojo::StructPtr.489", %"class.WTF::Vector.29" }
%"class.mojo::StructPtr.472" = type { %"class.std::__1::unique_ptr.473" }
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.479" = type { %"class.WTF::HashTable.480" }
%"class.WTF::HashTable.480" = type <{ %"struct.WTF::KeyValuePair.483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.483" = type opaque
%"class.WTF::HashMap.484" = type { %"class.WTF::HashTable.485" }
%"class.WTF::HashTable.485" = type <{ %"struct.WTF::KeyValuePair.488"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.488" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.489" = type { %"class.std::__1::unique_ptr.490" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.29", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.577" }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.450", i8, [7 x i8], %"class.WTF::Vector.465", %"class.blink::HeapVector.592", i8, [7 x i8], %"class.WTF::HashSet.435", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.592" = type { %"class.WTF::Vector.595" }
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { %"class.blink::Member.598"*, i32, i32 }
%"class.blink::Member.598" = type opaque
%"class.blink::Supplementable.857" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.858" }
%"class.blink::HeapHashMap.858" = type { %"class.WTF::HashMap.861" }
%"class.WTF::HashMap.861" = type { %"class.WTF::HashTable.862" }
%"class.WTF::HashTable.862" = type <{ %"struct.WTF::KeyValuePair.864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.864" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.889 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.891", i64, %"class.WTF::Vector.895", %"class.WTF::Vector.900", %"class.WTF::Vector.906", %"class.WTF::Vector.924", %class.scoped_refptr.402, %"class.WTF::HashMap.930", %"class.WTF::Vector.935", %"class.WTF::Vector.895", %"class.WTF::Vector.941", %"class.WTF::HashMap.947", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.890" }
%"class.base::RefCountedThreadSafe.890" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { i8* }
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902", [8 x i8] }
%"class.WTF::VectorBufferBase.902" = type { %class.scoped_refptr.903*, i32, i32 }
%class.scoped_refptr.903 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.910", %"class.std::__1::unique_ptr.916" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.927", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.927" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ %"struct.WTF::KeyValuePair.934"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.934" = type opaque
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"class.mojo::ScopedHandleBase.938"*, i32, i32 }
%"class.mojo::ScopedHandleBase.938" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.895" = type { %"class.WTF::VectorBuffer.896" }
%"class.WTF::VectorBuffer.896" = type { %"class.WTF::VectorBufferBase.897", [16 x i8] }
%"class.WTF::VectorBufferBase.897" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { %"class.mojo::PendingRemote.944"*, i32, i32 }
%"class.mojo::PendingRemote.944" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.951" = type { i8**, %"class.std::__1::unique_ptr.2115" }
%"class.std::__1::unique_ptr.2115" = type { %"class.std::__1::__compressed_pair.2116" }
%"class.std::__1::__compressed_pair.2116" = type { %"struct.std::__1::__compressed_pair_elem.2117" }
%"struct.std::__1::__compressed_pair_elem.2117" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.952" = type { %"class.WTF::HashSet.955" }
%"class.WTF::HashSet.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"class.blink::WeakMember.958"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.958" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.966", %"class.blink::Member.966", %"class.blink::Member.968", %"class.blink::Member.970", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.961" }
%"class.absl::optional.961" = type { %"class.absl::optional_internal::optional_data.962" }
%"class.absl::optional_internal::optional_data.962" = type { %"class.absl::optional_internal::optional_data_base.963" }
%"class.absl::optional_internal::optional_data_base.963" = type { %"class.absl::optional_internal::optional_data_dtor_base.964" }
%"class.absl::optional_internal::optional_data_dtor_base.964" = type { i8, %union.anon.965 }
%union.anon.965 = type { i64 }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::Event"* }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.972" = type { %"class.WTF::HashMap.975" }
%"class.WTF::HashMap.975" = type { %"class.WTF::HashTable.976" }
%"class.WTF::HashTable.976" = type <{ %"struct.WTF::KeyValuePair.978"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.978" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.997", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1008", %"class.blink::Member.1010", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.999", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1001", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1001" = type { %"class.WTF::HashMap.1004" }
%"class.WTF::HashMap.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"struct.WTF::KeyValuePair.1007"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1007" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.601", i32, i32 }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.721", %"class.blink::Member.1439", %"class.blink::Member.1441" }
%"class.blink::Member.1439" = type { %"class.blink::MemberBase.1440" }
%"class.blink::MemberBase.1440" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.721", %"class.blink::HeapMojoRemote.1434" }
%"class.blink::HeapMojoRemote.1434" = type { %"class.blink::Member.1435" }
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::HeapHashMap.1018"* }
%"class.blink::HeapHashMap.1018" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.755" }
%"class.base::StrongAlias.755" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1028" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032" }
%"class.WTF::VectorBufferBase.1032" = type { i64*, i32, i32 }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.439", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.448", %"class.blink::Member.450", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.459", %"class.blink::Member.586", %"class.blink::Member.588", i8, [7 x i8] }>
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1293", %"class.blink::Member.1294", %"class.blink::Member.1296", %"class.blink::Member.1298", %class.scoped_refptr.1065, %class.scoped_refptr.1065, %"class.blink::Member.1300", %"class.blink::Member.1302", %"class.blink::Member.1308", %"class.blink::Member.1312", %"class.blink::Member.1364", %"class.blink::HeapHashMap.1366", %"class.blink::HeapHashSet.1373", %"class.blink::HeapHashSet.1373", %"class.blink::HeapHashMap.1380", %"class.blink::HeapVector.1387", %"class.blink::Member.1394", %"class.blink::HeapTaskRunnerTimer.1396", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1398", %"class.WTF::Vector.1405", %"class.blink::HeapHashSet.1411", %"class.blink::HeapHashSet.1411", %"class.std::__1::unique_ptr.1417", %"class.base::WeakPtr.1357", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1429", i8, i8, %"class.base::WeakPtrFactory.1431" }
%"class.blink::ThreadState::PrefinalizerRegistration.1293" = type { i8 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1306" }
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1316", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1318", %"class.WTF::HashSet.1323", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1327", %"class.std::__1::map.1334", %"class.std::__1::map.1345", %"class.std::__1::unique_ptr.1354", %"class.blink::Member.1302", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1361", %"class.mojo::InlinedStructPtr.1363", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1318" = type { %"class.WTF::HashTable.1319" }
%"class.WTF::HashTable.1319" = type <{ %"struct.WTF::KeyValuePair.1322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1322" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1323" = type { %"class.WTF::HashTable.1324" }
%"class.WTF::HashTable.1324" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1327" = type { %"class.WTF::HashMap.1330" }
%"class.WTF::HashMap.1330" = type { %"class.WTF::HashTable.1331" }
%"class.WTF::HashTable.1331" = type <{ %"struct.WTF::KeyValuePair.1333"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1333" = type opaque
%"class.std::__1::map.1334" = type { %"class.std::__1::__tree.1335" }
%"class.std::__1::__tree.1335" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1336", %"class.std::__1::__compressed_pair.1340" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.1340" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::map.1345" = type { %"class.std::__1::__tree.1346" }
%"class.std::__1::__tree.1346" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1347", %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.std::__1::unique_ptr.1354" = type { %"class.std::__1::__compressed_pair.1355" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.1356" }
%"struct.std::__1::__compressed_pair_elem.1356" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1357", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1366" = type { %"class.WTF::HashMap.1369" }
%"class.WTF::HashMap.1369" = type { %"class.WTF::HashTable.1370" }
%"class.WTF::HashTable.1370" = type <{ %"struct.WTF::KeyValuePair.1372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1372" = type opaque
%"class.blink::HeapHashSet.1373" = type { %"class.WTF::HashSet.1376" }
%"class.WTF::HashSet.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"class.blink::WeakMember.1379"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1379" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.34", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.347", %"class.blink::ResourceResponse", %class.scoped_refptr.349, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.15", i8, %"class.absl::optional.24", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, [7 x i8], %union.anon.19 }
%union.anon.19 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.29" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.131" }
%"class.WTF::HashMap.131" = type { %"class.WTF::HashTable.132" }
%"class.WTF::HashTable.132" = type <{ %"struct.WTF::KeyValuePair.134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.134" = type <{ %"class.blink::WeakMember.2182", i32, [4 x i8] }>
%"class.blink::WeakMember.2182" = type { %"class.blink::MemberBase.2183" }
%"class.blink::MemberBase.2183" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1995", [7 x i8], %"class.blink::Member.10", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1995" = type { i8 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.137" }
%"class.WTF::HashTable.137" = type <{ %"class.blink::WeakMember.139"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.139" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.140", i8, i8, %class.scoped_refptr.144, %class.scoped_refptr.342, %class.scoped_refptr.344 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.140" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.144 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.145" }
%"class.base::RefCounted.145" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.150" }
%"class.WTF::HashMap.150" = type { %"class.WTF::HashTable.151" }
%"class.WTF::HashTable.151" = type <{ %"struct.WTF::KeyValuePair.153"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.153" = type { %"class.blink::WeakMember.154", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.342 = type { %"class.base::RefCountedData.343"* }
%"class.base::RefCountedData.343" = type opaque
%class.scoped_refptr.344 = type { %"class.base::RefCountedData.345"* }
%"class.base::RefCountedData.345" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.42, %class.scoped_refptr.42, %class.scoped_refptr.42, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.45, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.58", %"class.absl::optional.63", %"class.absl::optional.73", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.83", %"class.absl::optional.73", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.73", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.83", %"class.absl::optional.88", i8, %class.scoped_refptr.93 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.45 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.52, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.46"*, %"class.std::__1::unique_ptr.46"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.2096" }
%"class.std::__1::__compressed_pair.2096" = type { %"struct.std::__1::__compressed_pair_elem.2097" }
%"struct.std::__1::__compressed_pair_elem.2097" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::unique_ptr.46"* }
%class.scoped_refptr.52 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.68", %"class.WTF::Vector.29", %"class.WTF::String" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %class.scoped_refptr.42*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.78", %"class.absl::optional.78" }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.WTF::String" }
%"class.absl::optional.88" = type { %"class.absl::optional_internal::optional_data.89" }
%"class.absl::optional_internal::optional_data.89" = type { %"class.absl::optional_internal::optional_data_base.90" }
%"class.absl::optional_internal::optional_data_base.90" = type { %"class.absl::optional_internal::optional_data_dtor_base.91" }
%"class.absl::optional_internal::optional_data_dtor_base.91" = type { i8, %union.anon.92 }
%union.anon.92 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.93 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.2101", %"class.base::internal::flat_tree.2102" }
%"class.base::RefCountedThreadSafe.2101" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2102" = type { %"class.std::__1::vector.2103" }
%"class.std::__1::vector.2103" = type { %"class.std::__1::__vector_base.2104" }
%"class.std::__1::__vector_base.2104" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2105" }
%"class.std::__1::__compressed_pair.2105" = type { %"struct.std::__1::__compressed_pair_elem.2106" }
%"struct.std::__1::__compressed_pair_elem.2106" = type { i32* }
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.95", %class.scoped_refptr.110, %class.scoped_refptr.111, %"struct.blink::CacheControlHeader", %"class.absl::optional.78", %"class.absl::optional.112", %"class.absl::optional.112", %"class.absl::optional.112", i64, %"class.blink::KURL", %"class.WTF::Vector.117", %"class.WTF::String", %"class.WTF::Vector.29", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.83", %"class.WTF::Vector.29", %"class.blink::KURL", %"class.absl::optional.122" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.29", %"class.WTF::String", i64, i64, %"class.WTF::Vector.100", %"class.WTF::Vector.105" }
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.105" = type { %"class.WTF::VectorBuffer.106" }
%"class.WTF::VectorBuffer.106" = type { %"class.WTF::VectorBufferBase.107" }
%"class.WTF::VectorBufferBase.107" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.110 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.111 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.122" = type { %"class.absl::optional_internal::optional_data.123" }
%"class.absl::optional_internal::optional_data.123" = type { %"class.absl::optional_internal::optional_data_base.124" }
%"class.absl::optional_internal::optional_data_base.124" = type { %"class.absl::optional_internal::optional_data_dtor_base.125" }
%"class.absl::optional_internal::optional_data_dtor_base.125" = type { i8, %union.anon.126 }
%union.anon.126 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.349 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.350", i64, %"class.WTF::Vector.352", %"class.WTF::Vector.357" }
%"class.WTF::RefCounted.350" = type { %"class.base::RefCounted.351" }
%"class.base::RefCounted.351" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.352" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { i8*, i32, i32 }
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.std::__1::unique_ptr.360"*, i32, i32 }
%"class.std::__1::unique_ptr.360" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"class.blink::HeapHashMap.1380" = type { %"class.WTF::HashMap.1383" }
%"class.WTF::HashMap.1383" = type { %"class.WTF::HashTable.1384" }
%"class.WTF::HashTable.1384" = type <{ %"struct.WTF::KeyValuePair.1386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1386" = type opaque
%"class.blink::HeapVector.1387" = type { %"class.WTF::Vector.1390" }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.blink::Member.10"*, i32, i32 }
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1396" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1397", { i64, i64 } }
%"class.blink::WeakMember.1397" = type { %"class.blink::MemberBase.1034" }
%"class.blink::HeapHashMap.1398" = type { %"class.WTF::HashMap.1401" }
%"class.WTF::HashMap.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.WTF::Vector.1405" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407" }
%"class.WTF::VectorBufferBase.1407" = type { %class.scoped_refptr.1408*, i32, i32 }
%class.scoped_refptr.1408 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1411" = type { %"class.WTF::HashSet.1414" }
%"class.WTF::HashSet.1414" = type { %"class.WTF::HashTable.1415" }
%"class.WTF::HashTable.1415" = type <{ %"class.blink::Member.347"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.WTF::HashSet.1420"* }
%"class.base::WeakPtr.1357" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1427" }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1431" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.611", %"class.blink::HeapHashSet.1039" }
%"class.blink::HeapHashSet.1039" = type { %"class.WTF::HashSet.1042" }
%"class.WTF::HashSet.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"class.blink::WeakMember.1045"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1045" = type opaque
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.673", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.675, %"class.WTF::Vector.676", %"class.WTF::Vector.676", %"class.blink::Member.601", %"class.blink::Member.681", %"class.blink::HeapHashSet.685", %"class.blink::Member.611", %"class.WTF::HashSet.692", %"class.WTF::TextPosition", %"class.blink::Member.696", %"class.blink::HeapVector.698", %"class.blink::Member.705" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.675 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.676" = type { %"class.WTF::VectorBuffer.677" }
%"class.WTF::VectorBuffer.677" = type { %"class.WTF::VectorBufferBase.678" }
%"class.WTF::VectorBufferBase.678" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.683" }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.685" = type { %"class.WTF::HashSet.688" }
%"class.WTF::HashSet.688" = type { %"class.WTF::HashTable.689" }
%"class.WTF::HashTable.689" = type <{ %"class.blink::WeakMember.691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.691" = type { %"class.blink::MemberBase.604" }
%"class.WTF::HashSet.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.698" = type { %"class.WTF::Vector.701" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Member.681"*, i32, i32 }
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1060" = type { %"class.WTF::VectorBuffer.1061" }
%"class.WTF::VectorBuffer.1061" = type { %"class.WTF::VectorBufferBase.1062" }
%"class.WTF::VectorBufferBase.1062" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.144 }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.611", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.601", %"class.blink::Member.601", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1067" }
%"class.blink::HeapHashMap.1067" = type { %"class.WTF::HashMap.1070" }
%"class.WTF::HashMap.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"struct.WTF::KeyValuePair.1073"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1073" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1076" = type { %"class.WTF::HashSet.1079" }
%"class.WTF::HashSet.1079" = type { %"class.WTF::HashTable.1080" }
%"class.WTF::HashTable.1080" = type <{ %"class.blink::WeakMember.1082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1082" = type opaque
%"class.blink::HeapHashSet.1083" = type { %"class.WTF::HashSet.1086" }
%"class.WTF::HashSet.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"class.blink::WeakMember.1089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1089" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.603", %"class.blink::HeapVector.665" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1100" = type { %"class.WTF::HashMap.1103" }
%"class.WTF::HashMap.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"struct.WTF::KeyValuePair.1106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1106" = type opaque
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.632" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.629 }
%class.scoped_refptr.629 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.630", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.630" = type { %"class.base::RefCounted.631" }
%"class.base::RefCounted.631" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.636", %"class.blink::Member.638", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.636" = type { %"class.WTF::SingleThreadedBitField.637" }
%"class.WTF::SingleThreadedBitField.637" = type { i32 }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.640 }
%class.scoped_refptr.640 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.641", %"class.WTF::AtomicString", %"class.WTF::Vector.643" }
%"class.WTF::RefCounted.641" = type { %"class.base::RefCounted.642" }
%"class.base::RefCounted.642" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.102", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member.611", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.1126", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.1065, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::HeapHashSet.1126" = type { %"class.WTF::HashSet.1129" }
%"class.WTF::HashSet.1129" = type { %"class.WTF::HashTable.1130" }
%"class.WTF::HashTable.1130" = type <{ %"class.blink::Member.1"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.1122" }
%"class.WTF::Deque.1122" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1124" }
%"class.WTF::VectorBuffer.1124" = type { %"class.WTF::VectorBufferBase.1125" }
%"class.WTF::VectorBufferBase.1125" = type { %"class.blink::Member.1"*, i32, i32 }
%"class.blink::HeapVector.1132" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::Member"*, i32, i32 }
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1145" = type { %"class.WTF::HashSet.1148" }
%"class.WTF::HashSet.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"class.blink::WeakMember.1151"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1151" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1152", i32, [4 x i8] }>
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %"struct.std::__1::pair.1155"*, i32, i32 }
%"struct.std::__1::pair.1155" = type opaque
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1160" = type { %"class.WTF::VectorBuffer.1161" }
%"class.WTF::VectorBuffer.1161" = type { %"class.WTF::VectorBufferBase.1162" }
%"class.WTF::VectorBufferBase.1162" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.647" = type { %"class.WTF::Vector.650" }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { %"class.blink::Member.627"*, i32, i32 }
%"class.blink::HeapVector.1171" = type { %"class.WTF::Vector.1174" }
%"class.WTF::Vector.1174" = type { %"class.WTF::VectorBuffer.1175" }
%"class.WTF::VectorBuffer.1175" = type { %"class.WTF::VectorBufferBase.1176" }
%"class.WTF::VectorBufferBase.1176" = type { %"class.blink::Member.1177"*, i32, i32 }
%"class.blink::Member.1177" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.611" }
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1189" = type { %"class.WTF::HashTable.1190" }
%"class.WTF::HashTable.1190" = type <{ %"struct.WTF::KeyValuePair.1193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1193" = type opaque
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.0" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::HeapHashSet.1202" = type { %"class.WTF::HashSet.1205" }
%"class.WTF::HashSet.1205" = type { %"class.WTF::HashTable.1206" }
%"class.WTF::HashTable.1206" = type <{ %"class.blink::Member.1208"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1208" = type opaque
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1219" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1019" = type { %"class.WTF::VectorBuffer.1020" }
%"class.WTF::VectorBuffer.1020" = type { %"class.WTF::VectorBufferBase.1021" }
%"class.WTF::VectorBufferBase.1021" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1239" = type { %"class.WTF::HashMap.1242" }
%"class.WTF::HashMap.1242" = type { %"class.WTF::HashTable.1243" }
%"class.WTF::HashTable.1243" = type <{ %"struct.WTF::KeyValuePair.1245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1245" = type opaque
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1258" = type { %"class.WTF::HashMap.1261" }
%"class.WTF::HashMap.1261" = type { %"class.WTF::HashTable.1262" }
%"class.WTF::HashTable.1262" = type <{ %"struct.WTF::KeyValuePair.1264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1264" = type opaque
%"class.blink::HeapObserverSet.1265" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1266" }
%"class.blink::HeapHashSet.1266" = type { %"class.WTF::HashSet.1269" }
%"class.WTF::HashSet.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"class.blink::WeakMember.1272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1272" = type opaque
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.611", %"class.blink::HeapHashSet.1282", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1289", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1282" = type { %"class.WTF::HashSet.1285" }
%"class.WTF::HashSet.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"class.blink::Member.1288"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1288" = type opaque
%"class.blink::HeapTaskRunnerTimer.1289" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1290", { i64, i64 } }
%"class.blink::WeakMember.1290" = type { %"class.blink::MemberBase.1276" }
%"class.blink::WeakMember.1277" = type { %"class.blink::MemberBase.602" }
%"class.blink::Member.1278" = type { %"class.blink::MemberBase.1279" }
%"class.blink::MemberBase.1279" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.6", %"class.blink::WeakMember", %"class.blink::WeakMember.8", i8, [7 x i8] }>
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::WeakMember.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2205", %"class.blink::FreeList", %"class.WTF::Vector.2210" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2204" }
%"struct.std::__1::array.2204" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2205" = type { %"class.WTF::VectorBuffer.2206" }
%"class.WTF::VectorBuffer.2206" = type { %"class.WTF::VectorBufferBase.2207" }
%"class.WTF::VectorBufferBase.2207" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.2210" = type { %"class.WTF::VectorBuffer.2211" }
%"class.WTF::VectorBuffer.2211" = type { %"class.WTF::VectorBufferBase.2212" }
%"class.WTF::VectorBufferBase.2212" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.140", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.blink::Persistent.1948" = type { %"class.blink::PersistentBase.1949" }
%"class.blink::PersistentBase.1949" = type { %"class.blink::ScriptElementBase"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ModuleScriptCreationParams" = type <{ %"class.blink::KURL", %"class.blink::KURL", i32, i32, i8, [7 x i8], %"class.blink::ParkableString", %"class.WTF::String", %"class.blink::Persistent.2026", %"class.blink::Persistent.2030", i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.1996 }
%class.scoped_refptr.1996 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1997", %"class.WTF::String", %"class.std::__1::unique_ptr.1999" }
%"class.WTF::RefCounted.1997" = type { %"class.base::RefCounted.1998" }
%"class.base::RefCounted.1998" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1999" = type { %"class.std::__1::__compressed_pair.2000" }
%"class.std::__1::__compressed_pair.2000" = type { %"struct.std::__1::__compressed_pair_elem.2001" }
%"struct.std::__1::__compressed_pair_elem.2001" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2002", %"class.std::__1::unique_ptr.2013", %"class.WTF::Vector.2019", i8, i32 }
%"class.std::__1::unique_ptr.2002" = type { %"class.std::__1::__compressed_pair.2003" }
%"class.std::__1::__compressed_pair.2003" = type { %"struct.std::__1::__compressed_pair_elem.2004" }
%"struct.std::__1::__compressed_pair_elem.2004" = type { %"class.WTF::Vector.2005"* }
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2019" = type { %"class.WTF::VectorBuffer.2020" }
%"class.WTF::VectorBuffer.2020" = type { %"class.WTF::VectorBufferBase.2007", [32 x i8] }
%"class.blink::Persistent.2026" = type { %"class.blink::PersistentBase.2027" }
%"class.blink::PersistentBase.2027" = type { %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.blink::Persistent.2030" = type { %"class.blink::PersistentBase.2031" }
%"class.blink::PersistentBase.2031" = type { %"class.blink::ScriptStreamer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration.2034", i32, %"class.blink::Member.2035", %"class.blink::Member.2059", %"class.mojo::ScopedHandleBase.2061", %"class.std::__1::unique_ptr.757", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.2062", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.1065 }
%"class.blink::ThreadState::PrefinalizerRegistration.2034" = type { i8 }
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::ScriptResource"* }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.2055", i32, i32, %"class.blink::Member.2057", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.2037" }
%"class.std::__1::unique_ptr.2037" = type { %"class.std::__1::__compressed_pair.2038" }
%"class.std::__1::__compressed_pair.2038" = type { %"struct.std::__1::__compressed_pair_elem.2039" }
%"struct.std::__1::__compressed_pair_elem.2039" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.2040", i32, %"class.WTF::Vector.352", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2046" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.2040" = type { %"class.std::__1::__compressed_pair.2041" }
%"class.std::__1::__compressed_pair.2041" = type { %"struct.std::__1::__compressed_pair_elem.2042" }
%"struct.std::__1::__compressed_pair_elem.2042" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2046" = type { %"class.std::__1::__compressed_pair.2047" }
%"class.std::__1::__compressed_pair.2047" = type { %"struct.std::__1::__compressed_pair_elem.2048" }
%"struct.std::__1::__compressed_pair_elem.2048" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::Member.2057" = type { %"class.blink::MemberBase.2058" }
%"class.blink::MemberBase.2058" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.blink::Member.2059" = type { %"class.blink::MemberBase.2060" }
%"class.blink::MemberBase.2060" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.2061" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.2062" = type { %"class.std::__1::__compressed_pair.2063" }
%"class.std::__1::__compressed_pair.2063" = type { %"struct.std::__1::__compressed_pair_elem.2064" }
%"struct.std::__1::__compressed_pair_elem.2064" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.2065" }
%"class.std::__1::unique_ptr.2065" = type { %"class.std::__1::__compressed_pair.2066" }
%"class.std::__1::__compressed_pair.2066" = type { %"struct.std::__1::__compressed_pair_elem.2067" }
%"struct.std::__1::__compressed_pair_elem.2067" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1879", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1891", %"class.WTF::Vector.1892" }
%"class.std::__1::unique_ptr.1879" = type { %"class.std::__1::__compressed_pair.1880" }
%"class.std::__1::__compressed_pair.1880" = type { %"struct.std::__1::__compressed_pair_elem.1881" }
%"struct.std::__1::__compressed_pair_elem.1881" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1882", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1891" = type { %"class.blink::MemberBase.998" }
%"class.WTF::Vector.1892" = type { %"class.WTF::VectorBuffer.1893" }
%"class.WTF::VectorBuffer.1893" = type { %"class.WTF::VectorBufferBase.1766" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1898, %"class.blink::Member.1899", %"class.blink::SelfKeepAlive", %"class.util::TokenType.1946" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.1898 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1899" = type { %"class.blink::MemberBase.1900" }
%"class.blink::MemberBase.1900" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.1903", %"class.blink::HeapHashMap.1912", %"class.std::__1::unique_ptr.1922", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.1934", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.1937" }
%"class.blink::HeapHashMap.1903" = type { %"class.WTF::HashMap.1906" }
%"class.WTF::HashMap.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"struct.WTF::KeyValuePair.1909"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1909" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.1912" = type { %"class.WTF::HashMap.1915" }
%"class.WTF::HashMap.1915" = type { %"class.WTF::HashTable.1916" }
%"class.WTF::HashTable.1916" = type <{ %"struct.WTF::KeyValuePair.1918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1918" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.1919" }
%"class.blink::TraceWrapperV8Reference.1919" = type { %"class.v8::TracedReference.1920" }
%"class.v8::TracedReference.1920" = type { %"class.v8::BasicTracedReference.1921" }
%"class.v8::BasicTracedReference.1921" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.1922" = type { %"class.std::__1::__compressed_pair.1923" }
%"class.std::__1::__compressed_pair.1923" = type { %"struct.std::__1::__compressed_pair_elem.1924" }
%"struct.std::__1::__compressed_pair_elem.1924" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.1925" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.1925" = type { %"class.std::__1::__compressed_pair.1926" }
%"class.std::__1::__compressed_pair.1926" = type { %"struct.std::__1::__compressed_pair_elem.1927" }
%"struct.std::__1::__compressed_pair_elem.1927" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.1934" = type { %"class.v8::Persistent.1935" }
%"class.v8::Persistent.1935" = type { %"class.v8::PersistentBase.1936" }
%"class.v8::PersistentBase.1936" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.1937" = type { %"class.WTF::HashMap.1940" }
%"class.WTF::HashMap.1940" = type { %"class.WTF::HashTable.1941" }
%"class.WTF::HashTable.1941" = type <{ %"struct.WTF::KeyValuePair.1943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1943" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1944" }
%"class.blink::Persistent.1944" = type { %"class.blink::PersistentBase.1945" }
%"class.blink::PersistentBase.1945" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.1946" = type { %"class.base::StrongAlias.1947" }
%"class.base::StrongAlias.1947" = type { %"class.base::UnguessableToken" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.515", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.1948" }
%"class.blink::ClassicPendingScript" = type <{ %"class.blink::PendingScript.base", [7 x i8], %"class.blink::ResourceClient.base", [7 x i8], %"class.blink::MemoryPressureListener", %"class.blink::ScriptFetchOptions", %"class.blink::KURL", %"class.WTF::String", i32, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.blink::PendingScript.base" = type <{ %"class.blink::NameClient", %"class.blink::Member", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.6", %"class.blink::WeakMember", %"class.blink::WeakMember.8", i8 }>
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1995", [7 x i8], %"class.blink::Member.10", i8 }>
%"class.blink::PendingImportMap" = type { i32 (...)**, %"class.blink::Member", %"class.blink::Member.1952", %"class.blink::WorldSafeV8Reference", %"class.blink::WeakMember.1970" }
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::ImportMap"* }
%"class.blink::ImportMap" = type { %"class.WTF::HashMap.1956", %"class.WTF::Vector.1961" }
%"class.WTF::HashMap.1956" = type { %"class.WTF::HashTable.1957" }
%"class.WTF::HashTable.1957" = type <{ %"struct.WTF::KeyValuePair.1960"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1960" = type opaque
%"class.WTF::Vector.1961" = type { %"class.WTF::VectorBuffer.1962" }
%"class.WTF::VectorBuffer.1962" = type { %"class.WTF::VectorBufferBase.1963" }
%"class.WTF::VectorBufferBase.1963" = type { %"struct.std::__1::pair.1964"*, i32, i32 }
%"struct.std::__1::pair.1964" = type opaque
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1967", %class.scoped_refptr.144 }
%"class.blink::TraceWrapperV8Reference.1967" = type { %"class.v8::TracedReference.1968" }
%"class.v8::TracedReference.1968" = type { %"class.v8::BasicTracedReference.1969" }
%"class.v8::BasicTracedReference.1969" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::WeakMember.1970" = type { %"class.blink::MemberBase.1971" }
%"class.blink::MemberBase.1971" = type { %"class.blink::ExecutionContext"* }
%"class.blink::SpeculationRuleSet" = type { %"class.blink::HeapVector.1974", %"class.blink::HeapVector.1974", %"class.blink::HeapVector.1974" }
%"class.blink::HeapVector.1974" = type { %"class.WTF::Vector.1977" }
%"class.WTF::Vector.1977" = type { %"class.WTF::VectorBuffer.1978" }
%"class.WTF::VectorBuffer.1978" = type { %"class.WTF::VectorBufferBase.1979" }
%"class.WTF::VectorBufferBase.1979" = type { %"class.blink::Member.1980"*, i32, i32 }
%"class.blink::Member.1980" = type opaque
%"class.blink::DocumentSpeculationRules" = type <{ %"class.blink::Supplement", %"class.blink::HeapVector.1984", %"class.blink::HeapMojoRemote.1992", i8, [7 x i8] }>
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.611" }
%"class.blink::HeapVector.1984" = type { %"class.WTF::Vector.1987" }
%"class.WTF::Vector.1987" = type { %"class.WTF::VectorBuffer.1988" }
%"class.WTF::VectorBuffer.1988" = type { %"class.WTF::VectorBufferBase.1989" }
%"class.WTF::VectorBufferBase.1989" = type { %"class.blink::Member.1990"*, i32, i32 }
%"class.blink::Member.1990" = type opaque
%"class.blink::HeapMojoRemote.1992" = type { %"class.blink::Member.1993" }
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::SpeculationHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::SpeculationHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::JSModuleScript" = type { %"class.blink::ModuleScript", %"class.blink::NameClient", i64, %"class.WTF::TextPosition", %"class.blink::Member.2079" }
%"class.blink::ModuleScript" = type { %"class.blink::Script", %"class.blink::Member.881", %"class.blink::TraceWrapperV8Reference.2076", %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference", %"class.WTF::HashMap.1956", %"class.blink::KURL" }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::TraceWrapperV8Reference.2076" = type { %"class.v8::TracedReference.2077" }
%"class.v8::TracedReference.2077" = type { %"class.v8::BasicTracedReference.2078" }
%"class.v8::BasicTracedReference.2078" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.2079" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::ModuleRecordProduceCacheData"* }
%"class.blink::ModuleRecordProduceCacheData" = type { %"class.blink::Member.2083", i32, %"class.blink::TraceWrapperV8Reference.2085" }
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::SingleCachedMetadataHandler"* }
%"class.blink::TraceWrapperV8Reference.2085" = type { %"class.v8::TracedReference.2086" }
%"class.v8::TracedReference.2086" = type { %"class.v8::BasicTracedReference.2087" }
%"class.v8::BasicTracedReference.2087" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ModulePendingScriptTreeClient" = type { %"class.blink::ModuleTreeClient", i8, %"class.blink::Member.2090", %"class.blink::Member.2092" }
%"class.blink::ModuleTreeClient" = type { %"class.blink::NameClient" }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::ModuleScript"* }
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::ModulePendingScript"* }
%"class.blink::ModulePendingScript" = type <{ %"class.blink::PendingScript.base", [7 x i8], %"class.blink::Member.2094", i8, i8, [6 x i8] }>
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::ModulePendingScriptTreeClient"* }
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2185" = type { %"class.WTF::StringTypeAdapter.2186" }
%"class.WTF::StringTypeAdapter.2186" = type { %"class.WTF::StringView" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink26ModuleScriptCreationParamsD2Ev = comdat any

$_ZN5blink18ScriptFetchOptionsD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink12ScriptLoader18NameInHeapSnapshotEv = comdat any

$_ZThn8_NK5blink12ScriptLoader18NameInHeapSnapshotEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8DocumentEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA60_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEPKcEEEPS1_DpOT_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA44_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA50_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16ModuleTreeClientEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16ModuleTreeClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16ModuleTreeClientEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13PendingScriptEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13PendingScriptEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13PendingScriptEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12ScriptLoaderE = hidden unnamed_addr constant { [7 x i8*], [3 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ScriptLoader"*, %"class.blink::Visitor"*)* @_ZNK5blink12ScriptLoader5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ScriptLoader"*)* @_ZN5blink12ScriptLoaderD2Ev to i8*), i8* bitcast (void (%"class.blink::ScriptLoader"*)* @_ZN5blink12ScriptLoaderD0Ev to i8*), i8* bitcast (void (%"class.blink::ScriptLoader"*, %"class.blink::PendingScript"*)* @_ZN5blink12ScriptLoader21PendingScriptFinishedEPNS_13PendingScriptE to i8*), i8* bitcast (i8* (%"class.blink::ScriptLoader"*)* @_ZNK5blink12ScriptLoader18NameInHeapSnapshotEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i8* (%"class.blink::ScriptLoader"*)* @_ZThn8_NK5blink12ScriptLoader18NameInHeapSnapshotEv to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"importmap\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"speculationrules\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.3 = private unnamed_addr constant [60 x i8] c"Synchronous script execution is disabled by Document Policy\00", align 1
@.str.4 = private unnamed_addr constant [63 x i8] c"An import map is added after module script load was triggered.\00", align 1
@.str.5 = private unnamed_addr constant [69 x i8] c"Multiple import maps are not yet supported. https://crbug.com/927119\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"PrepareScript\00", align 1
@.str.7 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/core/script/script_loader.cc\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"External import maps are not yet supported.\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"External speculation rules are not yet supported.\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"prepared_pending_script_\00", align 1
@_ZN5blink8features24kKeepScriptResourceAliveE = external global %"struct.base::Feature", align 8
@.str.11 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"onload\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"onload()\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"text/\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, blink::IntegrityAlgorithm>]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"ScriptLoader\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ModuleTreeClientEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ModuleTreeClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16ModuleTreeClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16ModuleTreeClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13PendingScriptEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PendingScript]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13PendingScriptEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13PendingScriptEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@switch.table._ZN5blink12ScriptLoader27ModuleScriptCredentialsModeENS_25CrossOriginAttributeValueE = private unnamed_addr constant [3 x i32] [i32 1, i32 1, i32 2], align 4

@_ZN5blink12ScriptLoaderC1EPNS_17ScriptElementBaseENS_18CreateElementFlagsE = hidden unnamed_addr alias void (%"class.blink::ScriptLoader"*, %"class.blink::ScriptElementBase"*, %"class.blink::CreateElementFlags"*), void (%"class.blink::ScriptLoader"*, %"class.blink::ScriptElementBase"*, %"class.blink::CreateElementFlags"*)* @_ZN5blink12ScriptLoaderC2EPNS_17ScriptElementBaseENS_18CreateElementFlagsE
@_ZN5blink12ScriptLoaderD1Ev = hidden unnamed_addr alias void (%"class.blink::ScriptLoader"*), void (%"class.blink::ScriptLoader"*)* @_ZN5blink12ScriptLoaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoaderC2EPNS_17ScriptElementBaseENS_18CreateElementFlagsE(%"class.blink::ScriptLoader"* nocapture, %"class.blink::ScriptElementBase"*, %"class.blink::CreateElementFlags"* nocapture readonly byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::ScriptLoader"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5blink12ScriptLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [3 x i8*] }, { [7 x i8*], [3 x i8*] }* @_ZTVN5blink12ScriptLoaderE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ScriptElementBase"* %1, %"class.blink::ScriptElementBase"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.blink::WeakMember", %"class.blink::WeakMember"* %7, i64 0, i32 0, i32 0
  store %"class.blink::Document"* null, %"class.blink::Document"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 6
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 7
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 8
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 9
  store i32 4, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 10
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 11
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 12
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %2, i64 0, i32 3
  %19 = bitcast %"class.blink::PendingScript"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  %20 = load i8, i8* %18, align 8
  %21 = and i8 %20, 4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %3
  store i8 1, i8* %6, align 8
  br label %24

24:                                               ; preds = %3, %23
  %25 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %2, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %24
  store i8 1, i8* %9, align 8
  %30 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %2, i64 0, i32 2
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = ptrtoint %"class.blink::Document"* %31 to i64
  %33 = bitcast %"class.blink::WeakMember"* %7 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::Document"* %31 to i8*
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #13
  br label %39

39:                                               ; preds = %29, %36
  store i8 0, i8* %10, align 1
  br label %40

40:                                               ; preds = %24, %39
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink12ScriptLoaderD2Ev(%"class.blink::ScriptLoader"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink12ScriptLoaderD0Ev(%"class.blink::ScriptLoader"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12ScriptLoader5TraceEPNS_7VisitorE(%"class.blink::ScriptLoader"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #13, !range !2
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #13
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 4
  %75 = bitcast %"class.blink::WeakMember"* %74 to i64*
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = inttoptr i64 %76 to i8*
  %80 = bitcast %"class.blink::WeakMember"* %74 to i8*
  %81 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %82, i64 6
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %83, align 8
  tail call void %84(%"class.blink::Visitor"* %1, i8* nonnull %79, i8* %80, i8* %79, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8DocumentEEEvRKNS_14LivenessBrokerEPKv) #13
  br label %85

85:                                               ; preds = %73, %78
  %86 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14
  %87 = bitcast %"class.blink::Member.1"* %86 to i64*
  %88 = load atomic i64, i64* %87 monotonic, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = inttoptr i64 %88 to i8*
  %92 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %93 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, i64 5
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %94, align 8
  tail call void %95(%"class.blink::Visitor"* %1, i8* nonnull %91, i8* nonnull %91, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv) #13
  br label %96

96:                                               ; preds = %85, %90
  %97 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %98 = bitcast %"class.blink::Member.1"* %97 to i64*
  %99 = load atomic i64, i64* %98 monotonic, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %96
  %102 = inttoptr i64 %99 to i8*
  %103 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %104 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, i64 5
  %106 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %105, align 8
  tail call void %106(%"class.blink::Visitor"* %1, i8* nonnull %102, i8* nonnull %102, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv) #13
  br label %107

107:                                              ; preds = %96, %101
  %108 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 15
  %109 = bitcast %"class.blink::Member.10"* %108 to i64*
  %110 = load atomic i64, i64* %109 monotonic, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %107
  %113 = inttoptr i64 %110 to i8*
  %114 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %115 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, i64 5
  %117 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %116, align 8
  tail call void %117(%"class.blink::Visitor"* %1, i8* nonnull %113, i8* nonnull %113, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv) #13
  br label %118

118:                                              ; preds = %107, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::ScriptLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = bitcast i64* %2 to %"class.WTF::TextPosition"*
  %8 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  store i64 0, i64* %2, align 8
  %9 = call zeroext i1 @_ZN5blink12ScriptLoader13PrepareScriptERKN3WTF12TextPositionENS0_17LegacyTypeSupportE(%"class.blink::ScriptLoader"* %0, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %7, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12ScriptLoader13PrepareScriptERKN3WTF12TextPositionENS0_17LegacyTypeSupportE(%"class.blink::ScriptLoader"*, %"class.WTF::TextPosition"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.WTF::TextPosition"*
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::HashSet.140", align 8
  %17 = alloca %"class.blink::SubresourceIntegrity::ReportInfo", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca i32, align 4
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.blink::ScriptFetchOptions", align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca %"class.base::Location", align 8
  %26 = alloca %"class.base::OnceCallback.523", align 8
  %27 = alloca <2 x i64>, align 16
  %28 = bitcast <2 x i64>* %27 to { i64, i64 }*
  %29 = alloca %"class.blink::Persistent.1948", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.base::Location", align 8
  %33 = alloca %"class.base::OnceCallback.523", align 8
  %34 = alloca <2 x i64>, align 16
  %35 = bitcast <2 x i64>* %34 to { i64, i64 }*
  %36 = alloca %"class.blink::Persistent.1948", align 8
  %37 = alloca %"class.blink::KURL", align 8
  %38 = alloca %"class.base::Location", align 8
  %39 = alloca %"class.base::OnceCallback.523", align 8
  %40 = alloca <2 x i64>, align 16
  %41 = bitcast <2 x i64>* %40 to { i64, i64 }*
  %42 = alloca %"class.blink::Persistent.1948", align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %"class.base::Location", align 8
  %46 = alloca %"class.base::OnceCallback.523", align 8
  %47 = alloca <2 x i64>, align 16
  %48 = bitcast <2 x i64>* %47 to { i64, i64 }*
  %49 = alloca %"class.blink::Persistent.1948", align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %"class.WTF::TextEncoding", align 8
  %53 = alloca %"class.WTF::TextEncoding", align 8
  %54 = alloca %"class.WTF::String", align 8
  %55 = alloca %"class.blink::KURL", align 8
  %56 = alloca %"class.blink::ModuleScriptCreationParams", align 8
  %57 = alloca %"class.blink::ParkableString", align 8
  %58 = alloca %class.scoped_refptr, align 8
  %59 = alloca %"class.blink::KURL", align 8
  %60 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 3
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %1552

63:                                               ; preds = %3
  %64 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  %65 = load i8, i8* %64, align 8, !range !3
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  store i8 0, i8* %64, align 8
  %68 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %68, align 8
  %70 = bitcast %"class.blink::ScriptElementBase"* %69 to i1 (%"class.blink::ScriptElementBase"*)***
  %71 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %71, i64 1
  %73 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::ScriptElementBase"* %69) #13
  br i1 %74, label %77, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 6
  store i8 1, i8* %76, align 1
  br label %77

77:                                               ; preds = %63, %75, %67
  %78 = phi i1 [ true, %75 ], [ true, %67 ], [ false, %63 ]
  %79 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %81 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12ScriptLoader13GetScriptTextEv(%"class.blink::ScriptLoader"* %0)
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %84 = bitcast %"class.blink::ScriptElementBase"* %83 to i1 (%"class.blink::ScriptElementBase"*)***
  %85 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %85, i64 16
  %87 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::ScriptElementBase"* %83) #13
  br i1 %88, label %95, label %89

89:                                               ; preds = %77
  %90 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %90, label %1550, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %1533, label %95

95:                                               ; preds = %91, %77
  %96 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %97 = bitcast %"class.blink::ScriptElementBase"* %96 to i1 (%"class.blink::ScriptElementBase"*)***
  %98 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %98, i64 17
  %100 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::ScriptElementBase"* %96) #13
  br i1 %101, label %102, label %1533

102:                                              ; preds = %95
  %103 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %104 = bitcast %"class.blink::ScriptElementBase"* %103 to %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)***
  %105 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %105, i64 22
  %107 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %106, align 8
  %108 = tail call dereferenceable(2848) %"class.blink::Document"* %107(%"class.blink::ScriptElementBase"* %103) #13
  %109 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %108, i64 0, i32 12, i32 0, i32 0
  %110 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %109, align 8
  %111 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #13
  %112 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %113 = bitcast %"class.blink::ScriptElementBase"* %112 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %114 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %113, align 8
  %115 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %114, i64 11
  %116 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %115, align 8
  %117 = tail call %"class.WTF::StringImpl"* %116(%"class.blink::ScriptElementBase"* %112) #13
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #13
  %120 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %121 = bitcast %"class.blink::ScriptElementBase"* %120 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %122 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %121, align 8
  %123 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %122, i64 8
  %124 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %123, align 8
  %125 = tail call %"class.WTF::StringImpl"* %124(%"class.blink::ScriptElementBase"* %120) #13
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = call i32 @_ZN5blink12ScriptLoader22GetScriptTypeAtPrepareERKN3WTF6StringES4_NS0_17LegacyTypeSupportE(%"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %2)
  %128 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 9
  store i32 %127, i32* %128, align 4
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %102
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #13
  br label %144

144:                                              ; preds = %102, %140, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #13
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #13
  br label %160

160:                                              ; preds = %144, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #13
  %161 = load i32, i32* %128, align 4
  switch i32 %161, label %167 [
    i32 4, label %1533
    i32 3, label %162
  ]

162:                                              ; preds = %160
  %163 = icmp eq %"class.blink::LocalDOMWindow"* %110, null
  %164 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 1, i32 4
  %165 = select i1 %163, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %164
  %166 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase23SpeculationRulesEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %165) #13
  br i1 %166, label %167, label %1533

167:                                              ; preds = %162, %160
  br i1 %78, label %168, label %170

168:                                              ; preds = %167
  store i8 1, i8* %64, align 8
  %169 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 6
  store i8 0, i8* %169, align 1
  store i8 1, i8* %60, align 8
  br label %173

170:                                              ; preds = %167
  %171 = load i8, i8* %64, align 8
  store i8 1, i8* %60, align 8
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %185, label %173

173:                                              ; preds = %168, %170
  %174 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %175 = load %"class.blink::Document"*, %"class.blink::Document"** %174, align 8
  %176 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %177 = bitcast %"class.blink::ScriptElementBase"* %176 to %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)***
  %178 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*** %177, align 8
  %179 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %178, i64 22
  %180 = load %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::Document"* (%"class.blink::ScriptElementBase"*)** %179, align 8
  %181 = call dereferenceable(2848) %"class.blink::Document"* %180(%"class.blink::ScriptElementBase"* %176) #13
  %182 = icmp ne %"class.blink::Document"* %175, %181
  %183 = icmp eq %"class.blink::LocalDOMWindow"* %110, null
  %184 = or i1 %183, %182
  br i1 %184, label %1533, label %187

185:                                              ; preds = %170
  %186 = icmp eq %"class.blink::LocalDOMWindow"* %110, null
  br i1 %186, label %1533, label %187

187:                                              ; preds = %173, %185
  %188 = call zeroext i1 @_ZN5blink14LocalDOMWindow17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::LocalDOMWindow"* nonnull %110, i32 0) #13
  br i1 %188, label %189, label %1533

189:                                              ; preds = %187
  %190 = load i32, i32* %128, align 4
  %191 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %192 = bitcast %"class.blink::ScriptElementBase"* %191 to i1 (%"class.blink::ScriptElementBase"*)***
  %193 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %192, align 8
  %194 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %193, i64 9
  %195 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %194, align 8
  %196 = call zeroext i1 %195(%"class.blink::ScriptElementBase"* %191) #13
  %197 = icmp eq i32 %190, 0
  %198 = and i1 %197, %196
  br i1 %198, label %1533, label %199

199:                                              ; preds = %189
  %200 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %108, i64 0, i32 123
  %201 = load i32, i32* %200, align 4
  %202 = icmp ne i32 %201, 0
  %203 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #13
  %204 = bitcast %"class.WTF::TextPosition"* %1 to i64*
  %205 = load i64, i64* %204, align 4
  %206 = select i1 %202, i64 0, i64 %205
  store i64 %206, i64* %10, align 8
  %207 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %208 = bitcast %"class.blink::ScriptElementBase"* %207 to i1 (%"class.blink::ScriptElementBase"*)***
  %209 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %208, align 8
  %210 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %209, i64 16
  %211 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %210, align 8
  %212 = call zeroext i1 %211(%"class.blink::ScriptElementBase"* %207) #13
  br i1 %212, label %226, label %213

213:                                              ; preds = %199
  %214 = bitcast i64* %10 to %"class.WTF::OrdinalNumber"*
  %215 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %216 = bitcast %"class.blink::ScriptElementBase"* %215 to %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)***
  %217 = load %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)*** %216, align 8
  %218 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)** %217, i64 19
  %219 = load %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)** %218, align 8
  %220 = call dereferenceable(8) %"class.WTF::AtomicString"* %219(%"class.blink::ScriptElementBase"* %215) #13
  %221 = bitcast %"class.blink::ScriptElementBase"* %215 to i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)***
  %222 = load i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)**, i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)*** %221, align 8
  %223 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)*, i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)** %222, i64 21
  %224 = load i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)*, i1 (%"class.blink::ScriptElementBase"*, %"class.WTF::AtomicString"*, %"class.WTF::OrdinalNumber"*, %"class.WTF::String"*)** %223, align 8
  %225 = call zeroext i1 %224(%"class.blink::ScriptElementBase"* %215, %"class.WTF::AtomicString"* dereferenceable(8) %220, %"class.WTF::OrdinalNumber"* nonnull dereferenceable(4) %214, %"class.WTF::String"* nonnull dereferenceable(8) %7) #13
  br i1 %225, label %226, label %1531

226:                                              ; preds = %213, %199
  %227 = call zeroext i1 @_ZNK5blink12ScriptLoader25IsScriptForEventSupportedEv(%"class.blink::ScriptLoader"* %0)
  br i1 %227, label %228, label %1531

228:                                              ; preds = %226
  %229 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %230 = load i32, i32* %128, align 4
  %231 = load i8, i8* %64, align 8, !range !3
  %232 = bitcast %"class.blink::ScriptElementBase"* %229 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %233 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %232, align 8
  %234 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %233, i64 23
  %235 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %234, align 8
  %236 = call %"class.blink::ExecutionContext"* %235(%"class.blink::ScriptElementBase"* %229) #13
  %237 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %238 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* %236, i32 10, i32 1, %"class.WTF::String"* dereferenceable(8) %237, %"class.WTF::String"* dereferenceable(8) %237) #13
  br i1 %238, label %264, label %239

239:                                              ; preds = %228
  %240 = icmp eq i8 %231, 0
  %241 = add i32 %230, -1
  %242 = icmp ult i32 %241, 3
  %243 = or i1 %242, %240
  br i1 %243, label %264, label %244

244:                                              ; preds = %239
  %245 = bitcast %"class.blink::ScriptElementBase"* %229 to i1 (%"class.blink::ScriptElementBase"*)***
  %246 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %245, align 8
  %247 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %246, i64 16
  %248 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %247, align 8
  %249 = call zeroext i1 %248(%"class.blink::ScriptElementBase"* %229) #13
  br i1 %249, label %250, label %260

250:                                              ; preds = %244
  %251 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %245, align 8
  %252 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %251, i64 4
  %253 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %252, align 8
  %254 = call zeroext i1 %253(%"class.blink::ScriptElementBase"* %229) #13
  br i1 %254, label %264, label %255

255:                                              ; preds = %250
  %256 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %245, align 8
  %257 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %256, i64 1
  %258 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %257, align 8
  %259 = call zeroext i1 %258(%"class.blink::ScriptElementBase"* %229) #13
  br i1 %259, label %264, label %260

260:                                              ; preds = %255, %244
  %261 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %261) #13
  store i32 1, i32* %12, align 4
  %262 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262) #13
  store i32 3, i32* %13, align 4
  %263 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA60_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %13, [60 x i8]* nonnull dereferenceable(60) @.str.3) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %108, %"class.blink::ConsoleMessage"* %263, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %261) #13
  br label %1531

264:                                              ; preds = %255, %250, %239, %228
  %265 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %265) #13
  %266 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %267 = bitcast %"class.blink::ScriptElementBase"* %266 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %268 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %267, align 8
  %269 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %268, i64 3
  %270 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %269, align 8
  %271 = call %"class.WTF::StringImpl"* %270(%"class.blink::ScriptElementBase"* %266) #13
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %271, %"class.WTF::StringImpl"** %272, align 8
  %273 = call i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %14) #13
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %264
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #13
  br label %289

289:                                              ; preds = %264, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %265) #13
  %290 = icmp ult i32 %273, 3
  br i1 %290, label %291, label %295

291:                                              ; preds = %289
  %292 = sext i32 %273 to i64
  %293 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5blink12ScriptLoader27ModuleScriptCredentialsModeENS_25CrossOriginAttributeValueE, i64 0, i64 %292
  %294 = load i32, i32* %293, align 4
  br label %295

295:                                              ; preds = %289, %291
  %296 = phi i32 [ %294, %291 ], [ 0, %289 ]
  %297 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %298 = bitcast %"class.blink::ScriptElementBase"* %297 to %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)***
  %299 = load %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)*** %298, align 8
  %300 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)** %299, i64 19
  %301 = load %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::AtomicString"* (%"class.blink::ScriptElementBase"*)** %300, align 8
  %302 = call dereferenceable(8) %"class.WTF::AtomicString"* %301(%"class.blink::ScriptElementBase"* %297) #13
  %303 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %302, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %303, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %323, label %306

306:                                              ; preds = %295
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %323

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #13
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !4

320:                                              ; preds = %311
  call void @llvm.trap() #13
  unreachable

321:                                              ; preds = %311
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %312, align 4
  br label %323

323:                                              ; preds = %295, %306, %321
  %324 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324) #13
  %325 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %325, align 8
  %326 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %327 = bitcast %"class.blink::ScriptElementBase"* %326 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %328 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %327, align 8
  %329 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %328, i64 7
  %330 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %329, align 8
  %331 = call %"class.WTF::StringImpl"* %330(%"class.blink::ScriptElementBase"* %326) #13
  store %"class.WTF::StringImpl"* %331, %"class.WTF::StringImpl"** %325, align 8
  %332 = bitcast %"class.WTF::HashSet.140"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #13
  %333 = getelementptr inbounds %"class.WTF::HashSet.140", %"class.WTF::HashSet.140"* %16, i64 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.WTF::HashSet.140", %"class.WTF::HashSet.140"* %16, i64 0, i32 0, i32 1
  %335 = getelementptr inbounds %"class.WTF::HashSet.140", %"class.WTF::HashSet.140"* %16, i64 0, i32 0, i32 2
  %336 = bitcast %"class.WTF::HashSet.140"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %336, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 20, i1 false) #13
  %337 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %337, label %408, label %338

338:                                              ; preds = %323
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 1
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %408, label %342

342:                                              ; preds = %338
  %343 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %344 = bitcast %"class.blink::ScriptElementBase"* %343 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %345 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %344, align 8
  %346 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %345, i64 23
  %347 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %346, align 8
  %348 = call %"class.blink::ExecutionContext"* %347(%"class.blink::ScriptElementBase"* %343) #13
  %349 = call i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %348) #13
  %350 = bitcast %"class.blink::SubresourceIntegrity::ReportInfo"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %350) #13
  %351 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %352 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %17, i64 0, i32 0, i32 0, i32 0, i32 2
  %353 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %17, i64 0, i32 1, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %350, i8 0, i64 32, i1 false) #13
  %354 = call i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEEPNS0_10ReportInfoE(%"class.WTF::String"* nonnull dereferenceable(8) %15, i32 %349, %"class.WTF::HashSet.140"* nonnull dereferenceable(24) %16, %"class.blink::SubresourceIntegrity::ReportInfo"* nonnull %17) #13
  %355 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %356 = bitcast %"class.blink::ScriptElementBase"* %355 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %357 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %356, align 8
  %358 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %357, i64 23
  %359 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %358, align 8
  %360 = call %"class.blink::ExecutionContext"* %359(%"class.blink::ScriptElementBase"* %355) #13
  call void @_ZN5blink26SubresourceIntegrityHelper8DoReportERNS_16ExecutionContextERKNS_20SubresourceIntegrity10ReportInfoE(%"class.blink::ExecutionContext"* dereferenceable(376) %360, %"class.blink::SubresourceIntegrity::ReportInfo"* nonnull dereferenceable(32) %17) #13
  %361 = getelementptr inbounds %"class.blink::SubresourceIntegrity::ReportInfo", %"class.blink::SubresourceIntegrity::ReportInfo"* %17, i64 0, i32 1
  %362 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %361, i64 0, i32 0, i32 0, i32 0
  %363 = load %"class.WTF::String"*, %"class.WTF::String"** %362, align 8
  %364 = icmp eq %"class.WTF::String"* %363, null
  br i1 %364, label %398, label %365, !prof !5

365:                                              ; preds = %342
  %366 = bitcast %"class.WTF::String"* %363 to i8*
  %367 = load i32, i32* %353, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %396, label %369, !prof !4

369:                                              ; preds = %365
  %370 = zext i32 %367 to i64
  %371 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %363, i64 %370
  br label %372

372:                                              ; preds = %390, %369
  %373 = phi %"class.WTF::String"* [ %391, %390 ], [ %363, %369 ]
  %374 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %373, i64 0, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #13
  br label %390

390:                                              ; preds = %389, %386, %372
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %373, i64 1
  %392 = icmp eq %"class.WTF::String"* %391, %371
  br i1 %392, label %393, label %372

393:                                              ; preds = %390
  store i32 0, i32* %353, align 4
  %394 = bitcast %"class.WTF::Vector.29"* %361 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %365
  %397 = phi i8* [ %395, %393 ], [ %366, %365 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %362, align 8
  br label %398

398:                                              ; preds = %396, %342
  %399 = load i32*, i32** %351, align 8
  %400 = icmp eq i32* %399, null
  %401 = bitcast i32* %399 to i8*
  br i1 %400, label %407, label %402, !prof !5

402:                                              ; preds = %398
  %403 = load i32, i32* %352, align 4
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %406, label %405, !prof !4

405:                                              ; preds = %402
  store i32 0, i32* %352, align 4
  br label %406

406:                                              ; preds = %405, %402
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %401) #13
  store i32* null, i32** %351, align 8
  br label %407

407:                                              ; preds = %398, %406
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %350) #13
  br label %408

408:                                              ; preds = %323, %407, %338
  %409 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %409) #13
  %410 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %410, align 8
  %411 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %412 = bitcast %"class.blink::ScriptElementBase"* %411 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %413 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %412, align 8
  %414 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %413, i64 12
  %415 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %414, align 8
  %416 = call %"class.WTF::StringImpl"* %415(%"class.blink::ScriptElementBase"* %411) #13
  store %"class.WTF::StringImpl"* %416, %"class.WTF::StringImpl"** %410, align 8
  %417 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %417) #13
  store i32 1, i32* %19, align 4
  %418 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %418, label %425, label %419

419:                                              ; preds = %408
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %425, label %423

423:                                              ; preds = %419
  %424 = call zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %18, i32 1, i32* nonnull %19) #13
  br label %425

425:                                              ; preds = %408, %423, %419
  %426 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #13
  %427 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %427, align 8
  %428 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %429 = bitcast %"class.blink::ScriptElementBase"* %428 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %430 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %429, align 8
  %431 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %430, i64 13
  %432 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %431, align 8
  %433 = call %"class.WTF::StringImpl"* %432(%"class.blink::ScriptElementBase"* %428) #13
  store %"class.WTF::StringImpl"* %433, %"class.WTF::StringImpl"** %427, align 8
  %434 = call i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %20) #13
  %435 = load i8, i8* %64, align 8, !range !3
  %436 = xor i8 %435, 1
  %437 = load i32, i32* %128, align 4
  %438 = icmp eq i32 %437, 1
  br i1 %438, label %439, label %445

439:                                              ; preds = %425
  %440 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 1, i32 3
  %441 = bitcast %"class.blink::UseCounter"* %440 to void (%"class.blink::UseCounter"*, i32)***
  %442 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %441, align 8
  %443 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %442, i64 3
  %444 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %443, align 8
  call void %444(%"class.blink::UseCounter"* %440, i32 2062) #13
  br label %445

445:                                              ; preds = %439, %425
  %446 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 6
  %447 = load i8, i8* %446, align 1, !range !3
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %449, label %453

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 7
  %451 = load i8, i8* %450, align 2, !range !3
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %454, label %453

453:                                              ; preds = %449, %445
  br label %454

454:                                              ; preds = %449, %453
  %455 = phi i8 [ 2, %453 ], [ 1, %449 ]
  %456 = bitcast %"class.blink::ScriptFetchOptions"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %456) #13
  %457 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 1
  %458 = bitcast %"class.WTF::HashSet.140"* %457 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %458, i8 -86, i64 56, i1 false)
  %459 = load i32, i32* %19, align 4
  %460 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %460, align 8
  br i1 %305, label %478, label %461

461:                                              ; preds = %454
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %478

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = zext i32 %468 to i33
  %470 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %469, i33 1) #13
  %471 = extractvalue { i33, i1 } %470, 1
  %472 = extractvalue { i33, i1 } %470, 0
  %473 = icmp slt i33 %472, 0
  %474 = or i1 %471, %473
  br i1 %474, label %475, label %476, !prof !4

475:                                              ; preds = %466
  call void @llvm.trap() #13
  unreachable

476:                                              ; preds = %466
  %477 = trunc i33 %472 to i32
  store i32 %477, i32* %467, align 4
  br label %478

478:                                              ; preds = %476, %461, %454
  %479 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 1, i32 0
  %480 = bitcast %"class.WTF::HashTable.141"* %479 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %480, i8 0, i64 20, i1 false) #13
  %481 = load i32, i32* %335, align 4
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %530, label %483

483:                                              ; preds = %478
  call void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.141"* %479, i32 %481) #13
  %484 = load i32, i32* %335, align 4
  %485 = icmp eq i32 %484, 0
  %486 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %333, align 8
  %487 = load i32, i32* %334, align 8
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %486, i64 %488
  br i1 %485, label %530, label %490

490:                                              ; preds = %483
  %491 = icmp eq i32 %487, 0
  br i1 %491, label %506, label %492

492:                                              ; preds = %490, %503
  %493 = phi %"struct.std::__1::pair"* [ %504, %503 ], [ %486, %490 ]
  %494 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %493, i64 0, i32 0, i32 0, i32 0
  %495 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %494, align 8
  %496 = icmp eq %"class.WTF::StringImpl"* %495, null
  %497 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %493, i64 0, i32 1
  %498 = load i8, i8* %497, align 1
  %499 = icmp eq i8 %498, 0
  %500 = and i1 %496, %499
  %501 = icmp eq %"class.WTF::StringImpl"* %495, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %502 = or i1 %501, %500
  br i1 %502, label %503, label %506

503:                                              ; preds = %492
  %504 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %493, i64 1
  %505 = icmp eq %"struct.std::__1::pair"* %504, %489
  br i1 %505, label %530, label %492

506:                                              ; preds = %492, %490
  %507 = phi %"struct.std::__1::pair"* [ %486, %490 ], [ %493, %492 ]
  %508 = icmp eq %"struct.std::__1::pair"* %507, %489
  br i1 %508, label %530, label %509

509:                                              ; preds = %506, %528
  %510 = phi %"struct.std::__1::pair"* [ %515, %528 ], [ %507, %506 ]
  %511 = call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.141"* %479, %"struct.std::__1::pair"* dereferenceable(16) %510, %"struct.std::__1::pair"* dereferenceable(16) %510) #13
  %512 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %510, i64 1
  %513 = icmp eq %"struct.std::__1::pair"* %512, %489
  br i1 %513, label %530, label %514

514:                                              ; preds = %509, %525
  %515 = phi %"struct.std::__1::pair"* [ %526, %525 ], [ %512, %509 ]
  %516 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %515, i64 0, i32 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %517, null
  %519 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %515, i64 0, i32 1
  %520 = load i8, i8* %519, align 1
  %521 = icmp eq i8 %520, 0
  %522 = and i1 %518, %521
  %523 = icmp eq %"class.WTF::StringImpl"* %517, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %524 = or i1 %523, %522
  br i1 %524, label %525, label %528

525:                                              ; preds = %514
  %526 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %515, i64 1
  %527 = icmp eq %"struct.std::__1::pair"* %526, %489
  br i1 %527, label %530, label %514

528:                                              ; preds = %514
  %529 = icmp eq %"struct.std::__1::pair"* %515, %489
  br i1 %529, label %530, label %509

530:                                              ; preds = %503, %509, %528, %525, %478, %483, %506
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %532 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %531, %"class.WTF::StringImpl"** %532, align 8
  %533 = icmp eq %"class.WTF::StringImpl"* %531, null
  br i1 %533, label %551, label %534

534:                                              ; preds = %530
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %551

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  %542 = zext i32 %541 to i33
  %543 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %542, i33 1) #13
  %544 = extractvalue { i33, i1 } %543, 1
  %545 = extractvalue { i33, i1 } %543, 0
  %546 = icmp slt i33 %545, 0
  %547 = or i1 %544, %546
  br i1 %547, label %548, label %549, !prof !4

548:                                              ; preds = %539
  call void @llvm.trap() #13
  unreachable

549:                                              ; preds = %539
  %550 = trunc i33 %545 to i32
  store i32 %550, i32* %540, align 4
  br label %551

551:                                              ; preds = %530, %534, %549
  %552 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 3
  store i8 %436, i8* %552, align 8
  %553 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 5
  store i32 %296, i32* %553, align 4
  %554 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 6
  store i32 %459, i32* %554, align 8
  %555 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 7
  store i32 %434, i32* %555, align 4
  %556 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 8
  store i8 %455, i8* %556, align 8
  %557 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %21, i64 0, i32 9, i32 0
  store i8 0, i8* %557, align 1
  %558 = call %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"* nonnull %110) #13
  %559 = load i32, i32* %128, align 4
  %560 = icmp eq i32 %559, 2
  br i1 %560, label %561, label %657

561:                                              ; preds = %551
  %562 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 0, i32 1, i32 0, i32 0
  %563 = bitcast %"class.blink::Frame"** %562 to %"class.blink::LocalFrame"**
  %564 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %563, align 8
  %565 = call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %564) #13
  %566 = call %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"* %565) #13
  %567 = bitcast %"class.blink::Modulator"* %566 to i32 (%"class.blink::Modulator"*)***
  %568 = load i32 (%"class.blink::Modulator"*)**, i32 (%"class.blink::Modulator"*)*** %567, align 8
  %569 = getelementptr inbounds i32 (%"class.blink::Modulator"*)*, i32 (%"class.blink::Modulator"*)** %568, i64 19
  %570 = load i32 (%"class.blink::Modulator"*)*, i32 (%"class.blink::Modulator"*)** %569, align 8
  %571 = call i32 %570(%"class.blink::Modulator"* %566) #13
  switch i32 %571, label %657 [
    i32 2, label %572
    i32 1, label %572
    i32 0, label %652
  ]

572:                                              ; preds = %561, %561
  %573 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %573) #13
  store i32 1, i32* %22, align 4
  %574 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %574) #13
  store i32 3, i32* %23, align 4
  %575 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %575) #13
  %576 = icmp eq i32 %571, 2
  %577 = select i1 %576, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0)
  store i8* %577, i8** %24, align 8
  %578 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEPKcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %22, i32* nonnull dereferenceable(4) %23, i8** nonnull dereferenceable(8) %24) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %108, %"class.blink::ConsoleMessage"* %578, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %575) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %574) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %573) #13
  %579 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %108, i8 zeroext 1) #13
  %580 = bitcast %"class.base::SingleThreadTaskRunner"* %579 to %"class.base::TaskRunner"*
  %581 = bitcast %"class.base::Location"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %581) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 524) #13
  %582 = bitcast <2 x i64>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %582) #13
  store <2 x i64> <i64 209, i64 0>, <2 x i64>* %27, align 16
  %583 = bitcast %"class.blink::Persistent.1948"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %583) #13
  %584 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %585 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %29, i64 0, i32 0
  %586 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %29, i64 0, i32 0, i32 0
  store %"class.blink::ScriptElementBase"* %584, %"class.blink::ScriptElementBase"** %586, align 8, !alias.scope !6
  %587 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %29, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %587, align 8, !alias.scope !6
  %588 = ptrtoint %"class.blink::ScriptElementBase"* %584 to i64
  switch i64 %588, label %589 [
    i64 0, label %615
    i64 -1, label %615
  ]

589:                                              ; preds = %572
  %590 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %591 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %590, i64 0, i32 1
  %592 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %591) #13, !noalias !6
  %593 = icmp eq i8* %592, null
  br i1 %593, label %594, label %596, !prof !4

594:                                              ; preds = %589
  %595 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %591, i8* %595) #13
  br label %596

596:                                              ; preds = %594, %589
  %597 = phi i8* [ %595, %594 ], [ %592, %589 ]
  %598 = bitcast i8* %597 to %"class.blink::ThreadState"**
  %599 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %598, align 8, !noalias !6
  %600 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %599, i64 0, i32 3, i32 0, i32 0, i32 0
  %601 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %600, align 8, !noalias !6
  %602 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %601, i64 0, i32 0, i32 0
  %603 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %602, align 8, !noalias !6
  %604 = icmp eq %"class.blink::PersistentNode"* %603, null
  br i1 %604, label %605, label %608, !prof !4

605:                                              ; preds = %596
  %606 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %601, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %606) #13
  %607 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %602, align 8
  br label %608

608:                                              ; preds = %605, %596
  %609 = phi %"class.blink::PersistentNode"* [ %607, %605 ], [ %603, %596 ]
  %610 = bitcast %"class.blink::PersistentNode"* %609 to i64*
  %611 = load i64, i64* %610, align 8, !noalias !6
  %612 = bitcast %"class.blink::PersistentRegion"* %601 to i64*
  store i64 %611, i64* %612, align 8, !noalias !6
  %613 = bitcast %"class.blink::PersistentNode"* %609 to %"class.blink::PersistentBase.1949"**
  store %"class.blink::PersistentBase.1949"* %585, %"class.blink::PersistentBase.1949"** %613, align 8, !noalias !6
  %614 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %609, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %614, align 8
  store %"class.blink::PersistentNode"* %609, %"class.blink::PersistentNode"** %587, align 8, !alias.scope !6
  br label %615

615:                                              ; preds = %572, %572, %608
  %616 = call i8* @_Znwm(i64 64) #14, !noalias !9
  %617 = bitcast i8* %616 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %617, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %28, %"class.blink::Persistent.1948"* nonnull dereferenceable(16) %29) #13, !noalias !9
  %618 = bitcast %"class.base::OnceCallback.523"* %26 to i8**
  store i8* %616, i8** %618, align 8, !alias.scope !9
  %619 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %580, %"class.base::Location"* nonnull dereferenceable(32) %25, %"class.base::OnceCallback.523"* nonnull %26) #13
  %620 = getelementptr inbounds %"class.base::OnceCallback.523", %"class.base::OnceCallback.523"* %26, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %620) #13
  %621 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %587, align 8
  %622 = icmp eq %"class.blink::PersistentNode"* %621, null
  br i1 %622, label %642, label %623

623:                                              ; preds = %615
  %624 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %625 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %624, i64 0, i32 1
  %626 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %625) #13
  %627 = icmp eq i8* %626, null
  br i1 %627, label %628, label %630, !prof !4

628:                                              ; preds = %623
  %629 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %625, i8* %629) #13
  br label %630

630:                                              ; preds = %628, %623
  %631 = phi i8* [ %629, %628 ], [ %626, %623 ]
  %632 = bitcast i8* %631 to %"class.blink::ThreadState"**
  %633 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %632, align 8
  %634 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %633, i64 0, i32 3, i32 0, i32 0, i32 0
  %635 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %634, align 8
  %636 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %587, align 8
  %637 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %635, i64 0, i32 0, i32 0
  %638 = bitcast %"class.blink::PersistentRegion"* %635 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = bitcast %"class.blink::PersistentNode"* %636 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %636, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %641, align 8
  store %"class.blink::PersistentNode"* %636, %"class.blink::PersistentNode"** %637, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %587, align 8
  br label %642

642:                                              ; preds = %615, %630
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %583) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %582) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %581) #13
  %643 = icmp eq %"class.base::SingleThreadTaskRunner"* %579, null
  br i1 %643, label %1434, label %644

644:                                              ; preds = %642
  %645 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %579, i64 0, i32 0, i32 0, i32 1
  %646 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %645, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = atomicrmw sub i32* %646, i32 1 acq_rel
  %648 = icmp eq i32 %647, 1
  br i1 %648, label %649, label %1434

649:                                              ; preds = %644
  %650 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %645, i64 -2
  %651 = bitcast %"class.base::RefCountedThreadSafe.515"* %650 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %651) #13
  br label %1434

652:                                              ; preds = %561
  %653 = bitcast %"class.blink::Modulator"* %566 to void (%"class.blink::Modulator"*, i32)***
  %654 = load void (%"class.blink::Modulator"*, i32)**, void (%"class.blink::Modulator"*, i32)*** %653, align 8
  %655 = getelementptr inbounds void (%"class.blink::Modulator"*, i32)*, void (%"class.blink::Modulator"*, i32)** %654, i64 20
  %656 = load void (%"class.blink::Modulator"*, i32)*, void (%"class.blink::Modulator"*, i32)** %655, align 8
  call void %656(%"class.blink::Modulator"* %566, i32 1) #13
  br label %657

657:                                              ; preds = %561, %652, %551
  %658 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %659 = bitcast %"class.blink::ScriptElementBase"* %658 to i1 (%"class.blink::ScriptElementBase"*)***
  %660 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %659, align 8
  %661 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %660, i64 16
  %662 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %661, align 8
  %663 = call zeroext i1 %662(%"class.blink::ScriptElementBase"* %658) #13
  br i1 %663, label %664, label %1068

664:                                              ; preds = %657
  %665 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %665) #13
  %666 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %666, align 8
  %667 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %667) #13
  %668 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %669 = bitcast %"class.blink::ScriptElementBase"* %668 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %670 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %669, align 8
  %671 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %670, i64 10
  %672 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %671, align 8
  %673 = call %"class.WTF::StringImpl"* %672(%"class.blink::ScriptElementBase"* %668) #13
  %674 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %673, %"class.WTF::StringImpl"** %674, align 8
  %675 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %31) #13
  store %"class.WTF::StringImpl"* %675, %"class.WTF::StringImpl"** %666, align 8
  %676 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %674, align 8
  %677 = icmp eq %"class.WTF::StringImpl"* %676, null
  br i1 %677, label %693, label %678

678:                                              ; preds = %664
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = load atomic i32, i32* %679 monotonic, align 4
  %681 = and i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %676, i64 0, i32 0
  %684 = load i32, i32* %683, align 4
  br i1 %682, label %685, label %687

685:                                              ; preds = %678
  %686 = add i32 %684, -1
  store i32 %686, i32* %683, align 4
  br label %687

687:                                              ; preds = %685, %678
  %688 = phi i32 [ %686, %685 ], [ %684, %678 ]
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %691

690:                                              ; preds = %687
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %676) #13
  br label %691

691:                                              ; preds = %690, %687
  %692 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %666, align 8
  br label %693

693:                                              ; preds = %691, %664
  %694 = phi %"class.WTF::StringImpl"* [ %692, %691 ], [ %675, %664 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %667) #13
  %695 = icmp eq %"class.WTF::StringImpl"* %694, null
  br i1 %695, label %700, label %696

696:                                              ; preds = %693
  %697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 1
  %698 = load i32, i32* %697, align 4
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %774

700:                                              ; preds = %693, %696
  %701 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %108, i8 zeroext 1) #13
  %702 = bitcast %"class.base::SingleThreadTaskRunner"* %701 to %"class.base::TaskRunner"*
  %703 = bitcast %"class.base::Location"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %703) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 555) #13
  %704 = bitcast <2 x i64>* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %704) #13
  store <2 x i64> <i64 209, i64 0>, <2 x i64>* %34, align 16
  %705 = bitcast %"class.blink::Persistent.1948"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %705) #13
  %706 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %707 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %36, i64 0, i32 0
  %708 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %36, i64 0, i32 0, i32 0
  store %"class.blink::ScriptElementBase"* %706, %"class.blink::ScriptElementBase"** %708, align 8, !alias.scope !16
  %709 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %36, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %709, align 8, !alias.scope !16
  %710 = ptrtoint %"class.blink::ScriptElementBase"* %706 to i64
  switch i64 %710, label %711 [
    i64 0, label %737
    i64 -1, label %737
  ]

711:                                              ; preds = %700
  %712 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !16
  %713 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %712, i64 0, i32 1
  %714 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %713) #13, !noalias !16
  %715 = icmp eq i8* %714, null
  br i1 %715, label %716, label %718, !prof !4

716:                                              ; preds = %711
  %717 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %713, i8* %717) #13
  br label %718

718:                                              ; preds = %716, %711
  %719 = phi i8* [ %717, %716 ], [ %714, %711 ]
  %720 = bitcast i8* %719 to %"class.blink::ThreadState"**
  %721 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %720, align 8, !noalias !16
  %722 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %721, i64 0, i32 3, i32 0, i32 0, i32 0
  %723 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %722, align 8, !noalias !16
  %724 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %723, i64 0, i32 0, i32 0
  %725 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %724, align 8, !noalias !16
  %726 = icmp eq %"class.blink::PersistentNode"* %725, null
  br i1 %726, label %727, label %730, !prof !4

727:                                              ; preds = %718
  %728 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %723, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %728) #13
  %729 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %724, align 8
  br label %730

730:                                              ; preds = %727, %718
  %731 = phi %"class.blink::PersistentNode"* [ %729, %727 ], [ %725, %718 ]
  %732 = bitcast %"class.blink::PersistentNode"* %731 to i64*
  %733 = load i64, i64* %732, align 8, !noalias !16
  %734 = bitcast %"class.blink::PersistentRegion"* %723 to i64*
  store i64 %733, i64* %734, align 8, !noalias !16
  %735 = bitcast %"class.blink::PersistentNode"* %731 to %"class.blink::PersistentBase.1949"**
  store %"class.blink::PersistentBase.1949"* %707, %"class.blink::PersistentBase.1949"** %735, align 8, !noalias !16
  %736 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %731, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %736, align 8
  store %"class.blink::PersistentNode"* %731, %"class.blink::PersistentNode"** %709, align 8, !alias.scope !16
  br label %737

737:                                              ; preds = %700, %700, %730
  %738 = call i8* @_Znwm(i64 64) #14, !noalias !19
  %739 = bitcast i8* %738 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %739, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %35, %"class.blink::Persistent.1948"* nonnull dereferenceable(16) %36) #13, !noalias !19
  %740 = bitcast %"class.base::OnceCallback.523"* %33 to i8**
  store i8* %738, i8** %740, align 8, !alias.scope !19
  %741 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %702, %"class.base::Location"* nonnull dereferenceable(32) %32, %"class.base::OnceCallback.523"* nonnull %33) #13
  %742 = getelementptr inbounds %"class.base::OnceCallback.523", %"class.base::OnceCallback.523"* %33, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %742) #13
  %743 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %709, align 8
  %744 = icmp eq %"class.blink::PersistentNode"* %743, null
  br i1 %744, label %764, label %745

745:                                              ; preds = %737
  %746 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %747 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %746, i64 0, i32 1
  %748 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %747) #13
  %749 = icmp eq i8* %748, null
  br i1 %749, label %750, label %752, !prof !4

750:                                              ; preds = %745
  %751 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %747, i8* %751) #13
  br label %752

752:                                              ; preds = %750, %745
  %753 = phi i8* [ %751, %750 ], [ %748, %745 ]
  %754 = bitcast i8* %753 to %"class.blink::ThreadState"**
  %755 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %754, align 8
  %756 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %755, i64 0, i32 3, i32 0, i32 0, i32 0
  %757 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %756, align 8
  %758 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %709, align 8
  %759 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %757, i64 0, i32 0, i32 0
  %760 = bitcast %"class.blink::PersistentRegion"* %757 to i64*
  %761 = load i64, i64* %760, align 8
  %762 = bitcast %"class.blink::PersistentNode"* %758 to i64*
  store i64 %761, i64* %762, align 8
  %763 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %758, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %763, align 8
  store %"class.blink::PersistentNode"* %758, %"class.blink::PersistentNode"** %759, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %709, align 8
  br label %764

764:                                              ; preds = %737, %752
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %705) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %704) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %703) #13
  %765 = icmp eq %"class.base::SingleThreadTaskRunner"* %701, null
  br i1 %765, label %1049, label %766

766:                                              ; preds = %764
  %767 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %701, i64 0, i32 0, i32 0, i32 1
  %768 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %767, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %769 = atomicrmw sub i32* %768, i32 1 acq_rel
  %770 = icmp eq i32 %769, 1
  br i1 %770, label %771, label %1049

771:                                              ; preds = %766
  %772 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %767, i64 -2
  %773 = bitcast %"class.base::RefCountedThreadSafe.515"* %772 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %773) #13
  br label %1049

774:                                              ; preds = %696
  %775 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 10
  store i8 1, i8* %775, align 8
  %776 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %776) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %776, i8 -86, i64 112, i1 false)
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %37, %"class.blink::Document"* %108, %"class.WTF::String"* nonnull dereferenceable(8) %30) #13
  %777 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %37) #13
  br i1 %777, label %852, label %778

778:                                              ; preds = %774
  %779 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %108, i8 zeroext 1) #13
  %780 = bitcast %"class.base::SingleThreadTaskRunner"* %779 to %"class.base::TaskRunner"*
  %781 = bitcast %"class.base::Location"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %781) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 573) #13
  %782 = bitcast <2 x i64>* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %782) #13
  store <2 x i64> <i64 209, i64 0>, <2 x i64>* %40, align 16
  %783 = bitcast %"class.blink::Persistent.1948"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %783) #13
  %784 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %785 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %42, i64 0, i32 0
  %786 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %42, i64 0, i32 0, i32 0
  store %"class.blink::ScriptElementBase"* %784, %"class.blink::ScriptElementBase"** %786, align 8, !alias.scope !26
  %787 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %42, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %787, align 8, !alias.scope !26
  %788 = ptrtoint %"class.blink::ScriptElementBase"* %784 to i64
  switch i64 %788, label %789 [
    i64 0, label %815
    i64 -1, label %815
  ]

789:                                              ; preds = %778
  %790 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !26
  %791 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %790, i64 0, i32 1
  %792 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %791) #13, !noalias !26
  %793 = icmp eq i8* %792, null
  br i1 %793, label %794, label %796, !prof !4

794:                                              ; preds = %789
  %795 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %791, i8* %795) #13
  br label %796

796:                                              ; preds = %794, %789
  %797 = phi i8* [ %795, %794 ], [ %792, %789 ]
  %798 = bitcast i8* %797 to %"class.blink::ThreadState"**
  %799 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %798, align 8, !noalias !26
  %800 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %799, i64 0, i32 3, i32 0, i32 0, i32 0
  %801 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %800, align 8, !noalias !26
  %802 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %801, i64 0, i32 0, i32 0
  %803 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %802, align 8, !noalias !26
  %804 = icmp eq %"class.blink::PersistentNode"* %803, null
  br i1 %804, label %805, label %808, !prof !4

805:                                              ; preds = %796
  %806 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %801, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %806) #13
  %807 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %802, align 8
  br label %808

808:                                              ; preds = %805, %796
  %809 = phi %"class.blink::PersistentNode"* [ %807, %805 ], [ %803, %796 ]
  %810 = bitcast %"class.blink::PersistentNode"* %809 to i64*
  %811 = load i64, i64* %810, align 8, !noalias !26
  %812 = bitcast %"class.blink::PersistentRegion"* %801 to i64*
  store i64 %811, i64* %812, align 8, !noalias !26
  %813 = bitcast %"class.blink::PersistentNode"* %809 to %"class.blink::PersistentBase.1949"**
  store %"class.blink::PersistentBase.1949"* %785, %"class.blink::PersistentBase.1949"** %813, align 8, !noalias !26
  %814 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %809, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %814, align 8
  store %"class.blink::PersistentNode"* %809, %"class.blink::PersistentNode"** %787, align 8, !alias.scope !26
  br label %815

815:                                              ; preds = %778, %778, %808
  %816 = call i8* @_Znwm(i64 64) #14, !noalias !29
  %817 = bitcast i8* %816 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %817, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %41, %"class.blink::Persistent.1948"* nonnull dereferenceable(16) %42) #13, !noalias !29
  %818 = bitcast %"class.base::OnceCallback.523"* %39 to i8**
  store i8* %816, i8** %818, align 8, !alias.scope !29
  %819 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %780, %"class.base::Location"* nonnull dereferenceable(32) %38, %"class.base::OnceCallback.523"* nonnull %39) #13
  %820 = getelementptr inbounds %"class.base::OnceCallback.523", %"class.base::OnceCallback.523"* %39, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %820) #13
  %821 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %787, align 8
  %822 = icmp eq %"class.blink::PersistentNode"* %821, null
  br i1 %822, label %842, label %823

823:                                              ; preds = %815
  %824 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %825 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %824, i64 0, i32 1
  %826 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %825) #13
  %827 = icmp eq i8* %826, null
  br i1 %827, label %828, label %830, !prof !4

828:                                              ; preds = %823
  %829 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %825, i8* %829) #13
  br label %830

830:                                              ; preds = %828, %823
  %831 = phi i8* [ %829, %828 ], [ %826, %823 ]
  %832 = bitcast i8* %831 to %"class.blink::ThreadState"**
  %833 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %832, align 8
  %834 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %833, i64 0, i32 3, i32 0, i32 0, i32 0
  %835 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %834, align 8
  %836 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %787, align 8
  %837 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %835, i64 0, i32 0, i32 0
  %838 = bitcast %"class.blink::PersistentRegion"* %835 to i64*
  %839 = load i64, i64* %838, align 8
  %840 = bitcast %"class.blink::PersistentNode"* %836 to i64*
  store i64 %839, i64* %840, align 8
  %841 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %836, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %841, align 8
  store %"class.blink::PersistentNode"* %836, %"class.blink::PersistentNode"** %837, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %787, align 8
  br label %842

842:                                              ; preds = %815, %830
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %783) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %782) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %781) #13
  %843 = icmp eq %"class.base::SingleThreadTaskRunner"* %779, null
  br i1 %843, label %1047, label %844

844:                                              ; preds = %842
  %845 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %779, i64 0, i32 0, i32 0, i32 1
  %846 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %845, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %847 = atomicrmw sub i32* %846, i32 1 acq_rel
  %848 = icmp eq i32 %847, 1
  br i1 %848, label %849, label %1047

849:                                              ; preds = %844
  %850 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %845, i64 -2
  %851 = bitcast %"class.base::RefCountedThreadSafe.515"* %850 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %851) #13
  br label %1047

852:                                              ; preds = %774
  %853 = load i32, i32* %128, align 4
  switch i32 %853, label %1046 [
    i32 4, label %1047
    i32 2, label %854
    i32 3, label %931
    i32 0, label %935
    i32 1, label %1040
  ]

854:                                              ; preds = %852
  %855 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %855) #13
  store i32 1, i32* %43, align 4
  %856 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %856) #13
  store i32 3, i32* %44, align 4
  %857 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA44_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %43, i32* nonnull dereferenceable(4) %44, [44 x i8]* nonnull dereferenceable(44) @.str.8) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %108, %"class.blink::ConsoleMessage"* %857, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %856) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %855) #13
  %858 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %108, i8 zeroext 1) #13
  %859 = bitcast %"class.base::SingleThreadTaskRunner"* %858 to %"class.base::TaskRunner"*
  %860 = bitcast %"class.base::Location"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %860) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 592) #13
  %861 = bitcast <2 x i64>* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %861) #13
  store <2 x i64> <i64 209, i64 0>, <2 x i64>* %47, align 16
  %862 = bitcast %"class.blink::Persistent.1948"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %862) #13
  %863 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %864 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %49, i64 0, i32 0
  %865 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %49, i64 0, i32 0, i32 0
  store %"class.blink::ScriptElementBase"* %863, %"class.blink::ScriptElementBase"** %865, align 8, !alias.scope !36
  %866 = getelementptr inbounds %"class.blink::Persistent.1948", %"class.blink::Persistent.1948"* %49, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %866, align 8, !alias.scope !36
  %867 = ptrtoint %"class.blink::ScriptElementBase"* %863 to i64
  switch i64 %867, label %868 [
    i64 0, label %894
    i64 -1, label %894
  ]

868:                                              ; preds = %854
  %869 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !36
  %870 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %869, i64 0, i32 1
  %871 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %870) #13, !noalias !36
  %872 = icmp eq i8* %871, null
  br i1 %872, label %873, label %875, !prof !4

873:                                              ; preds = %868
  %874 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %870, i8* %874) #13
  br label %875

875:                                              ; preds = %873, %868
  %876 = phi i8* [ %874, %873 ], [ %871, %868 ]
  %877 = bitcast i8* %876 to %"class.blink::ThreadState"**
  %878 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %877, align 8, !noalias !36
  %879 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %878, i64 0, i32 3, i32 0, i32 0, i32 0
  %880 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %879, align 8, !noalias !36
  %881 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %880, i64 0, i32 0, i32 0
  %882 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %881, align 8, !noalias !36
  %883 = icmp eq %"class.blink::PersistentNode"* %882, null
  br i1 %883, label %884, label %887, !prof !4

884:                                              ; preds = %875
  %885 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %880, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %885) #13
  %886 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %881, align 8
  br label %887

887:                                              ; preds = %884, %875
  %888 = phi %"class.blink::PersistentNode"* [ %886, %884 ], [ %882, %875 ]
  %889 = bitcast %"class.blink::PersistentNode"* %888 to i64*
  %890 = load i64, i64* %889, align 8, !noalias !36
  %891 = bitcast %"class.blink::PersistentRegion"* %880 to i64*
  store i64 %890, i64* %891, align 8, !noalias !36
  %892 = bitcast %"class.blink::PersistentNode"* %888 to %"class.blink::PersistentBase.1949"**
  store %"class.blink::PersistentBase.1949"* %864, %"class.blink::PersistentBase.1949"** %892, align 8, !noalias !36
  %893 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %888, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %893, align 8
  store %"class.blink::PersistentNode"* %888, %"class.blink::PersistentNode"** %866, align 8, !alias.scope !36
  br label %894

894:                                              ; preds = %854, %854, %887
  %895 = call i8* @_Znwm(i64 64) #14, !noalias !39
  %896 = bitcast i8* %895 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %896, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %48, %"class.blink::Persistent.1948"* nonnull dereferenceable(16) %49) #13, !noalias !39
  %897 = bitcast %"class.base::OnceCallback.523"* %46 to i8**
  store i8* %895, i8** %897, align 8, !alias.scope !39
  %898 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %859, %"class.base::Location"* nonnull dereferenceable(32) %45, %"class.base::OnceCallback.523"* nonnull %46) #13
  %899 = getelementptr inbounds %"class.base::OnceCallback.523", %"class.base::OnceCallback.523"* %46, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %899) #13
  %900 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %866, align 8
  %901 = icmp eq %"class.blink::PersistentNode"* %900, null
  br i1 %901, label %921, label %902

902:                                              ; preds = %894
  %903 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %904 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %903, i64 0, i32 1
  %905 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %904) #13
  %906 = icmp eq i8* %905, null
  br i1 %906, label %907, label %909, !prof !4

907:                                              ; preds = %902
  %908 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %904, i8* %908) #13
  br label %909

909:                                              ; preds = %907, %902
  %910 = phi i8* [ %908, %907 ], [ %905, %902 ]
  %911 = bitcast i8* %910 to %"class.blink::ThreadState"**
  %912 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %911, align 8
  %913 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %912, i64 0, i32 3, i32 0, i32 0, i32 0
  %914 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %913, align 8
  %915 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %866, align 8
  %916 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %914, i64 0, i32 0, i32 0
  %917 = bitcast %"class.blink::PersistentRegion"* %914 to i64*
  %918 = load i64, i64* %917, align 8
  %919 = bitcast %"class.blink::PersistentNode"* %915 to i64*
  store i64 %918, i64* %919, align 8
  %920 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %915, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %920, align 8
  store %"class.blink::PersistentNode"* %915, %"class.blink::PersistentNode"** %916, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %866, align 8
  br label %921

921:                                              ; preds = %894, %909
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %862) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %861) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %860) #13
  %922 = icmp eq %"class.base::SingleThreadTaskRunner"* %858, null
  br i1 %922, label %1047, label %923

923:                                              ; preds = %921
  %924 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %858, i64 0, i32 0, i32 0, i32 1
  %925 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %924, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %926 = atomicrmw sub i32* %925, i32 1 acq_rel
  %927 = icmp eq i32 %926, 1
  br i1 %927, label %928, label %1047

928:                                              ; preds = %923
  %929 = getelementptr inbounds %"class.base::RefCountedThreadSafe.515", %"class.base::RefCountedThreadSafe.515"* %924, i64 -2
  %930 = bitcast %"class.base::RefCountedThreadSafe.515"* %929 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %930) #13
  br label %1047

931:                                              ; preds = %852
  %932 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %932) #13
  store i32 1, i32* %50, align 4
  %933 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %933) #13
  store i32 3, i32* %51, align 4
  %934 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA50_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %50, i32* nonnull dereferenceable(4) %51, [50 x i8]* nonnull dereferenceable(50) @.str.9) #13
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %108, %"class.blink::ConsoleMessage"* %934, i1 zeroext false) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %933) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %932) #13
  br label %1047

935:                                              ; preds = %852
  %936 = bitcast %"class.WTF::TextEncoding"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %936) #13
  %937 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %52, i64 0, i32 0
  store i8* null, i8** %937, align 8
  %938 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %939 = bitcast %"class.blink::ScriptElementBase"* %938 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %940 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %939, align 8
  %941 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %940, i64 2
  %942 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %941, align 8
  %943 = call %"class.WTF::StringImpl"* %942(%"class.blink::ScriptElementBase"* %938) #13
  %944 = icmp eq %"class.WTF::StringImpl"* %943, null
  br i1 %944, label %991, label %945

945:                                              ; preds = %935
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 1
  %947 = load i32, i32* %946, align 4
  %948 = icmp eq i32 %947, 0
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %950 = load atomic i32, i32* %949 monotonic, align 4
  %951 = and i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %943, i64 0, i32 0
  %954 = load i32, i32* %953, align 4
  br i1 %952, label %955, label %957

955:                                              ; preds = %945
  %956 = add i32 %954, -1
  store i32 %956, i32* %953, align 4
  br label %957

957:                                              ; preds = %955, %945
  %958 = phi i32 [ %956, %955 ], [ %954, %945 ]
  %959 = icmp eq i32 %958, 0
  br i1 %959, label %960, label %961

960:                                              ; preds = %957
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %943) #13
  br i1 %948, label %991, label %962

961:                                              ; preds = %957
  br i1 %948, label %991, label %962

962:                                              ; preds = %960, %961
  %963 = bitcast %"class.WTF::TextEncoding"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %963) #13
  %964 = bitcast %"class.WTF::String"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %964) #13
  %965 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %966 = bitcast %"class.blink::ScriptElementBase"* %965 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %967 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %966, align 8
  %968 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %967, i64 2
  %969 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %968, align 8
  %970 = call %"class.WTF::StringImpl"* %969(%"class.blink::ScriptElementBase"* %965) #13
  %971 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %970, %"class.WTF::StringImpl"** %971, align 8
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %53, %"class.WTF::String"* nonnull dereferenceable(8) %54) #13
  %972 = bitcast %"class.WTF::TextEncoding"* %53 to i64*
  %973 = bitcast %"class.WTF::TextEncoding"* %52 to i64*
  %974 = load i64, i64* %972, align 8
  store i64 %974, i64* %973, align 8
  %975 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %971, align 8
  %976 = icmp eq %"class.WTF::StringImpl"* %975, null
  br i1 %976, label %990, label %977

977:                                              ; preds = %962
  %978 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %975, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %979 = load atomic i32, i32* %978 monotonic, align 4
  %980 = and i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %975, i64 0, i32 0
  %983 = load i32, i32* %982, align 4
  br i1 %981, label %984, label %986

984:                                              ; preds = %977
  %985 = add i32 %983, -1
  store i32 %985, i32* %982, align 4
  br label %986

986:                                              ; preds = %984, %977
  %987 = phi i32 [ %985, %984 ], [ %983, %977 ]
  %988 = icmp eq i32 %987, 0
  br i1 %988, label %989, label %990

989:                                              ; preds = %986
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %975) #13
  br label %990

990:                                              ; preds = %962, %986, %989
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %964) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %963) #13
  br label %996

991:                                              ; preds = %935, %960, %961
  %992 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %108, i64 0, i32 95, i32 0
  %993 = bitcast %"class.WTF::TextEncoding"* %992 to i64*
  %994 = bitcast %"class.WTF::TextEncoding"* %52 to i64*
  %995 = load i64, i64* %993, align 8
  store i64 %995, i64* %994, align 8
  br label %996

996:                                              ; preds = %991, %990
  %997 = load i8, i8* %64, align 8, !range !3
  %998 = icmp eq i8 %997, 0
  br i1 %998, label %1014, label %999

999:                                              ; preds = %996
  %1000 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %1001 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %1000, align 8
  %1002 = bitcast %"class.blink::ScriptElementBase"* %1001 to i1 (%"class.blink::ScriptElementBase"*)***
  %1003 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1002, align 8
  %1004 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1003, i64 1
  %1005 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1004, align 8
  %1006 = call zeroext i1 %1005(%"class.blink::ScriptElementBase"* %1001) #13
  br i1 %1006, label %1014, label %1007

1007:                                             ; preds = %999
  %1008 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %1000, align 8
  %1009 = bitcast %"class.blink::ScriptElementBase"* %1008 to i1 (%"class.blink::ScriptElementBase"*)***
  %1010 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1009, align 8
  %1011 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1010, i64 4
  %1012 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1011, align 8
  %1013 = call zeroext i1 %1012(%"class.blink::ScriptElementBase"* %1008) #13
  br i1 %1013, label %1014, label %1015

1014:                                             ; preds = %1007, %999, %996
  br label %1015

1015:                                             ; preds = %1014, %1007
  %1016 = phi i32 [ 1, %1014 ], [ 0, %1007 ]
  %1017 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %1018 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %1017, align 8
  %1019 = call %"class.blink::ClassicPendingScript"* @_ZN5blink20ClassicPendingScript5FetchERKNS_4KURLERNS_8DocumentERKNS_18ScriptFetchOptionsENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingEPNS_17ScriptElementBaseENS_15FetchParameters11DeferOptionE(%"class.blink::KURL"* nonnull dereferenceable(112) %37, %"class.blink::Document"* dereferenceable(2848) %108, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %21, i32 %273, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %52, %"class.blink::ScriptElementBase"* %1018, i32 %1016) #13
  %1020 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %1021 = ptrtoint %"class.blink::ClassicPendingScript"* %1019 to i64
  %1022 = bitcast %"class.blink::Member.1"* %1020 to i64*
  store atomic i64 %1021, i64* %1022 monotonic, align 8
  %1023 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1024 = icmp eq i32 %1023, 0
  br i1 %1024, label %1028, label %1025

1025:                                             ; preds = %1015
  %1026 = bitcast %"class.blink::ClassicPendingScript"* %1019 to i8*
  %1027 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1026) #13
  br label %1028

1028:                                             ; preds = %1025, %1015
  %1029 = getelementptr inbounds %"class.blink::ClassicPendingScript", %"class.blink::ClassicPendingScript"* %1019, i64 0, i32 2, i32 3, i32 0, i32 0
  %1030 = load %"class.blink::Resource"*, %"class.blink::Resource"** %1029, align 8
  %1031 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 15
  %1032 = ptrtoint %"class.blink::Resource"* %1030 to i64
  %1033 = bitcast %"class.blink::Member.10"* %1031 to i64*
  store atomic i64 %1032, i64* %1033 monotonic, align 8
  %1034 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1039, label %1036

1036:                                             ; preds = %1028
  %1037 = bitcast %"class.blink::Resource"* %1030 to i8*
  %1038 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1037) #13
  br label %1039

1039:                                             ; preds = %1028, %1036
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %936) #13
  br label %1046

1040:                                             ; preds = %852
  %1041 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 0, i32 1, i32 0, i32 0
  %1042 = bitcast %"class.blink::Frame"** %1041 to %"class.blink::LocalFrame"**
  %1043 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %1042, align 8
  %1044 = call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %1043) #13
  %1045 = call %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"* %1044) #13
  call void @_ZN5blink12ScriptLoader21FetchModuleScriptTreeERKNS_4KURLEPNS_15ResourceFetcherEPNS_9ModulatorERKNS_18ScriptFetchOptionsE(%"class.blink::ScriptLoader"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %37, %"class.blink::ResourceFetcher"* %558, %"class.blink::Modulator"* %1045, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %21)
  br label %1046

1046:                                             ; preds = %852, %1040, %1039
  br label %1047

1047:                                             ; preds = %928, %923, %921, %849, %844, %842, %852, %1046, %931
  %1048 = phi i32 [ 0, %1046 ], [ 1, %931 ], [ 1, %852 ], [ 1, %842 ], [ 1, %844 ], [ 1, %849 ], [ 1, %921 ], [ 1, %923 ], [ 1, %928 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %776) #13
  br label %1049

1049:                                             ; preds = %771, %766, %764, %1047
  %1050 = phi i32 [ %1048, %1047 ], [ 1, %764 ], [ 1, %766 ], [ 1, %771 ]
  %1051 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %666, align 8
  %1052 = icmp eq %"class.WTF::StringImpl"* %1051, null
  br i1 %1052, label %1066, label %1053

1053:                                             ; preds = %1049
  %1054 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1051, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1055 = load atomic i32, i32* %1054 monotonic, align 4
  %1056 = and i32 %1055, 2
  %1057 = icmp eq i32 %1056, 0
  %1058 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1051, i64 0, i32 0
  %1059 = load i32, i32* %1058, align 4
  br i1 %1057, label %1060, label %1062

1060:                                             ; preds = %1053
  %1061 = add i32 %1059, -1
  store i32 %1061, i32* %1058, align 4
  br label %1062

1062:                                             ; preds = %1060, %1053
  %1063 = phi i32 [ %1061, %1060 ], [ %1059, %1053 ]
  %1064 = icmp eq i32 %1063, 0
  br i1 %1064, label %1065, label %1066

1065:                                             ; preds = %1062
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1051) #13
  br label %1066

1066:                                             ; preds = %1049, %1062, %1065
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %665) #13
  %1067 = icmp eq i32 %1050, 0
  br i1 %1067, label %1068, label %1434

1068:                                             ; preds = %1066, %657
  %1069 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1070 = bitcast %"class.blink::ScriptElementBase"* %1069 to i1 (%"class.blink::ScriptElementBase"*)***
  %1071 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1070, align 8
  %1072 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1071, i64 16
  %1073 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1072, align 8
  %1074 = call zeroext i1 %1073(%"class.blink::ScriptElementBase"* %1069) #13
  br i1 %1074, label %1205, label %1075

1075:                                             ; preds = %1068
  %1076 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %55, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1076) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1076, i8 -86, i64 112, i1 false)
  %1077 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %108) #13
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %55, %"class.blink::KURL"* dereferenceable(112) %1077) #13
  %1078 = load i32, i32* %128, align 4
  switch i32 %1078, label %1204 [
    i32 4, label %1203
    i32 2, label %1079
    i32 3, label %1087
    i32 0, label %1092
    i32 1, label %1107
  ]

1079:                                             ; preds = %1075
  %1080 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 1, i32 3
  %1081 = bitcast %"class.blink::UseCounter"* %1080 to void (%"class.blink::UseCounter"*, i32)***
  %1082 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %1081, align 8
  %1083 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1082, i64 3
  %1084 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %1083, align 8
  call void %1084(%"class.blink::UseCounter"* %1080, i32 2831) #13
  %1085 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1086 = call %"class.blink::PendingImportMap"* @_ZN5blink16PendingImportMap12CreateInlineERNS_17ScriptElementBaseERKN3WTF6StringERKNS_4KURLE(%"class.blink::ScriptElementBase"* dereferenceable(8) %1085, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::KURL"* nonnull dereferenceable(112) %55) #13
  call void @_ZNK5blink16PendingImportMap17RegisterImportMapEv(%"class.blink::PendingImportMap"* %1086) #13
  br label %1203

1087:                                             ; preds = %1075
  %1088 = call %"class.blink::SpeculationRuleSet"* @_ZN5blink18SpeculationRuleSet11ParseInlineERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::KURL"* nonnull dereferenceable(112) %55) #13
  %1089 = icmp eq %"class.blink::SpeculationRuleSet"* %1088, null
  br i1 %1089, label %1203, label %1090

1090:                                             ; preds = %1087
  %1091 = call dereferenceable(48) %"class.blink::DocumentSpeculationRules"* @_ZN5blink24DocumentSpeculationRules4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %108) #13
  call void @_ZN5blink24DocumentSpeculationRules10AddRuleSetEPNS_18SpeculationRuleSetE(%"class.blink::DocumentSpeculationRules"* %1091, %"class.blink::SpeculationRuleSet"* nonnull %1088) #13
  br label %1203

1092:                                             ; preds = %1075
  %1093 = load i8, i8* %64, align 8, !range !3
  %1094 = icmp eq i8 %1093, 0
  %1095 = select i1 %202, i32 3, i32 2
  %1096 = select i1 %1094, i32 4, i32 %1095
  %1097 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1098 = call %"class.blink::ClassicPendingScript"* @_ZN5blink20ClassicPendingScript12CreateInlineEPNS_17ScriptElementBaseERKN3WTF12TextPositionERKNS_4KURLERKNS3_6StringENS_24ScriptSourceLocationTypeERKNS_18ScriptFetchOptionsE(%"class.blink::ScriptElementBase"* %1097, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %11, %"class.blink::KURL"* nonnull dereferenceable(112) %55, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 %1096, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %21) #13
  %1099 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %1100 = ptrtoint %"class.blink::ClassicPendingScript"* %1098 to i64
  %1101 = bitcast %"class.blink::Member.1"* %1099 to i64*
  store atomic i64 %1100, i64* %1101 monotonic, align 8
  %1102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1204, label %1104

1104:                                             ; preds = %1092
  %1105 = bitcast %"class.blink::ClassicPendingScript"* %1098 to i8*
  %1106 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1105) #13
  br label %1204

1107:                                             ; preds = %1075
  %1108 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %108, i64 0, i32 19
  %1109 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %110, i64 0, i32 0, i32 1, i32 0, i32 0
  %1110 = bitcast %"class.blink::Frame"** %1109 to %"class.blink::LocalFrame"**
  %1111 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %1110, align 8
  %1112 = call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %1111) #13
  %1113 = call %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"* %1112) #13
  %1114 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %1114) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1114, i8 -86, i64 296, i1 false)
  %1115 = bitcast %"class.blink::ParkableString"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1115) #13
  %1116 = bitcast %class.scoped_refptr* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1116) #13
  %1117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %1118 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %58, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1117, %"class.WTF::StringImpl"** %1118, align 8
  %1119 = icmp eq %"class.WTF::StringImpl"* %1117, null
  br i1 %1119, label %1137, label %1120

1120:                                             ; preds = %1107
  %1121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1122 = load atomic i32, i32* %1121 monotonic, align 4
  %1123 = and i32 %1122, 2
  %1124 = icmp eq i32 %1123, 0
  br i1 %1124, label %1125, label %1137

1125:                                             ; preds = %1120
  %1126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1117, i64 0, i32 0
  %1127 = load i32, i32* %1126, align 4
  %1128 = zext i32 %1127 to i33
  %1129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1128, i33 1) #13
  %1130 = extractvalue { i33, i1 } %1129, 1
  %1131 = extractvalue { i33, i1 } %1129, 0
  %1132 = icmp slt i33 %1131, 0
  %1133 = or i1 %1130, %1132
  br i1 %1133, label %1134, label %1135, !prof !4

1134:                                             ; preds = %1125
  call void @llvm.trap() #13
  unreachable

1135:                                             ; preds = %1125
  %1136 = trunc i33 %1131 to i32
  store i32 %1136, i32* %1126, align 4
  br label %1137

1137:                                             ; preds = %1107, %1120, %1135
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %57, %class.scoped_refptr* nonnull dereferenceable(8) %58) #13
  %1138 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %1138, %"class.blink::KURL"* dereferenceable(112) %1108) #13
  %1139 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %1139, %"class.blink::KURL"* nonnull dereferenceable(112) %55) #13
  %1140 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 2
  store i32 2, i32* %1140, align 8
  %1141 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 3
  store i32 1, i32* %1141, align 4
  %1142 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 4
  store i8 0, i8* %1142, align 8
  %1143 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %57, i64 0, i32 0, i32 0
  %1144 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %1143, align 8
  %1145 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* %1144, %"class.blink::ParkableStringImpl"** %1145, align 8
  %1146 = icmp eq %"class.blink::ParkableStringImpl"* %1144, null
  br i1 %1146, label %1149, label %1147

1147:                                             ; preds = %1137
  %1148 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %1144, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1148) #13
  br label %1149

1149:                                             ; preds = %1137, %1147
  %1150 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 7, i32 0, i32 0
  %1151 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %56, i64 0, i32 10
  %1152 = bitcast %"class.WTF::StringImpl"** %1150 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1152, i8 0, i64 40, i1 false)
  store i32 14, i32* %1151, align 8
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %57) #13
  %1153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1118, align 8
  %1154 = icmp eq %"class.WTF::StringImpl"* %1153, null
  br i1 %1154, label %1168, label %1155

1155:                                             ; preds = %1149
  %1156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1157 = load atomic i32, i32* %1156 monotonic, align 4
  %1158 = and i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1153, i64 0, i32 0
  %1161 = load i32, i32* %1160, align 4
  br i1 %1159, label %1162, label %1164

1162:                                             ; preds = %1155
  %1163 = add i32 %1161, -1
  store i32 %1163, i32* %1160, align 4
  br label %1164

1164:                                             ; preds = %1162, %1155
  %1165 = phi i32 [ %1163, %1162 ], [ %1161, %1155 ]
  %1166 = icmp eq i32 %1165, 0
  br i1 %1166, label %1167, label %1168

1167:                                             ; preds = %1164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1153) #13
  br label %1168

1168:                                             ; preds = %1149, %1164, %1167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1116) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1115) #13
  %1169 = call %"class.blink::JSModuleScript"* @_ZN5blink14JSModuleScript6CreateERKNS_26ModuleScriptCreationParamsEPNS_9ModulatorERKNS_18ScriptFetchOptionsERKN3WTF12TextPositionE(%"class.blink::ModuleScriptCreationParams"* nonnull dereferenceable(296) %56, %"class.blink::Modulator"* %1113, %"class.blink::ScriptFetchOptions"* nonnull dereferenceable(64) %21, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %11) #13
  %1170 = icmp eq %"class.blink::JSModuleScript"* %1169, null
  br i1 %1170, label %1202, label %1171

1171:                                             ; preds = %1168
  %1172 = getelementptr inbounds %"class.blink::JSModuleScript", %"class.blink::JSModuleScript"* %1169, i64 0, i32 0
  %1173 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16ModuleTreeClientEEEPhm(i64 32) #13
  %1174 = bitcast i8* %1173 to %"class.blink::ModulePendingScriptTreeClient"*
  call void @_ZN5blink29ModulePendingScriptTreeClientC1Ev(%"class.blink::ModulePendingScriptTreeClient"* %1174) #13
  %1175 = getelementptr inbounds i8, i8* %1173, i64 -4
  %1176 = bitcast i8* %1175 to i16*
  %1177 = load atomic i16, i16* %1176 monotonic, align 2
  %1178 = or i16 %1177, 1
  store atomic i16 %1178, i16* %1176 release, align 2
  %1179 = bitcast i8* %1173 to %"class.blink::ModuleTreeClient"*
  %1180 = bitcast %"class.blink::Modulator"* %1113 to void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)***
  %1181 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)**, void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)*** %1180, align 8
  %1182 = getelementptr inbounds void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)** %1181, i64 11
  %1183 = load void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::ModuleScript"*, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ModuleTreeClient"*)** %1182, align 8
  call void %1183(%"class.blink::Modulator"* %1113, %"class.blink::ModuleScript"* %1172, %"class.blink::ResourceFetcher"* %558, i32 23, i32 13, %"class.blink::ModuleTreeClient"* %1179) #13
  %1184 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 10
  %1185 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13PendingScriptEEEPhm(i64 128) #13
  %1186 = bitcast i8* %1185 to %"class.blink::ModulePendingScript"*
  %1187 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1188 = load i8, i8* %1184, align 1, !range !3
  %1189 = icmp ne i8 %1188, 0
  call void @_ZN5blink19ModulePendingScriptC1EPNS_17ScriptElementBaseEPNS_29ModulePendingScriptTreeClientEb(%"class.blink::ModulePendingScript"* %1186, %"class.blink::ScriptElementBase"* %1187, %"class.blink::ModulePendingScriptTreeClient"* %1174, i1 zeroext %1189) #13
  %1190 = getelementptr inbounds i8, i8* %1185, i64 -4
  %1191 = bitcast i8* %1190 to i16*
  %1192 = load atomic i16, i16* %1191 monotonic, align 2
  %1193 = or i16 %1192, 1
  store atomic i16 %1193, i16* %1191 release, align 2
  %1194 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %1195 = ptrtoint i8* %1185 to i64
  %1196 = bitcast %"class.blink::Member.1"* %1194 to i64*
  store atomic i64 %1195, i64* %1196 monotonic, align 8
  %1197 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1201, label %1199

1199:                                             ; preds = %1171
  %1200 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1185) #13
  br label %1201

1201:                                             ; preds = %1171, %1199
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %1114) #13
  br label %1204

1202:                                             ; preds = %1168
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* nonnull %56) #13
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %1114) #13
  br label %1203

1203:                                             ; preds = %1202, %1090, %1087, %1075, %1079
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1076) #13
  br label %1434

1204:                                             ; preds = %1104, %1092, %1075, %1201
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1076) #13
  br label %1205

1205:                                             ; preds = %1204, %1068
  %1206 = load i32, i32* %128, align 4
  %1207 = icmp eq i32 %1206, 0
  br i1 %1207, label %1208, label %1234

1208:                                             ; preds = %1205
  %1209 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1210 = bitcast %"class.blink::ScriptElementBase"* %1209 to i1 (%"class.blink::ScriptElementBase"*)***
  %1211 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1210, align 8
  %1212 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1211, i64 16
  %1213 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1212, align 8
  %1214 = call zeroext i1 %1213(%"class.blink::ScriptElementBase"* %1209) #13
  br i1 %1214, label %1215, label %1232

1215:                                             ; preds = %1208
  %1216 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1217 = bitcast %"class.blink::ScriptElementBase"* %1216 to i1 (%"class.blink::ScriptElementBase"*)***
  %1218 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1217, align 8
  %1219 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1218, i64 4
  %1220 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1219, align 8
  %1221 = call zeroext i1 %1220(%"class.blink::ScriptElementBase"* %1216) #13
  br i1 %1221, label %1222, label %1232

1222:                                             ; preds = %1215
  %1223 = load i8, i8* %64, align 8, !range !3
  %1224 = icmp eq i8 %1223, 0
  br i1 %1224, label %1232, label %1225

1225:                                             ; preds = %1222
  %1226 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1227 = bitcast %"class.blink::ScriptElementBase"* %1226 to i1 (%"class.blink::ScriptElementBase"*)***
  %1228 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1227, align 8
  %1229 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1228, i64 1
  %1230 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1229, align 8
  %1231 = call zeroext i1 %1230(%"class.blink::ScriptElementBase"* %1226) #13
  br i1 %1231, label %1232, label %1249

1232:                                             ; preds = %1208, %1215, %1225, %1222
  %1233 = load i32, i32* %128, align 4
  br label %1234

1234:                                             ; preds = %1232, %1205
  %1235 = phi i32 [ %1233, %1232 ], [ %1206, %1205 ]
  %1236 = icmp eq i32 %1235, 1
  br i1 %1236, label %1237, label %1252

1237:                                             ; preds = %1234
  %1238 = load i8, i8* %64, align 8, !range !3
  %1239 = icmp eq i8 %1238, 0
  br i1 %1239, label %1299, label %1240

1240:                                             ; preds = %1237
  %1241 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1242 = bitcast %"class.blink::ScriptElementBase"* %1241 to i1 (%"class.blink::ScriptElementBase"*)***
  %1243 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1242, align 8
  %1244 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1243, i64 1
  %1245 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1244, align 8
  %1246 = call zeroext i1 %1245(%"class.blink::ScriptElementBase"* %1241) #13
  br i1 %1246, label %1247, label %1249

1247:                                             ; preds = %1240
  %1248 = load i32, i32* %128, align 4
  br label %1252

1249:                                             ; preds = %1240, %1225
  %1250 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 12
  store i8 1, i8* %1250, align 2
  %1251 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %1251, align 1
  br label %1434

1252:                                             ; preds = %1247, %1234
  %1253 = phi i32 [ %1248, %1247 ], [ %1235, %1234 ]
  %1254 = icmp eq i32 %1253, 0
  br i1 %1254, label %1255, label %1296

1255:                                             ; preds = %1252
  %1256 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1257 = bitcast %"class.blink::ScriptElementBase"* %1256 to i1 (%"class.blink::ScriptElementBase"*)***
  %1258 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1257, align 8
  %1259 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1258, i64 16
  %1260 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1259, align 8
  %1261 = call zeroext i1 %1260(%"class.blink::ScriptElementBase"* %1256) #13
  br i1 %1261, label %1262, label %1274

1262:                                             ; preds = %1255
  %1263 = load i8, i8* %64, align 8, !range !3
  %1264 = icmp eq i8 %1263, 0
  br i1 %1264, label %1274, label %1265

1265:                                             ; preds = %1262
  %1266 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1267 = bitcast %"class.blink::ScriptElementBase"* %1266 to i1 (%"class.blink::ScriptElementBase"*)***
  %1268 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1267, align 8
  %1269 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1268, i64 1
  %1270 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1269, align 8
  %1271 = call zeroext i1 %1270(%"class.blink::ScriptElementBase"* %1266) #13
  br i1 %1271, label %1274, label %1272

1272:                                             ; preds = %1265
  %1273 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %1273, align 1
  br label %1434

1274:                                             ; preds = %1262, %1265, %1255
  %1275 = load i32, i32* %128, align 4
  %1276 = icmp eq i32 %1275, 0
  br i1 %1276, label %1277, label %1296

1277:                                             ; preds = %1274
  %1278 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1279 = bitcast %"class.blink::ScriptElementBase"* %1278 to i1 (%"class.blink::ScriptElementBase"*)***
  %1280 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1279, align 8
  %1281 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1280, i64 16
  %1282 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1281, align 8
  %1283 = call zeroext i1 %1282(%"class.blink::ScriptElementBase"* %1278) #13
  br i1 %1283, label %1284, label %1294

1284:                                             ; preds = %1277
  %1285 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1286 = bitcast %"class.blink::ScriptElementBase"* %1285 to i1 (%"class.blink::ScriptElementBase"*)***
  %1287 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1286, align 8
  %1288 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1287, i64 1
  %1289 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1288, align 8
  %1290 = call zeroext i1 %1289(%"class.blink::ScriptElementBase"* %1285) #13
  br i1 %1290, label %1294, label %1291

1291:                                             ; preds = %1284
  %1292 = load i8, i8* %446, align 1, !range !3
  %1293 = icmp eq i8 %1292, 0
  br i1 %1293, label %1309, label %1294

1294:                                             ; preds = %1277, %1284, %1291
  %1295 = load i32, i32* %128, align 4
  br label %1296

1296:                                             ; preds = %1252, %1294, %1274
  %1297 = phi i32 [ %1295, %1294 ], [ %1275, %1274 ], [ %1253, %1252 ]
  %1298 = icmp eq i32 %1297, 1
  br i1 %1298, label %1299, label %1342

1299:                                             ; preds = %1237, %1296
  %1300 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1301 = bitcast %"class.blink::ScriptElementBase"* %1300 to i1 (%"class.blink::ScriptElementBase"*)***
  %1302 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1301, align 8
  %1303 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1302, i64 1
  %1304 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1303, align 8
  %1305 = call zeroext i1 %1304(%"class.blink::ScriptElementBase"* %1300) #13
  br i1 %1305, label %1342, label %1306

1306:                                             ; preds = %1299
  %1307 = load i8, i8* %446, align 1, !range !3
  %1308 = icmp eq i8 %1307, 0
  br i1 %1308, label %1309, label %1342

1309:                                             ; preds = %1291, %1306
  %1310 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %1311 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %1310, i64 0, i32 0, i32 0
  %1312 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1311, align 8
  %1313 = icmp eq %"class.blink::PendingScript"* %1312, null
  br i1 %1313, label %1314, label %1318

1314:                                             ; preds = %1309
  %1315 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1315) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 991, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0)) #13
  %1316 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1315) #13
  %1317 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1311, align 8
  br label %1318

1318:                                             ; preds = %1309, %1314
  %1319 = phi %"class.blink::PendingScript"* [ %1312, %1309 ], [ %1317, %1314 ]
  %1320 = bitcast %"class.blink::Member.1"* %1310 to i64*
  store atomic i64 0, i64* %1320 monotonic, align 8
  %1321 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %1319, i64 0, i32 4
  store i32 4, i32* %1321, align 8
  %1322 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14
  %1323 = ptrtoint %"class.blink::PendingScript"* %1319 to i64
  %1324 = bitcast %"class.blink::Member.1"* %1322 to i64*
  store atomic i64 %1323, i64* %1324 monotonic, align 8
  %1325 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1326 = icmp eq i32 %1325, 0
  br i1 %1326, label %1330, label %1327

1327:                                             ; preds = %1318
  %1328 = bitcast %"class.blink::PendingScript"* %1319 to i8*
  %1329 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1328) #13
  br label %1330

1330:                                             ; preds = %1318, %1327
  %1331 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %110) #13
  %1332 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1331, i64 0, i32 88, i32 0, i32 0
  %1333 = load %"class.blink::ScriptRunner"*, %"class.blink::ScriptRunner"** %1332, align 8
  %1334 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %1322, i64 0, i32 0, i32 0
  %1335 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1334, align 8
  call void @_ZN5blink12ScriptRunner23QueueScriptForExecutionEPNS_13PendingScriptE(%"class.blink::ScriptRunner"* %1333, %"class.blink::PendingScript"* %1335) #13
  %1336 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1334, align 8
  %1337 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 0
  %1338 = bitcast %"class.blink::PendingScript"* %1336 to void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)***
  %1339 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)**, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*** %1338, align 8
  %1340 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %1339, i64 3
  %1341 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %1340, align 8
  call void %1341(%"class.blink::PendingScript"* %1336, %"class.blink::PendingScriptClient"* %1337) #13
  br label %1434

1342:                                             ; preds = %1306, %1299, %1296
  %1343 = load i32, i32* %128, align 4
  %1344 = icmp eq i32 %1343, 0
  br i1 %1344, label %1345, label %1354

1345:                                             ; preds = %1342
  %1346 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1347 = bitcast %"class.blink::ScriptElementBase"* %1346 to i1 (%"class.blink::ScriptElementBase"*)***
  %1348 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1347, align 8
  %1349 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1348, i64 16
  %1350 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1349, align 8
  %1351 = call zeroext i1 %1350(%"class.blink::ScriptElementBase"* %1346) #13
  br i1 %1351, label %1357, label %1352

1352:                                             ; preds = %1345
  %1353 = load i32, i32* %128, align 4
  br label %1354

1354:                                             ; preds = %1352, %1342
  %1355 = phi i32 [ %1353, %1352 ], [ %1343, %1342 ]
  %1356 = icmp eq i32 %1355, 1
  br i1 %1356, label %1357, label %1394

1357:                                             ; preds = %1354, %1345
  %1358 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %1359 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %1358, i64 0, i32 0, i32 0
  %1360 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1359, align 8
  %1361 = icmp eq %"class.blink::PendingScript"* %1360, null
  br i1 %1361, label %1362, label %1366

1362:                                             ; preds = %1357
  %1363 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1363) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 991, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0)) #13
  %1364 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1363) #13
  %1365 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1359, align 8
  br label %1366

1366:                                             ; preds = %1357, %1362
  %1367 = phi %"class.blink::PendingScript"* [ %1360, %1357 ], [ %1365, %1362 ]
  %1368 = bitcast %"class.blink::Member.1"* %1358 to i64*
  store atomic i64 0, i64* %1368 monotonic, align 8
  %1369 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %1367, i64 0, i32 4
  store i32 5, i32* %1369, align 8
  %1370 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14
  %1371 = ptrtoint %"class.blink::PendingScript"* %1367 to i64
  %1372 = bitcast %"class.blink::Member.1"* %1370 to i64*
  store atomic i64 %1371, i64* %1372 monotonic, align 8
  %1373 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1374 = icmp eq i32 %1373, 0
  br i1 %1374, label %1378, label %1375

1375:                                             ; preds = %1366
  %1376 = bitcast %"class.blink::PendingScript"* %1367 to i8*
  %1377 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1376) #13
  br label %1378

1378:                                             ; preds = %1366, %1375
  %1379 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %110) #13
  %1380 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1379, i64 0, i32 188
  %1381 = load i32, i32* %1380, align 8
  %1382 = add nsw i32 %1381, 1
  store i32 %1382, i32* %1380, align 8
  %1383 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %110) #13
  %1384 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1383, i64 0, i32 88, i32 0, i32 0
  %1385 = load %"class.blink::ScriptRunner"*, %"class.blink::ScriptRunner"** %1384, align 8
  %1386 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %1370, i64 0, i32 0, i32 0
  %1387 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1386, align 8
  call void @_ZN5blink12ScriptRunner23QueueScriptForExecutionEPNS_13PendingScriptE(%"class.blink::ScriptRunner"* %1385, %"class.blink::PendingScript"* %1387) #13
  %1388 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1386, align 8
  %1389 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 0
  %1390 = bitcast %"class.blink::PendingScript"* %1388 to void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)***
  %1391 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)**, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*** %1390, align 8
  %1392 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %1391, i64 3
  %1393 = load void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)*, void (%"class.blink::PendingScript"*, %"class.blink::PendingScriptClient"*)** %1392, align 8
  call void %1393(%"class.blink::PendingScript"* %1388, %"class.blink::PendingScriptClient"* %1389) #13
  br label %1434

1394:                                             ; preds = %1354
  %1395 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %82, align 8
  %1396 = bitcast %"class.blink::ScriptElementBase"* %1395 to i1 (%"class.blink::ScriptElementBase"*)***
  %1397 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %1396, align 8
  %1398 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1397, i64 16
  %1399 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %1398, align 8
  %1400 = call zeroext i1 %1399(%"class.blink::ScriptElementBase"* %1395) #13
  br i1 %1400, label %1409, label %1401

1401:                                             ; preds = %1394
  %1402 = load i8, i8* %64, align 8, !range !3
  %1403 = icmp eq i8 %1402, 0
  br i1 %1403, label %1409, label %1404

1404:                                             ; preds = %1401
  %1405 = call zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"* %108) #13
  br i1 %1405, label %1409, label %1406

1406:                                             ; preds = %1404
  %1407 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %1407, align 1
  %1408 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 8
  store i8 1, i8* %1408, align 1
  br label %1434

1409:                                             ; preds = %1401, %1404, %1394
  %1410 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %59, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1410) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1410, i8 -86, i64 112, i1 false)
  br i1 %202, label %1416, label %1411

1411:                                             ; preds = %1409
  %1412 = load i8, i8* %64, align 8, !range !3
  %1413 = icmp eq i8 %1412, 0
  br i1 %1413, label %1416, label %1414

1414:                                             ; preds = %1411
  %1415 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %108, i64 0, i32 19
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %59, %"class.blink::KURL"* dereferenceable(112) %1415) #13
  br label %1417

1416:                                             ; preds = %1411, %1409
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %59) #13
  br label %1417

1417:                                             ; preds = %1416, %1414
  %1418 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %1419 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %1418, i64 0, i32 0, i32 0
  %1420 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1419, align 8
  %1421 = icmp eq %"class.blink::PendingScript"* %1420, null
  br i1 %1421, label %1422, label %1426

1422:                                             ; preds = %1417
  %1423 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1423) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 991, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0)) #13
  %1424 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1423) #13
  %1425 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %1419, align 8
  br label %1426

1426:                                             ; preds = %1417, %1422
  %1427 = phi %"class.blink::PendingScript"* [ %1420, %1417 ], [ %1425, %1422 ]
  %1428 = bitcast %"class.blink::Member.1"* %1418 to i64*
  store atomic i64 0, i64* %1428 monotonic, align 8
  %1429 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %1427, i64 0, i32 4
  store i32 6, i32* %1429, align 8
  %1430 = bitcast %"class.blink::PendingScript"* %1427 to void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)***
  %1431 = load void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)**, void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)*** %1430, align 8
  %1432 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)*, void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)** %1431, i64 11
  %1433 = load void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)*, void (%"class.blink::PendingScript"*, %"class.blink::KURL"*)** %1432, align 8
  call void %1433(%"class.blink::PendingScript"* %1427, %"class.blink::KURL"* nonnull dereferenceable(112) %59) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %59) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1410) #13
  br label %1434

1434:                                             ; preds = %649, %644, %642, %1203, %1066, %1426, %1406, %1378, %1330, %1272, %1249
  %1435 = phi i1 [ true, %1378 ], [ true, %1426 ], [ true, %1406 ], [ true, %1330 ], [ true, %1272 ], [ true, %1249 ], [ false, %1203 ], [ false, %1066 ], [ false, %642 ], [ false, %644 ], [ false, %649 ]
  call void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %456) #13
  %1436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %1437 = icmp eq %"class.WTF::StringImpl"* %1436, null
  br i1 %1437, label %1451, label %1438

1438:                                             ; preds = %1434
  %1439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1440 = load atomic i32, i32* %1439 monotonic, align 4
  %1441 = and i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1436, i64 0, i32 0
  %1444 = load i32, i32* %1443, align 4
  br i1 %1442, label %1445, label %1447

1445:                                             ; preds = %1438
  %1446 = add i32 %1444, -1
  store i32 %1446, i32* %1443, align 4
  br label %1447

1447:                                             ; preds = %1445, %1438
  %1448 = phi i32 [ %1446, %1445 ], [ %1444, %1438 ]
  %1449 = icmp eq i32 %1448, 0
  br i1 %1449, label %1450, label %1451

1450:                                             ; preds = %1447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1436) #13
  br label %1451

1451:                                             ; preds = %1434, %1447, %1450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %417) #13
  %1452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %1453 = icmp eq %"class.WTF::StringImpl"* %1452, null
  br i1 %1453, label %1467, label %1454

1454:                                             ; preds = %1451
  %1455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1456 = load atomic i32, i32* %1455 monotonic, align 4
  %1457 = and i32 %1456, 2
  %1458 = icmp eq i32 %1457, 0
  %1459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1452, i64 0, i32 0
  %1460 = load i32, i32* %1459, align 4
  br i1 %1458, label %1461, label %1463

1461:                                             ; preds = %1454
  %1462 = add i32 %1460, -1
  store i32 %1462, i32* %1459, align 4
  br label %1463

1463:                                             ; preds = %1461, %1454
  %1464 = phi i32 [ %1462, %1461 ], [ %1460, %1454 ]
  %1465 = icmp eq i32 %1464, 0
  br i1 %1465, label %1466, label %1467

1466:                                             ; preds = %1463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1452) #13
  br label %1467

1467:                                             ; preds = %1451, %1463, %1466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %409) #13
  %1468 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %333, align 8
  %1469 = icmp eq %"struct.std::__1::pair"* %1468, null
  br i1 %1469, label %1501, label %1470, !prof !5

1470:                                             ; preds = %1467
  %1471 = load i32, i32* %334, align 8
  %1472 = icmp eq i32 %1471, 0
  br i1 %1472, label %1499, label %1473

1473:                                             ; preds = %1470
  %1474 = zext i32 %1471 to i64
  br label %1475

1475:                                             ; preds = %1496, %1473
  %1476 = phi i64 [ 0, %1473 ], [ %1497, %1496 ]
  %1477 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1468, i64 %1476
  %1478 = bitcast %"struct.std::__1::pair"* %1477 to i8**
  %1479 = load i8*, i8** %1478, align 8
  %1480 = bitcast i8* %1479 to %"class.WTF::StringImpl"*
  %1481 = ptrtoint i8* %1479 to i64
  switch i64 %1481, label %1482 [
    i64 -1, label %1496
    i64 0, label %1496
  ]

1482:                                             ; preds = %1475
  %1483 = getelementptr inbounds i8, i8* %1479, i64 8
  %1484 = bitcast i8* %1483 to i32*
  %1485 = load atomic i32, i32* %1484 monotonic, align 4
  %1486 = and i32 %1485, 2
  %1487 = icmp eq i32 %1486, 0
  %1488 = bitcast i8* %1479 to i32*
  %1489 = load i32, i32* %1488, align 4
  br i1 %1487, label %1490, label %1492

1490:                                             ; preds = %1482
  %1491 = add i32 %1489, -1
  store i32 %1491, i32* %1488, align 4
  br label %1492

1492:                                             ; preds = %1490, %1482
  %1493 = phi i32 [ %1491, %1490 ], [ %1489, %1482 ]
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1495, label %1496

1495:                                             ; preds = %1492
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1480) #13
  br label %1496

1496:                                             ; preds = %1495, %1492, %1475, %1475
  %1497 = add nuw nsw i64 %1476, 1
  %1498 = icmp eq i64 %1497, %1474
  br i1 %1498, label %1499, label %1475

1499:                                             ; preds = %1496, %1470
  %1500 = bitcast %"struct.std::__1::pair"* %1468 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1500) #13
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %333, align 8
  br label %1501

1501:                                             ; preds = %1467, %1499
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #13
  %1502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %1503 = icmp eq %"class.WTF::StringImpl"* %1502, null
  br i1 %1503, label %1517, label %1504

1504:                                             ; preds = %1501
  %1505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1506 = load atomic i32, i32* %1505 monotonic, align 4
  %1507 = and i32 %1506, 2
  %1508 = icmp eq i32 %1507, 0
  %1509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1502, i64 0, i32 0
  %1510 = load i32, i32* %1509, align 4
  br i1 %1508, label %1511, label %1513

1511:                                             ; preds = %1504
  %1512 = add i32 %1510, -1
  store i32 %1512, i32* %1509, align 4
  br label %1513

1513:                                             ; preds = %1511, %1504
  %1514 = phi i32 [ %1512, %1511 ], [ %1510, %1504 ]
  %1515 = icmp eq i32 %1514, 0
  br i1 %1515, label %1516, label %1517

1516:                                             ; preds = %1513
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1502) #13
  br label %1517

1517:                                             ; preds = %1501, %1513, %1516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324) #13
  br i1 %305, label %1531, label %1518

1518:                                             ; preds = %1517
  %1519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1520 = load atomic i32, i32* %1519 monotonic, align 4
  %1521 = and i32 %1520, 2
  %1522 = icmp eq i32 %1521, 0
  %1523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %1524 = load i32, i32* %1523, align 4
  br i1 %1522, label %1525, label %1527

1525:                                             ; preds = %1518
  %1526 = add i32 %1524, -1
  store i32 %1526, i32* %1523, align 4
  br label %1527

1527:                                             ; preds = %1525, %1518
  %1528 = phi i32 [ %1526, %1525 ], [ %1524, %1518 ]
  %1529 = icmp eq i32 %1528, 0
  br i1 %1529, label %1530, label %1531

1530:                                             ; preds = %1527
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #13
  br label %1531

1531:                                             ; preds = %1530, %1527, %1517, %226, %213, %260
  %1532 = phi i1 [ false, %260 ], [ false, %213 ], [ false, %226 ], [ %1435, %1517 ], [ %1435, %1527 ], [ %1435, %1530 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #13
  br label %1533

1533:                                             ; preds = %173, %1531, %160, %162, %185, %187, %189, %95, %91
  %1534 = phi i1 [ false, %189 ], [ false, %187 ], [ false, %185 ], [ false, %173 ], [ false, %162 ], [ false, %160 ], [ %1532, %1531 ], [ false, %95 ], [ false, %91 ]
  %1535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %1536 = icmp eq %"class.WTF::StringImpl"* %1535, null
  br i1 %1536, label %1550, label %1537

1537:                                             ; preds = %1533
  %1538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1539 = load atomic i32, i32* %1538 monotonic, align 4
  %1540 = and i32 %1539, 2
  %1541 = icmp eq i32 %1540, 0
  %1542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1535, i64 0, i32 0
  %1543 = load i32, i32* %1542, align 4
  br i1 %1541, label %1544, label %1546

1544:                                             ; preds = %1537
  %1545 = add i32 %1543, -1
  store i32 %1545, i32* %1542, align 4
  br label %1546

1546:                                             ; preds = %1544, %1537
  %1547 = phi i32 [ %1545, %1544 ], [ %1543, %1537 ]
  %1548 = icmp eq i32 %1547, 0
  br i1 %1548, label %1549, label %1550

1549:                                             ; preds = %1546
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1535) #13
  br label %1550

1550:                                             ; preds = %89, %1533, %1546, %1549
  %1551 = phi i1 [ %1534, %1533 ], [ %1534, %1546 ], [ %1534, %1549 ], [ false, %89 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #13
  br label %1552

1552:                                             ; preds = %3, %1550
  %1553 = phi i1 [ %1551, %1550 ], [ false, %3 ]
  ret i1 %1553
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader15ChildrenChangedEv(%"class.blink::ScriptLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.WTF::TextPosition"*
  %4 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %8, align 8
  %10 = bitcast %"class.blink::ScriptElementBase"* %9 to i1 (%"class.blink::ScriptElementBase"*)***
  %11 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %11, i64 17
  %13 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ScriptElementBase"* %9) #13
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store i64 0, i64* %2, align 8
  %17 = call zeroext i1 @_ZN5blink12ScriptLoader13PrepareScriptERKN3WTF12TextPositionENS0_17LegacyTypeSupportE(%"class.blink::ScriptLoader"* %0, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %3, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %1, %15, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader21HandleSourceAttributeERKN3WTF6StringE(%"class.blink::ScriptLoader"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.WTF::TextPosition"*
  %5 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 10
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %35

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %35

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %17, align 8
  %19 = bitcast %"class.blink::ScriptElementBase"* %18 to i1 (%"class.blink::ScriptElementBase"*)***
  %20 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %20, i64 17
  %22 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::ScriptElementBase"* %18) #13
  br i1 %23, label %24, label %35

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  store i64 0, i64* %3, align 8
  %34 = call zeroext i1 @_ZN5blink12ScriptLoader13PrepareScriptERKN3WTF12TextPositionENS0_17LegacyTypeSupportE(%"class.blink::ScriptLoader"* %0, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %4, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %35

35:                                               ; preds = %16, %24, %2, %8, %12, %28, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12ScriptLoader18IgnoresLoadRequestEv(%"class.blink::ScriptLoader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %22

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 10
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %14, align 8
  %16 = bitcast %"class.blink::ScriptElementBase"* %15 to i1 (%"class.blink::ScriptElementBase"*)***
  %17 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %17, i64 17
  %19 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::ScriptElementBase"* %15) #13
  %21 = xor i1 %20, true
  br label %22

22:                                               ; preds = %9, %5, %1, %13
  %23 = phi i1 [ true, %9 ], [ true, %5 ], [ true, %1 ], [ %21, %13 ]
  ret i1 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12ScriptLoader20HandleAsyncAttributeEv(%"class.blink::ScriptLoader"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 6
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 7
  store i8 1, i8* %3, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader19DetachPendingScriptEv(%"class.blink::ScriptLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %3, align 8
  %5 = icmp eq %"class.blink::PendingScript"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"* nonnull %4) #13
  %7 = bitcast %"class.blink::Member.1"* %2 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12ScriptLoader22GetScriptTypeAtPrepareERKN3WTF6StringES4_NS0_17LegacyTypeSupportE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %111

17:                                               ; preds = %13, %3
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %229, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %229, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  %27 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %25
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #13
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  tail call void @llvm.trap() #13
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %42, %25
  %45 = phi i32 [ %43, %42 ], [ %33, %25 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %44
  %50 = zext i32 %45 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #13
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !4

56:                                               ; preds = %49
  tail call void @llvm.trap() #13
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %32, align 4
  br label %59

59:                                               ; preds = %57, %44
  %60 = phi i32 [ %58, %57 ], [ %45, %44 ]
  %61 = load atomic i32, i32* %28 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = add i32 %60, -1
  store i32 %65, i32* %32, align 4
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i32 [ %65, %64 ], [ %60, %59 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #13
  br label %70

70:                                               ; preds = %69, %66
  %71 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %72, align 8
  %73 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5) #13
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %74, align 8
  %75 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = call zeroext i1 @_ZN5blink16MIMETypeRegistry35IsLegacySupportedJavaScriptLanguageERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #13
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi i1 [ %77, %76 ], [ true, %70 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #13
  br label %95

95:                                               ; preds = %94, %91, %78
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %170, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %170

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %170

111:                                              ; preds = %13
  %112 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13
  %113 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %0) #13
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  %115 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  br i1 %115, label %136, label %116

116:                                              ; preds = %111
  %117 = icmp eq i32 %2, 1
  br i1 %117, label %118, label %153

118:                                              ; preds = %116
  %119 = call zeroext i1 @_ZN5blink16MIMETypeRegistry35IsLegacySupportedJavaScriptLanguageERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %0) #13
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #13
  br label %135

135:                                              ; preds = %134, %131, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br i1 %119, label %229, label %171

136:                                              ; preds = %111
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #13
  br label %152

152:                                              ; preds = %151, %148, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br label %229

153:                                              ; preds = %116
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #13
  br label %169

169:                                              ; preds = %168, %165, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13
  br label %171

170:                                              ; preds = %95, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br i1 %79, label %229, label %171

171:                                              ; preds = %169, %135, %170
  %172 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #13
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %175, label %179

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %176, align 8
  %177 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %178 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %177, i64* %178, align 8
  br label %186

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %180, align 8
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 1
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %185 = bitcast i8** %184 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %185, align 8
  br label %186

186:                                              ; preds = %175, %179
  %187 = phi i32 [ %182, %179 ], [ 0, %175 ]
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %187, i32* %188, align 8
  %189 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [7 x i8]* nonnull dereferenceable(7) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #13
  br i1 %189, label %229, label %190

190:                                              ; preds = %186
  %191 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #13
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %194, label %198

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %195, align 8
  %196 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %197 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %196, i64* %197, align 8
  br label %205

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %192, %"class.WTF::StringImpl"** %199, align 8
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 1
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %204 = bitcast i8** %203 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %202, %"class.WTF::StringImpl"** %204, align 8
  br label %205

205:                                              ; preds = %194, %198
  %206 = phi i32 [ %201, %198 ], [ 0, %194 ]
  %207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %206, i32* %207, align 8
  %208 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [10 x i8]* nonnull dereferenceable(10) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #13
  br i1 %208, label %229, label %209

209:                                              ; preds = %205
  %210 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #13
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %214, align 8
  %215 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %216 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %215, i64* %216, align 8
  br label %224

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 1
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %223 = bitcast i8** %222 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %221, %"class.WTF::StringImpl"** %223, align 8
  br label %224

224:                                              ; preds = %213, %217
  %225 = phi i32 [ %220, %217 ], [ 0, %213 ]
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %225, i32* %226, align 8
  %227 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [17 x i8]* nonnull dereferenceable(17) @.str.2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #13
  %228 = select i1 %227, i32 3, i32 4
  br label %229

229:                                              ; preds = %17, %21, %135, %152, %224, %205, %186, %170
  %230 = phi i32 [ 0, %170 ], [ 1, %186 ], [ 2, %205 ], [ %228, %224 ], [ 0, %152 ], [ 0, %135 ], [ 0, %21 ], [ 0, %17 ]
  ret i32 %230
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [17 x i8]* dereferenceable(17)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 16
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %278, label %80

62:                                               ; preds = %278, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %278 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %278, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %208, %222, %236, %250, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %208 ], [ false, %222 ], [ false, %236 ], [ false, %250 ], [ false, %62 ], [ false, %45 ], [ true, %278 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  br i1 %221, label %222, label %80

222:                                              ; preds = %208
  %223 = getelementptr inbounds i8, i8* %15, i64 12
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 12
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %228, %234
  br i1 %235, label %236, label %80

236:                                              ; preds = %222
  %237 = getelementptr inbounds i8, i8* %15, i64 13
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i64
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 13
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i64
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %242, %248
  br i1 %249, label %250, label %80

250:                                              ; preds = %236
  %251 = getelementptr inbounds i8, i8* %15, i64 14
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 14
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i64
  %260 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = sext i8 %261 to i32
  %263 = icmp eq i32 %256, %262
  br i1 %263, label %264, label %80

264:                                              ; preds = %250
  %265 = getelementptr inbounds i8, i8* %15, i64 15
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %267
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 15
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i64
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp eq i32 %270, %276
  ret i1 %277

278:                                              ; preds = %45
  %279 = icmp eq i64 %61, 16
  br i1 %279, label %80, label %62
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink12ScriptLoader16BlockForNoModuleENS0_19ScriptTypeAtPrepareEb(i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %0, 0
  %4 = and i1 %3, %1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink12ScriptLoader27ModuleScriptCredentialsModeENS_25CrossOriginAttributeValueE(i32) local_unnamed_addr #1 align 2 {
  %2 = icmp ult i32 %0, 3
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN5blink12ScriptLoader27ModuleScriptCredentialsModeENS_25CrossOriginAttributeValueE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink38ShouldBlockSyncScriptForDocumentPolicyEPKNS_17ScriptElementBaseENS_12ScriptLoader19ScriptTypeAtPrepareEb(%"class.blink::ScriptElementBase"*, i32, i1 zeroext) local_unnamed_addr #0 {
  %4 = bitcast %"class.blink::ScriptElementBase"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %5, i64 23
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::ScriptElementBase"* %0) #13
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %10 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* %8, i32 10, i32 1, %"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %9) #13
  br i1 %10, label %33, label %11

11:                                               ; preds = %3
  %12 = add i32 %1, -1
  %13 = icmp ult i32 %12, 3
  %14 = xor i1 %2, true
  %15 = or i1 %13, %14
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::ScriptElementBase"* %0 to i1 (%"class.blink::ScriptElementBase"*)***
  %18 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %18, i64 16
  %20 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ScriptElementBase"* %0) #13
  br i1 %21, label %22, label %33

22:                                               ; preds = %16
  %23 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %17, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %23, i64 4
  %25 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ScriptElementBase"* %0) #13
  br i1 %26, label %33, label %27

27:                                               ; preds = %22
  %28 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %17, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %28, i64 1
  %30 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::ScriptElementBase"* %0) #13
  %32 = xor i1 %31, true
  br label %33

33:                                               ; preds = %22, %27, %16, %11, %3
  %34 = phi i1 [ false, %3 ], [ false, %11 ], [ true, %16 ], [ false, %22 ], [ %32, %27 ]
  ret i1 %34
}

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12ScriptLoader13GetScriptTextEv(%"class.blink::ScriptLoader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %2, align 8
  %4 = bitcast %"class.blink::ScriptElementBase"* %3 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %5 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %5, i64 14
  %7 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* %7(%"class.blink::ScriptElementBase"* %3) #13
  %9 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %2, align 8
  %10 = bitcast %"class.blink::ScriptElementBase"* %9 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %11 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %11, i64 15
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* %13(%"class.blink::ScriptElementBase"* %9) #13
  %15 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %14) #13
  br i1 %15, label %49, label %16

16:                                               ; preds = %1
  %17 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #13
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !4

32:                                               ; preds = %23
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %16, %18, %33
  %36 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %2, align 8
  %37 = bitcast %"class.blink::ScriptElementBase"* %36 to i32 (%"class.blink::ScriptElementBase"*)***
  %38 = load i32 (%"class.blink::ScriptElementBase"*)**, i32 (%"class.blink::ScriptElementBase"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::ScriptElementBase"*)*, i32 (%"class.blink::ScriptElementBase"*)** %38, i64 27
  %40 = load i32 (%"class.blink::ScriptElementBase"*)*, i32 (%"class.blink::ScriptElementBase"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::ScriptElementBase"* %36) #13
  %42 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %2, align 8
  %43 = bitcast %"class.blink::ScriptElementBase"* %42 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %44 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %44, i64 23
  %46 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %45, align 8
  %47 = tail call %"class.blink::ExecutionContext"* %46(%"class.blink::ScriptElementBase"* %42) #13
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink27GetStringForScriptExecutionEN3WTF6StringENS_17ScriptElementBase4TypeEPNS_16ExecutionContextE(%"class.WTF::StringImpl"* %8, i32 %41, %"class.blink::ExecutionContext"* %47) #13
  br label %49

49:                                               ; preds = %1, %35
  %50 = phi %"class.WTF::StringImpl"* [ %8, %35 ], [ null, %1 ]
  %51 = phi %"class.WTF::StringImpl"* [ %48, %35 ], [ %8, %1 ]
  %52 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #13
  br label %66

66:                                               ; preds = %49, %62, %65
  %67 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %81

81:                                               ; preds = %66, %77, %80
  ret %"class.WTF::StringImpl"* %51
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase23SpeculationRulesEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14LocalDOMWindow17CanExecuteScriptsENS_33ReasonForCallingCanExecuteScriptsE(%"class.blink::LocalDOMWindow"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12ScriptLoader25IsScriptForEventSupportedEv(%"class.blink::ScriptLoader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %9, align 8
  %11 = bitcast %"class.blink::ScriptElementBase"* %10 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %12, i64 5
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* %14(%"class.blink::ScriptElementBase"* %10) #13
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %8, align 8
  %16 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %17, align 8
  %18 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %9, align 8
  %19 = bitcast %"class.blink::ScriptElementBase"* %18 to %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)***
  %20 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %20, i64 6
  %22 = load %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::ScriptElementBase"*)** %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* %22(%"class.blink::ScriptElementBase"* %18) #13
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %17, align 8
  %24 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 9
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %135

27:                                               ; preds = %1
  %28 = icmp eq %"class.WTF::StringImpl"* %15, null
  %29 = icmp eq %"class.WTF::StringImpl"* %23, null
  %30 = or i1 %29, %28
  br i1 %30, label %132, label %31

31:                                               ; preds = %27
  %32 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %3) #13
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %34 = bitcast %"class.WTF::String"* %3 to i64*
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %33, i64* %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #13
  br label %50

50:                                               ; preds = %46, %49
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  br label %52

52:                                               ; preds = %50, %31
  %53 = phi %"class.WTF::StringImpl"* [ %51, %50 ], [ %32, %31 ]
  %54 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #13
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %57, align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %59, align 8
  br label %67

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %66, align 8
  br label %67

67:                                               ; preds = %56, %60
  %68 = phi i32 [ %63, %60 ], [ 0, %56 ]
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %68, i32* %69, align 8
  %70 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [7 x i8]* nonnull dereferenceable(7) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #13
  br i1 %70, label %71, label %132

71:                                               ; preds = %67
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %2) #13
  %73 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %74 = bitcast %"class.WTF::String"* %2 to i64*
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %73, i64* %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %92, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #13
  br label %90

90:                                               ; preds = %86, %89
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  br label %92

92:                                               ; preds = %90, %71
  %93 = phi %"class.WTF::StringImpl"* [ %91, %90 ], [ %72, %71 ]
  %94 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #13
  %95 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %97, align 8
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %99 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %98, i64* %99, align 8
  br label %107

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %106, align 8
  br label %107

107:                                              ; preds = %96, %100
  %108 = phi i32 [ %103, %100 ], [ 0, %96 ]
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %108, i32* %109, align 8
  %110 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [7 x i8]* nonnull dereferenceable(7) @.str.12)
  %111 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #13
  br i1 %110, label %130, label %112

112:                                              ; preds = %107
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %115, label %119

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %116, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %118 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %117, i64* %118, align 8
  br label %126

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  br label %126

126:                                              ; preds = %115, %119
  %127 = phi i32 [ %122, %119 ], [ 0, %115 ]
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %127, i32* %128, align 8
  %129 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [9 x i8]* nonnull dereferenceable(9) @.str.13)
  br label %130

130:                                              ; preds = %126, %107
  %131 = phi i1 [ true, %107 ], [ %129, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #13
  br label %132

132:                                              ; preds = %130, %27, %67
  %133 = phi i1 [ false, %67 ], [ true, %27 ], [ %131, %130 ]
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  br label %135

135:                                              ; preds = %132, %1
  %136 = phi %"class.WTF::StringImpl"* [ %134, %132 ], [ %23, %1 ]
  %137 = phi i1 [ %133, %132 ], [ true, %1 ]
  %138 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #13
  br label %152

152:                                              ; preds = %135, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #13
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret i1 %137
}

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #4

declare i32 @_ZN5blink28GetCrossOriginAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare i32 @_ZN5blink26SubresourceIntegrityHelper11GetFeaturesEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare i32 @_ZN5blink20SubresourceIntegrity23ParseIntegrityAttributeERKN3WTF6StringENS0_17IntegrityFeaturesERNS1_7HashSetINSt3__14pairIS2_NS_18IntegrityAlgorithmEEENS1_8PairHashIS2_S9_EENS1_10HashTraitsISA_EENS1_18PartitionAllocatorEEEPNS0_10ReportInfoE(%"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::HashSet.140"* dereferenceable(24), %"class.blink::SubresourceIntegrity::ReportInfo"*) local_unnamed_addr #4

declare void @_ZN5blink26SubresourceIntegrityHelper8DoReportERNS_16ExecutionContextERKNS_20SubresourceIntegrity10ReportInfoE(%"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::SubresourceIntegrity::ReportInfo"* dereferenceable(32)) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14SecurityPolicy24ReferrerPolicyFromStringERKN3WTF6StringENS_35ReferrerPolicyLegacyKeywordsSupportEPN7network5mojom14ReferrerPolicyE(%"class.WTF::String"* dereferenceable(8), i32, i32*) local_unnamed_addr #4

declare i32 @_ZN5blink32GetFetchImportanceAttributeValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #4

declare %"class.blink::Modulator"* @_ZN5blink9Modulator4FromEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #4

declare %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #4

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.523"*) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #4

declare void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader18FetchClassicScriptERKNS_4KURLERNS_8DocumentERKNS_18ScriptFetchOptionsENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingE(%"class.blink::ScriptLoader"* nocapture, %"class.blink::KURL"* dereferenceable(112), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ScriptFetchOptions"* dereferenceable(64), i32, %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 5
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %11, align 8
  %13 = bitcast %"class.blink::ScriptElementBase"* %12 to i1 (%"class.blink::ScriptElementBase"*)***
  %14 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %14, i64 1
  %16 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::ScriptElementBase"* %12) #13
  br i1 %17, label %25, label %18

18:                                               ; preds = %10
  %19 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %11, align 8
  %20 = bitcast %"class.blink::ScriptElementBase"* %19 to i1 (%"class.blink::ScriptElementBase"*)***
  %21 = load i1 (%"class.blink::ScriptElementBase"*)**, i1 (%"class.blink::ScriptElementBase"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %21, i64 4
  %23 = load i1 (%"class.blink::ScriptElementBase"*)*, i1 (%"class.blink::ScriptElementBase"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::ScriptElementBase"* %19) #13
  br i1 %24, label %25, label %26

25:                                               ; preds = %6, %18, %10
  br label %26

26:                                               ; preds = %25, %18
  %27 = phi i32 [ 1, %25 ], [ 0, %18 ]
  %28 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %28, align 8
  %30 = tail call %"class.blink::ClassicPendingScript"* @_ZN5blink20ClassicPendingScript5FetchERKNS_4KURLERNS_8DocumentERKNS_18ScriptFetchOptionsENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingEPNS_17ScriptElementBaseENS_15FetchParameters11DeferOptionE(%"class.blink::KURL"* dereferenceable(112) %1, %"class.blink::Document"* dereferenceable(2848) %2, %"class.blink::ScriptFetchOptions"* dereferenceable(64) %3, i32 %4, %"class.WTF::TextEncoding"* dereferenceable(8) %5, %"class.blink::ScriptElementBase"* %29, i32 %27) #13
  %31 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %32 = ptrtoint %"class.blink::ClassicPendingScript"* %30 to i64
  %33 = bitcast %"class.blink::Member.1"* %31 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %26
  %37 = bitcast %"class.blink::ClassicPendingScript"* %30 to i8*
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #13
  br label %39

39:                                               ; preds = %26, %36
  %40 = getelementptr inbounds %"class.blink::ClassicPendingScript", %"class.blink::ClassicPendingScript"* %30, i64 0, i32 2, i32 3, i32 0, i32 0
  %41 = load %"class.blink::Resource"*, %"class.blink::Resource"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 15
  %43 = ptrtoint %"class.blink::Resource"* %41 to i64
  %44 = bitcast %"class.blink::Member.10"* %42 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::Resource"* %41 to i8*
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %39, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader21FetchModuleScriptTreeERKNS_4KURLEPNS_15ResourceFetcherEPNS_9ModulatorERKNS_18ScriptFetchOptionsE(%"class.blink::ScriptLoader"* nocapture, %"class.blink::KURL"* dereferenceable(112), %"class.blink::ResourceFetcher"*, %"class.blink::Modulator"*, %"class.blink::ScriptFetchOptions"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16ModuleTreeClientEEEPhm(i64 32) #13
  %7 = bitcast i8* %6 to %"class.blink::ModulePendingScriptTreeClient"*
  tail call void @_ZN5blink29ModulePendingScriptTreeClientC1Ev(%"class.blink::ModulePendingScriptTreeClient"* %7) #13
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast i8* %6 to %"class.blink::ModuleTreeClient"*
  %13 = bitcast %"class.blink::Modulator"* %3 to void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)***
  %14 = load void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)**, void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)** %14, i64 9
  %16 = load void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)*, void (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32, %"class.blink::ResourceFetcher"*, i32, i32, %"class.blink::ScriptFetchOptions"*, i32, %"class.blink::ModuleTreeClient"*)** %15, align 8
  tail call void %16(%"class.blink::Modulator"* %3, %"class.blink::KURL"* dereferenceable(112) %1, i32 1, %"class.blink::ResourceFetcher"* %2, i32 23, i32 13, %"class.blink::ScriptFetchOptions"* dereferenceable(64) %4, i32 0, %"class.blink::ModuleTreeClient"* %12) #13
  %17 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 10
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13PendingScriptEEEPhm(i64 128) #13
  %19 = bitcast i8* %18 to %"class.blink::ModulePendingScript"*
  %20 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %20, align 8
  %22 = load i8, i8* %17, align 1, !range !3
  %23 = icmp ne i8 %22, 0
  tail call void @_ZN5blink19ModulePendingScriptC1EPNS_17ScriptElementBaseEPNS_29ModulePendingScriptTreeClientEb(%"class.blink::ModulePendingScript"* %19, %"class.blink::ScriptElementBase"* %21, %"class.blink::ModulePendingScriptTreeClient"* %7, i1 zeroext %23) #13
  %24 = getelementptr inbounds i8, i8* %18, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %29 = ptrtoint i8* %18 to i64
  %30 = bitcast %"class.blink::Member.1"* %28 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %5
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #13
  br label %35

35:                                               ; preds = %5, %33
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #4

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #4

declare %"class.blink::PendingImportMap"* @_ZN5blink16PendingImportMap12CreateInlineERNS_17ScriptElementBaseERKN3WTF6StringERKNS_4KURLE(%"class.blink::ScriptElementBase"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare void @_ZNK5blink16PendingImportMap17RegisterImportMapEv(%"class.blink::PendingImportMap"*) local_unnamed_addr #4

declare %"class.blink::SpeculationRuleSet"* @_ZN5blink18SpeculationRuleSet11ParseInlineERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare dereferenceable(48) %"class.blink::DocumentSpeculationRules"* @_ZN5blink24DocumentSpeculationRules4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #4

declare void @_ZN5blink24DocumentSpeculationRules10AddRuleSetEPNS_18SpeculationRuleSetE(%"class.blink::DocumentSpeculationRules"*, %"class.blink::SpeculationRuleSet"*) local_unnamed_addr #4

declare %"class.blink::ClassicPendingScript"* @_ZN5blink20ClassicPendingScript12CreateInlineEPNS_17ScriptElementBaseERKN3WTF12TextPositionERKNS_4KURLERKNS3_6StringENS_24ScriptSourceLocationTypeERKNS_18ScriptFetchOptionsE(%"class.blink::ScriptElementBase"*, %"class.WTF::TextPosition"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::ScriptFetchOptions"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #6

declare %"class.blink::JSModuleScript"* @_ZN5blink14JSModuleScript6CreateERKNS_26ModuleScriptCreationParamsEPNS_9ModulatorERKNS_18ScriptFetchOptionsERKN3WTF12TextPositionE(%"class.blink::ModuleScriptCreationParams"* dereferenceable(296), %"class.blink::Modulator"*, %"class.blink::ScriptFetchOptions"* dereferenceable(64), %"class.WTF::TextPosition"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #13
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !4

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #13
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  %48 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #13
  br label %64

64:                                               ; preds = %47, %60, %63
  %65 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %65) #13
  %66 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %66) #13
  %67 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %67) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader17TakePendingScriptENS_20ScriptSchedulingTypeE(%"class.blink::ScriptLoader"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 13
  %5 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %5, align 8
  %7 = icmp eq %"class.blink::PendingScript"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 991, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0)) #13
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %11 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %5, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi %"class.blink::PendingScript"* [ %6, %2 ], [ %11, %8 ]
  %14 = bitcast %"class.blink::Member.1"* %4 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::PendingScript", %"class.blink::PendingScript"* %13, i64 0, i32 4
  store i32 %1, i32* %15, align 8
  ret %"class.blink::PendingScript"* %13
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #4

declare void @_ZN5blink12ScriptRunner23QueueScriptForExecutionEPNS_13PendingScriptE(%"class.blink::ScriptRunner"*, %"class.blink::PendingScript"*) local_unnamed_addr #4

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18ScriptFetchOptionsD2Ev(%"class.blink::ScriptFetchOptions"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair"* %20, null
  br i1 %21, label %54, label %22, !prof !5

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %49, %26
  %29 = phi i64 [ 0, %26 ], [ %50, %49 ]
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %29
  %31 = bitcast %"struct.std::__1::pair"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"*
  %34 = ptrtoint i8* %32 to i64
  switch i64 %34, label %35 [
    i64 -1, label %49
    i64 0, label %49
  ]

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %32 to i32*
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %35
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #13
  br label %49

49:                                               ; preds = %48, %45, %28, %28
  %50 = add nuw nsw i64 %29, 1
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %52, label %28

52:                                               ; preds = %49, %22
  %53 = bitcast %"struct.std::__1::pair"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #13
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %19, align 8
  br label %54

54:                                               ; preds = %18, %52
  %55 = getelementptr inbounds %"class.blink::ScriptFetchOptions", %"class.blink::ScriptFetchOptions"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #13
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

declare %"class.blink::ClassicPendingScript"* @_ZN5blink20ClassicPendingScript5FetchERKNS_4KURLERNS_8DocumentERKNS_18ScriptFetchOptionsENS_25CrossOriginAttributeValueERKN3WTF12TextEncodingEPNS_17ScriptElementBaseENS_15FetchParameters11DeferOptionE(%"class.blink::KURL"* dereferenceable(112), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ScriptFetchOptions"* dereferenceable(64), i32, %"class.WTF::TextEncoding"* dereferenceable(8), %"class.blink::ScriptElementBase"*, i32) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScriptLoader21PendingScriptFinishedEPNS_13PendingScriptE(%"class.blink::ScriptLoader"* nocapture, %"class.blink::PendingScript"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 15
  %4 = getelementptr inbounds %"class.blink::Member.10", %"class.blink::Member.10"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::Resource"*, %"class.blink::Resource"** %4, align 8
  %6 = icmp eq %"class.blink::Resource"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %5, i64 0, i32 29, i32 28
  %9 = load i8, i8* %8, align 2, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features24kKeepScriptResourceAliveE) #13
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.blink::Member.10"* %3 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  br label %15

15:                                               ; preds = %7, %2, %13, %11
  %16 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %16, align 8
  %18 = bitcast %"class.blink::ScriptElementBase"* %17 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %19 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %19, i64 23
  %21 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %20, align 8
  %22 = tail call %"class.blink::ExecutionContext"* %21(%"class.blink::ScriptElementBase"* %17) #13
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %24, label %30

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14
  %26 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %26, align 8
  %28 = icmp eq %"class.blink::PendingScript"* %27, null
  br i1 %28, label %50, label %29

29:                                               ; preds = %24
  tail call void @_ZN5blink13PendingScript7DisposeEv(%"class.blink::PendingScript"* nonnull %27) #13
  br label %47

30:                                               ; preds = %15
  %31 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %16, align 8
  %32 = bitcast %"class.blink::ScriptElementBase"* %31 to %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)***
  %33 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)**, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %33, i64 23
  %35 = load %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)*, %"class.blink::ExecutionContext"* (%"class.blink::ScriptElementBase"*)** %34, align 8
  %36 = tail call %"class.blink::ExecutionContext"* %35(%"class.blink::ScriptElementBase"* %31) #13
  %37 = icmp eq %"class.blink::ExecutionContext"* %36, null
  %38 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %36, i64 -1, i32 8
  %39 = bitcast i32* %38 to %"class.blink::LocalDOMWindow"*
  %40 = select i1 %37, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %39
  %41 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %40) #13
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 88, i32 0, i32 0
  %43 = load %"class.blink::ScriptRunner"*, %"class.blink::ScriptRunner"** %42, align 8
  tail call void @_ZN5blink12ScriptRunner17NotifyScriptReadyEPNS_13PendingScriptE(%"class.blink::ScriptRunner"* %43, %"class.blink::PendingScript"* %1) #13
  %44 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14
  %45 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %45, align 8
  tail call void @_ZN5blink13PendingScript19StopWatchingForLoadEv(%"class.blink::PendingScript"* %46) #13
  br label %47

47:                                               ; preds = %30, %29
  %48 = phi %"class.blink::Member.1"* [ %25, %29 ], [ %44, %30 ]
  %49 = bitcast %"class.blink::Member.1"* %48 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  br label %50

50:                                               ; preds = %47, %24
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN5blink12ScriptRunner17NotifyScriptReadyEPNS_13PendingScriptE(%"class.blink::ScriptRunner"*, %"class.blink::PendingScript"*) local_unnamed_addr #4

declare void @_ZN5blink13PendingScript19StopWatchingForLoadEv(%"class.blink::PendingScript"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::PendingScript"* @_ZN5blink12ScriptLoader57GetPendingScriptIfControlledByScriptRunnerForCrossDocMoveEv(%"class.blink::ScriptLoader"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptLoader", %"class.blink::ScriptLoader"* %0, i64 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::PendingScript"*, %"class.blink::PendingScript"** %2, align 8
  ret %"class.blink::PendingScript"* %3
}

declare %"class.WTF::StringImpl"* @_ZN5blink27GetStringForScriptExecutionEN3WTF6StringENS_17ScriptElementBase4TypeEPNS_16ExecutionContextE(%"class.WTF::StringImpl"*, i32, %"class.blink::ExecutionContext"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink12ScriptLoader18NameInHeapSnapshotEv(%"class.blink::ScriptLoader"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZThn8_NK5blink12ScriptLoader18NameInHeapSnapshotEv(%"class.blink::ScriptLoader"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0)
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2185", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2185", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #13
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #13
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #13
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #13
  %29 = bitcast %"class.WTF::StringTypeAdapter.2185"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2185", %"class.WTF::StringTypeAdapter.2185"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2185", %"class.WTF::StringTypeAdapter.2185"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #13
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.2185"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #13
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2185", %"class.WTF::StringTypeAdapter.2185"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2186"* nonnull %47, i8* %50) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #13
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %59
  call void @llvm.trap() #13
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #13
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #13
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #13
  %90 = bitcast %"class.WTF::StringTypeAdapter.2185"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2185", %"class.WTF::StringTypeAdapter.2185"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2185", %"class.WTF::StringTypeAdapter.2185"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #13
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.2185"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #13
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2185", %"class.WTF::StringTypeAdapter.2185"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2186"* nonnull %108, i16* %111) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #13
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !4

127:                                              ; preds = %120
  call void @llvm.trap() #13
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #13
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare zeroext i1 @_ZN5blink16MIMETypeRegistry35IsLegacySupportedJavaScriptLanguageERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #13
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %45, i8* %46) #13
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #13
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2186"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2186"*, i16*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.141"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #13
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #13
  %30 = bitcast i8* %29 to %"struct.std::__1::pair"*
  %31 = add nsw i64 %27, -1
  %32 = and i64 %27, 3
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %57, label %34

34:                                               ; preds = %26
  %35 = sub nsw i64 %27, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %54, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %55, %36 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37
  %40 = bitcast %"struct.std::__1::pair"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %37, i32 1
  store i8 0, i8* %41, align 8
  %42 = or i64 %37, 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %42, i32 1
  store i8 0, i8* %45, align 8
  %46 = or i64 %37, 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %46, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %37, 3
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = add nuw nsw i64 %37, 4
  %55 = add i64 %38, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %36

57:                                               ; preds = %36, %26
  %58 = phi i64 [ 0, %26 ], [ %54, %36 ]
  %59 = icmp eq i64 %32, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %57, %60
  %61 = phi i64 [ %66, %60 ], [ %58, %57 ]
  %62 = phi i64 [ %67, %60 ], [ %32, %57 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61
  %64 = bitcast %"struct.std::__1::pair"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %61, i32 1
  store i8 0, i8* %65, align 8
  %66 = add nuw nsw i64 %61, 1
  %67 = add i64 %62, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %60, !llvm.loop !46

69:                                               ; preds = %60, %57
  %70 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.141"* %0, %"struct.std::__1::pair"* %30, i32 %17, %"struct.std::__1::pair"* null) #13
  br label %71

71:                                               ; preds = %69, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.141"*, %"struct.std::__1::pair"*, i32, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.141", align 8
  %6 = bitcast %"class.WTF::HashTable.141"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.141"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.141"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.141"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %23 = ptrtoint %"struct.std::__1::pair"* %22 to i64
  br label %71

24:                                               ; preds = %119
  %25 = bitcast %"class.WTF::HashTable.141"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.141"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %120, %24 ]
  %33 = phi %"struct.std::__1::pair"* [ null, %16 ], [ %123, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %121, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.std::__1::pair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 %42
  %44 = bitcast %"struct.std::__1::pair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.std::__1::pair"* %33

71:                                               ; preds = %21, %119
  %72 = phi i64 [ %120, %119 ], [ %23, %21 ]
  %73 = phi i32 [ %121, %119 ], [ %13, %21 ]
  %74 = phi %"struct.std::__1::pair"* [ %122, %119 ], [ %22, %21 ]
  %75 = phi %"struct.std::__1::pair"* [ %123, %119 ], [ null, %21 ]
  %76 = phi i32 [ %124, %119 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 %77, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = and i1 %81, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %80, inttoptr (i64 -1 to %"class.WTF::StringImpl"*)
  %87 = or i1 %86, %85
  br i1 %87, label %119, label %88

88:                                               ; preds = %71
  %89 = call { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.141"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %78) #13
  %90 = extractvalue { %"struct.std::__1::pair"*, i8 } %89, 0
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #13
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = bitcast %"struct.std::__1::pair"* %78 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair"* %90 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 0, i32 1
  %112 = load i8, i8* %82, align 8
  store i8 %112, i8* %111, align 8
  %113 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 %77
  %115 = icmp eq %"struct.std::__1::pair"* %114, %3
  %116 = select i1 %115, %"struct.std::__1::pair"* %90, %"struct.std::__1::pair"* %75
  %117 = load i32, i32* %12, align 8
  %118 = ptrtoint %"struct.std::__1::pair"* %113 to i64
  br label %119

119:                                              ; preds = %71, %107
  %120 = phi i64 [ %72, %71 ], [ %118, %107 ]
  %121 = phi i32 [ %73, %71 ], [ %117, %107 ]
  %122 = phi %"struct.std::__1::pair"* [ %74, %71 ], [ %113, %107 ]
  %123 = phi %"struct.std::__1::pair"* [ %75, %71 ], [ %116, %107 ]
  %124 = add i32 %76, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SB_SC_EES6_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.141"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %2, %15
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 15
  %23 = xor i32 %22, -1
  %24 = add nsw i32 %23, %21
  %25 = lshr i32 %24, 10
  %26 = xor i32 %25, %24
  %27 = mul nsw i32 %26, 9
  %28 = lshr i32 %27, 6
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 11
  %31 = xor i32 %30, -1
  %32 = add i32 %29, %31
  %33 = lshr i32 %32, 16
  %34 = xor i32 %33, %32
  %35 = zext i32 %18 to i64
  %36 = mul i64 %35, 5146158508761418231
  %37 = zext i32 %34 to i64
  %38 = mul i64 %37, -682818954288075998
  %39 = add i64 %38, %36
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = and i32 %7, %41
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43
  %45 = ptrtoint %"struct.std::__1::pair"* %44 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %43, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %48, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %17
  %54 = xor i32 %41, -1
  %55 = lshr i64 %39, 55
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, %54
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %76

68:                                               ; preds = %94
  %69 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  br label %70

70:                                               ; preds = %68, %17
  %71 = phi i64 [ %45, %17 ], [ %69, %68 ]
  %72 = phi %"struct.std::__1::pair"* [ null, %17 ], [ %95, %68 ]
  %73 = icmp eq %"struct.std::__1::pair"* %72, null
  %74 = ptrtoint %"struct.std::__1::pair"* %72 to i64
  %75 = select i1 %73, i64 %71, i64 %74
  br label %109

76:                                               ; preds = %53, %94
  %77 = phi %"struct.std::__1::pair"* [ null, %53 ], [ %95, %94 ]
  %78 = phi i8* [ %49, %53 ], [ %105, %94 ]
  %79 = phi %"class.WTF::StringImpl"* [ %47, %53 ], [ %103, %94 ]
  %80 = phi i64 [ %45, %53 ], [ %101, %94 ]
  %81 = phi %"struct.std::__1::pair"* [ %44, %53 ], [ %100, %94 ]
  %82 = phi i64 [ %43, %53 ], [ %99, %94 ]
  %83 = phi i64 [ 0, %53 ], [ %97, %94 ]
  %84 = bitcast %"struct.std::__1::pair"* %81 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, inttoptr (i64 -1 to i8*)
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"* %88) #13
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = load i8, i8* %78, align 8
  %92 = load i8, i8* %19, align 8
  %93 = icmp eq i8 %91, %92
  br i1 %93, label %109, label %94

94:                                               ; preds = %76, %87, %90
  %95 = phi %"struct.std::__1::pair"* [ %77, %87 ], [ %77, %90 ], [ %81, %76 ]
  %96 = icmp eq i64 %83, 0
  %97 = select i1 %96, i64 %67, i64 %83
  %98 = add i64 %97, %82
  %99 = and i64 %98, %8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99
  %101 = ptrtoint %"struct.std::__1::pair"* %100 to i64
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 %99, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 0
  %108 = and i1 %104, %107
  br i1 %108, label %68, label %76

109:                                              ; preds = %90, %70
  %110 = phi i64 [ %75, %70 ], [ %80, %90 ]
  %111 = phi i8 [ 0, %70 ], [ 1, %90 ]
  %112 = inttoptr i64 %110 to %"struct.std::__1::pair"*
  %113 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %112, 0
  %114 = insertvalue { %"struct.std::__1::pair"*, i8 } %113, i8 %111, 1
  ret { %"struct.std::__1::pair"*, i8 } %114
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, i8 } @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS9_SB_SC_EERKS6_SI_EENS_18HashTableAddResultISD_S6_EEOT0_OT1_(%"class.WTF::HashTable.141"*, %"struct.std::__1::pair"* dereferenceable(16), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.141"* %0, %"struct.std::__1::pair"* null)
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.std::__1::pair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 15
  %30 = xor i32 %29, -1
  %31 = add nsw i32 %30, %28
  %32 = lshr i32 %31, 10
  %33 = xor i32 %32, %31
  %34 = mul nsw i32 %33, 9
  %35 = lshr i32 %34, 6
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 11
  %38 = xor i32 %37, -1
  %39 = add i32 %36, %38
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = zext i32 %25 to i64
  %43 = mul i64 %42, 5146158508761418231
  %44 = zext i32 %41 to i64
  %45 = mul i64 %44, -682818954288075998
  %46 = add i64 %45, %43
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = and i32 %14, %48
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %50, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %116, label %59

59:                                               ; preds = %24
  %60 = xor i32 %48, -1
  %61 = lshr i64 %46, 55
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, %60
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %59, %91
  %75 = phi i8* [ %55, %59 ], [ %101, %91 ]
  %76 = phi %"class.WTF::StringImpl"* [ %53, %59 ], [ %99, %91 ]
  %77 = phi %"struct.std::__1::pair"* [ %51, %59 ], [ %97, %91 ]
  %78 = phi %"struct.std::__1::pair"* [ null, %59 ], [ %92, %91 ]
  %79 = phi i64 [ %50, %59 ], [ %96, %91 ]
  %80 = phi i64 [ 0, %59 ], [ %94, %91 ]
  %81 = bitcast %"struct.std::__1::pair"* %77 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, inttoptr (i64 -1 to i8*)
  br i1 %83, label %91, label %84

84:                                               ; preds = %74
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %85) #13
  br i1 %86, label %87, label %91

87:                                               ; preds = %84
  %88 = load i8, i8* %75, align 8
  %89 = load i8, i8* %26, align 8
  %90 = icmp eq i8 %88, %89
  br i1 %90, label %172, label %91

91:                                               ; preds = %74, %84, %87
  %92 = phi %"struct.std::__1::pair"* [ %78, %87 ], [ %77, %74 ], [ %78, %84 ]
  %93 = icmp eq i64 %80, 0
  %94 = select i1 %93, i64 %73, i64 %80
  %95 = add i64 %94, %79
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %96, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = and i1 %100, %103
  br i1 %104, label %105, label %74

105:                                              ; preds = %91
  %106 = icmp eq %"struct.std::__1::pair"* %92, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %105
  %108 = bitcast %"struct.std::__1::pair"* %92 to i64*
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 1
  store i8 0, i8* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2147483647
  %113 = and i32 %112, 2147483647
  %114 = and i32 %111, -2147483648
  %115 = or i32 %113, %114
  store i32 %115, i32* %110, align 8
  br label %116

116:                                              ; preds = %24, %105, %107
  %117 = phi %"struct.std::__1::pair"* [ %92, %107 ], [ %97, %105 ], [ %51, %24 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #13
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !4

135:                                              ; preds = %126
  tail call void @llvm.trap() #13
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %138

138:                                              ; preds = %136, %121, %116
  %139 = ptrtoint %"class.WTF::StringImpl"* %119 to i64
  %140 = bitcast %"struct.std::__1::pair"* %117 to i64*
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #13
  br label %157

157:                                              ; preds = %138, %153, %156
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %159 = load i8, i8* %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 1
  store i8 %159, i8* %160, align 8
  %161 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %157
  %171 = tail call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.141"* %0, %"struct.std::__1::pair"* %117)
  br label %172

172:                                              ; preds = %87, %157, %170
  %173 = phi i8 [ 1, %157 ], [ 1, %170 ], [ 0, %87 ]
  %174 = phi %"struct.std::__1::pair"* [ %117, %157 ], [ %171, %170 ], [ %77, %87 ]
  %175 = insertvalue { %"struct.std::__1::pair"*, i8 } undef, %"struct.std::__1::pair"* %174, 0
  %176 = insertvalue { %"struct.std::__1::pair"*, i8 } %175, i8 %173, 1
  ret { %"struct.std::__1::pair"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.141"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.141", %"class.WTF::HashTable.141"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEEEEPKcv, i64 0, i64 0)) #13
  %36 = bitcast i8* %35 to %"struct.std::__1::pair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45
  %48 = bitcast %"struct.std::__1::pair"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %45, i32 1
  store i8 0, i8* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50
  %52 = bitcast %"struct.std::__1::pair"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %50, i32 1
  store i8 0, i8* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54
  %56 = bitcast %"struct.std::__1::pair"* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %54, i32 1
  store i8 0, i8* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58
  %60 = bitcast %"struct.std::__1::pair"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %58, i32 1
  store i8 0, i8* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69
  %72 = bitcast %"struct.std::__1::pair"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %69, i32 1
  store i8 0, i8* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !48

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.std::__1::pair"* @_ZN3WTF9HashTableINSt3__14pairINS_6StringEN5blink18IntegrityAlgorithmEEES6_NS_17IdentityExtractorENS_8PairHashIS3_S5_EENS_10HashTraitsIS6_EESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSE_(%"class.WTF::HashTable.141"* %0, %"struct.std::__1::pair"* %36, i32 %32, %"struct.std::__1::pair"* %1) #13
  ret %"struct.std::__1::pair"* %78
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink8Document35HaveScriptBlockingStylesheetsLoadedEv(%"class.blink::Document"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8DocumentEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"**
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = ptrtoint %"class.blink::Document"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #13
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #13
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 -1, i32 192
  %20 = bitcast %"class.blink::Member.1278"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13PendingScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PendingScript"*
  %4 = bitcast i8* %1 to void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)**, void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::PendingScript"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PendingScript"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Resource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Resource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Resource"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA60_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [60 x i8]* dereferenceable(60)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [60 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #13
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEPKcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = load i8*, i8** %2, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #13
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase.1949"*
  tail call void @_ZNK5blink14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.1949"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.1949"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase.1949", %"class.blink::PersistentBase.1949"* %0, i64 0, i32 0
  %5 = load %"class.blink::ScriptElementBase"*, %"class.blink::ScriptElementBase"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #13
  %7 = icmp eq %"class.blink::ScriptElementBase"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ScriptElementBase"* %5 to i8*
  %10 = ptrtoint %"class.blink::ScriptElementBase"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #13, !range !2
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #13
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ScriptElementBase"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ScriptElementBase"*)**
  %21 = load void (%"class.blink::ScriptElementBase"*)*, void (%"class.blink::ScriptElementBase"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ScriptElementBase"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ScriptElementBase"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ScriptElementBase"* %12) #13
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.1948"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.1948"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #13
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !4

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #13
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.1949"**
  store %"class.blink::PersistentBase.1949"* %11, %"class.blink::PersistentBase.1949"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17ScriptElementBaseELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17ScriptElementBaseEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !4

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #13
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA44_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [44 x i8]* dereferenceable(44)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds [44 x i8], [44 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [44 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #13
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA50_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [50 x i8]* dereferenceable(50)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #13
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [50 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #13
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #13
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #13
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #13
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare void @_ZN5blink29ModulePendingScriptTreeClientC1Ev(%"class.blink::ModulePendingScriptTreeClient"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16ModuleTreeClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16ModuleTreeClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ModuleTreeClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ModuleTreeClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleTreeClient"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleTreeClient"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ModuleTreeClient"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16ModuleTreeClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ModuleTreeClient"*
  %3 = bitcast i8* %0 to void (%"class.blink::ModuleTreeClient"*)***
  %4 = load void (%"class.blink::ModuleTreeClient"*)**, void (%"class.blink::ModuleTreeClient"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ModuleTreeClient"*)*, void (%"class.blink::ModuleTreeClient"*)** %4, i64 1
  %6 = load void (%"class.blink::ModuleTreeClient"*)*, void (%"class.blink::ModuleTreeClient"*)** %5, align 8
  tail call void %6(%"class.blink::ModuleTreeClient"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16ModuleTreeClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink19ModulePendingScriptC1EPNS_17ScriptElementBaseEPNS_29ModulePendingScriptTreeClientEb(%"class.blink::ModulePendingScript"*, %"class.blink::ScriptElementBase"*, %"class.blink::ModulePendingScriptTreeClient"*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13PendingScriptEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13PendingScriptEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13PendingScriptEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13PendingScriptEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::PendingScript"*
  %3 = bitcast i8* %0 to void (%"class.blink::PendingScript"*)***
  %4 = load void (%"class.blink::PendingScript"*)**, void (%"class.blink::PendingScript"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::PendingScript"*)*, void (%"class.blink::PendingScript"*)** %4, i64 1
  %6 = load void (%"class.blink::PendingScript"*)*, void (%"class.blink::PendingScript"*)** %5, align 8
  tail call void %6(%"class.blink::PendingScript"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13PendingScriptEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 24, i32 33}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_: argument 0"}
!18 = distinct !{!18, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_"}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!24 = distinct !{!24, !25, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_: argument 0"}
!28 = distinct !{!28, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_"}
!29 = !{!30, !32, !34}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!34 = distinct !{!34, !35, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_: argument 0"}
!38 = distinct !{!38, !"_ZN5blink22WrapPersistentInternalINS_17ScriptElementBaseEEENS_10PersistentIT_EEPS3_"}
!39 = !{!40, !42, !44}
!40 = distinct !{!40, !41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17ScriptElementBaseEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!42 = distinct !{!42, !43, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8BindOnceIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!44 = distinct !{!44, !45, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF4BindIMN5blink17ScriptElementBaseEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!46 = distinct !{!46, !47}
!47 = !{!"llvm.loop.unroll.disable"}
!48 = distinct !{!48, !47}
