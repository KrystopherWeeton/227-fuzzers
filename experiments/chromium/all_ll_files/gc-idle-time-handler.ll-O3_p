; ModuleID = '../../v8/src/heap/gc-idle-time-handler.cc'
source_filename = "../../v8/src/heap/gc-idle-time-handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::GCIdleTimeHeapState" = type { i64, i8 }
%"class.v8::internal::GCIdleTimeHandler" = type { i8 }

@_ZN2v88internal17GCIdleTimeHandler22kConservativeTimeRatioE = hidden local_unnamed_addr constant double 9.000000e-01, align 8
@.str = private unnamed_addr constant [21 x i8] c"size_of_objects=%zu \00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"incremental_marking_stopped=%d \00", align 1
@_ZN2v88internal24FLAG_incremental_markingE = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19GCIdleTimeHeapState5PrintEv(%"class.v8::internal::GCIdleTimeHeapState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::GCIdleTimeHeapState", %"class.v8::internal::GCIdleTimeHeapState"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 %3) #4
  %4 = getelementptr inbounds %"class.v8::internal::GCIdleTimeHeapState", %"class.v8::internal::GCIdleTimeHeapState"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 %6) #4
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2v88internal17GCIdleTimeHandler23EstimateMarkingStepSizeEdd(double, double) local_unnamed_addr #2 align 2 {
  %3 = fcmp oeq double %1, 0.000000e+00
  %4 = select i1 %3, double 1.024000e+05, double %1
  %5 = fmul double %4, %0
  %6 = fcmp ult double %5, 0x41C5E00000000000
  %7 = fmul double %5, 9.000000e-01
  %8 = fptoui double %7 to i64
  %9 = select i1 %6, i64 %8, i64 734003200
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZN2v88internal17GCIdleTimeHandler7ComputeEdNS0_19GCIdleTimeHeapStateE(%"class.v8::internal::GCIdleTimeHandler"* nocapture readnone, double, i64, i8) local_unnamed_addr #3 align 2 {
  %5 = fptosi double %1 to i32
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %14, label %7

7:                                                ; preds = %4
  %8 = load i8, i8* @_ZN2v88internal24FLAG_incremental_markingE, align 1, !range !2
  %9 = icmp ne i8 %8, 0
  %10 = and i8 %3, 1
  %11 = icmp eq i8 %10, 0
  %12 = and i1 %11, %9
  %13 = zext i1 %12 to i8
  ret i8 %13

14:                                               ; preds = %4
  ret i8 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal17GCIdleTimeHandler7EnabledEv(%"class.v8::internal::GCIdleTimeHandler"* nocapture readnone) local_unnamed_addr #3 align 2 {
  %2 = load i8, i8* @_ZN2v88internal24FLAG_incremental_markingE, align 1, !range !2
  %3 = icmp ne i8 %2, 0
  ret i1 %3
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
