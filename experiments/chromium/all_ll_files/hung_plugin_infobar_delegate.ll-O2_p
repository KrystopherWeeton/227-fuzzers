; ModuleID = '../../chrome/browser/plugins/hung_plugin_infobar_delegate.cc'
source_filename = "../../chrome/browser/plugins/hung_plugin_infobar_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::VectorIcon" = type opaque
%class.HungPluginInfoBarDelegate = type { %class.ConfirmInfoBarDelegate.base, %class.HungPluginTabHelper*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.ConfirmInfoBarDelegate.base = type { %"class.infobars::InfoBarDelegate.base" }
%"class.infobars::InfoBarDelegate.base" = type <{ i32 (...)**, %"class.infobars::InfoBar"*, i32 }>
%"class.infobars::InfoBar" = type { %"class.gfx::AnimationDelegate", %"class.infobars::InfoBarManager"*, %"class.std::__1::unique_ptr", %"class.infobars::InfoBarContainer"*, %"class.std::__1::unique_ptr.11", %"class.gfx::SlideAnimation", i32, i32 }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%"class.infobars::InfoBarManager" = type { i32 (...)**, %"class.std::__1::vector", i8, [7 x i8], %"class.base::ObserverList" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.infobars::InfoBar"**, %"class.infobars::InfoBar"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.infobars::InfoBar"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.1", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.3" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.infobars::InfoBarDelegate"* }
%"class.infobars::InfoBarDelegate" = type <{ i32 (...)**, %"class.infobars::InfoBar"*, i32, [4 x i8] }>
%"class.infobars::InfoBarContainer" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.gfx::AnimationDelegate"* }
%"class.gfx::SlideAnimation" = type { %"class.gfx::LinearAnimation.base", %"class.gfx::AnimationDelegate"*, i32, %"class.absl::optional", double, double, double, %"class.base::TimeDelta", double }
%"class.gfx::LinearAnimation.base" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8 }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr, %"class.base::TimeTicks" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.gfx::AnimationContainer"* }
%"class.gfx::AnimationContainer" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.HungPluginTabHelper = type { %"class.content::WebContentsObserver", %"class.infobars::InfoBarManager::Observer", %"class.content::WebContentsUserData.25", %"class.std::__1::map.26", %"class.base::ScopedMultiSourceObservation" }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.infobars::InfoBarManager::Observer" = type { i32 (...)** }
%"class.content::WebContentsUserData.25" = type { %"class.base::SupportsUserData::Data" }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::ScopedMultiSourceObservation" = type { %"class.infobars::InfoBarManager::Observer"*, %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.infobars::InfoBarManager"**, %"class.infobars::InfoBarManager"**, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.infobars::InfoBarManager"** }
%"class.infobars::ContentInfoBarManager" = type <{ %"class.infobars::InfoBarManager", %"class.content::WebContentsObserver", %"class.content::WebContentsUserData", i8, [7 x i8] }>
%"class.content::WebContentsUserData" = type { %"class.base::SupportsUserData::Data" }
%class.ConfirmInfoBarDelegate = type { %"class.infobars::InfoBarDelegate.base", [4 x i8] }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string.62", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.71" }
%"class.std::__1::basic_string.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.65 }
%union.anon.65 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GURL* }
%"struct.infobars::InfoBarDelegate::NavigationDetails" = type <{ i32, i8, i8, i8, i8, i8, [3 x i8] }>
%class.HungRendererInfoBarDelegate = type opaque
%"class.blocked_content::PopupBlockedInfoBarDelegate" = type opaque
%class.ThemeInstalledInfoBarDelegate = type opaque
%"class.translate::TranslateInfoBarDelegate" = type opaque

@_ZTV25HungPluginInfoBarDelegate = hidden unnamed_addr constant { [30 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.HungPluginInfoBarDelegate*)* @_ZN25HungPluginInfoBarDelegateD2Ev to i8*), i8* bitcast (void (%class.HungPluginInfoBarDelegate*)* @_ZN25HungPluginInfoBarDelegateD0Ev to i8*), i8* bitcast (i32 (%class.HungPluginInfoBarDelegate*)* @_ZNK25HungPluginInfoBarDelegate13GetIdentifierEv to i8*), i8* bitcast (i32 (%class.ConfirmInfoBarDelegate*)* @_ZNK22ConfirmInfoBarDelegate24GetInfoBarAutomationTypeEv to i8*), i8* bitcast (i32 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate9GetIconIdEv to i8*), i8* bitcast (%"struct.gfx::VectorIcon"* (%class.HungPluginInfoBarDelegate*)* @_ZNK25HungPluginInfoBarDelegate13GetVectorIconEv to i8*), i8* bitcast (void ()* @_ZNK8infobars15InfoBarDelegate7GetIconEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate11GetLinkTextEv to i8*), i8* bitcast (void (%class.GURL*, %"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate10GetLinkURLEv to i8*), i8* bitcast (i1 (%class.ConfirmInfoBarDelegate*, %"class.infobars::InfoBarDelegate"*)* @_ZNK22ConfirmInfoBarDelegate14EqualsDelegateEPN8infobars15InfoBarDelegateE to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*, %"struct.infobars::InfoBarDelegate::NavigationDetails"*)* @_ZNK8infobars15InfoBarDelegate12ShouldExpireERKNS0_17NavigationDetailsE to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*, i32)* @_ZN8infobars15InfoBarDelegate11LinkClickedE21WindowOpenDisposition to i8*), i8* bitcast (void (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate16InfoBarDismissedEv to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate11IsCloseableEv to i8*), i8* bitcast (i1 (%"class.infobars::InfoBarDelegate"*)* @_ZNK8infobars15InfoBarDelegate13ShouldAnimateEv to i8*), i8* bitcast (%class.ConfirmInfoBarDelegate* (%class.ConfirmInfoBarDelegate*)* @_ZN22ConfirmInfoBarDelegate24AsConfirmInfoBarDelegateEv to i8*), i8* bitcast (%class.HungRendererInfoBarDelegate* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate29AsHungRendererInfoBarDelegateEv to i8*), i8* bitcast (%"class.blocked_content::PopupBlockedInfoBarDelegate"* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate29AsPopupBlockedInfoBarDelegateEv to i8*), i8* bitcast (%class.ThemeInstalledInfoBarDelegate* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate29AsThemePreviewInfobarDelegateEv to i8*), i8* bitcast (%"class.translate::TranslateInfoBarDelegate"* (%"class.infobars::InfoBarDelegate"*)* @_ZN8infobars15InfoBarDelegate26AsTranslateInfoBarDelegateEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %class.ConfirmInfoBarDelegate*)* @_ZNK22ConfirmInfoBarDelegate12GetTitleTextEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %class.HungPluginInfoBarDelegate*)* @_ZNK25HungPluginInfoBarDelegate14GetMessageTextEv to i8*), i8* bitcast (i32 (%class.ConfirmInfoBarDelegate*)* @_ZNK22ConfirmInfoBarDelegate23GetMessageElideBehaviorEv to i8*), i8* bitcast (i32 (%class.HungPluginInfoBarDelegate*)* @_ZNK25HungPluginInfoBarDelegate10GetButtonsEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %class.HungPluginInfoBarDelegate*, i32)* @_ZNK25HungPluginInfoBarDelegate14GetButtonLabelEN22ConfirmInfoBarDelegate13InfoBarButtonE to i8*), i8* bitcast (i1 (%class.ConfirmInfoBarDelegate*)* @_ZNK22ConfirmInfoBarDelegate25OKButtonTriggersUACPromptEv to i8*), i8* bitcast (i1 (%class.HungPluginInfoBarDelegate*)* @_ZN25HungPluginInfoBarDelegate6AcceptEv to i8*), i8* bitcast (i1 (%class.ConfirmInfoBarDelegate*)* @_ZN22ConfirmInfoBarDelegate6CancelEv to i8*)] }, align 8
@kExtensionCrashedIcon = external global %"struct.gfx::VectorIcon", align 1

@_ZN25HungPluginInfoBarDelegateC1EP19HungPluginTabHelperiRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE = hidden unnamed_addr alias void (%class.HungPluginInfoBarDelegate*, %class.HungPluginTabHelper*, i32, %"class.std::__1::basic_string"*), void (%class.HungPluginInfoBarDelegate*, %class.HungPluginTabHelper*, i32, %"class.std::__1::basic_string"*)* @_ZN25HungPluginInfoBarDelegateC2EP19HungPluginTabHelperiRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE
@_ZN25HungPluginInfoBarDelegateD1Ev = hidden unnamed_addr alias void (%class.HungPluginInfoBarDelegate*), void (%class.HungPluginInfoBarDelegate*)* @_ZN25HungPluginInfoBarDelegateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.infobars::InfoBar"* @_ZN25HungPluginInfoBarDelegate6CreateEPN8infobars21ContentInfoBarManagerEP19HungPluginTabHelperiRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEE(%"class.infobars::ContentInfoBarManager"*, %class.HungPluginTabHelper*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.infobars::ContentInfoBarManager", %"class.infobars::ContentInfoBarManager"* %0, i64 0, i32 0
  %6 = tail call i8* @_Znwm(i64 88) #9
  %7 = bitcast i8* %6 to %class.ConfirmInfoBarDelegate*
  tail call void @_ZN22ConfirmInfoBarDelegateC2Ev(%class.ConfirmInfoBarDelegate* nonnull %7) #10
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV25HungPluginInfoBarDelegate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 24
  %10 = bitcast i8* %9 to %class.HungPluginTabHelper**
  store %class.HungPluginTabHelper* %1, %class.HungPluginTabHelper** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 32
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 40
  %14 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  tail call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %14, i32 8009, %"class.std::__1::basic_string"* dereferenceable(24) %3) #10
  %15 = getelementptr inbounds i8, i8* %6, i64 64
  %16 = bitcast i8* %15 to %"class.std::__1::basic_string"*
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %16, i32 8010) #10
  %17 = tail call %"class.infobars::InfoBar"* @_Z20CreateConfirmInfoBarNSt3__110unique_ptrI22ConfirmInfoBarDelegateNS_14default_deleteIS1_EEEE(%class.ConfirmInfoBarDelegate* nonnull %7) #10
  %18 = tail call %"class.infobars::InfoBar"* @_ZN8infobars14InfoBarManager10AddInfoBarENSt3__110unique_ptrINS_7InfoBarENS1_14default_deleteIS3_EEEEb(%"class.infobars::InfoBarManager"* %5, %"class.infobars::InfoBar"* %17, i1 zeroext false) #10
  ret %"class.infobars::InfoBar"* %18
}

declare %"class.infobars::InfoBar"* @_ZN8infobars14InfoBarManager10AddInfoBarENSt3__110unique_ptrINS_7InfoBarENS1_14default_deleteIS3_EEEEb(%"class.infobars::InfoBarManager"*, %"class.infobars::InfoBar"*, i1 zeroext) local_unnamed_addr #1

declare %"class.infobars::InfoBar"* @_Z20CreateConfirmInfoBarNSt3__110unique_ptrI22ConfirmInfoBarDelegateNS_14default_deleteIS1_EEEE(%class.ConfirmInfoBarDelegate*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25HungPluginInfoBarDelegateC2EP19HungPluginTabHelperiRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(%class.HungPluginInfoBarDelegate*, %class.HungPluginTabHelper*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %class.HungPluginInfoBarDelegate* %0 to %class.ConfirmInfoBarDelegate*
  tail call void @_ZN22ConfirmInfoBarDelegateC2Ev(%class.ConfirmInfoBarDelegate* %5) #10
  %6 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV25HungPluginInfoBarDelegate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 1
  store %class.HungPluginTabHelper* %1, %class.HungPluginTabHelper** %7, align 8
  %8 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 3
  tail call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret %9, i32 8009, %"class.std::__1::basic_string"* dereferenceable(24) %3) #10
  %10 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 4
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %10, i32 8010) #10
  ret void
}

declare void @_ZN22ConfirmInfoBarDelegateC2Ev(%class.ConfirmInfoBarDelegate*) unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* sret, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25HungPluginInfoBarDelegateD2Ev(%class.HungPluginInfoBarDelegate*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV25HungPluginInfoBarDelegate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %class.HungPluginInfoBarDelegate* %0 to %class.ConfirmInfoBarDelegate*
  tail call void @_ZN22ConfirmInfoBarDelegateD2Ev(%class.ConfirmInfoBarDelegate* %21) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN22ConfirmInfoBarDelegateD2Ev(%class.ConfirmInfoBarDelegate*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25HungPluginInfoBarDelegateD0Ev(%class.HungPluginInfoBarDelegate*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*] }, { [30 x i8*] }* @_ZTV25HungPluginInfoBarDelegate, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %17
  %21 = bitcast %class.HungPluginInfoBarDelegate* %0 to %class.ConfirmInfoBarDelegate*
  tail call void @_ZN22ConfirmInfoBarDelegateD2Ev(%class.ConfirmInfoBarDelegate* %21) #10
  %22 = bitcast %class.HungPluginInfoBarDelegate* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK25HungPluginInfoBarDelegate13GetIdentifierEv(%class.HungPluginInfoBarDelegate* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %"struct.gfx::VectorIcon"* @_ZNK25HungPluginInfoBarDelegate13GetVectorIconEv(%class.HungPluginInfoBarDelegate* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"struct.gfx::VectorIcon"* @kExtensionCrashedIcon
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25HungPluginInfoBarDelegate14GetMessageTextEv(%"class.std::__1::basic_string"* noalias sret, %class.HungPluginInfoBarDelegate* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %1, i64 0, i32 3
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %25) #11
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #9
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = sub i64 %41, %52
  %54 = getelementptr i16, i16* %13, i64 %52
  %55 = getelementptr i16, i16* %40, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %13, i64 %64
  %67 = getelementptr i16, i16* %40, i64 %64
  %68 = bitcast i16* %66 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !2
  %70 = getelementptr i16, i16* %66, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !2
  %73 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !5, !noalias !2
  %74 = getelementptr i16, i16* %67, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %13, i64 %76
  %78 = getelementptr i16, i16* %40, i64 %76
  %79 = bitcast i16* %77 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !2
  %81 = getelementptr i16, i16* %77, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !2
  %84 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !5, !noalias !2
  %85 = getelementptr i16, i16* %78, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %13, i64 %87
  %89 = getelementptr i16, i16* %40, i64 %87
  %90 = bitcast i16* %88 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !2
  %92 = getelementptr i16, i16* %88, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !2
  %95 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !5, !noalias !2
  %96 = getelementptr i16, i16* %89, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %13, i64 %98
  %100 = getelementptr i16, i16* %40, i64 %98
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !2
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !2
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !5, !noalias !2
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !7

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %13, i64 %116
  %119 = getelementptr i16, i16* %40, i64 %116
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !2
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !5, !noalias !2
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !9

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %53, %131 ]
  %135 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %55, %131 ]
  %137 = add i64 %134, -1
  %138 = and i64 %134, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i64 [ %146, %140 ], [ %134, %133 ]
  %142 = phi i16* [ %148, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %147, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %142, align 2
  store i16 %145, i16* %143, align 2
  %146 = add i64 %141, -1
  %147 = getelementptr inbounds i16, i16* %143, i64 1
  %148 = getelementptr inbounds i16, i16* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !11

151:                                              ; preds = %140, %133
  %152 = phi i64 [ %134, %133 ], [ %146, %140 ]
  %153 = phi i16* [ %135, %133 ], [ %148, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %147, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i64 [ %182, %156 ], [ %152, %151 ]
  %158 = phi i16* [ %184, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %183, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %158, align 2
  store i16 %160, i16* %159, align 2
  %161 = getelementptr inbounds i16, i16* %159, i64 1
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %159, i64 2
  %165 = getelementptr inbounds i16, i16* %158, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %159, i64 3
  %168 = getelementptr inbounds i16, i16* %158, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %159, i64 4
  %171 = getelementptr inbounds i16, i16* %158, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %159, i64 5
  %174 = getelementptr inbounds i16, i16* %158, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %159, i64 6
  %177 = getelementptr inbounds i16, i16* %158, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %159, i64 7
  %180 = getelementptr inbounds i16, i16* %158, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %157, -8
  %183 = getelementptr inbounds i16, i16* %159, i64 8
  %184 = getelementptr inbounds i16, i16* %158, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !12

186:                                              ; preds = %151, %156, %131, %8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK25HungPluginInfoBarDelegate10GetButtonsEv(%class.HungPluginInfoBarDelegate* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25HungPluginInfoBarDelegate14GetButtonLabelEN22ConfirmInfoBarDelegate13InfoBarButtonE(%"class.std::__1::basic_string"* noalias sret, %class.HungPluginInfoBarDelegate* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %1, i64 0, i32 4
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #10
  br label %187

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 11
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %20 = trunc i64 %16 to i8
  %21 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  store i8 %20, i8* %22, align 1
  br label %40

23:                                               ; preds = %12
  %24 = icmp ugt i64 %16, 9223372036854775791
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %26) #11
  unreachable

27:                                               ; preds = %23
  %28 = add nuw nsw i64 %16, 8
  %29 = and i64 %28, -8
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @abort() #11
  unreachable

32:                                               ; preds = %27
  %33 = shl i64 %29, 1
  %34 = tail call i8* @_Znwm(i64 %33) #9
  %35 = bitcast i8* %34 to i16*
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %34, i8** %36, align 8
  %37 = or i64 %29, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %39, align 8
  br label %40

40:                                               ; preds = %32, %18
  %41 = phi i16* [ %19, %18 ], [ %35, %32 ]
  %42 = add nuw nsw i64 %16, 1
  %43 = add i64 %16, 1
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %134, label %45

45:                                               ; preds = %40
  %46 = add i64 %16, 1
  %47 = getelementptr i16, i16* %41, i64 %46
  %48 = getelementptr i16, i16* %14, i64 %46
  %49 = icmp ult i16* %41, %48
  %50 = icmp ult i16* %14, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %45
  %53 = and i64 %43, -16
  %54 = sub i64 %42, %53
  %55 = getelementptr i16, i16* %14, i64 %53
  %56 = getelementptr i16, i16* %41, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %14, i64 %65
  %68 = getelementptr i16, i16* %41, i64 %65
  %69 = bitcast i16* %67 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !13
  %71 = getelementptr i16, i16* %67, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !13
  %74 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !16, !noalias !13
  %75 = getelementptr i16, i16* %68, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !16, !noalias !13
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %14, i64 %77
  %79 = getelementptr i16, i16* %41, i64 %77
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !13
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !13
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !16, !noalias !13
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !16, !noalias !13
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %14, i64 %88
  %90 = getelementptr i16, i16* %41, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !13
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !13
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !16, !noalias !13
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !16, !noalias !13
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %14, i64 %99
  %101 = getelementptr i16, i16* %41, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !13
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !13
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !16, !noalias !13
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !16, !noalias !13
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !18

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %14, i64 %117
  %120 = getelementptr i16, i16* %41, i64 %117
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !13
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !13
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !16, !noalias !13
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !16, !noalias !13
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !19

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %43, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %45, %40
  %135 = phi i64 [ %42, %45 ], [ %42, %40 ], [ %54, %132 ]
  %136 = phi i16* [ %14, %45 ], [ %14, %40 ], [ %55, %132 ]
  %137 = phi i16* [ %41, %45 ], [ %41, %40 ], [ %56, %132 ]
  %138 = add i64 %135, -1
  %139 = and i64 %135, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i64 [ %147, %141 ], [ %135, %134 ]
  %143 = phi i16* [ %149, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %148, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %143, align 2
  store i16 %146, i16* %144, align 2
  %147 = add i64 %142, -1
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !20

152:                                              ; preds = %141, %134
  %153 = phi i64 [ %135, %134 ], [ %147, %141 ]
  %154 = phi i16* [ %136, %134 ], [ %149, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %148, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %183, %157 ], [ %153, %152 ]
  %159 = phi i16* [ %185, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %184, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %159, align 2
  store i16 %161, i16* %160, align 2
  %162 = getelementptr inbounds i16, i16* %160, i64 1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %160, i64 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %160, i64 3
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %160, i64 4
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %160, i64 5
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %160, i64 6
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %160, i64 7
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %158, -8
  %184 = getelementptr inbounds i16, i16* %160, i64 8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !21

187:                                              ; preds = %152, %157, %132, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN25HungPluginInfoBarDelegate6AcceptEv(%class.HungPluginInfoBarDelegate* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 1
  %3 = load %class.HungPluginTabHelper*, %class.HungPluginTabHelper** %2, align 8
  %4 = getelementptr inbounds %class.HungPluginInfoBarDelegate, %class.HungPluginInfoBarDelegate* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN19HungPluginTabHelper10KillPluginEi(%class.HungPluginTabHelper* %3, i32 %5) #10
  ret i1 true
}

declare void @_ZN19HungPluginTabHelper10KillPluginEi(%class.HungPluginTabHelper*, i32) local_unnamed_addr #1

declare i32 @_ZNK22ConfirmInfoBarDelegate24GetInfoBarAutomationTypeEv(%class.ConfirmInfoBarDelegate*) unnamed_addr #1

declare i32 @_ZNK8infobars15InfoBarDelegate9GetIconIdEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare void @_ZNK8infobars15InfoBarDelegate7GetIconEv() unnamed_addr

declare void @_ZNK8infobars15InfoBarDelegate11GetLinkTextEv(%"class.std::__1::basic_string"* sret, %"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare void @_ZNK8infobars15InfoBarDelegate10GetLinkURLEv(%class.GURL* sret, %"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare zeroext i1 @_ZNK22ConfirmInfoBarDelegate14EqualsDelegateEPN8infobars15InfoBarDelegateE(%class.ConfirmInfoBarDelegate*, %"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare zeroext i1 @_ZNK8infobars15InfoBarDelegate12ShouldExpireERKNS0_17NavigationDetailsE(%"class.infobars::InfoBarDelegate"*, %"struct.infobars::InfoBarDelegate::NavigationDetails"* dereferenceable(12)) unnamed_addr #1

declare zeroext i1 @_ZN8infobars15InfoBarDelegate11LinkClickedE21WindowOpenDisposition(%"class.infobars::InfoBarDelegate"*, i32) unnamed_addr #1

declare void @_ZN8infobars15InfoBarDelegate16InfoBarDismissedEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare zeroext i1 @_ZNK8infobars15InfoBarDelegate11IsCloseableEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare zeroext i1 @_ZNK8infobars15InfoBarDelegate13ShouldAnimateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %class.ConfirmInfoBarDelegate* @_ZN22ConfirmInfoBarDelegate24AsConfirmInfoBarDelegateEv(%class.ConfirmInfoBarDelegate*) unnamed_addr #1

declare %class.HungRendererInfoBarDelegate* @_ZN8infobars15InfoBarDelegate29AsHungRendererInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %"class.blocked_content::PopupBlockedInfoBarDelegate"* @_ZN8infobars15InfoBarDelegate29AsPopupBlockedInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %class.ThemeInstalledInfoBarDelegate* @_ZN8infobars15InfoBarDelegate29AsThemePreviewInfobarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare %"class.translate::TranslateInfoBarDelegate"* @_ZN8infobars15InfoBarDelegate26AsTranslateInfoBarDelegateEv(%"class.infobars::InfoBarDelegate"*) unnamed_addr #1

declare void @_ZNK22ConfirmInfoBarDelegate12GetTitleTextEv(%"class.std::__1::basic_string"* sret, %class.ConfirmInfoBarDelegate*) unnamed_addr #1

declare i32 @_ZNK22ConfirmInfoBarDelegate23GetMessageElideBehaviorEv(%class.ConfirmInfoBarDelegate*) unnamed_addr #1

declare zeroext i1 @_ZNK22ConfirmInfoBarDelegate25OKButtonTriggersUACPromptEv(%class.ConfirmInfoBarDelegate*) unnamed_addr #1

declare zeroext i1 @_ZN22ConfirmInfoBarDelegate6CancelEv(%class.ConfirmInfoBarDelegate*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
