; ModuleID = '../../third_party/vulkan-deps/vulkan-loader/src/loader/extension_manual.c'
source_filename = "../../third_party/vulkan-deps/vulkan-loader/src/loader/extension_manual.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.VkPhysicalDevice_T = type opaque
%struct.VkExternalImageFormatPropertiesNV = type { %struct.VkImageFormatProperties, i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.loader_physical_device_tramp = type { %struct.loader_instance_dispatch_table*, %struct.loader_instance*, %struct.VkPhysicalDevice_T* }
%struct.loader_instance_dispatch_table = type { %struct.VkLayerInstanceDispatchTable_, [250 x i32 (%struct.VkPhysicalDevice_T*)*] }
%struct.VkLayerInstanceDispatchTable_ = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, i32 (i32*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkDevice_T = type opaque
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkDisplayPropertiesKHR = type { %struct.VkDisplayKHR_T*, i8*, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32 }
%struct.VkDisplayKHR_T = type opaque
%struct.VkDisplayPlanePropertiesKHR = type { %struct.VkDisplayKHR_T*, i32 }
%struct.VkDisplayModePropertiesKHR = type { %struct.VkDisplayModeKHR_T*, %struct.VkDisplayModeParametersKHR }
%struct.VkDisplayModeKHR_T = type opaque
%struct.VkDisplayModeParametersKHR = type { %struct.VkExtent2D, i32 }
%struct.VkDisplayModeCreateInfoKHR = type { i32, i8*, i32, %struct.VkDisplayModeParametersKHR }
%struct.VkDisplayPlaneCapabilitiesKHR = type { i32, %struct.VkOffset2D, %struct.VkOffset2D, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkOffset2D, %struct.VkOffset2D, %struct.VkExtent2D, %struct.VkExtent2D }
%struct.VkDisplaySurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.VkDisplayModeKHR_T*, i32, i32, i32, float, i32, %struct.VkExtent2D }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkVideoProfileKHR = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkVideoCapabilitiesKHR = type { i32, i8*, i32, i64, i64, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32 }
%struct.VkPhysicalDeviceVideoFormatInfoKHR = type { i32, i8*, i32, %struct.VkVideoProfilesKHR* }
%struct.VkVideoProfilesKHR = type { i32, i8*, i32, %struct.VkVideoProfileKHR* }
%struct.VkVideoFormatPropertiesKHR = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkPhysicalDeviceGroupProperties = type { i32, i8*, i32, [32 x %struct.VkPhysicalDevice_T*], i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalFenceInfo = type { i32, i8*, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPerformanceCounterKHR = type { i32, i8*, i32, i32, i32, [16 x i8] }
%struct.VkPerformanceCounterDescriptionKHR = type { i32, i8*, i32, [256 x i8], [256 x i8], [256 x i8] }
%struct.VkQueryPoolPerformanceCreateInfoKHR = type { i32, i8*, i32, i32, i32* }
%struct.VkPhysicalDeviceSurfaceInfo2KHR = type { i32, i8*, %struct.VkSurfaceKHR_T* }
%struct.VkSurfaceCapabilities2KHR = type { i32, i8*, %struct.VkSurfaceCapabilitiesKHR }
%struct.VkSurfaceFormat2KHR = type { i32, i8*, %struct.VkSurfaceFormatKHR }
%struct.VkDisplayProperties2KHR = type { i32, i8*, %struct.VkDisplayPropertiesKHR }
%struct.VkDisplayPlaneProperties2KHR = type { i32, i8*, %struct.VkDisplayPlanePropertiesKHR }
%struct.VkDisplayModeProperties2KHR = type { i32, i8*, %struct.VkDisplayModePropertiesKHR }
%struct.VkDisplayPlaneInfo2KHR = type { i32, i8*, %struct.VkDisplayModeKHR_T*, i32 }
%struct.VkDisplayPlaneCapabilities2KHR = type { i32, i8*, %struct.VkDisplayPlaneCapabilitiesKHR }
%struct.VkPhysicalDeviceFragmentShadingRateKHR = type { i32, i8*, i32, %struct.VkExtent2D }
%struct.VkDebugReportCallbackCreateInfoEXT = type { i32, i8*, i32, i32 (i32, i32, i64, i64, i32, i8*, i8*, i8*)*, i8* }
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkSurfaceCapabilities2EXT = type { i32, i8*, i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32, i32 }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkMultisamplePropertiesEXT = type { i32, i8*, %struct.VkExtent2D }
%struct.VkPhysicalDeviceToolPropertiesEXT = type { i32, i8*, [256 x i8], [256 x i8], i32, [256 x i8], [256 x i8] }
%struct.VkCooperativeMatrixPropertiesNV = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFramebufferMixedSamplesCombinationNV = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkHeadlessSurfaceCreateInfoEXT = type { i32, i8*, i32 }
%struct.loader_instance = type { %struct.loader_instance_dispatch_table*, i16, i16, i32, i32, %struct.loader_physical_device_term**, i32, %struct.loader_physical_device_tramp**, i32, %struct.VkPhysicalDeviceGroupProperties**, i32, %struct.VkPhysicalDeviceGroupProperties**, %struct.loader_instance*, i32, %struct.loader_icd_term*, %struct.loader_icd_tramp_list, [250 x %struct.loader_dispatch_hash_entry], [250 x %struct.loader_dispatch_hash_entry], %struct.loader_msg_callback_map_entry*, %struct.loader_layer_list, i8, %struct.loader_layer_list, %struct.loader_layer_list, %struct.VkInstance_T*, %struct.loader_extension_list, %union.loader_instance_extension_enables, %struct.VkLayerDbgFunctionNode_*, i32, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkDebugReportCallbackEXT_T**, i32, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkDebugUtilsMessengerEXT_T**, %struct.VkAllocationCallbacks, i8, i8, i8, i8, i8 }
%struct.loader_physical_device_term = type { %struct.loader_instance_dispatch_table*, %struct.loader_icd_term*, i8, %struct.VkPhysicalDevice_T* }
%struct.loader_icd_term = type { %struct.loader_scanned_icd*, %struct.loader_instance*, %struct.loader_device*, %struct.VkInstance_T*, %struct.loader_icd_term_dispatch, %struct.loader_icd_term*, [250 x i32 (%struct.VkPhysicalDevice_T*)*] }
%struct.loader_scanned_icd = type { i8*, i8*, i32, i32, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.loader_device = type { %struct.loader_dev_dispatch_table, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.loader_physical_device_term*, %struct.loader_layer_list, %struct.loader_layer_list, %struct.VkAllocationCallbacks, %struct.anon.1, %struct.loader_device* }
%struct.loader_dev_dispatch_table = type { %struct.VkLayerDispatchTable_, %struct.loader_dev_ext_dispatch_table }
%struct.VkLayerDispatchTable_ = type { void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)*, void (%struct.VkDevice_T*, i32, i32, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceGroupPresentCapabilitiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkAcquireNextImageInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32*, %struct.VkVideoGetMemoryPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionKHR_T*, i32, %struct.VkVideoBindMemoryKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkVideoSessionParametersKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionParametersUpdateInfoKHR*)*, void (%struct.VkDevice_T*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoBeginCodingInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoEndCodingInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoCodingControlInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoDecodeInfoKHR*)*, void (%struct.VkDevice_T*, i32, i32, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkWriteDescriptorSet*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkPipelineLayout_T*, i32, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplate_T**)*, void (%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplate_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSet_T*, %struct.VkDescriptorUpdateTemplate_T*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkImportFenceFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkFenceGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkAcquireProfilingLockInfoKHR*)*, void (%struct.VkDevice_T*)*, void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)*, void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)*, void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphore_T*, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*)*, void (%struct.VkCommandBuffer_T*, %struct.VkExtent2D*, i32*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, i64 (%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*, %struct.VkDeferredOperationKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineInfoKHR*, i32*, %struct.VkPipelineExecutablePropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableStatisticKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineExecutableInfoKHR*, i32*, %struct.VkPipelineExecutableInternalRepresentationKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkVideoEncodeInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDependencyInfoKHR*)*, void (%struct.VkCommandBuffer_T*, i64, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo2KHR*, %struct.VkFence_T*)*, void (%struct.VkCommandBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointData2NV*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyBufferToImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyImageToBufferInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBlitImageInfo2KHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkResolveImageInfo2KHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugMarkerMarkerInfoEXT*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCuModuleCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuModuleNVX_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCuFunctionCreateInfoNVX*, %struct.VkAllocationCallbacks*, %struct.VkCuFunctionNVX_T**)*, void (%struct.VkDevice_T*, %struct.VkCuModuleNVX_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCuFunctionNVX_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCuLaunchInfoNVX*)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewHandleInfoNVX*)*, i32 (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkImageViewAddressPropertiesNVX*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64*, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkConditionalRenderingBeginInfoEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewportWScalingNV*)*, i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayPowerInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayEventInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32, i64*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkRefreshCycleDurationGOOGLE*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkPastPresentationTimingGOOGLE*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkDevice_T*, i32, %struct.VkSwapchainKHR_T**, %struct.VkHdrMetadataEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkSampleLocationsInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkValidationCacheEXT_T**)*, void (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i32, %struct.VkValidationCacheEXT_T**)*, i32 (%struct.VkDevice_T*, %struct.VkValidationCacheEXT_T*, i64*, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImageView_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkShadingRatePaletteNV*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkCoarseSampleOrderCustomNV*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureNV_T**)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkBindAccelerationStructureMemoryInfoNV*)*, void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureInfoNV*, %struct.VkBuffer_T*, i64, i32, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkAccelerationStructureNV_T*, %struct.VkAccelerationStructureNV_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, i64, i32, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureNV_T*, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureNV_T**, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32)*, i32 (%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkBuffer_T*, i64, i32)*, i32 (%struct.VkDevice_T*, i32, %struct.VkCalibratedTimestampInfoEXT*, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i8*)*, void (%struct.VkQueue_T*, i32*, %struct.VkCheckpointDataNV*)*, i32 (%struct.VkDevice_T*, %struct.VkInitializePerformanceApiInfoINTEL*)*, void (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceMarkerInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceStreamMarkerInfoINTEL*)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkPerformanceOverrideInfoINTEL*)*, i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationAcquireInfoINTEL*, %struct.VkPerformanceConfigurationINTEL_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPerformanceConfigurationINTEL_T*)*, i32 (%struct.VkQueue_T*, %struct.VkPerformanceConfigurationINTEL_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkPerformanceValueINTEL*)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32)*, i64 (%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*)*, void (%struct.VkCommandBuffer_T*, i32, i16)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*, i64*, i64*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkDevice_T*, %struct.VkGeneratedCommandsMemoryRequirementsInfoNV*, %struct.VkMemoryRequirements2*)*, void (%struct.VkCommandBuffer_T*, %struct.VkGeneratedCommandsInfoNV*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkGeneratedCommandsInfoNV*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutCreateInfoNV*, %struct.VkAllocationCallbacks*, %struct.VkIndirectCommandsLayoutNV_T**)*, void (%struct.VkDevice_T*, %struct.VkIndirectCommandsLayoutNV_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkPrivateDataSlotCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkPrivateDataSlotEXT_T**)*, void (%struct.VkDevice_T*, %struct.VkPrivateDataSlotEXT_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64)*, void (%struct.VkDevice_T*, i32, i64, %struct.VkPrivateDataSlotEXT_T*, i64*)*, void (%struct.VkCommandBuffer_T*, i32, i32*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkVertexInputBindingDescription2EXT*, i32, %struct.VkVertexInputAttributeDescription2EXT*)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkAccelerationStructureCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkAccelerationStructureKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i64*, i32*, i32**)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, %struct.VkAccelerationStructureBuildRangeInfoKHR**)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, i64, i8*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyAccelerationStructureToMemoryInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkCopyMemoryToAccelerationStructureInfoKHR*)*, i64 (%struct.VkDevice_T*, %struct.VkAccelerationStructureDeviceAddressInfoKHR*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkAccelerationStructureKHR_T**, i32, %struct.VkQueryPool_T*, i32)*, void (%struct.VkDevice_T*, %struct.VkAccelerationStructureVersionInfoKHR*, i32*)*, void (%struct.VkDevice_T*, i32, %struct.VkAccelerationStructureBuildGeometryInfoKHR*, i32*, %struct.VkAccelerationStructureBuildSizesInfoKHR*)*, void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i32, i32, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDeferredOperationKHR_T*, %struct.VkPipelineCache_T*, i32, %struct.VkRayTracingPipelineCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32, i64, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, %struct.VkStridedDeviceAddressRegionKHR*, i64)*, i64 (%struct.VkDevice_T*, %struct.VkPipeline_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32)* }
%struct.VkQueue_T = type opaque
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkDeviceGroupPresentCapabilitiesKHR = type { i32, i8*, [32 x i32], i32 }
%struct.VkAcquireNextImageInfoKHR = type { i32, i8*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32 }
%struct.VkVideoSessionCreateInfoKHR = type { i32, i8*, i32, i32, %struct.VkVideoProfileKHR*, i32, %struct.VkExtent2D, i32, i32, i32 }
%struct.VkVideoSessionKHR_T = type opaque
%struct.VkVideoGetMemoryPropertiesKHR = type { i32, i8*, i32, %struct.VkMemoryRequirements2* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%struct.VkVideoBindMemoryKHR = type { i32, i8*, i32, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkVideoSessionParametersCreateInfoKHR = type { i32, i8*, %struct.VkVideoSessionParametersKHR_T*, %struct.VkVideoSessionKHR_T* }
%struct.VkVideoSessionParametersKHR_T = type opaque
%struct.VkVideoSessionParametersUpdateInfoKHR = type { i32, i8*, i32 }
%struct.VkVideoBeginCodingInfoKHR = type { i32, i8*, i32, i32, %struct.VkVideoSessionKHR_T*, %struct.VkVideoSessionParametersKHR_T*, i32, %struct.VkVideoReferenceSlotKHR* }
%struct.VkVideoReferenceSlotKHR = type { i32, i8*, i8, %struct.VkVideoPictureResourceKHR* }
%struct.VkVideoPictureResourceKHR = type { i32, i8*, %struct.VkOffset2D, %struct.VkExtent2D, i32, %struct.VkImageView_T* }
%struct.VkVideoEndCodingInfoKHR = type { i32, i8*, i32 }
%struct.VkVideoCodingControlInfoKHR = type { i32, i8*, i32 }
%struct.VkVideoDecodeInfoKHR = type { i32, i8*, i32, %struct.VkOffset2D, %struct.VkExtent2D, %struct.VkBuffer_T*, i64, i64, %struct.VkVideoPictureResourceKHR, %struct.VkVideoReferenceSlotKHR*, i32, %struct.VkVideoReferenceSlotKHR* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%struct.VkDescriptorUpdateTemplate_T = type opaque
%struct.VkDescriptorUpdateTemplateCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorUpdateTemplateEntry*, i32, %struct.VkDescriptorSetLayout_T*, i32, %struct.VkPipelineLayout_T*, i32 }
%struct.VkDescriptorUpdateTemplateEntry = type { i32, i32, i32, i32, i64, i64 }
%struct.VkRenderPassCreateInfo2 = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription2*, i32, %struct.VkSubpassDescription2*, i32, %struct.VkSubpassDependency2*, i32, i32* }
%struct.VkAttachmentDescription2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription2 = type { i32, i8*, i32, i32, i32, i32, %struct.VkAttachmentReference2*, i32, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, i32, i32* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSubpassDependency2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassBeginInfo = type { i32, i8*, i32 }
%struct.VkSubpassEndInfo = type { i32, i8* }
%struct.VkImportFenceFdInfoKHR = type { i32, i8*, %struct.VkFence_T*, i32, i32, i32 }
%struct.VkFenceGetFdInfoKHR = type { i32, i8*, %struct.VkFence_T*, i32 }
%struct.VkAcquireProfilingLockInfoKHR = type { i32, i8*, i32, i64 }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%struct.VkSemaphoreWaitInfo = type { i32, i8*, i32, i32, %struct.VkSemaphore_T**, i64* }
%struct.VkSemaphoreSignalInfo = type { i32, i8*, %struct.VkSemaphore_T*, i64 }
%struct.VkDeviceMemoryOpaqueCaptureAddressInfo = type { i32, i8*, %struct.VkDeviceMemory_T* }
%struct.VkDeferredOperationKHR_T = type opaque
%struct.VkPipelineInfoKHR = type { i32, i8*, %struct.VkPipeline_T* }
%struct.VkPipelineExecutablePropertiesKHR = type { i32, i8*, i32, [256 x i8], [256 x i8], i32 }
%struct.VkPipelineExecutableInfoKHR = type { i32, i8*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineExecutableStatisticKHR = type { i32, i8*, [256 x i8], [256 x i8], i32, %union.VkPipelineExecutableStatisticValueKHR }
%union.VkPipelineExecutableStatisticValueKHR = type { i64 }
%struct.VkPipelineExecutableInternalRepresentationKHR = type { i32, i8*, [256 x i8], [256 x i8], i32, i64, i8* }
%struct.VkVideoEncodeInfoKHR = type { i32, i8*, i32, i32, %struct.VkExtent2D, %struct.VkBuffer_T*, i64, i64, %struct.VkVideoPictureResourceKHR, %struct.VkVideoReferenceSlotKHR*, i32, %struct.VkVideoReferenceSlotKHR* }
%struct.VkDependencyInfoKHR = type { i32, i8*, i32, i32, %struct.VkMemoryBarrier2KHR*, i32, %struct.VkBufferMemoryBarrier2KHR*, i32, %struct.VkImageMemoryBarrier2KHR* }
%struct.VkMemoryBarrier2KHR = type { i32, i8*, i64, i64, i64, i64 }
%struct.VkBufferMemoryBarrier2KHR = type { i32, i8*, i64, i64, i64, i64, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier2KHR = type { i32, i8*, i64, i64, i64, i64, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkSubmitInfo2KHR = type { i32, i8*, i32, i32, %struct.VkSemaphoreSubmitInfoKHR*, i32, %struct.VkCommandBufferSubmitInfoKHR*, i32, %struct.VkSemaphoreSubmitInfoKHR* }
%struct.VkCommandBufferSubmitInfoKHR = type { i32, i8*, %struct.VkCommandBuffer_T*, i32 }
%struct.VkSemaphoreSubmitInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i64, i64, i32 }
%struct.VkCheckpointData2NV = type { i32, i8*, i64, i8* }
%struct.VkCopyBufferInfo2KHR = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy2KHR* }
%struct.VkBufferCopy2KHR = type { i32, i8*, i64, i64, i64 }
%struct.VkCopyImageInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy2KHR* }
%struct.VkImageCopy2KHR = type { i32, i8*, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkCopyBufferToImageInfo2KHR = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy2KHR* }
%struct.VkBufferImageCopy2KHR = type { i32, i8*, i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkCopyImageToBufferInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy2KHR* }
%struct.VkBlitImageInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit2KHR*, i32 }
%struct.VkImageBlit2KHR = type { i32, i8*, %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkResolveImageInfo2KHR = type { i32, i8*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve2KHR* }
%struct.VkImageResolve2KHR = type { i32, i8*, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkDebugMarkerObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkDebugMarkerObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugMarkerMarkerInfoEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkCuModuleCreateInfoNVX = type { i32, i8*, i64, i8* }
%struct.VkCuModuleNVX_T = type opaque
%struct.VkCuFunctionCreateInfoNVX = type { i32, i8*, %struct.VkCuModuleNVX_T*, i8* }
%struct.VkCuFunctionNVX_T = type opaque
%struct.VkCuLaunchInfoNVX = type { i32, i8*, %struct.VkCuFunctionNVX_T*, i32, i32, i32, i32, i32, i32, i32, i64, i8**, i64, i8** }
%struct.VkImageViewHandleInfoNVX = type { i32, i8*, %struct.VkImageView_T*, i32, %struct.VkSampler_T* }
%struct.VkImageViewAddressPropertiesNVX = type { i32, i8*, i64, i64 }
%struct.VkConditionalRenderingBeginInfoEXT = type { i32, i8*, %struct.VkBuffer_T*, i64, i32 }
%struct.VkViewportWScalingNV = type { float, float }
%struct.VkDisplayPowerInfoEXT = type { i32, i8*, i32 }
%struct.VkDeviceEventInfoEXT = type { i32, i8*, i32 }
%struct.VkDisplayEventInfoEXT = type { i32, i8*, i32 }
%struct.VkRefreshCycleDurationGOOGLE = type { i64 }
%struct.VkPastPresentationTimingGOOGLE = type { i32, i64, i64, i64, i64 }
%struct.VkHdrMetadataEXT = type { i32, i8*, %struct.VkXYColorEXT, %struct.VkXYColorEXT, %struct.VkXYColorEXT, %struct.VkXYColorEXT, float, float, float, float }
%struct.VkXYColorEXT = type { float, float }
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSampleLocationsInfoEXT = type { i32, i8*, i32, %struct.VkExtent2D, i32, %struct.VkSampleLocationEXT* }
%struct.VkSampleLocationEXT = type { float, float }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%struct.VkValidationCacheCreateInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkValidationCacheEXT_T = type opaque
%struct.VkShadingRatePaletteNV = type { i32, i32* }
%struct.VkCoarseSampleOrderCustomNV = type { i32, i32, i32, %struct.VkCoarseSampleLocationNV* }
%struct.VkCoarseSampleLocationNV = type { i32, i32, i32 }
%struct.VkAccelerationStructureCreateInfoNV = type { i32, i8*, i64, %struct.VkAccelerationStructureInfoNV }
%struct.VkAccelerationStructureInfoNV = type { i32, i8*, i32, i32, i32, i32, %struct.VkGeometryNV* }
%struct.VkGeometryNV = type { i32, i8*, i32, %struct.VkGeometryDataNV, i32 }
%struct.VkGeometryDataNV = type { %struct.VkGeometryTrianglesNV, %struct.VkGeometryAABBNV }
%struct.VkGeometryTrianglesNV = type { i32, i8*, %struct.VkBuffer_T*, i64, i32, i64, i32, %struct.VkBuffer_T*, i64, i32, i32, %struct.VkBuffer_T*, i64 }
%struct.VkGeometryAABBNV = type { i32, i8*, %struct.VkBuffer_T*, i32, i32, i64 }
%struct.VkAccelerationStructureNV_T = type opaque
%struct.VkAccelerationStructureMemoryRequirementsInfoNV = type { i32, i8*, i32, %struct.VkAccelerationStructureNV_T* }
%struct.VkBindAccelerationStructureMemoryInfoNV = type { i32, i8*, %struct.VkAccelerationStructureNV_T*, %struct.VkDeviceMemory_T*, i64, i32, i32* }
%struct.VkRayTracingPipelineCreateInfoNV = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRayTracingShaderGroupCreateInfoNV*, i32, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkRayTracingShaderGroupCreateInfoNV = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkMemoryHostPointerPropertiesEXT = type { i32, i8*, i32 }
%struct.VkCalibratedTimestampInfoEXT = type { i32, i8*, i32 }
%struct.VkCheckpointDataNV = type { i32, i8*, i32, i8* }
%struct.VkInitializePerformanceApiInfoINTEL = type { i32, i8*, i8* }
%struct.VkPerformanceMarkerInfoINTEL = type { i32, i8*, i64 }
%struct.VkPerformanceStreamMarkerInfoINTEL = type { i32, i8*, i32 }
%struct.VkPerformanceOverrideInfoINTEL = type { i32, i8*, i32, i32, i64 }
%struct.VkPerformanceConfigurationAcquireInfoINTEL = type { i32, i8*, i32 }
%struct.VkPerformanceConfigurationINTEL_T = type opaque
%struct.VkPerformanceValueINTEL = type { i32, %union.VkPerformanceValueDataINTEL }
%union.VkPerformanceValueDataINTEL = type { i64 }
%struct.VkBufferDeviceAddressInfo = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkGeneratedCommandsMemoryRequirementsInfoNV = type { i32, i8*, i32, %struct.VkPipeline_T*, %struct.VkIndirectCommandsLayoutNV_T*, i32 }
%struct.VkIndirectCommandsLayoutNV_T = type opaque
%struct.VkGeneratedCommandsInfoNV = type { i32, i8*, i32, %struct.VkPipeline_T*, %struct.VkIndirectCommandsLayoutNV_T*, i32, %struct.VkIndirectCommandsStreamNV*, i32, %struct.VkBuffer_T*, i64, i64, %struct.VkBuffer_T*, i64, %struct.VkBuffer_T*, i64 }
%struct.VkIndirectCommandsStreamNV = type { %struct.VkBuffer_T*, i64 }
%struct.VkIndirectCommandsLayoutCreateInfoNV = type { i32, i8*, i32, i32, i32, %struct.VkIndirectCommandsLayoutTokenNV*, i32, i32* }
%struct.VkIndirectCommandsLayoutTokenNV = type { i32, i8*, i32, i32, i32, i32, i32, %struct.VkPipelineLayout_T*, i32, i32, i32, i32, i32, i32*, i32* }
%struct.VkPrivateDataSlotCreateInfoEXT = type { i32, i8*, i32 }
%struct.VkPrivateDataSlotEXT_T = type opaque
%struct.VkVertexInputBindingDescription2EXT = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkVertexInputAttributeDescription2EXT = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkAccelerationStructureCreateInfoKHR = type { i32, i8*, i32, %struct.VkBuffer_T*, i64, i64, i32, i64 }
%struct.VkAccelerationStructureKHR_T = type opaque
%struct.VkAccelerationStructureBuildGeometryInfoKHR = type { i32, i8*, i32, i32, i32, %struct.VkAccelerationStructureKHR_T*, %struct.VkAccelerationStructureKHR_T*, i32, %struct.VkAccelerationStructureGeometryKHR*, %struct.VkAccelerationStructureGeometryKHR**, %union.VkDeviceOrHostAddressKHR }
%struct.VkAccelerationStructureGeometryKHR = type { i32, i8*, i32, %union.VkAccelerationStructureGeometryDataKHR, i32 }
%union.VkAccelerationStructureGeometryDataKHR = type { %struct.VkAccelerationStructureGeometryTrianglesDataKHR }
%struct.VkAccelerationStructureGeometryTrianglesDataKHR = type { i32, i8*, i32, %union.VkDeviceOrHostAddressConstKHR, i64, i32, i32, %union.VkDeviceOrHostAddressConstKHR, %union.VkDeviceOrHostAddressConstKHR }
%union.VkDeviceOrHostAddressConstKHR = type { i64 }
%union.VkDeviceOrHostAddressKHR = type { i64 }
%struct.VkAccelerationStructureBuildRangeInfoKHR = type { i32, i32, i32, i32 }
%struct.VkCopyAccelerationStructureInfoKHR = type { i32, i8*, %struct.VkAccelerationStructureKHR_T*, %struct.VkAccelerationStructureKHR_T*, i32 }
%struct.VkCopyAccelerationStructureToMemoryInfoKHR = type { i32, i8*, %struct.VkAccelerationStructureKHR_T*, %union.VkDeviceOrHostAddressKHR, i32 }
%struct.VkCopyMemoryToAccelerationStructureInfoKHR = type { i32, i8*, %union.VkDeviceOrHostAddressConstKHR, %struct.VkAccelerationStructureKHR_T*, i32 }
%struct.VkAccelerationStructureDeviceAddressInfoKHR = type { i32, i8*, %struct.VkAccelerationStructureKHR_T* }
%struct.VkAccelerationStructureVersionInfoKHR = type { i32, i8*, i8* }
%struct.VkAccelerationStructureBuildSizesInfoKHR = type { i32, i8*, i64, i64, i64 }
%struct.VkStridedDeviceAddressRegionKHR = type { i64, i64, i64 }
%struct.VkRayTracingPipelineCreateInfoKHR = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, i32, %struct.VkRayTracingShaderGroupCreateInfoKHR*, i32, %struct.VkPipelineLibraryCreateInfoKHR*, %struct.VkRayTracingPipelineInterfaceCreateInfoKHR*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkRayTracingShaderGroupCreateInfoKHR = type { i32, i8*, i32, i32, i32, i32, i32, i8* }
%struct.VkPipelineLibraryCreateInfoKHR = type { i32, i8*, i32, %struct.VkPipeline_T** }
%struct.VkRayTracingPipelineInterfaceCreateInfoKHR = type { i32, i8*, i32, i32 }
%struct.loader_dev_ext_dispatch_table = type { [250 x i32 (%struct.VkDevice_T*)*] }
%struct.anon.1 = type { i8, i8, i8, i8, i8, i8 }
%struct.loader_icd_term_dispatch = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void ()* (%struct.VkDevice_T*, i8*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, i32 (i32*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkRect2D*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlanePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkDisplayKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModePropertiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, %struct.VkDisplayModeCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkDisplayModeKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayModeKHR_T*, i32, %struct.VkDisplayPlaneCapabilitiesKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDisplaySurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkDevice_T*, i32, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkVideoProfileKHR*, %struct.VkVideoCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceVideoFormatInfoKHR*, i32*, %struct.VkVideoFormatPropertiesKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32*, %struct.VkPerformanceCounterKHR*, %struct.VkPerformanceCounterDescriptionKHR*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkQueryPoolPerformanceCreateInfoKHR*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, %struct.VkSurfaceCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSurfaceInfo2KHR*, i32*, %struct.VkSurfaceFormat2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkDisplayPlaneProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*, i32*, %struct.VkDisplayModeProperties2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayPlaneInfo2KHR*, %struct.VkDisplayPlaneCapabilities2KHR*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceFragmentShadingRateKHR*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugReportCallbackCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugReportCallbackEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, i64, i64, i32, i8*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectTagInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugMarkerObjectNameInfoEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkMultisamplePropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkCooperativeMatrixPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkFramebufferMixedSamplesCombinationNV*)*, i32 (%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.loader_icd_tramp_list = type { i64, i32, %struct.loader_scanned_icd* }
%struct.loader_dispatch_hash_entry = type { i8*, %struct.loader_dispatch_hash_list }
%struct.loader_dispatch_hash_list = type { i64, i32, i32* }
%struct.loader_msg_callback_map_entry = type { %struct.VkDebugReportCallbackEXT_T*, %struct.VkDebugReportCallbackEXT_T* }
%struct.loader_layer_list = type { i64, i32, %struct.loader_layer_properties* }
%struct.loader_layer_properties = type { %struct.VkLayerProperties, i32, i32, [1024 x i8], i8*, %struct.loader_layer_functions, %struct.loader_extension_list, %struct.loader_device_extension_list, %struct.loader_name_value, %struct.loader_name_value, i32, [1024 x i8]*, %struct.anon, i32, [1024 x i8]*, i8, i8, %struct.loader_override_expiration, i8, i32, [1024 x i8]*, i32, [1024 x i8]* }
%struct.loader_layer_functions = type { [1024 x i8], [1024 x i8], [1024 x i8], i32 (%struct.VkNegotiateLayerInterface*)*, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)* }
%struct.VkNegotiateLayerInterface = type { i32, i8*, i32, void ()* (%struct.VkInstance_T*, i8*)*, void ()* (%struct.VkDevice_T*, i8*)*, void ()* (%struct.VkInstance_T*, i8*)* }
%struct.loader_device_extension_list = type { i64, i32, %struct.loader_dev_ext_props* }
%struct.loader_dev_ext_props = type { %struct.VkExtensionProperties, i32, i8** }
%struct.loader_name_value = type { [1024 x i8], [1024 x i8] }
%struct.anon = type { [1024 x i8], [1024 x i8], [1024 x i8] }
%struct.loader_override_expiration = type { i16, i8, i8, i8, i8 }
%struct.loader_extension_list = type { i64, i32, %struct.VkExtensionProperties* }
%union.loader_instance_extension_enables = type { [4 x i64] }
%struct.VkLayerDbgFunctionNode_ = type { i8, %union.anon, i8*, %struct.VkLayerDbgFunctionNode_* }
%union.anon = type { %struct.VkDebugReportContent }
%struct.VkDebugReportContent = type { %struct.VkDebugReportCallbackEXT_T*, i32 (i32, i32, i64, i64, i32, i8*, i8*, i8*)*, i32 }
%struct.VkIcdSurface = type { %union.anon.2, i32, i32, i32, i32, %struct.VkSurfaceKHR_T** }
%union.anon.2 = type { %struct.VkIcdSurfaceDisplay }
%struct.VkIcdSurfaceDisplay = type { %struct.VkIcdSurfaceBase, %struct.VkDisplayModeKHR_T*, i32, i32, i32, float, i32, %struct.VkExtent2D }
%struct.VkIcdSurfaceBase = type { i32 }

@.str = private unnamed_addr constant [119 x i8] c"vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulating call in ICD \22%s\22 using vkGetPhysicalDeviceSurfaceCapabilitiesKHR\00", align 1
@.str.1 = private unnamed_addr constant [149 x i8] c"vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored\00", align 1
@.str.2 = private unnamed_addr constant [185 x i8] c"ICD \22%s\22 associated with VkPhysicalDevice does not support vkReleaseDisplayEXT - Consequently, the call is invalid because it should not be possible to acquire a display on this device\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceExternalImageFormatPropertiesNV(%struct.VkPhysicalDevice_T* nocapture readonly, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*) local_unnamed_addr #0 {
  %9 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %10 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %9, i64 0, i32 2
  %11 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %10, align 8
  %12 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %13 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %12, align 8
  %14 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %13, i64 0, i32 69
  %15 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)** %14, align 8
  %16 = tail call i32 %15(%struct.VkPhysicalDevice_T* %11, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, %struct.VkExternalImageFormatPropertiesNV* %7) #4
  ret i32 %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceExternalImageFormatPropertiesNV(%struct.VkPhysicalDevice_T* nocapture readonly, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*) local_unnamed_addr #0 {
  %9 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %10 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %9, i64 0, i32 1
  %11 = load %struct.loader_icd_term*, %struct.loader_icd_term** %10, align 8
  %12 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %11, i64 0, i32 4, i32 72
  %13 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)** %12, align 8
  %14 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32, %struct.VkExternalImageFormatPropertiesNV*)* %13, null
  br i1 %14, label %15, label %30

15:                                               ; preds = %8
  %16 = icmp eq i32 %6, 0
  br i1 %16, label %17, label %34

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %11, i64 0, i32 4, i32 5
  %19 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %18, align 8
  %20 = icmp eq i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.VkExternalImageFormatPropertiesNV, %struct.VkExternalImageFormatPropertiesNV* %7, i64 0, i32 1
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.VkExternalImageFormatPropertiesNV, %struct.VkExternalImageFormatPropertiesNV* %7, i64 0, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.VkExternalImageFormatPropertiesNV, %struct.VkExternalImageFormatPropertiesNV* %7, i64 0, i32 3
  store i32 0, i32* %24, align 8
  %25 = load i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)** %18, align 8
  %26 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %9, i64 0, i32 3
  %27 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %28 = getelementptr inbounds %struct.VkExternalImageFormatPropertiesNV, %struct.VkExternalImageFormatPropertiesNV* %7, i64 0, i32 0
  %29 = tail call i32 %25(%struct.VkPhysicalDevice_T* %27, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, %struct.VkImageFormatProperties* %28) #4
  br label %34

30:                                               ; preds = %8
  %31 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %9, i64 0, i32 3
  %32 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %31, align 8
  %33 = tail call i32 %13(%struct.VkPhysicalDevice_T* %32, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, %struct.VkExternalImageFormatPropertiesNV* %7) #4
  br label %34

34:                                               ; preds = %17, %15, %30, %21
  %35 = phi i32 [ %33, %30 ], [ %29, %21 ], [ -11, %15 ], [ -3, %17 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceSurfaceCapabilities2EXT(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*) local_unnamed_addr #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 71
  %10 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, %struct.VkSurfaceKHR_T* %1, %struct.VkSurfaceCapabilities2EXT* %2) #4
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceSurfaceCapabilities2EXT(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkSurfaceCapabilitiesKHR, align 4
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %6 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 1
  %7 = load %struct.loader_icd_term*, %struct.loader_icd_term** %6, align 8
  %8 = bitcast %struct.VkSurfaceKHR_T* %1 to %struct.VkIcdSurface*
  %9 = getelementptr inbounds %struct.VkIcdSurface, %struct.VkIcdSurface* %8, i64 0, i32 5
  %10 = load %struct.VkSurfaceKHR_T**, %struct.VkSurfaceKHR_T*** %9, align 8
  %11 = icmp eq %struct.VkSurfaceKHR_T** %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 2
  %14 = load i8, i8* %13, align 8
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %10, i64 %15
  %17 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %16, align 8
  %18 = icmp eq %struct.VkSurfaceKHR_T* %17, null
  %19 = select i1 %18, %struct.VkSurfaceKHR_T* %1, %struct.VkSurfaceKHR_T* %17
  br label %20

20:                                               ; preds = %12, %3
  %21 = phi %struct.VkSurfaceKHR_T* [ %1, %3 ], [ %19, %12 ]
  %22 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 74
  %23 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)** %22, align 8
  %24 = icmp eq i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilities2EXT*)* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 3
  %27 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %28 = tail call i32 %23(%struct.VkPhysicalDevice_T* %27, %struct.VkSurfaceKHR_T* %21, %struct.VkSurfaceCapabilities2EXT* %2) #4
  br label %73

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 1
  %31 = load %struct.loader_instance*, %struct.loader_instance** %30, align 8
  %32 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 0
  %33 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %32, align 8
  %34 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %33, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %31, i32 1, i32 0, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str, i64 0, i64 0), i8* %35) #4
  %36 = bitcast %struct.VkSurfaceCapabilitiesKHR* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %36) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %36, i8 -86, i64 52, i1 false)
  %37 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %7, i64 0, i32 4, i32 29
  %38 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %37, align 8
  %39 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %5, i64 0, i32 3
  %40 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %39, align 8
  %41 = call i32 %38(%struct.VkPhysicalDevice_T* %40, %struct.VkSurfaceKHR_T* %21, %struct.VkSurfaceCapabilitiesKHR* nonnull %4) #4
  %42 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 3
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 4
  %49 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 2
  %50 = bitcast %struct.VkExtent2D* %49 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 4
  %52 = bitcast %struct.VkExtent2D* %48 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 6
  %54 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 4
  %55 = bitcast %struct.VkExtent2D* %54 to i64*
  %56 = bitcast %struct.VkExtent2D* %53 to i64*
  %57 = load i64, i64* %55, align 4
  store i64 %57, i64* %56, align 8
  %58 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 5
  %59 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 7
  %60 = bitcast i32* %58 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 4
  %62 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %61, <4 x i32>* %62, align 8
  %63 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 9
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 11
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 12
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %struct.VkSurfaceCapabilities2EXT, %struct.VkSurfaceCapabilities2EXT* %2, i64 0, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %29
  %71 = load %struct.loader_instance*, %struct.loader_instance** %30, align 8
  call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %71, i32 2, i32 0, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.1, i64 0, i64 0)) #4
  br label %72

72:                                               ; preds = %29, %70
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %36) #4
  br label %73

73:                                               ; preds = %72, %25
  %74 = phi i32 [ %28, %25 ], [ %41, %72 ]
  ret i32 %74
}

declare void @loader_log(%struct.loader_instance*, i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ReleaseDisplayEXT(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkDisplayKHR_T*) local_unnamed_addr #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %4 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %3, i64 0, i32 2
  %5 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %4, align 8
  %6 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %7 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %6, align 8
  %8 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %7, i64 0, i32 70
  %9 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)** %8, align 8
  %10 = tail call i32 %9(%struct.VkPhysicalDevice_T* %5, %struct.VkDisplayKHR_T* %1) #4
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @terminator_ReleaseDisplayEXT(%struct.VkPhysicalDevice_T* nocapture readonly, %struct.VkDisplayKHR_T*) local_unnamed_addr #0 {
  %3 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_term*
  %4 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 1
  %5 = load %struct.loader_icd_term*, %struct.loader_icd_term** %4, align 8
  %6 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 4, i32 73
  %7 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)** %6, align 8
  %8 = icmp eq i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)* %7, null
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 1
  %11 = load %struct.loader_instance*, %struct.loader_instance** %10, align 8
  %12 = getelementptr inbounds %struct.loader_icd_term, %struct.loader_icd_term* %5, i64 0, i32 0
  %13 = load %struct.loader_scanned_icd*, %struct.loader_scanned_icd** %12, align 8
  %14 = getelementptr inbounds %struct.loader_scanned_icd, %struct.loader_scanned_icd* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void (%struct.loader_instance*, i32, i32, i8*, ...) @loader_log(%struct.loader_instance* %11, i32 8, i32 0, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @.str.2, i64 0, i64 0), i8* %15) #4
  %16 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)** %6, align 8
  br label %17

17:                                               ; preds = %9, %2
  %18 = phi i32 (%struct.VkPhysicalDevice_T*, %struct.VkDisplayKHR_T*)* [ %16, %9 ], [ %7, %2 ]
  %19 = getelementptr inbounds %struct.loader_physical_device_term, %struct.loader_physical_device_term* %3, i64 0, i32 3
  %20 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %19, align 8
  %21 = tail call i32 %18(%struct.VkPhysicalDevice_T* %20, %struct.VkDisplayKHR_T* %1) #4
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetPhysicalDeviceToolPropertiesEXT(%struct.VkPhysicalDevice_T* nocapture readonly, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*) local_unnamed_addr #0 {
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.loader_physical_device_tramp*
  %5 = getelementptr inbounds %struct.loader_physical_device_tramp, %struct.loader_physical_device_tramp* %4, i64 0, i32 2
  %6 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %5, align 8
  %7 = bitcast %struct.VkPhysicalDevice_T* %0 to %struct.VkLayerInstanceDispatchTable_**
  %8 = load %struct.VkLayerInstanceDispatchTable_*, %struct.VkLayerInstanceDispatchTable_** %7, align 8
  %9 = getelementptr inbounds %struct.VkLayerInstanceDispatchTable_, %struct.VkLayerInstanceDispatchTable_* %8, i64 0, i32 77
  %10 = load i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkPhysicalDeviceToolPropertiesEXT*)** %9, align 8
  %11 = tail call i32 %10(%struct.VkPhysicalDevice_T* %6, i32* %1, %struct.VkPhysicalDeviceToolPropertiesEXT* %2) #4
  ret i32 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @terminator_GetPhysicalDeviceToolPropertiesEXT(%struct.VkPhysicalDevice_T* nocapture readnone, i32* nocapture readnone, %struct.VkPhysicalDeviceToolPropertiesEXT* nocapture readnone) local_unnamed_addr #3 {
  ret i32 0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
