; ModuleID = '../../mojo/public/cpp/system/dynamic_library_support.cc'
source_filename = "../../mojo/public/cpp/system/dynamic_library_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::FilePath" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.mojo::(anonymous namespace)::InitializationState" = type { %struct.MojoInitializeOptions, %"class.std::__1::basic_string", %"class.std::__1::vector" }
%struct.MojoInitializeOptions = type { i32, i32, i8*, i32, i32, i8** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.7", %"class.std::__1::map", i64 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo15LoadCoreLibraryEN4absl8optionalIN4base8FilePathEEE(%"class.absl::optional"*) local_unnamed_addr #0 {
  %2 = alloca %"struct.mojo::(anonymous namespace)::InitializationState", align 8
  %3 = bitcast %"struct.mojo::(anonymous namespace)::InitializationState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %3) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 80, i1 false)
  call fastcc void @_ZN4mojo12_GLOBAL__N_119InitializationStateC2ERKN4absl8optionalIN4base8FilePathEEEj(%"struct.mojo::(anonymous namespace)::InitializationState"* nonnull %2, %"class.absl::optional"* dereferenceable(32) %0, i32 4)
  %4 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 0
  %5 = call i32 @MojoInitialize(%struct.MojoInitializeOptions* nonnull %4) #8
  %6 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 2, i32 0, i32 0
  %7 = load i8**, i8*** %6, align 8
  %8 = icmp eq i8** %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint i8** %7 to i64
  %11 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast i8*** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i8** %7 to i8*
  call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %9, %1
  %15 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %14, %20
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %3) #8
  ret i32 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4mojo12_GLOBAL__N_119InitializationStateC2ERKN4absl8optionalIN4base8FilePathEEEj(%"struct.mojo::(anonymous namespace)::InitializationState"*, %"class.absl::optional"* dereferenceable(32), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 0, i32 0
  store i32 32, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 0, i32 3
  %9 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 0, i32 4
  %10 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 0, i32 5
  %11 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %13 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 2
  %14 = getelementptr inbounds i32, i32* %6, i64 1
  %15 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 72, i1 false)
  store i32 %2, i32* %6, align 4
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::FilePath"* %21) #8
  %22 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %26, %19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %20, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8
  %30 = load i8, i8* %23, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %29
  %33 = bitcast %"class.std::__1::basic_string"* %11 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8** %7 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %41

38:                                               ; preds = %29
  %39 = bitcast i8** %7 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"** %39, align 8
  %40 = zext i8 %30 to i64
  br label %41

41:                                               ; preds = %32, %38
  %42 = phi i64 [ %37, %32 ], [ %40, %38 ]
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %8, align 8
  br label %44

44:                                               ; preds = %3, %41
  %45 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #8
  %46 = getelementptr inbounds %"class.base::CommandLine", %"class.base::CommandLine"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = getelementptr inbounds %"class.base::CommandLine", %"class.base::CommandLine"* %45, i64 0, i32 0, i32 0, i32 1
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::vector"* %13 to i64*
  br label %60

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 2, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast i8*** %54 to i64*
  %57 = bitcast %"class.std::__1::vector"* %13 to i64*
  %58 = bitcast i8*** %55 to i64*
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  br label %70

60:                                               ; preds = %145, %51
  %61 = phi i64* [ %52, %51 ], [ %57, %145 ]
  %62 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %0, i64 0, i32 2, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %61, align 8
  %66 = sub i64 %64, %65
  %67 = lshr exact i64 %66, 3
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %9, align 4
  %69 = bitcast i8*** %10 to i64*
  store i64 %65, i64* %69, align 8
  ret void

70:                                               ; preds = %53, %145
  %71 = phi %"class.std::__1::basic_string"* [ %47, %53 ], [ %146, %145 ]
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  br label %81

79:                                               ; preds = %70
  %80 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i8* [ %78, %76 ], [ %80, %79 ]
  %83 = ptrtoint i8* %82 to i64
  %84 = load i8**, i8*** %54, align 8
  %85 = load i8**, i8*** %55, align 8
  %86 = icmp ult i8** %84, %85
  %87 = ptrtoint i8** %85 to i64
  br i1 %86, label %88, label %92

88:                                               ; preds = %81
  %89 = bitcast i8** %84 to i64*
  store i64 %83, i64* %89, align 8
  %90 = getelementptr inbounds i8*, i8** %84, i64 1
  %91 = ptrtoint i8** %90 to i64
  store i64 %91, i64* %56, align 8
  br label %145

92:                                               ; preds = %81
  %93 = ptrtoint i8** %84 to i64
  %94 = load i64, i64* %57, align 8
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 3
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 2305843009213693951
  br i1 %98, label %99, label %101

99:                                               ; preds = %92
  %100 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #10
  unreachable

101:                                              ; preds = %92
  %102 = sub i64 %87, %94
  %103 = ashr exact i64 %102, 3
  %104 = icmp ult i64 %103, 1152921504606846975
  br i1 %104, label %105, label %113

105:                                              ; preds = %101
  %106 = ashr exact i64 %102, 2
  %107 = icmp ult i64 %106, %97
  %108 = select i1 %107, i64 %97, i64 %106
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %105
  %111 = icmp ugt i64 %108, 2305843009213693951
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  call void @abort() #10
  unreachable

113:                                              ; preds = %110, %101
  %114 = phi i64 [ %108, %110 ], [ 2305843009213693951, %101 ]
  %115 = shl i64 %114, 3
  %116 = call i8* @_Znwm(i64 %115) #9
  %117 = bitcast i8* %116 to i8**
  br label %118

118:                                              ; preds = %113, %105
  %119 = phi i64 [ %114, %113 ], [ 0, %105 ]
  %120 = phi i8** [ %117, %113 ], [ null, %105 ]
  %121 = getelementptr inbounds i8*, i8** %120, i64 %96
  %122 = getelementptr inbounds i8*, i8** %120, i64 %119
  %123 = ptrtoint i8** %122 to i64
  %124 = bitcast i8** %121 to i64*
  store i64 %83, i64* %124, align 8
  %125 = getelementptr inbounds i8*, i8** %121, i64 1
  %126 = ptrtoint i8** %125 to i64
  %127 = load i8**, i8*** %59, align 8
  %128 = load i64, i64* %56, align 8
  %129 = ptrtoint i8** %127 to i64
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 3
  %132 = sub nsw i64 0, %131
  %133 = getelementptr inbounds i8*, i8** %121, i64 %132
  %134 = ptrtoint i8** %133 to i64
  %135 = icmp sgt i64 %130, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %118
  %137 = bitcast i8** %133 to i8*
  %138 = bitcast i8** %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 %130, i1 false) #8
  %139 = load i8**, i8*** %59, align 8
  br label %140

140:                                              ; preds = %136, %118
  %141 = phi i8** [ %127, %118 ], [ %139, %136 ]
  store i64 %134, i64* %57, align 8
  store i64 %126, i64* %56, align 8
  store i64 %123, i64* %58, align 8
  %142 = icmp eq i8** %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %140
  %144 = bitcast i8** %141 to i8*
  call void @_ZdlPv(i8* %144) #9
  br label %145

145:                                              ; preds = %88, %140, %143
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %147 = icmp eq %"class.std::__1::basic_string"* %146, %49
  br i1 %147, label %60, label %70
}

declare i32 @MojoInitialize(%struct.MojoInitializeOptions*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo21InitializeCoreLibraryEj(i32) local_unnamed_addr #0 {
  %2 = alloca %"struct.mojo::(anonymous namespace)::InitializationState", align 8
  %3 = alloca %"class.absl::optional", align 8
  %4 = bitcast %"struct.mojo::(anonymous namespace)::InitializationState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #8
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  call fastcc void @_ZN4mojo12_GLOBAL__N_119InitializationStateC2ERKN4absl8optionalIN4base8FilePathEEEj(%"struct.mojo::(anonymous namespace)::InitializationState"* nonnull %2, %"class.absl::optional"* nonnull dereferenceable(32) %3, i32 %0)
  %8 = load i8, i8* %5, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %11) #8
  store i8 0, i8* %5, align 8
  br label %12

12:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #8
  %13 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 0
  %14 = call i32 @MojoInitialize(%struct.MojoInitializeOptions* nonnull %13) #8
  %15 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 2, i32 0, i32 0
  %16 = load i8**, i8*** %15, align 8
  %17 = icmp eq i8** %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i8** %16 to i64
  %20 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast i8*** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i8** %16 to i8*
  call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %18, %12
  %24 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %2, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #8
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo28LoadAndInitializeCoreLibraryEN4absl8optionalIN4base8FilePathEEEj(%"class.absl::optional"*, i32) local_unnamed_addr #0 {
  %3 = alloca %"struct.mojo::(anonymous namespace)::InitializationState", align 8
  %4 = bitcast %"struct.mojo::(anonymous namespace)::InitializationState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  call fastcc void @_ZN4mojo12_GLOBAL__N_119InitializationStateC2ERKN4absl8optionalIN4base8FilePathEEEj(%"struct.mojo::(anonymous namespace)::InitializationState"* nonnull %3, %"class.absl::optional"* dereferenceable(32) %0, i32 %1)
  %5 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %3, i64 0, i32 0
  %6 = call i32 @MojoInitialize(%struct.MojoInitializeOptions* nonnull %5) #8
  %7 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = load i8**, i8*** %7, align 8
  %9 = icmp eq i8** %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = ptrtoint i8** %8 to i64
  %12 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %3, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i8*** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i8** %8 to i8*
  call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %10, %2
  %16 = getelementptr inbounds %"struct.mojo::(anonymous namespace)::InitializationState", %"struct.mojo::(anonymous namespace)::InitializationState"* %3, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %15, %21
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #8
  ret i32 %6
}

declare void @_ZNK4base8FilePath12AsUTF8UnsafeEv(%"class.std::__1::basic_string"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
