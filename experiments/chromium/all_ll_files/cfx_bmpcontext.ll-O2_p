; ModuleID = '../../third_party/pdfium/core/fxcodec/bmp/cfx_bmpcontext.cpp'
source_filename = "../../third_party/pdfium/core/fxcodec/bmp/cfx_bmpcontext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcodec::CFX_BmpContext" = type { %"class.fxcodec::ProgressiveDecoderIface::Context", %"class.fxcodec::CFX_BmpDecompressor", %"class.fxcrt::UnownedPtr.9" }
%"class.fxcodec::ProgressiveDecoderIface::Context" = type { i32 (...)** }
%"class.fxcodec::CFX_BmpDecompressor" = type { %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::vector.1", i32, i32, i32, i32, i32, i64, i64, i8, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %"class.fxcrt::RetainPtr" }
%"class.fxcrt::UnownedPtr" = type { %"class.fxcodec::CFX_BmpContext"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.CFX_CodecMemory* }
%class.CFX_CodecMemory = type opaque
%"class.fxcrt::UnownedPtr.9" = type { %"class.fxcodec::BmpDecoder::Delegate"* }
%"class.fxcodec::BmpDecoder::Delegate" = type { i32 (...)** }

@_ZTVN7fxcodec14CFX_BmpContextE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcodec::CFX_BmpContext"*)* @_ZN7fxcodec14CFX_BmpContextD2Ev to i8*), i8* bitcast (void (%"class.fxcodec::CFX_BmpContext"*)* @_ZN7fxcodec14CFX_BmpContextD0Ev to i8*)] }, align 8

@_ZN7fxcodec14CFX_BmpContextC1EPNS_10BmpDecoder8DelegateE = hidden unnamed_addr alias void (%"class.fxcodec::CFX_BmpContext"*, %"class.fxcodec::BmpDecoder::Delegate"*), void (%"class.fxcodec::CFX_BmpContext"*, %"class.fxcodec::BmpDecoder::Delegate"*)* @_ZN7fxcodec14CFX_BmpContextC2EPNS_10BmpDecoder8DelegateE
@_ZN7fxcodec14CFX_BmpContextD1Ev = hidden unnamed_addr alias void (%"class.fxcodec::CFX_BmpContext"*), void (%"class.fxcodec::CFX_BmpContext"*)* @_ZN7fxcodec14CFX_BmpContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec14CFX_BmpContextC2EPNS_10BmpDecoder8DelegateE(%"class.fxcodec::CFX_BmpContext"*, %"class.fxcodec::BmpDecoder::Delegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7fxcodec14CFX_BmpContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 1
  tail call void @_ZN7fxcodec19CFX_BmpDecompressorC1EPKNS_14CFX_BmpContextE(%"class.fxcodec::CFX_BmpDecompressor"* %4, %"class.fxcodec::CFX_BmpContext"* %0) #4
  %5 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 2, i32 0
  store %"class.fxcodec::BmpDecoder::Delegate"* %1, %"class.fxcodec::BmpDecoder::Delegate"** %5, align 8
  ret void
}

declare void @_ZN7fxcodec19CFX_BmpDecompressorC1EPKNS_14CFX_BmpContextE(%"class.fxcodec::CFX_BmpDecompressor"*, %"class.fxcodec::CFX_BmpContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec14CFX_BmpContextD2Ev(%"class.fxcodec::CFX_BmpContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7fxcodec14CFX_BmpContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 1
  tail call void @_ZN7fxcodec19CFX_BmpDecompressorD1Ev(%"class.fxcodec::CFX_BmpDecompressor"* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7fxcodec19CFX_BmpDecompressorD1Ev(%"class.fxcodec::CFX_BmpDecompressor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7fxcodec14CFX_BmpContextD0Ev(%"class.fxcodec::CFX_BmpContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7fxcodec14CFX_BmpContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcodec::CFX_BmpContext", %"class.fxcodec::CFX_BmpContext"* %0, i64 0, i32 1
  tail call void @_ZN7fxcodec19CFX_BmpDecompressorD1Ev(%"class.fxcodec::CFX_BmpDecompressor"* %3) #4
  %4 = bitcast %"class.fxcodec::CFX_BmpContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
