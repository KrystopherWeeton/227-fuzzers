; ModuleID = '../../net/cert/symantec_certs.cc'
source_filename = "../../net/cert/symantec_certs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair" }
%"class.net::HashValue" = type { i32, %union.anon }
%union.anon = type { %"struct.net::SHA256HashValue" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::HashValue"* }

@_ZN3net14kSymantecRootsE = hidden constant [58 x %"struct.net::SHA256HashValue"] [%"struct.net::SHA256HashValue" { [32 x i8] c"\02<\81\CC\E8\E7\C6O\A9B\D3\C1PHp}5\D9\BB[\87\F4\F5D\C5\BF\1B\C5d:\F2\FA" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\09\99\BF\90\0B\D5\C2\97\86^!\E1\AA\DEl\F6\BB:\94\D1\1A\E5\EAy\84B\A4\E2\F8\13$\1F" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\0B\DDZ\BE\94\0C\AA\AB\E8\B2\BB\A8\83H\FBoJ\A4\CC\84Co\88\0B\EC\E6kH\BD\A9\13\D8" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\16\A9\E0\12\D3#)\F2\82\B1\0B\BFW\C7\C0\B4*\E8\0Fj\C9T.\B4\09\BC\1C,\DEP\D3\22" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\17uZ\5C)_=-r\E6\F01\A1\F0\7F@\0CX\8B\9EX+\22\F1~\AE1\A1Y\0D\11\85" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\19\06\C6\12M\BBC\85x\D0\0E\06mPT\C6\C3\7F\0F\A6\02\8C\05T^\09\94\ED\DA\EC\86)" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\19\16\F3P\8E\C3\FA\D7\95\F8\DCK\D3\16\F9\C6\08Zd\DE<AS\ACmb\D5\EA\19Q]9" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\1Du\D0\83\1B\9E\08\859M2\C7\A1\BF\DB=\BC\1C(\E2\B0\E89\1F\B15\98\1D\BC[\A96" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\22\07nZ\EFD\BB\9AAj(\B7\D1\C4C\22\D7\05\9F`\FE\FF\A5\CA\F6\C5\BE\84G\89\13\03" }, %"struct.net::SHA256HashValue" { [32 x i8] c"%\B4\1BPnI0\95(#\A6\EB\9F\1D1\DE\F6E\EA8\A5\C6\C6\A9mq\95~8M\F0X" }, %"struct.net::SHA256HashValue" { [32 x i8] c"&\C1\8D\C6\EE\A6\F62\F6v\BC\EB\A1\D8\C2\B4\83R\F2\9C-_\CD\A8x\E0\9D\CB\83-\D6\E5" }, %"struct.net::SHA256HashValue" { [32 x i8] c"-\C9G\0B\E6>\F4\AC\F1\BD\82\86\09@+\B7\B8{\D9\968\A6C\93N\88h-\1B\E8\C3\08" }, %"struct.net::SHA256HashValue" { [32 x i8] c"-\EEQqYj\B8\F3\CD<v5\FE\A8\E6\C3\00j\A9\E3\1D\B3\9D\03\A7H\0D\DB$(\A3>" }, %"struct.net::SHA256HashValue" { [32 x i8] c"0'\A2\98\FAW1M\C0\E3\DD\10\19A\1B\8F@LC\C3\F94\CE;\DF\85e\12\C8\0A\A1\5C" }, %"struct.net::SHA256HashValue" { [32 x i8] c"1Q&\80#?_*\1F)C\7FV\D4\98\8C\F0\AF\C4\1C\C6\C5\DAbu\92\8E\9C\0B\EA\DE'" }, %"struct.net::SHA256HashValue" { [32 x i8] c"C\B3\10}sB\16]@l\F9u\CDy\B3n\D1dPH\F0]\7F\F6\EA\00\96\E4'\B7\DB\84" }, %"struct.net::SHA256HashValue" { [32 x i8] c"F=\BB\9B\0A&\ED&\169{d1%\FB\D2\9Bf\CF:F\FD\B48K \9Ex#z\1A\FF" }, %"struct.net::SHA256HashValue" { [32 x i8] c"G\9D\13\0B\F3\FCa\DC/\1DP\8D#\9A\13'j\E7\B3\C9\84\10\11\A0,\14\02\C7\E6w\BD_" }, %"struct.net::SHA256HashValue" { [32 x i8] c"I\05Ff#\ABAx\BE\92\AC\5C\BDe\84\F7\A1\E1\7F'e-Z\85\AF\89PN\A29\AA\AA" }, %"struct.net::SHA256HashValue" { [32 x i8] c"IZ\96\BAk\ADx$\07\BDR\1A\00\BA\CEe{\B3UU^K\B7\F8\14lq\BB\A5~z\CE" }, %"struct.net::SHA256HashValue" { [32 x i8] c"K\A6\03\1C\A3\05\B0\9ES\BD\E3pQEH\1D\032\B6Q\FE07\0D\D5%L\C4\D2\CB2\F3" }, %"struct.net::SHA256HashValue" { [32 x i8] c"Q\92C\8E\C3i\D7\EE\0C\E7\1F\5Cm\B7_\94\1E\FB\F7.XD\17\15\E9\9E\AB\04\C2\C8\AC\EE" }, %"struct.net::SHA256HashValue" { [32 x i8] c"V{\82\11\FD \D3\D2\83\EE\0C\D7\CE\06r\CB\9D\99\BC[HzX\C9\D5N\C6\7Fw\D4\A8\F5" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\5CO(S\88\F3\836&\9AU\C7\C1,\0B<\A7?\EF*ZM\F8+\89\14\1E\84\1AlM\E4" }, %"struct.net::SHA256HashValue" { [32 x i8] c"g\DCO2\FA\10\E7\D0\1Ay\A0s\AA\0C\9E\02\12\EC/\FC=w\9E\0A\A7\F9\C0\F0\E1\C2\C8\93" }, %"struct.net::SHA256HashValue" { [32 x i8] c"k\86\DE\96\A6X\A5h \A4\F3]\90\DBl>\FD\D5t\CE\94\B9\09\CB\0D\7F\F1|<\18\9D\83" }, %"struct.net::SHA256HashValue" { [32 x i8] c"p\06\A3\83\11\E5\8F\B1\93HB3!\82\10\C6a%\A0\E4\A8&\AE\D59\ACV\1D\FB\FB\D9\03" }, %"struct.net::SHA256HashValue" { [32 x i8] c"x\1F\1C:jB\E3\E9\15\22-\B4\96w\02\A2\E5w\AE\B0\17\07_\A3\C1Y\85\1F\DD\D0S^" }, %"struct.net::SHA256HashValue" { [32 x i8] c"|\AA\03FQ$Y\0C`\1EV~R\14\8E\95,\0C\FF\E8\90\00S\0F\E0\D9[mP\EA\AEA" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\80\9F+\AA\E3Z\FBO6\BDdv\CEu\C2\00\10w\90\1Bj\F5\C4\DA\B8.\18\8Ck\95\C1\A1" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\81\A9\8F\C7\88\C3_UvE\A9R$\E5\0C\D1\DA\C8\FF\B2\09\DC\1EV\88\AA) _\13\22\18" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\86\0A\7F\19!\0D^\AD\05zxS+\80\95\14S\CB)\071_;\A7\AAG\B6\98\97\D7\0F?" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\87\AF4\D6o\B3\F2\FD\F3n\09\11\1E\9A\BA/oD\B2\07\F3\86?=\0BT\B2P#\90\9A\A5" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\95sTs\BDg\A3\B9Z\8D_\90\C5\A2\1A\CE\1E\0DyG2\06t\D4\AB\84yr\B9\15D\D2" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\96{\0C\D9?\CE\F7\F2|\E2\C2Evz\E9\B0Zwk\06I\F9\96[b\90\96\84ihhr" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\96\99\22\5C]\E5.V\CD\D3-\F2\E9m\1C\FE\A5\AA<\A0\BBR\CD\893\C2;\5C'D8 " }, %"struct.net::SHA256HashValue" { [32 x i8] c"\9Coj\12<\BA\A4\EE4\DB\EC\EE\E2L\97\D78\87\8C\B4#\F3\C2'9\03BO]\1Fm\D5" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\A6\F1\F9\BF\8A\0A\9D\DC\08\0F\B4\9B\1E\FC=\1A\1C,2\DC\0E\13j[\00\C9s\16\F2\A3\DC\11" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\AB8v\C3\DA]\E0\C9\CFg6\86\8E\E5\B8\8B\F9\BA\1D\FF\9C\9Dr\D2\FEZ\8D/x0!f" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\AB9\A4\B0%\95V\91\A4\02i\F3S\FA\1D\5C\B9N\AFl~\A9\80\84\84\BB\BBb\FD\9Fh\F3" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\AB\5C\DB3V9sV\D6\E6\91\97<%\B8a\8Be\D7j\90Hn\A7\A8\A5\C1wg\F4g:" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\AB\98IRv\AD\F1\EC\AF\F2\8F5\C50Hx\1E\5C\17\18\DA\B9\C8\E6zPOOjQ2\8F" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\AC\F6^\1Db\CBX\A2\BA\FDo\FA\B4\0F\B8\86\99\C4s\97\CF\5C\B4\83\D4-i\CA\D3L\D4\8B" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\AF |a\FD\9C|\F9,*\FE\81T(-\C3\F2\CB\F3/u\CD\17(\14\C5+\03\B7\EB\C2X" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\B1\12AB\A5\A1\A5\A2\88\19\C754\0E\FF\8C\9E/\81h\FE\E3\BA\18\7F%;\C1\A3\92\D7\E2" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\B2\DE\F56*\D3\FA\CD\04\BD)\04zC\84Ovp4\EAH\92\F8\0EV\BE\E6\90$>%\02" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\BC\FBD\AA\B9\AD\02\10\15pkA!\EAv\1C\81\C9\E8\89gY\0Fo\94\AEtM\C8\8Bx\FB" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\C0q5\F6\B4R9\82d\A4wm\BD\0Aj0|`\A3o\96{\D2c!\DC\B8\17\B5\C0\C4\81" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\CA\B4\82\CD>\82\0C\5C\E7*\A3\B6\FD\BE\98\8B\B8\A4\F0@~\CA\FD\8C\92n6\82N\AB\92\DD" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\D2\F9\1A\04\E3\A6\1DN\ADxH\C8\D4;^\11R\D8\85rt\89\BCes\8Bg\C0\A2'\85\A7" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\D3\A2]\A8\0D\B7\BA\B1)\A0f\ABAP=\DD\FF\A0,v\8C\05\89\F9\9F\D7\11\93\E6\99\16\B6" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\D4\AFl\0AH#\10\BD|T\BBz\B1!\91o\86\C0\C0|\D5/\CA\C3-8D\C2`\05\11_" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\DA\80\0B\80\B2\A8}9\9Ef\FA\19\D7/\DFI\98;G\D8\CF2,|yP:\0C~(\FE\AF" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\F1_\1D2>\D9\CA\98\E9\EA\95\B3>\C5\DD\A4~\A4\C3)\F9R\C1oe\ADA\9EdR\04v" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\F2\E96^\A1!\DF^\EB\D8\DE$h\FD\C1q\DC\0A\9EF\DA\DC\1A\B4\1DRy\0B\A9\80\A7\C2" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\F5<\22\05\98\17\DD\96\F4\00e\169\D2\F8W\E2\10p\A5\9A\BE\D9\07\94\00\D9\F6\95Pi\00" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\F6\B5\9C\8E'\89\A1\FD][%7B\FE\AD\C6\92\5C\B9>\DC4^S\16n\12\C5+\A2\A6\01" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\FFV\80\CDs\A5p=\A0H\17\A0u\FDF%\06\A75\06\C4\B8\1A\15\83\EFT\94x\D2dv" }], align 16
@_ZN3net20kSymantecRootsLengthE = hidden local_unnamed_addr constant i64 58, align 8
@_ZN3net19kSymantecExceptionsE = hidden constant [9 x %"struct.net::SHA256HashValue"] [%"struct.net::SHA256HashValue" { [32 x i8] c"V\E9\8D\EA\C0\06\A7)\AF\A2\EDy\F9\E4\19\DFi\F4Q$%\96\D2\AA\F2\84\C7J\85^5." }, %"struct.net::SHA256HashValue" { [32 x i8] c"r\89\C0m\ED\D1kq\A7\DC\CAfW\85r\E2\E1\09\B1\1Dp\AD\04\C2`\1BgC\BCf\D0{" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\8B\B5\93\A9;\E1\D0\E8\A8\22\BB\88|Tx\90\C3\E7\06\AA\D2\DA\B7bT\F9\7F\B3k\82\FC&" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\B5\CF\82\D4~\F9\82?\9A\A7\8F\121\86\C5.\88y\EA\84\B0\F8\22\C9\1D\83\E0By\B7\8F\D5" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\B9L\19\83\00\CE\C5\C0W\AD\07'\B7\0B\BE\91\81i\92%d9\A7\B3/E\98\11\9D\DA\9C\97" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\C0UK\DE\87\A0u\EC\13\A6\1F'Y\83\AE\029W)KEL\AF\0A\97$\E3\B2\1By5\BC" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\E2O\8E\8C!\85\DA/^\88\D4W\9E\81|G\BFn\AF\BC\85\05\F0\F9`\FDZ\0D\F4G:\D3" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\ECr)i\CBd \0A\B6c\8Fh\ACS\8E@\AB\AB[\19\A6HVa\04*\10a\C4a'v" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\FA\E4`\00\D8\F7\04%XT\1E\98\AC\F3Q'\95\89\F8;m0\01\C1\84B\E4@=\11\18I" }], align 16
@_ZN3net25kSymantecExceptionsLengthE = hidden local_unnamed_addr constant i64 9, align 8
@_ZN3net19kSymantecManagedCAsE = hidden constant [2 x %"struct.net::SHA256HashValue"] [%"struct.net::SHA256HashValue" { [32 x i8] c"|\AC\9A\0F\F3\158wP\BA\8B\AF\DB\1C+\C2\9B?\0B\BA\166,\A9:\90\F8M\A2\DF_>" }, %"struct.net::SHA256HashValue" { [32 x i8] c"\ACP\B5\FBs\8A\EDl\B7\81\CC5\FB\FF\F7xow\10\9A\DA|\08\86|\04\A5s\FD\5C\F9\EE" }], align 16
@_ZN3net25kSymantecManagedCAsLengthE = hidden local_unnamed_addr constant i64 2, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net20IsLegacySymantecCertERKNSt3__16vectorINS_9HashValueENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::vector"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.net::HashValue"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, %3
  %8 = sdiv exact i64 %7, 36
  %9 = inttoptr i64 %3 to %"class.net::HashValue"*
  %10 = tail call zeroext i1 @_ZN3net28IsAnySHA256HashInSortedArrayEN4base4spanIKNS_9HashValueELm18446744073709551615EEENS1_IKNS_15SHA256HashValueELm18446744073709551615EEE(i64 %8, %"class.net::HashValue"* %9, i64 58, %"struct.net::SHA256HashValue"* getelementptr inbounds ([58 x %"struct.net::SHA256HashValue"], [58 x %"struct.net::SHA256HashValue"]* @_ZN3net14kSymantecRootsE, i64 0, i64 0)) #2
  br i1 %10, label %11, label %26

11:                                               ; preds = %1
  %12 = load i64, i64* %2, align 8
  %13 = load i64, i64* %5, align 8
  %14 = sub i64 %13, %12
  %15 = sdiv exact i64 %14, 36
  %16 = inttoptr i64 %12 to %"class.net::HashValue"*
  %17 = tail call zeroext i1 @_ZN3net28IsAnySHA256HashInSortedArrayEN4base4spanIKNS_9HashValueELm18446744073709551615EEENS1_IKNS_15SHA256HashValueELm18446744073709551615EEE(i64 %15, %"class.net::HashValue"* %16, i64 9, %"struct.net::SHA256HashValue"* getelementptr inbounds ([9 x %"struct.net::SHA256HashValue"], [9 x %"struct.net::SHA256HashValue"]* @_ZN3net19kSymantecExceptionsE, i64 0, i64 0)) #2
  br i1 %17, label %26, label %18

18:                                               ; preds = %11
  %19 = load i64, i64* %2, align 8
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 %20, %19
  %22 = sdiv exact i64 %21, 36
  %23 = inttoptr i64 %19 to %"class.net::HashValue"*
  %24 = tail call zeroext i1 @_ZN3net28IsAnySHA256HashInSortedArrayEN4base4spanIKNS_9HashValueELm18446744073709551615EEENS1_IKNS_15SHA256HashValueELm18446744073709551615EEE(i64 %22, %"class.net::HashValue"* %23, i64 2, %"struct.net::SHA256HashValue"* getelementptr inbounds ([2 x %"struct.net::SHA256HashValue"], [2 x %"struct.net::SHA256HashValue"]* @_ZN3net19kSymantecManagedCAsE, i64 0, i64 0)) #2
  %25 = xor i1 %24, true
  br label %26

26:                                               ; preds = %11, %18, %1
  %27 = phi i1 [ false, %1 ], [ false, %11 ], [ %25, %18 ]
  ret i1 %27
}

declare zeroext i1 @_ZN3net28IsAnySHA256HashInSortedArrayEN4base4spanIKNS_9HashValueELm18446744073709551615EEENS1_IKNS_15SHA256HashValueELm18446744073709551615EEE(i64, %"class.net::HashValue"*, i64, %"struct.net::SHA256HashValue"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
