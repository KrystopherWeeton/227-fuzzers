; ModuleID = '../../native_client/src/trusted/service_runtime/nacl_error_gio.c'
source_filename = "../../native_client/src/trusted/service_runtime/nacl_error_gio.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.GioVtbl = type { void (%struct.Gio*)*, i64 (%struct.Gio*, i8*, i64)*, i64 (%struct.Gio*, i8*, i64)*, i64 (%struct.Gio*, i64, i32)*, i32 (%struct.Gio*)*, i32 (%struct.Gio*)* }
%struct.Gio = type { %struct.GioVtbl* }
%struct.NaClErrorGio = type { %struct.GioVtbl*, [512 x i8], i64, i64, %struct.Gio* }

@kNaClErrorGioVtbl = hidden constant %struct.GioVtbl { void (%struct.Gio*)* @NaClErrorGioDtor, i64 (%struct.Gio*, i8*, i64)* @NaClErrorGioRead, i64 (%struct.Gio*, i8*, i64)* @NaClErrorGioWrite, i64 (%struct.Gio*, i64, i32)* @NaClErrorGioSeek, i32 (%struct.Gio*)* @NaClErrorGioFlush, i32 (%struct.Gio*)* @NaClErrorGioClose }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClErrorGioCtor(%struct.NaClErrorGio* nocapture, %struct.Gio*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 0
  %4 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 528, i1 false)
  store %struct.Gio* %1, %struct.Gio** %4, align 8
  %5 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 0
  store %struct.GioVtbl* @kNaClErrorGioVtbl, %struct.GioVtbl** %5, align 8
  ret i32 1
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClErrorGioDtor(%struct.Gio* nocapture) #0 {
  %2 = bitcast %struct.Gio* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 544, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClErrorGioRead(%struct.Gio* nocapture readonly, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 67
  %5 = bitcast %struct.Gio* %4 to %struct.Gio**
  %6 = load %struct.Gio*, %struct.Gio** %5, align 8
  %7 = getelementptr inbounds %struct.Gio, %struct.Gio* %6, i64 0, i32 0
  %8 = load %struct.GioVtbl*, %struct.GioVtbl** %7, align 8
  %9 = getelementptr inbounds %struct.GioVtbl, %struct.GioVtbl* %8, i64 0, i32 1
  %10 = load i64 (%struct.Gio*, i8*, i64)*, i64 (%struct.Gio*, i8*, i64)** %9, align 8
  %11 = tail call i64 %10(%struct.Gio* %6, i8* %1, i64 %2) #3
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClErrorGioWrite(%struct.Gio* nocapture, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 67
  %5 = bitcast %struct.Gio* %4 to %struct.Gio**
  %6 = load %struct.Gio*, %struct.Gio** %5, align 8
  %7 = getelementptr inbounds %struct.Gio, %struct.Gio* %6, i64 0, i32 0
  %8 = load %struct.GioVtbl*, %struct.GioVtbl** %7, align 8
  %9 = getelementptr inbounds %struct.GioVtbl, %struct.GioVtbl* %8, i64 0, i32 2
  %10 = load i64 (%struct.Gio*, i8*, i64)*, i64 (%struct.Gio*, i8*, i64)** %9, align 8
  %11 = tail call i64 %10(%struct.Gio* %6, i8* %1, i64 %2) #3
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %13, label %62

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 1
  %15 = bitcast %struct.Gio* %14 to [512 x i8]*
  %16 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 65
  %17 = bitcast %struct.Gio* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %11, 1
  %20 = icmp eq i64 %11, 1
  br i1 %20, label %43, label %21

21:                                               ; preds = %13
  %22 = sub i64 %11, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ %18, %21 ], [ %39, %23 ]
  %25 = phi i64 [ 0, %21 ], [ %40, %23 ]
  %26 = phi i64 [ %22, %21 ], [ %41, %23 ]
  %27 = getelementptr inbounds i8, i8* %1, i64 %25
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 %24
  store i8 %28, i8* %29, align 1
  %30 = load i64, i64* %17, align 8
  %31 = add i64 %30, 1
  %32 = and i64 %31, 511
  store i64 %32, i64* %17, align 8
  %33 = or i64 %25, 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 %32
  store i8 %35, i8* %36, align 1
  %37 = load i64, i64* %17, align 8
  %38 = add i64 %37, 1
  %39 = and i64 %38, 511
  store i64 %39, i64* %17, align 8
  %40 = add nuw i64 %25, 2
  %41 = add i64 %26, -2
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %23

43:                                               ; preds = %23, %13
  %44 = phi i64 [ %18, %13 ], [ %39, %23 ]
  %45 = phi i64 [ 0, %13 ], [ %40, %23 ]
  %46 = icmp eq i64 %19, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds i8, i8* %1, i64 %45
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i64 0, i64 %44
  store i8 %49, i8* %50, align 1
  %51 = load i64, i64* %17, align 8
  %52 = add i64 %51, 1
  %53 = and i64 %52, 511
  store i64 %53, i64* %17, align 8
  br label %54

54:                                               ; preds = %43, %47
  %55 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 66
  %56 = bitcast %struct.Gio* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 512, %57
  %59 = icmp ugt i64 %11, %58
  %60 = add i64 %57, %11
  %61 = select i1 %59, i64 512, i64 %60
  store i64 %61, i64* %56, align 8
  br label %62

62:                                               ; preds = %54, %3
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClErrorGioSeek(%struct.Gio* nocapture readonly, i64, i32) #0 {
  %4 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 67
  %5 = bitcast %struct.Gio* %4 to %struct.Gio**
  %6 = load %struct.Gio*, %struct.Gio** %5, align 8
  %7 = getelementptr inbounds %struct.Gio, %struct.Gio* %6, i64 0, i32 0
  %8 = load %struct.GioVtbl*, %struct.GioVtbl** %7, align 8
  %9 = getelementptr inbounds %struct.GioVtbl, %struct.GioVtbl* %8, i64 0, i32 3
  %10 = load i64 (%struct.Gio*, i64, i32)*, i64 (%struct.Gio*, i64, i32)** %9, align 8
  %11 = tail call i64 %10(%struct.Gio* %6, i64 %1, i32 %2) #3
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClErrorGioFlush(%struct.Gio* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 67
  %3 = bitcast %struct.Gio* %2 to %struct.Gio**
  %4 = load %struct.Gio*, %struct.Gio** %3, align 8
  %5 = getelementptr inbounds %struct.Gio, %struct.Gio* %4, i64 0, i32 0
  %6 = load %struct.GioVtbl*, %struct.GioVtbl** %5, align 8
  %7 = getelementptr inbounds %struct.GioVtbl, %struct.GioVtbl* %6, i64 0, i32 4
  %8 = load i32 (%struct.Gio*)*, i32 (%struct.Gio*)** %7, align 8
  %9 = tail call i32 %8(%struct.Gio* %4) #3
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClErrorGioClose(%struct.Gio*) #0 {
  %2 = getelementptr inbounds %struct.Gio, %struct.Gio* %0, i64 0, i32 0
  %3 = load %struct.GioVtbl*, %struct.GioVtbl** %2, align 8
  %4 = getelementptr inbounds %struct.GioVtbl, %struct.GioVtbl* %3, i64 0, i32 4
  %5 = load i32 (%struct.Gio*)*, i32 (%struct.Gio*)** %4, align 8
  %6 = tail call i32 %5(%struct.Gio* %0) #3
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @NaClErrorGioGetOutput(%struct.NaClErrorGio* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #2 {
  %4 = bitcast %struct.NaClErrorGio* %0 to i8*
  %5 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %145, label %8

8:                                                ; preds = %3
  %9 = icmp ugt i64 %6, %2
  %10 = select i1 %9, i64 %2, i64 %6
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %145, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %6
  %16 = icmp ult i64 %10, 32
  br i1 %16, label %130, label %17

17:                                               ; preds = %12
  %18 = add i64 %10, -1
  %19 = trunc i64 %14 to i9
  %20 = trunc i64 %6 to i9
  %21 = sub i9 %19, %20
  %22 = trunc i64 %18 to i9
  %23 = xor i9 %21, -1
  %24 = icmp ult i9 %23, %22
  %25 = icmp ugt i64 %18, 511
  %26 = or i1 %24, %25
  %27 = zext i9 %21 to i64
  %28 = icmp ne i64 %15, %27
  %29 = or i1 %26, %28
  br i1 %29, label %130, label %30

30:                                               ; preds = %17
  %31 = getelementptr i8, i8* %1, i64 %10
  %32 = sub i64 %14, %6
  %33 = and i64 %32, 511
  %34 = add nuw nsw i64 %33, 8
  %35 = getelementptr i8, i8* %4, i64 %34
  %36 = add i64 %10, %33
  %37 = add i64 %36, 8
  %38 = getelementptr i8, i8* %4, i64 %37
  %39 = icmp ugt i8* %38, %1
  %40 = icmp ult i8* %35, %31
  %41 = and i1 %39, %40
  br i1 %41, label %130, label %42

42:                                               ; preds = %30
  %43 = and i64 %10, -32
  %44 = add i64 %15, %43
  %45 = add i64 %43, -32
  %46 = lshr exact i64 %45, 5
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 96
  br i1 %49, label %106, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %102, %52 ]
  %54 = phi i64 [ %15, %50 ], [ %103, %52 ]
  %55 = phi i64 [ %51, %50 ], [ %104, %52 ]
  %56 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 %54
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1, !alias.scope !2
  %59 = getelementptr inbounds i8, i8* %56, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1, !alias.scope !2
  %62 = getelementptr inbounds i8, i8* %1, i64 %53
  %63 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %63, align 1, !alias.scope !5, !noalias !2
  %64 = getelementptr inbounds i8, i8* %62, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %65, align 1, !alias.scope !5, !noalias !2
  %66 = or i64 %53, 32
  %67 = add i64 %54, 32
  %68 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 %67
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !2
  %71 = getelementptr inbounds i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !2
  %74 = getelementptr inbounds i8, i8* %1, i64 %66
  %75 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %75, align 1, !alias.scope !5, !noalias !2
  %76 = getelementptr inbounds i8, i8* %74, i64 16
  %77 = bitcast i8* %76 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !5, !noalias !2
  %78 = or i64 %53, 64
  %79 = add i64 %54, 64
  %80 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 %79
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !2
  %83 = getelementptr inbounds i8, i8* %80, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1, !alias.scope !2
  %86 = getelementptr inbounds i8, i8* %1, i64 %78
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %87, align 1, !alias.scope !5, !noalias !2
  %88 = getelementptr inbounds i8, i8* %86, i64 16
  %89 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1, !alias.scope !5, !noalias !2
  %90 = or i64 %53, 96
  %91 = add i64 %54, 96
  %92 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 %91
  %93 = bitcast i8* %92 to <16 x i8>*
  %94 = load <16 x i8>, <16 x i8>* %93, align 1, !alias.scope !2
  %95 = getelementptr inbounds i8, i8* %92, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1, !alias.scope !2
  %98 = getelementptr inbounds i8, i8* %1, i64 %90
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %94, <16 x i8>* %99, align 1, !alias.scope !5, !noalias !2
  %100 = getelementptr inbounds i8, i8* %98, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %101, align 1, !alias.scope !5, !noalias !2
  %102 = add i64 %53, 128
  %103 = add i64 %54, 128
  %104 = add i64 %55, -4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %52, !llvm.loop !7

106:                                              ; preds = %52, %42
  %107 = phi i64 [ 0, %42 ], [ %102, %52 ]
  %108 = phi i64 [ %15, %42 ], [ %103, %52 ]
  %109 = icmp eq i64 %48, 0
  br i1 %109, label %128, label %110

110:                                              ; preds = %106, %110
  %111 = phi i64 [ %124, %110 ], [ %107, %106 ]
  %112 = phi i64 [ %125, %110 ], [ %108, %106 ]
  %113 = phi i64 [ %126, %110 ], [ %48, %106 ]
  %114 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 %112
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !2
  %117 = getelementptr inbounds i8, i8* %114, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !2
  %120 = getelementptr inbounds i8, i8* %1, i64 %111
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %121, align 1, !alias.scope !5, !noalias !2
  %122 = getelementptr inbounds i8, i8* %120, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %123, align 1, !alias.scope !5, !noalias !2
  %124 = add i64 %111, 32
  %125 = add i64 %112, 32
  %126 = add i64 %113, -1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %110, !llvm.loop !9

128:                                              ; preds = %110, %106
  %129 = icmp eq i64 %10, %43
  br i1 %129, label %143, label %130

130:                                              ; preds = %128, %30, %17, %12
  %131 = phi i64 [ %15, %30 ], [ %15, %17 ], [ %15, %12 ], [ %44, %128 ]
  %132 = phi i64 [ 0, %30 ], [ 0, %17 ], [ 0, %12 ], [ %43, %128 ]
  br label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %140, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %141, %133 ], [ %132, %130 ]
  %136 = and i64 %134, 511
  %137 = getelementptr inbounds %struct.NaClErrorGio, %struct.NaClErrorGio* %0, i64 0, i32 1, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = getelementptr inbounds i8, i8* %1, i64 %135
  store i8 %138, i8* %139, align 1
  %140 = add nuw nsw i64 %136, 1
  %141 = add nuw i64 %135, 1
  %142 = icmp ult i64 %141, %10
  br i1 %142, label %133, label %143, !llvm.loop !11

143:                                              ; preds = %133, %128
  %144 = load i64, i64* %5, align 8
  br label %145

145:                                              ; preds = %8, %143, %3
  %146 = phi i64 [ %6, %3 ], [ %144, %143 ], [ %6, %8 ]
  ret i64 %146
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
