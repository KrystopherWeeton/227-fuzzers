; ModuleID = '../../third_party/blink/renderer/core/html/custom/element_internals.cc'
source_filename = "../../third_party/blink/renderer/core/html/custom/element_internals.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.251", i32, [4 x i8], %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.387", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.403", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.415", %"class.std::__1::unique_ptr.421", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.428", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.278", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.367", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__atomic_base.289" }
%"struct.std::__1::__atomic_base.289" = type { %"struct.std::__1::__cxx_atomic_impl.290" }
%"struct.std::__1::__cxx_atomic_impl.290" = type { %"struct.std::__1::__cxx_atomic_base_impl.291" }
%"struct.std::__1::__cxx_atomic_base_impl.291" = type { i64 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::Worklist.305"* }
%"class.blink::Worklist.305" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::Worklist.312"* }
%"class.blink::Worklist.312" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::Worklist.319"* }
%"class.blink::Worklist.319" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::Worklist.326"* }
%"class.blink::Worklist.326" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::Worklist.333"* }
%"class.blink::Worklist.333" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::Worklist.340"* }
%"class.blink::Worklist.340" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.287" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.347", %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.359", %"class.std::__1::__compressed_pair.361", [4 x i8] }>
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349", %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { i64 }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { float }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.370", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.379" }
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.409" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.298"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.305"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.312"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.319"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.326"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.684" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.427 }
%class.scoped_refptr.427 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.428" = type { %"struct.std::__1::__atomic_base.429" }
%"struct.std::__1::__atomic_base.429" = type { %"struct.std::__1::__cxx_atomic_impl.430" }
%"struct.std::__1::__cxx_atomic_impl.430" = type { %"struct.std::__1::__cxx_atomic_base_impl.431" }
%"struct.std::__1::__cxx_atomic_base_impl.431" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.432" }
%"class.base::time_internal::TimeBase.432" = type { i64 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.238", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.238" = type { %"class.base::RefCounted.239" }
%"class.base::RefCounted.239" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.242" }
%"class.blink::HeapHashMap.242" = type { %"class.WTF::HashMap.245" }
%"class.WTF::HashMap.245" = type { %"class.WTF::HashTable.246" }
%"class.WTF::HashTable.246" = type <{ %"struct.WTF::KeyValuePair.248"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.248" = type { %"class.blink::WeakMember.249", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::Member.48", i8, %"class.blink::Member.81", %"class.blink::Member.85", %"class.blink::Member.87", %"class.WTF::HashMap", %"class.blink::HeapHashMap.101" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member.44", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.23", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.36", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.12" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.120", %"class.blink::Member.122", %"class.blink::Member.4", %"class.blink::Member.124", %"class.blink::Member.124", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.152", %"class.blink::HeapVector.154" }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.204", %"class.WTF::Vector.204", i8, i32, %"class.blink::Member.211", %"class.blink::Member.213", %"class.blink::Member.215", %"class.blink::Member.217", %"class.blink::Member.219", %"class.blink::Member.221", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.223", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.229", %"class.blink::Member.231", %"class.blink::Member.160", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.234", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.139", %"class.blink::Member.85", %"class.blink::Member.445", %"class.blink::Member.85", %"class.blink::Member.85", %"class.blink::Member.85", %"class.blink::UserActionElementSet", %"class.blink::Member.454", double, double, i64, i64, %"class.blink::HeapHashSet.456", %"class.blink::HeapHashSet.463", i16, i8, %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::TextLinkColors", %"class.blink::Member.498", i8, [7 x i8], %"class.blink::HeapHashMap.500", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.85", %"class.WTF::Vector.507", %"class.blink::Member.512", %"class.blink::Member.516", i8, %"class.blink::Member.85", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.518", %"class.blink::HeapVector.520", %"class.std::__1::unique_ptr.528", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.534", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.547", %"class.WTF::Vector.549", i8, i8, %"class.std::__1::unique_ptr.554", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.139", %"class.blink::HeapVector.560", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.568", i8, i32, %"class.blink::Member.570", %"class.blink::Member.572", %"class.blink::Member.574", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.576", %"class.WTF::HashMap.578", %"class.blink::Member.583", %"class.blink::Member.585", %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.122", %"class.blink::Member.122", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.591", i8, i32, %"class.blink::Member.598", %"class.blink::Member.600", i32, %"class.blink::Member.602", %"class.blink::Member.604", %"class.blink::Member.606", %"class.std::__1::unique_ptr.608", i64, %"class.std::__1::unique_ptr.614", i32, i32, %"class.blink::Member.620", %"class.blink::Member.622", %"class.blink::Member.624", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.626", %"class.WTF::Vector.628", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.633", %"class.blink::Member.640", %"class.std::__1::unique_ptr.642", %"class.blink::Member.648", i8, i8, %"class.WTF::String", %"class.blink::Member.650", i8, [7 x i8], %"class.blink::HeapHashMap.652", %"class.blink::HeapObserverSet", %"class.blink::Member.666", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.668", i32, i8, i8, %"class.blink::WeakMember.670", %"class.blink::Member.671" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.197" }
%"class.blink::HeapHashMap.197" = type { %"class.WTF::HashMap.200" }
%"class.WTF::HashMap.200" = type { %"class.WTF::HashTable.201" }
%"class.WTF::HashTable.201" = type <{ %"struct.WTF::KeyValuePair.203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.203" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.208", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.208" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.55" }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.689", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.738", i32, i8, [3 x i8], %"class.blink::HeapVector.740", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.748", %"class.blink::Member.750", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.759", %"class.blink::Member.765", %"class.blink::Member.767", i8, [7 x i8] }>
%"class.blink::Supplementable.689" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.690" }
%"class.blink::HeapHashMap.690" = type { %"class.WTF::HashMap.693" }
%"class.WTF::HashMap.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"struct.WTF::KeyValuePair.696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.696" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.705" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.697" }
%"class.blink::HeapObserverSet.697" = type { i32, [4 x i8], %"class.blink::HeapHashSet.698" }
%"class.blink::HeapHashSet.698" = type { %"class.WTF::HashSet.701" }
%"class.WTF::HashSet.701" = type { %"class.WTF::HashTable.702" }
%"class.WTF::HashTable.702" = type <{ %"class.blink::WeakMember.704"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.704" = type opaque
%"class.blink::Supplementable.705" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.706" }
%"class.blink::HeapHashMap.706" = type { %"class.WTF::HashMap.709" }
%"class.WTF::HashMap.709" = type { %"class.WTF::HashTable.710" }
%"class.WTF::HashTable.710" = type <{ %"struct.WTF::KeyValuePair.712"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.712" = type { i8*, %"class.blink::Member.866" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.868" }
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.713, %"class.std::__1::unique_ptr.722", %"class.std::__1::unique_ptr.722", %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.728", %"class.blink::Member.213", i32, [4 x i8], %"class.WTF::HashSet.734", i32, i32 }
%class.scoped_refptr.713 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.714", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.716", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.721 }
%"class.WTF::RefCounted.714" = type { %"class.base::RefCounted.715" }
%"class.base::RefCounted.715" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.716" = type { %"class.absl::optional_internal::optional_data.717" }
%"class.absl::optional_internal::optional_data.717" = type { %"class.absl::optional_internal::optional_data_base.718" }
%"class.absl::optional_internal::optional_data_base.718" = type { %"class.absl::optional_internal::optional_data_dtor_base.719" }
%"class.absl::optional_internal::optional_data_dtor_base.719" = type { i8, %union.anon.720 }
%union.anon.720 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.721 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.734" = type { %"class.WTF::HashTable.735" }
%"class.WTF::HashTable.735" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.740" = type { %"class.WTF::Vector.743" }
%"class.WTF::Vector.743" = type { %"class.WTF::VectorBuffer.744" }
%"class.WTF::VectorBuffer.744" = type { %"class.WTF::VectorBufferBase.745" }
%"class.WTF::VectorBufferBase.745" = type { %"class.blink::Member.746"*, i32, i32 }
%"class.blink::Member.746" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.752", i32, i32 }
%"class.blink::HeapHashMap.752" = type { %"class.WTF::HashMap.755" }
%"class.WTF::HashMap.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.162", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.164, %"class.WTF::Vector.165", %"class.WTF::Vector.165", %"class.blink::Member.2", %"class.blink::Member.170", %"class.blink::HeapHashSet.174", %"class.blink::Member.122", %"class.WTF::HashSet.181", %"class.WTF::TextPosition", %"class.blink::Member.185", %"class.blink::HeapVector.187", %"class.blink::Member.194" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.164 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.172" }
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.174" = type { %"class.WTF::HashSet.177" }
%"class.WTF::HashSet.177" = type { %"class.WTF::HashTable.178" }
%"class.WTF::HashTable.178" = type <{ %"class.blink::WeakMember.180"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.180" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.181" = type { %"class.WTF::HashTable.182" }
%"class.WTF::HashTable.182" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.187" = type { %"class.WTF::Vector.190" }
%"class.WTF::Vector.190" = type { %"class.WTF::VectorBuffer.191" }
%"class.WTF::VectorBuffer.191" = type { %"class.WTF::VectorBufferBase.192" }
%"class.WTF::VectorBufferBase.192" = type { %"class.blink::Member.170"*, i32, i32 }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.233 }
%class.scoped_refptr.233 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236" }
%"class.WTF::VectorBufferBase.236" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.122", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.2", %"class.blink::Member.2", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.447" }
%"class.blink::HeapHashMap.447" = type { %"class.WTF::HashMap.450" }
%"class.WTF::HashMap.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"struct.WTF::KeyValuePair.453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.453" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.456" = type { %"class.WTF::HashSet.459" }
%"class.WTF::HashSet.459" = type { %"class.WTF::HashTable.460" }
%"class.WTF::HashTable.460" = type <{ %"class.blink::WeakMember.462"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.462" = type opaque
%"class.blink::HeapHashSet.463" = type { %"class.WTF::HashSet.466" }
%"class.WTF::HashSet.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"class.blink::WeakMember.469"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.469" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.154" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.122", %"class.blink::Member.480", %"class.WTF::HashMap.491", %"class.blink::Member.496", i8, [7 x i8] }>
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.122", %"class.blink::HeapVector.484", i8, [7 x i8] }>
%"class.blink::HeapVector.484" = type { %"class.WTF::Vector.487" }
%"class.WTF::Vector.487" = type { %"class.WTF::VectorBuffer.488" }
%"class.WTF::VectorBuffer.488" = type { %"class.WTF::VectorBufferBase.32", [512 x i8] }
%"class.WTF::VectorBufferBase.32" = type { %"class.blink::Member.33"*, i32, i32 }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member.44", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.WTF::HashMap.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.500" = type { %"class.WTF::HashMap.503" }
%"class.WTF::HashMap.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"struct.WTF::KeyValuePair.506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.506" = type opaque
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.520" = type { %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::Member.526"*, i32, i32 }
%"class.blink::Member.526" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.534" = type { %"class.WTF::HashSet.537" }
%"class.WTF::HashSet.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"class.blink::WeakMember.540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.540" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.541", i32, [4 x i8] }>
%"class.WTF::Vector.541" = type { %"class.WTF::VectorBuffer.542" }
%"class.WTF::VectorBuffer.542" = type { %"class.WTF::VectorBufferBase.543" }
%"class.WTF::VectorBufferBase.543" = type { %"struct.std::__1::pair.544"*, i32, i32 }
%"struct.std::__1::pair.544" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.549" = type { %"class.WTF::VectorBuffer.550" }
%"class.WTF::VectorBuffer.550" = type { %"class.WTF::VectorBufferBase.551" }
%"class.WTF::VectorBufferBase.551" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.139" = type { %"class.WTF::Vector.142" }
%"class.WTF::Vector.142" = type { %"class.WTF::VectorBuffer.143" }
%"class.WTF::VectorBuffer.143" = type { %"class.WTF::VectorBufferBase.144" }
%"class.WTF::VectorBufferBase.144" = type { %"class.blink::Member.85"*, i32, i32 }
%"class.blink::HeapVector.560" = type { %"class.WTF::Vector.563" }
%"class.WTF::Vector.563" = type { %"class.WTF::VectorBuffer.564" }
%"class.WTF::VectorBuffer.564" = type { %"class.WTF::VectorBufferBase.565" }
%"class.WTF::VectorBufferBase.565" = type { %"class.blink::Member.566"*, i32, i32 }
%"class.blink::Member.566" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.122" }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.582"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.582" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.444", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.435, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.435 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.436" }>
%"class.base::RefCountedThreadSafe.436" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.437 }
%class.scoped_refptr.437 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.438", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.438" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.439" }
%"struct.std::__1::atomic.439" = type { %"struct.std::__1::__atomic_base.440" }
%"struct.std::__1::__atomic_base.440" = type { %"struct.std::__1::__atomic_base.441" }
%"struct.std::__1::__atomic_base.441" = type { %"struct.std::__1::__cxx_atomic_impl.442" }
%"struct.std::__1::__cxx_atomic_impl.442" = type { %"struct.std::__1::__cxx_atomic_base_impl.443" }
%"struct.std::__1::__cxx_atomic_base_impl.443" = type { i8 }
%"class.blink::WeakMember.444" = type { %"class.blink::MemberBase.123" }
%"class.blink::HeapHashSet.591" = type { %"class.WTF::HashSet.594" }
%"class.WTF::HashSet.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"class.blink::Member.597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.597" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.626" = type { %"class.blink::MemberBase.627" }
%"class.blink::MemberBase.627" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.633" = type { %"class.WTF::HashMap.636" }
%"class.WTF::HashMap.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"struct.WTF::KeyValuePair.639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.639" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.652" = type { %"class.WTF::HashMap.655" }
%"class.WTF::HashMap.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ %"struct.WTF::KeyValuePair.658"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.658" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.659" }
%"class.blink::HeapHashSet.659" = type { %"class.WTF::HashSet.662" }
%"class.WTF::HashSet.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"class.blink::WeakMember.665"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.665" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.122", %"class.blink::HeapHashSet.675", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.682", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.675" = type { %"class.WTF::HashSet.678" }
%"class.WTF::HashSet.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ %"class.blink::Member.681"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.681" = type opaque
%"class.blink::HeapTaskRunnerTimer.682" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.683", { i64, i64 } }
%"class.blink::WeakMember.683" = type { %"class.blink::MemberBase.669" }
%"class.blink::WeakMember.670" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.128" }
%"class.blink::HeapHashMap.128" = type { %"class.WTF::HashMap.131" }
%"class.WTF::HashMap.131" = type { %"class.WTF::HashTable.132" }
%"class.WTF::HashTable.132" = type <{ %"struct.WTF::KeyValuePair.134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.134" = type { %"class.WTF::AtomicString", %"class.blink::Member.135" }
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.85", i32, %"class.blink::HeapVector.139" }
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.154" = type { %"class.WTF::Vector.157" }
%"class.WTF::Vector.157" = type { %"class.WTF::VectorBuffer.158" }
%"class.WTF::VectorBuffer.158" = type { %"class.WTF::VectorBufferBase.159" }
%"class.WTF::VectorBufferBase.159" = type { %"class.blink::Member.160"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.16", %"class.blink::Member.18", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.16" = type { %"class.WTF::SingleThreadedBitField.17" }
%"class.WTF::SingleThreadedBitField.17" = type { i32 }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.21", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.21" = type { %"class.base::RefCounted.22" }
%"class.base::RefCounted.22" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapHashMap.27"* }
%"class.blink::HeapHashMap.27" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.blink::HeapVector.36" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Member.42"*, i32, i32 }
%"class.blink::Member.42" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.33" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::HTMLElement"* }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.52", %"class.blink::Member.66", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional", %"class.absl::optional.61", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.54 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.54 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::FormData"* }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.68", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.68" = type { %"class.WTF::Vector.71" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::Member.74"*, i32, i32 }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::FormData::Entry"* }
%"class.blink::FormData::Entry" = type { %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.78", %"class.WTF::String" }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::Blob"* }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::Element"* }
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type { %"class.blink::ScriptWrappable", %"class.blink::SetlikeIterable", %"class.blink::Member.85", %"class.WTF::Vector.90", %"class.blink::HeapHashSet" }
%"class.blink::SetlikeIterable" = type { %"class.blink::Iterable.89" }
%"class.blink::Iterable.89" = type { i32 (...)** }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.98" }
%"class.WTF::HashTable.98" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HeapHashMap.101" = type { %"class.WTF::HashMap.104" }
%"class.WTF::HashMap.104" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"struct.WTF::KeyValuePair.107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.107" = type { %"class.blink::QualifiedName", %"class.blink::Member.108" }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::HeapLinkedHashSet"* }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.112", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.112" = type { %"class.WTF::HashTable.113" }
%"class.WTF::HashTable.113" = type <{ %"struct.WTF::KeyValuePair.115"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.115" = type <{ %"class.blink::WeakMember.813", i32, [4 x i8] }>
%"class.blink::WeakMember.813" = type { %"class.blink::MemberBase.86" }
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.116", i32, i32 }
%"class.WTF::Vector.116" = type { %"class.WTF::VectorBuffer.117" }
%"class.WTF::VectorBuffer.117" = type { %"class.WTF::VectorBufferBase.118" }
%"class.WTF::VectorBufferBase.118" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::WeakMember.813" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.769" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.769" = type { %"class.v8::TracedReference.770" }
%"class.v8::TracedReference.770" = type { %"class.v8::BasicTracedReference.771" }
%"class.v8::BasicTracedReference.771" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::CustomElementRegistry" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::HeapVector.821", %"class.WTF::HashMap.829", %"class.blink::Member.834", %"class.blink::Member.836", %"class.blink::HeapHashMap.839", %"class.blink::Member.846" }
%"class.blink::HeapVector.821" = type { %"class.WTF::Vector.824" }
%"class.WTF::Vector.824" = type { %"class.WTF::VectorBuffer.825" }
%"class.WTF::VectorBuffer.825" = type { %"class.WTF::VectorBufferBase.826" }
%"class.WTF::VectorBufferBase.826" = type { %"class.blink::Member.827"*, i32, i32 }
%"class.blink::Member.827" = type opaque
%"class.WTF::HashMap.829" = type { %"class.WTF::HashTable.830" }
%"class.WTF::HashTable.830" = type <{ %"struct.WTF::KeyValuePair.833"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.833" = type opaque
%"class.blink::Member.834" = type { %"class.blink::MemberBase.835" }
%"class.blink::MemberBase.835" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::HeapHashMap.838"* }
%"class.blink::HeapHashMap.838" = type opaque
%"class.blink::HeapHashMap.839" = type { %"class.WTF::HashMap.842" }
%"class.WTF::HashMap.842" = type { %"class.WTF::HashTable.843" }
%"class.WTF::HashTable.843" = type <{ %"struct.WTF::KeyValuePair.845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.845" = type opaque
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::CustomElementReactionStack"* }
%"class.blink::CustomElementReactionStack" = type opaque
%"class.blink::CustomElementDefinition" = type { %"class.blink::NameClient", %"class.blink::CustomElementDescriptor", %"class.blink::HeapVector.850", %"class.WTF::HashSet.181", i8, i8, i8, i8, i8, %"class.blink::HeapVector.154" }
%"class.blink::CustomElementDescriptor" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HeapVector.850" = type { %"class.WTF::Vector.853" }
%"class.WTF::Vector.853" = type { %"class.WTF::VectorBuffer.854" }
%"class.WTF::VectorBuffer.854" = type { %"class.WTF::VectorBufferBase.144", [8 x i8] }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.18", %"class.WTF::Vector.870" }
%"class.WTF::Vector.870" = type { %"class.WTF::VectorBuffer.871" }
%"class.WTF::VectorBuffer.871" = type { %"class.WTF::VectorBufferBase.872", [64 x i8] }
%"class.WTF::VectorBufferBase.872" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::LabelsNodeList" = type { %"class.blink::LiveNodeList" }
%"class.blink::LiveNodeList" = type { %"class.blink::NodeList", %"class.blink::LiveNodeListBase.base", %"class.blink::CollectionItemsCache" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.120", i16 }>
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.139" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.85", i32, i32 }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.474", %"class.blink::Member.772", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::NodeListsNodeData" = type { %"class.blink::Member.776", %"class.blink::HeapHashMap.778", %"class.blink::HeapHashMap.788" }
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::NodeList"* }
%"class.blink::HeapHashMap.778" = type { %"class.WTF::HashMap.781" }
%"class.WTF::HashMap.781" = type { %"class.WTF::HashTable.782" }
%"class.WTF::HashTable.782" = type <{ %"struct.WTF::KeyValuePair.784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.784" = type { %"struct.std::__1::pair.785", %"class.blink::Member.786" }
%"struct.std::__1::pair.785" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::LiveNodeListBase"* }
%"class.blink::LiveNodeListBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.120", i16, [6 x i8] }>
%"class.blink::HeapHashMap.788" = type { %"class.WTF::HashMap.791" }
%"class.WTF::HashMap.791" = type { %"class.WTF::HashTable.792" }
%"class.WTF::HashTable.792" = type <{ %"struct.WTF::KeyValuePair.794"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.794" = type { %"class.blink::QualifiedName", %"class.blink::Member.795" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::TagCollectionNS"* }
%"class.blink::TagCollectionNS" = type { %"class.blink::HTMLCollection", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.797", %"class.blink::CollectionItemsCache.810" }
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.801", %"class.blink::HeapHashMap.801" }
%"class.blink::HeapHashMap.801" = type { %"class.WTF::HashMap.804" }
%"class.WTF::HashMap.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"struct.WTF::KeyValuePair.807"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.807" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.808" }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::HeapVector.139"* }
%"class.blink::CollectionItemsCache.810" = type { %"class.blink::CollectionIndexCache.811", i8, %"class.blink::HeapVector.139" }
%"class.blink::CollectionIndexCache.811" = type { i32 (...)**, %"class.blink::Member.85", i32, i32 }
%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"* }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HeapVector.139" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector.90" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.861, %"class.blink::Member.862", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.861 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.864" }
%"class.blink::Persistent.864" = type { %"class.blink::PersistentBase.865" }
%"class.blink::PersistentBase.865" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.882 }
%union.anon.882 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.953" = type { i8 }
%"class.blink::HeapHashTableBacking.944" = type { i8 }

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN5blink16ElementInternalsD2Ev = comdat any

$_ZN5blink16ElementInternalsD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink16ElementInternals18GetWrapperTypeInfoEv = comdat any

$_ZThn16_N5blink16ElementInternalsD1Ev = comdat any

$_ZThn16_N5blink16ElementInternalsD0Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_32V8UnionFileOrFormDataOrUSVStringEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18ValidityStateFlagsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14CustomStateSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_17HeapLinkedHashSetINS3_10WeakMemberINS3_7ElementEEENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_7ElementEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink26WeakCallbackMethodDelegateIN3WTF22VectorBackedLinkedListINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEEXadL_ZNS7_21ProcessCustomWeaknessIS6_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSB_14LivenessBrokerEEEE10TrampolineERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE21ProcessCustomWeaknessIS5_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSA_14LivenessBrokerE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_INS_12AtomicStringEEEEENS3_17QualifiedNameHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_S6_EERKS4_RKS6_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS4_INS_12AtomicStringEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS6_S8_EEEEvRT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ReinsertEOS5_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SF_SK_EERKS2_DnEENS_18HashTableAddResultISL_SD_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSD_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6RehashEjPSD_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSD_jSM_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINSA_IS3_EENSA_ISD_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS3_10HashTraitsISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINSC_IS5_EENSC_ISF_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEES0_EEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14ShrinkCapacityEj = comdat any

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6LookupERKS2_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE4findERKS2_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS2_SD_SE_SF_SJ_SH_SK_EE = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE4findERKS2_ = comdat any

$_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRNS1_6MemberIS3_EEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE = comdat any

$_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRNS1_6MemberIS3_EEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS1_6MemberIS3_EERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16ElementInternalsE = hidden unnamed_addr constant { [34 x i8*], [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZN5blink16ElementInternalsD2Ev to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZN5blink16ElementInternalsD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*, %"class.blink::Visitor"*)* @_ZNK5blink16ElementInternals5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals14IsEnumeratableEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*, %"class.blink::FormData"*)* @_ZN5blink16ElementInternals16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZN5blink16ElementInternals13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals12ValueMissingEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals11CustomErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals20ValidationSubMessageEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZN5blink16ElementInternals27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::ElementInternals"*)* @_ZNK5blink16ElementInternals20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*, %"class.blink::FormControlState"*)* @_ZN5blink16ElementInternals23RestoreFormControlStateERKNS_16FormControlStateE to i8*)], [34 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::ElementInternals"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink16ElementInternals5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZThn16_N5blink16ElementInternalsD1Ev to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZThn16_N5blink16ElementInternalsD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*, %"class.blink::FormData"*)* @_ZThn16_N5blink16ElementInternals16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZThn16_N5blink16ElementInternals27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::ElementInternals"*)* @_ZThn16_NK5blink16ElementInternals20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*, %"class.blink::FormControlState"*)* @_ZThn16_N5blink16ElementInternals23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::ElementInternals"*)* @_ZThn16_N5blink16ElementInternals13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)] }, align 8
@.str = private unnamed_addr constant [60 x i8] c"The target element is not a form-associated custom element.\00", align 1
@.str.1 = private unnamed_addr constant [93 x i8] c"The second argument should not be empty if one or more flags in the first argument are true.\00", align 1
@.str.2 = private unnamed_addr constant [84 x i8] c"The Element argument should be a shadow-including descendant of the target element.\00", align 1
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"File\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"FormData\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"USVString\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"restore\00", align 1
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink16ElementInternals18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::bindings::UnionBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink32V8UnionFileOrFormDataOrUSVStringE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.18 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameENS_12AtomicStringEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::QualifiedName, WTF::AtomicString>]\00", align 1
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.20 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS3_10HashTraitsISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINSC_IS5_EENSC_ISF_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [619 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::QualifiedName, WTF::KeyValuePair<blink::QualifiedName, blink::Member<blink::HeapLinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> > > > >, WTF::KeyValuePairKeyExtractor, blink::QualifiedNameHash, WTF::HashMapValueTraits<WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<blink::Member<blink::HeapLinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> > > > > >, WTF::HashTraits<blink::QualifiedName>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapLinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [273 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<WTF::VectorBackedLinkedListNode<blink::WeakMember<blink::Element>, blink::HeapAllocator>, WTF::VectorTraits<WTF::VectorBackedLinkedListNode<blink::WeakMember<blink::Element>, blink::HeapAllocator> > >]\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [444 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::Element>, WTF::KeyValuePair<blink::WeakMember<blink::Element>, unsigned int>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Element>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::Element> >, WTF::HashTraits<unsigned int> >, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator> >]\00", align 1

@_ZN5blink16ElementInternalsC1ERNS_11HTMLElementE = hidden unnamed_addr alias void (%"class.blink::ElementInternals"*, %"class.blink::HTMLElement"*), void (%"class.blink::ElementInternals"*, %"class.blink::HTMLElement"*)* @_ZN5blink16ElementInternalsC2ERNS_11HTMLElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternalsC2ERNS_11HTMLElementE(%"class.blink::ElementInternals"*, %"class.blink::HTMLElement"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::ListedElement.base"* %5 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementC2Ev(%"class.blink::ListedElement"* %6) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.blink::ListedElement.base", %"class.blink::ListedElement.base"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::HTMLElement"* %1, %"class.blink::HTMLElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 10
  %12 = bitcast %"class.blink::HeapHashMap.101"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #11
  %13 = bitcast %"class.blink::V8UnionFileOrFormDataOrUSVString"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 17, i1 false)
  %14 = bitcast %"class.blink::ValidityStateFlags"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 44, i1 false)
  ret void
}

declare void @_ZN5blink13ListedElementC2Ev(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ElementInternals5TraceEPNS_7VisitorE(%"class.blink::ElementInternals"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.46"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.48"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_32V8UnionFileOrFormDataOrUSVStringEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.48"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_32V8UnionFileOrFormDataOrUSVStringEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6
  %37 = bitcast %"class.blink::Member.81"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18ValidityStateFlagsEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 7
  %48 = bitcast %"class.blink::Member.85"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 8
  %59 = bitcast %"class.blink::Member.87"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14CustomStateSetEE5TraceEPNS_7VisitorEPKv) #11
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 10
  %70 = bitcast %"class.blink::HeapHashMap.101"* %69 to i64*
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = bitcast %"class.blink::HeapHashMap.101"* %69 to i8**
  %73 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %74 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %74, i64 11
  %76 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %75, align 8
  tail call void %76(%"class.blink::Visitor"* %1, i8** %72) #11
  %77 = icmp eq i64 %71, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %68
  %79 = inttoptr i64 %71 to i8*
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %79, i8* nonnull %79, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %84

84:                                               ; preds = %68, %78
  %85 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %86 = bitcast %"class.blink::ListedElement.base"* %85 to %"class.blink::ListedElement"*
  tail call void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"* %86, %"class.blink::Visitor"* %1) #11
  %87 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %87, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink16ElementInternals5TraceEPNS_7VisitorE(%"class.blink::ElementInternals"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ElementInternals"*
  tail call void @_ZNK5blink16ElementInternals5TraceEPNS_7VisitorE(%"class.blink::ElementInternals"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals12setFormValueEPKNS_32V8UnionFileOrFormDataOrUSVStringERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16ElementInternals12setFormValueEPKNS_32V8UnionFileOrFormDataOrUSVStringES3_RNS_14ExceptionStateE(%"class.blink::ElementInternals"* %0, %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals12setFormValueEPKNS_32V8UnionFileOrFormDataOrUSVStringES3_RNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %6) #11
  br i1 %7, label %29, label %8

8:                                                ; preds = %4
  %9 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %5, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 917504
  switch i32 %12, label %28 [
    i32 393216, label %13
    i32 524288, label %13
    i32 262144, label %13
  ]

13:                                               ; preds = %8, %8, %8
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %9, i64 0, i32 0
  %15 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %14) #11
  %16 = icmp eq %"class.blink::CustomElementRegistry"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %5, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3
  %22 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %21) #11
  %23 = icmp eq %"class.blink::CustomElementDefinition"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %22, i64 0, i32 8
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24, %8, %17, %13
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %137

29:                                               ; preds = %24, %4
  %30 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, null
  br i1 %30, label %66, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %66

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::FormData"*, %"class.blink::FormData"** %36, align 8
  %38 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #11
  %39 = bitcast i8* %38 to %"class.blink::FormData"*
  tail call void @_ZN5blink8FormDataC1ERKS0_(%"class.blink::FormData"* %39, %"class.blink::FormData"* dereferenceable(56) %37) #11
  %40 = getelementptr inbounds i8, i8* %38, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = ptrtoint i8* %38 to i64
  %45 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #11
  %46 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32V8UnionFileOrFormDataOrUSVStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i32*
  store i32 1, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = bitcast i8* %49 to %"class.blink::File"**
  store %"class.blink::File"* null, %"class.blink::File"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 24
  %52 = bitcast i8* %51 to i64*
  store i64 %44, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %45, i64 32
  %54 = bitcast i8* %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %45, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  %59 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %60 = ptrtoint i8* %45 to i64
  %61 = bitcast %"class.blink::Member.48"* %59 to i64*
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %75, label %64

64:                                               ; preds = %35
  %65 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #11
  br label %75

66:                                               ; preds = %29, %31
  %67 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %68 = ptrtoint %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1 to i64
  %69 = bitcast %"class.blink::Member.48"* %67 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1 to i8*
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #11
  br label %75

75:                                               ; preds = %72, %66, %64, %35
  %76 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, %2
  br i1 %76, label %77, label %88

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %79 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 4
  %80 = bitcast %"class.blink::Member.48"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.blink::Member.48"* %79 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %134, label %85

85:                                               ; preds = %77
  %86 = inttoptr i64 %81 to i8*
  %87 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %86) #11
  br label %134

88:                                               ; preds = %75
  %89 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %2, null
  br i1 %89, label %125, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %2, i64 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %125

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %2, i64 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::FormData"*, %"class.blink::FormData"** %95, align 8
  %97 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #11
  %98 = bitcast i8* %97 to %"class.blink::FormData"*
  tail call void @_ZN5blink8FormDataC1ERKS0_(%"class.blink::FormData"* %98, %"class.blink::FormData"* dereferenceable(56) %96) #11
  %99 = getelementptr inbounds i8, i8* %97, i64 -4
  %100 = bitcast i8* %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = or i16 %101, 1
  store atomic i16 %102, i16* %100 release, align 2
  %103 = ptrtoint i8* %97 to i64
  %104 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #11
  %105 = bitcast i8* %104 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32V8UnionFileOrFormDataOrUSVStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 8
  %107 = bitcast i8* %106 to i32*
  store i32 1, i32* %107, align 8
  %108 = getelementptr inbounds i8, i8* %104, i64 16
  %109 = bitcast i8* %108 to %"class.blink::File"**
  store %"class.blink::File"* null, %"class.blink::File"** %109, align 8
  %110 = getelementptr inbounds i8, i8* %104, i64 24
  %111 = bitcast i8* %110 to i64*
  store i64 %103, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %104, i64 32
  %113 = bitcast i8* %112 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds i8, i8* %104, i64 -4
  %115 = bitcast i8* %114 to i16*
  %116 = load atomic i16, i16* %115 monotonic, align 2
  %117 = or i16 %116, 1
  store atomic i16 %117, i16* %115 release, align 2
  %118 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 4
  %119 = ptrtoint i8* %104 to i64
  %120 = bitcast %"class.blink::Member.48"* %118 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %134, label %123

123:                                              ; preds = %94
  %124 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %104) #11
  br label %134

125:                                              ; preds = %88, %90
  %126 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 4
  %127 = ptrtoint %"class.blink::V8UnionFileOrFormDataOrUSVString"* %2 to i64
  %128 = bitcast %"class.blink::Member.48"* %126 to i64*
  store atomic i64 %127, i64* %128 monotonic, align 8
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.blink::V8UnionFileOrFormDataOrUSVString"* %2 to i8*
  %133 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %132) #11
  br label %134

134:                                              ; preds = %131, %125, %123, %94, %85, %77
  %135 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %136 = bitcast %"class.blink::ListedElement.base"* %135 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %136) #11
  br label %137

137:                                              ; preds = %134, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals22IsTargetFormAssociatedEv(%"class.blink::ElementInternals"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %3) #11
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 917504
  switch i32 %9, label %25 [
    i32 393216, label %10
    i32 524288, label %10
    i32 262144, label %10
  ]

10:                                               ; preds = %5, %5, %5
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %6, i64 0, i32 0
  %12 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %11) #11
  %13 = icmp eq %"class.blink::CustomElementRegistry"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 3
  %19 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %12, %"class.WTF::AtomicString"* dereferenceable(8) %18) #11
  %20 = icmp eq %"class.blink::CustomElementDefinition"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %19, i64 0, i32 8
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp ne i8 %23, 0
  br label %25

25:                                               ; preds = %5, %10, %14, %21, %1
  %26 = phi i1 [ true, %1 ], [ false, %10 ], [ false, %14 ], [ %24, %21 ], [ false, %5 ]
  ret i1 %26
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZNK5blink16ElementInternals4formERNS_14ExceptionStateE(%"class.blink::ElementInternals"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %30

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %29 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %28, align 8
  br label %30

30:                                               ; preds = %27, %26
  %31 = phi %"class.blink::HTMLFormElement"* [ %29, %27 ], [ null, %26 ]
  ret %"class.blink::HTMLFormElement"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals11setValidityEPNS_18ValidityStateFlagsERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ValidityStateFlags"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  call void @_ZN5blink16ElementInternals11setValidityEPNS_18ValidityStateFlagsERKN3WTF6StringEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::ElementInternals"* %0, %"class.blink::ValidityStateFlags"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::Element"* null, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %22

22:                                               ; preds = %3, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals11setValidityEPNS_18ValidityStateFlagsERKN3WTF6StringEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ValidityStateFlags"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %7) #11
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 917504
  switch i32 %13, label %29 [
    i32 393216, label %14
    i32 524288, label %14
    i32 262144, label %14
  ]

14:                                               ; preds = %9, %9, %9
  %15 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %10, i64 0, i32 0
  %16 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %15) #11
  %17 = icmp eq %"class.blink::CustomElementRegistry"* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %14
  %19 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %6, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3
  %23 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %16, %"class.WTF::AtomicString"* dereferenceable(8) %22) #11
  %24 = icmp eq %"class.blink::CustomElementDefinition"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %23, i64 0, i32 8
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %9, %18, %14
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %119

30:                                               ; preds = %25, %5
  %31 = icmp eq %"class.blink::ValidityStateFlags"* %1, null
  br i1 %31, label %81, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 11
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %72

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 12
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %72

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 13
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %72

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 14
  %46 = load i8, i8* %45, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %72

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 15
  %50 = load i8, i8* %49, align 2, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %72

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 16
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %72

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 17
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 18
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 19
  %66 = load i8, i8* %65, align 2, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %1, i64 0, i32 20
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %32, %36, %40, %44, %48, %52, %56, %60, %64, %68
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %72, %76
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 17, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %119

81:                                               ; preds = %30, %76, %68
  %82 = icmp eq %"class.blink::Element"* %3, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %81
  %84 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %6, align 8
  %85 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %87 = tail call zeroext i1 @_ZNK5blink4Node27IsShadowIncludingAncestorOfERKS0_(%"class.blink::Node"* %85, %"class.blink::Node"* dereferenceable(64) %86) #11
  br i1 %87, label %89, label %88

88:                                               ; preds = %83
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 8, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %119

89:                                               ; preds = %81, %83
  %90 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 7
  %91 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::Element"*, %"class.blink::Element"** %91, align 8
  %93 = icmp eq %"class.blink::Element"* %92, null
  %94 = icmp eq %"class.blink::Element"* %92, %3
  %95 = or i1 %93, %94
  br i1 %95, label %99, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %98 = bitcast %"class.blink::ListedElement.base"* %97 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement28HideVisibleValidationMessageEv(%"class.blink::ListedElement"* %98) #11
  br label %99

99:                                               ; preds = %89, %96
  %100 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6
  %101 = ptrtoint %"class.blink::ValidityStateFlags"* %1 to i64
  %102 = bitcast %"class.blink::Member.81"* %100 to i64*
  store atomic i64 %101, i64* %102 monotonic, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::ValidityStateFlags"* %1 to i8*
  %107 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %106) #11
  br label %108

108:                                              ; preds = %99, %105
  %109 = ptrtoint %"class.blink::Element"* %3 to i64
  %110 = bitcast %"class.blink::Member.85"* %90 to i64*
  store atomic i64 %109, i64* %110 monotonic, align 8
  %111 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.blink::Element"* %3 to i8*
  %115 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %114) #11
  br label %116

116:                                              ; preds = %108, %113
  %117 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %118 = bitcast %"class.blink::ListedElement.base"* %117 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement26SetCustomValidationMessageERKN3WTF6StringE(%"class.blink::ListedElement"* %118, %"class.WTF::String"* dereferenceable(8) %2) #11
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %118) #11
  br label %119

119:                                              ; preds = %116, %88, %80, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals11setValidityEPNS_18ValidityStateFlagsERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ValidityStateFlags"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16ElementInternals11setValidityEPNS_18ValidityStateFlagsERKN3WTF6StringEPNS_7ElementERNS_14ExceptionStateE(%"class.blink::ElementInternals"* %0, %"class.blink::ValidityStateFlags"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::Element"* null, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  ret void
}

declare zeroext i1 @_ZNK5blink4Node27IsShadowIncludingAncestorOfERKS0_(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement28HideVisibleValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement26SetCustomValidationMessageERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals12willValidateERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %31

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %29 = bitcast %"class.blink::ListedElement.base"* %28 to %"class.blink::ListedElement"*
  %30 = tail call zeroext i1 @_ZNK5blink13ListedElement12WillValidateEv(%"class.blink::ListedElement"* %29) #11
  br label %31

31:                                               ; preds = %27, %26
  %32 = phi i1 [ %30, %27 ], [ false, %26 ]
  ret i1 %32
}

declare zeroext i1 @_ZNK5blink13ListedElement12WillValidateEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ValidityState"* @_ZN5blink16ElementInternals8validityERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %31

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %29 = bitcast %"class.blink::ListedElement.base"* %28 to %"class.blink::ListedElement"*
  %30 = tail call %"class.blink::ValidityState"* @_ZN5blink13ListedElement8validityEv(%"class.blink::ListedElement"* %29) #11
  br label %31

31:                                               ; preds = %27, %26
  %32 = phi %"class.blink::ValidityState"* [ %30, %27 ], [ null, %26 ]
  ret %"class.blink::ValidityState"* %32
}

declare %"class.blink::ValidityState"* @_ZN5blink13ListedElement8validityEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16ElementInternals27ValidationMessageForBindingERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %33

27:                                               ; preds = %22, %2
  %28 = bitcast %"class.blink::ElementInternals"* %0 to %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)***
  %29 = load %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)**, %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)*, %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)** %29, i64 24
  %31 = load %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)*, %"class.WTF::StringImpl"* (%"class.blink::ElementInternals"*)** %30, align 8
  %32 = tail call %"class.WTF::StringImpl"* %31(%"class.blink::ElementInternals"* %0) #11
  br label %33

33:                                               ; preds = %27, %26
  %34 = phi %"class.WTF::StringImpl"* [ %32, %27 ], [ null, %26 ]
  ret %"class.WTF::StringImpl"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16ElementInternals17validationMessageEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 11
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %45

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 12
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %45

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 13
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %45

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 14
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 15
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %45

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 16
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 17
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 18
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 19
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 20
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %5, %9, %13, %17, %21, %25, %29, %33, %37, %41
  %46 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %47 = bitcast %"class.blink::ListedElement.base"* %46 to %"class.blink::ListedElement"*
  %48 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %47) #11
  br label %49

49:                                               ; preds = %1, %41, %45
  %50 = phi %"class.WTF::StringImpl"* [ %48, %45 ], [ null, %41 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %50
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn16_NK5blink16ElementInternals17validationMessageEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %51, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 11
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %47

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 12
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 13
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %47

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 14
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %47

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 15
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %47

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 16
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %47

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 17
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 18
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %47

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 19
  %41 = load i8, i8* %40, align 2, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 20
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %43, %39, %35, %31, %27, %23, %19, %15, %11, %7
  %48 = getelementptr inbounds i32, i32* %2, i64 4
  %49 = bitcast i32* %48 to %"class.blink::ListedElement"*
  %50 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %49) #11
  br label %51

51:                                               ; preds = %1, %43, %47
  %52 = phi %"class.WTF::StringImpl"* [ %50, %47 ], [ null, %43 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16ElementInternals20ValidationSubMessageEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::ElementInternals"* %0 to i1 (%"class.blink::ElementInternals"*)***
  %3 = load i1 (%"class.blink::ElementInternals"*)**, i1 (%"class.blink::ElementInternals"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::ElementInternals"*)*, i1 (%"class.blink::ElementInternals"*)** %3, i64 15
  %5 = load i1 (%"class.blink::ElementInternals"*)*, i1 (%"class.blink::ElementInternals"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::ElementInternals"* %0) #11
  br i1 %6, label %7, label %89

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %8, align 8
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %9, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %11, align 8
  %13 = icmp eq %"class.blink::ElementData"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::ElementData"* %12 to %"class.blink::UniqueElementData"*
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1, i32 1
  %22 = bitcast %"class.blink::Member.18"* %21 to %"class.blink::Attribute"**
  %23 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %20, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %31

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %12, i64 1
  %28 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::Attribute"*
  %29 = lshr i32 %16, 1
  %30 = and i32 %29, 268435455
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi %"class.blink::Attribute"* [ %28, %26 ], [ %23, %19 ]
  %33 = phi i32 [ %30, %26 ], [ %25, %19 ]
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %57, %37
  %43 = phi %"class.blink::Attribute"* [ %32, %37 ], [ %58, %57 ]
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %39
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, %50
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, %55
  br i1 %56, label %60, label %57

57:                                               ; preds = %52, %47
  %58 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 1
  %59 = icmp eq %"class.blink::Attribute"* %58, %35
  br i1 %59, label %64, label %42

60:                                               ; preds = %52, %42
  %61 = icmp eq %"class.blink::Attribute"* %43, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %43, i64 0, i32 1
  br label %66

64:                                               ; preds = %57, %60, %31, %7
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi %"class.WTF::AtomicString"* [ %65, %64 ], [ %63, %62 ]
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %71 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #11
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  tail call void @llvm.trap() #11
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %1, %87, %72, %66
  %90 = phi i64 [ %70, %66 ], [ %70, %72 ], [ %70, %87 ], [ 0, %1 ]
  %91 = inttoptr i64 %90 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn16_NK5blink16ElementInternals20ValidationSubMessageEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to %"class.blink::ElementInternals"*
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16ElementInternals20ValidationSubMessageEv(%"class.blink::ElementInternals"* %3)
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZNK5blink16ElementInternals16ValidationAnchorEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.blink::Element"* [ %8, %5 ], [ %3, %1 ]
  ret %"class.blink::Element"* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZThn16_NK5blink16ElementInternals16ValidationAnchorEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 30
  %4 = bitcast i32* %3 to %"class.blink::Element"**
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds i32, i32* %2, i64 20
  %9 = bitcast i32* %8 to %"class.blink::HTMLElement"**
  %10 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %10, i64 0, i32 0
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi %"class.blink::Element"* [ %11, %7 ], [ %5, %1 ]
  ret %"class.blink::Element"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16ElementInternals13checkValidityERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %31

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %29 = bitcast %"class.blink::ListedElement.base"* %28 to %"class.blink::ListedElement"*
  %30 = tail call zeroext i1 @_ZN5blink13ListedElement13checkValidityEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::ListedElement"* %29, %"class.blink::HeapVector"* null) #11
  br label %31

31:                                               ; preds = %27, %26
  %32 = phi i1 [ %30, %27 ], [ false, %26 ]
  ret i1 %32
}

declare zeroext i1 @_ZN5blink13ListedElement13checkValidityEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::ListedElement"*, %"class.blink::HeapVector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16ElementInternals14reportValidityERNS_14ExceptionStateE(%"class.blink::ElementInternals"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %31

27:                                               ; preds = %22, %2
  %28 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %29 = bitcast %"class.blink::ListedElement.base"* %28 to %"class.blink::ListedElement"*
  %30 = tail call zeroext i1 @_ZN5blink13ListedElement14reportValidityEv(%"class.blink::ListedElement"* %29) #11
  br label %31

31:                                               ; preds = %27, %26
  %32 = phi i1 [ %30, %27 ], [ false, %26 ]
  ret i1 %32
}

declare zeroext i1 @_ZN5blink13ListedElement14reportValidityEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LabelsNodeList"* @_ZN5blink16ElementInternals6labelsERNS_14ExceptionStateE(%"class.blink::ElementInternals"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* %4) #11
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 917504
  switch i32 %10, label %26 [
    i32 393216, label %11
    i32 524288, label %11
    i32 262144, label %11
  ]

11:                                               ; preds = %6, %6, %6
  %12 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %13 = tail call %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %12) #11
  %14 = icmp eq %"class.blink::CustomElementRegistry"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3
  %20 = tail call %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"* nonnull %13, %"class.WTF::AtomicString"* dereferenceable(8) %19) #11
  %21 = icmp eq %"class.blink::CustomElementDefinition"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::CustomElementDefinition", %"class.blink::CustomElementDefinition"* %20, i64 0, i32 8
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22, %6, %15, %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0)) #11
  br label %30

27:                                               ; preds = %22, %2
  %28 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %3, align 8
  %29 = tail call %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"* %28) #11
  br label %30

30:                                               ; preds = %27, %26
  %31 = phi %"class.blink::LabelsNodeList"* [ %29, %27 ], [ null, %26 ]
  ret %"class.blink::LabelsNodeList"* %31
}

declare %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CustomStateSet"* @_ZN5blink16ElementInternals6statesEv(%"class.blink::ElementInternals"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 8
  %3 = getelementptr inbounds %"class.blink::Member.87", %"class.blink::Member.87"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::CustomStateSet"*, %"class.blink::CustomStateSet"** %3, align 8
  %5 = icmp eq %"class.blink::CustomStateSet"* %4, null
  br i1 %5, label %6, label %24

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %7, align 8
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #11
  %10 = bitcast i8* %9 to %"class.blink::CustomStateSet"*
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %8, i64 0, i32 0
  tail call void @_ZN5blink14CustomStateSetC1ERNS_7ElementE(%"class.blink::CustomStateSet"* %10, %"class.blink::Element"* dereferenceable(104) %11) #11
  %12 = getelementptr inbounds i8, i8* %9, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = ptrtoint i8* %9 to i64
  %17 = bitcast %"class.blink::Member.87"* %2 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  %20 = bitcast i8* %9 to %"class.blink::CustomStateSet"*
  br i1 %19, label %24, label %21

21:                                               ; preds = %6
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #11
  %23 = load %"class.blink::CustomStateSet"*, %"class.blink::CustomStateSet"** %3, align 8
  br label %24

24:                                               ; preds = %1, %21, %6
  %25 = phi %"class.blink::CustomStateSet"* [ %4, %1 ], [ %23, %21 ], [ %20, %6 ]
  ret %"class.blink::CustomStateSet"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals8HasStateERKN3WTF12AtomicStringE(%"class.blink::ElementInternals"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::CustomStateSet"*, %"class.blink::CustomStateSet"** %3, align 8
  %5 = icmp eq %"class.blink::CustomStateSet"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink14CustomStateSet3HasERKN3WTF6StringE(%"class.blink::CustomStateSet"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %7) #11
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ false, %2 ], [ %8, %6 ]
  ret i1 %10
}

declare zeroext i1 @_ZNK5blink14CustomStateSet3HasERKN3WTF6StringE(%"class.blink::CustomStateSet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShadowRoot"* @_ZNK5blink16ElementInternals10shadowRootEv(%"class.blink::ElementInternals"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %3, i64 0, i32 0
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"* %4) #11
  %6 = icmp eq %"class.blink::ShadowRoot"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 4194304
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, %"class.blink::ShadowRoot"* null, %"class.blink::ShadowRoot"* %5
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi %"class.blink::ShadowRoot"* [ %12, %7 ], [ null, %1 ]
  ret %"class.blink::ShadowRoot"* %14
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element16AuthorShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ElementInternals16FastGetAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0
  %4 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.98"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = select i1 %5, %"class.WTF::AtomicString"* %7, %"class.WTF::AtomicString"* %6
  ret %"class.WTF::AtomicString"* %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap"* @_ZNK5blink16ElementInternals13GetAttributesEv(%"class.blink::ElementInternals"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9
  ret %"class.WTF::HashMap"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.98"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %51

9:                                                ; preds = %3
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %5, 0
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15, %9
  %33 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %34 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  store i64 %33, i64* %34, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %3, %32, %47, %50
  %52 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %53, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %57) #11
  %59 = icmp eq %"class.blink::AXObjectCache"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %51
  %61 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %52, align 8
  %62 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %61, i64 0, i32 0
  %63 = bitcast %"class.blink::AXObjectCache"* %58 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %64 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %64, i64 30
  %66 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %65, align 8
  tail call void %66(%"class.blink::AXObjectCache"* nonnull %58, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Element"* %62) #11
  br label %67

67:                                               ; preds = %51, %60
  ret void
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals12HasAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0
  %4 = tail call zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEbRKT0_(%"class.WTF::HashTable.98"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals10DidUpgradeEv(%"class.blink::ElementInternals"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %4) #11
  %6 = icmp eq %"class.blink::ContainerNode"* %5, null
  br i1 %6, label %53, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %9 = bitcast %"class.blink::ListedElement.base"* %8 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"* %9, %"class.blink::ContainerNode"* nonnull dereferenceable(80) %5) #11
  %10 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %11 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLFormElement"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = tail call %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"* %14) #11
  %16 = icmp eq %"class.blink::NodeListsNodeData"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZN5blink17NodeListsNodeData16InvalidateCachesEPKNS_13QualifiedNameE(%"class.blink::NodeListsNodeData"* nonnull %15, %"class.blink::QualifiedName"* null) #11
  br label %18

18:                                               ; preds = %7, %13, %17
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  br label %28

21:                                               ; preds = %49
  %22 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %22, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = tail call dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"* %26) #11
  tail call void @_ZN5blink14FormController28RestoreControlStateOnUpgradeERNS_13ListedElementE(%"class.blink::FormController"* %27, %"class.blink::ListedElement"* dereferenceable(64) %9) #11
  br label %53

28:                                               ; preds = %18, %49
  %29 = phi %"class.blink::ContainerNode"* [ %5, %18 ], [ %51, %49 ]
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 48
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %49

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 2
  %38 = bitcast %"class.blink::Member.2"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %45, label %49

45:                                               ; preds = %34
  %46 = tail call %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"* %35) #11
  %47 = icmp eq %"class.blink::NodeListsNodeData"* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  tail call void @_ZN5blink17NodeListsNodeData16InvalidateCachesEPKNS_13QualifiedNameE(%"class.blink::NodeListsNodeData"* nonnull %46, %"class.blink::QualifiedName"* null) #11
  br label %49

49:                                               ; preds = %28, %48, %45, %34
  %50 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %29, i64 0, i32 0
  %51 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %50) #11
  %52 = icmp eq %"class.blink::ContainerNode"* %51, null
  br i1 %52, label %21, label %28

53:                                               ; preds = %1, %21
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1

declare %"class.blink::NodeListsNodeData"* @_ZN5blink4Node9NodeListsEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink17NodeListsNodeData16InvalidateCachesEPKNS_13QualifiedNameE(%"class.blink::NodeListsNodeData"*, %"class.blink::QualifiedName"*) local_unnamed_addr #1

declare dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink14FormController28RestoreControlStateOnUpgradeERNS_13ListedElementE(%"class.blink::FormController"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals19SetElementAttributeERKNS_13QualifiedNameEPNS_7ElementE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = alloca %"class.blink::Element"*, align 8
  %7 = alloca i8*, align 8
  store %"class.blink::Element"* %2, %"class.blink::Element"** %6, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  store i8* null, i8** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 10, i32 0, i32 0
  %10 = call { %"struct.WTF::KeyValuePair.107"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SF_SK_EERKS2_DnEENS_18HashTableAddResultISL_SD_EEOT0_OT1_(%"class.WTF::HashTable.105"* %9, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8** nonnull dereferenceable(8) %7) #11
  %11 = extractvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %10, 0
  %12 = extractvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %10, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %3
  %16 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #11
  %17 = getelementptr inbounds i8, i8* %16, i64 24
  %18 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #11
  %19 = bitcast i8* %17 to %"class.WTF::Vector.116"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"* %19, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  %20 = getelementptr inbounds i8, i8* %16, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %11, i64 0, i32 1
  %25 = ptrtoint i8* %16 to i64
  %26 = bitcast %"class.blink::Member.108"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %15
  %30 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #11
  br label %35

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %11, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::HeapLinkedHashSet"*, %"class.blink::HeapLinkedHashSet"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %33, i64 0, i32 0
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv(%"class.WTF::LinkedHashSet"* %34)
  br label %35

35:                                               ; preds = %29, %15, %31
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %11, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::HeapLinkedHashSet"*, %"class.blink::HeapLinkedHashSet"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %37, i64 0, i32 0
  %39 = bitcast %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39)
  %40 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %37, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %40, i64 0, i32 0
  %42 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %41, i32 0) #11, !noalias !4
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %42, %"class.WTF::VectorBackedLinkedListNode"** %43, align 8, !alias.scope !4
  %44 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %40, %"class.WTF::VectorBackedLinkedList"** %44, align 8, !alias.scope !4
  %45 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %37, i64 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4, !noalias !7
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %48, align 8, !noalias !7
  %50 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %37, i64 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8, !noalias !7
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %49, i64 %52
  br i1 %47, label %63, label %54

54:                                               ; preds = %35
  %55 = icmp eq i32 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %54, %60
  %57 = phi %"struct.WTF::KeyValuePair.115"* [ %61, %60 ], [ %49, %54 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.115"* %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !7
  switch i64 %59, label %63 [
    i64 -1, label %60
    i64 0, label %60
  ]

60:                                               ; preds = %56, %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %57, i64 1
  %62 = icmp eq %"struct.WTF::KeyValuePair.115"* %61, %53
  br i1 %62, label %63, label %56

63:                                               ; preds = %56, %60, %35, %54
  %64 = phi %"struct.WTF::KeyValuePair.115"* [ %53, %35 ], [ %49, %54 ], [ %57, %56 ], [ %53, %60 ]
  %65 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.115"* %64, %"struct.WTF::KeyValuePair.115"** %65, align 8, !alias.scope !7
  %66 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %4, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.115"* %53, %"struct.WTF::KeyValuePair.115"** %66, align 8, !alias.scope !7
  %67 = call { %"class.blink::WeakMember.813"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"* %38, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8 %4, %"class.blink::Element"** nonnull dereferenceable(8) %6, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv(%"class.WTF::LinkedHashSet"*) local_unnamed_addr #5 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 14
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %15, align 8
  %17 = icmp eq %"struct.WTF::KeyValuePair.115"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  tail call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.115"* nonnull %16, i32 %20) #11
  %21 = bitcast %"class.WTF::LinkedHashSet"* %0 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %19, align 8
  %22 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %8, %18
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14ShrinkCapacityEj(%"class.WTF::Vector.116"* %24, i32 1) #11
  %25 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %24, i32 0) #11
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %25, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %24, i32 0) #11
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %27, i64 0, i32 1
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %30, align 4
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %23
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #11
  br label %37

37:                                               ; preds = %23, %35
  %38 = phi i8* [ %36, %35 ], [ %33, %23 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 14
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, -1
  store i64 %43, i64* %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink16ElementInternals19GetElementAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = tail call %"struct.WTF::KeyValuePair.107"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.105"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  %5 = icmp eq %"struct.WTF::KeyValuePair.107"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::HeapLinkedHashSet"*, %"class.blink::HeapLinkedHashSet"** %7, align 8
  %9 = icmp eq %"class.blink::HeapLinkedHashSet"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %8, i64 0, i32 0, i32 1, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %11, i32 0) #11, !noalias !10
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4, !noalias !10
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %11, i32 %14) #11, !noalias !10
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Element"*, %"class.blink::Element"** %16, align 8
  br label %18

18:                                               ; preds = %2, %6, %10
  %19 = phi %"class.blink::Element"* [ %17, %10 ], [ null, %6 ], [ null, %2 ]
  ret %"class.blink::Element"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ElementInternals24GetElementArrayAttributeERKNS_13QualifiedNameE(%"class.absl::optional.814"* noalias sret, %"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WeakMember.813", align 8
  %5 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %1, i64 0, i32 10, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashMap.104", %"class.WTF::HashMap.104"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable.105"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %2) #11
  %8 = extractvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.104", %"class.WTF::HashMap.104"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %1, i64 0, i32 10, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.107"* %8, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.absl::optional.814", %"class.absl::optional.814"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  br label %123

18:                                               ; preds = %3
  %19 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i32 [ %20, %18 ], [ %24, %22 ]
  %27 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %19, i64 0, i32 19, i64 0
  %28 = bitcast %"class.blink::BaseArena"** %27 to %"class.blink::NormalPageArena"**
  %29 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %29, i64 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %31, 24
  br i1 %32, label %63, label %33, !prof !3

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %29, i64 0, i32 3
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 24
  store i8* %36, i8** %34, align 8
  %37 = add i64 %31, -24
  store i64 %37, i64* %30, align 8
  %38 = bitcast i8* %35 to i32*
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %35, i64 4
  %40 = bitcast i8* %39 to i16*
  %41 = trunc i32 %26 to i16
  %42 = shl i16 %41, 2
  store atomic i16 %42, i16* %40 monotonic, align 2
  %43 = getelementptr inbounds i8, i8* %35, i64 6
  %44 = bitcast i8* %43 to i16*
  store i16 12, i16* %44, align 2
  %45 = ptrtoint i8* %35 to i64
  %46 = and i64 %45, -131072
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 4400
  %49 = bitcast i8* %48 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %50 = bitcast i8* %48 to i64*
  %51 = load i64, i64* %50, align 16
  %52 = sub i64 %45, %51
  %53 = lshr i64 %52, 3
  %54 = lshr i64 %52, 6
  %55 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %49, i64 0, i32 0, i32 1, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = trunc i64 %53 to i32
  %58 = and i32 %57, 7
  %59 = shl i32 1, %58
  %60 = trunc i32 %59 to i8
  %61 = or i8 %56, %60
  store atomic i8 %61, i8* %55 release, align 1
  %62 = getelementptr inbounds i8, i8* %35, i64 8
  br label %66

63:                                               ; preds = %25
  %64 = zext i32 %26 to i64
  %65 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %29, i64 24, i64 %64) #11
  br label %66

66:                                               ; preds = %33, %63
  %67 = phi i8* [ %62, %33 ], [ %65, %63 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 -4
  %69 = bitcast i8* %68 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #11
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = or i16 %70, 1
  store atomic i16 %71, i16* %69 release, align 2
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %8, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::HeapLinkedHashSet"*, %"class.blink::HeapLinkedHashSet"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %73, i64 0, i32 0, i32 1, i32 0
  %75 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %74, i32 0) #11, !noalias !13
  %76 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %75, i64 0, i32 1
  %77 = load i32, i32* %76, align 4, !noalias !13
  %78 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %74, i32 %77) #11, !noalias !13
  %79 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %74, i32 0) #11, !noalias !16
  %80 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %66
  %82 = bitcast i8* %67 to %"class.WTF::Vector.142"*
  br label %92

83:                                               ; preds = %66
  %84 = bitcast %"class.blink::WeakMember.813"* %4 to i8*
  %85 = bitcast %"class.blink::WeakMember.813"* %4 to i64*
  %86 = getelementptr inbounds i8, i8* %67, i64 12
  %87 = bitcast i8* %86 to i32*
  %88 = getelementptr inbounds i8, i8* %67, i64 8
  %89 = bitcast i8* %88 to i32*
  %90 = bitcast i8* %67 to %"class.blink::Member.85"**
  %91 = bitcast i8* %67 to %"class.WTF::Vector.142"*
  br label %96

92:                                               ; preds = %118, %81
  %93 = phi %"class.WTF::Vector.142"* [ %82, %81 ], [ %91, %118 ]
  %94 = getelementptr inbounds %"class.absl::optional.814", %"class.absl::optional.814"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %94, align 8
  %95 = getelementptr inbounds %"class.absl::optional.814", %"class.absl::optional.814"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.142"* %95, %"class.WTF::Vector.142"* dereferenceable(16) %93) #11
  br label %123

96:                                               ; preds = %83, %118
  %97 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %78, %83 ], [ %121, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %97, i64 0, i32 2
  %99 = bitcast %"class.blink::WeakMember.813"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %85, align 8
  %101 = load i32, i32* %87, align 4
  %102 = load i32, i32* %89, align 8
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %117, label %104, !prof !3

104:                                              ; preds = %96
  %105 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %90, align 8
  %106 = zext i32 %101 to i64
  %107 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %105, i64 %106
  %108 = bitcast %"class.blink::Member.85"* %107 to i64*
  store atomic i64 %100, i64* %108 monotonic, align 8
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %104
  %112 = inttoptr i64 %100 to i8*
  %113 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #11
  br label %114

114:                                              ; preds = %111, %104
  %115 = load i32, i32* %87, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %87, align 4
  br label %118

117:                                              ; preds = %96
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_(%"class.WTF::Vector.142"* %91, %"class.blink::WeakMember.813"* nonnull dereferenceable(8) %4) #11
  br label %118

118:                                              ; preds = %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %119 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %97, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %74, i32 %120) #11
  %122 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %121, %79
  br i1 %122, label %92, label %96

123:                                              ; preds = %92, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals24SetElementArrayAttributeERKNS_13QualifiedNameERKN4absl8optionalINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEEE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.absl::optional.814"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %5 = alloca %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.blink::Member.85", align 8
  %8 = getelementptr inbounds %"class.absl::optional.814", %"class.absl::optional.814"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 10, i32 0
  br i1 %10, label %12, label %17

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::HashMap.104", %"class.WTF::HashMap.104"* %11, i64 0, i32 0
  %14 = tail call { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable.105"* %13, %"class.blink::QualifiedName"* dereferenceable(8) %1) #11
  %15 = extractvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %14, 0
  %16 = extractvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %14, 1
  tail call void @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS2_SD_SE_SF_SJ_SH_SK_EE(%"class.WTF::HashTable.105"* %13, %"struct.WTF::KeyValuePair.107"* %15, %"struct.WTF::KeyValuePair.107"* %16) #11
  br label %99

17:                                               ; preds = %3
  %18 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  store i8* null, i8** %6, align 8
  %19 = getelementptr inbounds %"class.WTF::HashMap.104", %"class.WTF::HashMap.104"* %11, i64 0, i32 0
  %20 = call { %"struct.WTF::KeyValuePair.107"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SF_SK_EERKS2_DnEENS_18HashTableAddResultISL_SD_EEOT0_OT1_(%"class.WTF::HashTable.105"* %19, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8** nonnull dereferenceable(8) %6) #11
  %21 = extractvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %20, 0
  %22 = extractvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %20, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %17
  %26 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64 48) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #11
  %27 = getelementptr inbounds i8, i8* %26, i64 24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #11
  %29 = bitcast i8* %27 to %"class.WTF::Vector.116"*
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"* %29, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  %30 = getelementptr inbounds i8, i8* %26, i64 -4
  %31 = bitcast i8* %30 to i16*
  %32 = load atomic i16, i16* %31 monotonic, align 2
  %33 = or i16 %32, 1
  store atomic i16 %33, i16* %31 release, align 2
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %21, i64 0, i32 1
  %35 = ptrtoint i8* %26 to i64
  %36 = bitcast %"class.blink::Member.108"* %34 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %25
  %40 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %45

41:                                               ; preds = %17
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %21, i64 0, i32 1, i32 0, i32 0
  %43 = load %"class.blink::HeapLinkedHashSet"*, %"class.blink::HeapLinkedHashSet"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %43, i64 0, i32 0
  call void @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5clearEv(%"class.WTF::LinkedHashSet"* %44)
  br label %45

45:                                               ; preds = %39, %25, %41
  %46 = load i8, i8* %8, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.absl::optional.814", %"class.absl::optional.814"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %50, align 8
  %52 = getelementptr inbounds %"class.absl::optional.814", %"class.absl::optional.814"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %51, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %99, label %57

57:                                               ; preds = %49
  %58 = bitcast %"class.blink::Member.85"* %7 to i8*
  %59 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %7, i64 0, i32 0, i32 0
  %60 = bitcast %"class.blink::Member.85"* %7 to i64*
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %21, i64 0, i32 1, i32 0, i32 0
  %62 = bitcast %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %5 to i8*
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %5, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %5, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %5, i64 0, i32 1, i32 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %5, i64 0, i32 1, i32 0, i32 1
  br label %67

67:                                               ; preds = %57, %94
  %68 = phi %"class.blink::Member.85"* [ %51, %57 ], [ %97, %94 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.blink::Element"** %59, align 8
  %69 = bitcast %"class.blink::Member.85"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %60, align 8
  %71 = load %"class.blink::HeapLinkedHashSet"*, %"class.blink::HeapLinkedHashSet"** %61, align 8
  %72 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %71, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62)
  %73 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %71, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %73, i64 0, i32 0
  %75 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %74, i32 0) #11, !noalias !19
  store %"class.WTF::VectorBackedLinkedListNode"* %75, %"class.WTF::VectorBackedLinkedListNode"** %63, align 8, !alias.scope !19
  store %"class.WTF::VectorBackedLinkedList"* %73, %"class.WTF::VectorBackedLinkedList"** %64, align 8, !alias.scope !19
  %76 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %71, i64 0, i32 0, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4, !noalias !22
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %79, align 8, !noalias !22
  %81 = getelementptr inbounds %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet"* %71, i64 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 8, !noalias !22
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %80, i64 %83
  br i1 %78, label %94, label %85

85:                                               ; preds = %67
  %86 = icmp eq i32 %82, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %85, %91
  %88 = phi %"struct.WTF::KeyValuePair.115"* [ %92, %91 ], [ %80, %85 ]
  %89 = bitcast %"struct.WTF::KeyValuePair.115"* %88 to i64*
  %90 = load i64, i64* %89, align 8, !noalias !22
  switch i64 %90, label %94 [
    i64 -1, label %91
    i64 0, label %91
  ]

91:                                               ; preds = %87, %87
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %88, i64 1
  %93 = icmp eq %"struct.WTF::KeyValuePair.115"* %92, %84
  br i1 %93, label %94, label %87

94:                                               ; preds = %87, %91, %67, %85
  %95 = phi %"struct.WTF::KeyValuePair.115"* [ %84, %67 ], [ %80, %85 ], [ %88, %87 ], [ %84, %91 ]
  store %"struct.WTF::KeyValuePair.115"* %95, %"struct.WTF::KeyValuePair.115"** %65, align 8, !alias.scope !22
  store %"struct.WTF::KeyValuePair.115"* %84, %"struct.WTF::KeyValuePair.115"** %66, align 8, !alias.scope !22
  %96 = call { %"class.blink::WeakMember.813"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRNS1_6MemberIS3_EEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"* %72, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* nonnull byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8 %5, %"class.blink::Member.85"* nonnull dereferenceable(8) %7, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #11
  %97 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %68, i64 1
  %98 = icmp eq %"class.blink::Member.85"* %97, %55
  br i1 %98, label %99, label %67

99:                                               ; preds = %94, %49, %12
  ret void
}

declare zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"*) local_unnamed_addr #1

declare %"class.blink::CustomElementRegistry"* @_ZN5blink13CustomElement8RegistryERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare %"class.blink::CustomElementDefinition"* @_ZNK5blink21CustomElementRegistry17DefinitionForNameERKN3WTF12AtomicStringE(%"class.blink::CustomElementRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals20IsFormControlElementEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals20IsFormControlElementEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals18IsElementInternalsEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals18IsElementInternalsEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals14IsEnumeratableEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals14IsEnumeratableEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals16AppendToFormDataERNS_8FormDataE(%"class.blink::ElementInternals"* nocapture readonly, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %4, align 8
  %6 = bitcast %"class.blink::HTMLElement"* %5 to i1 (%"class.blink::HTMLElement"*)***
  %7 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %7, i64 138
  %9 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::HTMLElement"* %5) #11
  br i1 %10, label %139, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"** %12, align 8
  %14 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %13, null
  br i1 %14, label %139, label %15

15:                                               ; preds = %11
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %4, align 8
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %18, align 8
  %20 = icmp eq %"class.blink::ElementData"* %19, null
  br i1 %20, label %71, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::UniqueElementData"*
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1, i32 1
  %29 = bitcast %"class.blink::Member.18"* %28 to %"class.blink::Attribute"**
  %30 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  br label %38

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1
  %35 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::Attribute"*
  %36 = lshr i32 %23, 1
  %37 = and i32 %36, 268435455
  br label %38

38:                                               ; preds = %33, %26
  %39 = phi %"class.blink::Attribute"* [ %35, %33 ], [ %30, %26 ]
  %40 = phi i32 [ %37, %33 ], [ %32, %26 ]
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %64, %44
  %50 = phi %"class.blink::Attribute"* [ %39, %44 ], [ %65, %64 ]
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %52, %46
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %59, %54
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 1
  %66 = icmp eq %"class.blink::Attribute"* %65, %42
  br i1 %66, label %71, label %49

67:                                               ; preds = %59, %49
  %68 = icmp eq %"class.blink::Attribute"* %50, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 1
  br label %73

71:                                               ; preds = %64, %67, %38, %15
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %73

73:                                               ; preds = %69, %71
  %74 = phi %"class.WTF::AtomicString"* [ %72, %71 ], [ %70, %69 ]
  %75 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %13, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %94, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %139, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %139, label %86

86:                                               ; preds = %82
  switch i32 %76, label %139 [
    i32 0, label %87
    i32 2, label %91
  ]

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %13, i64 0, i32 2, i32 0, i32 0
  %90 = load %"class.blink::File"*, %"class.blink::File"** %89, align 8
  tail call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringEPNS_4FileE(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %88, %"class.blink::File"* %90) #11
  br label %139

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0
  %93 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %13, i64 0, i32 4
  tail call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %92, %"class.WTF::String"* dereferenceable(8) %93) #11
  br label %139

94:                                               ; preds = %73
  %95 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %13, i64 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::FormData"*, %"class.blink::FormData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::FormData", %"class.blink::FormData"* %96, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::Member.74"*, %"class.blink::Member.74"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::FormData", %"class.blink::FormData"* %96, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %98, i64 %101
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %139, label %104

104:                                              ; preds = %94
  %105 = bitcast %"class.WTF::String"* %3 to i8*
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %107

107:                                              ; preds = %104, %136
  %108 = phi %"class.blink::Member.74"* [ %98, %104 ], [ %137, %136 ]
  %109 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::FormData::Entry"*, %"class.blink::FormData::Entry"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::FormData::Entry", %"class.blink::FormData::Entry"* %110, i64 0, i32 2, i32 0, i32 0
  %112 = load %"class.blink::Blob"*, %"class.blink::Blob"** %111, align 8
  %113 = icmp eq %"class.blink::Blob"* %112, null
  %114 = getelementptr inbounds %"class.blink::FormData::Entry", %"class.blink::FormData::Entry"* %110, i64 0, i32 0
  br i1 %113, label %134, label %115

115:                                              ; preds = %107
  %116 = call %"class.blink::File"* @_ZNK5blink8FormData5Entry7GetFileEv(%"class.blink::FormData::Entry"* %110) #11
  %117 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %116, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  call void @_ZN5blink8FormData6appendERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %114, %"class.blink::Blob"* %117, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #11
  br label %133

133:                                              ; preds = %115, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  br label %136

134:                                              ; preds = %107
  %135 = getelementptr inbounds %"class.blink::FormData::Entry", %"class.blink::FormData::Entry"* %110, i64 0, i32 1
  call void @_ZN5blink8FormData6appendERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %114, %"class.WTF::String"* dereferenceable(8) %135) #11
  br label %136

136:                                              ; preds = %134, %133
  %137 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %108, i64 1
  %138 = icmp eq %"class.blink::Member.74"* %137, %102
  br i1 %138, label %139, label %107

139:                                              ; preds = %136, %94, %11, %78, %82, %86, %91, %87, %2
  ret void
}

declare void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringEPNS_4FileE(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::File"*) local_unnamed_addr #1

declare void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink8FormData6appendERKN3WTF6StringEPNS_4BlobES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Blob"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::File"* @_ZNK5blink8FormData5Entry7GetFileEv(%"class.blink::FormData::Entry"*) local_unnamed_addr #1

declare void @_ZN5blink8FormData6appendERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink16ElementInternals16AppendToFormDataERNS_8FormDataE(%"class.blink::ElementInternals"* nocapture readonly, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ElementInternals"*
  tail call void @_ZN5blink16ElementInternals16AppendToFormDataERNS_8FormDataE(%"class.blink::ElementInternals"* %4, %"class.blink::FormData"* dereferenceable(56) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals13DidChangeFormEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::ListedElement.base"* %2 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement13DidChangeFormEv(%"class.blink::ListedElement"* %3) #11
  %4 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %8 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %7, align 8
  tail call void @_ZN5blink13CustomElement29EnqueueFormAssociatedCallbackERNS_7ElementEPNS_15HTMLFormElementE(%"class.blink::Element"* dereferenceable(104) %6, %"class.blink::HTMLFormElement"* %8) #11
  ret void
}

declare void @_ZN5blink13ListedElement13DidChangeFormEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13CustomElement29EnqueueFormAssociatedCallbackERNS_7ElementEPNS_15HTMLFormElementE(%"class.blink::Element"* dereferenceable(104), %"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink16ElementInternals13DidChangeFormEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 4
  %4 = bitcast i32* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement13DidChangeFormEv(%"class.blink::ListedElement"* %4) #11
  %5 = getelementptr inbounds i32, i32* %2, i64 20
  %6 = bitcast i32* %5 to %"class.blink::HTMLElement"**
  %7 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0
  %9 = getelementptr inbounds i32, i32* %2, i64 10
  %10 = bitcast i32* %9 to %"class.blink::HTMLFormElement"**
  %11 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %10, align 8
  tail call void @_ZN5blink13CustomElement29EnqueueFormAssociatedCallbackERNS_7ElementEPNS_15HTMLFormElementE(%"class.blink::Element"* dereferenceable(104) %8, %"class.blink::HTMLFormElement"* %11) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals11HasBadInputEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 11
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals11HasBadInputEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 11
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals15PatternMismatchEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 13
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals15PatternMismatchEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 13
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals13RangeOverflowEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 14
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals13RangeOverflowEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 14
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals14RangeUnderflowEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 15
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals14RangeUnderflowEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 15
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals12StepMismatchEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 16
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals12StepMismatchEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 16
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals7TooLongEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 17
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals7TooLongEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 17
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals8TooShortEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 18
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals8TooShortEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 18
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals12TypeMismatchEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 19
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals12TypeMismatchEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 19
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals12ValueMissingEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 20
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals12ValueMissingEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 20
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals11CustomErrorEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %2, align 8
  %4 = icmp eq %"class.blink::ValidityStateFlags"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %3, i64 0, i32 12
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals11CustomErrorEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 28
  %4 = bitcast i32* %3 to %"class.blink::ValidityStateFlags"**
  %5 = load %"class.blink::ValidityStateFlags"*, %"class.blink::ValidityStateFlags"** %4, align 8
  %6 = icmp eq %"class.blink::ValidityStateFlags"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ValidityStateFlags", %"class.blink::ValidityStateFlags"* %5, i64 0, i32 12
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals27DisabledStateMightBeChangedEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::ListedElement.base"* %2 to %"class.blink::ListedElement"*
  %4 = tail call zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"* %3) #11
  %5 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = zext i8 %6 to i32
  %8 = zext i1 %4 to i32
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = zext i1 %4 to i8
  store i8 %11, i8* %5, align 8
  %12 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %13, i64 0, i32 0
  tail call void @_ZN5blink13CustomElement27EnqueueFormDisabledCallbackERNS_7ElementEb(%"class.blink::Element"* dereferenceable(104) %14, i1 zeroext %4) #11
  br label %15

15:                                               ; preds = %1, %10
  ret void
}

declare zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare void @_ZN5blink13CustomElement27EnqueueFormDisabledCallbackERNS_7ElementEb(%"class.blink::Element"* dereferenceable(104), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink16ElementInternals27DisabledStateMightBeChangedEv(%"class.blink::ElementInternals"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 4
  %4 = bitcast i32* %3 to %"class.blink::ListedElement"*
  %5 = tail call zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"* %4) #11
  %6 = getelementptr inbounds i32, i32* %2, i64 26
  %7 = bitcast i32* %6 to i8*
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = zext i8 %8 to i32
  %10 = zext i1 %5 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = zext i1 %5 to i8
  store i8 %13, i8* %7, align 8
  %14 = getelementptr inbounds i32, i32* %2, i64 20
  %15 = bitcast i32* %14 to %"class.blink::HTMLElement"**
  %16 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %16, i64 0, i32 0
  tail call void @_ZN5blink13CustomElement27EnqueueFormDisabledCallbackERNS_7ElementEb(%"class.blink::Element"* dereferenceable(104) %17, i1 zeroext %5) #11
  br label %18

18:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals25ClassSupportsStateRestoreEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals25ClassSupportsStateRestoreEv(%"class.blink::ElementInternals"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16ElementInternals36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %10 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %9, align 8
  %11 = icmp eq %"class.blink::HTMLFormElement"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"* nonnull %10) #11
  br label %14

14:                                               ; preds = %1, %8, %12
  %15 = phi i1 [ false, %1 ], [ true, %8 ], [ %13, %12 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_NK5blink16ElementInternals36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds i32, i32* %2, i64 20
  %4 = bitcast i32* %3 to %"class.blink::HTMLElement"**
  %5 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds i32, i32* %2, i64 10
  %12 = bitcast i32* %11 to %"class.blink::HTMLFormElement"**
  %13 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %12, align 8
  %14 = icmp eq %"class.blink::HTMLFormElement"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = tail call zeroext i1 @_ZNK5blink15HTMLFormElement18ShouldAutocompleteEv(%"class.blink::HTMLFormElement"* nonnull %13) #11
  br label %17

17:                                               ; preds = %1, %10, %15
  %18 = phi i1 [ false, %1 ], [ true, %10 ], [ %16, %15 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16ElementInternals20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::FormControlState"* %0 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::Vector.90"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  %10 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"** %10, align 8
  %12 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %11, null
  br i1 %12, label %219, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %219 [
    i32 0, label %16
    i32 1, label %74
    i32 2, label %131
  ]

16:                                               ; preds = %13
  %17 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #11
  store i32 1, i32* %7, align 8
  %18 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %51, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %8, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %26, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %36
  call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %23
  %49 = load i32, i32* %18, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %18, align 4
  br label %52

51:                                               ; preds = %16
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.90"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  br label %52

52:                                               ; preds = %48, %51
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br label %69

69:                                               ; preds = %52, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %70 = load %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"** %10, align 8
  %71 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::File"*, %"class.blink::File"** %71, align 8
  %73 = call zeroext i1 @_ZN5blink4File20AppendToControlStateERNS_16FormControlStateE(%"class.blink::File"* %72, %"class.blink::FormControlState"* dereferenceable(24) %0) #11
  br label %219

74:                                               ; preds = %13
  %75 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #11
  store i32 1, i32* %7, align 8
  %76 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %109, label %81, !prof !3

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %8, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::String"*, %"class.WTF::String"** %82, align 8
  %84 = zext i32 %77 to i64
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 %84, i32 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %87, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #11
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #11
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %81
  %107 = load i32, i32* %76, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %76, align 4
  br label %110

109:                                              ; preds = %74
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.90"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  br label %110

110:                                              ; preds = %106, %109
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #11
  br label %127

127:                                              ; preds = %110, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %128 = load %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"** %10, align 8
  %129 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %128, i64 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::FormData"*, %"class.blink::FormData"** %129, align 8
  call void @_ZNK5blink8FormData20AppendToControlStateERNS_16FormControlStateE(%"class.blink::FormData"* %130, %"class.blink::FormControlState"* dereferenceable(24) %0) #11
  br label %219

131:                                              ; preds = %13
  %132 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #11
  store i32 1, i32* %7, align 8
  %133 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %166, label %138, !prof !3

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %8, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::String"*, %"class.WTF::String"** %139, align 8
  %141 = zext i32 %134 to i64
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 %141, i32 0, i32 0
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %144, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %145, label %163, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %163

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i33
  %155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %154, i33 1) #11
  %156 = extractvalue { i33, i1 } %155, 1
  %157 = extractvalue { i33, i1 } %155, 0
  %158 = icmp slt i33 %157, 0
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %161, !prof !3

160:                                              ; preds = %151
  call void @llvm.trap() #11
  unreachable

161:                                              ; preds = %151
  %162 = trunc i33 %157 to i32
  store i32 %162, i32* %152, align 4
  br label %163

163:                                              ; preds = %161, %146, %138
  %164 = load i32, i32* %133, align 4
  %165 = add i32 %164, 1
  store i32 %165, i32* %133, align 4
  br label %167

166:                                              ; preds = %131
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.90"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  br label %167

167:                                              ; preds = %163, %166
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #11
  br label %184

184:                                              ; preds = %167, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #11
  %185 = load %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"** %10, align 8
  %186 = getelementptr inbounds %"class.blink::V8UnionFileOrFormDataOrUSVString", %"class.blink::V8UnionFileOrFormDataOrUSVString"* %185, i64 0, i32 4
  store i32 1, i32* %7, align 8
  %187 = load i32, i32* %133, align 4
  %188 = load i32, i32* %135, align 8
  %189 = icmp eq i32 %187, %188
  br i1 %189, label %218, label %190, !prof !3

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %8, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::String"*, %"class.WTF::String"** %191, align 8
  %193 = zext i32 %187 to i64
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %186, i64 0, i32 0, i32 0
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %192, i64 %193, i32 0, i32 0
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %196, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %197, label %215, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %215

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i33
  %207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %206, i33 1) #11
  %208 = extractvalue { i33, i1 } %207, 1
  %209 = extractvalue { i33, i1 } %207, 0
  %210 = icmp slt i33 %209, 0
  %211 = or i1 %208, %210
  br i1 %211, label %212, label %213, !prof !3

212:                                              ; preds = %203
  call void @llvm.trap() #11
  unreachable

213:                                              ; preds = %203
  %214 = trunc i33 %209 to i32
  store i32 %214, i32* %204, align 4
  br label %215

215:                                              ; preds = %213, %198, %190
  %216 = load i32, i32* %133, align 4
  %217 = add i32 %216, 1
  store i32 %217, i32* %133, align 4
  br label %219

218:                                              ; preds = %184
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.90"* %8, %"class.WTF::String"* dereferenceable(8) %186) #11
  br label %219

219:                                              ; preds = %2, %218, %215, %13, %127, %69
  ret void
}

declare zeroext i1 @_ZN5blink4File20AppendToControlStateERNS_16FormControlStateE(%"class.blink::File"*, %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK5blink8FormData20AppendToControlStateERNS_16FormControlStateE(%"class.blink::FormData"*, %"class.blink::FormControlState"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink16ElementInternals20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::ElementInternals"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %1, i64 -1, i32 10, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ElementInternals"*
  tail call void @_ZNK5blink16ElementInternals20SaveFormControlStateEv(%"class.blink::FormControlState"* sret %0, %"class.blink::ElementInternals"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16ElementInternals23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ElementInternals"* nocapture, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %217, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %17 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.90"* %16, i32 0) #11
  %18 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %34

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %34

34:                                               ; preds = %26, %22
  %35 = phi i64 [ %33, %26 ], [ %24, %22 ]
  %36 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %36, i32* %37, align 8
  %38 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %35, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 9, i32* %41, align 8
  %42 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br i1 %42, label %43, label %84

43:                                               ; preds = %34
  %44 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.90"* %16, i32 1) #11
  %45 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #11
  %46 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32V8UnionFileOrFormDataOrUSVStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to i32*
  store i32 2, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #11
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds i8, i8* %45, i64 32
  %53 = bitcast i8* %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #11
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  call void @llvm.trap() #11
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %43, %55, %70
  %73 = getelementptr inbounds i8, i8* %45, i64 -4
  %74 = bitcast i8* %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = or i16 %75, 1
  store atomic i16 %76, i16* %74 release, align 2
  %77 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %78 = ptrtoint i8* %45 to i64
  %79 = bitcast %"class.blink::Member.48"* %77 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %191, label %82

82:                                               ; preds = %72
  %83 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #11
  br label %191

84:                                               ; preds = %34
  %85 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.90"* %16, i32 0) #11
  %86 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %91, align 8
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %92, i64* %93, align 8
  br label %102

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 1
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %100 = bitcast i8** %99 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %100, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %102

102:                                              ; preds = %94, %90
  %103 = phi i64 [ %101, %94 ], [ %92, %90 ]
  %104 = phi i32 [ %97, %94 ], [ 0, %90 ]
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %104, i32* %105, align 8
  %106 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  %107 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %103, i64* %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %109, align 8
  %110 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  br i1 %110, label %111, label %136

111:                                              ; preds = %102
  %112 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #11
  store i32 1, i32* %9, align 4
  %113 = call %"class.blink::File"* @_ZN5blink4File22CreateFromControlStateERKNS_16FormControlStateERj(%"class.blink::FormControlState"* dereferenceable(24) %1, i32* nonnull dereferenceable(4) %9) #11
  %114 = icmp eq %"class.blink::File"* %113, null
  br i1 %114, label %135, label %115

115:                                              ; preds = %111
  %116 = ptrtoint %"class.blink::File"* %113 to i64
  %117 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #11
  %118 = bitcast i8* %117 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32V8UnionFileOrFormDataOrUSVStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8
  %119 = getelementptr inbounds i8, i8* %117, i64 8
  %120 = bitcast i8* %119 to i32*
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds i8, i8* %117, i64 16
  %122 = bitcast i8* %121 to i64*
  store i64 %116, i64* %122, align 8
  %123 = getelementptr inbounds i8, i8* %117, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #11
  %124 = getelementptr inbounds i8, i8* %117, i64 -4
  %125 = bitcast i8* %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = or i16 %126, 1
  store atomic i16 %127, i16* %125 release, align 2
  %128 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %129 = ptrtoint i8* %117 to i64
  %130 = bitcast %"class.blink::Member.48"* %128 to i64*
  store atomic i64 %129, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %115
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %117) #11
  br label %135

135:                                              ; preds = %133, %115, %111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #11
  br label %191

136:                                              ; preds = %102
  %137 = call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.90"* %16, i32 0) #11
  %138 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #11
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %142, label %146

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %143, align 8
  %144 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %145 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %144, i64* %145, align 8
  br label %154

146:                                              ; preds = %136
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 1
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %152 = bitcast i8** %151 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %150, %"class.WTF::StringImpl"** %152, align 8
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %154

154:                                              ; preds = %146, %142
  %155 = phi i64 [ %153, %146 ], [ %144, %142 ]
  %156 = phi i32 [ %149, %146 ], [ 0, %142 ]
  %157 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %156, i32* %157, align 8
  %158 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #11
  %159 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %155, i64* %159, align 8
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8** %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 8, i32* %161, align 8
  %162 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #11
  br i1 %162, label %163, label %191

163:                                              ; preds = %154
  %164 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #11
  store i32 1, i32* %10, align 4
  %165 = call %"class.blink::FormData"* @_ZN5blink8FormData22CreateFromControlStateERKNS_16FormControlStateERj(%"class.blink::FormControlState"* dereferenceable(24) %1, i32* nonnull dereferenceable(4) %10) #11
  %166 = icmp eq %"class.blink::FormData"* %165, null
  br i1 %166, label %190, label %167

167:                                              ; preds = %163
  %168 = ptrtoint %"class.blink::FormData"* %165 to i64
  %169 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64 40) #11
  %170 = bitcast i8* %169 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink32V8UnionFileOrFormDataOrUSVStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  %171 = getelementptr inbounds i8, i8* %169, i64 8
  %172 = bitcast i8* %171 to i32*
  store i32 1, i32* %172, align 8
  %173 = getelementptr inbounds i8, i8* %169, i64 16
  %174 = bitcast i8* %173 to %"class.blink::File"**
  store %"class.blink::File"* null, %"class.blink::File"** %174, align 8
  %175 = getelementptr inbounds i8, i8* %169, i64 24
  %176 = bitcast i8* %175 to i64*
  store i64 %168, i64* %176, align 8
  %177 = getelementptr inbounds i8, i8* %169, i64 32
  %178 = bitcast i8* %177 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %178, align 8
  %179 = getelementptr inbounds i8, i8* %169, i64 -4
  %180 = bitcast i8* %179 to i16*
  %181 = load atomic i16, i16* %180 monotonic, align 2
  %182 = or i16 %181, 1
  store atomic i16 %182, i16* %180 release, align 2
  %183 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3
  %184 = ptrtoint i8* %169 to i64
  %185 = bitcast %"class.blink::Member.48"* %183 to i64*
  store atomic i64 %184, i64* %185 monotonic, align 8
  %186 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %167
  %189 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %169) #11
  br label %190

190:                                              ; preds = %188, %167, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #11
  br label %191

191:                                              ; preds = %82, %72, %135, %190, %154
  %192 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 3, i32 0, i32 0
  %193 = load %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"** %192, align 8
  %194 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %193, null
  br i1 %194, label %217, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 2, i32 0, i32 0
  %197 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %197, i64 0, i32 0
  %199 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #11
  call void @_ZN5blink13CustomElement31EnqueueFormStateRestoreCallbackERNS_7ElementEPKNS_32V8UnionFileOrFormDataOrUSVStringERKN3WTF6StringE(%"class.blink::Element"* dereferenceable(104) %198, %"class.blink::V8UnionFileOrFormDataOrUSVString"* nonnull %193, %"class.WTF::String"* nonnull dereferenceable(8) %11) #11
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #11
  br label %216

216:                                              ; preds = %195, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #11
  br label %217

217:                                              ; preds = %191, %2, %216
  ret void
}

declare %"class.blink::File"* @_ZN5blink4File22CreateFromControlStateERKNS_16FormControlStateERj(%"class.blink::FormControlState"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #1

declare %"class.blink::FormData"* @_ZN5blink8FormData22CreateFromControlStateERKNS_16FormControlStateERj(%"class.blink::FormControlState"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN5blink13CustomElement31EnqueueFormStateRestoreCallbackERNS_7ElementEPKNS_32V8UnionFileOrFormDataOrUSVStringERKN3WTF6StringE(%"class.blink::Element"* dereferenceable(104), %"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink16ElementInternals23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ElementInternals"* nocapture, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::ElementInternals"*
  tail call void @_ZN5blink16ElementInternals23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ElementInternals"* %4, %"class.blink::FormControlState"* dereferenceable(24) %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16ElementInternalsD2Ev(%"class.blink::ElementInternals"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::ListedElement.base", %"class.blink::ListedElement.base"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %44, label %8, !prof !25

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %8
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %39, %12
  %15 = phi i64 [ 0, %12 ], [ %40, %39 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, inttoptr (i64 -1 to i8*)
  br i1 %19, label %39, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %37

37:                                               ; preds = %36, %33, %20
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %38) #11
  br label %39

39:                                               ; preds = %37, %14
  %40 = add nuw nsw i64 %15, 1
  %41 = icmp eq i64 %40, %13
  br i1 %41, label %42, label %14

42:                                               ; preds = %39, %8
  %43 = bitcast %"struct.WTF::KeyValuePair"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %44

44:                                               ; preds = %1, %42
  %45 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %45) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16ElementInternalsD0Ev(%"class.blink::ElementInternals"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::ListedElement.base", %"class.blink::ListedElement.base"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %44, label %8, !prof !25

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 0, i32 9, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %8
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %39, %12
  %15 = phi i64 [ 0, %12 ], [ %40, %39 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, inttoptr (i64 -1 to i8*)
  br i1 %19, label %39, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %37

37:                                               ; preds = %36, %33, %20
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %38) #11
  br label %39

39:                                               ; preds = %37, %14
  %40 = add nuw nsw i64 %15, 1
  %41 = icmp eq i64 %40, %13
  br i1 %41, label %42, label %14

42:                                               ; preds = %39, %8
  %43 = bitcast %"struct.WTF::KeyValuePair"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %44

44:                                               ; preds = %1, %42
  %45 = bitcast %"class.blink::ListedElement.base"* %3 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %45) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16ElementInternals18GetWrapperTypeInfoEv(%"class.blink::ElementInternals"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16ElementInternals18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink16ElementInternalsD1Ev(%"class.blink::ElementInternals"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 4
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 34
  %7 = bitcast i32* %6 to %"struct.WTF::KeyValuePair"**
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %46, label %10, !prof !25

10:                                               ; preds = %1
  %11 = getelementptr inbounds i32, i32* %2, i64 36
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %41, %14
  %17 = phi i64 [ 0, %14 ], [ %42, %41 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17
  %19 = bitcast %"struct.WTF::KeyValuePair"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, inttoptr (i64 -1 to i8*)
  br i1 %21, label %41, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %39

39:                                               ; preds = %38, %35, %22
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %40) #11
  br label %41

41:                                               ; preds = %39, %16
  %42 = add nuw nsw i64 %17, 1
  %43 = icmp eq i64 %42, %15
  br i1 %43, label %44, label %16

44:                                               ; preds = %41, %10
  %45 = bitcast %"struct.WTF::KeyValuePair"* %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %7, align 8
  br label %46

46:                                               ; preds = %1, %44
  %47 = bitcast i32* %4 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %47) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink16ElementInternalsD0Ev(%"class.blink::ElementInternals"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %0, i64 -1, i32 10, i32 0, i32 0, i32 1
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 4
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [34 x i8*] }, { [34 x i8*], [34 x i8*] }* @_ZTVN5blink16ElementInternalsE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 34
  %7 = bitcast i32* %6 to %"struct.WTF::KeyValuePair"**
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = icmp eq %"struct.WTF::KeyValuePair"* %8, null
  br i1 %9, label %46, label %10, !prof !25

10:                                               ; preds = %1
  %11 = getelementptr inbounds i32, i32* %2, i64 36
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %10
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %41, %14
  %17 = phi i64 [ 0, %14 ], [ %42, %41 ]
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17
  %19 = bitcast %"struct.WTF::KeyValuePair"* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, inttoptr (i64 -1 to i8*)
  br i1 %21, label %41, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %17, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %39

39:                                               ; preds = %38, %35, %22
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %40) #11
  br label %41

41:                                               ; preds = %39, %16
  %42 = add nuw nsw i64 %17, 1
  %43 = icmp eq i64 %42, %15
  br i1 %43, label %44, label %16

44:                                               ; preds = %41, %10
  %45 = bitcast %"struct.WTF::KeyValuePair"* %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %7, align 8
  br label %46

46:                                               ; preds = %1, %44
  %47 = bitcast i32* %4 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* %47) #11
  ret void
}

declare zeroext i1 @_ZNK5blink13ListedElement29IsFormControlElementWithStateEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink13ListedElement24DisabledAttributeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement14WillChangeFormEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.142"*, %"class.WTF::Vector.142"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.85"* null, %"class.blink::Member.85"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %9) #11
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #11
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.142"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.85"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.85"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %28, align 8
  %30 = icmp ne %"class.blink::Member.85"* %24, null
  %31 = icmp ne %"class.blink::Member.85"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !25

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.85"* %24 to i8*
  %37 = bitcast %"class.blink::Member.85"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #11
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.85"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.85"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.85"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.85"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.90"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !25

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !25

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.90"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !25

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !25

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.90"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.90"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #11
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #11
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.90"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.90", %"class.WTF::Vector.90"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind
declare void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #11
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HTMLElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_32V8UnionFileOrFormDataOrUSVStringEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::V8UnionFileOrFormDataOrUSVString"*
  tail call void @_ZNK5blink32V8UnionFileOrFormDataOrUSVString5TraceEPNS_7VisitorE(%"class.blink::V8UnionFileOrFormDataOrUSVString"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink32V8UnionFileOrFormDataOrUSVString5TraceEPNS_7VisitorE(%"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18ValidityStateFlagsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ValidityStateFlags"*
  %4 = bitcast i8* %1 to void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)**, void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)*, void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)*, void (%"class.blink::ValidityStateFlags"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ValidityStateFlags"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14CustomStateSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CustomStateSet"*
  tail call void @_ZNK5blink14CustomStateSet5TraceEPNS_7VisitorE(%"class.blink::CustomStateSet"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink14CustomStateSet5TraceEPNS_7VisitorE(%"class.blink::CustomStateSet"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_17HeapLinkedHashSetINS3_10WeakMemberINS3_7ElementEEENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_17HeapLinkedHashSetINS3_10WeakMemberINS3_7ElementEEENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.107"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %20
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %35

34:                                               ; preds = %73, %20
  ret void

35:                                               ; preds = %73, %30
  %36 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %3, i64 %36
  br i1 %28, label %38, label %56

38:                                               ; preds = %35
  %39 = bitcast %"struct.WTF::KeyValuePair.107"* %37 to i64*
  %40 = load atomic i64, i64* %39 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %41
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %45 = or i1 %44, %43
  br i1 %45, label %73, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %3, i64 %36, i32 1
  %48 = bitcast %"class.blink::Member.108"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %0, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %73

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %37, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %59
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %62 = or i1 %61, %60
  br i1 %62, label %73, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %3, i64 %36, i32 1
  %65 = bitcast %"class.blink::Member.108"* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %73

73:                                               ; preds = %68, %63, %38, %46, %51, %56
  %74 = add nuw nsw i64 %36, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = bitcast i8* %1 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = inttoptr i64 %5 to %"struct.WTF::KeyValuePair.115"*
  %7 = bitcast i8* %1 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #11
  %12 = inttoptr i64 %5 to i8*
  %13 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.115"**
  store %"struct.WTF::KeyValuePair.115"* %6, %"struct.WTF::KeyValuePair.115"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %15, align 8
  %16 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %17, i64 10
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %0, i8* %12, i8** %7, i8* %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_7ElementEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  %20 = getelementptr inbounds i8, i8* %1, i64 24
  %21 = bitcast i8* %20 to i64*
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast i8* %20 to i8**
  %25 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %25, i64 11
  %27 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %0, i8** %24) #11
  br i1 %23, label %34, label %28

28:                                               ; preds = %2
  %29 = inttoptr i64 %22 to i8*
  %30 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %34

34:                                               ; preds = %2, %28
  %35 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %36 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %36, i64 2
  %38 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink26WeakCallbackMethodDelegateIN3WTF22VectorBackedLinkedListINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEEXadL_ZNS7_21ProcessCustomWeaknessIS6_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSB_14LivenessBrokerEEEE10TrampolineERKNS_14LivenessBrokerEPKv, i8* %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_7ElementEEENS_12KeyValuePairIS5_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSC_IjEEEESD_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.115"**
  %4 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.115"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.115"* %12, %4
  br i1 %13, label %63, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %59
  %20 = phi %"struct.WTF::KeyValuePair.115"* [ %12, %14 ], [ %60, %59 ]
  %21 = phi %"struct.WTF::KeyValuePair.115"* [ %11, %14 ], [ %20, %59 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Element"*, %"class.blink::Element"** %22, align 8
  %24 = ptrtoint %"class.blink::Element"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %59
    i64 0, label %59
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #11
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !3

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #11
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %59, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %23, i64 -1, i32 3
  %39 = bitcast %"class.blink::Member.12"* %38 to %"class.blink::HeapObjectHeader"*
  %40 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %37
  %45 = bitcast %"struct.WTF::KeyValuePair.115"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %21, i64 -1, i32 1
  store i32 0, i32* %51, align 1
  %52 = load i32, i32* %16, align 8
  %53 = add i32 %52, 1
  %54 = and i32 %53, 2147483647
  %55 = and i32 %52, -2147483648
  %56 = or i32 %54, %55
  store i32 %56, i32* %16, align 8
  %57 = load i32, i32* %18, align 4
  %58 = add i32 %57, -1
  store i32 %58, i32* %18, align 4
  br label %59

59:                                               ; preds = %37, %19, %19, %32, %50
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %20, i64 -1
  %61 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %3, align 8
  %62 = icmp ult %"struct.WTF::KeyValuePair.115"* %60, %61
  br i1 %62, label %63, label %19

63:                                               ; preds = %59, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.115"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.115"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WeakCallbackMethodDelegateIN3WTF22VectorBackedLinkedListINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEEXadL_ZNS7_21ProcessCustomWeaknessIS6_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSB_14LivenessBrokerEEEE10TrampolineERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.WTF::VectorBackedLinkedList"*
  tail call void @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE21ProcessCustomWeaknessIS5_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSA_14LivenessBrokerE(%"class.WTF::VectorBackedLinkedList"* %3, %"class.blink::LivenessBroker"* dereferenceable(1) %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE21ProcessCustomWeaknessIS5_EENSt3__19enable_ifIXsrT_19kIsGarbageCollectedEvE4typeERKNSA_14LivenessBrokerE(%"class.WTF::VectorBackedLinkedList"*, %"class.blink::LivenessBroker"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %3, i32 0) #11
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %3, i32 %6) #11
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %3, i32 0) #11
  %9 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, %8
  br i1 %9, label %49, label %10

10:                                               ; preds = %2, %44
  %11 = phi %"class.WTF::VectorBackedLinkedList"* [ %46, %44 ], [ %0, %2 ]
  %12 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %45, %44 ], [ %7, %2 ]
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Element"*, %"class.blink::Element"** %13, align 8
  %15 = icmp eq %"class.blink::Element"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !3

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #11
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = icmp eq %"class.blink::ThreadState"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %14, i64 -1, i32 3
  %30 = bitcast %"class.blink::Member.12"* %29 to %"class.blink::HeapObjectHeader"*
  %31 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %30, i64 0, i32 2
  %32 = load i16, i16* %31, align 2
  %33 = and i16 %32, 1
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %0, %"class.WTF::VectorBackedLinkedListNode"* %12, %"class.WTF::VectorBackedLinkedList"* %11)
  %37 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %36, 0
  %38 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %36, 1
  br label %44

39:                                               ; preds = %28, %23, %10
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %11, i64 0, i32 0
  %43 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %42, i32 %41) #11
  br label %44

44:                                               ; preds = %39, %35
  %45 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %43, %39 ], [ %37, %35 ]
  %46 = phi %"class.WTF::VectorBackedLinkedList"* [ %11, %39 ], [ %38, %35 ]
  %47 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %3, i32 0) #11
  %48 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %45, %47
  br i1 %48, label %49, label %10

49:                                               ; preds = %44, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %5, i32 0) #11
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %6 to i64
  %8 = sub i64 %4, %7
  %9 = lshr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %11, i32 %10) #11
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %11, i32 %16) #11
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %11, i32 %14) #11
  %19 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 1
  store i32 %14, i32* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 0, i32 0
  store i32 %16, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2
  %22 = bitcast %"class.blink::WeakMember.813"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #11
  br label %27

27:                                               ; preds = %3, %25
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %13, align 4
  store i32 -1, i32* %15, align 8
  store i32 %10, i32* %28, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %11, i32 %14) #11
  %34 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %33, 0
  %35 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %34, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

declare void @_ZN5blink8FormDataC1ERKS0_(%"class.blink::FormData"*, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8bindings9UnionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8bindings9UnionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8bindings9UnionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8bindings9UnionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::bindings::UnionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::bindings::UnionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::bindings::UnionBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8bindings9UnionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::bindings::UnionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::bindings::UnionBase"*)***
  %4 = load void (%"class.blink::bindings::UnionBase"*)**, void (%"class.blink::bindings::UnionBase"*)*** %3, align 8
  %5 = load void (%"class.blink::bindings::UnionBase"*)*, void (%"class.blink::bindings::UnionBase"*)** %4, align 8
  tail call void %5(%"class.blink::bindings::UnionBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8bindings9UnionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14CustomStateSetC1ERNS_7ElementE(%"class.blink::CustomStateSet"*, %"class.blink::Element"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.98"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #11
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  ret %"struct.WTF::KeyValuePair"* %69
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERKS2_RKS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.98"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.98"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %17) #11
  %24 = load i32, i32* %18, align 4
  %25 = and i32 %23, 16777215
  %26 = and i32 %24, -16777216
  %27 = or i32 %26, %25
  store i32 %27, i32* %18, align 4
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i32 [ %20, %10 ], [ %25, %22 ]
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %37
  br i1 %38, label %84, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %41 = xor i32 %29, -1
  %42 = lshr i32 %29, 23
  %43 = add nsw i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %39, %65
  %55 = phi %"struct.WTF::KeyValuePair"* [ %32, %39 ], [ %71, %65 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %66, %65 ]
  %57 = phi i64 [ %31, %39 ], [ %70, %65 ]
  %58 = phi i64 [ 0, %39 ], [ %68, %65 ]
  %59 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, inttoptr (i64 -1 to i8*)
  br i1 %61, label %65, label %62

62:                                               ; preds = %54
  %63 = bitcast i8* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %40, %63
  br i1 %64, label %97, label %65

65:                                               ; preds = %54, %62
  %66 = phi %"struct.WTF::KeyValuePair"* [ %56, %62 ], [ %55, %54 ]
  %67 = icmp eq i64 %58, 0
  %68 = select i1 %67, i64 %53, i64 %58
  %69 = add i64 %68, %57
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %70
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %37
  br i1 %74, label %75, label %54

75:                                               ; preds = %65
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %75
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS4_INS_12AtomicStringEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS6_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair"* nonnull dereferenceable(16) %66) #11
  %78 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %28, %75, %77
  %85 = phi %"struct.WTF::KeyValuePair"* [ %66, %77 ], [ %71, %75 ], [ %32, %28 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_INS_12AtomicStringEEEEENS3_17QualifiedNameHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_S6_EERKS4_RKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %85, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %86 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, %88
  %92 = shl i32 %91, 1
  %93 = load i32, i32* %12, align 8
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %84
  %96 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.98"* %0, %"struct.WTF::KeyValuePair"* %85)
  br label %97

97:                                               ; preds = %62, %84, %95
  %98 = phi i8 [ 1, %84 ], [ 1, %95 ], [ 0, %62 ]
  %99 = phi %"struct.WTF::KeyValuePair"* [ %85, %84 ], [ %96, %95 ], [ %55, %62 ]
  %100 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %99, 0
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %100, i8 %98, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.98"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink13QualifiedNameENS_12AtomicStringEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS4_INS_12AtomicStringEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS6_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %40) #11
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %33
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %31
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.98"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS2_INS_12AtomicStringEEEEENS3_17QualifiedNameHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS4_S6_EERKS4_RKS6_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 16777216
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #11
  br label %14

14:                                               ; preds = %12, %7, %3
  %15 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %5 to i64
  %16 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  store i64 %15, i64* %16, align 8
  %19 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 16777216
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #11
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %18) #11
  %31 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %18 to i8*
  tail call void @free(i8* %31) #11
  br label %32

32:                                               ; preds = %14, %20, %25, %30
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #11
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %32
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.WTF::AtomicString"* %33 to i64*
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  store i64 %55, i64* %56, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #11
  br label %73

73:                                               ; preds = %54, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.98"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.98", align 8
  %6 = bitcast %"class.WTF::HashTable.98"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.98"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.98"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.98"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %25 = ptrtoint %"struct.WTF::KeyValuePair"* %24 to i64
  br label %77

26:                                               ; preds = %99
  %27 = bitcast %"class.WTF::HashTable.98"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.98"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %100, %26 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %103, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %101, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"struct.WTF::KeyValuePair"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %73, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %71, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %68, %41
  %44 = phi i64 [ 0, %41 ], [ %69, %68 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 %44
  %46 = bitcast %"struct.WTF::KeyValuePair"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %68, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 %44, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #11
  br label %66

66:                                               ; preds = %65, %62, %49
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %67) #11
  br label %68

68:                                               ; preds = %66, %43
  %69 = add nuw nsw i64 %44, 1
  %70 = icmp eq i64 %69, %42
  br i1 %70, label %71, label %43

71:                                               ; preds = %68, %39
  %72 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #11
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %73

73:                                               ; preds = %30, %71
  %74 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, -2147483648
  store i32 %76, i32* %74, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair"* %35

77:                                               ; preds = %21, %99
  %78 = phi i64 [ %25, %21 ], [ %100, %99 ]
  %79 = phi i32 [ %13, %21 ], [ %101, %99 ]
  %80 = phi %"struct.WTF::KeyValuePair"* [ %24, %21 ], [ %102, %99 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %103, %99 ]
  %82 = phi i32 [ 0, %21 ], [ %104, %99 ]
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 %83
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %88 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %86, %87
  %89 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %86, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %90 = or i1 %89, %88
  br i1 %90, label %99, label %91

91:                                               ; preds = %77
  %92 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ReinsertEOS5_(%"class.WTF::HashTable.98"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %84)
  %93 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 %83
  %95 = icmp eq %"struct.WTF::KeyValuePair"* %94, %3
  %96 = select i1 %95, %"struct.WTF::KeyValuePair"* %92, %"struct.WTF::KeyValuePair"* %81
  %97 = load i32, i32* %12, align 8
  %98 = ptrtoint %"struct.WTF::KeyValuePair"* %93 to i64
  br label %99

99:                                               ; preds = %77, %91
  %100 = phi i64 [ %78, %77 ], [ %98, %91 ]
  %101 = phi i32 [ %79, %77 ], [ %97, %91 ]
  %102 = phi %"struct.WTF::KeyValuePair"* [ %80, %77 ], [ %93, %91 ]
  %103 = phi %"struct.WTF::KeyValuePair"* [ %81, %77 ], [ %96, %91 ]
  %104 = add i32 %82, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %26, label %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS4_INS_12AtomicStringEEEEENS_18PartitionAllocatorENS_12KeyValuePairIS6_S8_EEEEvRT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.WTF::KeyValuePair", align 8
  %3 = bitcast %"struct.WTF::KeyValuePair"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !26
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8, !noalias !26
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8, !noalias !26
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8, !alias.scope !26
  %9 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 1
  %12 = load i32, i32* %11, align 4, !noalias !26
  %13 = and i32 %12, 16777216
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #11, !noalias !26
  br label %17

17:                                               ; preds = %15, %10, %1
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8, !noalias !26
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8, !alias.scope !26
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %21, label %40, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4, !noalias !26
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %40

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %29 = load i32, i32* %28, align 4, !noalias !26
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #11
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %27
  tail call void @llvm.trap() #11, !noalias !26
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4, !noalias !26
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  br label %40

40:                                               ; preds = %17, %22, %37
  %41 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %7, %17 ], [ %7, %22 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 16777216
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %50) #11
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.WTF::AtomicString"* %52 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %2, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ReinsertEOS5_(%"class.WTF::HashTable.98"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.98"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %23) #11
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %27 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 16777216
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %34) #11
  br label %35

35:                                               ; preds = %22, %28, %33
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.WTF::AtomicString"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.WTF::AtomicString"* %36 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  ret %"struct.WTF::KeyValuePair"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.98"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #11
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %84
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS_12AtomicStringEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS9_IS4_EEEESA_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEbRKT0_(%"class.WTF::HashTable.98"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.98", %"class.WTF::HashTable.98"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #11
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair"* %69, null
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.107"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SF_SK_EERKS2_DnEENS_18HashTableAddResultISL_SD_EEOT0_OT1_(%"class.WTF::HashTable.105"*, %"class.blink::QualifiedName"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.107", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.107"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable.105"* %0, %"struct.WTF::KeyValuePair.107"* null)
  %10 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.107"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #11
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %101, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair.107"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair.107"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.107"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %180, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair.107"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair.107"* %67, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.107"* %67 to i8*
  %80 = bitcast %"struct.WTF::KeyValuePair.107"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8, !alias.scope !29
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %85 = load i32, i32* %84, align 4, !noalias !29
  %86 = and i32 %85, 16777216
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #11, !noalias !29
  br label %90

90:                                               ; preds = %78, %83, %88
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 1
  %92 = bitcast %"class.blink::Member.108"* %91 to i64*
  store i64 0, i64* %92, align 8, !alias.scope !29
  %93 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_(i8* nonnull %79, %"struct.WTF::KeyValuePair.107"* nonnull dereferenceable(16) %4) #11
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  %95 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 2147483647
  %98 = and i32 %97, 2147483647
  %99 = and i32 %96, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %95, align 8
  br label %101

101:                                              ; preds = %29, %76, %90
  %102 = phi %"struct.WTF::KeyValuePair.107"* [ %67, %90 ], [ %72, %76 ], [ %33, %29 ]
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %104 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 16777216
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %111) #11
  br label %112

112:                                              ; preds = %110, %105, %101
  %113 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %103 to i64
  %114 = bitcast %"struct.WTF::KeyValuePair.107"* %102 to i64*
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %102, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %116, null
  br i1 %117, label %130, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 16777216
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #11
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %116) #11
  %129 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %116 to i8*
  call void @free(i8* %129) #11
  br label %130

130:                                              ; preds = %112, %118, %123, %128
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %102, i64 0, i32 1
  %132 = bitcast %"class.blink::Member.108"* %131 to i64*
  store atomic i64 0, i64* %132 monotonic, align 8
  %133 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %168, label %135

135:                                              ; preds = %130
  %136 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %137 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %136, i64 0, i32 1
  %138 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %137) #11
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %142, !prof !3

140:                                              ; preds = %135
  %141 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %137, i8* %141) #11
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i8* [ %141, %140 ], [ %138, %135 ]
  %144 = bitcast i8* %143 to %"class.blink::ThreadState"**
  %145 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 9
  %147 = load i8, i8* %146, align 1, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 13
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %153, align 8
  %155 = load atomic i64, i64* %132 monotonic, align 8
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %154, i64 0, i32 0, i32 0
  %159 = inttoptr i64 %155 to i8*
  %160 = bitcast %"class.blink::MarkingVisitor"* %154 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %161, i64 5
  %163 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %162, align 8
  call void %163(%"class.blink::Visitor"* %158, i8* nonnull %159, i8* %159, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  %164 = load i64, i64* %150, align 8
  br label %165

165:                                              ; preds = %157, %149
  %166 = phi i64 [ %152, %149 ], [ %164, %157 ]
  %167 = add i64 %166, -1
  store i64 %167, i64* %150, align 8
  br label %168

168:                                              ; preds = %130, %142, %165
  %169 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 3
  %173 = load i32, i32* %172, align 8
  %174 = add i32 %173, %171
  %175 = shl i32 %174, 1
  %176 = load i32, i32* %13, align 8
  %177 = icmp ult i32 %175, %176
  br i1 %177, label %180, label %178

178:                                              ; preds = %168
  %179 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable.105"* %0, %"struct.WTF::KeyValuePair.107"* %102)
  br label %180

180:                                              ; preds = %63, %168, %178
  %181 = phi i8 [ 1, %168 ], [ 1, %178 ], [ 0, %63 ]
  %182 = phi %"struct.WTF::KeyValuePair.107"* [ %102, %168 ], [ %179, %178 ], [ %56, %63 ]
  %183 = insertvalue { %"struct.WTF::KeyValuePair.107"*, i8 } undef, %"struct.WTF::KeyValuePair.107"* %182, 0
  %184 = insertvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %183, i8 %181, 1
  ret { %"struct.WTF::KeyValuePair.107"*, i8 } %184
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSD_(%"class.WTF::HashTable.105"*, %"struct.WTF::KeyValuePair.107"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6RehashEjPSD_(%"class.WTF::HashTable.105"* %0, i32 %32, %"struct.WTF::KeyValuePair.107"* %1)
  ret %"struct.WTF::KeyValuePair.107"* %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6RehashEjPSD_(%"class.WTF::HashTable.105"*, i32, %"struct.WTF::KeyValuePair.107"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair.107", align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %7, %1
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 -86, i8* %5, align 1
  %10 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb(%"class.WTF::HashTable.105"* %0, i32 %1, %"struct.WTF::KeyValuePair.107"* %2, i8* nonnull dereferenceable(1) %5)
  %11 = load i8, i8* %5, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = zext i32 %1 to i64
  %15 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %14) #11
  %16 = bitcast %"class.blink::HeapHashTableBacking"* %15 to %"struct.WTF::KeyValuePair.107"*
  br label %22

17:                                               ; preds = %3
  %18 = zext i32 %1 to i64
  %19 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %18) #11
  %20 = bitcast %"class.blink::HeapHashTableBacking"* %19 to %"struct.WTF::KeyValuePair.107"*
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %13, %17
  %23 = phi %"struct.WTF::KeyValuePair.107"* [ %16, %13 ], [ %20, %17 ]
  %24 = phi i64 [ %14, %13 ], [ %18, %17 ]
  %25 = bitcast %"struct.WTF::KeyValuePair.107"* %4 to i8*
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !32
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 1
  %30 = bitcast %"class.blink::Member.108"* %29 to i64*
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 0, i32 0
  br label %32

32:                                               ; preds = %45, %22
  %33 = phi i64 [ 0, %22 ], [ %47, %45 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %23, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.107"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8, !noalias !32
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8, !alias.scope !32
  %37 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4, !noalias !32
  %41 = and i32 %40, 16777216
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #11, !noalias !32
  br label %45

45:                                               ; preds = %43, %38, %32
  store i64 0, i64* %30, align 8, !alias.scope !32
  %46 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_(i8* %35, %"struct.WTF::KeyValuePair.107"* nonnull dereferenceable(16) %4) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  %47 = add nuw nsw i64 %33, 1
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %49, label %32

49:                                               ; preds = %45, %17
  %50 = phi %"struct.WTF::KeyValuePair.107"* [ %20, %17 ], [ %23, %45 ]
  %51 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSD_jSM_(%"class.WTF::HashTable.105"* %0, %"struct.WTF::KeyValuePair.107"* %50, i32 %1, %"struct.WTF::KeyValuePair.107"* %2)
  br label %52

52:                                               ; preds = %9, %49
  %53 = phi %"struct.WTF::KeyValuePair.107"* [ %51, %49 ], [ %10, %9 ]
  ret %"struct.WTF::KeyValuePair.107"* %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE12ExpandBufferEjPSD_Rb(%"class.WTF::HashTable.105"*, i32, %"struct.WTF::KeyValuePair.107"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.WTF::KeyValuePair.107", align 8
  %6 = alloca %"struct.WTF::KeyValuePair.107", align 8
  %7 = alloca %"struct.WTF::KeyValuePair.107", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %4
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #11
  br label %15

15:                                               ; preds = %13, %4
  %16 = phi i8* [ %14, %13 ], [ %11, %4 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 6
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 16
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %30, label %26

26:                                               ; preds = %15, %22
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 13
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %26
  %31 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %26, %30
  %34 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %34, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair.107"* %35, null
  br i1 %36, label %170, label %37

37:                                               ; preds = %33
  %38 = zext i32 %1 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = bitcast %"struct.WTF::KeyValuePair.107"* %35 to i8*
  %41 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %40, i64 %39) #11
  br i1 %41, label %42, label %170

42:                                               ; preds = %37
  store i8 1, i8* %3, align 1
  %43 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %34, align 8
  %46 = zext i32 %44 to i64
  %47 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #11
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair.107"*
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %84, label %50

50:                                               ; preds = %42
  %51 = bitcast %"struct.WTF::KeyValuePair.107"* %7 to i8*
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !35
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %52, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %7, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %7, i64 0, i32 1
  %56 = bitcast %"class.blink::Member.108"* %55 to i64*
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %7, i64 0, i32 0
  br label %58

58:                                               ; preds = %71, %50
  %59 = phi i64 [ 0, %50 ], [ %73, %71 ]
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %48, i64 %59
  %61 = bitcast %"struct.WTF::KeyValuePair.107"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8, !noalias !35
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8, !alias.scope !35
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4, !noalias !35
  %67 = and i32 %66, 16777216
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #11, !noalias !35
  br label %71

71:                                               ; preds = %69, %64, %58
  store i64 0, i64* %56, align 8, !alias.scope !35
  %72 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_(i8* %61, %"struct.WTF::KeyValuePair.107"* nonnull dereferenceable(16) %7) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  %73 = add nuw nsw i64 %59, 1
  %74 = icmp eq i64 %73, %46
  br i1 %74, label %75, label %58

75:                                               ; preds = %71
  br i1 %49, label %84, label %76

76:                                               ; preds = %75
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %77, i64 0, i32 0, i32 0
  %79 = bitcast %"struct.WTF::KeyValuePair.107"* %6 to i8*
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %6, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %6, i64 0, i32 1
  %82 = bitcast %"class.blink::Member.108"* %81 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %6, i64 0, i32 0
  br label %102

84:                                               ; preds = %148, %42, %75
  %85 = phi %"struct.WTF::KeyValuePair.107"* [ null, %75 ], [ null, %42 ], [ %109, %148 ]
  %86 = bitcast %"class.WTF::HashTable.105"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %47, %"class.blink::HeapHashTableBacking"** %86, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %47, i64 0, i32 0
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #11
  br label %92

92:                                               ; preds = %84, %89
  %93 = icmp eq i32 %1, 0
  br i1 %93, label %151, label %94

94:                                               ; preds = %92
  %95 = bitcast %"struct.WTF::KeyValuePair.107"* %5 to i8*
  %96 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !38
  %97 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %96, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %5, i64 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %5, i64 0, i32 1
  %100 = bitcast %"class.blink::Member.108"* %99 to i64*
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %5, i64 0, i32 0
  br label %153

102:                                              ; preds = %148, %76
  %103 = phi i64 [ 0, %76 ], [ %149, %148 ]
  %104 = phi %"struct.WTF::KeyValuePair.107"* [ null, %76 ], [ %109, %148 ]
  %105 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %34, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %105, i64 %103
  %107 = icmp eq %"struct.WTF::KeyValuePair.107"* %106, %2
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %48, i64 %103
  %109 = select i1 %107, %"struct.WTF::KeyValuePair.107"* %108, %"struct.WTF::KeyValuePair.107"* %104
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %106, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %113 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, %112
  %114 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %115 = or i1 %114, %113
  br i1 %115, label %116, label %128

116:                                              ; preds = %102
  %117 = bitcast %"struct.WTF::KeyValuePair.107"* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %112, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !41
  %118 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %112, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 1
  %121 = load i32, i32* %120, align 4, !noalias !41
  %122 = and i32 %121, 16777216
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %125) #11, !noalias !41
  br label %126

126:                                              ; preds = %116, %119, %124
  store i64 0, i64* %82, align 8, !alias.scope !41
  %127 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_(i8* %117, %"struct.WTF::KeyValuePair.107"* nonnull dereferenceable(16) %6) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #11
  br label %148

128:                                              ; preds = %102
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %108, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %129) #11
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %108, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %130, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %132 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %130, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 16777216
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %139) #11
  br label %140

140:                                              ; preds = %128, %133, %138
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %48, i64 %103, i32 1
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %105, i64 %103, i32 1
  %143 = bitcast %"class.blink::Member.108"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::Member.108"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %34, align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %146, i64 %103, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %147) #11
  br label %148

148:                                              ; preds = %126, %140
  %149 = add nuw nsw i64 %103, 1
  %150 = icmp eq i64 %149, %46
  br i1 %150, label %84, label %102

151:                                              ; preds = %166, %92
  %152 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSD_jSM_(%"class.WTF::HashTable.105"* %0, %"struct.WTF::KeyValuePair.107"* %45, i32 %1, %"struct.WTF::KeyValuePair.107"* %85)
  br label %170

153:                                              ; preds = %166, %94
  %154 = phi i64 [ 0, %94 ], [ %168, %166 ]
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %45, i64 %154
  %156 = bitcast %"struct.WTF::KeyValuePair.107"* %155 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #11
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8, !noalias !38
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %157, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8, !alias.scope !38
  %158 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %157, null
  br i1 %158, label %166, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 4, !noalias !38
  %162 = and i32 %161, 16777216
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #11, !noalias !38
  br label %166

166:                                              ; preds = %153, %159, %164
  store i64 0, i64* %100, align 8, !alias.scope !38
  %167 = call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_(i8* %156, %"struct.WTF::KeyValuePair.107"* nonnull dereferenceable(16) %5) #11
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #11
  %168 = add nuw nsw i64 %154, 1
  %169 = icmp eq i64 %168, %38
  br i1 %169, label %151, label %153

170:                                              ; preds = %37, %33, %151
  %171 = phi %"struct.WTF::KeyValuePair.107"* [ %152, %151 ], [ null, %33 ], [ null, %37 ]
  ret %"struct.WTF::KeyValuePair.107"* %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSD_jSM_(%"class.WTF::HashTable.105"*, %"struct.WTF::KeyValuePair.107"*, i32, %"struct.WTF::KeyValuePair.107"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.105", align 8
  %6 = bitcast %"class.WTF::HashTable.105"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.105"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.107"* %1, %"struct.WTF::KeyValuePair.107"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.107"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.107"* %1 to i8*
  br label %27

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %19, align 8
  br label %83

23:                                               ; preds = %122
  %24 = bitcast %"class.WTF::HashTable.105"* %5 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = ptrtoint i8* %25 to i64
  br label %27

27:                                               ; preds = %15, %23
  %28 = phi i64 [ %16, %15 ], [ %26, %23 ]
  %29 = phi i32 [ 0, %15 ], [ %123, %23 ]
  %30 = phi i8* [ %17, %15 ], [ %25, %23 ]
  %31 = phi %"struct.WTF::KeyValuePair.107"* [ null, %15 ], [ %125, %23 ]
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.WTF::HashTable.105"* %5 to i64*
  br label %40

36:                                               ; preds = %27
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %30) #11
  %37 = load i32, i32* %12, align 8
  %38 = bitcast %"class.WTF::HashTable.105"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %34, %36
  %41 = phi i64* [ %35, %34 ], [ %38, %36 ]
  %42 = phi i64 [ %28, %34 ], [ %39, %36 ]
  %43 = phi i32 [ %29, %34 ], [ %37, %36 ]
  %44 = bitcast %"class.WTF::HashTable.105"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  store atomic i64 %42, i64* %44 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = inttoptr i64 %42 to i8*
  %50 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #11
  br label %51

51:                                               ; preds = %40, %48
  store i32 %2, i32* %12, align 8
  store i64 %45, i64* %41, align 8
  store i32 %43, i32* %8, align 8
  %52 = inttoptr i64 %45 to %"struct.WTF::KeyValuePair.107"*
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %79, label %54

54:                                               ; preds = %51
  %55 = icmp eq i32 %43, 0
  br i1 %55, label %77, label %56

56:                                               ; preds = %54
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = zext i32 %43 to i64
  br label %60

60:                                               ; preds = %74, %56
  %61 = phi i64 [ 0, %56 ], [ %75, %74 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %52, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %65
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %68 = or i1 %67, %66
  br i1 %68, label %74, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %62, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %70) #11
  %71 = bitcast %"struct.WTF::KeyValuePair.107"* %62 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %52, i64 %61, i32 1
  %73 = bitcast %"class.blink::Member.108"* %72 to i64*
  store atomic i64 0, i64* %73 monotonic, align 8
  br label %74

74:                                               ; preds = %69, %60
  %75 = add nuw nsw i64 %61, 1
  %76 = icmp eq i64 %75, %59
  br i1 %76, label %77, label %60

77:                                               ; preds = %74, %54
  %78 = inttoptr i64 %45 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %78) #11
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %79

79:                                               ; preds = %51, %77
  %80 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, -2147483648
  store i32 %82, i32* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.107"* %31

83:                                               ; preds = %18, %122
  %84 = phi i32 [ %13, %18 ], [ %123, %122 ]
  %85 = phi %"struct.WTF::KeyValuePair.107"* [ %22, %18 ], [ %124, %122 ]
  %86 = phi %"struct.WTF::KeyValuePair.107"* [ null, %18 ], [ %125, %122 ]
  %87 = phi i32 [ 0, %18 ], [ %126, %122 ]
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, %92
  %94 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %95 = or i1 %94, %93
  br i1 %95, label %122, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %89, i64 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair.107"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.105"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %97) #11
  %99 = extractvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %98, 0
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %99, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %100) #11
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %99, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %101, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %103 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %101, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16777216
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %110) #11
  br label %111

111:                                              ; preds = %96, %104, %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %99, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %85, i64 %88, i32 1
  %114 = bitcast %"class.blink::Member.108"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member.108"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %19, align 8
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %117, i64 %88
  %119 = icmp eq %"struct.WTF::KeyValuePair.107"* %118, %3
  %120 = select i1 %119, %"struct.WTF::KeyValuePair.107"* %99, %"struct.WTF::KeyValuePair.107"* %86
  %121 = load i32, i32* %12, align 8
  br label %122

122:                                              ; preds = %83, %111
  %123 = phi i32 [ %84, %83 ], [ %121, %111 ]
  %124 = phi %"struct.WTF::KeyValuePair.107"* [ %85, %83 ], [ %117, %111 ]
  %125 = phi %"struct.WTF::KeyValuePair.107"* [ %86, %83 ], [ %120, %111 ]
  %126 = add i32 %87, 1
  %127 = icmp eq i32 %126, %123
  br i1 %127, label %23, label %83
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.107"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_18HashMapValueTraitsINS9_IS3_EENS9_ISC_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJSD_EEEPSD_PvDpOT_(i8*, %"struct.WTF::KeyValuePair.107"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.107"*
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %7 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 16777216
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #11
  br label %15

15:                                               ; preds = %2, %8, %13
  %16 = getelementptr inbounds i8, i8* %0, i64 8
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %1, i64 0, i32 1
  %18 = bitcast %"class.blink::Member.108"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %15
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #11
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !3

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #11
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 9
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %41, align 8
  %43 = load atomic i64, i64* %20 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %42, i64 0, i32 0, i32 0
  %47 = inttoptr i64 %43 to i8*
  %48 = bitcast %"class.blink::MarkingVisitor"* %42 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, i64 5
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %46, i8* nonnull %47, i8* %47, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  %52 = load i64, i64* %38, align 8
  br label %53

53:                                               ; preds = %45, %37
  %54 = phi i64 [ %40, %37 ], [ %52, %45 ]
  %55 = add i64 %54, -1
  store i64 %55, i64* %38, align 8
  br label %56

56:                                               ; preds = %15, %30, %53
  ret %"struct.WTF::KeyValuePair.107"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.20, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINSA_IS3_EENSA_ISD_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINSA_IS3_EENSA_ISD_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([619 x i8], [619 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS3_10HashTraitsISB_EEEEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINSC_IS5_EENSC_ISF_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.107"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %18
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %39, %24
  %28 = phi i64 [ 0, %24 ], [ %41, %39 ]
  %29 = phi i32 [ 0, %24 ], [ %40, %39 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %22, i64 %28
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %33
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %36 = or i1 %35, %34
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %30, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %38) #11
  br label %39

39:                                               ; preds = %37, %27
  %40 = add i32 %29, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %21, %41
  br i1 %42, label %27, label %43

43:                                               ; preds = %39, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.107"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.105"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #11
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair.107"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair.107"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair.107"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair.107"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair.107"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair.107"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair.107"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair.107"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair.107"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair.107"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair.107"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair.107"*, i8 } undef, %"struct.WTF::KeyValuePair.107"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair.107"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair.107"*, i8 } %84
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapLinkedHashSetINS_10WeakMemberINS_7ElementEEEN3WTF10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.116"* %0, i32 %22) #11
  %23 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %26 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.116"* %0, i32 %37) #11
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 %44
  %46 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 %44, i32 2
  %50 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %42, i64 0, i32 2
  %51 = bitcast %"class.blink::WeakMember.813"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::WeakMember.813"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %40
  %57 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %58 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %57, i64 0, i32 1
  %59 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %58) #11
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63, !prof !3

61:                                               ; preds = %56
  %62 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %58, i8* %62) #11
  br label %63

63:                                               ; preds = %40, %56, %61
  %64 = load i32, i32* %3, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E15ReserveCapacityEj(%"class.WTF::Vector.116"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !25

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %10 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEES0_EEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.953"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.953"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.953", %"class.blink::HeapVectorBacking.953"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %8, align 8
  %26 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.116"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.116"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.116"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEES0_EEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking.953"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.953"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.953"* %17, null
  %23 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !25

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.116"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.953", %"class.blink::HeapVectorBacking.953"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.116"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.953", %"class.blink::HeapVectorBacking.953"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.953"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.953"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.953"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS1_12VectorTraitsIS7_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([273 x i8], [273 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS_26VectorBackedLinkedListNodeINS1_10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEENS_13HeapAllocatorEEENS2_12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.115"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %38

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %35, %21
  %24 = phi i64 [ 0, %21 ], [ %36, %35 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair.115"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %35
    i64 0, label %35
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #11
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %0, i64 %24, i32 1
  store i32 0, i32* %34, align 1
  br label %35

35:                                               ; preds = %23, %23, %33
  %36 = add nuw nsw i64 %24, 1
  %37 = icmp eq i64 %36, %22
  br i1 %37, label %38, label %23

38:                                               ; preds = %35, %12, %2
  %39 = bitcast %"struct.WTF::KeyValuePair.115"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %39) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14ShrinkCapacityEj(%"class.WTF::Vector.116"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %62

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = zext i32 %8 to i64
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %13
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %14
  %17 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %15 to i8*
  %18 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %16 to i64
  %19 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #11
  store i32 %1, i32* %7, align 4
  br label %21

21:                                               ; preds = %10, %6
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %21
  %24 = zext i32 %1 to i64
  %25 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEES0_EEEEmm(i64 %24) #11
  %26 = bitcast %"class.WTF::Vector.116"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = load i32, i32* %3, align 8
  %29 = zext i32 %28 to i64
  %30 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeIN3WTF26VectorBackedLinkedListNodeINS_10WeakMemberINS_7ElementEEES0_EEEEmm(i64 %29) #11
  %31 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8* %27, i64 %30, i64 %25) #11
  br i1 %31, label %32, label %35

32:                                               ; preds = %23
  %33 = lshr i64 %25, 4
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %3, align 8
  br label %62

35:                                               ; preds = %23
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #11
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !3

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #11
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 6
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 16
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %62, label %53

53:                                               ; preds = %42, %49
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 13
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  tail call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E16ReallocateBufferEj(%"class.WTF::Vector.116"* %0, i32 %1)
  br label %62

58:                                               ; preds = %21
  %59 = bitcast %"class.WTF::Vector.116"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %60) #11
  br label %62

62:                                               ; preds = %49, %32, %57, %58, %53, %2
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ShrinkVectorBackingEPvmm(i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember.813"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRPS3_EENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Element"** dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.115"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.113"* %18, %"class.blink::Element"** dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #11
  %20 = extractvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %27, %"class.WTF::VectorBackedLinkedList"* %29, %"class.blink::Element"** dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %34, i32 0) #11
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %44, i32 %43) #11
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %45, %"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %49, %"class.WTF::VectorBackedLinkedList"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #11
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !3

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #11
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::WeakMember.813"*, i8 } undef, %"class.blink::WeakMember.813"* %57, 0
  %72 = insertvalue { %"class.blink::WeakMember.813"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::WeakMember.813"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRPS3_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %12) #11
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = bitcast %"class.blink::Element"** %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::WeakMember.813"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %56, label %33, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::WeakMember.813"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46, %33
  %54 = load i32, i32* %21, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %21, align 4
  br label %57

56:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #11
  br label %57

57:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %75

58:                                               ; preds = %4
  %59 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %18) #11
  %60 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %17, align 8
  %62 = bitcast %"class.blink::Element"** %3 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %59 to i64*
  %65 = shl i64 %10, 28
  %66 = zext i32 %16 to i64
  %67 = or i64 %65, %66
  store i64 %67, i64* %64, align 8
  %68 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %59, i64 0, i32 2
  %69 = bitcast %"class.blink::WeakMember.813"* %68 to i64*
  store atomic i64 %63, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %58
  %73 = inttoptr i64 %63 to i8*
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #11
  br label %75

75:                                               ; preds = %72, %58, %57
  %76 = phi i32 [ %22, %57 ], [ %18, %58 ], [ %18, %72 ]
  %77 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %16) #11
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %77, i64 0, i32 1
  store i32 %76, i32* %78, align 4
  %79 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %12) #11
  %80 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %79, i64 0, i32 0
  store i32 %76, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %76) #11
  %85 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %84, 0
  %86 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %85, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %1, %3
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %14, i32 %12) #11
  br i1 %13, label %41, label %16

16:                                               ; preds = %5
  %17 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %3 to i64
  %18 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %4, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %18, i32 0) #11
  %20 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %19 to i64
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 4
  %23 = trunc i64 %22 to i32
  %24 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %14, i32 %23) #11
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %12
  br i1 %27, label %39, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %15, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %14, i32 %30) #11
  %34 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %14, i32 %32) #11
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %33, i64 0, i32 1
  store i32 %32, i32* %35, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %34, i64 0, i32 0
  store i32 %30, i32* %36, align 8
  %37 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %14, i32 %26) #11
  %38 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %37, i64 0, i32 1
  store i32 %12, i32* %38, align 4
  store i32 %12, i32* %25, align 8
  store i32 %26, i32* %29, align 8
  store i32 %23, i32* %31, align 4
  br label %39

39:                                               ; preds = %16, %28
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %14, i32 %12) #11
  br label %41

41:                                               ; preds = %39, %5
  %42 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %15, %5 ], [ %40, %39 ]
  %43 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %42, 0
  %44 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %43, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.115"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERPS3_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.113"*, %"class.blink::Element"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.115"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* null)
  %9 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.115"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Element"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = icmp eq %"class.blink::Element"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Element"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.115"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.115"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Element"* %59, %43
  br i1 %64, label %181, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Element"* %59, inttoptr (i64 -1 to %"class.blink::Element"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.115"* %60, %"struct.WTF::KeyValuePair.115"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Element"*, %"class.blink::Element"** %73, align 8
  %75 = icmp eq %"class.blink::Element"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.115"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.115"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Element"*, %"class.blink::Element"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Element"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.115"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Element"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.115"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Element"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #11
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %89, i64 0, i32 1
  %99 = load i32, i32* %2, align 4
  store i32 %99, i32* %98, align 4
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %135, label %102

102:                                              ; preds = %97
  %103 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %104 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %103, i64 0, i32 1
  %105 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %104) #11
  %106 = icmp eq i8* %105, null
  br i1 %106, label %107, label %109, !prof !3

107:                                              ; preds = %102
  %108 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %104, i8* %108) #11
  br label %109

109:                                              ; preds = %107, %102
  %110 = phi i8* [ %108, %107 ], [ %105, %102 ]
  %111 = bitcast i8* %110 to %"class.blink::ThreadState"**
  %112 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 9
  %114 = load i8, i8* %113, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %135, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 13
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %112, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %121 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %120, align 8
  %122 = load atomic i64, i64* %91 monotonic, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %121, i64 0, i32 0, i32 0
  %126 = inttoptr i64 %122 to i8*
  %127 = bitcast %"class.blink::MarkingVisitor"* %121 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %128 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, i64 5
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %129, align 8
  tail call void %130(%"class.blink::Visitor"* %125, i8* nonnull %126, i8* nonnull %126, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  %131 = load i64, i64* %117, align 8
  br label %132

132:                                              ; preds = %124, %116
  %133 = phi i64 [ %119, %116 ], [ %131, %124 ]
  %134 = add i64 %133, -1
  store i64 %134, i64* %117, align 8
  br label %135

135:                                              ; preds = %97, %109, %132
  %136 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %135
  %146 = tail call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* %89)
  br label %181

147:                                              ; preds = %135
  %148 = mul i32 %138, 6
  %149 = icmp ult i32 %148, %143
  %150 = icmp ugt i32 %143, 8
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %181

152:                                              ; preds = %147
  %153 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %154 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %153, i64 0, i32 1
  %155 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %154) #11
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %159, !prof !3

157:                                              ; preds = %152
  %158 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %154, i8* %158) #11
  br label %159

159:                                              ; preds = %157, %152
  %160 = phi i8* [ %158, %157 ], [ %155, %152 ]
  %161 = bitcast i8* %160 to %"class.blink::ThreadState"**
  %162 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 6
  %164 = load i8, i8* %163, align 8, !range !2
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %170, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 16
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %181, label %170

170:                                              ; preds = %159, %166
  %171 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 13
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %181

174:                                              ; preds = %170
  %175 = load i32, i32* %12, align 8
  %176 = lshr i32 %175, 1
  %177 = zext i32 %176 to i64
  %178 = tail call %"class.blink::HeapHashTableBacking.944"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %177) #11
  %179 = bitcast %"class.blink::HeapHashTableBacking.944"* %178 to %"struct.WTF::KeyValuePair.115"*
  %180 = tail call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* %179, i32 %176, %"struct.WTF::KeyValuePair.115"* %89) #11
  br label %181

181:                                              ; preds = %58, %166, %147, %145, %174, %170
  %182 = phi i8 [ 1, %170 ], [ 1, %174 ], [ 1, %145 ], [ 1, %147 ], [ 1, %166 ], [ 0, %58 ]
  %183 = phi %"struct.WTF::KeyValuePair.115"* [ %89, %170 ], [ %180, %174 ], [ %146, %145 ], [ %89, %147 ], [ %89, %166 ], [ %60, %58 ]
  %184 = insertvalue { %"struct.WTF::KeyValuePair.115"*, i8 } undef, %"struct.WTF::KeyValuePair.115"* %183, 0
  %185 = insertvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %184, i8 %182, 1
  ret { %"struct.WTF::KeyValuePair.115"*, i8 } %185
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.113"*, %"struct.WTF::KeyValuePair.115"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.113"* %0, i32 %35, %"struct.WTF::KeyValuePair.115"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.944"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.944"* %42 to %"struct.WTF::KeyValuePair.115"*
  %44 = call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* %43, i32 %40, %"struct.WTF::KeyValuePair.115"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.115"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.115"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.113"*, i32, %"struct.WTF::KeyValuePair.115"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.115"* %32, null
  br i1 %33, label %78, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.115"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %78

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.944"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.944"* %44 to %"struct.WTF::KeyValuePair.115"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %75, %39
  %48 = phi %"struct.WTF::KeyValuePair.115"* [ null, %39 ], [ %65, %75 ]
  %49 = bitcast %"class.WTF::HashTable.113"* %0 to %"class.blink::HeapHashTableBacking.944"**
  store %"class.blink::HeapHashTableBacking.944"* %44, %"class.blink::HeapHashTableBacking.944"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.944", %"class.blink::HeapHashTableBacking.944"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.115"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* %42, i32 %1, %"struct.WTF::KeyValuePair.115"* %48)
  br label %78

58:                                               ; preds = %39, %75
  %59 = phi i64 [ %76, %75 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.115"* [ %65, %75 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.115"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.115"* %64, %"struct.WTF::KeyValuePair.115"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.115"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.115"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %75

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.115"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %61, i64 %59, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = add nuw nsw i64 %59, 1
  %77 = icmp eq i64 %76, %43
  br i1 %77, label %47, label %58

78:                                               ; preds = %34, %30, %55
  %79 = phi %"struct.WTF::KeyValuePair.115"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.115"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.113"*, %"struct.WTF::KeyValuePair.115"*, i32, %"struct.WTF::KeyValuePair.115"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.113", align 8
  %6 = bitcast %"class.WTF::HashTable.113"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.113"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.115"* %1, %"struct.WTF::KeyValuePair.115"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.115"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.115"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %19, align 8
  br label %57

21:                                               ; preds = %80
  %22 = bitcast %"class.WTF::HashTable.113"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %81, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.115"* [ null, %15 ], [ %83, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.113"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.113"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.113"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.115"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.115"* nonnull %52, i32 %41) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.115"* %29

57:                                               ; preds = %18, %80
  %58 = phi i32 [ %13, %18 ], [ %81, %80 ]
  %59 = phi %"struct.WTF::KeyValuePair.115"* [ %20, %18 ], [ %82, %80 ]
  %60 = phi %"struct.WTF::KeyValuePair.115"* [ null, %18 ], [ %83, %80 ]
  %61 = phi i32 [ 0, %18 ], [ %84, %80 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.115"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %80
    i64 0, label %80
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.115"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.113"* nonnull %5, %"class.blink::WeakMember.813"* dereferenceable(8) %67) #11
  %69 = extractvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.115"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %59, i64 %62, i32 1
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %72, align 8
  %75 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %19, align 8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %75, i64 %62
  %77 = icmp eq %"struct.WTF::KeyValuePair.115"* %76, %3
  %78 = select i1 %77, %"struct.WTF::KeyValuePair.115"* %69, %"struct.WTF::KeyValuePair.115"* %60
  %79 = load i32, i32* %12, align 8
  br label %80

80:                                               ; preds = %57, %57, %66
  %81 = phi i32 [ %58, %57 ], [ %79, %66 ], [ %58, %57 ]
  %82 = phi %"struct.WTF::KeyValuePair.115"* [ %59, %57 ], [ %75, %66 ], [ %59, %57 ]
  %83 = phi %"struct.WTF::KeyValuePair.115"* [ %60, %57 ], [ %78, %66 ], [ %60, %57 ]
  %84 = add i32 %61, 1
  %85 = icmp eq i32 %84, %81
  br i1 %85, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.944"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.20, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.944"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.944"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS1_12KeyValuePairIS5_jEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSC_IjEEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([444 x i8], [444 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS6_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSD_IjEEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.115"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.113"*, %"class.blink::WeakMember.813"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.813"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.115"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Element"*, %"class.blink::Element"** %34, align 8
  %36 = icmp eq %"class.blink::Element"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Element"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.115"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.115"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.115"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.115"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.115"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Element"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Element"*, %"class.blink::Element"** %67, align 8
  %69 = icmp eq %"class.blink::Element"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Element"* %63, inttoptr (i64 -1 to %"class.blink::Element"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.115"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Element"*, %"class.blink::Element"** %79, align 8
  %81 = icmp eq %"class.blink::Element"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.115"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.115"*, i8 } undef, %"struct.WTF::KeyValuePair.115"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.115"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.107"* @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6LookupERKS2_(%"class.WTF::HashTable.105"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.107"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #11
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.107"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.107"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"struct.WTF::KeyValuePair.107"* [ null, %2 ], [ null, %23 ], [ %50, %49 ], [ null, %59 ]
  ret %"struct.WTF::KeyValuePair.107"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } @_ZNK3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable.105"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.107"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #11
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.107"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.107"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %70, label %49

68:                                               ; preds = %49
  %69 = icmp eq %"struct.WTF::KeyValuePair.107"* %50, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %59, %68, %23, %2
  %71 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %71, i64 %74
  br label %81

76:                                               ; preds = %68
  %77 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %78 = load i32, i32* %7, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %77, i64 %79
  br label %81

81:                                               ; preds = %70, %76
  %82 = phi %"struct.WTF::KeyValuePair.107"* [ %50, %76 ], [ %75, %70 ]
  %83 = phi %"struct.WTF::KeyValuePair.107"* [ %80, %76 ], [ %75, %70 ]
  %84 = insertvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } undef, %"struct.WTF::KeyValuePair.107"* %82, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %84, %"struct.WTF::KeyValuePair.107"* %83, 1
  ret { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %85
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_(%"class.WTF::Vector.142"*, %"class.blink::WeakMember.813"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.142"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.85", %"class.blink::Member.85"* %16, i64 %18
  %20 = bitcast %"class.blink::WeakMember.813"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.85"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.142"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !25

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %8, align 8
  %10 = icmp eq %"class.blink::Member.85"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.142"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %8, align 8
  %26 = icmp eq %"class.blink::Member.85"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.85"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.142"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.142"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.142"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.142"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.85"*, %"class.blink::Member.85"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.85"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.85"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !25

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.142"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.142"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.142"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.142", %"class.WTF::Vector.142"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS2_SD_SE_SF_SJ_SH_SK_EE(%"class.WTF::HashTable.105"*, %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"*) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %5, i64 %8
  %10 = icmp eq %"struct.WTF::KeyValuePair.107"* %9, %1
  br i1 %10, label %56, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %1, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %12) #11
  %13 = bitcast %"struct.WTF::KeyValuePair.107"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %13, align 8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %1, i64 0, i32 1
  %15 = bitcast %"class.blink::Member.108"* %14 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  %19 = and i32 %18, 2147483647
  %20 = and i32 %17, -2147483648
  %21 = or i32 %19, %20
  store i32 %21, i32* %16, align 8
  %22 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, -1
  store i32 %24, i32* %22, align 4
  %25 = mul i32 %24, 6
  %26 = load i32, i32* %6, align 8
  %27 = icmp ult i32 %25, %26
  %28 = icmp ugt i32 %26, 8
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %56

30:                                               ; preds = %11
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #11
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 6
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 16
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %56, label %48

48:                                               ; preds = %37, %44
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 13
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i32, i32* %6, align 8
  %54 = lshr i32 %53, 1
  %55 = tail call %"struct.WTF::KeyValuePair.107"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE6RehashEjPSD_(%"class.WTF::HashTable.105"* %0, i32 %54, %"struct.WTF::KeyValuePair.107"* null) #11
  br label %56

56:                                               ; preds = %44, %11, %52, %48, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_17HeapLinkedHashSetINS1_10WeakMemberINS1_7ElementEEENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS9_IS2_EENS9_ISC_EEEESH_NS1_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable.105"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.107"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #11
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair.107"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.107"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %70, label %49

68:                                               ; preds = %49
  %69 = icmp eq %"struct.WTF::KeyValuePair.107"* %50, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %59, %68, %23, %2
  %71 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.105", %"class.WTF::HashTable.105"* %0, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %71, i64 %74
  br label %81

76:                                               ; preds = %68
  %77 = load %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"** %3, align 8
  %78 = load i32, i32* %7, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.107", %"struct.WTF::KeyValuePair.107"* %77, i64 %79
  br label %81

81:                                               ; preds = %70, %76
  %82 = phi %"struct.WTF::KeyValuePair.107"* [ %50, %76 ], [ %75, %70 ]
  %83 = phi %"struct.WTF::KeyValuePair.107"* [ %80, %76 ], [ %75, %70 ]
  %84 = insertvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } undef, %"struct.WTF::KeyValuePair.107"* %82, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %84, %"struct.WTF::KeyValuePair.107"* %83, 1
  ret { %"struct.WTF::KeyValuePair.107"*, %"struct.WTF::KeyValuePair.107"* } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::WeakMember.813"*, i8 } @_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE18InsertOrMoveBeforeIRNS1_6MemberIS3_EEEENS8_9AddResultENS8_15IteratorWrapperINS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEEEEOT_NS8_8MoveTypeE(%"class.WTF::LinkedHashSet"*, %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* byval(%"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper") align 8, %"class.blink::Member.85"* dereferenceable(8), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 14
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %19 = tail call { %"struct.WTF::KeyValuePair.115"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS1_6MemberIS3_EERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.113"* %18, %"class.blink::Member.85"* dereferenceable(8) %2, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #11
  %20 = extractvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %19, 0
  %21 = extractvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %19, 1
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  br i1 %23, label %41, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %29 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %28, align 8
  %30 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRNS1_6MemberIS3_EEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %27, %"class.WTF::VectorBackedLinkedList"* %29, %"class.blink::Member.85"* dereferenceable(8) %2)
  %31 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 0
  %32 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %30, 1
  %33 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %32, i64 0, i32 0
  %35 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %34, i32 0) #11
  %36 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %35 to i64
  %37 = sub i64 %33, %36
  %38 = lshr exact i64 %37, 4
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %20, i64 0, i32 1
  store i32 %39, i32* %40, align 8
  br label %54

41:                                               ; preds = %11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %20, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %24, i64 0, i32 0
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %44, i32 %43) #11
  %46 = icmp eq i32 %3, 1
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<blink::WeakMember<blink::Element>, WTF::HashTraits<blink::WeakMember<blink::Element> >, blink::HeapAllocator>::IteratorWrapper"* %1, i64 0, i32 0, i32 1
  %51 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %50, align 8
  %52 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6MoveToENS_35VectorBackedLinkedListConstIteratorIS6_EES8_(%"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %45, %"class.WTF::VectorBackedLinkedList"* %24, %"class.WTF::VectorBackedLinkedListNode"* %49, %"class.WTF::VectorBackedLinkedList"* %51)
  %53 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %52, 0
  br label %54

54:                                               ; preds = %41, %47, %25
  %55 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %53, %47 ], [ %31, %25 ], [ %45, %41 ]
  %56 = phi i8 [ 0, %47 ], [ 1, %25 ], [ 0, %41 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %55, i64 0, i32 2
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #11
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !3

62:                                               ; preds = %54
  %63 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #11
  br label %64

64:                                               ; preds = %54, %62
  %65 = phi i8* [ %63, %62 ], [ %60, %54 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = insertvalue { %"class.blink::WeakMember.813"*, i8 } undef, %"class.blink::WeakMember.813"* %57, 0
  %72 = insertvalue { %"class.blink::WeakMember.813"*, i8 } %71, i8 %56, 1
  ret { %"class.blink::WeakMember.813"*, i8 } %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListIN5blink10WeakMemberINS1_7ElementEEENS1_13HeapAllocatorEE6insertIRNS1_6MemberIS3_EEEENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %"class.blink::Member.85"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %7, i32 0) #11
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %12) #11
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = bitcast %"class.blink::Member.85"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %29 = bitcast %"class.blink::WeakMember.813"* %28 to i64*
  store i64 %25, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %22, %31
  br i1 %32, label %56, label %33, !prof !3

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %34, align 8
  %36 = zext i32 %22 to i64
  %37 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36
  %38 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %37 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %35, i64 %36, i32 2
  %42 = load i64, i64* %29, align 8
  %43 = bitcast %"class.blink::WeakMember.813"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %33
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #11
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !3

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46, %33
  %54 = load i32, i32* %21, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %21, align 4
  br label %57

56:                                               ; preds = %20
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #11
  br label %57

57:                                               ; preds = %53, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %75

58:                                               ; preds = %4
  %59 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %18) #11
  %60 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %17, align 8
  %62 = bitcast %"class.blink::Member.85"* %3 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %59 to i64*
  %65 = shl i64 %10, 28
  %66 = zext i32 %16 to i64
  %67 = or i64 %65, %66
  store i64 %67, i64* %64, align 8
  %68 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %59, i64 0, i32 2
  %69 = bitcast %"class.blink::WeakMember.813"* %68 to i64*
  store atomic i64 %63, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %58
  %73 = inttoptr i64 %63 to i8*
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #11
  br label %75

75:                                               ; preds = %72, %58, %57
  %76 = phi i32 [ %22, %57 ], [ %18, %58 ], [ %18, %72 ]
  %77 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %16) #11
  %78 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %77, i64 0, i32 1
  store i32 %76, i32* %78, align 4
  %79 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %12) #11
  %80 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %79, i64 0, i32 0
  store i32 %76, i32* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink10WeakMemberINS2_7ElementEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.116"* %13, i32 %76) #11
  %85 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %84, 0
  %86 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %85, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.115"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS1_6MemberIS3_EERKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.113"*, %"class.blink::Member.85"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.115"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* null)
  %9 = load %"struct.WTF::KeyValuePair.115"*, %"struct.WTF::KeyValuePair.115"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.115"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.85"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = icmp eq %"class.blink::Element"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Element"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.115"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.115"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Element"* %59, %43
  br i1 %64, label %180, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Element"* %59, inttoptr (i64 -1 to %"class.blink::Element"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.115"* %60, %"struct.WTF::KeyValuePair.115"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Element"*, %"class.blink::Element"** %73, align 8
  %75 = icmp eq %"class.blink::Element"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.115"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.115"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.115"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.115"* %89 to i64*
  store atomic i64 %88, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = inttoptr i64 %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %87, %93
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.115", %"struct.WTF::KeyValuePair.115"* %89, i64 0, i32 1
  %98 = load i32, i32* %2, align 4
  store i32 %98, i32* %97, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %134, label %101

101:                                              ; preds = %96
  %102 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %103 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %102, i64 0, i32 1
  %104 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %103) #11
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %108, !prof !3

106:                                              ; preds = %101
  %107 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %103, i8* %107) #11
  br label %108

108:                                              ; preds = %106, %101
  %109 = phi i8* [ %107, %106 ], [ %104, %101 ]
  %110 = bitcast i8* %109 to %"class.blink::ThreadState"**
  %111 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 13
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %111, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %119, align 8
  %121 = load atomic i64, i64* %90 monotonic, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %120, i64 0, i32 0, i32 0
  %125 = inttoptr i64 %121 to i8*
  %126 = bitcast %"class.blink::MarkingVisitor"* %120 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %127, i64 5
  %129 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %128, align 8
  tail call void %129(%"class.blink::Visitor"* %124, i8* nonnull %125, i8* nonnull %125, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #11
  %130 = load i64, i64* %116, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i64 [ %118, %115 ], [ %130, %123 ]
  %133 = add i64 %132, -1
  store i64 %133, i64* %116, align 8
  br label %134

134:                                              ; preds = %96, %108, %131
  %135 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %"class.WTF::HashTable.113", %"class.WTF::HashTable.113"* %0, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, %137
  %141 = shl i32 %140, 1
  %142 = load i32, i32* %12, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %146, label %144

144:                                              ; preds = %134
  %145 = tail call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* %89)
  br label %180

146:                                              ; preds = %134
  %147 = mul i32 %137, 6
  %148 = icmp ult i32 %147, %142
  %149 = icmp ugt i32 %142, 8
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %180

151:                                              ; preds = %146
  %152 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %153 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %152, i64 0, i32 1
  %154 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %153) #11
  %155 = icmp eq i8* %154, null
  br i1 %155, label %156, label %158, !prof !3

156:                                              ; preds = %151
  %157 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %153, i8* %157) #11
  br label %158

158:                                              ; preds = %156, %151
  %159 = phi i8* [ %157, %156 ], [ %154, %151 ]
  %160 = bitcast i8* %159 to %"class.blink::ThreadState"**
  %161 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 6
  %163 = load i8, i8* %162, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 16
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %180, label %169

169:                                              ; preds = %158, %165
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %161, i64 0, i32 13
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %169
  %174 = load i32, i32* %12, align 8
  %175 = lshr i32 %174, 1
  %176 = zext i32 %175 to i64
  %177 = tail call %"class.blink::HeapHashTableBacking.944"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_7ElementEEENS2_12KeyValuePairIS6_jEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSD_IjEEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %176) #11
  %178 = bitcast %"class.blink::HeapHashTableBacking.944"* %177 to %"struct.WTF::KeyValuePair.115"*
  %179 = tail call %"struct.WTF::KeyValuePair.115"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_7ElementEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.113"* %0, %"struct.WTF::KeyValuePair.115"* %178, i32 %175, %"struct.WTF::KeyValuePair.115"* %89) #11
  br label %180

180:                                              ; preds = %58, %165, %146, %144, %173, %169
  %181 = phi i8 [ 1, %169 ], [ 1, %173 ], [ 1, %144 ], [ 1, %146 ], [ 1, %165 ], [ 0, %58 ]
  %182 = phi %"struct.WTF::KeyValuePair.115"* [ %89, %169 ], [ %179, %173 ], [ %145, %144 ], [ %89, %146 ], [ %89, %165 ], [ %60, %58 ]
  %183 = insertvalue { %"struct.WTF::KeyValuePair.115"*, i8 } undef, %"struct.WTF::KeyValuePair.115"* %182, 0
  %184 = insertvalue { %"struct.WTF::KeyValuePair.115"*, i8 } %183, i8 %181, 1
  ret { %"struct.WTF::KeyValuePair.115"*, i8 } %184
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!9 = distinct !{!9, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!22 = !{!23, !20}
!23 = distinct !{!23, !24, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!24 = distinct !{!24, !"_ZNK3WTF13LinkedHashSetIN5blink10WeakMemberINS1_7ElementEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!25 = !{!"branch_weights", i32 2000, i32 1}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS_12AtomicStringEEEE10EmptyValueEv: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS_12AtomicStringEEEE10EmptyValueEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv: argument 0"}
!40 = distinct !{!40, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_17HeapLinkedHashSetINS2_10WeakMemberINS2_7ElementEEENS1_IS9_EEEEEEEEE10EmptyValueEv"}
