; ModuleID = '../../third_party/libjpeg_turbo/jdmarker.c'
source_filename = "../../third_party/libjpeg_turbo/jdmarker.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, {}*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32, i32, [10 x i32], [10 x i32], i32, i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }
%struct.my_marker_reader = type { %struct.jpeg_marker_reader, i32 (%struct.jpeg_decompress_struct*)*, [16 x i32 (%struct.jpeg_decompress_struct*)*], i32, [16 x i32], %struct.jpeg_marker_struct*, i32 }

@jpeg_natural_order = external local_unnamed_addr constant [0 x i32], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %6, i64 0, i32 5
  store i32 121, i32* %7, align 8
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0
  store i32 %4, i32* %9, align 4
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 1
  store i32 %1, i32* %11, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 1
  %14 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %13, align 8
  %15 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %14(%struct.jpeg_common_struct* %15, i32 -1) #4
  %16 = add nsw i32 %1, 1
  %17 = and i32 %16, 7
  %18 = or i32 %17, 208
  %19 = add nsw i32 %1, 2
  %20 = and i32 %19, 7
  %21 = or i32 %20, 208
  %22 = add i32 %1, 7
  %23 = and i32 %22, 7
  %24 = or i32 %23, 208
  %25 = add i32 %1, 6
  %26 = and i32 %25, 7
  %27 = or i32 %26, 208
  br label %28

28:                                               ; preds = %58, %2
  %29 = phi i32 [ %59, %58 ], [ %4, %2 ]
  %30 = icmp slt i32 %29, 192
  %31 = and i32 %29, -8
  %32 = icmp ne i32 %31, 208
  %33 = icmp eq i32 %29, %18
  %34 = or i1 %32, %33
  %35 = icmp eq i32 %29, %21
  %36 = or i1 %34, %35
  %37 = icmp eq i32 %29, %24
  %38 = icmp eq i32 %29, %27
  %39 = select i1 %38, i32 2, i32 1
  br label %40

40:                                               ; preds = %28, %40
  %41 = or i1 %30, %36
  %42 = select i1 %30, i32 2, i32 3
  %43 = select i1 %37, i32 2, i32 %39
  %44 = select i1 %41, i32 %42, i32 %43
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i64 0, i32 5
  store i32 97, i32* %46, align 8
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i64 0, i32 6, i32 0, i64 0
  store i32 %29, i32* %48, align 4
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 6, i32 0, i64 1
  store i32 %44, i32* %50, align 4
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 1
  %53 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %52, align 8
  tail call void %53(%struct.jpeg_common_struct* %15, i32 4) #4
  switch i32 %44, label %40 [
    i32 1, label %54
    i32 2, label %55
    i32 3, label %60
  ]

54:                                               ; preds = %40
  store i32 0, i32* %3, align 4
  br label %60

55:                                               ; preds = %40
  %56 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* %0)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = load i32, i32* %3, align 4
  br label %28

60:                                               ; preds = %40, %55, %54
  %61 = phi i32 [ 1, %54 ], [ 1, %40 ], [ 0, %55 ]
  ret i32 %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @next_marker(%struct.jpeg_decompress_struct*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 3
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  br label %10

10:                                               ; preds = %76, %1
  %11 = phi i8* [ %5, %1 ], [ %68, %76 ]
  %12 = phi i64 [ %7, %1 ], [ %67, %76 ]
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %8, align 8
  %16 = tail call i32 %15(%struct.jpeg_decompress_struct* %0) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %100, label %18

18:                                               ; preds = %14
  %19 = load i8*, i8** %4, align 8
  %20 = load i64, i64* %6, align 8
  br label %21

21:                                               ; preds = %18, %10
  %22 = phi i8* [ %19, %18 ], [ %11, %10 ]
  %23 = phi i64 [ %20, %18 ], [ %12, %10 ]
  %24 = load i8, i8* %22, align 1
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  %26 = add i64 %23, -1
  %27 = icmp eq i8 %24, -1
  br i1 %27, label %50, label %28

28:                                               ; preds = %21, %43
  %29 = phi i64 [ %48, %43 ], [ %26, %21 ]
  %30 = phi i8* [ %47, %43 ], [ %25, %21 ]
  %31 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %32 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %31, i64 0, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 4
  store i8* %30, i8** %4, align 8
  store i64 %29, i64* %6, align 8
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %28
  %37 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %8, align 8
  %38 = tail call i32 %37(%struct.jpeg_decompress_struct* %0) #4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %100, label %40

40:                                               ; preds = %36
  %41 = load i8*, i8** %4, align 8
  %42 = load i64, i64* %6, align 8
  br label %43

43:                                               ; preds = %40, %28
  %44 = phi i8* [ %41, %40 ], [ %30, %28 ]
  %45 = phi i64 [ %42, %40 ], [ %29, %28 ]
  %46 = load i8, i8* %44, align 1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = add i64 %45, -1
  %49 = icmp eq i8 %46, -1
  br i1 %49, label %50, label %28

50:                                               ; preds = %43, %21
  %51 = phi i8* [ %25, %21 ], [ %47, %43 ]
  %52 = phi i64 [ %26, %21 ], [ %48, %43 ]
  br label %53

53:                                               ; preds = %50, %64
  %54 = phi i8* [ %68, %64 ], [ %51, %50 ]
  %55 = phi i64 [ %67, %64 ], [ %52, %50 ]
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %8, align 8
  %59 = tail call i32 %58(%struct.jpeg_decompress_struct* %0) #4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %100, label %61

61:                                               ; preds = %57
  %62 = load i8*, i8** %4, align 8
  %63 = load i64, i64* %6, align 8
  br label %64

64:                                               ; preds = %61, %53
  %65 = phi i8* [ %62, %61 ], [ %54, %53 ]
  %66 = phi i64 [ %63, %61 ], [ %55, %53 ]
  %67 = add i64 %66, -1
  %68 = getelementptr inbounds i8, i8* %65, i64 1
  %69 = load i8, i8* %65, align 1
  %70 = icmp eq i8 %69, -1
  br i1 %70, label %53, label %71

71:                                               ; preds = %64
  %72 = icmp eq i8 %69, 0
  %73 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %74 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %73, i64 0, i32 6
  %75 = load i32, i32* %74, align 4
  br i1 %72, label %76, label %78

76:                                               ; preds = %71
  %77 = add i32 %75, 2
  store i32 %77, i32* %74, align 4
  store i8* %68, i8** %4, align 8
  store i64 %67, i64* %6, align 8
  br label %10

78:                                               ; preds = %71
  %79 = zext i8 %69 to i32
  %80 = icmp eq i32 %75, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 5
  store i32 116, i32* %84, align 8
  %85 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %86 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %85, i64 0, i32 6
  %87 = load i32, i32* %86, align 4
  %88 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %89 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %88, i64 0, i32 6, i32 0, i64 0
  store i32 %87, i32* %89, align 4
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 6, i32 0, i64 1
  store i32 %79, i32* %91, align 4
  %92 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %93 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %92, i64 0, i32 1
  %94 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %93, align 8
  %95 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %94(%struct.jpeg_common_struct* %95, i32 -1) #4
  %96 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %97 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %96, i64 0, i32 6
  store i32 0, i32* %97, align 4
  br label %98

98:                                               ; preds = %78, %81
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  store i32 %79, i32* %99, align 4
  store i8* %68, i8** %4, align 8
  store i64 %67, i64* %6, align 8
  br label %100

100:                                              ; preds = %14, %36, %57, %98
  %101 = phi i32 [ 1, %98 ], [ 0, %57 ], [ 0, %36 ], [ 0, %14 ]
  ret i32 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @jinit_marker_reader(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %3, i64 0, i32 0
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %4, align 8
  %6 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* %5(%struct.jpeg_common_struct* %6, i32 0, i64 264) #4
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %9 = bitcast %struct.jpeg_marker_reader** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = bitcast i8* %7 to void (%struct.jpeg_decompress_struct*)**
  store void (%struct.jpeg_decompress_struct*)* @reset_marker_reader, void (%struct.jpeg_decompress_struct*)** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @read_markers, i32 (%struct.jpeg_decompress_struct*)* @read_restart_marker>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 40
  %14 = bitcast i8* %13 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 176
  %16 = getelementptr inbounds i8, i8* %7, i64 48
  %17 = getelementptr inbounds i8, i8* %7, i64 56
  %18 = bitcast i8* %17 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %18, align 8
  %19 = bitcast i8* %15 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 72
  %21 = getelementptr inbounds i8, i8* %7, i64 192
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = bitcast i8* %20 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 196
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %7, i64 88
  %27 = bitcast i8* %26 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 200
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %7, i64 96
  %31 = getelementptr inbounds i8, i8* %7, i64 204
  %32 = bitcast i8* %30 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 112
  %34 = bitcast i8* %33 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %34, align 8
  %35 = bitcast i8* %31 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %35, align 4
  %36 = getelementptr inbounds i8, i8* %7, i64 128
  %37 = getelementptr inbounds i8, i8* %7, i64 220
  %38 = bitcast i8* %36 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %38, align 8
  %39 = getelementptr inbounds i8, i8* %7, i64 144
  %40 = bitcast i8* %39 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %40, align 8
  %41 = bitcast i8* %37 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds i8, i8* %7, i64 236
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %7, i64 240
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  %46 = bitcast i8* %16 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @get_interesting_appn, i32 (%struct.jpeg_decompress_struct*)** %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 160
  %48 = bitcast i8* %47 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @get_interesting_appn, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %48, align 8
  %49 = bitcast %struct.jpeg_marker_reader** %8 to %struct.my_marker_reader**
  %50 = load %struct.my_marker_reader*, %struct.my_marker_reader** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %51, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 0, i32 3
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 0, i32 4
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 0, i32 6
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 5
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %57, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @reset_marker_reader(%struct.jpeg_decompress_struct* nocapture) #2 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %3 = bitcast %struct.jpeg_marker_reader** %2 to %struct.my_marker_reader**
  %4 = load %struct.my_marker_reader*, %struct.my_marker_reader** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %5, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 0, i32 4
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 0, i32 6
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 5
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @read_markers(%struct.jpeg_decompress_struct*) #0 {
  %2 = alloca [17 x i8], align 16
  %3 = alloca [256 x i8], align 16
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %8 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %9 = bitcast %struct.jpeg_marker_reader** %5 to %struct.my_marker_reader**
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 50
  %11 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 0
  %12 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 1
  %13 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 5
  %14 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 9
  %15 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 13
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %17 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 47, i64 0
  %18 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 48, i64 0
  %19 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 49, i64 0
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 10
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 59
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 51
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 52
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 53
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 54
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 55
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 56
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  %30 = load i32, i32* %4, align 4
  %31 = bitcast i8* %12 to <4 x i8>*
  %32 = bitcast i8* %13 to <4 x i8>*
  %33 = bitcast i8* %14 to <4 x i8>*
  %34 = bitcast i8* %15 to <4 x i8>*
  br label %35

35:                                               ; preds = %1088, %1
  %36 = phi i32 [ 0, %1088 ], [ %30, %1 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %98

38:                                               ; preds = %35
  %39 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %40 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %93

43:                                               ; preds = %38
  %44 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %45 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 0
  %46 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 3
  %51 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %50, align 8
  %52 = tail call i32 %51(%struct.jpeg_decompress_struct* %0) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %1089, label %54

54:                                               ; preds = %49
  %55 = load i64, i64* %46, align 8
  br label %56

56:                                               ; preds = %54, %43
  %57 = phi i64 [ %55, %54 ], [ %47, %43 ]
  %58 = load i8*, i8** %45, align 8
  %59 = add i64 %57, -1
  %60 = getelementptr inbounds i8, i8* %58, i64 1
  %61 = load i8, i8* %58, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i64 %59, 0
  br i1 %63, label %64, label %72

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %65, align 8
  %67 = tail call i32 %66(%struct.jpeg_decompress_struct* %0) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %1089, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %45, align 8
  %71 = load i64, i64* %46, align 8
  br label %72

72:                                               ; preds = %69, %56
  %73 = phi i8* [ %70, %69 ], [ %60, %56 ]
  %74 = phi i64 [ %71, %69 ], [ %59, %56 ]
  %75 = add i64 %74, -1
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  %77 = load i8, i8* %73, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp ne i8 %61, -1
  %80 = icmp ne i8 %77, -40
  %81 = or i1 %79, %80
  br i1 %81, label %82, label %92

82:                                               ; preds = %72
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 5
  store i32 53, i32* %84, align 8
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i64 0, i32 6, i32 0, i64 0
  store i32 %62, i32* %86, align 4
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 6, i32 0, i64 1
  store i32 %78, i32* %88, align 4
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 0
  %91 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %90, align 8
  tail call void %91(%struct.jpeg_common_struct* %8) #4
  br label %92

92:                                               ; preds = %72, %82
  store i32 %78, i32* %4, align 4
  store i8* %76, i8** %45, align 8
  store i64 %75, i64* %46, align 8
  br label %96

93:                                               ; preds = %38
  %94 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* %0)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %1089, label %96

96:                                               ; preds = %93, %92
  %97 = load i32, i32* %4, align 4
  br label %98

98:                                               ; preds = %96, %35
  %99 = phi i32 [ %97, %96 ], [ %36, %35 ]
  switch i32 %99, label %1079 [
    i32 216, label %100
    i32 192, label %120
    i32 193, label %120
    i32 194, label %123
    i32 201, label %126
    i32 202, label %129
    i32 195, label %132
    i32 197, label %132
    i32 198, label %132
    i32 199, label %132
    i32 200, label %132
    i32 203, label %132
    i32 205, label %132
    i32 206, label %132
    i32 207, label %132
    i32 218, label %141
    i32 217, label %414
    i32 204, label %420
    i32 196, label %475
    i32 219, label %691
    i32 221, label %914
    i32 224, label %1001
    i32 225, label %1001
    i32 226, label %1001
    i32 227, label %1001
    i32 228, label %1001
    i32 229, label %1001
    i32 230, label %1001
    i32 231, label %1001
    i32 232, label %1001
    i32 233, label %1001
    i32 234, label %1001
    i32 235, label %1001
    i32 236, label %1001
    i32 237, label %1001
    i32 238, label %1001
    i32 239, label %1001
    i32 254, label %1009
    i32 208, label %1015
    i32 209, label %1015
    i32 210, label %1015
    i32 211, label %1015
    i32 212, label %1015
    i32 213, label %1015
    i32 214, label %1015
    i32 215, label %1015
    i32 1, label %1015
    i32 220, label %1024
  ]

100:                                              ; preds = %98
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i64 0, i32 5
  store i32 102, i32* %102, align 8
  %103 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %104 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %103, i64 0, i32 1
  %105 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %104, align 8
  tail call void %105(%struct.jpeg_common_struct* %8, i32 1) #4
  %106 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %107 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %106, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %100
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i64 0, i32 5
  store i32 61, i32* %112, align 8
  %113 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %113, i64 0, i32 0
  %115 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %114, align 8
  tail call void %115(%struct.jpeg_common_struct* %8) #4
  %116 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  br label %117

117:                                              ; preds = %100, %110
  %118 = phi %struct.jpeg_marker_reader* [ %106, %100 ], [ %116, %110 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 16, i1 false) #4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 1, i64 16, i1 false) #4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 5, i64 16, i1 false) #4
  store i32 0, i32* %10, align 8
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 8
  store i32 0, i32* %22, align 4
  store i8 1, i8* %23, align 8
  store i8 1, i8* %24, align 1
  store i8 0, i8* %25, align 2
  store i16 1, i16* %26, align 4
  store i16 1, i16* %27, align 2
  store i32 0, i32* %28, align 8
  store i8 0, i8* %29, align 4
  %119 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %118, i64 0, i32 3
  store i32 1, i32* %119, align 8
  br label %1088

120:                                              ; preds = %98, %98
  %121 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* %0, i32 0, i32 0)
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %1089, label %1088

123:                                              ; preds = %98
  %124 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* %0, i32 1, i32 0)
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %1089, label %1088

126:                                              ; preds = %98
  %127 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* %0, i32 0, i32 1)
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %1089, label %1088

129:                                              ; preds = %98
  %130 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* %0, i32 1, i32 1)
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %1089, label %1088

132:                                              ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 5
  store i32 60, i32* %134, align 8
  %135 = load i32, i32* %4, align 4
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 6, i32 0, i64 0
  store i32 %135, i32* %137, align 4
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 0
  %140 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %139, align 8
  tail call void %140(%struct.jpeg_common_struct* %8) #4
  br label %1088

141:                                              ; preds = %98
  %142 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %143 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %148 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %147, i64 0, i32 4
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %141
  %152 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %152, i64 0, i32 5
  store i32 62, i32* %153, align 8
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 0
  %156 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %155, align 8
  tail call void %156(%struct.jpeg_common_struct* %8) #4
  br label %157

157:                                              ; preds = %151, %141
  %158 = icmp eq i64 %146, 0
  br i1 %158, label %159, label %167

159:                                              ; preds = %157
  %160 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %161 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %160, align 8
  %162 = tail call i32 %161(%struct.jpeg_decompress_struct* %0) #4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %1089, label %164

164:                                              ; preds = %159
  %165 = load i8*, i8** %143, align 8
  %166 = load i64, i64* %145, align 8
  br label %167

167:                                              ; preds = %164, %157
  %168 = phi i8* [ %165, %164 ], [ %144, %157 ]
  %169 = phi i64 [ %166, %164 ], [ %146, %157 ]
  %170 = add i64 %169, -1
  %171 = getelementptr inbounds i8, i8* %168, i64 1
  %172 = load i8, i8* %168, align 1
  %173 = zext i8 %172 to i64
  %174 = shl nuw nsw i64 %173, 8
  %175 = icmp eq i64 %170, 0
  br i1 %175, label %176, label %184

176:                                              ; preds = %167
  %177 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %178 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %177, align 8
  %179 = tail call i32 %178(%struct.jpeg_decompress_struct* %0) #4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %1089, label %181

181:                                              ; preds = %176
  %182 = load i8*, i8** %143, align 8
  %183 = load i64, i64* %145, align 8
  br label %184

184:                                              ; preds = %181, %167
  %185 = phi i8* [ %182, %181 ], [ %171, %167 ]
  %186 = phi i64 [ %183, %181 ], [ %170, %167 ]
  %187 = add i64 %186, -1
  %188 = getelementptr inbounds i8, i8* %185, i64 1
  %189 = load i8, i8* %185, align 1
  %190 = zext i8 %189 to i64
  %191 = or i64 %174, %190
  %192 = icmp eq i64 %187, 0
  br i1 %192, label %193, label %201

193:                                              ; preds = %184
  %194 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %195 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %194, align 8
  %196 = tail call i32 %195(%struct.jpeg_decompress_struct* %0) #4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %1089, label %198

198:                                              ; preds = %193
  %199 = load i8*, i8** %143, align 8
  %200 = load i64, i64* %145, align 8
  br label %201

201:                                              ; preds = %198, %184
  %202 = phi i8* [ %199, %198 ], [ %188, %184 ]
  %203 = phi i64 [ %200, %198 ], [ %187, %184 ]
  %204 = load i8, i8* %202, align 1
  %205 = zext i8 %204 to i32
  %206 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %206, i64 0, i32 5
  store i32 103, i32* %207, align 8
  %208 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %209 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %208, i64 0, i32 6, i32 0, i64 0
  store i32 %205, i32* %209, align 4
  %210 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %210, i64 0, i32 1
  %212 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %211, align 8
  tail call void %212(%struct.jpeg_common_struct* %8, i32 1) #4
  %213 = shl nuw nsw i32 %205, 1
  %214 = add nuw nsw i32 %213, 6
  %215 = zext i32 %214 to i64
  %216 = icmp ne i64 %191, %215
  %217 = add i8 %204, -1
  %218 = icmp ugt i8 %217, 3
  %219 = or i1 %218, %216
  br i1 %219, label %220, label %226

220:                                              ; preds = %201
  %221 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %222 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %221, i64 0, i32 5
  store i32 11, i32* %222, align 8
  %223 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %224 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %223, i64 0, i32 0
  %225 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %224, align 8
  tail call void %225(%struct.jpeg_common_struct* %8) #4
  br label %226

226:                                              ; preds = %220, %201
  %227 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 66
  store i32 %205, i32* %227, align 8
  %228 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 0
  %229 = bitcast %struct.jpeg_component_info** %228 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 32, i1 false) #4
  %230 = getelementptr inbounds i8, i8* %202, i64 1
  %231 = add i64 %203, -1
  %232 = icmp eq i8 %204, 0
  %233 = icmp eq i64 %231, 0
  br i1 %232, label %338, label %234

234:                                              ; preds = %226
  %235 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %236 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %237 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  %238 = zext i8 %204 to i64
  %239 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 0
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 1
  %241 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 2
  %242 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 3
  br label %243

243:                                              ; preds = %332, %234
  %244 = phi i64 [ 0, %234 ], [ %333, %332 ]
  %245 = phi i1 [ %233, %234 ], [ %336, %332 ]
  %246 = phi i64 [ %231, %234 ], [ %335, %332 ]
  %247 = phi i8* [ %230, %234 ], [ %334, %332 ]
  br i1 %245, label %248, label %255

248:                                              ; preds = %243
  %249 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %235, align 8
  %250 = tail call i32 %249(%struct.jpeg_decompress_struct* %0) #4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %1089, label %252

252:                                              ; preds = %248
  %253 = load i8*, i8** %143, align 8
  %254 = load i64, i64* %145, align 8
  br label %255

255:                                              ; preds = %252, %243
  %256 = phi i8* [ %253, %252 ], [ %247, %243 ]
  %257 = phi i64 [ %254, %252 ], [ %246, %243 ]
  %258 = add i64 %257, -1
  %259 = getelementptr inbounds i8, i8* %256, i64 1
  %260 = load i8, i8* %256, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i64 %258, 0
  br i1 %262, label %263, label %270

263:                                              ; preds = %255
  %264 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %235, align 8
  %265 = tail call i32 %264(%struct.jpeg_decompress_struct* %0) #4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %1089, label %267

267:                                              ; preds = %263
  %268 = load i8*, i8** %143, align 8
  %269 = load i64, i64* %145, align 8
  br label %270

270:                                              ; preds = %267, %255
  %271 = phi i8* [ %268, %267 ], [ %259, %255 ]
  %272 = phi i64 [ %269, %267 ], [ %258, %255 ]
  %273 = load i8, i8* %271, align 1
  %274 = zext i8 %273 to i32
  %275 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %236, align 8
  %276 = load i32, i32* %237, align 8
  %277 = icmp sgt i32 %276, 0
  br i1 %277, label %278, label %288

278:                                              ; preds = %270
  %279 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 0, i32 0
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, %261
  br i1 %281, label %282, label %285

282:                                              ; preds = %278
  %283 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %239, align 8
  %284 = icmp eq %struct.jpeg_component_info* %283, null
  br i1 %284, label %297, label %285

285:                                              ; preds = %282, %278
  %286 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 1
  %287 = icmp sgt i32 %276, 1
  br i1 %287, label %1091, label %288

288:                                              ; preds = %285, %1098, %1108, %1118, %270
  %289 = phi %struct.jpeg_component_info* [ %275, %270 ], [ %286, %285 ], [ %1099, %1098 ], [ %1109, %1108 ], [ %1119, %1118 ]
  %290 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %291 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %290, i64 0, i32 5
  store i32 5, i32* %291, align 8
  %292 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %293 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %292, i64 0, i32 6, i32 0, i64 0
  store i32 %261, i32* %293, align 4
  %294 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %295 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %294, i64 0, i32 0
  %296 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %295, align 8
  tail call void %296(%struct.jpeg_common_struct* %8) #4
  br label %297

297:                                              ; preds = %282, %1095, %1105, %1115, %288
  %298 = phi %struct.jpeg_component_info* [ %289, %288 ], [ %275, %282 ], [ %286, %1095 ], [ %1099, %1105 ], [ %1109, %1115 ]
  %299 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 %244
  store %struct.jpeg_component_info* %298, %struct.jpeg_component_info** %299, align 8
  %300 = lshr i32 %274, 4
  %301 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %298, i64 0, i32 5
  store i32 %300, i32* %301, align 4
  %302 = and i32 %274, 15
  %303 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %298, i64 0, i32 6
  store i32 %302, i32* %303, align 8
  %304 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %305 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 6, i32 0, i64 0
  store i32 %261, i32* %305, align 4
  %306 = load i32, i32* %301, align 4
  %307 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 6, i32 0, i64 1
  store i32 %306, i32* %307, align 4
  %308 = load i32, i32* %303, align 8
  %309 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 6, i32 0, i64 2
  store i32 %308, i32* %309, align 4
  %310 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %311 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %310, i64 0, i32 5
  store i32 104, i32* %311, align 8
  %312 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %313 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %312, i64 0, i32 1
  %314 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %313, align 8
  tail call void %314(%struct.jpeg_common_struct* %8, i32 1) #4
  %315 = icmp eq i64 %244, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %297, %329
  %317 = phi i64 [ %330, %329 ], [ 0, %297 ]
  %318 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 %317
  %319 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %318, align 8
  %320 = icmp eq %struct.jpeg_component_info* %319, %298
  br i1 %320, label %321, label %329

321:                                              ; preds = %316
  %322 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %323 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %322, i64 0, i32 5
  store i32 5, i32* %323, align 8
  %324 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %325 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %324, i64 0, i32 6, i32 0, i64 0
  store i32 %261, i32* %325, align 4
  %326 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %327 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %326, i64 0, i32 0
  %328 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %327, align 8
  tail call void %328(%struct.jpeg_common_struct* %8) #4
  br label %329

329:                                              ; preds = %321, %316
  %330 = add nuw nsw i64 %317, 1
  %331 = icmp eq i64 %330, %244
  br i1 %331, label %332, label %316

332:                                              ; preds = %329, %297
  %333 = add nuw nsw i64 %244, 1
  %334 = getelementptr inbounds i8, i8* %271, i64 1
  %335 = add i64 %272, -1
  %336 = icmp eq i64 %335, 0
  %337 = icmp eq i64 %333, %238
  br i1 %337, label %338, label %243

338:                                              ; preds = %332, %226
  %339 = phi i8* [ %230, %226 ], [ %334, %332 ]
  %340 = phi i64 [ %231, %226 ], [ %335, %332 ]
  %341 = phi i1 [ %233, %226 ], [ %336, %332 ]
  br i1 %341, label %342, label %350

342:                                              ; preds = %338
  %343 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %344 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %343, align 8
  %345 = tail call i32 %344(%struct.jpeg_decompress_struct* %0) #4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %1089, label %347

347:                                              ; preds = %342
  %348 = load i8*, i8** %143, align 8
  %349 = load i64, i64* %145, align 8
  br label %350

350:                                              ; preds = %347, %338
  %351 = phi i8* [ %348, %347 ], [ %339, %338 ]
  %352 = phi i64 [ %349, %347 ], [ %340, %338 ]
  %353 = add i64 %352, -1
  %354 = getelementptr inbounds i8, i8* %351, i64 1
  %355 = load i8, i8* %351, align 1
  %356 = zext i8 %355 to i32
  %357 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 72
  store i32 %356, i32* %357, align 4
  %358 = icmp eq i64 %353, 0
  br i1 %358, label %359, label %367

359:                                              ; preds = %350
  %360 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %361 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %360, align 8
  %362 = tail call i32 %361(%struct.jpeg_decompress_struct* %0) #4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %1089, label %364

364:                                              ; preds = %359
  %365 = load i8*, i8** %143, align 8
  %366 = load i64, i64* %145, align 8
  br label %367

367:                                              ; preds = %364, %350
  %368 = phi i8* [ %365, %364 ], [ %354, %350 ]
  %369 = phi i64 [ %366, %364 ], [ %353, %350 ]
  %370 = add i64 %369, -1
  %371 = getelementptr inbounds i8, i8* %368, i64 1
  %372 = load i8, i8* %368, align 1
  %373 = zext i8 %372 to i32
  %374 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 73
  store i32 %373, i32* %374, align 8
  %375 = icmp eq i64 %370, 0
  br i1 %375, label %376, label %384

376:                                              ; preds = %367
  %377 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %378 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %377, align 8
  %379 = tail call i32 %378(%struct.jpeg_decompress_struct* %0) #4
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %1089, label %381

381:                                              ; preds = %376
  %382 = load i8*, i8** %143, align 8
  %383 = load i64, i64* %145, align 8
  br label %384

384:                                              ; preds = %381, %367
  %385 = phi i8* [ %382, %381 ], [ %371, %367 ]
  %386 = phi i64 [ %383, %381 ], [ %370, %367 ]
  %387 = add i64 %386, -1
  %388 = getelementptr inbounds i8, i8* %385, i64 1
  %389 = load i8, i8* %385, align 1
  %390 = zext i8 %389 to i32
  %391 = lshr i32 %390, 4
  %392 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 74
  store i32 %391, i32* %392, align 4
  %393 = and i32 %390, 15
  %394 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 75
  store i32 %393, i32* %394, align 8
  %395 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %396 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 0
  %397 = load i32, i32* %357, align 4
  store i32 %397, i32* %396, align 4
  %398 = load i32, i32* %374, align 8
  %399 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 1
  store i32 %398, i32* %399, align 4
  %400 = load i32, i32* %392, align 4
  %401 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 2
  store i32 %400, i32* %401, align 4
  %402 = load i32, i32* %394, align 8
  %403 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 3
  store i32 %402, i32* %403, align 4
  %404 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %405 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %404, i64 0, i32 5
  store i32 105, i32* %405, align 8
  %406 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %407 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %406, i64 0, i32 1
  %408 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %407, align 8
  tail call void %408(%struct.jpeg_common_struct* %8, i32 1) #4
  %409 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %410 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %409, i64 0, i32 5
  store i32 0, i32* %410, align 8
  %411 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  %412 = load i32, i32* %411, align 4
  %413 = add nsw i32 %412, 1
  store i32 %413, i32* %411, align 4
  store i8* %388, i8** %143, align 8
  store i64 %387, i64* %145, align 8
  store i32 0, i32* %4, align 4
  br label %1089

414:                                              ; preds = %98
  %415 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %416 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %415, i64 0, i32 5
  store i32 85, i32* %416, align 8
  %417 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %418 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %417, i64 0, i32 1
  %419 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %418, align 8
  tail call void %419(%struct.jpeg_common_struct* %8, i32 1) #4
  store i32 0, i32* %4, align 4
  br label %1089

420:                                              ; preds = %98
  %421 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %422 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 0
  %423 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 1
  %424 = load i64, i64* %423, align 8
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %433

426:                                              ; preds = %420
  %427 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 3
  %428 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %427, align 8
  %429 = tail call i32 %428(%struct.jpeg_decompress_struct* %0) #4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %1089, label %431

431:                                              ; preds = %426
  %432 = load i64, i64* %423, align 8
  br label %433

433:                                              ; preds = %431, %420
  %434 = phi i64 [ %432, %431 ], [ %424, %420 ]
  %435 = load i8*, i8** %422, align 8
  %436 = add i64 %434, -1
  %437 = getelementptr inbounds i8, i8* %435, i64 1
  %438 = load i8, i8* %435, align 1
  %439 = zext i8 %438 to i64
  %440 = shl nuw nsw i64 %439, 8
  %441 = icmp eq i64 %436, 0
  br i1 %441, label %442, label %450

442:                                              ; preds = %433
  %443 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 3
  %444 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %443, align 8
  %445 = tail call i32 %444(%struct.jpeg_decompress_struct* %0) #4
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %1089, label %447

447:                                              ; preds = %442
  %448 = load i8*, i8** %422, align 8
  %449 = load i64, i64* %423, align 8
  br label %450

450:                                              ; preds = %447, %433
  %451 = phi i8* [ %448, %447 ], [ %437, %433 ]
  %452 = phi i64 [ %449, %447 ], [ %436, %433 ]
  %453 = add i64 %452, -1
  %454 = getelementptr inbounds i8, i8* %451, i64 1
  %455 = load i8, i8* %451, align 1
  %456 = zext i8 %455 to i64
  %457 = or i64 %440, %456
  %458 = add nsw i64 %457, -2
  %459 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %460 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %459, i64 0, i32 5
  store i32 91, i32* %460, align 8
  %461 = load i32, i32* %4, align 4
  %462 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %463 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %462, i64 0, i32 6, i32 0, i64 0
  store i32 %461, i32* %463, align 4
  %464 = trunc i64 %458 to i32
  %465 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %466 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %465, i64 0, i32 6, i32 0, i64 1
  store i32 %464, i32* %466, align 4
  %467 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %468 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %467, i64 0, i32 1
  %469 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %468, align 8
  tail call void %469(%struct.jpeg_common_struct* %8, i32 1) #4
  store i8* %454, i8** %422, align 8
  store i64 %453, i64* %423, align 8
  %470 = icmp sgt i64 %458, 0
  br i1 %470, label %471, label %1088

471:                                              ; preds = %450
  %472 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %473 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %472, i64 0, i32 4
  %474 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %473, align 8
  tail call void %474(%struct.jpeg_decompress_struct* %0, i64 %458) #4
  br label %1088

475:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %11) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 17, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %16) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 256, i1 false) #4
  %476 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %477 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 0
  %478 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 1
  %479 = load i64, i64* %478, align 8
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %488

481:                                              ; preds = %475
  %482 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 3
  %483 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %482, align 8
  %484 = tail call i32 %483(%struct.jpeg_decompress_struct* %0) #4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %689, label %486

486:                                              ; preds = %481
  %487 = load i64, i64* %478, align 8
  br label %488

488:                                              ; preds = %486, %475
  %489 = phi i64 [ %487, %486 ], [ %479, %475 ]
  %490 = load i8*, i8** %477, align 8
  %491 = add i64 %489, -1
  %492 = getelementptr inbounds i8, i8* %490, i64 1
  %493 = load i8, i8* %490, align 1
  %494 = zext i8 %493 to i64
  %495 = shl nuw nsw i64 %494, 8
  %496 = icmp eq i64 %491, 0
  br i1 %496, label %497, label %505

497:                                              ; preds = %488
  %498 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 3
  %499 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %498, align 8
  %500 = tail call i32 %499(%struct.jpeg_decompress_struct* %0) #4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %689, label %502

502:                                              ; preds = %497
  %503 = load i8*, i8** %477, align 8
  %504 = load i64, i64* %478, align 8
  br label %505

505:                                              ; preds = %502, %488
  %506 = phi i8* [ %503, %502 ], [ %492, %488 ]
  %507 = phi i64 [ %504, %502 ], [ %491, %488 ]
  %508 = add i64 %507, -1
  %509 = getelementptr inbounds i8, i8* %506, i64 1
  %510 = load i8, i8* %506, align 1
  %511 = zext i8 %510 to i64
  %512 = or i64 %495, %511
  %513 = add nsw i64 %512, -2
  %514 = icmp sgt i64 %513, 16
  br i1 %514, label %515, label %678

515:                                              ; preds = %505
  %516 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 3
  br label %517

517:                                              ; preds = %672, %515
  %518 = phi i64 [ %513, %515 ], [ %636, %672 ]
  %519 = phi i64 [ %508, %515 ], [ %632, %672 ]
  %520 = phi i8* [ %509, %515 ], [ %631, %672 ]
  %521 = icmp eq i64 %519, 0
  br i1 %521, label %522, label %529

522:                                              ; preds = %517
  %523 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %516, align 8
  %524 = tail call i32 %523(%struct.jpeg_decompress_struct* %0) #4
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %689, label %526

526:                                              ; preds = %522
  %527 = load i8*, i8** %477, align 8
  %528 = load i64, i64* %478, align 8
  br label %529

529:                                              ; preds = %526, %517
  %530 = phi i8* [ %527, %526 ], [ %520, %517 ]
  %531 = phi i64 [ %528, %526 ], [ %519, %517 ]
  %532 = load i8, i8* %530, align 1
  %533 = zext i8 %532 to i32
  %534 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %535 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %534, i64 0, i32 5
  store i32 80, i32* %535, align 8
  %536 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %537 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %536, i64 0, i32 6, i32 0, i64 0
  store i32 %533, i32* %537, align 4
  %538 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %539 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %538, i64 0, i32 1
  %540 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %539, align 8
  tail call void %540(%struct.jpeg_common_struct* %8, i32 1) #4
  store i8 0, i8* %11, align 16
  %541 = getelementptr inbounds i8, i8* %530, i64 1
  %542 = add i64 %531, -1
  br label %543

543:                                              ; preds = %556, %529
  %544 = phi i64 [ 1, %529 ], [ %563, %556 ]
  %545 = phi i64 [ %542, %529 ], [ %565, %556 ]
  %546 = phi i8* [ %541, %529 ], [ %564, %556 ]
  %547 = phi i32 [ 0, %529 ], [ %562, %556 ]
  %548 = icmp eq i64 %545, 0
  br i1 %548, label %549, label %556

549:                                              ; preds = %543
  %550 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %516, align 8
  %551 = tail call i32 %550(%struct.jpeg_decompress_struct* %0) #4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %689, label %553

553:                                              ; preds = %549
  %554 = load i8*, i8** %477, align 8
  %555 = load i64, i64* %478, align 8
  br label %556

556:                                              ; preds = %553, %543
  %557 = phi i8* [ %554, %553 ], [ %546, %543 ]
  %558 = phi i64 [ %555, %553 ], [ %545, %543 ]
  %559 = load i8, i8* %557, align 1
  %560 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 %544
  store i8 %559, i8* %560, align 1
  %561 = zext i8 %559 to i32
  %562 = add nuw nsw i32 %547, %561
  %563 = add nuw nsw i64 %544, 1
  %564 = getelementptr inbounds i8, i8* %557, i64 1
  %565 = add i64 %558, -1
  %566 = icmp eq i64 %563, 17
  br i1 %566, label %567, label %543

567:                                              ; preds = %556
  %568 = add nsw i64 %518, -17
  %569 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %570 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %569, i64 0, i32 6, i32 0, i64 0
  %571 = load <4 x i8>, <4 x i8>* %31, align 1
  %572 = zext <4 x i8> %571 to <4 x i32>
  %573 = bitcast i32* %570 to <4 x i32>*
  store <4 x i32> %572, <4 x i32>* %573, align 4
  %574 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %569, i64 0, i32 6, i32 0, i64 4
  %575 = load <4 x i8>, <4 x i8>* %32, align 1
  %576 = zext <4 x i8> %575 to <4 x i32>
  %577 = bitcast i32* %574 to <4 x i32>*
  store <4 x i32> %576, <4 x i32>* %577, align 4
  %578 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %579 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %578, i64 0, i32 5
  store i32 86, i32* %579, align 8
  %580 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %581 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %580, i64 0, i32 1
  %582 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %581, align 8
  tail call void %582(%struct.jpeg_common_struct* %8, i32 2) #4
  %583 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %584 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %583, i64 0, i32 6, i32 0, i64 0
  %585 = load <4 x i8>, <4 x i8>* %33, align 1
  %586 = zext <4 x i8> %585 to <4 x i32>
  %587 = bitcast i32* %584 to <4 x i32>*
  store <4 x i32> %586, <4 x i32>* %587, align 4
  %588 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %583, i64 0, i32 6, i32 0, i64 4
  %589 = load <4 x i8>, <4 x i8>* %34, align 1
  %590 = zext <4 x i8> %589 to <4 x i32>
  %591 = bitcast i32* %588 to <4 x i32>*
  store <4 x i32> %590, <4 x i32>* %591, align 4
  %592 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %593 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %592, i64 0, i32 5
  store i32 86, i32* %593, align 8
  %594 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %595 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %594, i64 0, i32 1
  %596 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %595, align 8
  tail call void %596(%struct.jpeg_common_struct* %8, i32 2) #4
  %597 = icmp ugt i32 %562, 256
  %598 = zext i32 %562 to i64
  %599 = icmp slt i64 %568, %598
  %600 = or i1 %597, %599
  br i1 %600, label %601, label %607

601:                                              ; preds = %567
  %602 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %603 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %602, i64 0, i32 5
  store i32 8, i32* %603, align 8
  %604 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %605 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %604, i64 0, i32 0
  %606 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %605, align 8
  tail call void %606(%struct.jpeg_common_struct* %8) #4
  br label %607

607:                                              ; preds = %601, %567
  %608 = icmp eq i32 %562, 0
  br i1 %608, label %630, label %609

609:                                              ; preds = %607, %621
  %610 = phi i64 [ %628, %621 ], [ 0, %607 ]
  %611 = phi i64 [ %624, %621 ], [ %565, %607 ]
  %612 = phi i8* [ %625, %621 ], [ %564, %607 ]
  %613 = icmp eq i64 %611, 0
  br i1 %613, label %614, label %621

614:                                              ; preds = %609
  %615 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %516, align 8
  %616 = tail call i32 %615(%struct.jpeg_decompress_struct* %0) #4
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %689, label %618

618:                                              ; preds = %614
  %619 = load i8*, i8** %477, align 8
  %620 = load i64, i64* %478, align 8
  br label %621

621:                                              ; preds = %618, %609
  %622 = phi i8* [ %619, %618 ], [ %612, %609 ]
  %623 = phi i64 [ %620, %618 ], [ %611, %609 ]
  %624 = add i64 %623, -1
  %625 = getelementptr inbounds i8, i8* %622, i64 1
  %626 = load i8, i8* %622, align 1
  %627 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %610
  store i8 %626, i8* %627, align 1
  %628 = add nuw nsw i64 %610, 1
  %629 = icmp eq i64 %628, %598
  br i1 %629, label %630, label %609

630:                                              ; preds = %621, %607
  %631 = phi i8* [ %564, %607 ], [ %625, %621 ]
  %632 = phi i64 [ %565, %607 ], [ %624, %621 ]
  %633 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %598
  %634 = sub nsw i32 256, %562
  %635 = sext i32 %634 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %633, i8 0, i64 %635, i1 false) #4
  %636 = sub nsw i64 %568, %598
  %637 = and i32 %533, 16
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %653, label %639

639:                                              ; preds = %630
  %640 = add nsw i32 %533, -16
  %641 = icmp ugt i32 %640, 3
  br i1 %641, label %642, label %650

642:                                              ; preds = %639
  %643 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %644 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %643, i64 0, i32 5
  store i32 30, i32* %644, align 8
  %645 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %646 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %645, i64 0, i32 6, i32 0, i64 0
  store i32 %640, i32* %646, align 4
  %647 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %648 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %647, i64 0, i32 0
  %649 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %648, align 8
  tail call void %649(%struct.jpeg_common_struct* %8) #4
  br label %650

650:                                              ; preds = %642, %639
  %651 = sext i32 %640 to i64
  %652 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 42, i64 %651
  br label %666

653:                                              ; preds = %630
  %654 = icmp ugt i8 %532, 3
  br i1 %654, label %655, label %663

655:                                              ; preds = %653
  %656 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %657 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %656, i64 0, i32 5
  store i32 30, i32* %657, align 8
  %658 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %659 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %658, i64 0, i32 6, i32 0, i64 0
  store i32 %533, i32* %659, align 4
  %660 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %661 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %660, i64 0, i32 0
  %662 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %661, align 8
  tail call void %662(%struct.jpeg_common_struct* %8) #4
  br label %663

663:                                              ; preds = %655, %653
  %664 = zext i8 %532 to i64
  %665 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 41, i64 %664
  br label %666

666:                                              ; preds = %663, %650
  %667 = phi %struct.JHUFF_TBL** [ %652, %650 ], [ %665, %663 ]
  %668 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %667, align 8
  %669 = icmp eq %struct.JHUFF_TBL* %668, null
  br i1 %669, label %670, label %672

670:                                              ; preds = %666
  %671 = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %8) #4
  store %struct.JHUFF_TBL* %671, %struct.JHUFF_TBL** %667, align 8
  br label %672

672:                                              ; preds = %670, %666
  %673 = phi %struct.JHUFF_TBL* [ %671, %670 ], [ %668, %666 ]
  %674 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %673, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %674, i8* nonnull align 16 %11, i64 17, i1 false) #4
  %675 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %667, align 8
  %676 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %675, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %676, i8* nonnull align 16 %16, i64 256, i1 false) #4
  %677 = icmp sgt i64 %636, 16
  br i1 %677, label %517, label %678

678:                                              ; preds = %672, %505
  %679 = phi i8* [ %509, %505 ], [ %631, %672 ]
  %680 = phi i64 [ %508, %505 ], [ %632, %672 ]
  %681 = phi i64 [ %513, %505 ], [ %636, %672 ]
  %682 = icmp eq i64 %681, 0
  br i1 %682, label %690, label %683

683:                                              ; preds = %678
  %684 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %685 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %684, i64 0, i32 5
  store i32 11, i32* %685, align 8
  %686 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %687 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %686, i64 0, i32 0
  %688 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %687, align 8
  tail call void %688(%struct.jpeg_common_struct* %8) #4
  br label %690

689:                                              ; preds = %481, %497, %522, %549, %614
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %11) #4
  br label %1089

690:                                              ; preds = %678, %683
  store i8* %679, i8** %477, align 8
  store i64 %680, i64* %478, align 8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %11) #4
  br label %1088

691:                                              ; preds = %98
  %692 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %693 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %692, i64 0, i32 0
  %694 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %692, i64 0, i32 1
  %695 = load i64, i64* %694, align 8
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %697, label %704

697:                                              ; preds = %691
  %698 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %692, i64 0, i32 3
  %699 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %698, align 8
  %700 = tail call i32 %699(%struct.jpeg_decompress_struct* %0) #4
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %1089, label %702

702:                                              ; preds = %697
  %703 = load i64, i64* %694, align 8
  br label %704

704:                                              ; preds = %702, %691
  %705 = phi i64 [ %703, %702 ], [ %695, %691 ]
  %706 = load i8*, i8** %693, align 8
  %707 = add i64 %705, -1
  %708 = getelementptr inbounds i8, i8* %706, i64 1
  %709 = load i8, i8* %706, align 1
  %710 = zext i8 %709 to i64
  %711 = shl nuw nsw i64 %710, 8
  %712 = icmp eq i64 %707, 0
  br i1 %712, label %713, label %721

713:                                              ; preds = %704
  %714 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %692, i64 0, i32 3
  %715 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %714, align 8
  %716 = tail call i32 %715(%struct.jpeg_decompress_struct* %0) #4
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %1089, label %718

718:                                              ; preds = %713
  %719 = load i8*, i8** %693, align 8
  %720 = load i64, i64* %694, align 8
  br label %721

721:                                              ; preds = %718, %704
  %722 = phi i8* [ %719, %718 ], [ %708, %704 ]
  %723 = phi i64 [ %720, %718 ], [ %707, %704 ]
  %724 = add i64 %723, -1
  %725 = getelementptr inbounds i8, i8* %722, i64 1
  %726 = load i8, i8* %722, align 1
  %727 = zext i8 %726 to i64
  %728 = or i64 %711, %727
  %729 = add nsw i64 %728, -2
  %730 = icmp sgt i64 %729, 0
  br i1 %730, label %731, label %902

731:                                              ; preds = %721
  %732 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %692, i64 0, i32 3
  br label %733

733:                                              ; preds = %898, %731
  %734 = phi i64 [ %724, %731 ], [ %840, %898 ]
  %735 = phi i8* [ %725, %731 ], [ %839, %898 ]
  %736 = phi i64 [ %729, %731 ], [ %900, %898 ]
  %737 = icmp eq i64 %734, 0
  br i1 %737, label %738, label %745

738:                                              ; preds = %733
  %739 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %732, align 8
  %740 = tail call i32 %739(%struct.jpeg_decompress_struct* %0) #4
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %1089, label %742

742:                                              ; preds = %738
  %743 = load i8*, i8** %693, align 8
  %744 = load i64, i64* %694, align 8
  br label %745

745:                                              ; preds = %742, %733
  %746 = phi i8* [ %743, %742 ], [ %735, %733 ]
  %747 = phi i64 [ %744, %742 ], [ %734, %733 ]
  %748 = load i8, i8* %746, align 1
  %749 = zext i8 %748 to i32
  %750 = lshr i32 %749, 4
  %751 = and i32 %749, 15
  %752 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %753 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %752, i64 0, i32 5
  store i32 81, i32* %753, align 8
  %754 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %755 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %754, i64 0, i32 6, i32 0, i64 0
  store i32 %751, i32* %755, align 4
  %756 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %757 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %756, i64 0, i32 6, i32 0, i64 1
  store i32 %750, i32* %757, align 4
  %758 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %759 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %758, i64 0, i32 1
  %760 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %759, align 8
  tail call void %760(%struct.jpeg_common_struct* %8, i32 1) #4
  %761 = icmp ugt i32 %751, 3
  br i1 %761, label %762, label %770

762:                                              ; preds = %745
  %763 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %764 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %763, i64 0, i32 5
  store i32 31, i32* %764, align 8
  %765 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %766 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %765, i64 0, i32 6, i32 0, i64 0
  store i32 %751, i32* %766, align 4
  %767 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %768 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %767, i64 0, i32 0
  %769 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %768, align 8
  tail call void %769(%struct.jpeg_common_struct* %8) #4
  br label %770

770:                                              ; preds = %762, %745
  %771 = zext i32 %751 to i64
  %772 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 40, i64 %771
  %773 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %772, align 8
  %774 = icmp eq %struct.JQUANT_TBL* %773, null
  br i1 %774, label %775, label %777

775:                                              ; preds = %770
  %776 = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* %8) #4
  store %struct.JQUANT_TBL* %776, %struct.JQUANT_TBL** %772, align 8
  br label %777

777:                                              ; preds = %775, %770
  %778 = phi %struct.JQUANT_TBL* [ %776, %775 ], [ %773, %770 ]
  %779 = getelementptr inbounds i8, i8* %746, i64 1
  %780 = add i64 %747, -1
  %781 = icmp eq i32 %750, 0
  br label %782

782:                                              ; preds = %830, %777
  %783 = phi i64 [ 0, %777 ], [ %838, %830 ]
  %784 = phi i64 [ %780, %777 ], [ %840, %830 ]
  %785 = phi i8* [ %779, %777 ], [ %839, %830 ]
  %786 = icmp eq i64 %784, 0
  br i1 %781, label %817, label %787

787:                                              ; preds = %782
  br i1 %786, label %788, label %795

788:                                              ; preds = %787
  %789 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %732, align 8
  %790 = tail call i32 %789(%struct.jpeg_decompress_struct* %0) #4
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %1089, label %792

792:                                              ; preds = %788
  %793 = load i8*, i8** %693, align 8
  %794 = load i64, i64* %694, align 8
  br label %795

795:                                              ; preds = %792, %787
  %796 = phi i8* [ %793, %792 ], [ %785, %787 ]
  %797 = phi i64 [ %794, %792 ], [ %784, %787 ]
  %798 = add i64 %797, -1
  %799 = getelementptr inbounds i8, i8* %796, i64 1
  %800 = load i8, i8* %796, align 1
  %801 = zext i8 %800 to i16
  %802 = shl nuw i16 %801, 8
  %803 = icmp eq i64 %798, 0
  br i1 %803, label %804, label %811

804:                                              ; preds = %795
  %805 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %732, align 8
  %806 = tail call i32 %805(%struct.jpeg_decompress_struct* %0) #4
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %1089, label %808

808:                                              ; preds = %804
  %809 = load i8*, i8** %693, align 8
  %810 = load i64, i64* %694, align 8
  br label %811

811:                                              ; preds = %808, %795
  %812 = phi i8* [ %809, %808 ], [ %799, %795 ]
  %813 = phi i64 [ %810, %808 ], [ %798, %795 ]
  %814 = load i8, i8* %812, align 1
  %815 = zext i8 %814 to i16
  %816 = or i16 %802, %815
  br label %830

817:                                              ; preds = %782
  br i1 %786, label %818, label %825

818:                                              ; preds = %817
  %819 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %732, align 8
  %820 = tail call i32 %819(%struct.jpeg_decompress_struct* %0) #4
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %1089, label %822

822:                                              ; preds = %818
  %823 = load i8*, i8** %693, align 8
  %824 = load i64, i64* %694, align 8
  br label %825

825:                                              ; preds = %822, %817
  %826 = phi i8* [ %823, %822 ], [ %785, %817 ]
  %827 = phi i64 [ %824, %822 ], [ %784, %817 ]
  %828 = load i8, i8* %826, align 1
  %829 = zext i8 %828 to i16
  br label %830

830:                                              ; preds = %825, %811
  %831 = phi i16 [ %816, %811 ], [ %829, %825 ]
  %832 = phi i8* [ %812, %811 ], [ %826, %825 ]
  %833 = phi i64 [ %813, %811 ], [ %827, %825 ]
  %834 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %783
  %835 = load i32, i32* %834, align 4
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %836
  store i16 %831, i16* %837, align 2
  %838 = add nuw nsw i64 %783, 1
  %839 = getelementptr inbounds i8, i8* %832, i64 1
  %840 = add i64 %833, -1
  %841 = icmp eq i64 %838, 64
  br i1 %841, label %842, label %782

842:                                              ; preds = %830
  %843 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %844 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %843, i64 0, i32 7
  %845 = load i32, i32* %844, align 4
  %846 = icmp sgt i32 %845, 1
  br i1 %846, label %847, label %898

847:                                              ; preds = %842, %896
  %848 = phi %struct.jpeg_error_mgr* [ %897, %896 ], [ %843, %842 ]
  %849 = phi i64 [ %894, %896 ], [ 0, %842 ]
  %850 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 0
  %851 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %849
  %852 = load i16, i16* %851, align 2
  %853 = zext i16 %852 to i32
  store i32 %853, i32* %850, align 4
  %854 = or i64 %849, 1
  %855 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %854
  %856 = load i16, i16* %855, align 2
  %857 = zext i16 %856 to i32
  %858 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 1
  store i32 %857, i32* %858, align 4
  %859 = or i64 %849, 2
  %860 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %859
  %861 = load i16, i16* %860, align 2
  %862 = zext i16 %861 to i32
  %863 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 2
  store i32 %862, i32* %863, align 4
  %864 = or i64 %849, 3
  %865 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %864
  %866 = load i16, i16* %865, align 2
  %867 = zext i16 %866 to i32
  %868 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 3
  store i32 %867, i32* %868, align 4
  %869 = or i64 %849, 4
  %870 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %869
  %871 = load i16, i16* %870, align 2
  %872 = zext i16 %871 to i32
  %873 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 4
  store i32 %872, i32* %873, align 4
  %874 = or i64 %849, 5
  %875 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %874
  %876 = load i16, i16* %875, align 2
  %877 = zext i16 %876 to i32
  %878 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 5
  store i32 %877, i32* %878, align 4
  %879 = or i64 %849, 6
  %880 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %879
  %881 = load i16, i16* %880, align 2
  %882 = zext i16 %881 to i32
  %883 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 6
  store i32 %882, i32* %883, align 4
  %884 = or i64 %849, 7
  %885 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %778, i64 0, i32 0, i64 %884
  %886 = load i16, i16* %885, align 2
  %887 = zext i16 %886 to i32
  %888 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %848, i64 0, i32 6, i32 0, i64 7
  store i32 %887, i32* %888, align 4
  %889 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %890 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %889, i64 0, i32 5
  store i32 93, i32* %890, align 8
  %891 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %892 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %891, i64 0, i32 1
  %893 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %892, align 8
  tail call void %893(%struct.jpeg_common_struct* %8, i32 2) #4
  %894 = add nuw nsw i64 %849, 8
  %895 = icmp ult i64 %894, 64
  br i1 %895, label %896, label %898

896:                                              ; preds = %847
  %897 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  br label %847

898:                                              ; preds = %847, %842
  %899 = select i1 %781, i64 -65, i64 -129
  %900 = add nsw i64 %899, %736
  %901 = icmp sgt i64 %900, 0
  br i1 %901, label %733, label %902

902:                                              ; preds = %898, %721
  %903 = phi i64 [ %729, %721 ], [ %900, %898 ]
  %904 = phi i8* [ %725, %721 ], [ %839, %898 ]
  %905 = phi i64 [ %724, %721 ], [ %840, %898 ]
  %906 = icmp eq i64 %903, 0
  br i1 %906, label %913, label %907

907:                                              ; preds = %902
  %908 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %909 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %908, i64 0, i32 5
  store i32 11, i32* %909, align 8
  %910 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %911 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %910, i64 0, i32 0
  %912 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %911, align 8
  tail call void %912(%struct.jpeg_common_struct* %8) #4
  br label %913

913:                                              ; preds = %902, %907
  store i8* %904, i8** %693, align 8
  store i64 %905, i64* %694, align 8
  br label %1088

914:                                              ; preds = %98
  %915 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %916 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %915, i64 0, i32 0
  %917 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %915, i64 0, i32 1
  %918 = load i64, i64* %917, align 8
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %927

920:                                              ; preds = %914
  %921 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %915, i64 0, i32 3
  %922 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %921, align 8
  %923 = tail call i32 %922(%struct.jpeg_decompress_struct* %0) #4
  %924 = icmp eq i32 %923, 0
  br i1 %924, label %1089, label %925

925:                                              ; preds = %920
  %926 = load i64, i64* %917, align 8
  br label %927

927:                                              ; preds = %925, %914
  %928 = phi i64 [ %926, %925 ], [ %918, %914 ]
  %929 = load i8*, i8** %916, align 8
  %930 = add i64 %928, -1
  %931 = getelementptr inbounds i8, i8* %929, i64 1
  %932 = load i8, i8* %929, align 1
  %933 = zext i8 %932 to i64
  %934 = shl nuw nsw i64 %933, 8
  %935 = icmp eq i64 %930, 0
  br i1 %935, label %936, label %944

936:                                              ; preds = %927
  %937 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %915, i64 0, i32 3
  %938 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %937, align 8
  %939 = tail call i32 %938(%struct.jpeg_decompress_struct* %0) #4
  %940 = icmp eq i32 %939, 0
  br i1 %940, label %1089, label %941

941:                                              ; preds = %936
  %942 = load i8*, i8** %916, align 8
  %943 = load i64, i64* %917, align 8
  br label %944

944:                                              ; preds = %941, %927
  %945 = phi i8* [ %942, %941 ], [ %931, %927 ]
  %946 = phi i64 [ %943, %941 ], [ %930, %927 ]
  %947 = add i64 %946, -1
  %948 = getelementptr inbounds i8, i8* %945, i64 1
  %949 = load i8, i8* %945, align 1
  %950 = zext i8 %949 to i64
  %951 = or i64 %934, %950
  %952 = icmp eq i64 %951, 4
  br i1 %952, label %959, label %953

953:                                              ; preds = %944
  %954 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %955 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %954, i64 0, i32 5
  store i32 11, i32* %955, align 8
  %956 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %957 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %956, i64 0, i32 0
  %958 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %957, align 8
  tail call void %958(%struct.jpeg_common_struct* %8) #4
  br label %959

959:                                              ; preds = %953, %944
  %960 = icmp eq i64 %947, 0
  br i1 %960, label %961, label %969

961:                                              ; preds = %959
  %962 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %915, i64 0, i32 3
  %963 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %962, align 8
  %964 = tail call i32 %963(%struct.jpeg_decompress_struct* %0) #4
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %1089, label %966

966:                                              ; preds = %961
  %967 = load i8*, i8** %916, align 8
  %968 = load i64, i64* %917, align 8
  br label %969

969:                                              ; preds = %966, %959
  %970 = phi i8* [ %967, %966 ], [ %948, %959 ]
  %971 = phi i64 [ %968, %966 ], [ %947, %959 ]
  %972 = add i64 %971, -1
  %973 = getelementptr inbounds i8, i8* %970, i64 1
  %974 = load i8, i8* %970, align 1
  %975 = zext i8 %974 to i32
  %976 = shl nuw nsw i32 %975, 8
  %977 = icmp eq i64 %972, 0
  br i1 %977, label %978, label %986

978:                                              ; preds = %969
  %979 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %915, i64 0, i32 3
  %980 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %979, align 8
  %981 = tail call i32 %980(%struct.jpeg_decompress_struct* %0) #4
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %1089, label %983

983:                                              ; preds = %978
  %984 = load i8*, i8** %916, align 8
  %985 = load i64, i64* %917, align 8
  br label %986

986:                                              ; preds = %969, %983
  %987 = phi i8* [ %984, %983 ], [ %973, %969 ]
  %988 = phi i64 [ %985, %983 ], [ %972, %969 ]
  %989 = add i64 %988, -1
  %990 = getelementptr inbounds i8, i8* %987, i64 1
  %991 = load i8, i8* %987, align 1
  %992 = zext i8 %991 to i32
  %993 = or i32 %976, %992
  %994 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %995 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %994, i64 0, i32 5
  store i32 82, i32* %995, align 8
  %996 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %997 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %996, i64 0, i32 6, i32 0, i64 0
  store i32 %993, i32* %997, align 4
  %998 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %999 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %998, i64 0, i32 1
  %1000 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %999, align 8
  tail call void %1000(%struct.jpeg_common_struct* %8, i32 1) #4
  store i32 %993, i32* %10, align 8
  store i8* %990, i8** %916, align 8
  store i64 %989, i64* %917, align 8
  br label %1088

1001:                                             ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98
  %1002 = load %struct.my_marker_reader*, %struct.my_marker_reader** %9, align 8
  %1003 = add nsw i32 %99, -224
  %1004 = sext i32 %1003 to i64
  %1005 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %1002, i64 0, i32 2, i64 %1004
  %1006 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1005, align 8
  %1007 = tail call i32 %1006(%struct.jpeg_decompress_struct* %0) #4
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1089, label %1088

1009:                                             ; preds = %98
  %1010 = load %struct.my_marker_reader*, %struct.my_marker_reader** %9, align 8
  %1011 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %1010, i64 0, i32 1
  %1012 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1011, align 8
  %1013 = tail call i32 %1012(%struct.jpeg_decompress_struct* %0) #4
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1089, label %1088

1015:                                             ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98
  %1016 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1017 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1016, i64 0, i32 5
  store i32 92, i32* %1017, align 8
  %1018 = load i32, i32* %4, align 4
  %1019 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1020 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1019, i64 0, i32 6, i32 0, i64 0
  store i32 %1018, i32* %1020, align 4
  %1021 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1022 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1021, i64 0, i32 1
  %1023 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1022, align 8
  tail call void %1023(%struct.jpeg_common_struct* %8, i32 1) #4
  br label %1088

1024:                                             ; preds = %98
  %1025 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %1026 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1025, i64 0, i32 0
  %1027 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1025, i64 0, i32 1
  %1028 = load i64, i64* %1027, align 8
  %1029 = icmp eq i64 %1028, 0
  br i1 %1029, label %1030, label %1037

1030:                                             ; preds = %1024
  %1031 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1025, i64 0, i32 3
  %1032 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1031, align 8
  %1033 = tail call i32 %1032(%struct.jpeg_decompress_struct* %0) #4
  %1034 = icmp eq i32 %1033, 0
  br i1 %1034, label %1089, label %1035

1035:                                             ; preds = %1030
  %1036 = load i64, i64* %1027, align 8
  br label %1037

1037:                                             ; preds = %1035, %1024
  %1038 = phi i64 [ %1036, %1035 ], [ %1028, %1024 ]
  %1039 = load i8*, i8** %1026, align 8
  %1040 = add i64 %1038, -1
  %1041 = getelementptr inbounds i8, i8* %1039, i64 1
  %1042 = load i8, i8* %1039, align 1
  %1043 = zext i8 %1042 to i64
  %1044 = shl nuw nsw i64 %1043, 8
  %1045 = icmp eq i64 %1040, 0
  br i1 %1045, label %1046, label %1054

1046:                                             ; preds = %1037
  %1047 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1025, i64 0, i32 3
  %1048 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1047, align 8
  %1049 = tail call i32 %1048(%struct.jpeg_decompress_struct* %0) #4
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1089, label %1051

1051:                                             ; preds = %1046
  %1052 = load i8*, i8** %1026, align 8
  %1053 = load i64, i64* %1027, align 8
  br label %1054

1054:                                             ; preds = %1051, %1037
  %1055 = phi i8* [ %1052, %1051 ], [ %1041, %1037 ]
  %1056 = phi i64 [ %1053, %1051 ], [ %1040, %1037 ]
  %1057 = add i64 %1056, -1
  %1058 = getelementptr inbounds i8, i8* %1055, i64 1
  %1059 = load i8, i8* %1055, align 1
  %1060 = zext i8 %1059 to i64
  %1061 = or i64 %1044, %1060
  %1062 = add nsw i64 %1061, -2
  %1063 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1064 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1063, i64 0, i32 5
  store i32 91, i32* %1064, align 8
  %1065 = load i32, i32* %4, align 4
  %1066 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1067 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1066, i64 0, i32 6, i32 0, i64 0
  store i32 %1065, i32* %1067, align 4
  %1068 = trunc i64 %1062 to i32
  %1069 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1070 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1069, i64 0, i32 6, i32 0, i64 1
  store i32 %1068, i32* %1070, align 4
  %1071 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1072 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1071, i64 0, i32 1
  %1073 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1072, align 8
  tail call void %1073(%struct.jpeg_common_struct* %8, i32 1) #4
  store i8* %1058, i8** %1026, align 8
  store i64 %1057, i64* %1027, align 8
  %1074 = icmp sgt i64 %1062, 0
  br i1 %1074, label %1075, label %1088

1075:                                             ; preds = %1054
  %1076 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %1077 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1076, i64 0, i32 4
  %1078 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %1077, align 8
  tail call void %1078(%struct.jpeg_decompress_struct* %0, i64 %1062) #4
  br label %1088

1079:                                             ; preds = %98
  %1080 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1081 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1080, i64 0, i32 5
  store i32 68, i32* %1081, align 8
  %1082 = load i32, i32* %4, align 4
  %1083 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1084 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1083, i64 0, i32 6, i32 0, i64 0
  store i32 %1082, i32* %1084, align 4
  %1085 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1086 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1085, i64 0, i32 0
  %1087 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1086, align 8
  tail call void %1087(%struct.jpeg_common_struct* %8) #4
  br label %1088

1088:                                             ; preds = %1075, %1054, %986, %913, %690, %471, %450, %120, %123, %126, %129, %1001, %1009, %117, %1079, %1015, %132
  store i32 0, i32* %4, align 4
  br label %35

1089:                                             ; preds = %1046, %1030, %978, %961, %936, %920, %713, %697, %442, %426, %64, %49, %1009, %1001, %129, %126, %123, %120, %93, %738, %818, %804, %788, %263, %248, %376, %359, %342, %193, %176, %159, %689, %414, %384
  %1090 = phi i32 [ 2, %414 ], [ 1, %384 ], [ 0, %689 ], [ 0, %159 ], [ 0, %176 ], [ 0, %193 ], [ 0, %342 ], [ 0, %359 ], [ 0, %376 ], [ 0, %248 ], [ 0, %263 ], [ 0, %788 ], [ 0, %804 ], [ 0, %818 ], [ 0, %738 ], [ 0, %93 ], [ 0, %120 ], [ 0, %123 ], [ 0, %126 ], [ 0, %129 ], [ 0, %1001 ], [ 0, %1009 ], [ 0, %49 ], [ 0, %64 ], [ 0, %426 ], [ 0, %442 ], [ 0, %697 ], [ 0, %713 ], [ 0, %920 ], [ 0, %936 ], [ 0, %961 ], [ 0, %978 ], [ 0, %1030 ], [ 0, %1046 ]
  ret i32 %1090

1091:                                             ; preds = %285
  %1092 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %286, i64 0, i32 0
  %1093 = load i32, i32* %1092, align 8
  %1094 = icmp eq i32 %1093, %261
  br i1 %1094, label %1095, label %1098

1095:                                             ; preds = %1091
  %1096 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %240, align 8
  %1097 = icmp eq %struct.jpeg_component_info* %1096, null
  br i1 %1097, label %297, label %1098

1098:                                             ; preds = %1095, %1091
  %1099 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 2
  %1100 = icmp sgt i32 %276, 2
  br i1 %1100, label %1101, label %288

1101:                                             ; preds = %1098
  %1102 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1099, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 8
  %1104 = icmp eq i32 %1103, %261
  br i1 %1104, label %1105, label %1108

1105:                                             ; preds = %1101
  %1106 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %241, align 8
  %1107 = icmp eq %struct.jpeg_component_info* %1106, null
  br i1 %1107, label %297, label %1108

1108:                                             ; preds = %1105, %1101
  %1109 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 3
  %1110 = icmp sgt i32 %276, 3
  br i1 %1110, label %1111, label %288

1111:                                             ; preds = %1108
  %1112 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1109, i64 0, i32 0
  %1113 = load i32, i32* %1112, align 8
  %1114 = icmp eq i32 %1113, %261
  br i1 %1114, label %1115, label %1118

1115:                                             ; preds = %1111
  %1116 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %242, align 8
  %1117 = icmp eq %struct.jpeg_component_info* %1116, null
  br i1 %1117, label %297, label %1118

1118:                                             ; preds = %1115, %1111
  %1119 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 4
  br label %288
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @read_restart_marker(%struct.jpeg_decompress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* %0)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %45, label %8

8:                                                ; preds = %5
  %9 = load i32, i32* %2, align 4
  br label %10

10:                                               ; preds = %8, %1
  %11 = phi i32 [ %9, %8 ], [ %3, %1 ]
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %13 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 208
  %17 = icmp eq i32 %11, %16
  br i1 %17, label %18, label %31

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 98, i32* %21, align 8
  %22 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %23 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0
  store i32 %24, i32* %26, align 4
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 1
  %29 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %28, align 8
  %30 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %29(%struct.jpeg_common_struct* %30, i32 3) #4
  store i32 0, i32* %2, align 4
  br label %39

31:                                               ; preds = %10
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %33 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %33, i64 0, i32 5
  %35 = bitcast {}** %34 to i32 (%struct.jpeg_decompress_struct*, i32)**
  %36 = load i32 (%struct.jpeg_decompress_struct*, i32)*, i32 (%struct.jpeg_decompress_struct*, i32)** %35, align 8
  %37 = tail call i32 %36(%struct.jpeg_decompress_struct* %0, i32 %15) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %31, %18
  %40 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %41 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %40, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, 1
  %44 = and i32 %43, 7
  store i32 %44, i32* %41, align 8
  br label %45

45:                                               ; preds = %31, %5, %39
  %46 = phi i32 [ 1, %39 ], [ 0, %5 ], [ 0, %31 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @skip_variable(%struct.jpeg_decompress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 0
  %5 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 3
  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %9, align 8
  %11 = tail call i32 %10(%struct.jpeg_decompress_struct* %0) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %8
  %14 = load i64, i64* %5, align 8
  br label %15

15:                                               ; preds = %13, %1
  %16 = phi i64 [ %14, %13 ], [ %6, %1 ]
  %17 = load i8*, i8** %4, align 8
  %18 = add i64 %16, -1
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = load i8, i8* %17, align 1
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 8
  %23 = icmp eq i64 %18, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 3
  %26 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %25, align 8
  %27 = tail call i32 %26(%struct.jpeg_decompress_struct* %0) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %60, label %29

29:                                               ; preds = %24
  %30 = load i8*, i8** %4, align 8
  %31 = load i64, i64* %5, align 8
  br label %32

32:                                               ; preds = %29, %15
  %33 = phi i8* [ %30, %29 ], [ %19, %15 ]
  %34 = phi i64 [ %31, %29 ], [ %18, %15 ]
  %35 = add i64 %34, -1
  %36 = getelementptr inbounds i8, i8* %33, i64 1
  %37 = load i8, i8* %33, align 1
  %38 = zext i8 %37 to i64
  %39 = or i64 %22, %38
  %40 = add nsw i64 %39, -2
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 5
  store i32 91, i32* %43, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i64 0, i32 6, i32 0, i64 0
  store i32 %45, i32* %47, align 4
  %48 = trunc i64 %40 to i32
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 6, i32 0, i64 1
  store i32 %48, i32* %50, align 4
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 1
  %53 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %52, align 8
  %54 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %53(%struct.jpeg_common_struct* %54, i32 1) #4
  store i8* %36, i8** %4, align 8
  store i64 %35, i64* %5, align 8
  %55 = icmp sgt i64 %40, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %32
  %57 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %57, i64 0, i32 4
  %59 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %58, align 8
  tail call void %59(%struct.jpeg_decompress_struct* %0, i64 %40) #4
  br label %60

60:                                               ; preds = %32, %56, %24, %8
  %61 = phi i32 [ 0, %8 ], [ 0, %24 ], [ 1, %56 ], [ 1, %32 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @get_interesting_appn(%struct.jpeg_decompress_struct*) #0 {
  %2 = alloca [14 x i8], align 1
  %3 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %3) #4
  %4 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 1
  %5 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 2
  %6 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 3
  %7 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 4
  %8 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 5
  %9 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 6
  %10 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 7
  %11 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 8
  %12 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 9
  %13 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 10
  %14 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 11
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %3, i8 -86, i64 14, i1 false)
  %16 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i64 0, i32 0
  %18 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i64 0, i32 3
  %23 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %22, align 8
  %24 = tail call i32 %23(%struct.jpeg_decompress_struct* %0) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %173, label %26

26:                                               ; preds = %21
  %27 = load i64, i64* %18, align 8
  br label %28

28:                                               ; preds = %26, %1
  %29 = phi i64 [ %27, %26 ], [ %19, %1 ]
  %30 = load i8*, i8** %17, align 8
  %31 = add i64 %29, -1
  %32 = getelementptr inbounds i8, i8* %30, i64 1
  %33 = load i8, i8* %30, align 1
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 8
  %36 = icmp eq i64 %31, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %28
  %38 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i64 0, i32 3
  %39 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %38, align 8
  %40 = tail call i32 %39(%struct.jpeg_decompress_struct* %0) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %37
  %43 = load i8*, i8** %17, align 8
  %44 = load i64, i64* %18, align 8
  br label %45

45:                                               ; preds = %42, %28
  %46 = phi i8* [ %43, %42 ], [ %32, %28 ]
  %47 = phi i64 [ %44, %42 ], [ %31, %28 ]
  %48 = load i8, i8* %46, align 1
  %49 = zext i8 %48 to i64
  %50 = or i64 %35, %49
  %51 = add nsw i64 %50, -2
  %52 = icmp sgt i64 %51, 13
  %53 = icmp sgt i64 %51, 0
  %54 = select i1 %53, i64 %51, i64 0
  %55 = trunc i64 %54 to i32
  %56 = select i1 %52, i32 14, i32 %55
  %57 = getelementptr inbounds i8, i8* %46, i64 1
  %58 = add i64 %47, -1
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %84, label %60

60:                                               ; preds = %45
  %61 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %16, i64 0, i32 3
  %62 = zext i32 %56 to i64
  br label %63

63:                                               ; preds = %75, %60
  %64 = phi i64 [ 0, %60 ], [ %80, %75 ]
  %65 = phi i64 [ %58, %60 ], [ %82, %75 ]
  %66 = phi i8* [ %57, %60 ], [ %81, %75 ]
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %63
  %69 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %61, align 8
  %70 = tail call i32 %69(%struct.jpeg_decompress_struct* %0) #4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %173, label %72

72:                                               ; preds = %68
  %73 = load i8*, i8** %17, align 8
  %74 = load i64, i64* %18, align 8
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi i8* [ %73, %72 ], [ %66, %63 ]
  %77 = phi i64 [ %74, %72 ], [ %65, %63 ]
  %78 = load i8, i8* %76, align 1
  %79 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 %64
  store i8 %78, i8* %79, align 1
  %80 = add nuw nsw i64 %64, 1
  %81 = getelementptr inbounds i8, i8* %76, i64 1
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %80, %62
  br i1 %83, label %84, label %63

84:                                               ; preds = %75, %45
  %85 = phi i64 [ 0, %45 ], [ %62, %75 ]
  %86 = phi i8* [ %57, %45 ], [ %81, %75 ]
  %87 = phi i64 [ %58, %45 ], [ %82, %75 ]
  %88 = sub nsw i64 %51, %85
  %89 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %90 = load i32, i32* %89, align 4
  switch i32 %90, label %156 [
    i32 224, label %91
    i32 238, label %92
  ]

91:                                               ; preds = %84
  call fastcc void @examine_app0(%struct.jpeg_decompress_struct* %0, i8* nonnull %3, i32 %56, i64 %88)
  br label %167

92:                                               ; preds = %84
  %93 = icmp ugt i32 %56, 11
  %94 = load i8, i8* %3, align 1
  %95 = icmp eq i8 %94, 65
  %96 = and i1 %93, %95
  %97 = load i8, i8* %4, align 1
  %98 = icmp eq i8 %97, 100
  %99 = and i1 %96, %98
  %100 = load i8, i8* %5, align 1
  %101 = icmp eq i8 %100, 111
  %102 = and i1 %99, %101
  %103 = load i8, i8* %6, align 1
  %104 = icmp eq i8 %103, 98
  %105 = and i1 %102, %104
  %106 = load i8, i8* %7, align 1
  %107 = icmp eq i8 %106, 101
  %108 = and i1 %105, %107
  br i1 %108, label %109, label %144

109:                                              ; preds = %92
  %110 = load i8, i8* %8, align 1
  %111 = zext i8 %110 to i32
  %112 = shl nuw nsw i32 %111, 8
  %113 = load i8, i8* %9, align 1
  %114 = zext i8 %113 to i32
  %115 = or i32 %112, %114
  %116 = load i8, i8* %10, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw nsw i32 %117, 8
  %119 = load i8, i8* %11, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %118, %120
  %122 = load i8, i8* %12, align 1
  %123 = zext i8 %122 to i32
  %124 = shl nuw nsw i32 %123, 8
  %125 = load i8, i8* %13, align 1
  %126 = zext i8 %125 to i32
  %127 = or i32 %124, %126
  %128 = load i8, i8* %14, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 0
  store i32 %115, i32* %132, align 4
  %133 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 1
  store i32 %121, i32* %133, align 4
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 2
  store i32 %127, i32* %134, align 4
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 3
  store i32 %129, i32* %135, align 4
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 5
  store i32 76, i32* %137, align 8
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 1
  %140 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %139, align 8
  %141 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %140(%struct.jpeg_common_struct* %141, i32 1) #4
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  store i32 1, i32* %142, align 8
  %143 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  store i8 %128, i8* %143, align 4
  br label %167

144:                                              ; preds = %92
  %145 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i64 0, i32 5
  store i32 78, i32* %147, align 8
  %148 = trunc i64 %88 to i32
  %149 = add i32 %56, %148
  %150 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %151 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %150, i64 0, i32 6, i32 0, i64 0
  store i32 %149, i32* %151, align 4
  %152 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %152, i64 0, i32 1
  %154 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %153, align 8
  %155 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %154(%struct.jpeg_common_struct* %155, i32 1) #4
  br label %167

156:                                              ; preds = %84
  %157 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %158 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i64 0, i32 5
  store i32 68, i32* %159, align 8
  %160 = load i32, i32* %89, align 4
  %161 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %161, i64 0, i32 6, i32 0, i64 0
  store i32 %160, i32* %162, align 4
  %163 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i64 0, i32 0
  %165 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %164, align 8
  %166 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %165(%struct.jpeg_common_struct* %166) #4
  br label %167

167:                                              ; preds = %144, %109, %156, %91
  store i8* %86, i8** %17, align 8
  store i64 %87, i64* %18, align 8
  %168 = icmp sgt i64 %88, 0
  br i1 %168, label %169, label %173

169:                                              ; preds = %167
  %170 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %15, align 8
  %171 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %170, i64 0, i32 4
  %172 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %171, align 8
  tail call void %172(%struct.jpeg_decompress_struct* %0, i64 %88) #4
  br label %173

173:                                              ; preds = %68, %167, %169, %37, %21
  %174 = phi i32 [ 0, %21 ], [ 0, %37 ], [ 1, %169 ], [ 1, %167 ], [ 0, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %3) #4
  ret i32 %174
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_save_markers(%struct.jpeg_decompress_struct*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %5 = bitcast %struct.jpeg_marker_reader** %4 to %struct.my_marker_reader**
  %6 = load %struct.my_marker_reader*, %struct.my_marker_reader** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i64 0, i32 12
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -32
  %12 = zext i32 %2 to i64
  %13 = icmp slt i64 %11, %12
  %14 = trunc i64 %11 to i32
  %15 = select i1 %13, i32 %14, i32 %2
  %16 = icmp eq i32 %15, 0
  %17 = icmp eq i32 %1, 224
  br i1 %16, label %26, label %18

18:                                               ; preds = %3
  %19 = icmp ult i32 %15, 14
  %20 = and i1 %17, %19
  br i1 %20, label %40, label %21

21:                                               ; preds = %18
  %22 = icmp eq i32 %1, 238
  %23 = icmp ult i32 %15, 12
  %24 = and i1 %22, %23
  %25 = select i1 %24, i32 12, i32 %15
  br label %30

26:                                               ; preds = %3
  %27 = icmp eq i32 %1, 238
  %28 = or i1 %17, %27
  %29 = select i1 %28, i32 (%struct.jpeg_decompress_struct*)* @get_interesting_appn, i32 (%struct.jpeg_decompress_struct*)* @skip_variable
  br label %30

30:                                               ; preds = %21, %26
  %31 = phi i32 [ 0, %26 ], [ %25, %21 ]
  %32 = phi i32 (%struct.jpeg_decompress_struct*)* [ %29, %26 ], [ @save_marker, %21 ]
  %33 = icmp eq i32 %1, 254
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 1
  store i32 (%struct.jpeg_decompress_struct*)* %32, i32 (%struct.jpeg_decompress_struct*)** %35, align 8
  %36 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 3
  store i32 %31, i32* %36, align 8
  br label %57

37:                                               ; preds = %30
  %38 = and i32 %1, -16
  %39 = icmp eq i32 %38, 224
  br i1 %39, label %40, label %47

40:                                               ; preds = %18, %37
  %41 = phi i32 [ %31, %37 ], [ 14, %18 ]
  %42 = phi i32 (%struct.jpeg_decompress_struct*)* [ %32, %37 ], [ @save_marker, %18 ]
  %43 = add nsw i32 %1, -224
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 2, i64 %44
  store i32 (%struct.jpeg_decompress_struct*)* %42, i32 (%struct.jpeg_decompress_struct*)** %45, align 8
  %46 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 4, i64 %44
  store i32 %41, i32* %46, align 4
  br label %57

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 5
  store i32 68, i32* %50, align 8
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %52, align 4
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 0
  %55 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %54, align 8
  %56 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %55(%struct.jpeg_common_struct* %56) #4
  br label %57

57:                                               ; preds = %40, %47, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @save_marker(%struct.jpeg_decompress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %3 = bitcast %struct.jpeg_marker_reader** %2 to %struct.my_marker_reader**
  %4 = load %struct.my_marker_reader*, %struct.my_marker_reader** %3, align 8
  %5 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 5
  %6 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %8 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq %struct.jpeg_marker_struct* %6, null
  br i1 %13, label %14, label %86

14:                                               ; preds = %1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 3
  %18 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %17, align 8
  %19 = tail call i32 %18(%struct.jpeg_decompress_struct* %0) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %386, label %21

21:                                               ; preds = %16
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %11, align 8
  br label %24

24:                                               ; preds = %21, %14
  %25 = phi i8* [ %22, %21 ], [ %10, %14 ]
  %26 = phi i64 [ %23, %21 ], [ %12, %14 ]
  %27 = add i64 %26, -1
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  %29 = load i8, i8* %25, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = icmp eq i64 %27, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 3
  %35 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %34, align 8
  %36 = tail call i32 %35(%struct.jpeg_decompress_struct* %0) #4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %386, label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %9, align 8
  %40 = load i64, i64* %11, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = phi i8* [ %39, %38 ], [ %28, %24 ]
  %43 = phi i64 [ %40, %38 ], [ %27, %24 ]
  %44 = add i64 %43, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = zext i8 %46 to i64
  %48 = or i64 %31, %47
  %49 = add nsw i64 %48, -2
  %50 = icmp sgt i64 %49, -1
  br i1 %50, label %51, label %281

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 254
  %55 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 3
  %56 = add nsw i32 %53, -224
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 4, i64 %57
  %59 = select i1 %54, i32* %55, i32* %58
  %60 = load i32, i32* %59, align 4
  %61 = trunc i64 %49 to i32
  %62 = icmp ugt i32 %60, %61
  %63 = select i1 %62, i32 %61, i32 %60
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %65 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %64, align 8
  %66 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %65, i64 0, i32 1
  %67 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %66, align 8
  %68 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %69 = zext i32 %63 to i64
  %70 = add nuw nsw i64 %69, 32
  %71 = tail call i8* %67(%struct.jpeg_common_struct* %68, i32 1, i64 %70) #4
  %72 = bitcast i8* %71 to %struct.jpeg_marker_struct*
  %73 = bitcast i8* %71 to %struct.jpeg_marker_struct**
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %73, align 8
  %74 = load i32, i32* %52, align 4
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds i8, i8* %71, i64 8
  store i8 %75, i8* %76, align 8
  %77 = getelementptr inbounds i8, i8* %71, i64 12
  %78 = bitcast i8* %77 to i32*
  store i32 %61, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to i32*
  store i32 %63, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %71, i64 32
  %82 = getelementptr inbounds i8, i8* %71, i64 24
  %83 = bitcast i8* %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %struct.jpeg_marker_struct** %5 to i8**
  store i8* %71, i8** %84, align 8
  %85 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 6
  store i32 0, i32* %85, align 8
  br label %95

86:                                               ; preds = %1
  %87 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 6
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %6, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %6, i64 0, i32 4
  %92 = load i8*, i8** %91, align 8
  %93 = zext i32 %88 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  br label %95

95:                                               ; preds = %51, %86
  %96 = phi %struct.jpeg_marker_struct* [ %72, %51 ], [ %6, %86 ]
  %97 = phi i32 [ 0, %51 ], [ %88, %86 ]
  %98 = phi i32 [ %63, %51 ], [ %90, %86 ]
  %99 = phi i8* [ %81, %51 ], [ %94, %86 ]
  %100 = phi i64 [ %49, %51 ], [ 0, %86 ]
  %101 = phi i8* [ %45, %51 ], [ %10, %86 ]
  %102 = phi i64 [ %44, %51 ], [ %12, %86 ]
  %103 = icmp ult i32 %97, %98
  br i1 %103, label %104, label %257

104:                                              ; preds = %95
  %105 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 6
  %106 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 3
  br label %113

107:                                              ; preds = %244, %237, %126
  %108 = phi i32 [ %117, %126 ], [ %161, %237 ], [ %253, %244 ]
  %109 = phi i8* [ %116, %126 ], [ %159, %237 ], [ %251, %244 ]
  %110 = phi i8* [ %127, %126 ], [ %158, %237 ], [ %249, %244 ]
  %111 = phi i64 [ %128, %126 ], [ %157, %237 ], [ %252, %244 ]
  %112 = icmp ult i32 %108, %98
  br i1 %112, label %113, label %257

113:                                              ; preds = %104, %107
  %114 = phi i64 [ %102, %104 ], [ %111, %107 ]
  %115 = phi i8* [ %101, %104 ], [ %110, %107 ]
  %116 = phi i8* [ %99, %104 ], [ %109, %107 ]
  %117 = phi i32 [ %97, %104 ], [ %108, %107 ]
  store i8* %115, i8** %9, align 8
  store i64 %114, i64* %11, align 8
  store i32 %117, i32* %105, align 8
  %118 = icmp eq i64 %114, 0
  br i1 %118, label %119, label %126

119:                                              ; preds = %113
  %120 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %106, align 8
  %121 = tail call i32 %120(%struct.jpeg_decompress_struct* %0) #4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %386, label %123

123:                                              ; preds = %119
  %124 = load i8*, i8** %9, align 8
  %125 = load i64, i64* %11, align 8
  br label %126

126:                                              ; preds = %123, %113
  %127 = phi i8* [ %124, %123 ], [ %115, %113 ]
  %128 = phi i64 [ %125, %123 ], [ %114, %113 ]
  %129 = icmp ult i32 %117, %98
  %130 = icmp ne i64 %128, 0
  %131 = and i1 %129, %130
  br i1 %131, label %132, label %107

132:                                              ; preds = %126
  %133 = add i64 %128, -1
  %134 = xor i32 %117, -1
  %135 = add i32 %98, %134
  %136 = zext i32 %135 to i64
  %137 = icmp ult i64 %133, %136
  %138 = select i1 %137, i64 %133, i64 %136
  %139 = add nuw nsw i64 %138, 1
  %140 = icmp ult i64 %139, 32
  br i1 %140, label %239, label %141

141:                                              ; preds = %132
  %142 = getelementptr i8, i8* %116, i64 1
  %143 = add i64 %128, -1
  %144 = xor i32 %117, -1
  %145 = add i32 %98, %144
  %146 = zext i32 %145 to i64
  %147 = icmp ult i64 %143, %146
  %148 = select i1 %147, i64 %143, i64 %146
  %149 = getelementptr i8, i8* %142, i64 %148
  %150 = getelementptr i8, i8* %127, i64 1
  %151 = getelementptr i8, i8* %150, i64 %148
  %152 = icmp ult i8* %116, %151
  %153 = icmp ult i8* %127, %149
  %154 = and i1 %152, %153
  br i1 %154, label %239, label %155

155:                                              ; preds = %141
  %156 = and i64 %139, 8589934560
  %157 = sub i64 %128, %156
  %158 = getelementptr i8, i8* %127, i64 %156
  %159 = getelementptr i8, i8* %116, i64 %156
  %160 = trunc i64 %156 to i32
  %161 = add i32 %117, %160
  %162 = add nsw i64 %156, -32
  %163 = lshr exact i64 %162, 5
  %164 = add nuw nsw i64 %163, 1
  %165 = and i64 %164, 3
  %166 = icmp ult i64 %162, 96
  br i1 %166, label %218, label %167

167:                                              ; preds = %155
  %168 = sub nsw i64 %164, %165
  br label %169

169:                                              ; preds = %169, %167
  %170 = phi i64 [ 0, %167 ], [ %215, %169 ]
  %171 = phi i64 [ %168, %167 ], [ %216, %169 ]
  %172 = getelementptr i8, i8* %127, i64 %170
  %173 = getelementptr i8, i8* %116, i64 %170
  %174 = bitcast i8* %172 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !2
  %176 = getelementptr i8, i8* %172, i64 16
  %177 = bitcast i8* %176 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !2
  %179 = bitcast i8* %173 to <16 x i8>*
  store <16 x i8> %175, <16 x i8>* %179, align 1, !alias.scope !5, !noalias !2
  %180 = getelementptr i8, i8* %173, i64 16
  %181 = bitcast i8* %180 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %181, align 1, !alias.scope !5, !noalias !2
  %182 = or i64 %170, 32
  %183 = getelementptr i8, i8* %127, i64 %182
  %184 = getelementptr i8, i8* %116, i64 %182
  %185 = bitcast i8* %183 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !2
  %187 = getelementptr i8, i8* %183, i64 16
  %188 = bitcast i8* %187 to <16 x i8>*
  %189 = load <16 x i8>, <16 x i8>* %188, align 1, !alias.scope !2
  %190 = bitcast i8* %184 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %190, align 1, !alias.scope !5, !noalias !2
  %191 = getelementptr i8, i8* %184, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %189, <16 x i8>* %192, align 1, !alias.scope !5, !noalias !2
  %193 = or i64 %170, 64
  %194 = getelementptr i8, i8* %127, i64 %193
  %195 = getelementptr i8, i8* %116, i64 %193
  %196 = bitcast i8* %194 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !2
  %198 = getelementptr i8, i8* %194, i64 16
  %199 = bitcast i8* %198 to <16 x i8>*
  %200 = load <16 x i8>, <16 x i8>* %199, align 1, !alias.scope !2
  %201 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %201, align 1, !alias.scope !5, !noalias !2
  %202 = getelementptr i8, i8* %195, i64 16
  %203 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %200, <16 x i8>* %203, align 1, !alias.scope !5, !noalias !2
  %204 = or i64 %170, 96
  %205 = getelementptr i8, i8* %127, i64 %204
  %206 = getelementptr i8, i8* %116, i64 %204
  %207 = bitcast i8* %205 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !2
  %209 = getelementptr i8, i8* %205, i64 16
  %210 = bitcast i8* %209 to <16 x i8>*
  %211 = load <16 x i8>, <16 x i8>* %210, align 1, !alias.scope !2
  %212 = bitcast i8* %206 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %212, align 1, !alias.scope !5, !noalias !2
  %213 = getelementptr i8, i8* %206, i64 16
  %214 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %211, <16 x i8>* %214, align 1, !alias.scope !5, !noalias !2
  %215 = add i64 %170, 128
  %216 = add i64 %171, -4
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %169, !llvm.loop !7

218:                                              ; preds = %169, %155
  %219 = phi i64 [ 0, %155 ], [ %215, %169 ]
  %220 = icmp eq i64 %165, 0
  br i1 %220, label %237, label %221

221:                                              ; preds = %218, %221
  %222 = phi i64 [ %234, %221 ], [ %219, %218 ]
  %223 = phi i64 [ %235, %221 ], [ %165, %218 ]
  %224 = getelementptr i8, i8* %127, i64 %222
  %225 = getelementptr i8, i8* %116, i64 %222
  %226 = bitcast i8* %224 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !2
  %228 = getelementptr i8, i8* %224, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !2
  %231 = bitcast i8* %225 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !5, !noalias !2
  %232 = getelementptr i8, i8* %225, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !5, !noalias !2
  %234 = add i64 %222, 32
  %235 = add i64 %223, -1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %221, !llvm.loop !9

237:                                              ; preds = %221, %218
  %238 = icmp eq i64 %139, %156
  br i1 %238, label %107, label %239

239:                                              ; preds = %237, %141, %132
  %240 = phi i64 [ %128, %141 ], [ %128, %132 ], [ %157, %237 ]
  %241 = phi i8* [ %127, %141 ], [ %127, %132 ], [ %158, %237 ]
  %242 = phi i8* [ %116, %141 ], [ %116, %132 ], [ %159, %237 ]
  %243 = phi i32 [ %117, %141 ], [ %117, %132 ], [ %161, %237 ]
  br label %244

244:                                              ; preds = %239, %244
  %245 = phi i64 [ %252, %244 ], [ %240, %239 ]
  %246 = phi i8* [ %249, %244 ], [ %241, %239 ]
  %247 = phi i8* [ %251, %244 ], [ %242, %239 ]
  %248 = phi i32 [ %253, %244 ], [ %243, %239 ]
  %249 = getelementptr inbounds i8, i8* %246, i64 1
  %250 = load i8, i8* %246, align 1
  %251 = getelementptr inbounds i8, i8* %247, i64 1
  store i8 %250, i8* %247, align 1
  %252 = add i64 %245, -1
  %253 = add nuw i32 %248, 1
  %254 = icmp ult i32 %253, %98
  %255 = icmp ne i64 %252, 0
  %256 = and i1 %254, %255
  br i1 %256, label %244, label %107, !llvm.loop !11

257:                                              ; preds = %107, %95
  %258 = phi i8* [ %99, %95 ], [ %109, %107 ]
  %259 = phi i8* [ %101, %95 ], [ %110, %107 ]
  %260 = phi i64 [ %102, %95 ], [ %111, %107 ]
  %261 = icmp eq %struct.jpeg_marker_struct* %96, null
  br i1 %261, label %281, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 60
  %264 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %263, align 8
  %265 = icmp eq %struct.jpeg_marker_struct* %264, null
  br i1 %265, label %273, label %266

266:                                              ; preds = %262, %266
  %267 = phi %struct.jpeg_marker_struct* [ %269, %266 ], [ %264, %262 ]
  %268 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %267, i64 0, i32 0
  %269 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %268, align 8
  %270 = icmp eq %struct.jpeg_marker_struct* %269, null
  br i1 %270, label %271, label %266

271:                                              ; preds = %266
  %272 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %267, i64 0, i32 0
  br label %273

273:                                              ; preds = %262, %271
  %274 = phi %struct.jpeg_marker_struct** [ %272, %271 ], [ %263, %262 ]
  store %struct.jpeg_marker_struct* %96, %struct.jpeg_marker_struct** %274, align 8
  %275 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 4
  %276 = load i8*, i8** %275, align 8
  %277 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 2
  %278 = load i32, i32* %277, align 4
  %279 = sub i32 %278, %98
  %280 = zext i32 %279 to i64
  br label %281

281:                                              ; preds = %41, %257, %273
  %282 = phi i64 [ %260, %273 ], [ %260, %257 ], [ %44, %41 ]
  %283 = phi i8* [ %259, %273 ], [ %259, %257 ], [ %45, %41 ]
  %284 = phi i32 [ %98, %273 ], [ %98, %257 ], [ 0, %41 ]
  %285 = phi i8* [ %276, %273 ], [ %258, %257 ], [ null, %41 ]
  %286 = phi i64 [ %280, %273 ], [ %100, %257 ], [ %49, %41 ]
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %5, align 8
  %287 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %288 = load i32, i32* %287, align 4
  switch i32 %288, label %365 [
    i32 224, label %289
    i32 238, label %290
  ]

289:                                              ; preds = %281
  tail call fastcc void @examine_app0(%struct.jpeg_decompress_struct* %0, i8* %285, i32 %284, i64 %286)
  br label %380

290:                                              ; preds = %281
  %291 = icmp ugt i32 %284, 11
  br i1 %291, label %292, label %353

292:                                              ; preds = %290
  %293 = load i8, i8* %285, align 1
  %294 = icmp eq i8 %293, 65
  br i1 %294, label %295, label %353

295:                                              ; preds = %292
  %296 = getelementptr inbounds i8, i8* %285, i64 1
  %297 = load i8, i8* %296, align 1
  %298 = icmp eq i8 %297, 100
  br i1 %298, label %299, label %353

299:                                              ; preds = %295
  %300 = getelementptr inbounds i8, i8* %285, i64 2
  %301 = load i8, i8* %300, align 1
  %302 = icmp eq i8 %301, 111
  br i1 %302, label %303, label %353

303:                                              ; preds = %299
  %304 = getelementptr inbounds i8, i8* %285, i64 3
  %305 = load i8, i8* %304, align 1
  %306 = icmp eq i8 %305, 98
  br i1 %306, label %307, label %353

307:                                              ; preds = %303
  %308 = getelementptr inbounds i8, i8* %285, i64 4
  %309 = load i8, i8* %308, align 1
  %310 = icmp eq i8 %309, 101
  br i1 %310, label %311, label %353

311:                                              ; preds = %307
  %312 = getelementptr inbounds i8, i8* %285, i64 5
  %313 = load i8, i8* %312, align 1
  %314 = zext i8 %313 to i32
  %315 = shl nuw nsw i32 %314, 8
  %316 = getelementptr inbounds i8, i8* %285, i64 6
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = or i32 %315, %318
  %320 = getelementptr inbounds i8, i8* %285, i64 7
  %321 = load i8, i8* %320, align 1
  %322 = zext i8 %321 to i32
  %323 = shl nuw nsw i32 %322, 8
  %324 = getelementptr inbounds i8, i8* %285, i64 8
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i32
  %327 = or i32 %323, %326
  %328 = getelementptr inbounds i8, i8* %285, i64 9
  %329 = load i8, i8* %328, align 1
  %330 = zext i8 %329 to i32
  %331 = shl nuw nsw i32 %330, 8
  %332 = getelementptr inbounds i8, i8* %285, i64 10
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i32
  %335 = or i32 %331, %334
  %336 = getelementptr inbounds i8, i8* %285, i64 11
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i32
  %339 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %340 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %339, align 8
  %341 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %340, i64 0, i32 6, i32 0, i64 0
  store i32 %319, i32* %341, align 4
  %342 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %340, i64 0, i32 6, i32 0, i64 1
  store i32 %327, i32* %342, align 4
  %343 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %340, i64 0, i32 6, i32 0, i64 2
  store i32 %335, i32* %343, align 4
  %344 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %340, i64 0, i32 6, i32 0, i64 3
  store i32 %338, i32* %344, align 4
  %345 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %339, align 8
  %346 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %345, i64 0, i32 5
  store i32 76, i32* %346, align 8
  %347 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %339, align 8
  %348 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %347, i64 0, i32 1
  %349 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %348, align 8
  %350 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %349(%struct.jpeg_common_struct* %350, i32 1) #4
  %351 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  store i32 1, i32* %351, align 8
  %352 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  store i8 %337, i8* %352, align 4
  br label %380

353:                                              ; preds = %307, %303, %299, %295, %292, %290
  %354 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %355 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %354, align 8
  %356 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %355, i64 0, i32 5
  store i32 78, i32* %356, align 8
  %357 = trunc i64 %286 to i32
  %358 = add i32 %284, %357
  %359 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %354, align 8
  %360 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %359, i64 0, i32 6, i32 0, i64 0
  store i32 %358, i32* %360, align 4
  %361 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %354, align 8
  %362 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %361, i64 0, i32 1
  %363 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %362, align 8
  %364 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %363(%struct.jpeg_common_struct* %364, i32 1) #4
  br label %380

365:                                              ; preds = %281
  %366 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %367 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %366, align 8
  %368 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %367, i64 0, i32 5
  store i32 91, i32* %368, align 8
  %369 = load i32, i32* %287, align 4
  %370 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %366, align 8
  %371 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %370, i64 0, i32 6, i32 0, i64 0
  store i32 %369, i32* %371, align 4
  %372 = trunc i64 %286 to i32
  %373 = add i32 %284, %372
  %374 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %366, align 8
  %375 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %374, i64 0, i32 6, i32 0, i64 1
  store i32 %373, i32* %375, align 4
  %376 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %366, align 8
  %377 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %376, i64 0, i32 1
  %378 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %377, align 8
  %379 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %378(%struct.jpeg_common_struct* %379, i32 1) #4
  br label %380

380:                                              ; preds = %353, %311, %365, %289
  store i8* %283, i8** %9, align 8
  store i64 %282, i64* %11, align 8
  %381 = icmp sgt i64 %286, 0
  br i1 %381, label %382, label %386

382:                                              ; preds = %380
  %383 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8
  %384 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %383, i64 0, i32 4
  %385 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %384, align 8
  tail call void %385(%struct.jpeg_decompress_struct* %0, i64 %286) #4
  br label %386

386:                                              ; preds = %119, %380, %382, %33, %16
  %387 = phi i32 [ 0, %16 ], [ 0, %33 ], [ 1, %382 ], [ 1, %380 ], [ 0, %119 ]
  ret i32 %387
}

; Function Attrs: nounwind ssp uwtable
define hidden void @jpeg_set_marker_processor(%struct.jpeg_decompress_struct*, i32, i32 (%struct.jpeg_decompress_struct*)*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %5 = bitcast %struct.jpeg_marker_reader** %4 to %struct.my_marker_reader**
  %6 = load %struct.my_marker_reader*, %struct.my_marker_reader** %5, align 8
  %7 = icmp eq i32 %1, 254
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 1
  store i32 (%struct.jpeg_decompress_struct*)* %2, i32 (%struct.jpeg_decompress_struct*)** %9, align 8
  br label %27

10:                                               ; preds = %3
  %11 = and i32 %1, -16
  %12 = icmp eq i32 %11, 224
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = add nsw i32 %1, -224
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 2, i64 %15
  store i32 (%struct.jpeg_decompress_struct*)* %2, i32 (%struct.jpeg_decompress_struct*)** %16, align 8
  br label %27

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 68, i32* %20, align 8
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %22, align 4
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i64 0, i32 0
  %25 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %24, align 8
  %26 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %25(%struct.jpeg_common_struct* %26) #4
  br label %27

27:                                               ; preds = %13, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @get_sof(%struct.jpeg_decompress_struct*, i32, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %5 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 45
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 46
  store i32 %2, i32* %11, align 4
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %14, align 8
  %16 = tail call i32 %15(%struct.jpeg_decompress_struct* %0) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %311, label %18

18:                                               ; preds = %13
  %19 = load i8*, i8** %6, align 8
  %20 = load i64, i64* %8, align 8
  br label %21

21:                                               ; preds = %18, %3
  %22 = phi i8* [ %19, %18 ], [ %7, %3 ]
  %23 = phi i64 [ %20, %18 ], [ %9, %3 ]
  %24 = add i64 %23, -1
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  %26 = load i8, i8* %22, align 1
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 8
  %29 = icmp eq i64 %24, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %32 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %31, align 8
  %33 = tail call i32 %32(%struct.jpeg_decompress_struct* %0) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %311, label %35

35:                                               ; preds = %30
  %36 = load i8*, i8** %6, align 8
  %37 = load i64, i64* %8, align 8
  br label %38

38:                                               ; preds = %35, %21
  %39 = phi i8* [ %36, %35 ], [ %25, %21 ]
  %40 = phi i64 [ %37, %35 ], [ %24, %21 ]
  %41 = add i64 %40, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %39, align 1
  %44 = zext i8 %43 to i64
  %45 = or i64 %28, %44
  %46 = icmp eq i64 %41, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %38
  %48 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %49 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %48, align 8
  %50 = tail call i32 %49(%struct.jpeg_decompress_struct* %0) #4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %311, label %52

52:                                               ; preds = %47
  %53 = load i8*, i8** %6, align 8
  %54 = load i64, i64* %8, align 8
  br label %55

55:                                               ; preds = %52, %38
  %56 = phi i8* [ %53, %52 ], [ %42, %38 ]
  %57 = phi i64 [ %54, %52 ], [ %41, %38 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 43
  store i32 %61, i32* %62, align 8
  %63 = icmp eq i64 %58, 0
  br i1 %63, label %64, label %72

64:                                               ; preds = %55
  %65 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %65, align 8
  %67 = tail call i32 %66(%struct.jpeg_decompress_struct* %0) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %311, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %6, align 8
  %71 = load i64, i64* %8, align 8
  br label %72

72:                                               ; preds = %69, %55
  %73 = phi i8* [ %70, %69 ], [ %59, %55 ]
  %74 = phi i64 [ %71, %69 ], [ %58, %55 ]
  %75 = add i64 %74, -1
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  %77 = load i8, i8* %73, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 8
  store i32 %79, i32* %80, align 4
  %81 = icmp eq i64 %75, 0
  br i1 %81, label %82, label %91

82:                                               ; preds = %72
  %83 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %84 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %83, align 8
  %85 = tail call i32 %84(%struct.jpeg_decompress_struct* %0) #4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %311, label %87

87:                                               ; preds = %82
  %88 = load i8*, i8** %6, align 8
  %89 = load i64, i64* %8, align 8
  %90 = load i32, i32* %80, align 4
  br label %91

91:                                               ; preds = %87, %72
  %92 = phi i32 [ %90, %87 ], [ %79, %72 ]
  %93 = phi i8* [ %88, %87 ], [ %76, %72 ]
  %94 = phi i64 [ %89, %87 ], [ %75, %72 ]
  %95 = add i64 %94, -1
  %96 = getelementptr inbounds i8, i8* %93, i64 1
  %97 = load i8, i8* %93, align 1
  %98 = zext i8 %97 to i32
  %99 = add i32 %92, %98
  store i32 %99, i32* %80, align 4
  %100 = icmp eq i64 %95, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %91
  %102 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %103 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %102, align 8
  %104 = tail call i32 %103(%struct.jpeg_decompress_struct* %0) #4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %311, label %106

106:                                              ; preds = %101
  %107 = load i8*, i8** %6, align 8
  %108 = load i64, i64* %8, align 8
  br label %109

109:                                              ; preds = %106, %91
  %110 = phi i8* [ %107, %106 ], [ %96, %91 ]
  %111 = phi i64 [ %108, %106 ], [ %95, %91 ]
  %112 = add i64 %111, -1
  %113 = getelementptr inbounds i8, i8* %110, i64 1
  %114 = load i8, i8* %110, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 7
  store i32 %116, i32* %117, align 8
  %118 = icmp eq i64 %112, 0
  br i1 %118, label %119, label %128

119:                                              ; preds = %109
  %120 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %121 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %120, align 8
  %122 = tail call i32 %121(%struct.jpeg_decompress_struct* %0) #4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %311, label %124

124:                                              ; preds = %119
  %125 = load i8*, i8** %6, align 8
  %126 = load i64, i64* %8, align 8
  %127 = load i32, i32* %117, align 8
  br label %128

128:                                              ; preds = %124, %109
  %129 = phi i32 [ %127, %124 ], [ %116, %109 ]
  %130 = phi i8* [ %125, %124 ], [ %113, %109 ]
  %131 = phi i64 [ %126, %124 ], [ %112, %109 ]
  %132 = add i64 %131, -1
  %133 = getelementptr inbounds i8, i8* %130, i64 1
  %134 = load i8, i8* %130, align 1
  %135 = zext i8 %134 to i32
  %136 = add i32 %129, %135
  store i32 %136, i32* %117, align 8
  %137 = icmp eq i64 %132, 0
  br i1 %137, label %138, label %146

138:                                              ; preds = %128
  %139 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %140 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %139, align 8
  %141 = tail call i32 %140(%struct.jpeg_decompress_struct* %0) #4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %311, label %143

143:                                              ; preds = %138
  %144 = load i8*, i8** %6, align 8
  %145 = load i64, i64* %8, align 8
  br label %146

146:                                              ; preds = %143, %128
  %147 = phi i8* [ %144, %143 ], [ %133, %128 ]
  %148 = phi i64 [ %145, %143 ], [ %132, %128 ]
  %149 = load i8, i8* %147, align 1
  %150 = zext i8 %149 to i32
  %151 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  store i32 %150, i32* %151, align 8
  %152 = add nsw i64 %45, -8
  %153 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 0
  %156 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %157 = load i32, i32* %156, align 4
  store i32 %157, i32* %155, align 4
  %158 = load i32, i32* %117, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 1
  store i32 %158, i32* %159, align 4
  %160 = load i32, i32* %80, align 4
  %161 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 2
  store i32 %160, i32* %161, align 4
  %162 = load i32, i32* %151, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 3
  store i32 %162, i32* %163, align 4
  %164 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %165 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %164, i64 0, i32 5
  store i32 100, i32* %165, align 8
  %166 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %167 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %166, i64 0, i32 1
  %168 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %167, align 8
  %169 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %168(%struct.jpeg_common_struct* %169, i32 1) #4
  %170 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %171 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %170, align 8
  %172 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %171, i64 0, i32 4
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %146
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 5
  store i32 58, i32* %177, align 8
  %178 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %179 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %178, i64 0, i32 0
  %180 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %179, align 8
  tail call void %180(%struct.jpeg_common_struct* %169) #4
  br label %181

181:                                              ; preds = %146, %175
  %182 = load i32, i32* %80, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %190, label %184

184:                                              ; preds = %181
  %185 = load i32, i32* %117, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = load i32, i32* %151, align 8
  %189 = icmp slt i32 %188, 1
  br i1 %189, label %190, label %197

190:                                              ; preds = %187, %184, %181
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i64 0, i32 5
  store i32 32, i32* %192, align 8
  %193 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %194 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %193, i64 0, i32 0
  %195 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %194, align 8
  tail call void %195(%struct.jpeg_common_struct* %169) #4
  %196 = load i32, i32* %151, align 8
  br label %197

197:                                              ; preds = %190, %187
  %198 = phi i32 [ %196, %190 ], [ %188, %187 ]
  %199 = mul nsw i32 %198, 3
  %200 = sext i32 %199 to i64
  %201 = icmp eq i64 %152, %200
  br i1 %201, label %208, label %202

202:                                              ; preds = %197
  %203 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %203, i64 0, i32 5
  store i32 11, i32* %204, align 8
  %205 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %206 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %205, i64 0, i32 0
  %207 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %206, align 8
  tail call void %207(%struct.jpeg_common_struct* %169) #4
  br label %208

208:                                              ; preds = %197, %202
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %210 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %209, align 8
  %211 = icmp eq %struct.jpeg_component_info* %210, null
  br i1 %211, label %212, label %223

212:                                              ; preds = %208
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %214 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %214, i64 0, i32 0
  %216 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %215, align 8
  %217 = load i32, i32* %151, align 8
  %218 = sext i32 %217 to i64
  %219 = mul nsw i64 %218, 96
  %220 = tail call i8* %216(%struct.jpeg_common_struct* %169, i32 1, i64 %219) #4
  %221 = bitcast %struct.jpeg_component_info** %209 to i8**
  store i8* %220, i8** %221, align 8
  %222 = bitcast i8* %220 to %struct.jpeg_component_info*
  br label %223

223:                                              ; preds = %212, %208
  %224 = phi %struct.jpeg_component_info* [ %222, %212 ], [ %210, %208 ]
  %225 = getelementptr inbounds i8, i8* %147, i64 1
  %226 = add i64 %148, -1
  %227 = load i32, i32* %151, align 8
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %306

229:                                              ; preds = %223
  %230 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  br label %231

231:                                              ; preds = %229, %280
  %232 = phi i64 [ %226, %229 ], [ %303, %280 ]
  %233 = phi i8* [ %225, %229 ], [ %302, %280 ]
  %234 = phi %struct.jpeg_component_info* [ %224, %229 ], [ %301, %280 ]
  %235 = phi i32 [ 0, %229 ], [ %300, %280 ]
  %236 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 1
  store i32 %235, i32* %236, align 4
  %237 = icmp eq i64 %232, 0
  br i1 %237, label %238, label %245

238:                                              ; preds = %231
  %239 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %230, align 8
  %240 = tail call i32 %239(%struct.jpeg_decompress_struct* %0) #4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %311, label %242

242:                                              ; preds = %238
  %243 = load i8*, i8** %6, align 8
  %244 = load i64, i64* %8, align 8
  br label %245

245:                                              ; preds = %242, %231
  %246 = phi i8* [ %243, %242 ], [ %233, %231 ]
  %247 = phi i64 [ %244, %242 ], [ %232, %231 ]
  %248 = add i64 %247, -1
  %249 = getelementptr inbounds i8, i8* %246, i64 1
  %250 = load i8, i8* %246, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 0
  store i32 %251, i32* %252, align 8
  %253 = icmp eq i64 %248, 0
  br i1 %253, label %254, label %261

254:                                              ; preds = %245
  %255 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %230, align 8
  %256 = tail call i32 %255(%struct.jpeg_decompress_struct* %0) #4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %311, label %258

258:                                              ; preds = %254
  %259 = load i8*, i8** %6, align 8
  %260 = load i64, i64* %8, align 8
  br label %261

261:                                              ; preds = %258, %245
  %262 = phi i8* [ %259, %258 ], [ %249, %245 ]
  %263 = phi i64 [ %260, %258 ], [ %248, %245 ]
  %264 = add i64 %263, -1
  %265 = getelementptr inbounds i8, i8* %262, i64 1
  %266 = load i8, i8* %262, align 1
  %267 = zext i8 %266 to i32
  %268 = lshr i32 %267, 4
  %269 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 2
  store i32 %268, i32* %269, align 8
  %270 = and i32 %267, 15
  %271 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 3
  store i32 %270, i32* %271, align 4
  %272 = icmp eq i64 %264, 0
  br i1 %272, label %273, label %280

273:                                              ; preds = %261
  %274 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %230, align 8
  %275 = tail call i32 %274(%struct.jpeg_decompress_struct* %0) #4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %311, label %277

277:                                              ; preds = %273
  %278 = load i8*, i8** %6, align 8
  %279 = load i64, i64* %8, align 8
  br label %280

280:                                              ; preds = %277, %261
  %281 = phi i8* [ %278, %277 ], [ %265, %261 ]
  %282 = phi i64 [ %279, %277 ], [ %264, %261 ]
  %283 = load i8, i8* %281, align 1
  %284 = zext i8 %283 to i32
  %285 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 0, i32 4
  store i32 %284, i32* %285, align 8
  %286 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %287 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 0
  %288 = load i32, i32* %252, align 8
  store i32 %288, i32* %287, align 4
  %289 = load i32, i32* %269, align 8
  %290 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 1
  store i32 %289, i32* %290, align 4
  %291 = load i32, i32* %271, align 4
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 2
  store i32 %291, i32* %292, align 4
  %293 = load i32, i32* %285, align 8
  %294 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 3
  store i32 %293, i32* %294, align 4
  %295 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %296 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %295, i64 0, i32 5
  store i32 101, i32* %296, align 8
  %297 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %298 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %297, i64 0, i32 1
  %299 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %298, align 8
  tail call void %299(%struct.jpeg_common_struct* %169, i32 1) #4
  %300 = add nuw nsw i32 %235, 1
  %301 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %234, i64 1
  %302 = getelementptr inbounds i8, i8* %281, i64 1
  %303 = add i64 %282, -1
  %304 = load i32, i32* %151, align 8
  %305 = icmp slt i32 %300, %304
  br i1 %305, label %231, label %306

306:                                              ; preds = %280, %223
  %307 = phi i8* [ %225, %223 ], [ %302, %280 ]
  %308 = phi i64 [ %226, %223 ], [ %303, %280 ]
  %309 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %170, align 8
  %310 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %309, i64 0, i32 4
  store i32 1, i32* %310, align 4
  store i8* %307, i8** %6, align 8
  store i64 %308, i64* %8, align 8
  br label %311

311:                                              ; preds = %273, %254, %238, %138, %119, %101, %82, %64, %47, %30, %13, %306
  %312 = phi i32 [ 1, %306 ], [ 0, %13 ], [ 0, %30 ], [ 0, %47 ], [ 0, %64 ], [ 0, %82 ], [ 0, %101 ], [ 0, %119 ], [ 0, %138 ], [ 0, %238 ], [ 0, %254 ], [ 0, %273 ]
  ret i32 %312
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @examine_app0(%struct.jpeg_decompress_struct*, i8* nocapture readonly, i32, i64) unnamed_addr #0 {
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, %3
  %7 = icmp ugt i32 %2, 13
  br i1 %7, label %8, label %140

8:                                                ; preds = %4
  %9 = load i8, i8* %1, align 1
  %10 = icmp eq i8 %9, 74
  br i1 %10, label %11, label %212

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 70
  br i1 %14, label %15, label %145

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 73
  br i1 %18, label %19, label %145

19:                                               ; preds = %15
  %20 = getelementptr inbounds i8, i8* %1, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 70
  br i1 %22, label %23, label %145

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %1, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %145

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 51
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %1, i64 5
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 52
  store i8 %30, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %1, i64 6
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 53
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %1, i64 7
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 54
  store i8 %36, i8* %37, align 2
  %38 = getelementptr inbounds i8, i8* %1, i64 8
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw i16 %40, 8
  %42 = getelementptr inbounds i8, i8* %1, i64 9
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = or i16 %41, %44
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 55
  store i16 %45, i16* %46, align 4
  %47 = getelementptr inbounds i8, i8* %1, i64 10
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw i16 %49, 8
  %51 = getelementptr inbounds i8, i8* %1, i64 11
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = or i16 %50, %53
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 56
  store i16 %54, i16* %55, align 2
  %56 = icmp eq i8 %30, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %27
  %58 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  br label %77

59:                                               ; preds = %27
  %60 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i64 0, i32 5
  store i32 119, i32* %62, align 8
  %63 = load i8, i8* %31, align 8
  %64 = zext i8 %63 to i32
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 6, i32 0, i64 0
  store i32 %64, i32* %66, align 4
  %67 = load i8, i8* %34, align 1
  %68 = zext i8 %67 to i32
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 6, i32 0, i64 1
  store i32 %68, i32* %70, align 4
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %60, align 8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 1
  %73 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %72, align 8
  %74 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %73(%struct.jpeg_common_struct* %74, i32 -1) #4
  %75 = load i8, i8* %31, align 8
  %76 = zext i8 %75 to i32
  br label %77

77:                                               ; preds = %57, %59
  %78 = phi %struct.jpeg_common_struct* [ %58, %57 ], [ %74, %59 ]
  %79 = phi i32 [ 1, %57 ], [ %76, %59 ]
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %81 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %82 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 6, i32 0, i64 0
  store i32 %79, i32* %82, align 4
  %83 = load i8, i8* %34, align 1
  %84 = zext i8 %83 to i32
  %85 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 6, i32 0, i64 1
  store i32 %84, i32* %85, align 4
  %86 = load i16, i16* %46, align 4
  %87 = zext i16 %86 to i32
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 6, i32 0, i64 2
  store i32 %87, i32* %88, align 4
  %89 = load i16, i16* %55, align 2
  %90 = zext i16 %89 to i32
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 6, i32 0, i64 3
  store i32 %90, i32* %91, align 4
  %92 = load i8, i8* %37, align 2
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %81, i64 0, i32 6, i32 0, i64 4
  store i32 %93, i32* %94, align 4
  %95 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %96 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %95, i64 0, i32 5
  store i32 87, i32* %96, align 8
  %97 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %98 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %97, i64 0, i32 1
  %99 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %98, align 8
  tail call void %99(%struct.jpeg_common_struct* %78, i32 1) #4
  %100 = getelementptr inbounds i8, i8* %1, i64 12
  %101 = load i8, i8* %100, align 1
  %102 = getelementptr inbounds i8, i8* %1, i64 13
  %103 = load i8, i8* %102, align 1
  %104 = or i8 %103, %101
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %122, label %106

106:                                              ; preds = %77
  %107 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %108 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %107, i64 0, i32 5
  store i32 90, i32* %108, align 8
  %109 = load i8, i8* %100, align 1
  %110 = zext i8 %109 to i32
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i64 0, i32 6, i32 0, i64 0
  store i32 %110, i32* %112, align 4
  %113 = load i8, i8* %102, align 1
  %114 = zext i8 %113 to i32
  %115 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %116 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %115, i64 0, i32 6, i32 0, i64 1
  store i32 %114, i32* %116, align 4
  %117 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %118 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %117, i64 0, i32 1
  %119 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %118, align 8
  tail call void %119(%struct.jpeg_common_struct* %78, i32 1) #4
  %120 = load i8, i8* %100, align 1
  %121 = load i8, i8* %102, align 1
  br label %122

122:                                              ; preds = %77, %106
  %123 = phi i8 [ %103, %77 ], [ %121, %106 ]
  %124 = phi i8 [ %101, %77 ], [ %120, %106 ]
  %125 = add nsw i64 %6, -14
  %126 = zext i8 %124 to i64
  %127 = zext i8 %123 to i64
  %128 = mul nuw nsw i64 %126, 3
  %129 = mul nuw nsw i64 %128, %127
  %130 = icmp eq i64 %125, %129
  br i1 %130, label %223, label %131

131:                                              ; preds = %122
  %132 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %133 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %132, i64 0, i32 5
  store i32 88, i32* %133, align 8
  %134 = trunc i64 %125 to i32
  %135 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %136 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %135, i64 0, i32 6, i32 0, i64 0
  store i32 %134, i32* %136, align 4
  %137 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %80, align 8
  %138 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %137, i64 0, i32 1
  %139 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %138, align 8
  tail call void %139(%struct.jpeg_common_struct* %78, i32 1) #4
  br label %223

140:                                              ; preds = %4
  %141 = icmp ugt i32 %2, 5
  br i1 %141, label %142, label %212

142:                                              ; preds = %140
  %143 = load i8, i8* %1, align 1
  %144 = icmp eq i8 %143, 74
  br i1 %144, label %145, label %212

145:                                              ; preds = %23, %19, %15, %11, %142
  %146 = getelementptr inbounds i8, i8* %1, i64 1
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 70
  br i1 %148, label %149, label %212

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %1, i64 2
  %151 = load i8, i8* %150, align 1
  %152 = icmp eq i8 %151, 88
  br i1 %152, label %153, label %212

153:                                              ; preds = %149
  %154 = getelementptr inbounds i8, i8* %1, i64 3
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 88
  br i1 %156, label %157, label %212

157:                                              ; preds = %153
  %158 = getelementptr inbounds i8, i8* %1, i64 4
  %159 = load i8, i8* %158, align 1
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %212

161:                                              ; preds = %157
  %162 = getelementptr inbounds i8, i8* %1, i64 5
  %163 = load i8, i8* %162, align 1
  switch i8 %163, label %197 [
    i8 16, label %164
    i8 17, label %175
    i8 19, label %186
  ]

164:                                              ; preds = %161
  %165 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %166 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %165, align 8
  %167 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %166, i64 0, i32 5
  store i32 108, i32* %167, align 8
  %168 = trunc i64 %6 to i32
  %169 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %165, align 8
  %170 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %169, i64 0, i32 6, i32 0, i64 0
  store i32 %168, i32* %170, align 4
  %171 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %165, align 8
  %172 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %171, i64 0, i32 1
  %173 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %172, align 8
  %174 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %173(%struct.jpeg_common_struct* %174, i32 1) #4
  br label %223

175:                                              ; preds = %161
  %176 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %177 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %176, align 8
  %178 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %177, i64 0, i32 5
  store i32 109, i32* %178, align 8
  %179 = trunc i64 %6 to i32
  %180 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %176, align 8
  %181 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %180, i64 0, i32 6, i32 0, i64 0
  store i32 %179, i32* %181, align 4
  %182 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %176, align 8
  %183 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %182, i64 0, i32 1
  %184 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %183, align 8
  %185 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %184(%struct.jpeg_common_struct* %185, i32 1) #4
  br label %223

186:                                              ; preds = %161
  %187 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %188 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8
  %189 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %188, i64 0, i32 5
  store i32 110, i32* %189, align 8
  %190 = trunc i64 %6 to i32
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i64 0, i32 6, i32 0, i64 0
  store i32 %190, i32* %192, align 4
  %193 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %187, align 8
  %194 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %193, i64 0, i32 1
  %195 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %194, align 8
  %196 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %195(%struct.jpeg_common_struct* %196, i32 1) #4
  br label %223

197:                                              ; preds = %161
  %198 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %199 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %198, align 8
  %200 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %199, i64 0, i32 5
  store i32 89, i32* %200, align 8
  %201 = load i8, i8* %162, align 1
  %202 = zext i8 %201 to i32
  %203 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %198, align 8
  %204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %203, i64 0, i32 6, i32 0, i64 0
  store i32 %202, i32* %204, align 4
  %205 = trunc i64 %6 to i32
  %206 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %198, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %206, i64 0, i32 6, i32 0, i64 1
  store i32 %205, i32* %207, align 4
  %208 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %198, align 8
  %209 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %208, i64 0, i32 1
  %210 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %209, align 8
  %211 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %210(%struct.jpeg_common_struct* %211, i32 1) #4
  br label %223

212:                                              ; preds = %8, %157, %153, %149, %145, %142, %140
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %214 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %214, i64 0, i32 5
  store i32 77, i32* %215, align 8
  %216 = trunc i64 %6 to i32
  %217 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %218 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %217, i64 0, i32 6, i32 0, i64 0
  store i32 %216, i32* %218, align 4
  %219 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %213, align 8
  %220 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %219, i64 0, i32 1
  %221 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %220, align 8
  %222 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %221(%struct.jpeg_common_struct* %222, i32 1) #4
  br label %223

223:                                              ; preds = %122, %212, %197, %186, %175, %164, %131
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
