; ModuleID = '../../third_party/blink/renderer/core/aom/accessible_node.cc'
source_filename = "../../third_party/blink/renderer/core/aom/accessible_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.224", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.224" = type { %"class.base::RefCounted.225" }
%"class.base::RefCounted.225" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.228" }
%"class.blink::HeapHashMap.228" = type { %"class.WTF::HashMap.231" }
%"class.WTF::HashMap.231" = type { %"class.WTF::HashTable.232" }
%"class.WTF::HashTable.232" = type <{ %"struct.WTF::KeyValuePair.234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.234" = type { %"class.blink::WeakMember.235", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.237", i32, [4 x i8], %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.373", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.390", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.408", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.415", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.353", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__atomic_base.275" }
%"struct.std::__1::__atomic_base.275" = type { %"struct.std::__1::__cxx_atomic_impl.276" }
%"struct.std::__1::__cxx_atomic_impl.276" = type { %"struct.std::__1::__cxx_atomic_base_impl.277" }
%"struct.std::__1::__cxx_atomic_base_impl.277" = type { i64 }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::Worklist.291"* }
%"class.blink::Worklist.291" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::Worklist.305"* }
%"class.blink::Worklist.305" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::Worklist.312"* }
%"class.blink::Worklist.312" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::Worklist.319"* }
%"class.blink::Worklist.319" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::Worklist.326"* }
%"class.blink::Worklist.326" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.273" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { i64 }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { float }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.356", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"struct.std::__1::pair.383"*, i32, i32 }
%"struct.std::__1::pair.383" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.396" }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.284"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.291"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.298"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.305"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.312"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.650" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.414 }
%class.scoped_refptr.414 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.415" = type { %"struct.std::__1::__atomic_base.416" }
%"struct.std::__1::__atomic_base.416" = type { %"struct.std::__1::__cxx_atomic_impl.417" }
%"struct.std::__1::__cxx_atomic_impl.417" = type { %"struct.std::__1::__cxx_atomic_base_impl.418" }
%"struct.std::__1::__cxx_atomic_base_impl.418" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.184" }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i32 }
%"class.blink::AccessibleNode" = type { %"class.blink::EventTargetWithInlineData", %"class.WTF::Vector.8", %"class.WTF::Vector.14", %"class.WTF::Vector.20", %"class.WTF::Vector.26", %"class.WTF::Vector.32", %"class.blink::HeapVector.38", %"class.blink::HeapVector.48", %"class.blink::Member.73", %"class.blink::Member.100", %"class.blink::HeapVector.65", %"class.blink::Member.45" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { %"struct.std::__1::pair.11"*, i32, i32 }
%"struct.std::__1::pair.11" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"struct.std::__1::pair.17"*, i32, i32 }
%"struct.std::__1::pair.17" = type <{ i32, i8, [3 x i8] }>
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"struct.std::__1::pair.23"*, i32, i32 }
%"struct.std::__1::pair.23" = type { i32, float }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"struct.std::__1::pair.29"*, i32, i32 }
%"struct.std::__1::pair.29" = type { i32, i32 }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { %"struct.std::__1::pair.35"*, i32, i32 }
%"struct.std::__1::pair.35" = type { i32, i32 }
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"struct.std::__1::pair.44"*, i32, i32 }
%"struct.std::__1::pair.44" = type { i32, %"class.blink::Member.45" }
%"class.blink::HeapVector.48" = type { %"class.WTF::Vector.51" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"struct.std::__1::pair.54"*, i32, i32 }
%"struct.std::__1::pair.54" = type { i32, %"class.blink::Member.55" }
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::AccessibleNodeList"* }
%"class.blink::AccessibleNodeList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.57", %"class.blink::HeapVector.65" }
%"class.blink::HeapVector.57" = type { %"class.WTF::Vector.60" }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"struct.std::__1::pair.63"*, i32, i32 }
%"struct.std::__1::pair.63" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::Element"* }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.180", %"class.WTF::Vector.180", i8, i32, %"class.blink::Member.191", %"class.blink::Member.193", %"class.blink::Member.195", %"class.blink::Member.197", %"class.blink::Member.199", %"class.blink::Member.201", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.209", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.215", %"class.blink::Member.217", %"class.blink::Member.139", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.220", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.115", %"class.blink::Member.73", %"class.blink::Member.431", %"class.blink::Member.73", %"class.blink::Member.73", %"class.blink::Member.73", %"class.blink::UserActionElementSet", %"class.blink::Member.440", double, double, i64, i64, %"class.blink::HeapHashSet.442", %"class.blink::HeapHashSet.449", i16, i8, %"class.blink::Member.456", %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::TextLinkColors", %"class.blink::Member.464", i8, [7 x i8], %"class.blink::HeapHashMap.466", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.73", %"class.WTF::Vector.473", %"class.blink::Member.478", %"class.blink::Member.482", i8, %"class.blink::Member.73", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.484", %"class.blink::HeapVector.486", %"class.std::__1::unique_ptr.494", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.500", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.513", %"class.WTF::Vector.515", i8, i8, %"class.std::__1::unique_ptr.520", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.115", %"class.blink::HeapVector.526", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.534", i8, i32, %"class.blink::Member.536", %"class.blink::Member.538", %"class.blink::Member.540", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.542", %"class.WTF::HashMap.544", %"class.blink::Member.549", %"class.blink::Member.551", %"class.blink::Member.553", %"class.blink::Member.555", %"class.blink::Member.100", %"class.blink::Member.100", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.557", i8, i32, %"class.blink::Member.564", %"class.blink::Member.566", i32, %"class.blink::Member.568", %"class.blink::Member.570", %"class.blink::Member.572", %"class.std::__1::unique_ptr.574", i64, %"class.std::__1::unique_ptr.580", i32, i32, %"class.blink::Member.586", %"class.blink::Member.588", %"class.blink::Member.590", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.592", %"class.WTF::Vector.594", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.599", %"class.blink::Member.606", %"class.std::__1::unique_ptr.608", %"class.blink::Member.614", i8, i8, %"class.WTF::String", %"class.blink::Member.616", i8, [7 x i8], %"class.blink::HeapHashMap.618", %"class.blink::HeapObserverSet", %"class.blink::Member.632", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.634", i32, i8, i8, %"class.blink::WeakMember.636", %"class.blink::Member.637" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.75", %"class.blink::Member.75" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::Member.75", %"class.blink::Member.75", %"class.blink::Member.79" }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.102", %"class.blink::Member.100", %"class.blink::Member.77", %"class.blink::Member.104", %"class.blink::Member.104", %"class.blink::Member.122", %"class.blink::Member.124", %"class.blink::Member.126", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.131", %"class.blink::HeapVector.133" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.111" }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.73", i32, %"class.blink::HeapVector.115" }
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.128" }
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::HeapHashMap.130"* }
%"class.blink::HeapHashMap.130" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.133" = type { %"class.WTF::Vector.136" }
%"class.WTF::Vector.136" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"class.blink::Member.139"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.173" }
%"class.blink::HeapHashMap.173" = type { %"class.WTF::HashMap.176" }
%"class.WTF::HashMap.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.184" }
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.655", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.699", i32, i8, [3 x i8], %"class.blink::HeapVector.701", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.709", %"class.blink::Member.711", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.720", %"class.blink::Member.726", %"class.blink::Member.728", i8, [7 x i8] }>
%"class.blink::Supplementable.655" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.656" }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.671" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.663" }
%"class.blink::HeapObserverSet.663" = type { i32, [4 x i8], %"class.blink::HeapHashSet.664" }
%"class.blink::HeapHashSet.664" = type { %"class.WTF::HashSet.667" }
%"class.WTF::HashSet.667" = type { %"class.WTF::HashTable.668" }
%"class.WTF::HashTable.668" = type <{ %"class.blink::WeakMember.670"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.670" = type opaque
%"class.blink::Supplementable.671" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.672" }
%"class.blink::HeapHashMap.672" = type { %"class.WTF::HashMap.675" }
%"class.WTF::HashMap.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"struct.WTF::KeyValuePair.678"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.678" = type { i8*, %"class.blink::Member.1158" }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1160" }
%"class.blink::Member.1160" = type { %"class.blink::MemberBase.1161" }
%"class.blink::MemberBase.1161" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.679, %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.683", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.689", %"class.blink::Member.193", i32, [4 x i8], %"class.WTF::HashSet.695", i32, i32 }
%class.scoped_refptr.679 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.680", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.682 }
%"class.WTF::RefCounted.680" = type { %"class.base::RefCounted.681" }
%"class.base::RefCounted.681" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.682 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.683" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.695" = type { %"class.WTF::HashTable.696" }
%"class.WTF::HashTable.696" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.701" = type { %"class.WTF::Vector.704" }
%"class.WTF::Vector.704" = type { %"class.WTF::VectorBuffer.705" }
%"class.WTF::VectorBuffer.705" = type { %"class.WTF::VectorBufferBase.706" }
%"class.WTF::VectorBufferBase.706" = type { %"class.blink::Member.707"*, i32, i32 }
%"class.blink::Member.707" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.713", i32, i32 }
%"class.blink::HeapHashMap.713" = type { %"class.WTF::HashMap.716" }
%"class.WTF::HashMap.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type opaque
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.203" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::KURL"* }
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.139" = type { %"class.blink::MemberBase.140" }
%"class.blink::MemberBase.140" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.141", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.143, %"class.WTF::Vector.144", %"class.WTF::Vector.144", %"class.blink::Member.75", %"class.blink::Member.149", %"class.blink::HeapHashSet", %"class.blink::Member.100", %"class.WTF::HashSet.157", %"class.WTF::TextPosition", %"class.blink::Member.161", %"class.blink::HeapVector.163", %"class.blink::Member.170" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.143 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.151" }
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.155" }
%"class.WTF::HashTable.155" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.78" }
%"class.WTF::HashSet.157" = type { %"class.WTF::HashTable.158" }
%"class.WTF::HashTable.158" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.163" = type { %"class.WTF::Vector.166" }
%"class.WTF::Vector.166" = type { %"class.WTF::VectorBuffer.167" }
%"class.WTF::VectorBuffer.167" = type { %"class.WTF::VectorBufferBase.168" }
%"class.WTF::VectorBufferBase.168" = type { %"class.blink::Member.149"*, i32, i32 }
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.220" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.223 }
%class.scoped_refptr.223 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.100", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.75", %"class.blink::Member.75", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.433" }
%"class.blink::HeapHashMap.433" = type { %"class.WTF::HashMap.436" }
%"class.WTF::HashMap.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"struct.WTF::KeyValuePair.439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.439" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.442" = type { %"class.WTF::HashSet.445" }
%"class.WTF::HashSet.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"class.blink::WeakMember.448"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.448" = type opaque
%"class.blink::HeapHashSet.449" = type { %"class.WTF::HashSet.452" }
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"class.blink::WeakMember.455"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.455" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.77", %"class.blink::HeapVector.133" }
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.466" = type { %"class.WTF::HashMap.469" }
%"class.WTF::HashMap.469" = type { %"class.WTF::HashTable.470" }
%"class.WTF::HashTable.470" = type <{ %"struct.WTF::KeyValuePair.472"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.472" = type opaque
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.486" = type { %"class.WTF::Vector.489" }
%"class.WTF::Vector.489" = type { %"class.WTF::VectorBuffer.490" }
%"class.WTF::VectorBuffer.490" = type { %"class.WTF::VectorBufferBase.491" }
%"class.WTF::VectorBufferBase.491" = type { %"class.blink::Member.492"*, i32, i32 }
%"class.blink::Member.492" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.500" = type { %"class.WTF::HashSet.503" }
%"class.WTF::HashSet.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"class.blink::WeakMember.506"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.506" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.507", i32, [4 x i8] }>
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"struct.std::__1::pair.510"*, i32, i32 }
%"struct.std::__1::pair.510" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.115" = type { %"class.WTF::Vector.118" }
%"class.WTF::Vector.118" = type { %"class.WTF::VectorBuffer.119" }
%"class.WTF::VectorBuffer.119" = type { %"class.WTF::VectorBufferBase.120" }
%"class.WTF::VectorBufferBase.120" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::HeapVector.526" = type { %"class.WTF::Vector.529" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { %"class.blink::Member.532"*, i32, i32 }
%"class.blink::Member.532" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.100" }
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.544" = type { %"class.WTF::HashTable.545" }
%"class.WTF::HashTable.545" = type <{ %"struct.WTF::KeyValuePair.548"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.548" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.430", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.421, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.421 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.422" }>
%"class.base::RefCountedThreadSafe.422" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.423 }
%class.scoped_refptr.423 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.424", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.424" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.425" }
%"struct.std::__1::atomic.425" = type { %"struct.std::__1::__atomic_base.426" }
%"struct.std::__1::__atomic_base.426" = type { %"struct.std::__1::__atomic_base.427" }
%"struct.std::__1::__atomic_base.427" = type { %"struct.std::__1::__cxx_atomic_impl.428" }
%"struct.std::__1::__cxx_atomic_impl.428" = type { %"struct.std::__1::__cxx_atomic_base_impl.429" }
%"struct.std::__1::__cxx_atomic_base_impl.429" = type { i8 }
%"class.blink::WeakMember.430" = type { %"class.blink::MemberBase.101" }
%"class.blink::HeapHashSet.557" = type { %"class.WTF::HashSet.560" }
%"class.WTF::HashSet.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"class.blink::Member.563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.563" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.574" = type { %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.592" = type { %"class.blink::MemberBase.593" }
%"class.blink::MemberBase.593" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.599" = type { %"class.WTF::HashMap.602" }
%"class.WTF::HashMap.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"struct.WTF::KeyValuePair.605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.605" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.618" = type { %"class.WTF::HashMap.621" }
%"class.WTF::HashMap.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"struct.WTF::KeyValuePair.624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.624" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.625" }
%"class.blink::HeapHashSet.625" = type { %"class.WTF::HashSet.628" }
%"class.WTF::HashSet.628" = type { %"class.WTF::HashTable.629" }
%"class.WTF::HashTable.629" = type <{ %"class.blink::WeakMember.631"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.631" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.100", %"class.blink::HeapHashSet.641", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.648", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.641" = type { %"class.WTF::HashSet.644" }
%"class.WTF::HashSet.644" = type { %"class.WTF::HashTable.645" }
%"class.WTF::HashTable.645" = type <{ %"class.blink::Member.647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.647" = type opaque
%"class.blink::HeapTaskRunnerTimer.648" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.649", { i64, i64 } }
%"class.blink::WeakMember.649" = type { %"class.blink::MemberBase.635" }
%"class.blink::WeakMember.636" = type { %"class.blink::MemberBase.76" }
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HeapVector.65" = type { %"class.WTF::Vector.68" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.blink::Member.45"*, i32, i32 }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::AccessibleNode"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.84" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.88", %"class.blink::Member.90", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.88" = type { %"class.WTF::SingleThreadedBitField.89" }
%"class.WTF::SingleThreadedBitField.89" = type { i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.93", %"class.WTF::AtomicString", %"class.WTF::Vector.95" }
%"class.WTF::RefCounted.93" = type { %"class.base::RefCounted.94" }
%"class.base::RefCounted.94" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.95" = type { %"class.WTF::VectorBuffer.96" }
%"class.WTF::VectorBuffer.96" = type { %"class.WTF::VectorBufferBase.97", [32 x i8] }
%"class.WTF::VectorBufferBase.97" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.90", %"class.WTF::Vector.1162" }
%"class.WTF::Vector.1162" = type { %"class.WTF::VectorBuffer.1163" }
%"class.WTF::VectorBuffer.1163" = type { %"class.WTF::VectorBufferBase.1164", [64 x i8] }
%"class.WTF::VectorBufferBase.1164" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.756", %"class.blink::Member.758", %"class.blink::Member.758", i8, %"class.blink::Member.760", %"class.blink::Member.73", %"class.blink::Member.762", %"class.WTF::HashMap.764", %"class.blink::HeapHashMap.769" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.750", %"class.blink::Member.752", %"class.blink::Member.754", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::HTMLElement"* }
%"class.blink::HTMLElement" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type opaque
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type opaque
%"class.WTF::HashMap.764" = type { %"class.WTF::HashTable.765" }
%"class.WTF::HashTable.765" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type opaque
%"class.blink::HeapHashMap.769" = type { %"class.WTF::HashMap.772" }
%"class.WTF::HashMap.772" = type { %"class.WTF::HashTable.773" }
%"class.WTF::HashTable.773" = type <{ %"struct.WTF::KeyValuePair.775"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.775" = type opaque
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::AOMPropertyClient" = type { i32 (...)** }
%"struct.std::__1::pair.784" = type { i32, %"class.blink::AccessibleNode"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.813 }
%union.anon.813 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::pair.785" = type { i32, %"class.blink::AccessibleNodeList"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.781" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.781" = type { %"class.v8::TracedReference.782" }
%"class.v8::TracedReference.782" = type { %"class.v8::BasicTracedReference.783" }
%"class.v8::BasicTracedReference.783" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.790, %"class.blink::Member.791", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.790 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.793" }
%"class.blink::Persistent.793" = type { %"class.blink::PersistentBase.794" }
%"class.blink::PersistentBase.794" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.795", %"class.blink::Member.797", %"class.blink::Member.799", %"class.blink::Member.801", i8, %"class.WTF::Vector.803" }
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.983", %"class.blink::Member.985", %"class.blink::Member.987", i8, i32, i8, i32, %"class.blink::Member.989", %"class.blink::Member.797", %"class.blink::FrameLifecycle", %"class.blink::Member.795", %"class.blink::Member.795", %"class.blink::Member.795", %"class.blink::Member.795", %"class.blink::Member.795", %"class.blink::Member.795", %"class.blink::Member.991", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1001", i8, %"class.base::UnguessableToken", %"class.absl::optional.1003", %"class.absl::optional.1008", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.795", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1022", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.795", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1048", %"class.blink::Member.1052", %"class.blink::Member.1054", %"class.blink::Member.1056", %"class.blink::Member.1058", %"class.blink::Member.1060", %"class.blink::Member.1062", %"class.blink::Member.1064", %"class.blink::HeapObserverSet.1066", %"class.blink::Member.1074", %"class.blink::Member.1076", %"class.blink::Member.1078", %"class.blink::Member.1080", %"class.blink::Member.1082", %"class.blink::Member.1084", %"class.blink::Member.1086", %"class.blink::Member.1088", %"class.blink::Member.1090", %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1125", %"class.blink::Member.983", %"class.blink::Member.983", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.1133", %"class.std::__1::unique_ptr.1139", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1022" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1023" }
%"class.blink::HeapHashMap.1023" = type { %"class.WTF::HashMap.1026" }
%"class.WTF::HashMap.1026" = type { %"class.WTF::HashTable.1027" }
%"class.WTF::HashTable.1027" = type <{ %"struct.WTF::KeyValuePair.1029"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1029" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1030" }
%"class.std::__1::unique_ptr.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.WTF::HashMap.1033", %"class.std::__1::unique_ptr.1038" }
%"class.WTF::HashMap.1033" = type { %"class.WTF::HashTable.1034" }
%"class.WTF::HashTable.1034" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type opaque
%"class.std::__1::unique_ptr.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.WTF::Vector.1041"* }
%"class.WTF::Vector.1041" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.983", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1066" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1067" }
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1096" }
%"class.WTF::Deque.1096" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.std::__1::unique_ptr.1101"*, i32, i32 }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1107", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1107" = type { %"class.std::__1::__bitset.1108" }
%"class.std::__1::__bitset.1108" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1109" }
%"class.absl::optional.1109" = type { %"class.absl::optional_internal::optional_data.1110" }
%"class.absl::optional_internal::optional_data.1110" = type { %"class.absl::optional_internal::optional_data_base.1111" }
%"class.absl::optional_internal::optional_data_base.1111" = type { %"class.absl::optional_internal::optional_data_dtor_base.1112" }
%"class.absl::optional_internal::optional_data_dtor_base.1112" = type { i8, %union.anon.1113 }
%union.anon.1113 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1114", i64, %"class.absl::optional.927", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1114" = type { %"class.absl::optional_internal::optional_data.1115" }
%"class.absl::optional_internal::optional_data.1115" = type { %"class.absl::optional_internal::optional_data_base.1116" }
%"class.absl::optional_internal::optional_data_base.1116" = type { %"class.absl::optional_internal::optional_data_dtor_base.1117" }
%"class.absl::optional_internal::optional_data_dtor_base.1117" = type { i8, %union.anon.1118 }
%union.anon.1118 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.927" = type { %"class.absl::optional_internal::optional_data.928" }
%"class.absl::optional_internal::optional_data.928" = type { %"class.absl::optional_internal::optional_data_base.929" }
%"class.absl::optional_internal::optional_data_base.929" = type { %"class.absl::optional_internal::optional_data_dtor_base.930" }
%"class.absl::optional_internal::optional_data_dtor_base.930" = type { i8, %union.anon.931 }
%union.anon.931 = type { %"class.base::TimeDelta" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1119" }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1125" = type { %"class.WTF::HashSet.1128" }
%"class.WTF::HashSet.1128" = type { %"class.WTF::HashTable.1129" }
%"class.WTF::HashTable.1129" = type <{ %"class.blink::WeakMember.1131"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1131" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1132" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1132" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.886 }
%class.scoped_refptr.886 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.795", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.993" }
%"class.std::__1::vector.993" = type { %"class.std::__1::__vector_base.994" }
%"class.std::__1::__vector_base.994" = type { %"struct.std::__1::pair.995"*, %"struct.std::__1::pair.995"*, %"class.std::__1::__compressed_pair.996" }
%"struct.std::__1::pair.995" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::pair.995"* }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1003" = type { %"class.absl::optional_internal::optional_data.1004" }
%"class.absl::optional_internal::optional_data.1004" = type { %"class.absl::optional_internal::optional_data_base.1005" }
%"class.absl::optional_internal::optional_data_base.1005" = type { %"class.absl::optional_internal::optional_data_dtor_base.1006" }
%"class.absl::optional_internal::optional_data_dtor_base.1006" = type { i8, %union.anon.1007 }
%union.anon.1007 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1008" = type { %"class.absl::optional_internal::optional_data.1009" }
%"class.absl::optional_internal::optional_data.1009" = type { %"class.absl::optional_internal::optional_data_base.1010" }
%"class.absl::optional_internal::optional_data_base.1010" = type { %"class.absl::optional_internal::optional_data_dtor_base.1011" }
%"class.absl::optional_internal::optional_data_dtor_base.1011" = type { i8, %union.anon.1012 }
%union.anon.1012 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1013" }
%"class.blink::HeapHashSet.1013" = type { %"class.WTF::HashSet.1016" }
%"class.WTF::HashSet.1016" = type { %"class.WTF::HashTable.1017" }
%"class.WTF::HashTable.1017" = type <{ %"class.blink::WeakMember.1019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1019" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.803" = type { %"class.WTF::VectorBuffer.804" }
%"class.WTF::VectorBuffer.804" = type { %"class.WTF::VectorBufferBase.805" }
%"class.WTF::VectorBufferBase.805" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.806", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.806" = type { %"class.base::StrongAlias.807" }
%"class.base::StrongAlias.807" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.972" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.808, %"class.std::__1::unique_ptr.922", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.810, i32 }>
%class.scoped_refptr.808 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.810, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.888", %"class.absl::optional.893", %"class.absl::optional.849", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.913", i8, [7 x i8], %class.scoped_refptr.810, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.809" }>
%"class.base::RefCountedThreadSafe.809" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.817", %"class.std::__1::unique_ptr.823", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.829" }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.829" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.810, %"class.std::__1::unique_ptr.830", %"class.absl::optional.839", %"struct.std::__1::atomic.415", i8, i8, i8, i8, i32, i32, %"class.absl::optional.849", %"class.std::__1::unique_ptr.854", i8, i64, %class.scoped_refptr.884, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.887" }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.810, i8, %"class.mojo::ScopedHandleBase.833", %class.scoped_refptr.834, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.835" }
%"class.mojo::ScopedHandleBase.833" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.834 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.835" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.839" = type { %"class.absl::optional_internal::optional_data.840" }
%"class.absl::optional_internal::optional_data.840" = type { %"class.absl::optional_internal::optional_data_base.841" }
%"class.absl::optional_internal::optional_data_base.841" = type { %"class.absl::optional_internal::optional_data_dtor_base.842" }
%"class.absl::optional_internal::optional_data_dtor_base.842" = type { i8, %union.anon.843 }
%union.anon.843 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.844", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.844" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.857", i8, i64, %class.scoped_refptr.858, %class.scoped_refptr.880 }
%"class.base::RepeatingCallback.857" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.858 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.859", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.869", i8, [7 x i8] }>
%"class.base::RefCounted.859" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.860 }
%class.scoped_refptr.860 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"class.std::__1::map.869" = type { %"class.std::__1::__tree.870" }
%"class.std::__1::__tree.870" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.871", %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%class.scoped_refptr.880 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.884 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.885 }
%class.scoped_refptr.885 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.980", [4 x i8], %"class.base::RepeatingCallback.925", %class.scoped_refptr.810, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.980" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.925" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.887" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.888" = type { %"class.absl::optional_internal::optional_data.889" }
%"class.absl::optional_internal::optional_data.889" = type { %"class.absl::optional_internal::optional_data_base.890" }
%"class.absl::optional_internal::optional_data_base.890" = type { %"class.absl::optional_internal::optional_data_dtor_base.891" }
%"class.absl::optional_internal::optional_data_dtor_base.891" = type { i8, %union.anon.892 }
%union.anon.892 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.893" = type { %"class.absl::optional_internal::optional_data.894" }
%"class.absl::optional_internal::optional_data.894" = type { %"class.absl::optional_internal::optional_data_base.895" }
%"class.absl::optional_internal::optional_data_base.895" = type { %"class.absl::optional_internal::optional_data_dtor_base.896" }
%"class.absl::optional_internal::optional_data_dtor_base.896" = type { i8, [7 x i8], %union.anon.897 }
%union.anon.897 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.849" = type { %"class.absl::optional_internal::optional_data.850" }
%"class.absl::optional_internal::optional_data.850" = type { %"class.absl::optional_internal::optional_data_base.851" }
%"class.absl::optional_internal::optional_data_base.851" = type { %"class.absl::optional_internal::optional_data_dtor_base.852" }
%"class.absl::optional_internal::optional_data_dtor_base.852" = type { i8, %union.anon.853 }
%union.anon.853 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.898 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.898 = type { %"class.std::__1::map.901" }
%"class.std::__1::map.901" = type { %"class.std::__1::__tree.902" }
%"class.std::__1::__tree.902" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.912"*, i64 }
%"class.std::__1::unique_ptr.912" = type opaque
%"class.std::__1::map.913" = type { %"class.std::__1::__tree.914" }
%"class.std::__1::__tree.914" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.915", %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.925", %"class.base::OnceCallback.926", %"class.absl::optional.927", %"class.absl::optional.932", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.939", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.947", %"class.std::__1::map.958", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.967", i8, %class.scoped_refptr.810, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.968" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.926" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.932" = type { %"class.absl::optional_internal::optional_data.933" }
%"class.absl::optional_internal::optional_data.933" = type { %"class.absl::optional_internal::optional_data_base.934" }
%"class.absl::optional_internal::optional_data_base.934" = type { %"class.absl::optional_internal::optional_data_dtor_base.935" }
%"class.absl::optional_internal::optional_data_dtor_base.935" = type { i8, %union.anon.936 }
%union.anon.936 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.810, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.937" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.937" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.938 }
%class.scoped_refptr.938 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.942", %class.scoped_refptr.943 }
%"class.base::RepeatingCallback.942" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.943 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.809", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.947" = type { %"class.std::__1::__tree.948" }
%"class.std::__1::__tree.948" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"class.std::__1::map.958" = type { %"class.std::__1::__tree.959" }
%"class.std::__1::__tree.959" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"class.base::OnceCallback.967" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.968" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.810 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1150", %"class.blink::Member.1150", %"class.blink::Member.1152", %"class.blink::Member.1154", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1145" }
%"class.absl::optional.1145" = type { %"class.absl::optional_internal::optional_data.1146" }
%"class.absl::optional_internal::optional_data.1146" = type { %"class.absl::optional_internal::optional_data_base.1147" }
%"class.absl::optional_internal::optional_data_base.1147" = type { %"class.absl::optional_internal::optional_data_dtor_base.1148" }
%"class.absl::optional_internal::optional_data_dtor_base.1148" = type { i8, %union.anon.1149 }
%union.anon.1149 = type { i64 }
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::Event"* }
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1156", i8, [7 x i8] }>
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::EventListener"* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1202" = type { i8 }
%"class.blink::HeapVectorBacking.1215" = type { i8 }
%"class.blink::HeapVectorBacking.1231" = type { i8 }

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink14AccessibleNode18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEmm = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IS4_PS6_EEEEEPS8_PvDpOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IS4_PS6_EEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IS4_PS6_EEEEEPS8_PvDpOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IS4_PS6_EEEEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_18AccessibleNodeListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink18AOMBooleanPropertyEbEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink18AOMBooleanPropertyEbEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink14AOMIntPropertyEiEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink14AOMIntPropertyEiEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14AOMIntPropertyEiEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink15AOMUIntPropertyEjEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink15AOMUIntPropertyEjEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink16AOMFloatPropertyEfEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink16AOMFloatPropertyEfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEmm = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink14AccessibleNodeE = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AccessibleNode"*)* @_ZN5blink14AccessibleNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::AccessibleNode"*)* @_ZN5blink14AccessibleNodeD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)* @_ZNK5blink14AccessibleNode5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AccessibleNode"*)* @_ZNK5blink14AccessibleNode18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AccessibleNode"*)* @_ZNK5blink14AccessibleNode13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)* @_ZNK5blink14AccessibleNode19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@_ZN5blink10html_names18kAriaLabeledbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZN5blink10html_names25kAriaActivedescendantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kAriaAtomicAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names21kAriaAutocompleteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaBusyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaColcountAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaColindexAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaColspanAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaControlsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaCurrentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaDescribedbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaDescriptionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaDetailsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names21kAriaErrormessageAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaExpandedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kAriaFlowtoAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaHaspopupAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kAriaHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaInvalidAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names21kAriaKeyshortcutsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names19kAriaLabelledbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaLevelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaLiveAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaModalAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names18kAriaMultilineAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names24kAriaMultiselectableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaOrientationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaOwnsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kAriaPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaPosinsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaPressedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRelevantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRequiredAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kRoleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names24kAriaRoledescriptionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRowcountAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaRowindexAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaRowspanAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaSelectedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kAriaSetsizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kAriaSortAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaValuemaxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaValueminAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaValuenowAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names18kAriaValuetextAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names23kAriaVirtualcontentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [64 x i8] c"An AccessibleNode associated with an Element cannot be a child.\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Reparenting is not supported yet.\00", align 1
@.str.4 = private unnamed_addr constant [60 x i8] c"Trying to access an AccessibleNode from a different origin.\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"Node to remove is not a child of this node.\00", align 1
@_ZN5blink18event_target_names15kAccessibleNodeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.7 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink14AccessibleNode18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.15 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14AccessibleNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AccessibleNode>, WTF::VectorTraits<blink::Member<blink::AccessibleNode> > >]\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@.str.18 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::AOMStringProperty, WTF::AtomicString>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_19AOMRelationPropertyENS1_6MemberINS1_14AccessibleNodeEEEEENS_12VectorTraitsIS9_EEEEEEPKcv = private unnamed_addr constant [259 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<blink::AOMRelationProperty, blink::Member<blink::AccessibleNode> >, WTF::VectorTraits<std::__1::pair<blink::AOMRelationProperty, blink::Member<blink::AccessibleNode> > > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_23AOMRelationListPropertyENS1_6MemberINS1_18AccessibleNodeListEEEEENS_12VectorTraitsIS9_EEEEEEPKcv = private unnamed_addr constant [275 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<blink::AOMRelationListProperty, blink::Member<blink::AccessibleNodeList> >, WTF::VectorTraits<std::__1::pair<blink::AOMRelationListProperty, blink::Member<blink::AccessibleNodeList> > > >]\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::AOMBooleanProperty, bool>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14AOMIntPropertyEiEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::AOMIntProperty, int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEPKcv = private unnamed_addr constant [100 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::AOMUIntProperty, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::AOMFloatProperty, float>]\00", align 1

@_ZN5blink14AccessibleNodeC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::AccessibleNode"*, %"class.blink::Element"*), void (%"class.blink::AccessibleNode"*, %"class.blink::Element"*)* @_ZN5blink14AccessibleNodeC2EPNS_7ElementE
@_ZN5blink14AccessibleNodeC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::AccessibleNode"*, %"class.blink::Document"*), void (%"class.blink::AccessibleNode"*, %"class.blink::Document"*)* @_ZN5blink14AccessibleNodeC2ERNS_8DocumentE
@_ZN5blink14AccessibleNodeD1Ev = hidden unnamed_addr alias void (%"class.blink::AccessibleNode"*), void (%"class.blink::AccessibleNode"*)* @_ZN5blink14AccessibleNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNodeC2EPNS_7ElementE(%"class.blink::AccessibleNode"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %3) #7
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::EventTargetData"* %5 to i8*
  %7 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261) #7
  %8 = bitcast i8* %7 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %8) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink14AccessibleNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = bitcast %"class.WTF::Vector.8"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 112, i1 false)
  store %"class.blink::Element"* %1, %"class.blink::Element"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %13 = bitcast %"class.blink::Document"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNodeC2ERNS_8DocumentE(%"class.blink::AccessibleNode"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %3) #7
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.blink::EventTargetData"* %5 to i8*
  %7 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261) #7
  %8 = bitcast i8* %7 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %8) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink14AccessibleNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %11 = bitcast %"class.WTF::Vector.8"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 120, i1 false)
  store %"class.blink::Document"* %1, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10
  %13 = bitcast %"class.blink::HeapVector.65"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNodeD2Ev(%"class.blink::AccessibleNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink14AccessibleNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.35"* %4, null
  %6 = bitcast %"struct.std::__1::pair.35"* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #7
  store %"struct.std::__1::pair.35"* null, %"struct.std::__1::pair.35"** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair.29"* %15, null
  %17 = bitcast %"struct.std::__1::pair.29"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !3

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #7
  store %"struct.std::__1::pair.29"* null, %"struct.std::__1::pair.29"** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  %25 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %25, align 8
  %27 = icmp eq %"struct.std::__1::pair.23"* %26, null
  %28 = bitcast %"struct.std::__1::pair.23"* %26 to i8*
  br i1 %27, label %35, label %29, !prof !2

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #7
  store %"struct.std::__1::pair.23"* null, %"struct.std::__1::pair.23"** %25, align 8
  br label %35

35:                                               ; preds = %24, %34
  %36 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %36, align 8
  %38 = icmp eq %"struct.std::__1::pair.17"* %37, null
  %39 = bitcast %"struct.std::__1::pair.17"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #7
  store %"struct.std::__1::pair.17"* null, %"struct.std::__1::pair.17"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %48, align 8
  %50 = icmp eq %"struct.std::__1::pair.11"* %49, null
  br i1 %50, label %85, label %51, !prof !2

51:                                               ; preds = %46
  %52 = bitcast %"struct.std::__1::pair.11"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"struct.std::__1::pair.11"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #7
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %60, i64 1
  %79 = icmp eq %"struct.std::__1::pair.11"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.8"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #7
  store %"struct.std::__1::pair.11"* null, %"struct.std::__1::pair.11"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %86 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 1
  %87 = bitcast %"class.blink::EventTargetData"* %86 to i8*
  %88 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %87, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261) #7
  %89 = bitcast i8* %88 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %89) #7
  %90 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %90) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNodeD0Ev(%"class.blink::AccessibleNode"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNodeD2Ev(%"class.blink::AccessibleNode"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNode"* @_ZN5blink14AccessibleNode6CreateERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 224) #7
  %3 = bitcast i8* %2 to %"class.blink::AccessibleNode"*
  %4 = bitcast i8* %2 to %"class.blink::EventTarget"*
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %4) #7
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 16
  %7 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261) #7
  %8 = bitcast i8* %7 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %8) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink14AccessibleNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 72
  %10 = getelementptr inbounds i8, i8* %2, i64 192
  %11 = bitcast i8* %10 to %"class.blink::Document"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 120, i1 false) #7
  store %"class.blink::Document"* %0, %"class.blink::Document"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 200
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #7
  %13 = getelementptr inbounds i8, i8* %2, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  ret %"class.blink::AccessibleNode"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink14AccessibleNode11GetDocumentEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::Document"*, %"class.blink::Document"** %2, align 8
  %4 = icmp eq %"class.blink::Document"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  br label %14

14:                                               ; preds = %5, %1, %9
  %15 = phi %"class.blink::Document"* [ %13, %9 ], [ null, %5 ], [ %3, %1 ]
  ret %"class.blink::Document"* %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14AccessibleNode11GetPropertyENS_17AOMStringPropertyE(%"class.blink::AccessibleNode"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2, %20
  %11 = phi %"struct.std::__1::pair.11"* [ %21, %20 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %11, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %20, label %25

20:                                               ; preds = %10, %15
  %21 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %11, i64 1
  %22 = icmp eq %"struct.std::__1::pair.11"* %21, %8
  br i1 %22, label %23, label %10

23:                                               ; preds = %20, %2
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %25

25:                                               ; preds = %15, %23
  %26 = phi %"class.WTF::AtomicString"* [ %24, %23 ], [ %16, %15 ]
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNode"* @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %6 = icmp eq %"class.blink::AccessibleNode"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %7, %24
  %16 = phi %"struct.std::__1::pair.44"* [ %25, %24 ], [ %9, %7 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %16, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %21, align 8
  %23 = icmp eq %"class.blink::AccessibleNode"* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %20, %15
  %25 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %16, i64 1
  %26 = icmp eq %"struct.std::__1::pair.44"* %25, %13
  br i1 %26, label %27, label %15

27:                                               ; preds = %24, %20, %7, %2, %4
  %28 = phi %"class.blink::AccessibleNode"* [ null, %4 ], [ null, %2 ], [ null, %7 ], [ null, %24 ], [ %22, %20 ]
  ret %"class.blink::AccessibleNode"* %28
}

declare %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_23AOMRelationListPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %0, null
  br i1 %3, label %27, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %6 = icmp eq %"class.blink::AccessibleNode"* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %7, %24
  %16 = phi %"struct.std::__1::pair.54"* [ %25, %24 ], [ %9, %7 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %21, align 8
  %23 = icmp eq %"class.blink::AccessibleNodeList"* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %20, %15
  %25 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 1
  %26 = icmp eq %"struct.std::__1::pair.54"* %25, %13
  br i1 %26, label %27, label %15

27:                                               ; preds = %24, %20, %7, %2, %4
  %28 = phi %"class.blink::AccessibleNodeList"* [ null, %4 ], [ null, %2 ], [ null, %7 ], [ null, %24 ], [ %22, %20 ]
  ret %"class.blink::AccessibleNodeList"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"*, i32, %"class.blink::HeapVector.115"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = icmp eq %"class.blink::Element"* %0, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %8 = icmp eq %"class.blink::AccessibleNode"* %7, null
  br i1 %8, label %70, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %70, label %17

17:                                               ; preds = %9, %35
  %18 = phi %"struct.std::__1::pair.54"* [ %36, %35 ], [ %11, %9 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %35

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %23, align 8
  %25 = icmp eq %"class.blink::AccessibleNodeList"* %24, null
  br i1 %25, label %35, label %26

26:                                               ; preds = %22
  %27 = call i32 @_ZNK5blink18AccessibleNodeList6lengthEv(%"class.blink::AccessibleNodeList"* nonnull %24) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %70, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::Element"** %4 to i8*
  %31 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0
  br label %38

35:                                               ; preds = %22, %17
  %36 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %18, i64 1
  %37 = icmp eq %"struct.std::__1::pair.54"* %36, %15
  br i1 %37, label %70, label %17

38:                                               ; preds = %29, %66
  %39 = phi i32 [ 0, %29 ], [ %67, %66 ]
  %40 = call %"class.blink::AccessibleNode"* @_ZNK5blink18AccessibleNodeList4itemEj(%"class.blink::AccessibleNodeList"* nonnull %24, i32 %39) #7
  %41 = icmp eq %"class.blink::AccessibleNode"* %40, null
  br i1 %41, label %66, label %42

42:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  %43 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %40, i64 0, i32 8, i32 0, i32 0
  %44 = load %"class.blink::Element"*, %"class.blink::Element"** %43, align 8
  store %"class.blink::Element"* %44, %"class.blink::Element"** %4, align 8
  %45 = icmp eq %"class.blink::Element"* %44, null
  %46 = ptrtoint %"class.blink::Element"* %44 to i64
  br i1 %45, label %65, label %47

47:                                               ; preds = %42
  %48 = load i32, i32* %31, align 4
  %49 = load i32, i32* %32, align 8
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %64, label %51, !prof !3

51:                                               ; preds = %47
  %52 = load %"class.blink::Member.73"*, %"class.blink::Member.73"** %33, align 8
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"class.blink::Member.73", %"class.blink::Member.73"* %52, i64 %53
  %55 = bitcast %"class.blink::Member.73"* %54 to i64*
  store atomic i64 %46, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.blink::Element"* %44 to i8*
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %59) #7
  br label %61

61:                                               ; preds = %58, %51
  %62 = load i32, i32* %31, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %31, align 4
  br label %65

64:                                               ; preds = %47
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.118"* %34, %"class.blink::Element"** nonnull dereferenceable(8) %4) #7
  br label %65

65:                                               ; preds = %64, %61, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  br label %66

66:                                               ; preds = %38, %65
  %67 = add nuw i32 %39, 1
  %68 = call i32 @_ZNK5blink18AccessibleNodeList6lengthEv(%"class.blink::AccessibleNodeList"* nonnull %24) #7
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %38, label %70

70:                                               ; preds = %35, %66, %26, %9, %3, %6
  %71 = phi i1 [ false, %6 ], [ false, %3 ], [ false, %9 ], [ true, %26 ], [ true, %66 ], [ false, %35 ]
  ret i1 %71
}

declare i32 @_ZNK5blink18AccessibleNodeList6lengthEv(%"class.blink::AccessibleNodeList"*) local_unnamed_addr #3

declare %"class.blink::AccessibleNode"* @_ZNK5blink18AccessibleNodeList4itemEj(%"class.blink::AccessibleNodeList"*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode11GetPropertyENS_18AOMBooleanPropertyE(%"class.blink::AccessibleNode"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"struct.std::__1::pair.17"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %11, i64 1
  %17 = icmp eq %"struct.std::__1::pair.17"* %16, %8
  br i1 %17, label %23, label %10

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %11, i64 0, i32 1
  %20 = load i8, i8* %19, align 1, !range !4
  %21 = zext i8 %20 to i16
  %22 = shl nuw nsw i16 %21, 8
  br label %23

23:                                               ; preds = %15, %2, %18
  %24 = phi i16 [ %22, %18 ], [ 0, %2 ], [ 0, %15 ]
  %25 = phi i16 [ 1, %18 ], [ 0, %2 ], [ 0, %15 ]
  %26 = or i16 %25, %24
  ret i16 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_14AOMIntPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %6 = icmp eq %"class.blink::AccessibleNode"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %8, i64 0, i32 4, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %7, %21
  %17 = phi %"struct.std::__1::pair.29"* [ %22, %21 ], [ %10, %7 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %1
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %17, i64 1
  %23 = icmp eq %"struct.std::__1::pair.29"* %22, %14
  br i1 %23, label %29, label %16

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  br label %29

29:                                               ; preds = %21, %24, %7, %2, %4
  %30 = phi i64 [ 0, %4 ], [ 0, %2 ], [ %28, %24 ], [ 0, %7 ], [ 0, %21 ]
  %31 = phi i64 [ 0, %4 ], [ 0, %2 ], [ 1, %24 ], [ 0, %7 ], [ 0, %21 ]
  %32 = or i64 %31, %30
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_15AOMUIntPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %6 = icmp eq %"class.blink::AccessibleNode"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %8, i64 0, i32 5, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %7, %21
  %17 = phi %"struct.std::__1::pair.35"* [ %22, %21 ], [ %10, %7 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %1
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %17, i64 1
  %23 = icmp eq %"struct.std::__1::pair.35"* %22, %14
  br i1 %23, label %29, label %16

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  br label %29

29:                                               ; preds = %21, %24, %7, %2, %4
  %30 = phi i64 [ 0, %4 ], [ 0, %2 ], [ %28, %24 ], [ 0, %7 ], [ 0, %21 ]
  %31 = phi i64 [ 0, %4 ], [ 0, %2 ], [ 1, %24 ], [ 0, %7 ], [ 0, %21 ]
  %32 = or i64 %31, %30
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14AccessibleNode11GetPropertyEPNS_7ElementENS_16AOMFloatPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %0, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %6 = icmp eq %"class.blink::AccessibleNode"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %0) #7
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %8, i64 0, i32 3, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %7, %21
  %17 = phi %"struct.std::__1::pair.23"* [ %22, %21 ], [ %10, %7 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %1
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %17, i64 1
  %23 = icmp eq %"struct.std::__1::pair.23"* %22, %14
  br i1 %23, label %30, label %16

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %17, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %21, %24, %7, %2, %4
  %31 = phi i64 [ 0, %4 ], [ 0, %2 ], [ %29, %24 ], [ 0, %7 ], [ 0, %21 ]
  %32 = phi i64 [ 0, %4 ], [ 0, %2 ], [ 1, %24 ], [ 0, %7 ], [ 0, %21 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14AccessibleNode20IsUndefinedAttrValueERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  br label %21

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #7
  br i1 %11, label %21, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %14, align 8
  %15 = load i32, i32* %9, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %15, i32* %19, align 8
  %20 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str)
  br label %21

21:                                               ; preds = %6, %13, %8
  %22 = phi i8* [ %12, %8 ], [ %12, %13 ], [ %7, %6 ]
  %23 = phi i1 [ true, %8 ], [ %20, %13 ], [ true, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #7
  ret i1 %23
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* dereferenceable(104), %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %5, align 8
  %7 = icmp eq %"class.blink::ElementData"* %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::ElementData"* %6 to %"class.blink::UniqueElementData"*
  %15 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1, i32 1
  %16 = bitcast %"class.blink::Member.90"* %15 to %"class.blink::Attribute"**
  %17 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %14, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %25

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %6, i64 1
  %22 = bitcast %"class.blink::ElementData"* %21 to %"class.blink::Attribute"*
  %23 = lshr i32 %10, 1
  %24 = and i32 %23, 268435455
  br label %25

25:                                               ; preds = %20, %13
  %26 = phi %"class.blink::Attribute"* [ %22, %20 ], [ %17, %13 ]
  %27 = phi i32 [ %24, %20 ], [ %19, %13 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %51, %31
  %37 = phi %"class.blink::Attribute"* [ %26, %31 ], [ %52, %51 ]
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %39, %33
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %43, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %46, %41
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 1
  %53 = icmp eq %"class.blink::Attribute"* %52, %29
  br i1 %53, label %58, label %36

54:                                               ; preds = %46, %36
  %55 = icmp eq %"class.blink::Attribute"* %37, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %37, i64 0, i32 1
  br label %60

58:                                               ; preds = %51, %54, %25, %3
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.WTF::AtomicString"* [ %59, %58 ], [ %57, %56 ]
  %62 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %62, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  br i1 %2, label %69, label %93

69:                                               ; preds = %68
  %70 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #7
  br label %78

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  %77 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #7
  br i1 %76, label %78, label %80

78:                                               ; preds = %73, %71
  %79 = phi i8* [ %72, %71 ], [ %77, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #7
  br label %88

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %81, align 8
  %82 = load i32, i32* %74, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %82, i32* %86, align 8
  %87 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [10 x i8]* nonnull dereferenceable(10) @.str) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #7
  br i1 %87, label %88, label %93

88:                                               ; preds = %60, %78, %80
  %89 = call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* %0) #7
  br i1 %89, label %90, label %93

90:                                               ; preds = %88
  %91 = call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %0) #7
  %92 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ElementInternals16FastGetAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"* %91, %"class.blink::QualifiedName"* dereferenceable(8) %1) #7
  br label %93

93:                                               ; preds = %88, %68, %80, %90
  %94 = phi %"class.WTF::AtomicString"* [ %92, %90 ], [ %61, %80 ], [ %61, %68 ], [ %62, %88 ]
  ret %"class.WTF::AtomicString"* %94
}

declare zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"*) local_unnamed_addr #3

declare dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ElementInternals16FastGetAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = icmp eq %"class.blink::Element"* %0, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %272

8:                                                ; preds = %2
  %9 = icmp ult i32 %1, 16
  %10 = trunc i32 %1 to i16
  %11 = lshr i16 -25801, %10
  %12 = and i16 %11, 1
  %13 = icmp ne i16 %12, 0
  %14 = and i1 %9, %13
  %15 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  switch i32 %1, label %233 [
    i32 0, label %17
    i32 1, label %29
    i32 2, label %41
    i32 3, label %53
    i32 4, label %65
    i32 5, label %77
    i32 6, label %89
    i32 7, label %101
    i32 8, label %113
    i32 9, label %125
    i32 10, label %137
    i32 11, label %149
    i32 12, label %161
    i32 13, label %173
    i32 14, label %185
    i32 15, label %197
    i32 16, label %209
    i32 17, label %221
  ]

17:                                               ; preds = %8
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaAutocompleteAttrE, align 8, !noalias !5
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %20, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %21 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %20, null
  br i1 %21, label %245, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4, !noalias !5
  %25 = and i32 %24, 16777216
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %245

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %28) #7, !noalias !5
  br label %245

29:                                               ; preds = %8
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCheckedAttrE, align 8, !noalias !5
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, null
  br i1 %33, label %245, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4, !noalias !5
  %37 = and i32 %36, 16777216
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %245

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #7, !noalias !5
  br label %245

41:                                               ; preds = %8
  %42 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCurrentAttrE, align 8, !noalias !5
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %44, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %44, null
  br i1 %45, label %245, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 1
  %48 = load i32, i32* %47, align 4, !noalias !5
  %49 = and i32 %48, 16777216
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %245

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #7, !noalias !5
  br label %245

53:                                               ; preds = %8
  %54 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescriptionAttrE, align 8, !noalias !5
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %56, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %56, null
  br i1 %57, label %245, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 1
  %60 = load i32, i32* %59, align 4, !noalias !5
  %61 = and i32 %60, 16777216
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %245

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #7, !noalias !5
  br label %245

65:                                               ; preds = %8
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaHaspopupAttrE, align 8, !noalias !5
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %69 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, null
  br i1 %69, label %245, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 4, !noalias !5
  %73 = and i32 %72, 16777216
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %245

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %68, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %76) #7, !noalias !5
  br label %245

77:                                               ; preds = %8
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaInvalidAttrE, align 8, !noalias !5
  %79 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %80, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %81 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %80, null
  br i1 %81, label %245, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 1
  %84 = load i32, i32* %83, align 4, !noalias !5
  %85 = and i32 %84, 16777216
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %245

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %88) #7, !noalias !5
  br label %245

89:                                               ; preds = %8
  %90 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaKeyshortcutsAttrE, align 8, !noalias !5
  %91 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %91, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %92, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %92, null
  br i1 %93, label %245, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 1
  %96 = load i32, i32* %95, align 4, !noalias !5
  %97 = and i32 %96, 16777216
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %245

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %100) #7, !noalias !5
  br label %245

101:                                              ; preds = %8
  %102 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8, !noalias !5
  %103 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %102, i64 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %104, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %105 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %104, null
  br i1 %105, label %245, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 1
  %108 = load i32, i32* %107, align 4, !noalias !5
  %109 = and i32 %108, 16777216
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %245

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %112) #7, !noalias !5
  br label %245

113:                                              ; preds = %8
  %114 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaLiveAttrE, align 8, !noalias !5
  %115 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %116, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %117 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %116, null
  br i1 %117, label %245, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4, !noalias !5
  %121 = and i32 %120, 16777216
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %245

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %124) #7, !noalias !5
  br label %245

125:                                              ; preds = %8
  %126 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaOrientationAttrE, align 8, !noalias !5
  %127 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %127, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %128, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %129 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %128, null
  br i1 %129, label %245, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 1
  %132 = load i32, i32* %131, align 4, !noalias !5
  %133 = and i32 %132, 16777216
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %245

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %136) #7, !noalias !5
  br label %245

137:                                              ; preds = %8
  %138 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaPlaceholderAttrE, align 8, !noalias !5
  %139 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %139, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %140, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %141 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %140, null
  br i1 %141, label %245, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %140, i64 0, i32 1
  %144 = load i32, i32* %143, align 4, !noalias !5
  %145 = and i32 %144, 16777216
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %245

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %140, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %148) #7, !noalias !5
  br label %245

149:                                              ; preds = %8
  %150 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaPressedAttrE, align 8, !noalias !5
  %151 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %150, i64 0, i32 0, i32 0
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %152, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %153 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %152, null
  br i1 %153, label %245, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 1
  %156 = load i32, i32* %155, align 4, !noalias !5
  %157 = and i32 %156, 16777216
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %245

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %160) #7, !noalias !5
  br label %245

161:                                              ; preds = %8
  %162 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRelevantAttrE, align 8, !noalias !5
  %163 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %162, i64 0, i32 0, i32 0
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %164, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %165 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %164, null
  br i1 %165, label %245, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 1
  %168 = load i32, i32* %167, align 4, !noalias !5
  %169 = and i32 %168, 16777216
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %245

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %172) #7, !noalias !5
  br label %245

173:                                              ; preds = %8
  %174 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRoleAttrE, align 8, !noalias !5
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %174, i64 0, i32 0, i32 0
  %176 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %175, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %176, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %177 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %176, null
  br i1 %177, label %245, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 1
  %180 = load i32, i32* %179, align 4, !noalias !5
  %181 = and i32 %180, 16777216
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %245

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %176, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %184) #7, !noalias !5
  br label %245

185:                                              ; preds = %8
  %186 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaRoledescriptionAttrE, align 8, !noalias !5
  %187 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %188, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %189 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %188, null
  br i1 %189, label %245, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 1
  %192 = load i32, i32* %191, align 4, !noalias !5
  %193 = and i32 %192, 16777216
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %245

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %188, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %196) #7, !noalias !5
  br label %245

197:                                              ; preds = %8
  %198 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaSortAttrE, align 8, !noalias !5
  %199 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %198, i64 0, i32 0, i32 0
  %200 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %199, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %200, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %201 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %200, null
  br i1 %201, label %245, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 1
  %204 = load i32, i32* %203, align 4, !noalias !5
  %205 = and i32 %204, 16777216
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %245

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %200, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %208) #7, !noalias !5
  br label %245

209:                                              ; preds = %8
  %210 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaValuetextAttrE, align 8, !noalias !5
  %211 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %210, i64 0, i32 0, i32 0
  %212 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %212, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %213 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %212, null
  br i1 %213, label %245, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %212, i64 0, i32 1
  %216 = load i32, i32* %215, align 4, !noalias !5
  %217 = and i32 %216, 16777216
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %245

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %212, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %220) #7, !noalias !5
  br label %245

221:                                              ; preds = %8
  %222 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names23kAriaVirtualcontentAttrE, align 8, !noalias !5
  %223 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %223, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %224, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %225 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %224, null
  br i1 %225, label %245, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %224, i64 0, i32 1
  %228 = load i32, i32* %227, align 4, !noalias !5
  %229 = and i32 %228, 16777216
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %245

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %224, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %232) #7, !noalias !5
  br label %245

233:                                              ; preds = %8
  %234 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !5
  %235 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %234, i64 0, i32 0, i32 0
  %236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %235, align 8, !noalias !5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %236, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8, !alias.scope !5
  %237 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %236, null
  br i1 %237, label %245, label %238

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %236, i64 0, i32 1
  %240 = load i32, i32* %239, align 4, !noalias !5
  %241 = and i32 %240, 16777216
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %245

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %236, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %244) #7, !noalias !5
  br label %245

245:                                              ; preds = %17, %22, %27, %29, %34, %39, %41, %46, %51, %53, %58, %63, %65, %70, %75, %77, %82, %87, %89, %94, %99, %101, %106, %111, %113, %118, %123, %125, %130, %135, %137, %142, %147, %149, %154, %159, %161, %166, %171, %173, %178, %183, %185, %190, %195, %197, %202, %207, %209, %214, %219, %221, %226, %231, %233, %238, %243
  %246 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, i1 zeroext %14)
  br i1 %14, label %247, label %270

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %246, i64 0, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %251, label %253

251:                                              ; preds = %247
  %252 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #7
  br label %258

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = icmp eq i32 %255, 0
  %257 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #7
  br i1 %256, label %258, label %260

258:                                              ; preds = %253, %251
  %259 = phi i8* [ %252, %251 ], [ %257, %253 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #7
  br label %268

260:                                              ; preds = %253
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %261, align 8
  %262 = load i32, i32* %254, align 4
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 1
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %265 = bitcast i8** %264 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %265, align 8
  %266 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %262, i32* %266, align 8
  %267 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [10 x i8]* nonnull dereferenceable(10) @.str) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #7
  br i1 %267, label %268, label %270

268:                                              ; preds = %258, %260
  %269 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %270

270:                                              ; preds = %268, %260, %245
  %271 = phi %"class.WTF::AtomicString"* [ %246, %245 ], [ %269, %268 ], [ %246, %260 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  br label %272

272:                                              ; preds = %270, %6
  %273 = phi %"class.WTF::AtomicString"* [ %271, %270 ], [ %7, %6 ]
  ret %"class.WTF::AtomicString"* %273
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink14AccessibleNode21IsStringTokenPropertyENS_17AOMStringPropertyE(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp ult i32 %0, 16
  br i1 %2, label %3, label %8

3:                                                ; preds = %1
  %4 = trunc i32 %0 to i16
  %5 = lshr i16 -25801, %4
  %6 = and i16 %5, 1
  %7 = icmp ne i16 %6, 0
  ret i1 %7

8:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_19AOMRelationPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = icmp eq %"class.blink::Element"* %0, null
  br i1 %5, label %89, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  switch i32 %1, label %33 [
    i32 0, label %9
    i32 1, label %21
  ]

9:                                                ; preds = %6
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names25kAriaActivedescendantAttrE, align 8, !noalias !8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8, !noalias !8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8, !alias.scope !8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4, !noalias !8
  %17 = and i32 %16, 16777216
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %45

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #7, !noalias !8
  br label %45

21:                                               ; preds = %6
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaErrormessageAttrE, align 8, !noalias !8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8, !noalias !8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %24, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8, !alias.scope !8
  %25 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %24, null
  br i1 %25, label %45, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4, !noalias !8
  %29 = and i32 %28, 16777216
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #7, !noalias !8
  br label %45

33:                                               ; preds = %6
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !8
  %35 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8, !noalias !8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8, !alias.scope !8
  %37 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4, !noalias !8
  %41 = and i32 %40, 16777216
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #7, !noalias !8
  br label %45

45:                                               ; preds = %9, %14, %19, %21, %26, %31, %33, %38, %43
  %46 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %47, align 8
  %48 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %3, i1 zeroext false)
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %47, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #7
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %57
  call void @llvm.trap() #7
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %45, %52, %67
  %70 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %72 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %71, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %69, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  br label %89

89:                                               ; preds = %2, %88
  %90 = phi %"class.blink::Element"* [ %72, %88 ], [ null, %2 ]
  ret %"class.blink::Element"* %90
}

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::Element"*, i32, %"class.blink::HeapVector.115"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::Vector.776", align 8
  %7 = alloca %"class.blink::Element"*, align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = icmp eq %"class.blink::Element"* %0, null
  br i1 %9, label %245, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_23AOMRelationListPropertyE(%"class.blink::QualifiedName"* nonnull sret %4, i32 %1)
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %14, align 8
  %15 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, i1 zeroext false)
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %14, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #7
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  call void @llvm.trap() #7
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %19, %34
  %39 = phi %"class.WTF::StringImpl"* [ %36, %34 ], [ %17, %19 ]
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br label %43

43:                                               ; preds = %10, %34, %38
  %44 = phi i1 [ true, %34 ], [ %42, %38 ], [ true, %10 ]
  %45 = icmp eq i32 %1, 4
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %88

47:                                               ; preds = %43
  %48 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaLabeledbyAttrE, align 8
  %49 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* dereferenceable(8) %48, i1 zeroext false)
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #7
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !3

67:                                               ; preds = %58
  call void @llvm.trap() #7
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %68, %53, %47
  %71 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %72 = bitcast %"class.WTF::String"* %5 to i64*
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  store i64 %71, i64* %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %43, %84, %87
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %90

90:                                               ; preds = %88, %70
  %91 = phi %"class.WTF::StringImpl"* [ %89, %88 ], [ %51, %70 ]
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %227, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %227, label %97

97:                                               ; preds = %93
  %98 = bitcast %"class.WTF::Vector.776"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %6, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.WTF::Vector.776", %"class.WTF::Vector.776"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 16, i1 false) #7
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %5, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.776"* nonnull dereferenceable(16) %6) #7
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %188, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %105 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %104, align 8
  %106 = load %"class.WTF::String"*, %"class.WTF::String"** %99, align 8
  %107 = zext i32 %101 to i64
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 %107
  %109 = bitcast %"class.blink::Element"** %7 to i8*
  %110 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  %111 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %114 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %115 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::HeapVector.115", %"class.blink::HeapVector.115"* %2, i64 0, i32 0
  br label %117

117:                                              ; preds = %103, %185
  %118 = phi %"class.WTF::String"* [ %106, %103 ], [ %186, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #7
  store %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.blink::Element"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #7
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %145, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 acquire, align 4
  %125 = and i32 %124, 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %122
  %128 = load atomic i32, i32* %123 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i33
  %135 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %134, i33 1) #7
  %136 = extractvalue { i33, i1 } %135, 1
  %137 = extractvalue { i33, i1 } %135, 0
  %138 = icmp slt i33 %137, 0
  %139 = or i1 %136, %138
  br i1 %139, label %140, label %141, !prof !3

140:                                              ; preds = %131
  call void @llvm.trap() #7
  unreachable

141:                                              ; preds = %131
  %142 = trunc i33 %137 to i32
  store i32 %142, i32* %132, align 4
  br label %145

143:                                              ; preds = %122
  %144 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %120) #7
  br label %145

145:                                              ; preds = %117, %127, %141, %143
  %146 = phi %"class.WTF::StringImpl"* [ %144, %143 ], [ %120, %127 ], [ %120, %141 ], [ null, %117 ]
  %147 = ptrtoint %"class.WTF::StringImpl"* %146 to i64
  store i64 %147, i64* %111, align 8
  %148 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %105, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #7
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #7
  br label %164

164:                                              ; preds = %145, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #7
  store %"class.blink::Element"* %148, %"class.blink::Element"** %7, align 8
  %165 = icmp eq %"class.blink::Element"* %148, null
  %166 = ptrtoint %"class.blink::Element"* %148 to i64
  br i1 %165, label %185, label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %113, align 4
  %169 = load i32, i32* %114, align 8
  %170 = icmp eq i32 %168, %169
  br i1 %170, label %184, label %171, !prof !3

171:                                              ; preds = %167
  %172 = load %"class.blink::Member.73"*, %"class.blink::Member.73"** %115, align 8
  %173 = zext i32 %168 to i64
  %174 = getelementptr inbounds %"class.blink::Member.73", %"class.blink::Member.73"* %172, i64 %173
  %175 = bitcast %"class.blink::Member.73"* %174 to i64*
  store atomic i64 %166, i64* %175 monotonic, align 8
  %176 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %181, label %178

178:                                              ; preds = %171
  %179 = bitcast %"class.blink::Element"* %148 to i8*
  %180 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %179) #7
  br label %181

181:                                              ; preds = %178, %171
  %182 = load i32, i32* %113, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %113, align 4
  br label %185

184:                                              ; preds = %167
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.118"* %116, %"class.blink::Element"** nonnull dereferenceable(8) %7) #7
  br label %185

185:                                              ; preds = %184, %181, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #7
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 1
  %187 = icmp eq %"class.WTF::String"* %186, %108
  br i1 %187, label %188, label %117

188:                                              ; preds = %185, %97
  %189 = phi i1 [ false, %97 ], [ true, %185 ]
  %190 = load %"class.WTF::String"*, %"class.WTF::String"** %99, align 8
  %191 = icmp eq %"class.WTF::String"* %190, null
  br i1 %191, label %225, label %192, !prof !2

192:                                              ; preds = %188
  %193 = bitcast %"class.WTF::String"* %190 to i8*
  %194 = load i32, i32* %100, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %223, label %196, !prof !3

196:                                              ; preds = %192
  %197 = zext i32 %194 to i64
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %190, i64 %197
  br label %199

199:                                              ; preds = %217, %196
  %200 = phi %"class.WTF::String"* [ %218, %217 ], [ %190, %196 ]
  %201 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %200, i64 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #7
  br label %217

217:                                              ; preds = %216, %213, %199
  %218 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %200, i64 1
  %219 = icmp eq %"class.WTF::String"* %218, %198
  br i1 %219, label %220, label %199

220:                                              ; preds = %217
  store i32 0, i32* %100, align 4
  %221 = bitcast %"class.WTF::Vector.776"* %6 to i8**
  %222 = load i8*, i8** %221, align 8
  br label %223

223:                                              ; preds = %220, %192
  %224 = phi i8* [ %222, %220 ], [ %193, %192 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %224) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %99, align 8
  br label %225

225:                                              ; preds = %188, %223
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #7
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %227

227:                                              ; preds = %90, %93, %225
  %228 = phi %"class.WTF::StringImpl"* [ %226, %225 ], [ %91, %93 ], [ %91, %90 ]
  %229 = phi i1 [ %189, %225 ], [ false, %93 ], [ false, %90 ]
  %230 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #7
  br label %244

244:                                              ; preds = %227, %240, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  br label %245

245:                                              ; preds = %3, %244
  %246 = phi i1 [ %229, %244 ], [ false, %3 ]
  ret i1 %246
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_23AOMRelationListPropertyE(%"class.blink::QualifiedName"* noalias nocapture sret, i32) unnamed_addr #0 {
  switch i32 %1, label %81 [
    i32 0, label %3
    i32 1, label %16
    i32 2, label %29
    i32 3, label %42
    i32 4, label %55
    i32 5, label %68
  ]

3:                                                ; preds = %2
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescribedbyAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %6, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %6, null
  br i1 %8, label %94, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 16777216
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %94

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #7
  br label %94

16:                                               ; preds = %2
  %17 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaDetailsAttrE, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %19, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %21 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %19, null
  br i1 %21, label %94, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777216
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %94

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %28) #7
  br label %94

29:                                               ; preds = %2
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaControlsAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, null
  br i1 %34, label %94, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 16777216
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %94

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %41) #7
  br label %94

42:                                               ; preds = %2
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaFlowtoAttrE, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %45, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %47 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %45, null
  br i1 %47, label %94, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 16777216
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %94

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #7
  br label %94

55:                                               ; preds = %2
  %56 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, null
  br i1 %60, label %94, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 16777216
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %94

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %67) #7
  br label %94

68:                                               ; preds = %2
  %69 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %71, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %73 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %71, null
  br i1 %73, label %94, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 16777216
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %94

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %80) #7
  br label %94

81:                                               ; preds = %2
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %84, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %86 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %84, null
  br i1 %86, label %94, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 16777216
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %84, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %93) #7
  br label %94

94:                                               ; preds = %92, %87, %81, %79, %74, %68, %66, %61, %55, %53, %48, %42, %40, %35, %29, %27, %22, %16, %14, %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_18AOMBooleanPropertyERb(%"class.blink::Element"*, i32, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::QualifiedName", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  store i8 1, i8* %2, align 1
  %7 = icmp eq %"class.blink::Element"* %0, null
  br i1 %7, label %220, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::QualifiedName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  switch i32 %1, label %143 [
    i32 0, label %11
    i32 1, label %23
    i32 2, label %35
    i32 3, label %47
    i32 4, label %59
    i32 5, label %71
    i32 6, label %83
    i32 7, label %95
    i32 8, label %107
    i32 9, label %119
    i32 10, label %131
  ]

11:                                               ; preds = %8
  %12 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaAtomicAttrE, align 8, !noalias !11
  %13 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %14, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %15 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %14, null
  br i1 %15, label %155, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4, !noalias !11
  %19 = and i32 %18, 16777216
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %155

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #7, !noalias !11
  br label %155

23:                                               ; preds = %8
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaBusyAttrE, align 8, !noalias !11
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %26, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %27 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %26, null
  br i1 %27, label %155, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4, !noalias !11
  %31 = and i32 %30, 16777216
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %155

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %34) #7, !noalias !11
  br label %155

35:                                               ; preds = %8
  %36 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaDisabledAttrE, align 8, !noalias !11
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %39, label %155, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4, !noalias !11
  %43 = and i32 %42, 16777216
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %155

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %46) #7, !noalias !11
  br label %155

47:                                               ; preds = %8
  %48 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaExpandedAttrE, align 8, !noalias !11
  %49 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %51 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, null
  br i1 %51, label %155, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4, !noalias !11
  %55 = and i32 %54, 16777216
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %155

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %58) #7, !noalias !11
  br label %155

59:                                               ; preds = %8
  %60 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaHiddenAttrE, align 8, !noalias !11
  %61 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %63, label %155, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4, !noalias !11
  %67 = and i32 %66, 16777216
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %155

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #7, !noalias !11
  br label %155

71:                                               ; preds = %8
  %72 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaModalAttrE, align 8, !noalias !11
  %73 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, null
  br i1 %75, label %155, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 1
  %78 = load i32, i32* %77, align 4, !noalias !11
  %79 = and i32 %78, 16777216
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %155

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %82) #7, !noalias !11
  br label %155

83:                                               ; preds = %8
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaMultilineAttrE, align 8, !noalias !11
  %85 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %86, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %87 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %86, null
  br i1 %87, label %155, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4, !noalias !11
  %91 = and i32 %90, 16777216
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %155

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %94) #7, !noalias !11
  br label %155

95:                                               ; preds = %8
  %96 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaMultiselectableAttrE, align 8, !noalias !11
  %97 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %98, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %99 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %98, null
  br i1 %99, label %155, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 1
  %102 = load i32, i32* %101, align 4, !noalias !11
  %103 = and i32 %102, 16777216
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %155

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %106) #7, !noalias !11
  br label %155

107:                                              ; preds = %8
  %108 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaReadonlyAttrE, align 8, !noalias !11
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %110, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %111, label %155, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4, !noalias !11
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %155

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %118) #7, !noalias !11
  br label %155

119:                                              ; preds = %8
  %120 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRequiredAttrE, align 8, !noalias !11
  %121 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %122, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %123 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %122, null
  br i1 %123, label %155, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 1
  %126 = load i32, i32* %125, align 4, !noalias !11
  %127 = and i32 %126, 16777216
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %155

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %130) #7, !noalias !11
  br label %155

131:                                              ; preds = %8
  %132 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaSelectedAttrE, align 8, !noalias !11
  %133 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %133, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %134, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %135 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %134, null
  br i1 %135, label %155, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 1
  %138 = load i32, i32* %137, align 4, !noalias !11
  %139 = and i32 %138, 16777216
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %155

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %134, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %142) #7, !noalias !11
  br label %155

143:                                              ; preds = %8
  %144 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !11
  %145 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %144, i64 0, i32 0, i32 0
  %146 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %145, align 8, !noalias !11
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %146, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8, !alias.scope !11
  %147 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %146, null
  br i1 %147, label %155, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %146, i64 0, i32 1
  %150 = load i32, i32* %149, align 4, !noalias !11
  %151 = and i32 %150, 16777216
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %154) #7, !noalias !11
  br label %155

155:                                              ; preds = %11, %16, %21, %23, %28, %33, %35, %40, %45, %47, %52, %57, %59, %64, %69, %71, %76, %81, %83, %88, %93, %95, %100, %105, %107, %112, %117, %119, %124, %129, %131, %136, %141, %143, %148, %153
  %156 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %5, i1 zeroext false)
  %157 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %156, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %177, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %178

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #7
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !3

174:                                              ; preds = %165
  call void @llvm.trap() #7
  unreachable

175:                                              ; preds = %165
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %166, align 4
  br label %178

177:                                              ; preds = %155
  store i8 1, i8* %2, align 1
  br label %218

178:                                              ; preds = %160, %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  %182 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #7
  br i1 %181, label %203, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %184, align 8
  %185 = load i32, i32* %179, align 4
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 1
  %187 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %188 = bitcast i8** %187 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %185, i32* %189, align 8
  %190 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [10 x i8]* nonnull dereferenceable(10) @.str) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #7
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %2, align 1
  %192 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #7
  br i1 %190, label %201, label %193

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %194, align 8
  %195 = load i32, i32* %179, align 4
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %197 = bitcast i8** %196 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %197, align 8
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %195, i32* %198, align 8
  %199 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [6 x i8]* nonnull dereferenceable(6) @.str.1)
  %200 = xor i1 %199, true
  br label %201

201:                                              ; preds = %193, %183
  %202 = phi i1 [ %200, %193 ], [ false, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #7
  br label %204

203:                                              ; preds = %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #7
  store i8 1, i8* %2, align 1
  br label %204

204:                                              ; preds = %203, %201
  %205 = phi i1 [ %202, %201 ], [ false, %203 ]
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %204
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %204
  %215 = phi i32 [ %213, %212 ], [ %211, %204 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #7
  br label %218

218:                                              ; preds = %177, %214, %217
  %219 = phi i1 [ %205, %214 ], [ %205, %217 ], [ false, %177 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  br label %220

220:                                              ; preds = %3, %218
  %221 = phi i1 [ %219, %218 ], [ false, %3 ]
  ret i1 %221
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_16AOMFloatPropertyERb(%"class.blink::Element"*, i32, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  store i8 1, i8* %2, align 1
  %6 = icmp eq %"class.blink::Element"* %0, null
  br i1 %6, label %105, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  switch i32 %1, label %46 [
    i32 0, label %10
    i32 1, label %22
    i32 2, label %34
  ]

10:                                               ; preds = %7
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValuemaxAttrE, align 8, !noalias !14
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !noalias !14
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !14
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, null
  br i1 %14, label %58, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !14
  %18 = and i32 %17, 16777216
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #7, !noalias !14
  br label %58

22:                                               ; preds = %7
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValueminAttrE, align 8, !noalias !14
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8, !noalias !14
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !14
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4, !noalias !14
  %30 = and i32 %29, 16777216
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %58

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %33) #7, !noalias !14
  br label %58

34:                                               ; preds = %7
  %35 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValuenowAttrE, align 8, !noalias !14
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8, !noalias !14
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !14
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4, !noalias !14
  %42 = and i32 %41, 16777216
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %45) #7, !noalias !14
  br label %58

46:                                               ; preds = %7
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !14
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8, !noalias !14
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !14
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4, !noalias !14
  %54 = and i32 %53, 16777216
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %57) #7, !noalias !14
  br label %58

58:                                               ; preds = %10, %15, %20, %22, %27, %32, %34, %39, %44, %46, %51, %56
  %59 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #7
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %60, align 8
  %61 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, i1 zeroext false)
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %60, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %83, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #7
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  call void @llvm.trap() #7
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  br label %83

83:                                               ; preds = %58, %65, %80
  %84 = phi %"class.WTF::StringImpl"* [ null, %58 ], [ %63, %65 ], [ %82, %80 ]
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %2, align 1
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  %88 = call float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"* nonnull %87, i8* null) #7
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #7
  br label %104

104:                                              ; preds = %83, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #7
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  br label %105

105:                                              ; preds = %3, %104
  %106 = phi float [ %88, %104 ], [ 0.000000e+00, %3 ]
  ret float %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_15AOMUIntPropertyERb(%"class.blink::Element"*, i32, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  store i8 1, i8* %2, align 1
  %6 = icmp eq %"class.blink::Element"* %0, null
  br i1 %6, label %141, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  switch i32 %1, label %82 [
    i32 0, label %10
    i32 1, label %22
    i32 2, label %34
    i32 3, label %46
    i32 4, label %58
    i32 5, label %70
  ]

10:                                               ; preds = %7
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaColindexAttrE, align 8, !noalias !17
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, null
  br i1 %14, label %94, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !17
  %18 = and i32 %17, 16777216
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %94

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #7, !noalias !17
  br label %94

22:                                               ; preds = %7
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaColspanAttrE, align 8, !noalias !17
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, null
  br i1 %26, label %94, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4, !noalias !17
  %30 = and i32 %29, 16777216
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %94

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %33) #7, !noalias !17
  br label %94

34:                                               ; preds = %7
  %35 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLevelAttrE, align 8, !noalias !17
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %38, label %94, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4, !noalias !17
  %42 = and i32 %41, 16777216
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %94

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %45) #7, !noalias !17
  br label %94

46:                                               ; preds = %7
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaPosinsetAttrE, align 8, !noalias !17
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, null
  br i1 %50, label %94, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4, !noalias !17
  %54 = and i32 %53, 16777216
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %94

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %57) #7, !noalias !17
  br label %94

58:                                               ; preds = %7
  %59 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRowindexAttrE, align 8, !noalias !17
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %61, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %62 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %61, null
  br i1 %62, label %94, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 4, !noalias !17
  %66 = and i32 %65, 16777216
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %94

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %69) #7, !noalias !17
  br label %94

70:                                               ; preds = %7
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaRowspanAttrE, align 8, !noalias !17
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 1
  %77 = load i32, i32* %76, align 4, !noalias !17
  %78 = and i32 %77, 16777216
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %73, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #7, !noalias !17
  br label %94

82:                                               ; preds = %7
  %83 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !17
  %84 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8, !noalias !17
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %85, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !17
  %86 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %85, null
  br i1 %86, label %94, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 1
  %89 = load i32, i32* %88, align 4, !noalias !17
  %90 = and i32 %89, 16777216
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %93) #7, !noalias !17
  br label %94

94:                                               ; preds = %10, %15, %20, %22, %27, %32, %34, %39, %44, %46, %51, %56, %58, %63, %68, %70, %75, %80, %82, %87, %92
  %95 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #7
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %96, align 8
  %97 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, i1 zeroext false)
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %96, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %119, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %119

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #7
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !3

115:                                              ; preds = %106
  call void @llvm.trap() #7
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  br label %119

119:                                              ; preds = %94, %101, %116
  %120 = phi %"class.WTF::StringImpl"* [ null, %94 ], [ %99, %101 ], [ %118, %116 ]
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  %122 = zext i1 %121 to i8
  store i8 %122, i8* %2, align 1
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  %124 = call i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"* nonnull %123, i8* null) #7
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #7
  br label %140

140:                                              ; preds = %119, %136, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #7
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  br label %141

141:                                              ; preds = %3, %140
  %142 = phi i32 [ %124, %140 ], [ 0, %3 ]
  ret i32 %142
}

declare i32 @_ZNK3WTF6String6ToUIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_14AOMIntPropertyERb(%"class.blink::Element"*, i32, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  store i8 1, i8* %2, align 1
  %6 = icmp eq %"class.blink::Element"* %0, null
  br i1 %6, label %105, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  switch i32 %1, label %46 [
    i32 0, label %10
    i32 1, label %22
    i32 2, label %34
  ]

10:                                               ; preds = %7
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaColcountAttrE, align 8, !noalias !20
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8, !noalias !20
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !20
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, null
  br i1 %14, label %58, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !20
  %18 = and i32 %17, 16777216
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #7, !noalias !20
  br label %58

22:                                               ; preds = %7
  %23 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRowcountAttrE, align 8, !noalias !20
  %24 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %24, align 8, !noalias !20
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %25, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !20
  %26 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4, !noalias !20
  %30 = and i32 %29, 16777216
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %58

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %25, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %33) #7, !noalias !20
  br label %58

34:                                               ; preds = %7
  %35 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaSetsizeAttrE, align 8, !noalias !20
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8, !noalias !20
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !20
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4, !noalias !20
  %42 = and i32 %41, 16777216
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %45) #7, !noalias !20
  br label %58

46:                                               ; preds = %7
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !20
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8, !noalias !20
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8, !alias.scope !20
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4, !noalias !20
  %54 = and i32 %53, 16777216
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %57) #7, !noalias !20
  br label %58

58:                                               ; preds = %10, %15, %20, %22, %27, %32, %34, %39, %44, %46, %51, %56
  %59 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #7
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %60, align 8
  %61 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode34GetElementOrInternalsARIAAttributeERNS_7ElementERKNS_13QualifiedNameEb(%"class.blink::Element"* nonnull dereferenceable(104) %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %4, i1 zeroext false)
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %60, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %83, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #7
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  call void @llvm.trap() #7
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  br label %83

83:                                               ; preds = %58, %65, %80
  %84 = phi %"class.WTF::StringImpl"* [ null, %58 ], [ %63, %65 ], [ %82, %80 ]
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = zext i1 %85 to i8
  store i8 %86, i8* %2, align 1
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0
  %88 = call i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"* nonnull %87, i8* null) #7
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #7
  br label %104

104:                                              ; preds = %83, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #7
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  br label %105

105:                                              ; preds = %3, %104
  %106 = phi i32 [ %88, %104 ], [ 0, %3 ]
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode19GetAllAOMPropertiesEPNS_17AOMPropertyClientE(%"class.blink::AccessibleNode"* nocapture readonly, %"class.blink::AOMPropertyClient"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::AOMPropertyClient"* %1 to void (%"class.blink::AOMPropertyClient"*, i32, %"class.WTF::String"*)***
  br label %22

12:                                               ; preds = %22, %2
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %31, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.blink::AOMPropertyClient"* %1 to void (%"class.blink::AOMPropertyClient"*, i32, i1)***
  br label %41

22:                                               ; preds = %10, %22
  %23 = phi %"struct.std::__1::pair.11"* [ %4, %10 ], [ %29, %22 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %23, i64 0, i32 1, i32 0
  %27 = load void (%"class.blink::AOMPropertyClient"*, i32, %"class.WTF::String"*)**, void (%"class.blink::AOMPropertyClient"*, i32, %"class.WTF::String"*)*** %11, align 8
  %28 = load void (%"class.blink::AOMPropertyClient"*, i32, %"class.WTF::String"*)*, void (%"class.blink::AOMPropertyClient"*, i32, %"class.WTF::String"*)** %27, align 8
  tail call void %28(%"class.blink::AOMPropertyClient"* %1, i32 %25, %"class.WTF::String"* dereferenceable(8) %26) #7
  %29 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %23, i64 1
  %30 = icmp eq %"struct.std::__1::pair.11"* %29, %8
  br i1 %30, label %12, label %22

31:                                               ; preds = %41, %12
  %32 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::AOMPropertyClient"* %1 to void (%"class.blink::AOMPropertyClient"*, i32, float)***
  br label %63

41:                                               ; preds = %20, %41
  %42 = phi %"struct.std::__1::pair.17"* [ %14, %20 ], [ %51, %41 ]
  %43 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %42, i64 0, i32 1
  %46 = load i8, i8* %45, align 4, !range !4
  %47 = icmp ne i8 %46, 0
  %48 = load void (%"class.blink::AOMPropertyClient"*, i32, i1)**, void (%"class.blink::AOMPropertyClient"*, i32, i1)*** %21, align 8
  %49 = getelementptr inbounds void (%"class.blink::AOMPropertyClient"*, i32, i1)*, void (%"class.blink::AOMPropertyClient"*, i32, i1)** %48, i64 1
  %50 = load void (%"class.blink::AOMPropertyClient"*, i32, i1)*, void (%"class.blink::AOMPropertyClient"*, i32, i1)** %49, align 8
  tail call void %50(%"class.blink::AOMPropertyClient"* %1, i32 %44, i1 zeroext %47) #7
  %51 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %42, i64 1
  %52 = icmp eq %"struct.std::__1::pair.17"* %51, %18
  br i1 %52, label %31, label %41

53:                                               ; preds = %63, %31
  %54 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %55, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %74, label %61

61:                                               ; preds = %53
  %62 = bitcast %"class.blink::AOMPropertyClient"* %1 to void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)***
  br label %84

63:                                               ; preds = %39, %63
  %64 = phi %"struct.std::__1::pair.23"* [ %33, %39 ], [ %72, %63 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %64, i64 0, i32 1
  %68 = load float, float* %67, align 4
  %69 = load void (%"class.blink::AOMPropertyClient"*, i32, float)**, void (%"class.blink::AOMPropertyClient"*, i32, float)*** %40, align 8
  %70 = getelementptr inbounds void (%"class.blink::AOMPropertyClient"*, i32, float)*, void (%"class.blink::AOMPropertyClient"*, i32, float)** %69, i64 2
  %71 = load void (%"class.blink::AOMPropertyClient"*, i32, float)*, void (%"class.blink::AOMPropertyClient"*, i32, float)** %70, align 8
  tail call void %71(%"class.blink::AOMPropertyClient"* %1, i32 %66, float %68) #7
  %72 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %64, i64 1
  %73 = icmp eq %"struct.std::__1::pair.23"* %72, %37
  br i1 %73, label %53, label %63

74:                                               ; preds = %95, %53
  %75 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %76 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %76, i64 %79
  %81 = icmp eq i32 %78, 0
  br i1 %81, label %98, label %82

82:                                               ; preds = %74
  %83 = bitcast %"class.blink::AOMPropertyClient"* %1 to void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)***
  br label %99

84:                                               ; preds = %61, %95
  %85 = phi %"struct.std::__1::pair.44"* [ %55, %61 ], [ %96, %95 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %85, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %86, align 8
  %88 = icmp eq %"class.blink::AccessibleNode"* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %85, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = load void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)*** %62, align 8
  %93 = getelementptr inbounds void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)** %92, i64 3
  %94 = load void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNode"*)** %93, align 8
  tail call void %94(%"class.blink::AOMPropertyClient"* %1, i32 %91, %"class.blink::AccessibleNode"* nonnull dereferenceable(224) %87) #7
  br label %95

95:                                               ; preds = %84, %89
  %96 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %85, i64 1
  %97 = icmp eq %"struct.std::__1::pair.44"* %96, %59
  br i1 %97, label %74, label %84

98:                                               ; preds = %110, %74
  ret void

99:                                               ; preds = %82, %110
  %100 = phi %"struct.std::__1::pair.54"* [ %76, %82 ], [ %111, %110 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %100, i64 0, i32 1, i32 0, i32 0
  %102 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %101, align 8
  %103 = icmp eq %"class.blink::AccessibleNodeList"* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %100, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = load void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)**, void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)*** %83, align 8
  %108 = getelementptr inbounds void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)*, void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)** %107, i64 4
  %109 = load void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)*, void (%"class.blink::AOMPropertyClient"*, i32, %"class.blink::AccessibleNodeList"*)** %108, align 8
  tail call void %109(%"class.blink::AOMPropertyClient"* %1, i32 %106, %"class.blink::AccessibleNodeList"* nonnull dereferenceable(48) %102) #7
  br label %110

110:                                              ; preds = %99, %104
  %111 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %100, i64 1
  %112 = icmp eq %"struct.std::__1::pair.54"* %111, %80
  br i1 %112, label %98, label %99
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNode"* @_ZNK5blink14AccessibleNode16activeDescendantEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.44"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNode"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.44"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNode"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNode"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode19setActiveDescendantEPS0_(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode19SetRelationPropertyENS_19AOMRelationPropertyEPS0_(%"class.blink::AccessibleNode"* %0, i32 0, %"class.blink::AccessibleNode"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names25kAriaActivedescendantAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode19SetRelationPropertyENS_19AOMRelationPropertyEPS0_(%"class.blink::AccessibleNode"*, i32, %"class.blink::AccessibleNode"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.784", align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 6, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %3, %27
  %14 = phi %"struct.std::__1::pair.44"* [ %28, %27 ], [ %7, %3 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %27

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %14, i64 0, i32 1
  %20 = ptrtoint %"class.blink::AccessibleNode"* %2 to i64
  %21 = bitcast %"class.blink::Member.45"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %83, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.blink::AccessibleNode"* %2 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #7
  br label %83

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %14, i64 1
  %29 = icmp eq %"struct.std::__1::pair.44"* %28, %11
  br i1 %29, label %30, label %13

30:                                               ; preds = %27, %3
  %31 = bitcast %"struct.std::__1::pair.784"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"struct.std::__1::pair.784", %"struct.std::__1::pair.784"* %4, i64 0, i32 0
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.784", %"struct.std::__1::pair.784"* %4, i64 0, i32 1
  store %"class.blink::AccessibleNode"* %2, %"class.blink::AccessibleNode"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %9, %35
  br i1 %36, label %81, label %37, !prof !3

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %7, i64 %10, i32 0
  store i32 %1, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %7, i64 %10, i32 1
  %40 = bitcast %"class.blink::AccessibleNode"** %33 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member.45"* %39 to i64*
  store i64 %41, i64* %42, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %78, label %45

45:                                               ; preds = %37
  %46 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %47 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %46, i64 0, i32 1
  %48 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %47) #7
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %52, !prof !3

50:                                               ; preds = %45
  %51 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %47, i8* %51) #7
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i8* [ %51, %50 ], [ %48, %45 ]
  %54 = bitcast i8* %53 to %"class.blink::ThreadState"**
  %55 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 9
  %57 = load i8, i8* %56, align 1, !range !4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 13
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %64 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %63, align 8
  %65 = load atomic i64, i64* %42 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %64, i64 0, i32 0, i32 0
  %69 = inttoptr i64 %65 to i8*
  %70 = bitcast %"class.blink::MarkingVisitor"* %64 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, i64 5
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, align 8
  tail call void %73(%"class.blink::Visitor"* %68, i8* nonnull %69, i8* %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #7
  %74 = load i64, i64* %60, align 8
  br label %75

75:                                               ; preds = %67, %59
  %76 = phi i64 [ %62, %59 ], [ %74, %67 ]
  %77 = add i64 %76, -1
  store i64 %77, i64* %60, align 8
  br label %78

78:                                               ; preds = %37, %52, %75
  %79 = load i32, i32* %8, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %8, align 4
  br label %82

81:                                               ; preds = %30
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IS4_PS6_EEEEvOT_(%"class.WTF::Vector.41"* %5, %"struct.std::__1::pair.784"* nonnull dereferenceable(16) %4) #7
  br label %82

82:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  br label %83

83:                                               ; preds = %24, %18, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode22NotifyAttributeChangedERKNS_13QualifiedNameE(%"class.blink::AccessibleNode"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = icmp eq %"class.blink::Document"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = icmp eq %"class.blink::Element"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  br label %15

15:                                               ; preds = %2, %6, %10
  %16 = phi %"class.blink::Document"* [ %14, %10 ], [ null, %6 ], [ %4, %2 ]
  %17 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %16) #7
  %18 = icmp eq %"class.blink::AXObjectCache"* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %20, align 8
  %22 = icmp eq %"class.blink::Element"* %21, null
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::AXObjectCache"* %17 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %25 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %25, i64 48
  %27 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, align 8
  tail call void %27(%"class.blink::AXObjectCache"* nonnull %17, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::AccessibleNode"* %0) #7
  br label %33

28:                                               ; preds = %19
  %29 = bitcast %"class.blink::AXObjectCache"* %17 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %30 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %30, i64 30
  %32 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, align 8
  tail call void %32(%"class.blink::AXObjectCache"* nonnull %17, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Element"* nonnull %21) #7
  br label %33

33:                                               ; preds = %15, %28, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode6atomicEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode9setAtomicEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 0, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaAtomicAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i32, i16) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2
  %9 = bitcast i64* %7 to %"struct.std::__1::pair.17"*
  %10 = trunc i16 %2 to i8
  %11 = lshr i16 %2, 8
  %12 = trunc i16 %11 to i8
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %3, %61
  %17 = phi i32 [ %62, %61 ], [ 0, %3 ]
  %18 = tail call dereferenceable(8) %"struct.std::__1::pair.17"* @_ZN3WTF6VectorINSt3__14pairIN5blink18AOMBooleanPropertyEbEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"* %8, i32 %17) #7
  %19 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %61

22:                                               ; preds = %16
  %23 = icmp eq i8 %10, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %18, i64 0, i32 1
  store i8 %12, i8* %25, align 4
  br label %87

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = load i32, i32* %13, align 4
  %30 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  %31 = icmp ugt i32 %29, %17
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  store i8* null, i8** %28, align 8
  br label %42

33:                                               ; preds = %26
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %29) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %34, i8* %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %5) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %39, %33, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %43 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %8, i64 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %43, align 8
  %45 = zext i32 %17 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %44, i64 %45
  %47 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %46, i64 1
  %48 = icmp eq %"struct.std::__1::pair.17"* %46, null
  br i1 %48, label %58, label %49, !prof !3

49:                                               ; preds = %42
  %50 = load i32, i32* %13, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %44, i64 %51
  %53 = bitcast %"struct.std::__1::pair.17"* %46 to i8*
  %54 = bitcast %"struct.std::__1::pair.17"* %47 to i8*
  %55 = ptrtoint %"struct.std::__1::pair.17"* %52 to i64
  %56 = ptrtoint %"struct.std::__1::pair.17"* %47 to i64
  %57 = sub i64 %55, %56
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %54, i64 %57, i1 false) #7
  br label %58

58:                                               ; preds = %49, %42
  %59 = load i32, i32* %13, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %13, align 4
  br label %87

61:                                               ; preds = %16
  %62 = add nuw i32 %17, 1
  %63 = load i32, i32* %13, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %16, label %65

65:                                               ; preds = %61, %3
  %66 = phi i32 [ 0, %3 ], [ %63, %61 ]
  %67 = icmp eq i8 %10, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %65
  %69 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = zext i16 %11 to i64
  %71 = shl nuw nsw i64 %70, 32
  %72 = zext i32 %1 to i64
  %73 = or i64 %71, %72
  store i64 %73, i64* %7, align 8
  %74 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %66, %75
  br i1 %76, label %85, label %77, !prof !3

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %8, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %78, align 8
  %80 = zext i32 %66 to i64
  %81 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %79, i64 %80
  %82 = bitcast %"struct.std::__1::pair.17"* %81 to i64*
  store i64 %73, i64* %82, align 4
  %83 = load i32, i32* %13, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %13, align 4
  br label %86

85:                                               ; preds = %68
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink18AOMBooleanPropertyEbEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.14"* %8, %"struct.std::__1::pair.17"* nonnull dereferenceable(8) %9) #7
  br label %86

86:                                               ; preds = %85, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  br label %87

87:                                               ; preds = %24, %58, %65, %86
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode12autocompleteEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode15setAutocompleteERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 0, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaAutocompleteAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, i32, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.11", align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %62, label %13

13:                                               ; preds = %3, %59
  %14 = phi %"struct.std::__1::pair.11"* [ %60, %59 ], [ %7, %3 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %59

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %14, i64 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #7
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !3

37:                                               ; preds = %28
  tail call void @llvm.trap() #7
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %38, %23, %18
  %41 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %42 = bitcast %"class.WTF::AtomicString"* %19 to i64*
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  store i64 %41, i64* %42, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %121, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %121

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #7
  br label %121

59:                                               ; preds = %13
  %60 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %14, i64 1
  %61 = icmp eq %"struct.std::__1::pair.11"* %60, %11
  br i1 %61, label %62, label %13

62:                                               ; preds = %59, %3
  %63 = bitcast %"struct.std::__1::pair.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #7
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %85, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #7
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %72
  tail call void @llvm.trap() #7
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  %84 = load i32, i32* %8, align 4
  br label %85

85:                                               ; preds = %62, %67, %82
  %86 = phi i32 [ %9, %62 ], [ %9, %67 ], [ %84, %82 ]
  %87 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %4, i64 0, i32 0
  store i32 %1, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %86, %90
  br i1 %91, label %104, label %92, !prof !3

92:                                               ; preds = %85
  %93 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, align 8
  %94 = zext i32 %86 to i64
  %95 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %93, i64 %94, i32 0
  store i32 %1, i32* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %93, i64 %94, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %4, i64 0, i32 1
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.WTF::AtomicString"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.WTF::AtomicString"* %96 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %102 = load i32, i32* %8, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %8, align 4
  br label %120

104:                                              ; preds = %85
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.8"* %5, %"struct.std::__1::pair.11"* nonnull dereferenceable(16) %4) #7
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #7
  br label %120

120:                                              ; preds = %92, %104, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #7
  br label %121

121:                                              ; preds = %58, %55, %40, %120
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode4busyEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode7setBusyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 1, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaBusyAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode7checkedEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setCheckedERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 1, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCheckedAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8colCountEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.29"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.29"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setColCountEN4absl8optionalIiEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode14SetIntPropertyENS_14AOMIntPropertyEN4absl8optionalIiEE(%"class.blink::AccessibleNode"* %0, i32 0, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaColcountAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode14SetIntPropertyENS_14AOMIntPropertyEN4absl8optionalIiEE(%"class.blink::AccessibleNode"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 4
  %9 = bitcast i64* %7 to %"struct.std::__1::pair.29"*
  %10 = trunc i64 %2 to i8
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %3, %61
  %17 = phi i32 [ %62, %61 ], [ 0, %3 ]
  %18 = tail call dereferenceable(8) %"struct.std::__1::pair.29"* @_ZN3WTF6VectorINSt3__14pairIN5blink14AOMIntPropertyEiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"* %8, i32 %17) #7
  %19 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %61

22:                                               ; preds = %16
  %23 = icmp eq i8 %10, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 1
  store i32 %12, i32* %25, align 4
  br label %86

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = load i32, i32* %13, align 4
  %30 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  %31 = icmp ugt i32 %29, %17
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  store i8* null, i8** %28, align 8
  br label %42

33:                                               ; preds = %26
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %29) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %34, i8* %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %5) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %39, %33, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %43 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %8, i64 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %43, align 8
  %45 = zext i32 %17 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %44, i64 %45
  %47 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %46, i64 1
  %48 = icmp eq %"struct.std::__1::pair.29"* %46, null
  br i1 %48, label %58, label %49, !prof !3

49:                                               ; preds = %42
  %50 = load i32, i32* %13, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %44, i64 %51
  %53 = bitcast %"struct.std::__1::pair.29"* %46 to i8*
  %54 = bitcast %"struct.std::__1::pair.29"* %47 to i8*
  %55 = ptrtoint %"struct.std::__1::pair.29"* %52 to i64
  %56 = ptrtoint %"struct.std::__1::pair.29"* %47 to i64
  %57 = sub i64 %55, %56
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %54, i64 %57, i1 false) #7
  br label %58

58:                                               ; preds = %49, %42
  %59 = load i32, i32* %13, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %13, align 4
  br label %86

61:                                               ; preds = %16
  %62 = add nuw i32 %17, 1
  %63 = load i32, i32* %13, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %16, label %65

65:                                               ; preds = %61, %3
  %66 = phi i32 [ 0, %3 ], [ %63, %61 ]
  %67 = icmp eq i8 %10, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %65
  %69 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = and i64 %2, -4294967296
  %71 = zext i32 %1 to i64
  %72 = or i64 %70, %71
  store i64 %72, i64* %7, align 8
  %73 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %66, %74
  br i1 %75, label %84, label %76, !prof !3

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %8, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %77, align 8
  %79 = zext i32 %66 to i64
  %80 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %78, i64 %79
  %81 = bitcast %"struct.std::__1::pair.29"* %80 to i64*
  store i64 %72, i64* %81, align 4
  %82 = load i32, i32* %13, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %13, align 4
  br label %85

84:                                               ; preds = %68
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink14AOMIntPropertyEiEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.26"* %8, %"struct.std::__1::pair.29"* nonnull dereferenceable(8) %9) #7
  br label %85

85:                                               ; preds = %84, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  br label %86

86:                                               ; preds = %24, %58, %65, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8colIndexEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.35"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.35"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setColIndexEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"* %0, i32 0, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaColindexAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 5
  %9 = bitcast i64* %7 to %"struct.std::__1::pair.35"*
  %10 = trunc i64 %2 to i8
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %3, %61
  %17 = phi i32 [ %62, %61 ], [ 0, %3 ]
  %18 = tail call dereferenceable(8) %"struct.std::__1::pair.35"* @_ZN3WTF6VectorINSt3__14pairIN5blink15AOMUIntPropertyEjEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"* %8, i32 %17) #7
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %61

22:                                               ; preds = %16
  %23 = icmp eq i8 %10, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  store i32 %12, i32* %25, align 4
  br label %86

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = load i32, i32* %13, align 4
  %30 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #7
  %31 = icmp ugt i32 %29, %17
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  store i8* null, i8** %28, align 8
  br label %42

33:                                               ; preds = %26
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %29) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %34, i8* %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #7
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %5) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %39, %33, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %43 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %8, i64 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %43, align 8
  %45 = zext i32 %17 to i64
  %46 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %44, i64 %45
  %47 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %46, i64 1
  %48 = icmp eq %"struct.std::__1::pair.35"* %46, null
  br i1 %48, label %58, label %49, !prof !3

49:                                               ; preds = %42
  %50 = load i32, i32* %13, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %44, i64 %51
  %53 = bitcast %"struct.std::__1::pair.35"* %46 to i8*
  %54 = bitcast %"struct.std::__1::pair.35"* %47 to i8*
  %55 = ptrtoint %"struct.std::__1::pair.35"* %52 to i64
  %56 = ptrtoint %"struct.std::__1::pair.35"* %47 to i64
  %57 = sub i64 %55, %56
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %53, i8* nonnull align 4 %54, i64 %57, i1 false) #7
  br label %58

58:                                               ; preds = %49, %42
  %59 = load i32, i32* %13, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %13, align 4
  br label %86

61:                                               ; preds = %16
  %62 = add nuw i32 %17, 1
  %63 = load i32, i32* %13, align 4
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %16, label %65

65:                                               ; preds = %61, %3
  %66 = phi i32 [ 0, %3 ], [ %63, %61 ]
  %67 = icmp eq i8 %10, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %65
  %69 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #7
  %70 = and i64 %2, -4294967296
  %71 = zext i32 %1 to i64
  %72 = or i64 %70, %71
  store i64 %72, i64* %7, align 8
  %73 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %66, %74
  br i1 %75, label %84, label %76, !prof !3

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %8, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %77, align 8
  %79 = zext i32 %66 to i64
  %80 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %78, i64 %79
  %81 = bitcast %"struct.std::__1::pair.35"* %80 to i64*
  store i64 %72, i64* %81, align 4
  %82 = load i32, i32* %13, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %13, align 4
  br label %85

84:                                               ; preds = %68
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15AOMUIntPropertyEjEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.32"* %8, %"struct.std::__1::pair.35"* nonnull dereferenceable(8) %9) #7
  br label %85

85:                                               ; preds = %84, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #7
  br label %86

86:                                               ; preds = %24, %58, %65, %85
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode7colSpanEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.35"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.35"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setColSpanEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"* %0, i32 1, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaColspanAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZNK5blink14AccessibleNode8controlsEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.54"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNodeList"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNodeList"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNodeList"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setControlsEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"* %0, i32 2, %"class.blink::AccessibleNodeList"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaControlsAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, i32, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.785", align 8
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 7, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %3, %35
  %14 = phi %"struct.std::__1::pair.54"* [ %36, %35 ], [ %7, %3 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %35

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %14, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %20, align 8
  %22 = icmp eq %"class.blink::AccessibleNodeList"* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void @_ZN5blink18AccessibleNodeList11RemoveOwnerENS_23AOMRelationListPropertyEPNS_14AccessibleNodeE(%"class.blink::AccessibleNodeList"* nonnull %21, i32 %1, %"class.blink::AccessibleNode"* %0) #7
  br label %24

24:                                               ; preds = %18, %23
  %25 = icmp eq %"class.blink::AccessibleNodeList"* %2, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  tail call void @_ZN5blink18AccessibleNodeList8AddOwnerENS_23AOMRelationListPropertyEPNS_14AccessibleNodeE(%"class.blink::AccessibleNodeList"* nonnull %2, i32 %1, %"class.blink::AccessibleNode"* %0) #7
  br label %27

27:                                               ; preds = %24, %26
  %28 = ptrtoint %"class.blink::AccessibleNodeList"* %2 to i64
  %29 = bitcast %"class.blink::Member.55"* %19 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %91, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::AccessibleNodeList"* %2 to i8*
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #7
  br label %91

35:                                               ; preds = %13
  %36 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %14, i64 1
  %37 = icmp eq %"struct.std::__1::pair.54"* %36, %11
  br i1 %37, label %38, label %13

38:                                               ; preds = %35, %3
  %39 = bitcast %"struct.std::__1::pair.785"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"struct.std::__1::pair.785", %"struct.std::__1::pair.785"* %4, i64 0, i32 0
  store i32 %1, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.785", %"struct.std::__1::pair.785"* %4, i64 0, i32 1
  store %"class.blink::AccessibleNodeList"* %2, %"class.blink::AccessibleNodeList"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %9, %43
  br i1 %44, label %89, label %45, !prof !3

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %7, i64 %10, i32 0
  store i32 %1, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %7, i64 %10, i32 1
  %48 = bitcast %"class.blink::AccessibleNodeList"** %41 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::Member.55"* %47 to i64*
  store i64 %49, i64* %50, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %86, label %53

53:                                               ; preds = %45
  %54 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %55 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %54, i64 0, i32 1
  %56 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %55) #7
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60, !prof !3

58:                                               ; preds = %53
  %59 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %55, i8* %59) #7
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i8* [ %59, %58 ], [ %56, %53 ]
  %62 = bitcast i8* %61 to %"class.blink::ThreadState"**
  %63 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %63, i64 0, i32 9
  %65 = load i8, i8* %64, align 1, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %63, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  %71 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %63, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %71, align 8
  %73 = load atomic i64, i64* %50 monotonic, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %72, i64 0, i32 0, i32 0
  %77 = inttoptr i64 %73 to i8*
  %78 = bitcast %"class.blink::MarkingVisitor"* %72 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %79 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %79, i64 5
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %80, align 8
  tail call void %81(%"class.blink::Visitor"* %76, i8* nonnull %77, i8* %77, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AccessibleNodeListEE5TraceEPNS_7VisitorEPKv) #7
  %82 = load i64, i64* %68, align 8
  br label %83

83:                                               ; preds = %75, %67
  %84 = phi i64 [ %70, %67 ], [ %82, %75 ]
  %85 = add i64 %84, -1
  store i64 %85, i64* %68, align 8
  br label %86

86:                                               ; preds = %45, %60, %83
  %87 = load i32, i32* %8, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %8, align 4
  br label %90

89:                                               ; preds = %38
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IS4_PS6_EEEEvOT_(%"class.WTF::Vector.51"* %5, %"struct.std::__1::pair.785"* nonnull dereferenceable(16) %4) #7
  br label %90

90:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #7
  br label %91

91:                                               ; preds = %32, %27, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode7currentEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setCurrentERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 2, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCurrentAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZN5blink14AccessibleNode11describedByEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.54"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNodeList"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNodeList"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNodeList"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode14setDescribedByEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"* %0, i32 0, %"class.blink::AccessibleNodeList"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescribedbyAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode11descriptionEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode14setDescriptionERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 3, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescriptionAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZNK5blink14AccessibleNode7detailsEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.54"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNodeList"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNodeList"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNodeList"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setDetailsEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"* %0, i32 1, %"class.blink::AccessibleNodeList"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaDetailsAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode8disabledEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setDisabledEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 2, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaDisabledAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNode"* @_ZNK5blink14AccessibleNode12errorMessageEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.44"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNode"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.44"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNode"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNode"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode15setErrorMessageEPS0_(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode19SetRelationPropertyENS_19AOMRelationPropertyEPS0_(%"class.blink::AccessibleNode"* %0, i32 1, %"class.blink::AccessibleNode"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaErrormessageAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode8expandedEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setExpandedEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 3, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaExpandedAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZNK5blink14AccessibleNode6flowToEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.54"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNodeList"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNodeList"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNodeList"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode9setFlowToEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"* %0, i32 3, %"class.blink::AccessibleNodeList"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaFlowtoAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode8hasPopUpEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setHasPopUpERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 4, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaHaspopupAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode6hiddenEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode9setHiddenEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 4, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaHiddenAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode7invalidEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setInvalidERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 5, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaInvalidAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode12keyShortcutsEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode15setKeyShortcutsERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 6, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names21kAriaKeyshortcutsAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode5labelEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 7
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode8setLabelERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 7, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZN5blink14AccessibleNode9labeledByEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.54"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNodeList"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNodeList"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNodeList"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode12setLabeledByEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"* %0, i32 4, %"class.blink::AccessibleNodeList"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaLabelledbyAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode5levelEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.35"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.35"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode8setLevelEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"* %0, i32 2, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLevelAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode4liveEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode7setLiveERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 8, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaLiveAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode5modalEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode8setModalEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 5, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaModalAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode9multilineEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode12setMultilineEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 6, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaMultilineAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode15multiselectableEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 7
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode18setMultiselectableEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 7, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaMultiselectableAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode11orientationEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 9
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode14setOrientationERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 9, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaOrientationAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZNK5blink14AccessibleNode4ownsEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %6, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %8, %25
  %17 = phi %"struct.std::__1::pair.54"* [ %26, %25 ], [ %10, %8 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::AccessibleNodeList"*, %"class.blink::AccessibleNodeList"** %22, align 8
  %24 = icmp eq %"class.blink::AccessibleNodeList"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %17, i64 1
  %27 = icmp eq %"struct.std::__1::pair.54"* %26, %14
  br i1 %27, label %28, label %16

28:                                               ; preds = %21, %25, %1, %5, %8
  %29 = phi %"class.blink::AccessibleNodeList"* [ null, %5 ], [ null, %1 ], [ null, %8 ], [ %23, %21 ], [ null, %25 ]
  ret %"class.blink::AccessibleNodeList"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode7setOwnsEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNodeList"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode23SetRelationListPropertyENS_23AOMRelationListPropertyEPNS_18AccessibleNodeListE(%"class.blink::AccessibleNode"* %0, i32 5, %"class.blink::AccessibleNodeList"* %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaOwnsAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode11placeholderEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 10
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode14setPlaceholderERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 10, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaPlaceholderAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8posInSetEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.35"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 3
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.35"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setPosInSetEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"* %0, i32 3, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaPosinsetAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode7pressedEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 11
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setPressedERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 11, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaPressedAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode8readOnlyEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setReadOnlyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 8, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaReadonlyAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode8relevantEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 12
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setRelevantERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 12, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRelevantAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode8requiredEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 9
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setRequiredEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 9, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRequiredAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode4roleEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 13
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode7setRoleERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 13, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRoleAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode15roleDescriptionEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 14
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode18setRoleDescriptionERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 14, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names24kAriaRoledescriptionAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8rowCountEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.29"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.29"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setRowCountEN4absl8optionalIiEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode14SetIntPropertyENS_14AOMIntPropertyEN4absl8optionalIiEE(%"class.blink::AccessibleNode"* %0, i32 1, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRowcountAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8rowIndexEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.35"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.35"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setRowIndexEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"* %0, i32 4, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaRowindexAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode7rowSpanEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.35"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 5
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.35"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setRowSpanEN4absl8optionalIjEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode15SetUIntPropertyENS_15AOMUIntPropertyEN4absl8optionalIjEE(%"class.blink::AccessibleNode"* %0, i32 5, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaRowspanAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i16 @_ZNK5blink14AccessibleNode8selectedEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %1, %14
  %10 = phi %"struct.std::__1::pair.17"* [ %15, %14 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 10
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 1
  %16 = icmp eq %"struct.std::__1::pair.17"* %15, %7
  br i1 %16, label %22, label %9

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %10, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = zext i8 %19 to i16
  %21 = shl nuw nsw i16 %20, 8
  br label %22

22:                                               ; preds = %14, %1, %17
  %23 = phi i16 [ %21, %17 ], [ 0, %1 ], [ 0, %14 ]
  %24 = phi i16 [ 1, %17 ], [ 0, %1 ], [ 0, %14 ]
  %25 = or i16 %24, %23
  ret i16 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setSelectedEN4absl8optionalIbEE(%"class.blink::AccessibleNode"*, i16) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode18SetBooleanPropertyENS_18AOMBooleanPropertyEN4absl8optionalIbEE(%"class.blink::AccessibleNode"* %0, i32 10, i16 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaSelectedAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode7setSizeEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.29"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.29"* %23, %15
  br i1 %24, label %30, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = shl nuw i64 %28, 32
  br label %30

30:                                               ; preds = %22, %1, %5, %8, %25
  %31 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %29, %25 ], [ 0, %8 ], [ 0, %22 ]
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = or i64 %32, %31
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode10setSetSizeEN4absl8optionalIiEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode14SetIntPropertyENS_14AOMIntPropertyEN4absl8optionalIiEE(%"class.blink::AccessibleNode"* %0, i32 2, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaSetsizeAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode4sortEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 15
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode7setSortERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 15, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kAriaSortAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8valueMaxEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.23"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.23"* %23, %15
  br i1 %24, label %31, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  br label %31

31:                                               ; preds = %22, %1, %5, %8, %25
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %30, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %34 = or i64 %33, %32
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setValueMaxEN4absl8optionalIfEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode16SetFloatPropertyENS_16AOMFloatPropertyEN4absl8optionalIfEE(%"class.blink::AccessibleNode"* %0, i32 0, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValuemaxAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode16SetFloatPropertyENS_16AOMFloatPropertyEN4absl8optionalIfEE(%"class.blink::AccessibleNode"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3
  %9 = bitcast i64* %7 to %"struct.std::__1::pair.23"*
  %10 = trunc i64 %2 to i8
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %66, label %16

16:                                               ; preds = %3, %62
  %17 = phi i32 [ %63, %62 ], [ 0, %3 ]
  %18 = tail call dereferenceable(8) %"struct.std::__1::pair.23"* @_ZN3WTF6VectorINSt3__14pairIN5blink16AOMFloatPropertyEfEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.20"* %8, i32 %17) #7
  %19 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %1
  br i1 %21, label %22, label %62

22:                                               ; preds = %16
  %23 = icmp eq i8 %10, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 1
  %26 = bitcast float* %25 to i32*
  store i32 %12, i32* %26, align 4
  br label %87

27:                                               ; preds = %22
  %28 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = load i32, i32* %13, align 4
  %31 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  %32 = icmp ugt i32 %30, %17
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  store i8* null, i8** %29, align 8
  br label %43

34:                                               ; preds = %27
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %36 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %30) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %35, i8* %36) #7
  %37 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  store i8* %38, i8** %29, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %5) #7
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  br label %43

43:                                               ; preds = %40, %34, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  %44 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %8, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %44, align 8
  %46 = zext i32 %17 to i64
  %47 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %45, i64 %46
  %48 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %47, i64 1
  %49 = icmp eq %"struct.std::__1::pair.23"* %47, null
  br i1 %49, label %59, label %50, !prof !3

50:                                               ; preds = %43
  %51 = load i32, i32* %13, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %45, i64 %52
  %54 = bitcast %"struct.std::__1::pair.23"* %47 to i8*
  %55 = bitcast %"struct.std::__1::pair.23"* %48 to i8*
  %56 = ptrtoint %"struct.std::__1::pair.23"* %53 to i64
  %57 = ptrtoint %"struct.std::__1::pair.23"* %48 to i64
  %58 = sub i64 %56, %57
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* nonnull align 4 %55, i64 %58, i1 false) #7
  br label %59

59:                                               ; preds = %50, %43
  %60 = load i32, i32* %13, align 4
  %61 = add i32 %60, -1
  store i32 %61, i32* %13, align 4
  br label %87

62:                                               ; preds = %16
  %63 = add nuw i32 %17, 1
  %64 = load i32, i32* %13, align 4
  %65 = icmp ult i32 %63, %64
  br i1 %65, label %16, label %66

66:                                               ; preds = %62, %3
  %67 = phi i32 [ 0, %3 ], [ %64, %62 ]
  %68 = icmp eq i8 %10, 0
  br i1 %68, label %87, label %69

69:                                               ; preds = %66
  %70 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #7
  %71 = and i64 %2, -4294967296
  %72 = zext i32 %1 to i64
  %73 = or i64 %71, %72
  store i64 %73, i64* %7, align 8
  %74 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %67, %75
  br i1 %76, label %85, label %77, !prof !3

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %8, i64 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %78, align 8
  %80 = zext i32 %67 to i64
  %81 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %79, i64 %80
  %82 = bitcast %"struct.std::__1::pair.23"* %81 to i64*
  store i64 %73, i64* %82, align 4
  %83 = load i32, i32* %13, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %13, align 4
  br label %86

85:                                               ; preds = %69
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink16AOMFloatPropertyEfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.20"* %8, %"struct.std::__1::pair.23"* nonnull dereferenceable(8) %9) #7
  br label %86

86:                                               ; preds = %85, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #7
  br label %87

87:                                               ; preds = %24, %59, %66, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8valueMinEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.23"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.23"* %23, %15
  br i1 %24, label %31, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  br label %31

31:                                               ; preds = %22, %1, %5, %8, %25
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %30, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %34 = or i64 %33, %32
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setValueMinEN4absl8optionalIfEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode16SetFloatPropertyENS_16AOMFloatPropertyEN4absl8optionalIfEE(%"class.blink::AccessibleNode"* %0, i32 1, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValueminAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink14AccessibleNode8valueNowEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %3) #7
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %8, %22
  %18 = phi %"struct.std::__1::pair.23"* [ %23, %22 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 1
  %24 = icmp eq %"struct.std::__1::pair.23"* %23, %15
  br i1 %24, label %31, label %17

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %18, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  br label %31

31:                                               ; preds = %22, %1, %5, %8, %25
  %32 = phi i64 [ 0, %5 ], [ 0, %1 ], [ %30, %25 ], [ 0, %8 ], [ 0, %22 ]
  %33 = phi i64 [ 0, %5 ], [ 0, %1 ], [ 1, %25 ], [ 0, %8 ], [ 0, %22 ]
  %34 = or i64 %33, %32
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11setValueNowEN4absl8optionalIfEE(%"class.blink::AccessibleNode"*, i64) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode16SetFloatPropertyENS_16AOMFloatPropertyEN4absl8optionalIfEE(%"class.blink::AccessibleNode"* %0, i32 2, i64 %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaValuenowAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode9valueTextEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 16
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode12setValueTextERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 16, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names18kAriaValuetextAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14AccessibleNode14virtualContentEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"struct.std::__1::pair.11"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 17
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %26

18:                                               ; preds = %14, %9
  %19 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %10, i64 1
  %20 = icmp eq %"struct.std::__1::pair.11"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %18, %1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi %"class.WTF::StringImpl"* [ %24, %21 ], [ %16, %14 ]
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %32
  tail call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %21, %26, %42
  %45 = phi %"class.WTF::StringImpl"* [ null, %21 ], [ %27, %26 ], [ %27, %42 ]
  ret %"class.WTF::StringImpl"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode17setVirtualContentERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14AccessibleNode17SetStringPropertyENS_17AOMStringPropertyERKN3WTF12AtomicStringE(%"class.blink::AccessibleNode"* %0, i32 17, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names23kAriaVirtualcontentAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  br label %16

16:                                               ; preds = %11, %7, %2
  %17 = phi %"class.blink::Document"* [ %15, %11 ], [ null, %7 ], [ %5, %2 ]
  %18 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %17) #7
  %19 = icmp eq %"class.blink::AXObjectCache"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::Element"*, %"class.blink::Element"** %21, align 8
  %23 = icmp eq %"class.blink::Element"* %22, null
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %26 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %26, i64 48
  %28 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, align 8
  tail call void %28(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %34

29:                                               ; preds = %20
  %30 = bitcast %"class.blink::AXObjectCache"* %18 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %31 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %31, i64 30
  %33 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, align 8
  tail call void %33(%"class.blink::AXObjectCache"* nonnull %18, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Element"* nonnull %22) #7
  br label %34

34:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AccessibleNodeList"* @_ZN5blink14AccessibleNode10childNodesEv(%"class.blink::AccessibleNode"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10
  %3 = tail call %"class.blink::AccessibleNodeList"* @_ZN5blink18AccessibleNodeList6CreateERKNS_10HeapVectorINS_6MemberINS_14AccessibleNodeEEELj0EEE(%"class.blink::HeapVector.65"* dereferenceable(16) %2) #7
  ret %"class.blink::AccessibleNodeList"* %3
}

declare %"class.blink::AccessibleNodeList"* @_ZN5blink18AccessibleNodeList6CreateERKNS_10HeapVectorINS_6MemberINS_14AccessibleNodeEEELj0EEE(%"class.blink::HeapVector.65"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11appendChildEPS0_RNS_14ExceptionStateE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::AccessibleNode"*, align 8
  store %"class.blink::AccessibleNode"* %1, %"class.blink::AccessibleNode"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %1, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = icmp eq %"class.blink::Element"* %7, null
  %9 = ptrtoint %"class.blink::AccessibleNode"* %1 to i64
  br i1 %8, label %11, label %10

10:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %85

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %1, i64 0, i32 11, i32 0, i32 0
  %13 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %12, align 8
  %14 = icmp eq %"class.blink::AccessibleNode"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %85

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %1, i64 0, i32 11
  %18 = ptrtoint %"class.blink::AccessibleNode"* %0 to i64
  %19 = bitcast %"class.blink::Member.45"* %17 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::AccessibleNode"* %0 to i8*
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #7
  br label %25

25:                                               ; preds = %16, %22
  %26 = bitcast %"class.blink::AccessibleNode"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)***
  %27 = load %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)** %27, i64 10
  %29 = load %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)** %28, align 8
  %30 = tail call %"class.blink::ExecutionContext"* %29(%"class.blink::AccessibleNode"* %0) #7
  %31 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %30) #7
  %32 = bitcast %"class.blink::AccessibleNode"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)***
  %33 = load %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)** %33, i64 10
  %35 = load %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)** %34, align 8
  %36 = tail call %"class.blink::ExecutionContext"* %35(%"class.blink::AccessibleNode"* %1) #7
  %37 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %36) #7
  %38 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #7
  store i32 -1431655766, i32* %4, align 4
  %39 = call zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* %31, %"class.blink::SecurityOrigin"* %37, i32* nonnull dereferenceable(4) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #7
  br i1 %39, label %41, label %40

40:                                               ; preds = %25
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %85

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10, i32 0
  %43 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %62, label %48, !prof !3

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %42, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %49, align 8
  %51 = zext i32 %44 to i64
  %52 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %50, i64 %51
  %53 = bitcast %"class.blink::Member.45"* %52 to i64*
  store atomic i64 %9, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = bitcast %"class.blink::AccessibleNode"* %1 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #7
  br label %59

59:                                               ; preds = %56, %48
  %60 = load i32, i32* %43, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %43, align 4
  br label %63

62:                                               ; preds = %41
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.68"* %42, %"class.blink::AccessibleNode"** nonnull dereferenceable(8) %5) #7
  br label %63

63:                                               ; preds = %59, %62
  %64 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = icmp eq %"class.blink::Document"* %65, null
  br i1 %66, label %67, label %76

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %69 = load %"class.blink::Element"*, %"class.blink::Element"** %68, align 8
  %70 = icmp eq %"class.blink::Element"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %69, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  br label %76

76:                                               ; preds = %63, %67, %71
  %77 = phi %"class.blink::Document"* [ %75, %71 ], [ null, %67 ], [ %65, %63 ]
  %78 = call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %77) #7
  %79 = icmp eq %"class.blink::AXObjectCache"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.blink::AXObjectCache"* %78 to void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)***
  %82 = load void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)** %82, i64 13
  %84 = load void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)** %83, align 8
  call void %84(%"class.blink::AXObjectCache"* nonnull %78, %"class.blink::AccessibleNode"* %0) #7
  br label %85

85:                                               ; preds = %80, %76, %40, %15, %10
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObjectCache"* @_ZN5blink14AccessibleNode16GetAXObjectCacheEv(%"class.blink::AccessibleNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::Document"*, %"class.blink::Document"** %2, align 8
  %4 = icmp eq %"class.blink::Document"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = icmp eq %"class.blink::Element"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  br label %14

14:                                               ; preds = %1, %5, %9
  %15 = phi %"class.blink::Document"* [ %13, %9 ], [ null, %5 ], [ %3, %1 ]
  %16 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %15) #7
  ret %"class.blink::AXObjectCache"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode11removeChildEPS0_RNS_14ExceptionStateE(%"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %1, i64 0, i32 11
  %5 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %5, align 8
  %7 = icmp eq %"class.blink::AccessibleNode"* %6, %0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %59

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %12, i64 %15
  %17 = icmp eq i32 %14, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %9, %23
  %19 = phi %"class.blink::Member.45"* [ %24, %23 ], [ %12, %9 ]
  %20 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %20, align 8
  %22 = icmp eq %"class.blink::AccessibleNode"* %21, %1
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %19, i64 1
  %25 = icmp eq %"class.blink::Member.45"* %24, %16
  br i1 %25, label %29, label %18

26:                                               ; preds = %18, %9
  %27 = phi %"class.blink::Member.45"* [ %12, %9 ], [ %19, %18 ]
  %28 = icmp eq %"class.blink::Member.45"* %27, %16
  br i1 %28, label %29, label %30

29:                                               ; preds = %23, %26
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %59

30:                                               ; preds = %26
  %31 = bitcast %"class.blink::Member.45"* %4 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  %32 = bitcast %"class.WTF::Vector.68"* %10 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = ptrtoint %"class.blink::Member.45"* %27 to i64
  %35 = sub i64 %34, %33
  %36 = lshr exact i64 %35, 3
  %37 = trunc i64 %36 to i32
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.68"* %10, i32 %37) #7
  %38 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = icmp eq %"class.blink::Document"* %39, null
  br i1 %40, label %41, label %50

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %43 = load %"class.blink::Element"*, %"class.blink::Element"** %42, align 8
  %44 = icmp eq %"class.blink::Element"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %43, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  br label %50

50:                                               ; preds = %30, %41, %45
  %51 = phi %"class.blink::Document"* [ %49, %45 ], [ null, %41 ], [ %39, %30 ]
  %52 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %51) #7
  %53 = icmp eq %"class.blink::AXObjectCache"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::AXObjectCache"* %52 to void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)***
  %56 = load void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)** %56, i64 13
  %58 = load void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::AccessibleNode"*)** %57, align 8
  tail call void %58(%"class.blink::AXObjectCache"* nonnull %52, %"class.blink::AccessibleNode"* %0) #7
  br label %59

59:                                               ; preds = %29, %50, %54, %8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14AccessibleNode13InterfaceNameEv(%"class.blink::AccessibleNode"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names15kAccessibleNodeE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink14AccessibleNode19GetExecutionContextEv(%"class.blink::AccessibleNode"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::Element"*, %"class.blink::Element"** %2, align 8
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::Element"* %3 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %8 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %8, i64 10
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %9, align 8
  %11 = tail call %"class.blink::ExecutionContext"* %10(%"class.blink::Node"* %6) #7
  br label %22

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 11, i32 0, i32 0
  %14 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %13, align 8
  %15 = icmp eq %"class.blink::AccessibleNode"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::AccessibleNode"* %14 to %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)***
  %18 = load %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)**, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)** %18, i64 10
  %20 = load %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)*, %"class.blink::ExecutionContext"* (%"class.blink::AccessibleNode"*)** %19, align 8
  %21 = tail call %"class.blink::ExecutionContext"* %20(%"class.blink::AccessibleNode"* nonnull %14) #7
  br label %22

22:                                               ; preds = %12, %16, %5
  %23 = phi %"class.blink::ExecutionContext"* [ %11, %5 ], [ %21, %16 ], [ null, %12 ]
  ret %"class.blink::ExecutionContext"* %23
}

declare void @_ZN5blink18AccessibleNodeList11RemoveOwnerENS_23AOMRelationListPropertyEPNS_14AccessibleNodeE(%"class.blink::AccessibleNodeList"*, i32, %"class.blink::AccessibleNode"*) local_unnamed_addr #3

declare void @_ZN5blink18AccessibleNodeList8AddOwnerENS_23AOMRelationListPropertyEPNS_14AccessibleNodeE(%"class.blink::AccessibleNodeList"*, i32, %"class.blink::AccessibleNode"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14AccessibleNode21OnRelationListChangedENS_23AOMRelationListPropertyE(%"class.blink::AccessibleNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  call fastcc void @_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_23AOMRelationListPropertyE(%"class.blink::QualifiedName"* nonnull sret %3, i32 %1)
  %5 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  %11 = icmp eq %"class.blink::Element"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  br label %17

17:                                               ; preds = %12, %8, %2
  %18 = phi %"class.blink::Document"* [ %16, %12 ], [ null, %8 ], [ %6, %2 ]
  %19 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %18) #7
  %20 = icmp eq %"class.blink::AXObjectCache"* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8, i32 0, i32 0
  %23 = load %"class.blink::Element"*, %"class.blink::Element"** %22, align 8
  %24 = icmp eq %"class.blink::Element"* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::AXObjectCache"* %19 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)***
  %27 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %27, i64 48
  %29 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::AccessibleNode"*)** %28, align 8
  call void %29(%"class.blink::AXObjectCache"* nonnull %19, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %3, %"class.blink::AccessibleNode"* %0) #7
  br label %35

30:                                               ; preds = %21
  %31 = bitcast %"class.blink::AXObjectCache"* %19 to void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)***
  %32 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %32, i64 30
  %34 = load void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::QualifiedName"*, %"class.blink::Element"*)** %33, align 8
  call void %34(%"class.blink::AXObjectCache"* nonnull %19, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %3, %"class.blink::Element"* nonnull %23) #7
  br label %35

35:                                               ; preds = %17, %25, %30
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret void
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14AccessibleNode5TraceEPNS_7VisitorE(%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 8
  %4 = bitcast %"class.blink::Member.73"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 9
  %15 = bitcast %"class.blink::Member.100"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 6
  %26 = bitcast %"class.blink::HeapVector.38"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  %29 = bitcast %"class.blink::HeapVector.38"* %25 to i8**
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %31 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, i64 11
  %33 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8** %29) #7
  br i1 %28, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #7
  br label %40

40:                                               ; preds = %24, %34
  %41 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 7
  %42 = bitcast %"class.blink::HeapVector.48"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  %45 = bitcast %"class.blink::HeapVector.48"* %41 to i8**
  %46 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %46, i64 11
  %48 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %1, i8** %45) #7
  br i1 %44, label %55, label %49

49:                                               ; preds = %40
  %50 = inttoptr i64 %43 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv) #7
  br label %55

55:                                               ; preds = %40, %49
  %56 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 10
  %57 = bitcast %"class.blink::HeapVector.65"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  %60 = bitcast %"class.blink::HeapVector.65"* %56 to i8**
  %61 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %30, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %61, i64 11
  %63 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %1, i8** %60) #7
  br i1 %59, label %70, label %64

64:                                               ; preds = %55
  %65 = inttoptr i64 %58 to i8*
  %66 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %1, i8* nonnull %65, i8* nonnull %65, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #7
  br label %70

70:                                               ; preds = %55, %64
  %71 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 11
  %72 = bitcast %"class.blink::Member.45"* %71 to i64*
  %73 = load atomic i64, i64* %72 monotonic, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %70
  %76 = inttoptr i64 %73 to i8*
  %77 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %78 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %78, i64 5
  %80 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %79, align 8
  tail call void %80(%"class.blink::Visitor"* %1, i8* nonnull %76, i8* nonnull %76, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #7
  br label %81

81:                                               ; preds = %70, %75
  %82 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 1
  %83 = bitcast %"class.blink::EventTargetData"* %82 to i8*
  %84 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %83, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261) #7
  %85 = bitcast i8* %84 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %85, %"class.blink::Visitor"* %1) #7
  %86 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %86, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #7
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #7
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #7
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14AccessibleNode18GetWrapperTypeInfoEv(%"class.blink::AccessibleNode"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14AccessibleNode18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #3

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #3

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #3

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #3

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #7

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #7
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.776"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #3

declare i32 @_ZNK3WTF6String5ToIntEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* dereferenceable(4)) local_unnamed_addr #3

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.118"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.118"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.73"*, %"class.blink::Member.73"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.73", %"class.blink::Member.73"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.73"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.118"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.73"*, %"class.blink::Member.73"** %8, align 8
  %10 = icmp eq %"class.blink::Member.73"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.118"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.73"*, %"class.blink::Member.73"** %8, align 8
  %26 = icmp eq %"class.blink::Member.73"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.73"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.118"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.118"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.118"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.118"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #7
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #7
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #7
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.73"*, %"class.blink::Member.73"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.73"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.73"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.118"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #7
  %33 = bitcast %"class.WTF::Vector.118"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #7
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #7
  %42 = bitcast %"class.WTF::Vector.118"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.118", %"class.WTF::Vector.118"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #7
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.73"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.73", %"class.blink::Member.73"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.73"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.68"*, %"class.blink::AccessibleNode"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.68"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %16, i64 %18
  %20 = bitcast %"class.blink::AccessibleNode"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.45"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #7
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.68"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %8, align 8
  %10 = icmp eq %"class.blink::Member.45"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1202"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1202"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.68"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1202", %"class.blink::HeapVectorBacking.1202"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %8, align 8
  %26 = icmp eq %"class.blink::Member.45"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.45"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.68"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.68"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.68"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.68"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #7
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64 %14) #7
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1202"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #7
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1202"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1202"* %17, null
  %23 = icmp ne %"class.blink::Member.45"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.45"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.68"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1202", %"class.blink::HeapVectorBacking.1202"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #7
  %33 = bitcast %"class.WTF::Vector.68"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #7
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #7
  %42 = bitcast %"class.WTF::Vector.68"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1202", %"class.blink::HeapVectorBacking.1202"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1202"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1202"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1202"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14AccessibleNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.45"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.45"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #7
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.68"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.68", %"class.WTF::Vector.68"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.45"* %26, null
  %32 = icmp ne %"class.blink::Member.45"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !2

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.45"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.45"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.45"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.45"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.45"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !23

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.45"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.45"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.45"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.45"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.45"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.45"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 1
  %68 = bitcast %"class.blink::Member.45"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.45"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 2
  %73 = bitcast %"class.blink::Member.45"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.45"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 3
  %78 = bitcast %"class.blink::Member.45"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.45"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 4
  %83 = bitcast %"class.blink::Member.45"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.45"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 5
  %88 = bitcast %"class.blink::Member.45"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.45"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 6
  %93 = bitcast %"class.blink::Member.45"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.45"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 7
  %98 = bitcast %"class.blink::Member.45"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.45"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.45"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.45"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.45"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.45"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.45"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #7
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.45"*, %"class.blink::Member.45"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.45"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #7
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS6_EEvOT_(%"class.WTF::Vector.8"*, %"struct.std::__1::pair.11"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.11"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.11"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.11"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.11"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.11"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.11"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.8"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.11"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.11"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.11"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.8", %"class.WTF::Vector.8"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.11"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.11"*, %"struct.std::__1::pair.11"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.11"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.11"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.8"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.8"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.11"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.11"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.11"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.11"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %100, i64 %103, i32 0
  %105 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %101, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %100, i64 %103, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.11", %"struct.std::__1::pair.11"* %101, i64 0, i32 1
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.WTF::AtomicString"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %109, align 8
  %113 = load i32, i32* %3, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink17AOMStringPropertyENS_12AtomicStringEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.44"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IS4_PS6_EEEEEPS8_PvDpOT_(i8*, %"struct.std::__1::pair.784"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.std::__1::pair.44"*
  %4 = bitcast i8* %0 to i32*
  %5 = getelementptr inbounds %"struct.std::__1::pair.784", %"struct.std::__1::pair.784"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.784", %"struct.std::__1::pair.784"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::AccessibleNode"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #7
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #7
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #7
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"struct.std::__1::pair.44"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IS4_PS6_EEEEvOT_(%"class.WTF::Vector.41"*, %"struct.std::__1::pair.784"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.41"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %16, i64 %18
  %20 = bitcast %"struct.std::__1::pair.44"* %19 to i8*
  %21 = tail call %"struct.std::__1::pair.44"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IS4_PS6_EEEEEPS8_PvDpOT_(i8* %20, %"struct.std::__1::pair.784"* dereferenceable(16) %1)
  %22 = load i32, i32* %3, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.41"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.44"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.1215"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1215"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.41"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1215", %"class.blink::HeapVectorBacking.1215"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.44"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.44"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.41"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink19AOMRelationPropertyENS3_6MemberINS3_14AccessibleNodeEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.41"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.41"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.41"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #7
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEEEmm(i64 %14) #7
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking.1215"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #7
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1215"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.44"*, %"struct.std::__1::pair.44"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1215"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.44"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.44"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.41"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1215", %"class.blink::HeapVectorBacking.1215"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #7
  %33 = bitcast %"class.WTF::Vector.41"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #7
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #7
  %42 = bitcast %"class.WTF::Vector.41"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1215", %"class.blink::HeapVectorBacking.1215"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1215"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1215"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1215"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([259 x i8], [259 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_19AOMRelationPropertyENS1_6MemberINS1_14AccessibleNodeEEEEENS_12VectorTraitsIS9_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #7
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.44"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.44", %"struct.std::__1::pair.44"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.45"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #7
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_19AOMRelationPropertyENS_6MemberINS_14AccessibleNodeEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.54"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IS4_PS6_EEEEEPS8_PvDpOT_(i8*, %"struct.std::__1::pair.785"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.std::__1::pair.54"*
  %4 = bitcast i8* %0 to i32*
  %5 = getelementptr inbounds %"struct.std::__1::pair.785", %"struct.std::__1::pair.785"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.785", %"struct.std::__1::pair.785"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::AccessibleNodeList"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #7
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #7
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AccessibleNodeListEE5TraceEPNS_7VisitorEPKv) #7
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"struct.std::__1::pair.54"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE14AppendSlowCaseINS2_IS4_PS6_EEEEvOT_(%"class.WTF::Vector.51"*, %"struct.std::__1::pair.785"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.51"* %0, i32 %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %16, i64 %18
  %20 = bitcast %"struct.std::__1::pair.54"* %19 to i8*
  %21 = tail call %"struct.std::__1::pair.54"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEENS_12VectorTraitsIS8_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJNS2_IS4_PS6_EEEEEPS8_PvDpOT_(i8* %20, %"struct.std::__1::pair.785"* dereferenceable(16) %1)
  %22 = load i32, i32* %3, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18AccessibleNodeListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AccessibleNodeList"*
  %4 = bitcast i8* %1 to void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)**, void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNodeList"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AccessibleNodeList"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.51"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.54"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEEEmm(i64 %11) #7
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.1231"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64 %14) #7
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1231"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.51"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1231", %"class.blink::HeapVectorBacking.1231"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #7
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.54"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.54"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #7
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #7
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #7
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #7
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.51"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink23AOMRelationListPropertyENS3_6MemberINS3_18AccessibleNodeListEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.51"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.51"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.51"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #7
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #7
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEEEmm(i64 %14) #7
  %16 = lshr i64 %15, 4
  %17 = tail call %"class.blink::HeapVectorBacking.1231"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64 %16) #7
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1231"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1231"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.54"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.54"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.51"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 4
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1231", %"class.blink::HeapVectorBacking.1231"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #7
  %33 = bitcast %"class.WTF::Vector.51"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #7
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #7
  %42 = bitcast %"class.WTF::Vector.51"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.51", %"class.WTF::Vector.51"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1231", %"class.blink::HeapVectorBacking.1231"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1231"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1231"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1231"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS7_EEE14AllocateObjectISB_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([275 x i8], [275 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_23AOMRelationListPropertyENS1_6MemberINS1_18AccessibleNodeListEEEEENS_12VectorTraitsIS9_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #7
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.54"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.54", %"struct.std::__1::pair.54"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.55"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18AccessibleNodeListEE5TraceEPNS_7VisitorEPKv) #7
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_23AOMRelationListPropertyENS_6MemberINS_18AccessibleNodeListEEEEEN3WTF12VectorTraitsIS8_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.std::__1::pair.17"* @_ZN3WTF6VectorINSt3__14pairIN5blink18AOMBooleanPropertyEbEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %24, i64 %25
  ret %"struct.std::__1::pair.17"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink18AOMBooleanPropertyEbEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.14"*, %"struct.std::__1::pair.17"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.17"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.17"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.17"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.17"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.17"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.17"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.17"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.17"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.17"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.17"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.17"*, %"struct.std::__1::pair.17"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.17"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.17"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.17"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.17"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.17"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.17"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.17", %"struct.std::__1::pair.17"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair.17"* %101 to i64*
  %106 = bitcast %"struct.std::__1::pair.17"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink18AOMBooleanPropertyEbEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.std::__1::pair.29"* @_ZN3WTF6VectorINSt3__14pairIN5blink14AOMIntPropertyEiEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %24, i64 %25
  ret %"struct.std::__1::pair.29"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink14AOMIntPropertyEiEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.26"*, %"struct.std::__1::pair.29"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.29"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.29"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.29"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14AOMIntPropertyEiEEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14AOMIntPropertyEiEEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.29"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.29"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.29"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.26"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.29"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.29"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.29"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.29"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14AOMIntPropertyEiEEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14AOMIntPropertyEiEEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.29"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.29"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.26"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.29"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.29"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.29"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.29"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.29", %"struct.std::__1::pair.29"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair.29"* %101 to i64*
  %106 = bitcast %"struct.std::__1::pair.29"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14AOMIntPropertyEiEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.std::__1::pair.35"* @_ZN3WTF6VectorINSt3__14pairIN5blink15AOMUIntPropertyEjEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.32"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %24, i64 %25
  ret %"struct.std::__1::pair.35"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink15AOMUIntPropertyEjEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.32"*, %"struct.std::__1::pair.35"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.35"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.35"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.35"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.35"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.35"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.35"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.32"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.35"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.35"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.35"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.35"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.35"*, %"struct.std::__1::pair.35"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.35"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.35"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.32"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.35"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.35"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.35"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.35"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.35", %"struct.std::__1::pair.35"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair.35"* %101 to i64*
  %106 = bitcast %"struct.std::__1::pair.35"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink15AOMUIntPropertyEjEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.std::__1::pair.23"* @_ZN3WTF6VectorINSt3__14pairIN5blink16AOMFloatPropertyEfEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.20"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %24, i64 %25
  ret %"struct.std::__1::pair.23"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink16AOMFloatPropertyEfEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.20"*, %"struct.std::__1::pair.23"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair.23"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair.23"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair.23"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair.23"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair.23"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair.23"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #7
  %47 = bitcast %"class.WTF::Vector.20"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #7
  %51 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair.23"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair.23"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair.23"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.20", %"class.WTF::Vector.20"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair.23"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEmm(i64 %71) #7
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEPKcv, i64 0, i64 0)) #7
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair.23"*, %"struct.std::__1::pair.23"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair.23"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair.23"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #7
  %87 = bitcast %"class.WTF::Vector.20"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #7
  %91 = bitcast %"class.WTF::Vector.20"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair.23"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair.23"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair.23"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair.23"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair.23", %"struct.std::__1::pair.23"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair.23"* %101 to i64*
  %106 = bitcast %"struct.std::__1::pair.23"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink16AOMFloatPropertyEfEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AccessibleNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AccessibleNode"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_17AOMStringPropertyE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_17AOMStringPropertyE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_19AOMRelationPropertyE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_19AOMRelationPropertyE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_18AOMBooleanPropertyE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_18AOMBooleanPropertyE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_16AOMFloatPropertyE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_16AOMFloatPropertyE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_15AOMUIntPropertyE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_15AOMUIntPropertyE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_14AOMIntPropertyE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink12_GLOBAL__N_129GetCorrespondingARIAAttributeENS_14AOMIntPropertyE"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
