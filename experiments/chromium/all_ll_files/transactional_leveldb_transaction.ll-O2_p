; ModuleID = '../../components/services/storage/indexed_db/transactional_leveldb/transactional_leveldb_transaction.cc'
source_filename = "../../components/services/storage/indexed_db/transactional_leveldb/transactional_leveldb_transaction.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.content::TransactionalLevelDBTransaction" = type { i32 (...)**, %"class.base::RefCounted", %"class.content::TransactionalLevelDBDatabase"*, %"class.std::__1::unique_ptr.110", i8, %"class.base::OnceCallback.133", %"class.base::internal::flat_tree", %"class.std::__1::set", i8, %"class.base::WeakPtrFactory.134" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.content::LevelDBScope"* }
%"class.base::OnceCallback.133" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.41", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"**, %"class.std::__1::__compressed_pair.74" }
%"class.content::TransactionalLevelDBIterator" = type { i32 (...)**, %"class.base::WeakPtr", %"class.std::__1::vector"*, %"class.base::WeakPtr.61", i32, %"class.std::__1::unique_ptr.62", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.68", %"class.leveldb::Comparator"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.60 }
%class.scoped_refptr.60 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.43", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.43" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.44" }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"class.base::WeakPtr.61" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.leveldb::Iterator"* }
%"class.leveldb::Iterator" = type { i32 (...)**, %"struct.leveldb::Iterator::CleanupNode" }
%"struct.leveldb::Iterator::CleanupNode" = type { void (i8*, i8*)*, i8*, i8*, %"struct.leveldb::Iterator::CleanupNode"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.content::LevelDBSnapshot"* }
%"class.content::LevelDBSnapshot" = type { %"class.leveldb::DB"*, %"class.leveldb::Snapshot"* }
%"class.leveldb::DB" = type { i32 (...)** }
%"class.leveldb::Snapshot" = type { i32 (...)** }
%"class.leveldb::Comparator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.content::TransactionalLevelDBIterator"** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i64 }
%"class.base::WeakPtrFactory.134" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.content::TransactionalLevelDBDatabase" = type { %"class.base::trace_event::MemoryDumpProvider", %class.scoped_refptr, %"class.std::__1::unique_ptr.15", %"class.content::TransactionalLevelDBFactory"*, %"class.base::Time", %"class.std::__1::unique_ptr.52", %"class.base::internal::flat_tree", %"class.std::__1::set", i8, %"class.base::HashingMRUCache", i32, i32, %"class.base::WeakPtrFactory.109" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.content::LevelDBState"* }
%"class.content::LevelDBState" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr", %"class.leveldb::Comparator"*, %"class.std::__1::unique_ptr.2", %"class.base::FilePath", %"class.std::__1::basic_string", %"struct.std::__1::atomic.11", %"class.base::WaitableEvent"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.leveldb::Env"* }
%"class.leveldb::Env" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.leveldb::DB"* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"class.base::WaitableEvent" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.content::LevelDBScopes"* }
%"class.content::LevelDBScopes" = type { %"class.std::__1::vector", i64, %"class.std::__1::vector.23", %"class.std::__1::vector.30", %class.scoped_refptr.38, %class.scoped_refptr.38, i8, i32, %class.scoped_refptr, %"class.content::ScopesLockManager"*, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.std::__1::pair.32"*, %"struct.std::__1::pair.32"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair.32" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair.32"* }
%class.scoped_refptr.38 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.39" }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::ScopesLockManager" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::TransactionalLevelDBFactory" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.base::Clock"* }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::HashingMRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.87" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"class.base::WeakPtrFactory.109" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::LevelDBScope" = type { i64, i64, i64, i32, %"class.std::__1::vector", i64, %class.scoped_refptr, %"class.std::__1::vector.113", %"class.base::flat_map", %"class.base::OnceCallback.129", %"class.base::RepeatingCallback", %"class.leveldb::WriteBatch", i8, %"class.base::internal::CheckedNumeric", i8, i8, %"class.content::LevelDBScopesUndoTask", %"class.content::LevelDBScopesCleanupTask", %"class.content::ScopesEncoder", %"class.std::__1::basic_string" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"class.content::ScopeLock"*, %"class.content::ScopeLock"*, %"class.std::__1::__compressed_pair.115" }
%"class.content::ScopeLock" = type { %"struct.content::ScopeLockRange", i32, %"class.base::OnceCallback" }
%"struct.content::ScopeLockRange" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.content::ScopeLock"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.120" }
%"class.base::internal::flat_tree.120" = type { %"struct.content::LevelDBScope::EmptyRangeLessThan", %"class.std::__1::vector.121" }
%"struct.content::LevelDBScope::EmptyRangeLessThan" = type { %"class.leveldb::Comparator"* }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"struct.std::__1::pair.123"*, %"struct.std::__1::pair.123"*, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::pair.123" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::pair.123"* }
%"class.base::OnceCallback.129" = type { %"class.base::internal::CallbackBase" }
%"class.leveldb::WriteBatch" = type { %"class.std::__1::basic_string" }
%"class.base::internal::CheckedNumeric" = type { %"class.base::internal::CheckedNumericState" }
%"class.base::internal::CheckedNumericState" = type { i8, i64 }
%"class.content::LevelDBScopesUndoTask" = type { %"class.google::protobuf::MessageLite", %"union.content::LevelDBScopesUndoTask::OperationUnion", %"class.google::protobuf::internal::CachedSize", [1 x i32] }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"union.content::LevelDBScopesUndoTask::OperationUnion" = type { %"class.content::LevelDBScopesUndoTask_Put"* }
%"class.content::LevelDBScopesUndoTask_Put" = type <{ %"class.google::protobuf::MessageLite", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.content::LevelDBScopesCleanupTask" = type { %"class.google::protobuf::MessageLite", %"union.content::LevelDBScopesCleanupTask::OperationUnion", %"class.google::protobuf::internal::CachedSize", [1 x i32] }
%"union.content::LevelDBScopesCleanupTask::OperationUnion" = type { %"class.content::LevelDBScopesKeyRange"* }
%"class.content::LevelDBScopesKeyRange" = type <{ %"class.google::protobuf::MessageLite", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.content::ScopesEncoder" = type { %"class.std::__1::basic_string" }
%"class.content::LevelDBDirectTransaction" = type { i32 (...)**, %"class.content::TransactionalLevelDBDatabase"*, %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.content::LevelDBWriteBatch"* }
%"class.content::LevelDBWriteBatch" = type { %"class.std::__1::unique_ptr.147" }
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.leveldb::WriteBatch"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.content::TransactionalLevelDBIterator"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.leveldb::Status" = type { i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.leveldb::Slice" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.157" }
%"class.base::time_internal::TimeBase.157" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::__split_buffer" = type { %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"**, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.75", %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::allocator.77"* }
%"class.std::__1::allocator.77" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16vectorIPN7content28TransactionalLevelDBIteratorENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN7content28TransactionalLevelDBIteratorERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIPN7content28TransactionalLevelDBIteratorENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIPN7content28TransactionalLevelDBIteratorERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN7content31TransactionalLevelDBTransactionE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBTransaction"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)* @_ZN7content31TransactionalLevelDBTransaction3GetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPb to i8*), i8* bitcast (void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBTransaction"*, i1)* @_ZN7content31TransactionalLevelDBTransaction6CommitEb to i8*), i8* bitcast (void (%"class.content::TransactionalLevelDBTransaction"*)* @_ZN7content31TransactionalLevelDBTransactionD2Ev to i8*), i8* bitcast (void (%"class.content::TransactionalLevelDBTransaction"*)* @_ZN7content31TransactionalLevelDBTransactionD0Ev to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"LevelDBTransaction::Commit\00", align 1
@_ZTVN7content24LevelDBDirectTransactionE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::LevelDBDirectTransaction"*)* @_ZN7content24LevelDBDirectTransactionD2Ev to i8*), i8* bitcast (void (%"class.content::LevelDBDirectTransaction"*)* @_ZN7content24LevelDBDirectTransactionD0Ev to i8*), i8* bitcast (void (%"class.leveldb::Status"*, %"class.content::LevelDBDirectTransaction"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)* @_ZN7content24LevelDBDirectTransaction3GetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPb to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"LevelDBDirectTransaction::Commit\00", align 1

@_ZN7content31TransactionalLevelDBTransactionC1EPNS_28TransactionalLevelDBDatabaseENSt3__110unique_ptrINS_12LevelDBScopeENS3_14default_deleteIS5_EEEE = hidden unnamed_addr alias void (%"class.content::TransactionalLevelDBTransaction"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBScope"*), void (%"class.content::TransactionalLevelDBTransaction"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBScope"*)* @_ZN7content31TransactionalLevelDBTransactionC2EPNS_28TransactionalLevelDBDatabaseENSt3__110unique_ptrINS_12LevelDBScopeENS3_14default_deleteIS5_EEEE
@_ZN7content31TransactionalLevelDBTransactionD1Ev = hidden unnamed_addr alias void (%"class.content::TransactionalLevelDBTransaction"*), void (%"class.content::TransactionalLevelDBTransaction"*)* @_ZN7content31TransactionalLevelDBTransactionD2Ev
@_ZN7content24LevelDBDirectTransactionC1EPNS_28TransactionalLevelDBDatabaseE = hidden unnamed_addr alias void (%"class.content::LevelDBDirectTransaction"*, %"class.content::TransactionalLevelDBDatabase"*), void (%"class.content::LevelDBDirectTransaction"*, %"class.content::TransactionalLevelDBDatabase"*)* @_ZN7content24LevelDBDirectTransactionC2EPNS_28TransactionalLevelDBDatabaseE
@_ZN7content24LevelDBDirectTransactionD1Ev = hidden unnamed_addr alias void (%"class.content::LevelDBDirectTransaction"*), void (%"class.content::LevelDBDirectTransaction"*)* @_ZN7content24LevelDBDirectTransactionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransactionC2EPNS_28TransactionalLevelDBDatabaseENSt3__110unique_ptrINS_12LevelDBScopeENS3_14default_deleteIS5_EEEE(%"class.content::TransactionalLevelDBTransaction"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBScope"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.content::LevelDBScope"* %2 to i64
  %5 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content31TransactionalLevelDBTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 2
  store %"class.content::TransactionalLevelDBDatabase"* %1, %"class.content::TransactionalLevelDBDatabase"** %7, align 8
  %8 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr.110"* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 4
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #10
  %16 = bitcast %"class.base::internal::BindStateBase"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false)
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  %17 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 8
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 9, i32 0
  %19 = ptrtoint %"class.content::TransactionalLevelDBTransaction"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransactionD2Ev(%"class.content::TransactionalLevelDBTransaction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content31TransactionalLevelDBTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0
  %5 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %4, %"class.std::__1::__tree_node"* %7) #10
  %8 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %9 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %8, align 8
  %10 = icmp eq %"class.content::TransactionalLevelDBIterator"** %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %9 to i64
  %13 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %14 = bitcast %"class.content::TransactionalLevelDBIterator"*** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %"class.content::TransactionalLevelDBIterator"** %9 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %11
  %17 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %17) #10
  %18 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %18, align 8
  store %"class.content::LevelDBScope"* null, %"class.content::LevelDBScope"** %18, align 8
  %20 = icmp eq %"class.content::LevelDBScope"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  tail call void @_ZN7content12LevelDBScopeD1Ev(%"class.content::LevelDBScope"* nonnull %19) #10
  %22 = bitcast %"class.content::LevelDBScope"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %16, %21
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransactionD0Ev(%"class.content::TransactionalLevelDBTransaction"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7content31TransactionalLevelDBTransactionD2Ev(%"class.content::TransactionalLevelDBTransaction"* %0) #10
  %2 = bitcast %"class.content::TransactionalLevelDBTransaction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction3PutERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = alloca %"class.leveldb::Slice", align 8
  %7 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %8, align 8
  %10 = bitcast %"class.leveldb::Slice"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %2) #10
  %12 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  %13 = extractvalue { i8*, i64 } %11, 0
  store i8* %13, i8** %12, align 8
  %14 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  %15 = extractvalue { i8*, i64 } %11, 1
  store i64 %15, i64* %14, align 8
  %16 = bitcast %"class.leveldb::Slice"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  store i8* %25, i8** %17, align 8
  %26 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %20 to i64
  %30 = select i1 %21, i64 %28, i64 %29
  store i64 %30, i64* %26, align 8
  call void @_ZN7content12LevelDBScope3PutERKN7leveldb5SliceES4_(%"class.leveldb::Status"* sret %0, %"class.content::LevelDBScope"* %9, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5, %"class.leveldb::Slice"* nonnull dereferenceable(16) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  %31 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6
  %32 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %32, align 8
  %34 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %35 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %34, align 8
  %36 = icmp eq %"class.content::TransactionalLevelDBIterator"** %33, %35
  br i1 %36, label %49, label %37

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 8
  store i8 1, i8* %38, align 8
  %39 = bitcast %"class.base::internal::flat_tree"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #10
  br label %44

40:                                               ; preds = %44
  store i8 0, i8* %38, align 8
  %41 = icmp eq %"class.content::TransactionalLevelDBIterator"** %33, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.content::TransactionalLevelDBIterator"** %33 to i8*
  call void @_ZdlPv(i8* %43) #11
  br label %49

44:                                               ; preds = %44, %37
  %45 = phi %"class.content::TransactionalLevelDBIterator"** [ %47, %44 ], [ %33, %37 ]
  %46 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %45, align 8
  call void @_ZN7content28TransactionalLevelDBIterator20EvictLevelDBIteratorEv(%"class.content::TransactionalLevelDBIterator"* %46) #10
  %47 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %45, i64 1
  %48 = icmp eq %"class.content::TransactionalLevelDBIterator"** %47, %35
  br i1 %48, label %40, label %44

49:                                               ; preds = %4, %40, %42
  ret void
}

declare void @_ZN7content12LevelDBScope3PutERKN7leveldb5SliceES4_(%"class.leveldb::Status"* sret, %"class.content::LevelDBScope"*, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction20EvictLoadedIteratorsEv(%"class.content::TransactionalLevelDBTransaction"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %5 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %6 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %5, align 8
  %7 = icmp eq %"class.content::TransactionalLevelDBIterator"** %4, %6
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 8
  store i8 1, i8* %9, align 8
  %10 = bitcast %"class.base::internal::flat_tree"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  br label %15

11:                                               ; preds = %15
  store i8 0, i8* %9, align 8
  %12 = icmp eq %"class.content::TransactionalLevelDBIterator"** %4, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.content::TransactionalLevelDBIterator"** %4 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %20

15:                                               ; preds = %8, %15
  %16 = phi %"class.content::TransactionalLevelDBIterator"** [ %18, %15 ], [ %4, %8 ]
  %17 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %16, align 8
  tail call void @_ZN7content28TransactionalLevelDBIterator20EvictLevelDBIteratorEv(%"class.content::TransactionalLevelDBIterator"* %17) #10
  %18 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %16, i64 1
  %19 = icmp eq %"class.content::TransactionalLevelDBIterator"** %18, %6
  br i1 %19, label %11, label %15

20:                                               ; preds = %13, %11, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %6 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %6, align 8
  %8 = bitcast %"class.leveldb::Slice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %2) #10
  %10 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %11 = extractvalue { i8*, i64 } %9, 0
  store i8* %11, i8** %10, align 8
  %12 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %13 = extractvalue { i8*, i64 } %9, 1
  store i64 %13, i64* %12, align 8
  call void @_ZN7content12LevelDBScope6DeleteERKN7leveldb5SliceE(%"class.leveldb::Status"* sret %0, %"class.content::LevelDBScope"* %7, %"class.leveldb::Slice"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  %14 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6
  %15 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %15, align 8
  %17 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %18 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %17, align 8
  %19 = icmp eq %"class.content::TransactionalLevelDBIterator"** %16, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 8
  store i8 1, i8* %21, align 8
  %22 = bitcast %"class.base::internal::flat_tree"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10
  br label %27

23:                                               ; preds = %27
  store i8 0, i8* %21, align 8
  %24 = icmp eq %"class.content::TransactionalLevelDBIterator"** %16, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = bitcast %"class.content::TransactionalLevelDBIterator"** %16 to i8*
  call void @_ZdlPv(i8* %26) #11
  br label %32

27:                                               ; preds = %27, %20
  %28 = phi %"class.content::TransactionalLevelDBIterator"** [ %30, %27 ], [ %16, %20 ]
  %29 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, align 8
  call void @_ZN7content28TransactionalLevelDBIterator20EvictLevelDBIteratorEv(%"class.content::TransactionalLevelDBIterator"* %29) #10
  %30 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 1
  %31 = icmp eq %"class.content::TransactionalLevelDBIterator"** %30, %18
  br i1 %31, label %23, label %27

32:                                               ; preds = %3, %23, %25
  ret void
}

declare void @_ZN7content12LevelDBScope6DeleteERKN7leveldb5SliceE(%"class.leveldb::Status"* sret, %"class.content::LevelDBScope"*, %"class.leveldb::Slice"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction11RemoveRangeERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_24LevelDBScopeDeletionMode(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.leveldb::Slice", align 8
  %7 = alloca %"class.leveldb::Status", align 8
  %8 = alloca %"class.leveldb::Slice", align 8
  %9 = alloca %"class.leveldb::Slice", align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, %13
  %17 = select i1 %16, i64 %13, i64 %15
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i32 @bcmp(i8* %19, i8* %11, i64 %17)
  %21 = icmp eq i32 %20, 0
  %22 = icmp eq i64 %15, %13
  %23 = and i1 %22, %21
  %24 = icmp eq i32 %4, 1
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %54

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8, !alias.scope !2
  %28 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %28, align 8, !noalias !2
  %30 = bitcast %"class.leveldb::Slice"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10, !noalias !2
  %31 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %2) #10, !noalias !2
  %32 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 0
  %33 = extractvalue { i8*, i64 } %31, 0
  store i8* %33, i8** %32, align 8, !noalias !2
  %34 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %6, i64 0, i32 1
  %35 = extractvalue { i8*, i64 } %31, 1
  store i64 %35, i64* %34, align 8, !noalias !2
  call void @_ZN7content12LevelDBScope6DeleteERKN7leveldb5SliceE(%"class.leveldb::Status"* sret %0, %"class.content::LevelDBScope"* %29, %"class.leveldb::Slice"* nonnull dereferenceable(16) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10, !noalias !2
  %36 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6
  %37 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %37, align 8, !noalias !2
  %39 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %40 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %39, align 8, !noalias !2
  %41 = icmp eq %"class.content::TransactionalLevelDBIterator"** %38, %40
  br i1 %41, label %93, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 8
  store i8 1, i8* %43, align 8, !noalias !2
  %44 = bitcast %"class.base::internal::flat_tree"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10, !noalias !2
  br label %49

45:                                               ; preds = %49
  store i8 0, i8* %43, align 8, !noalias !2
  %46 = icmp eq %"class.content::TransactionalLevelDBIterator"** %38, null
  br i1 %46, label %93, label %47

47:                                               ; preds = %45
  %48 = bitcast %"class.content::TransactionalLevelDBIterator"** %38 to i8*
  call void @_ZdlPv(i8* %48) #11
  br label %93

49:                                               ; preds = %49, %42
  %50 = phi %"class.content::TransactionalLevelDBIterator"** [ %52, %49 ], [ %38, %42 ]
  %51 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, align 8
  call void @_ZN7content28TransactionalLevelDBIterator20EvictLevelDBIteratorEv(%"class.content::TransactionalLevelDBIterator"* %51) #10
  %52 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, i64 1
  %53 = icmp eq %"class.content::TransactionalLevelDBIterator"** %52, %40
  br i1 %53, label %45, label %49

54:                                               ; preds = %5
  %55 = bitcast %"class.leveldb::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %56, align 8
  %57 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %57, align 8
  %59 = bitcast %"class.leveldb::Slice"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %60 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %2) #10
  %61 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %8, i64 0, i32 0
  %62 = extractvalue { i8*, i64 } %60, 0
  store i8* %62, i8** %61, align 8
  %63 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %8, i64 0, i32 1
  %64 = extractvalue { i8*, i64 } %60, 1
  store i64 %64, i64* %63, align 8
  %65 = bitcast %"class.leveldb::Slice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #10
  %66 = tail call { i8*, i64 } @_ZN11leveldb_env9MakeSliceERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16) %3) #10
  %67 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %9, i64 0, i32 0
  %68 = extractvalue { i8*, i64 } %66, 0
  store i8* %68, i8** %67, align 8
  %69 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %9, i64 0, i32 1
  %70 = extractvalue { i8*, i64 } %66, 1
  store i64 %70, i64* %69, align 8
  call void @_ZN7content12LevelDBScope11DeleteRangeERKN7leveldb5SliceES4_24LevelDBScopeDeletionMode(%"class.leveldb::Status"* nonnull sret %7, %"class.content::LevelDBScope"* %58, %"class.leveldb::Slice"* nonnull dereferenceable(16) %8, %"class.leveldb::Slice"* nonnull dereferenceable(16) %9, i32 %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  %71 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6
  %72 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %72, align 8
  %74 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %75 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %74, align 8
  %76 = icmp eq %"class.content::TransactionalLevelDBIterator"** %73, %75
  br i1 %76, label %89, label %77

77:                                               ; preds = %54
  %78 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 8
  store i8 1, i8* %78, align 8
  %79 = bitcast %"class.base::internal::flat_tree"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #10
  br label %84

80:                                               ; preds = %84
  store i8 0, i8* %78, align 8
  %81 = icmp eq %"class.content::TransactionalLevelDBIterator"** %73, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %80
  %83 = bitcast %"class.content::TransactionalLevelDBIterator"** %73 to i8*
  call void @_ZdlPv(i8* %83) #11
  br label %89

84:                                               ; preds = %84, %77
  %85 = phi %"class.content::TransactionalLevelDBIterator"** [ %87, %84 ], [ %73, %77 ]
  %86 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %85, align 8
  call void @_ZN7content28TransactionalLevelDBIterator20EvictLevelDBIteratorEv(%"class.content::TransactionalLevelDBIterator"* %86) #10
  %87 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %85, i64 1
  %88 = icmp eq %"class.content::TransactionalLevelDBIterator"** %87, %75
  br i1 %88, label %80, label %84

89:                                               ; preds = %82, %80, %54
  %90 = bitcast %"class.leveldb::Status"* %7 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.leveldb::Status"* %0 to i64*
  store i64 %91, i64* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %93

93:                                               ; preds = %47, %45, %26, %89
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN7content12LevelDBScope11DeleteRangeERKN7leveldb5SliceES4_24LevelDBScopeDeletionMode(%"class.leveldb::Status"* sret, %"class.content::LevelDBScope"*, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction3GetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPb(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture readonly, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*, i8*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.leveldb::Status", align 8
  store i8 0, i8* %4, align 1
  %7 = bitcast %"class.leveldb::Status"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %9, align 8
  call void @_ZN7content12LevelDBScope22WriteChangesAndUndoLogEv(%"class.leveldb::Status"* nonnull sret %6, %"class.content::LevelDBScope"* %10) #10
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %11, null
  %13 = ptrtoint i8* %11 to i64
  br i1 %12, label %20, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %11, i64 4
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 1
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.leveldb::Status"* %0 to i64*
  store i64 %13, i64* %19, align 8
  store i8* null, i8** %8, align 8
  br label %30

20:                                               ; preds = %5, %14
  %21 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 2
  %22 = load %"class.content::TransactionalLevelDBDatabase"*, %"class.content::TransactionalLevelDBDatabase"** %21, align 8
  %23 = bitcast %"class.content::TransactionalLevelDBDatabase"* %22 to void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)***
  %24 = load void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)**, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)*, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)** %24, i64 3
  %26 = load void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)*, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)** %25, align 8
  call void %26(%"class.leveldb::Status"* sret %0, %"class.content::TransactionalLevelDBDatabase"* %22, %"class.base::BasicStringPiece"* dereferenceable(16) %2, %"class.std::__1::basic_string"* %3, i8* %4) #10
  %27 = load i8*, i8** %8, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %20
  call void @_ZdaPv(i8* nonnull %27) #11
  br label %30

30:                                               ; preds = %18, %20, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

declare void @_ZN7content12LevelDBScope22WriteChangesAndUndoLogEv(%"class.leveldb::Status"* sret, %"class.content::LevelDBScope"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction6CommitEb(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::OnceCallback.133", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 75, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !5

9:                                                ; preds = %3
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %11 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 75, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 75, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %3 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 4
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 2
  %21 = load %"class.content::TransactionalLevelDBDatabase"*, %"class.content::TransactionalLevelDBDatabase"** %20, align 8
  %22 = getelementptr inbounds %"class.content::TransactionalLevelDBDatabase", %"class.content::TransactionalLevelDBDatabase"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"class.content::LevelDBScopes"*, %"class.content::LevelDBScopes"** %22, align 8
  %24 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %24, align 8
  store %"class.content::LevelDBScope"* null, %"class.content::LevelDBScope"** %24, align 8
  %26 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 5
  %27 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback.133"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback.133"* %5 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  call void @_ZN7content13LevelDBScopes6CommitENSt3__110unique_ptrINS_12LevelDBScopeENS1_14default_deleteIS3_EEEEbN4base12OnceCallbackIFvvEEE(%"class.leveldb::Status"* sret %0, %"class.content::LevelDBScopes"* %23, %"class.content::LevelDBScope"* %25, i1 zeroext %2, %"class.base::OnceCallback.133"* nonnull %5) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback.133", %"class.base::OnceCallback.133"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = icmp eq i8* %17, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %15
  %34 = load i8, i8* %17, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #10
  br label %37

37:                                               ; preds = %15, %33, %36
  ret void
}

declare void @_ZN7content13LevelDBScopes6CommitENSt3__110unique_ptrINS_12LevelDBScopeENS1_14default_deleteIS3_EEEEbN4base12OnceCallbackIFvvEEE(%"class.leveldb::Status"* sret, %"class.content::LevelDBScopes"*, %"class.content::LevelDBScope"*, i1 zeroext, %"class.base::OnceCallback.133"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction8RollbackEv(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 4
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %4, align 8
  tail call void @_ZN7content12LevelDBScope8RollbackEv(%"class.leveldb::Status"* sret %0, %"class.content::LevelDBScope"* %5) #10
  ret void
}

declare void @_ZN7content12LevelDBScope8RollbackEv(%"class.leveldb::Status"* sret, %"class.content::LevelDBScope"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::TransactionalLevelDBIterator"* @_ZN7content31TransactionalLevelDBTransaction14CreateIteratorERN7leveldb6StatusE(%"class.content::TransactionalLevelDBTransaction"*, %"class.leveldb::Status"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.leveldb::Status", align 8
  %5 = alloca %"class.base::WeakPtr.61", align 8
  %6 = alloca %"class.content::TransactionalLevelDBIterator"*, align 8
  %7 = bitcast %"class.leveldb::Status"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %8, align 8
  call void @_ZN7content12LevelDBScope22WriteChangesAndUndoLogEv(%"class.leveldb::Status"* nonnull sret %4, %"class.content::LevelDBScope"* %9) #10
  %10 = bitcast %"class.leveldb::Status"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.leveldb::Status"* %4 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = icmp eq i64 %11, 0
  %15 = inttoptr i64 %13 to i8*
  br i1 %14, label %20, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %11 to i8*
  call void @_ZdaPv(i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %1, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %2, %16
  %21 = phi i8* [ %15, %2 ], [ %19, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %22 = icmp eq i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %21, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 1
  br i1 %26, label %27, label %79

27:                                               ; preds = %23, %20
  store i64 0, i64* %10, align 8
  %28 = icmp eq i8* %21, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  call void @_ZdaPv(i8* nonnull %21) #11
  br label %30

30:                                               ; preds = %27, %29
  %31 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 2
  %32 = load %"class.content::TransactionalLevelDBDatabase"*, %"class.content::TransactionalLevelDBDatabase"** %31, align 8
  %33 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10, !noalias !6
  %34 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %34) #10, !noalias !6
  %35 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 9, i32 0, i32 1
  %36 = load i64, i64* %35, align 8, !noalias !6
  %37 = getelementptr inbounds %"class.base::WeakPtr.61", %"class.base::WeakPtr.61"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %37, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %36) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10, !noalias !6
  %38 = load %"class.content::TransactionalLevelDBDatabase"*, %"class.content::TransactionalLevelDBDatabase"** %31, align 8
  %39 = call { i64, %"class.leveldb::Snapshot"* } @_ZN7content28TransactionalLevelDBDatabase18DefaultReadOptionsEv(%"class.content::TransactionalLevelDBDatabase"* %38) #10
  %40 = extractvalue { i64, %"class.leveldb::Snapshot"* } %39, 0
  %41 = extractvalue { i64, %"class.leveldb::Snapshot"* } %39, 1
  %42 = call %"class.content::TransactionalLevelDBIterator"* @_ZN7content28TransactionalLevelDBDatabase14CreateIteratorEN4base7WeakPtrINS_31TransactionalLevelDBTransactionEEEN7leveldb11ReadOptionsE(%"class.content::TransactionalLevelDBDatabase"* %32, %"class.base::WeakPtr.61"* nonnull %5, i64 %40, %"class.leveldb::Snapshot"* %41) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %37) #10
  %43 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6
  %44 = bitcast %"class.content::TransactionalLevelDBIterator"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  store %"class.content::TransactionalLevelDBIterator"* %42, %"class.content::TransactionalLevelDBIterator"** %6, align 8
  %45 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %43, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %45, align 8
  %47 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %48 = bitcast %"class.content::TransactionalLevelDBIterator"*** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %46 to i64
  %51 = sub i64 %49, %50
  %52 = icmp eq i64 %51, 0
  %53 = inttoptr i64 %49 to %"class.content::TransactionalLevelDBIterator"**
  br i1 %52, label %69, label %54

54:                                               ; preds = %30
  %55 = ashr exact i64 %51, 3
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi %"class.content::TransactionalLevelDBIterator"** [ %46, %54 ], [ %67, %56 ]
  %58 = phi i64 [ %55, %54 ], [ %66, %56 ]
  %59 = lshr i64 %58, 1
  %60 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %57, i64 %59
  %61 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %60, align 8
  %62 = icmp ult %"class.content::TransactionalLevelDBIterator"* %61, %42
  %63 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %60, i64 1
  %64 = xor i64 %59, -1
  %65 = add i64 %58, %64
  %66 = select i1 %62, i64 %65, i64 %59
  %67 = select i1 %62, %"class.content::TransactionalLevelDBIterator"** %63, %"class.content::TransactionalLevelDBIterator"** %57
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %56

69:                                               ; preds = %56, %30
  %70 = phi %"class.content::TransactionalLevelDBIterator"** [ %46, %30 ], [ %67, %56 ]
  %71 = icmp eq %"class.content::TransactionalLevelDBIterator"** %70, %53
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %70, align 8
  %74 = icmp ult %"class.content::TransactionalLevelDBIterator"* %42, %73
  br i1 %74, label %75, label %78

75:                                               ; preds = %72, %69
  %76 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %43, i64 0, i32 0
  %77 = call %"class.content::TransactionalLevelDBIterator"** @_ZNSt3__16vectorIPN7content28TransactionalLevelDBIteratorENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_(%"class.std::__1::vector.58"* %76, %"class.content::TransactionalLevelDBIterator"** %70, %"class.content::TransactionalLevelDBIterator"** nonnull dereferenceable(8) %6) #10
  br label %78

78:                                               ; preds = %75, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %79

79:                                               ; preds = %23, %78
  %80 = phi %"class.content::TransactionalLevelDBIterator"* [ %42, %78 ], [ null, %23 ]
  ret %"class.content::TransactionalLevelDBIterator"* %80
}

declare %"class.content::TransactionalLevelDBIterator"* @_ZN7content28TransactionalLevelDBDatabase14CreateIteratorEN4base7WeakPtrINS_31TransactionalLevelDBTransactionEEEN7leveldb11ReadOptionsE(%"class.content::TransactionalLevelDBDatabase"*, %"class.base::WeakPtr.61"*, i64, %"class.leveldb::Snapshot"*) local_unnamed_addr #3

declare { i64, %"class.leveldb::Snapshot"* } @_ZN7content28TransactionalLevelDBDatabase18DefaultReadOptionsEv(%"class.content::TransactionalLevelDBDatabase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7content31TransactionalLevelDBTransaction18GetTransactionSizeEv(%"class.content::TransactionalLevelDBTransaction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %2, align 8
  %4 = getelementptr inbounds %"class.content::LevelDBScope", %"class.content::LevelDBScope"* %3, i64 0, i32 11
  %5 = tail call i64 @_ZNK7leveldb10WriteBatch15ApproximateSizeEv(%"class.leveldb::WriteBatch"* %4) #10
  %6 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %2, align 8
  %7 = getelementptr inbounds %"class.content::LevelDBScope", %"class.content::LevelDBScope"* %6, i64 0, i32 13, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !9
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11, !prof !10

10:                                               ; preds = %1
  tail call void @llvm.trap() #10
  unreachable

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.content::LevelDBScope", %"class.content::LevelDBScope"* %6, i64 0, i32 13, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %5
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction27ForceWriteChangesAndUndoLogEv(%"class.leveldb::Status"* noalias sret, %"class.content::TransactionalLevelDBTransaction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.content::LevelDBScope"*, %"class.content::LevelDBScope"** %3, align 8
  tail call void @_ZN7content12LevelDBScope22WriteChangesAndUndoLogEv(%"class.leveldb::Status"* sret %0, %"class.content::LevelDBScope"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction16OnIteratorLoadedEPNS_28TransactionalLevelDBIteratorE(%"class.content::TransactionalLevelDBTransaction"*, %"class.content::TransactionalLevelDBIterator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.content::TransactionalLevelDBIterator"*, align 8
  store %"class.content::TransactionalLevelDBIterator"* %1, %"class.content::TransactionalLevelDBIterator"** %3, align 8
  %4 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %5, align 8
  %7 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %8 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  %13 = inttoptr i64 %9 to %"class.content::TransactionalLevelDBIterator"**
  br i1 %12, label %29, label %14

14:                                               ; preds = %2
  %15 = ashr exact i64 %11, 3
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.content::TransactionalLevelDBIterator"** [ %6, %14 ], [ %27, %16 ]
  %18 = phi i64 [ %15, %14 ], [ %26, %16 ]
  %19 = lshr i64 %18, 1
  %20 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %17, i64 %19
  %21 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %20, align 8
  %22 = icmp ult %"class.content::TransactionalLevelDBIterator"* %21, %1
  %23 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %20, i64 1
  %24 = xor i64 %19, -1
  %25 = add i64 %18, %24
  %26 = select i1 %22, i64 %25, i64 %19
  %27 = select i1 %22, %"class.content::TransactionalLevelDBIterator"** %23, %"class.content::TransactionalLevelDBIterator"** %17
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %16

29:                                               ; preds = %16, %2
  %30 = phi %"class.content::TransactionalLevelDBIterator"** [ %6, %2 ], [ %27, %16 ]
  %31 = icmp eq %"class.content::TransactionalLevelDBIterator"** %30, %13
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %30, align 8
  %34 = icmp ugt %"class.content::TransactionalLevelDBIterator"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %32, %29
  %36 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %4, i64 0, i32 0
  %37 = call %"class.content::TransactionalLevelDBIterator"** @_ZNSt3__16vectorIPN7content28TransactionalLevelDBIteratorENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.58"* %36, %"class.content::TransactionalLevelDBIterator"** %30, %"class.content::TransactionalLevelDBIterator"** nonnull dereferenceable(8) %3) #10
  br label %38

38:                                               ; preds = %32, %35
  %39 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0
  %40 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node"**
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  %44 = bitcast %"class.std::__1::__tree_node"* %42 to %"class.std::__1::__tree_node_base"*
  br i1 %43, label %110, label %45

45:                                               ; preds = %38
  %46 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %3, align 8
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi %"class.std::__1::__tree_end_node"* [ %40, %45 ], [ %58, %47 ]
  %49 = phi %"class.std::__1::__tree_node"* [ %42, %45 ], [ %59, %47 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 1
  %51 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, align 8
  %52 = icmp ult %"class.content::TransactionalLevelDBIterator"* %51, %46
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 1
  %54 = bitcast %"class.std::__1::__tree_node_base"** %53 to %"class.std::__1::__tree_node"**
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %49, i64 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_node"* %49 to %"class.std::__1::__tree_node"**
  %57 = select i1 %52, %"class.std::__1::__tree_node"** %54, %"class.std::__1::__tree_node"** %56
  %58 = select i1 %52, %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"* %55
  %59 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %57, align 8
  %60 = icmp eq %"class.std::__1::__tree_node"* %59, null
  br i1 %60, label %61, label %47

61:                                               ; preds = %47
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %58, %40
  br i1 %62, label %110, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 4
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.content::TransactionalLevelDBIterator"**
  %66 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %65, align 8
  %67 = icmp ult %"class.content::TransactionalLevelDBIterator"* %46, %66
  br i1 %67, label %110, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 1, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 2
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_end_node"**
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, %73
  br i1 %79, label %96, label %87

80:                                               ; preds = %68, %80
  %81 = phi %"class.std::__1::__tree_node_base"* [ %83, %80 ], [ %70, %68 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %85, label %80

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 0
  br label %96

87:                                               ; preds = %72, %87
  %88 = phi %"class.std::__1::__tree_end_node"** [ %91, %87 ], [ %75, %72 ]
  %89 = bitcast %"class.std::__1::__tree_end_node"** %88 to %"class.std::__1::__tree_node_base"**
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 2
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %90
  br i1 %95, label %96, label %87

96:                                               ; preds = %87, %85, %72
  %97 = phi %"class.std::__1::__tree_end_node"* [ %86, %85 ], [ %76, %72 ], [ %92, %87 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %39, i64 0, i32 0
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_end_node"* %99, %58
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = ptrtoint %"class.std::__1::__tree_end_node"* %97 to i64
  %103 = bitcast %"class.std::__1::__tree"* %39 to i64*
  store i64 %102, i64* %103, align 8
  br label %104

104:                                              ; preds = %101, %96
  %105 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, -1
  store i64 %107, i64* %105, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %44, %"class.std::__1::__tree_node_base"* %108) #10
  %109 = bitcast %"class.std::__1::__tree_end_node"* %58 to i8*
  call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %38, %61, %63, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction17OnIteratorEvictedEPNS_28TransactionalLevelDBIteratorE(%"class.content::TransactionalLevelDBTransaction"*, %"class.content::TransactionalLevelDBIterator"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.content::TransactionalLevelDBIterator"* %1 to i64
  %4 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %4, align 8
  %6 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %7 = bitcast %"class.content::TransactionalLevelDBIterator"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.content::TransactionalLevelDBIterator"**
  br i1 %11, label %30, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %10, 3
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi %"class.content::TransactionalLevelDBIterator"** [ %5, %13 ], [ %26, %15 ]
  %17 = phi i64 [ %14, %13 ], [ %25, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %16, i64 %18
  %20 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %19, align 8
  %21 = icmp ult %"class.content::TransactionalLevelDBIterator"* %20, %1
  %22 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %19, i64 1
  %23 = xor i64 %18, -1
  %24 = add i64 %17, %23
  %25 = select i1 %21, i64 %24, i64 %18
  %26 = select i1 %21, %"class.content::TransactionalLevelDBIterator"** %22, %"class.content::TransactionalLevelDBIterator"** %16
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %15

28:                                               ; preds = %15
  %29 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %9, %2 ]
  %32 = phi %"class.content::TransactionalLevelDBIterator"** [ %26, %28 ], [ %5, %2 ]
  %33 = icmp eq %"class.content::TransactionalLevelDBIterator"** %32, %12
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %32, align 8
  %36 = icmp ugt %"class.content::TransactionalLevelDBIterator"* %35, %1
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %32, i64 1
  %39 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %38 to i64
  br label %40

40:                                               ; preds = %37, %34, %30
  %41 = phi i64 [ %39, %37 ], [ %31, %30 ], [ %31, %34 ]
  %42 = inttoptr i64 %41 to %"class.content::TransactionalLevelDBIterator"**
  %43 = icmp eq %"class.content::TransactionalLevelDBIterator"** %32, %42
  br i1 %43, label %53, label %44

44:                                               ; preds = %40
  %45 = sub i64 %8, %41
  %46 = ashr exact i64 %45, 3
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.content::TransactionalLevelDBIterator"** %32 to i8*
  %50 = inttoptr i64 %41 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 %45, i1 false) #10
  br label %51

51:                                               ; preds = %48, %44
  %52 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %32, i64 %46
  store %"class.content::TransactionalLevelDBIterator"** %52, %"class.content::TransactionalLevelDBIterator"*** %6, align 8
  br label %53

53:                                               ; preds = %40, %51
  %54 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7
  %55 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node"**
  %57 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node"* %57, null
  br i1 %58, label %87, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %61

61:                                               ; preds = %83, %59
  %62 = phi %"class.std::__1::__tree_node"* [ %86, %83 ], [ %57, %59 ]
  %63 = phi %"class.std::__1::__tree_node_base"** [ %85, %83 ], [ %60, %59 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 1
  %65 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %64, align 8
  %66 = icmp ugt %"class.content::TransactionalLevelDBIterator"* %65, %1
  br i1 %66, label %67, label %73

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %83

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  br label %89

73:                                               ; preds = %61
  %74 = icmp ult %"class.content::TransactionalLevelDBIterator"* %65, %1
  br i1 %74, label %75, label %81

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 1
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  br label %89

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  br label %89

83:                                               ; preds = %75, %67
  %84 = phi %"class.std::__1::__tree_node_base"* [ %69, %67 ], [ %77, %75 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %68, %67 ], [ %76, %75 ]
  %86 = bitcast %"class.std::__1::__tree_node_base"* %84 to %"class.std::__1::__tree_node"*
  br label %61

87:                                               ; preds = %53
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  br label %89

89:                                               ; preds = %87, %81, %79, %71
  %90 = phi %"class.std::__1::__tree_end_node"* [ %55, %87 ], [ %72, %71 ], [ %80, %79 ], [ %82, %81 ]
  %91 = phi %"class.std::__1::__tree_node_base"** [ %88, %87 ], [ %68, %71 ], [ %76, %79 ], [ %63, %81 ]
  %92 = bitcast %"class.std::__1::__tree_node_base"** %91 to %"class.std::__1::__tree_node"**
  %93 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node"* %93, null
  br i1 %94, label %95, label %119

95:                                               ; preds = %89
  %96 = tail call i8* @_Znwm(i64 40) #11, !noalias !11
  %97 = getelementptr inbounds i8, i8* %96, i64 32
  %98 = bitcast i8* %97 to i64*
  store i64 %3, i64* %98, align 8, !noalias !11
  %99 = bitcast i8* %96 to %"class.std::__1::__tree_node_base"*
  %100 = getelementptr inbounds i8, i8* %96, i64 16
  %101 = bitcast i8* %100 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %96, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %90, %"class.std::__1::__tree_end_node"** %101, align 8
  %102 = bitcast %"class.std::__1::__tree_node_base"** %91 to i8**
  store i8* %96, i8** %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %54, i64 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %95
  %109 = ptrtoint %"class.std::__1::__tree_node_base"* %106 to i64
  %110 = bitcast %"class.std::__1::set"* %54 to i64*
  store i64 %109, i64* %110, align 8
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  br label %112

112:                                              ; preds = %108, %95
  %113 = phi %"class.std::__1::__tree_node_base"* [ %99, %95 ], [ %111, %108 ]
  %114 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"* %113) #10
  %116 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 1
  store i64 %118, i64* %116, align 8
  br label %119

119:                                              ; preds = %89, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31TransactionalLevelDBTransaction19OnIteratorDestroyedEPNS_28TransactionalLevelDBIteratorE(%"class.content::TransactionalLevelDBTransaction"*, %"class.content::TransactionalLevelDBIterator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0
  %4 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  %8 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node_base"*
  br i1 %7, label %72, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %4, %2 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %13 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %12, align 8
  %14 = icmp ult %"class.content::TransactionalLevelDBIterator"* %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %4
  br i1 %24, label %72, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.content::TransactionalLevelDBIterator"**
  %28 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %27, align 8
  %29 = icmp ugt %"class.content::TransactionalLevelDBIterator"* %28, %1
  br i1 %29, label %72, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %30, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %3, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %20
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = ptrtoint %"class.std::__1::__tree_end_node"* %59 to i64
  %65 = bitcast %"class.std::__1::__tree"* %3 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %63, %58
  %67 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %8, %"class.std::__1::__tree_node_base"* %70) #10
  %71 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %2, %23, %25, %66
  %73 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %74 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %73, align 8
  %75 = getelementptr inbounds %"class.content::TransactionalLevelDBTransaction", %"class.content::TransactionalLevelDBTransaction"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %76 = bitcast %"class.content::TransactionalLevelDBIterator"*** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %74 to i64
  %79 = sub i64 %77, %78
  %80 = icmp eq i64 %79, 0
  %81 = inttoptr i64 %77 to %"class.content::TransactionalLevelDBIterator"**
  br i1 %80, label %99, label %82

82:                                               ; preds = %72
  %83 = ashr exact i64 %79, 3
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi %"class.content::TransactionalLevelDBIterator"** [ %74, %82 ], [ %95, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %94, %84 ]
  %87 = lshr i64 %86, 1
  %88 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %85, i64 %87
  %89 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %88, align 8
  %90 = icmp ult %"class.content::TransactionalLevelDBIterator"* %89, %1
  %91 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %88, i64 1
  %92 = xor i64 %87, -1
  %93 = add i64 %86, %92
  %94 = select i1 %90, i64 %93, i64 %87
  %95 = select i1 %90, %"class.content::TransactionalLevelDBIterator"** %91, %"class.content::TransactionalLevelDBIterator"** %85
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %97, label %84

97:                                               ; preds = %84
  %98 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %95 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %98, %97 ], [ %78, %72 ]
  %101 = phi %"class.content::TransactionalLevelDBIterator"** [ %95, %97 ], [ %74, %72 ]
  %102 = icmp eq %"class.content::TransactionalLevelDBIterator"** %101, %81
  br i1 %102, label %109, label %103

103:                                              ; preds = %99
  %104 = load %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %101, align 8
  %105 = icmp ugt %"class.content::TransactionalLevelDBIterator"* %104, %1
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %101, i64 1
  %108 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %107 to i64
  br label %109

109:                                              ; preds = %106, %103, %99
  %110 = phi i64 [ %108, %106 ], [ %100, %99 ], [ %100, %103 ]
  %111 = inttoptr i64 %110 to %"class.content::TransactionalLevelDBIterator"**
  %112 = icmp eq %"class.content::TransactionalLevelDBIterator"** %101, %111
  br i1 %112, label %122, label %113

113:                                              ; preds = %109
  %114 = sub i64 %77, %110
  %115 = ashr exact i64 %114, 3
  %116 = icmp eq i64 %114, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %113
  %118 = bitcast %"class.content::TransactionalLevelDBIterator"** %101 to i8*
  %119 = inttoptr i64 %110 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 %114, i1 false) #10
  br label %120

120:                                              ; preds = %117, %113
  %121 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %101, i64 %115
  store %"class.content::TransactionalLevelDBIterator"** %121, %"class.content::TransactionalLevelDBIterator"*** %75, align 8
  br label %122

122:                                              ; preds = %109, %120
  ret void
}

declare void @_ZN7content28TransactionalLevelDBIterator20EvictLevelDBIteratorEv(%"class.content::TransactionalLevelDBIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransactionC2EPNS_28TransactionalLevelDBDatabaseE(%"class.content::LevelDBDirectTransaction"* nocapture, %"class.content::TransactionalLevelDBDatabase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content24LevelDBDirectTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 1
  store %"class.content::TransactionalLevelDBDatabase"* %1, %"class.content::TransactionalLevelDBDatabase"** %4, align 8
  %5 = tail call %"class.content::LevelDBWriteBatch"* @_ZN7content17LevelDBWriteBatch6CreateEv() #10
  %6 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.content::LevelDBWriteBatch"* %5, %"class.content::LevelDBWriteBatch"** %6, align 8
  ret void
}

declare %"class.content::LevelDBWriteBatch"* @_ZN7content17LevelDBWriteBatch6CreateEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransactionD2Ev(%"class.content::LevelDBDirectTransaction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content24LevelDBDirectTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::LevelDBWriteBatch"*, %"class.content::LevelDBWriteBatch"** %3, align 8
  store %"class.content::LevelDBWriteBatch"* null, %"class.content::LevelDBWriteBatch"** %3, align 8
  %5 = icmp eq %"class.content::LevelDBWriteBatch"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN7content17LevelDBWriteBatchD1Ev(%"class.content::LevelDBWriteBatch"* nonnull %4) #10
  %7 = bitcast %"class.content::LevelDBWriteBatch"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransactionD0Ev(%"class.content::LevelDBDirectTransaction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content24LevelDBDirectTransactionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::LevelDBWriteBatch"*, %"class.content::LevelDBWriteBatch"** %3, align 8
  store %"class.content::LevelDBWriteBatch"* null, %"class.content::LevelDBWriteBatch"** %3, align 8
  %5 = icmp eq %"class.content::LevelDBWriteBatch"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN7content17LevelDBWriteBatchD1Ev(%"class.content::LevelDBWriteBatch"* nonnull %4) #10
  %7 = bitcast %"class.content::LevelDBWriteBatch"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.content::LevelDBDirectTransaction"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransaction3PutERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.leveldb::Status"* noalias nocapture sret, %"class.content::LevelDBDirectTransaction"* nocapture readonly, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.content::LevelDBWriteBatch"*, %"class.content::LevelDBWriteBatch"** %6, align 8
  %8 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  store i8* %17, i8** %9, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %12 to i64
  %22 = select i1 %13, i64 %20, i64 %21
  store i64 %22, i64* %18, align 8
  call void @_ZN7content17LevelDBWriteBatch3PutERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.content::LevelDBWriteBatch"* %7, %"class.base::BasicStringPiece"* dereferenceable(16) %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  %23 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* null, i8** %23, align 8, !alias.scope !14
  ret void
}

declare void @_ZN7content17LevelDBWriteBatch3PutERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.content::LevelDBWriteBatch"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransaction3GetERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEEPb(%"class.leveldb::Status"* noalias sret, %"class.content::LevelDBDirectTransaction"* nocapture readonly, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*, i8*) unnamed_addr #0 align 2 {
  store i8 0, i8* %4, align 1
  %6 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %1, i64 0, i32 1
  %8 = load %"class.content::TransactionalLevelDBDatabase"*, %"class.content::TransactionalLevelDBDatabase"** %7, align 8
  %9 = bitcast %"class.content::TransactionalLevelDBDatabase"* %8 to void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)***
  %10 = load void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)**, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)*, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)** %10, i64 3
  %12 = load void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)*, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*, i8*)** %11, align 8
  tail call void %12(%"class.leveldb::Status"* sret %0, %"class.content::TransactionalLevelDBDatabase"* %8, %"class.base::BasicStringPiece"* dereferenceable(16) %2, %"class.std::__1::basic_string"* %3, i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransaction6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.content::LevelDBDirectTransaction"* nocapture readonly, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::LevelDBWriteBatch"*, %"class.content::LevelDBWriteBatch"** %3, align 8
  tail call void @_ZN7content17LevelDBWriteBatch6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.content::LevelDBWriteBatch"* %4, %"class.base::BasicStringPiece"* dereferenceable(16) %1) #10
  ret void
}

declare void @_ZN7content17LevelDBWriteBatch6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.content::LevelDBWriteBatch"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24LevelDBDirectTransaction6CommitEv(%"class.leveldb::Status"* noalias sret, %"class.content::LevelDBDirectTransaction"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 75, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !5

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 75, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 75, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %1, i64 0, i32 1
  %19 = load %"class.content::TransactionalLevelDBDatabase"*, %"class.content::TransactionalLevelDBDatabase"** %18, align 8
  %20 = getelementptr inbounds %"class.content::LevelDBDirectTransaction", %"class.content::LevelDBDirectTransaction"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.content::LevelDBWriteBatch"*, %"class.content::LevelDBWriteBatch"** %20, align 8
  %22 = bitcast %"class.content::TransactionalLevelDBDatabase"* %19 to void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)***
  %23 = load void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)**, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)*, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)** %23, i64 4
  %25 = load void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)*, void (%"class.leveldb::Status"*, %"class.content::TransactionalLevelDBDatabase"*, %"class.content::LevelDBWriteBatch"*)** %24, align 8
  call void %25(%"class.leveldb::Status"* sret %0, %"class.content::TransactionalLevelDBDatabase"* %19, %"class.content::LevelDBWriteBatch"* %21) #10
  %26 = load i8*, i8** %17, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %33

28:                                               ; preds = %13
  %29 = load %"class.content::LevelDBWriteBatch"*, %"class.content::LevelDBWriteBatch"** %20, align 8
  store %"class.content::LevelDBWriteBatch"* null, %"class.content::LevelDBWriteBatch"** %20, align 8
  %30 = icmp eq %"class.content::LevelDBWriteBatch"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  call void @_ZN7content17LevelDBWriteBatchD1Ev(%"class.content::LevelDBWriteBatch"* nonnull %29) #10
  %32 = bitcast %"class.content::LevelDBWriteBatch"* %29 to i8*
  call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %31, %28, %13
  %34 = icmp eq i8* %16, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %33
  %36 = load i8, i8* %16, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #10
  br label %39

39:                                               ; preds = %33, %35, %38
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare i64 @_ZNK7leveldb10WriteBatch15ApproximateSizeEv(%"class.leveldb::WriteBatch"*) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content12LevelDBScopeD1Ev(%"class.content::LevelDBScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.content::TransactionalLevelDBIterator"** @_ZNSt3__16vectorIPN7content28TransactionalLevelDBIteratorENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_(%"class.std::__1::vector.58"*, %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %9, align 8
  %11 = icmp ult %"class.content::TransactionalLevelDBIterator"** %8, %10
  %12 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %8 to i64
  %13 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.content::TransactionalLevelDBIterator"** %8, %1
  %16 = bitcast %"class.content::TransactionalLevelDBIterator"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 1
  %21 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %20 to i64
  %22 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 1
  %25 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 %27
  %29 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  %30 = icmp ult %"class.content::TransactionalLevelDBIterator"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %32
  %34 = bitcast %"class.content::TransactionalLevelDBIterator"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.content::TransactionalLevelDBIterator"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.content::TransactionalLevelDBIterator"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %45
  %47 = bitcast %"class.content::TransactionalLevelDBIterator"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 %55
  %57 = icmp ult %"class.content::TransactionalLevelDBIterator"** %8, %56
  %58 = icmp ult %"class.content::TransactionalLevelDBIterator"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %61
  %63 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %72
  %75 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %72
  %76 = bitcast %"class.content::TransactionalLevelDBIterator"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !17
  %78 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %75, i64 2
  %79 = bitcast %"class.content::TransactionalLevelDBIterator"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !17
  %81 = bitcast %"class.content::TransactionalLevelDBIterator"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !20, !noalias !17
  %82 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %74, i64 2
  %83 = bitcast %"class.content::TransactionalLevelDBIterator"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !20, !noalias !17
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %84
  %86 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %84
  %87 = bitcast %"class.content::TransactionalLevelDBIterator"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !17
  %89 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %86, i64 2
  %90 = bitcast %"class.content::TransactionalLevelDBIterator"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !17
  %92 = bitcast %"class.content::TransactionalLevelDBIterator"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !20, !noalias !17
  %93 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %85, i64 2
  %94 = bitcast %"class.content::TransactionalLevelDBIterator"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !20, !noalias !17
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %95
  %97 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %95
  %98 = bitcast %"class.content::TransactionalLevelDBIterator"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !17
  %100 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %97, i64 2
  %101 = bitcast %"class.content::TransactionalLevelDBIterator"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !17
  %103 = bitcast %"class.content::TransactionalLevelDBIterator"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !20, !noalias !17
  %104 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %96, i64 2
  %105 = bitcast %"class.content::TransactionalLevelDBIterator"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !20, !noalias !17
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %106
  %108 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %106
  %109 = bitcast %"class.content::TransactionalLevelDBIterator"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !17
  %111 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %108, i64 2
  %112 = bitcast %"class.content::TransactionalLevelDBIterator"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !17
  %114 = bitcast %"class.content::TransactionalLevelDBIterator"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !20, !noalias !17
  %115 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %107, i64 2
  %116 = bitcast %"class.content::TransactionalLevelDBIterator"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !20, !noalias !17
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !22

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %124
  %127 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %124
  %128 = bitcast %"class.content::TransactionalLevelDBIterator"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !17
  %130 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %127, i64 2
  %131 = bitcast %"class.content::TransactionalLevelDBIterator"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !17
  %133 = bitcast %"class.content::TransactionalLevelDBIterator"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !20, !noalias !17
  %134 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %126, i64 2
  %135 = bitcast %"class.content::TransactionalLevelDBIterator"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !20, !noalias !17
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !24

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.content::TransactionalLevelDBIterator"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %148
  %150 = bitcast %"class.content::TransactionalLevelDBIterator"** %149 to i8*
  %151 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #10
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.content::TransactionalLevelDBIterator"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.content::TransactionalLevelDBIterator"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.content::TransactionalLevelDBIterator"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.content::TransactionalLevelDBIterator"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %154, i64 1
  %159 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %153, i64 1
  %160 = icmp ult %"class.content::TransactionalLevelDBIterator"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !26

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #10
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.58"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #12
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.content::TransactionalLevelDBIterator"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.content::TransactionalLevelDBIterator"** null, %"class.content::TransactionalLevelDBIterator"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.77"** %170 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %164, %"class.std::__1::__compressed_pair.74"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.content::TransactionalLevelDBIterator"** null, %"class.content::TransactionalLevelDBIterator"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.77"** %170 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %164, %"class.std::__1::__compressed_pair.74"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #12
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #11
  %206 = bitcast i8* %205 to %"class.content::TransactionalLevelDBIterator"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.content::TransactionalLevelDBIterator"** [ %206, %201 ], [ null, %190 ]
  store %"class.content::TransactionalLevelDBIterator"** %210, %"class.content::TransactionalLevelDBIterator"*** %166, align 8
  %211 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %210, i64 %208
  store %"class.content::TransactionalLevelDBIterator"** %211, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  store %"class.content::TransactionalLevelDBIterator"** %211, %"class.content::TransactionalLevelDBIterator"*** %167, align 8
  %212 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %210, i64 %209
  store %"class.content::TransactionalLevelDBIterator"** %212, %"class.content::TransactionalLevelDBIterator"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN7content28TransactionalLevelDBIteratorERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.content::TransactionalLevelDBIterator"** dereferenceable(8) %2)
  %213 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %167, align 8
  %214 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %6, align 8
  %215 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %213, i64 %218
  store %"class.content::TransactionalLevelDBIterator"** %219, %"class.content::TransactionalLevelDBIterator"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.content::TransactionalLevelDBIterator"** %219 to i8*
  %223 = bitcast %"class.content::TransactionalLevelDBIterator"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #10
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %7, align 8
  %226 = icmp eq %"class.content::TransactionalLevelDBIterator"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %225 to i64
  %229 = bitcast %"class.content::TransactionalLevelDBIterator"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.content::TransactionalLevelDBIterator"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %225, i64 -1
  %235 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.content::TransactionalLevelDBIterator"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.content::TransactionalLevelDBIterator"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %243, i64 1
  %248 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %249 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %248, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %249, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %250 = bitcast %"class.content::TransactionalLevelDBIterator"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !27

253:                                              ; preds = %241
  %254 = bitcast %"class.content::TransactionalLevelDBIterator"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.content::TransactionalLevelDBIterator"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.content::TransactionalLevelDBIterator"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.content::TransactionalLevelDBIterator"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.content::TransactionalLevelDBIterator"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 1
  %266 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %267 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %266, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %267, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %268 = bitcast %"class.content::TransactionalLevelDBIterator"** %267 to i64*
  %269 = bitcast %"class.content::TransactionalLevelDBIterator"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 2
  %272 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %273 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %272, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %273, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %274 = bitcast %"class.content::TransactionalLevelDBIterator"** %273 to i64*
  %275 = bitcast %"class.content::TransactionalLevelDBIterator"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 3
  %278 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %279 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %278, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %279, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %280 = bitcast %"class.content::TransactionalLevelDBIterator"** %279 to i64*
  %281 = bitcast %"class.content::TransactionalLevelDBIterator"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 4
  %284 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %285 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %284, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %285, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %286 = icmp eq %"class.content::TransactionalLevelDBIterator"** %283, %225
  %287 = bitcast %"class.content::TransactionalLevelDBIterator"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.content::TransactionalLevelDBIterator"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.content::TransactionalLevelDBIterator"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.content::TransactionalLevelDBIterator"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.content::TransactionalLevelDBIterator"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.content::TransactionalLevelDBIterator"**
  %305 = inttoptr i64 %296 to %"class.content::TransactionalLevelDBIterator"**
  %306 = icmp eq %"class.content::TransactionalLevelDBIterator"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %305, i64 -1
  %309 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %305, i64 %312
  store %"class.content::TransactionalLevelDBIterator"** %313, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #11
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #10
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.content::TransactionalLevelDBIterator"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.content::TransactionalLevelDBIterator"** %320
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN7content28TransactionalLevelDBIteratorERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.content::TransactionalLevelDBIterator"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %5, align 8
  %7 = icmp eq %"class.content::TransactionalLevelDBIterator"** %4, %6
  %8 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %6 to i64
  %9 = bitcast %"class.content::TransactionalLevelDBIterator"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %13, align 8
  %15 = icmp ugt %"class.content::TransactionalLevelDBIterator"** %12, %14
  %16 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %12, i64 %22
  %24 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.content::TransactionalLevelDBIterator"** %23 to i8*
  %30 = bitcast %"class.content::TransactionalLevelDBIterator"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.content::TransactionalLevelDBIterator"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %23, i64 %26
  store %"class.content::TransactionalLevelDBIterator"** %34, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %35 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %33, i64 %22
  store %"class.content::TransactionalLevelDBIterator"** %35, %"class.content::TransactionalLevelDBIterator"*** %11, align 8
  %36 = bitcast %"class.content::TransactionalLevelDBIterator"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.content::TransactionalLevelDBIterator"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"class.content::TransactionalLevelDBIterator"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, i64 %47
  %53 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %52 to i64
  %54 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, i64 %43
  %55 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %54 to i64
  %56 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %12 to i64
  %57 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.content::TransactionalLevelDBIterator"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.content::TransactionalLevelDBIterator"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.content::TransactionalLevelDBIterator"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %69, i64 1
  %77 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %76 to i64
  %78 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !28

81:                                               ; preds = %68
  %82 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.content::TransactionalLevelDBIterator"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.content::TransactionalLevelDBIterator"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.content::TransactionalLevelDBIterator"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.content::TransactionalLevelDBIterator"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.content::TransactionalLevelDBIterator"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 1
  %96 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 1
  %97 = bitcast %"class.content::TransactionalLevelDBIterator"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.content::TransactionalLevelDBIterator"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 2
  %101 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 2
  %102 = bitcast %"class.content::TransactionalLevelDBIterator"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.content::TransactionalLevelDBIterator"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 3
  %106 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 3
  %107 = bitcast %"class.content::TransactionalLevelDBIterator"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.content::TransactionalLevelDBIterator"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 4
  %111 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 4
  %112 = bitcast %"class.content::TransactionalLevelDBIterator"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.content::TransactionalLevelDBIterator"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 5
  %116 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 5
  %117 = bitcast %"class.content::TransactionalLevelDBIterator"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.content::TransactionalLevelDBIterator"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 6
  %121 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 6
  %122 = bitcast %"class.content::TransactionalLevelDBIterator"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.content::TransactionalLevelDBIterator"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 7
  %126 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 7
  %127 = bitcast %"class.content::TransactionalLevelDBIterator"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.content::TransactionalLevelDBIterator"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 8
  %131 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %130 to i64
  %132 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 8
  %133 = icmp eq %"class.content::TransactionalLevelDBIterator"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %60 to i64
  %136 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.content::TransactionalLevelDBIterator"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.content::TransactionalLevelDBIterator"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.content::TransactionalLevelDBIterator"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.content::TransactionalLevelDBIterator"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.content::TransactionalLevelDBIterator"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"class.content::TransactionalLevelDBIterator"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %153 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %152, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %153, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.content::TransactionalLevelDBIterator"** @_ZNSt3__16vectorIPN7content28TransactionalLevelDBIteratorENS_9allocatorIS3_EEE7emplaceIJRKS3_EEENS_11__wrap_iterIPS3_EENSA_IPS8_EEDpOT_(%"class.std::__1::vector.58"*, %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %9, align 8
  %11 = icmp ult %"class.content::TransactionalLevelDBIterator"** %8, %10
  %12 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %8 to i64
  %13 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %10 to i64
  br i1 %11, label %14, label %163

14:                                               ; preds = %3
  %15 = icmp eq %"class.content::TransactionalLevelDBIterator"** %8, %1
  %16 = bitcast %"class.content::TransactionalLevelDBIterator"** %2 to i64*
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %18, label %23

18:                                               ; preds = %14
  %19 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 1
  %21 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %20 to i64
  %22 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %319

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 1
  %25 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 %27
  %29 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  %30 = icmp ult %"class.content::TransactionalLevelDBIterator"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %32
  %34 = bitcast %"class.content::TransactionalLevelDBIterator"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"class.content::TransactionalLevelDBIterator"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"class.content::TransactionalLevelDBIterator"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %152

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %45
  %47 = bitcast %"class.content::TransactionalLevelDBIterator"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %1, i64 %55
  %57 = icmp ult %"class.content::TransactionalLevelDBIterator"** %8, %56
  %58 = icmp ult %"class.content::TransactionalLevelDBIterator"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %61
  %63 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %72
  %75 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %72
  %76 = bitcast %"class.content::TransactionalLevelDBIterator"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !29
  %78 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %75, i64 2
  %79 = bitcast %"class.content::TransactionalLevelDBIterator"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !29
  %81 = bitcast %"class.content::TransactionalLevelDBIterator"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !32, !noalias !29
  %82 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %74, i64 2
  %83 = bitcast %"class.content::TransactionalLevelDBIterator"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !32, !noalias !29
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %84
  %86 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %84
  %87 = bitcast %"class.content::TransactionalLevelDBIterator"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !29
  %89 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %86, i64 2
  %90 = bitcast %"class.content::TransactionalLevelDBIterator"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !29
  %92 = bitcast %"class.content::TransactionalLevelDBIterator"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !32, !noalias !29
  %93 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %85, i64 2
  %94 = bitcast %"class.content::TransactionalLevelDBIterator"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !32, !noalias !29
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %95
  %97 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %95
  %98 = bitcast %"class.content::TransactionalLevelDBIterator"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !29
  %100 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %97, i64 2
  %101 = bitcast %"class.content::TransactionalLevelDBIterator"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !29
  %103 = bitcast %"class.content::TransactionalLevelDBIterator"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !32, !noalias !29
  %104 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %96, i64 2
  %105 = bitcast %"class.content::TransactionalLevelDBIterator"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !32, !noalias !29
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %106
  %108 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %106
  %109 = bitcast %"class.content::TransactionalLevelDBIterator"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !29
  %111 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %108, i64 2
  %112 = bitcast %"class.content::TransactionalLevelDBIterator"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !29
  %114 = bitcast %"class.content::TransactionalLevelDBIterator"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !32, !noalias !29
  %115 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %107, i64 2
  %116 = bitcast %"class.content::TransactionalLevelDBIterator"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !32, !noalias !29
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !34

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %124
  %127 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %28, i64 %124
  %128 = bitcast %"class.content::TransactionalLevelDBIterator"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !29
  %130 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %127, i64 2
  %131 = bitcast %"class.content::TransactionalLevelDBIterator"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !29
  %133 = bitcast %"class.content::TransactionalLevelDBIterator"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !32, !noalias !29
  %134 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %126, i64 2
  %135 = bitcast %"class.content::TransactionalLevelDBIterator"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !32, !noalias !29
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !35

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %152, %139
  %142 = phi %"class.content::TransactionalLevelDBIterator"** [ %62, %139 ], [ %159, %152 ]
  %143 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %8, i64 %148
  %150 = bitcast %"class.content::TransactionalLevelDBIterator"** %149 to i8*
  %151 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %26, i1 false) #10
  br label %161

152:                                              ; preds = %41, %152
  %153 = phi %"class.content::TransactionalLevelDBIterator"** [ %159, %152 ], [ %42, %41 ]
  %154 = phi %"class.content::TransactionalLevelDBIterator"** [ %158, %152 ], [ %43, %41 ]
  %155 = bitcast %"class.content::TransactionalLevelDBIterator"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.content::TransactionalLevelDBIterator"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %154, i64 1
  %159 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %153, i64 1
  %160 = icmp ult %"class.content::TransactionalLevelDBIterator"** %158, %8
  br i1 %160, label %152, label %141, !llvm.loop !36

161:                                              ; preds = %144, %147
  %162 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i64*
  store i64 %17, i64* %162, align 8
  br label %319

163:                                              ; preds = %3
  %164 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %165) #10
  %166 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %171 = bitcast %"class.content::TransactionalLevelDBIterator"*** %7 to i64*
  %172 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %173 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 40, i1 false)
  %174 = load i64, i64* %172, align 8
  %175 = sub i64 %12, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %163
  %180 = bitcast %"class.std::__1::vector.58"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #12
  unreachable

181:                                              ; preds = %163
  %182 = bitcast %"class.content::TransactionalLevelDBIterator"*** %9 to i64*
  %183 = sub i64 %13, %174
  %184 = ashr exact i64 %183, 3
  %185 = icmp ult i64 %184, 1152921504606846975
  br i1 %185, label %190, label %186

186:                                              ; preds = %181
  %187 = sub i64 %4, %174
  %188 = ashr exact i64 %187, 3
  store %"class.content::TransactionalLevelDBIterator"** null, %"class.content::TransactionalLevelDBIterator"*** %169, align 8
  %189 = bitcast %"class.std::__1::allocator.77"** %170 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %164, %"class.std::__1::__compressed_pair.74"** %189, align 8
  br label %201

190:                                              ; preds = %181
  %191 = ashr exact i64 %183, 2
  %192 = icmp ult i64 %191, %177
  %193 = select i1 %192, i64 %177, i64 %191
  %194 = sub i64 %4, %174
  %195 = ashr exact i64 %194, 3
  store %"class.content::TransactionalLevelDBIterator"** null, %"class.content::TransactionalLevelDBIterator"*** %169, align 8
  %196 = bitcast %"class.std::__1::allocator.77"** %170 to %"class.std::__1::__compressed_pair.74"**
  store %"class.std::__1::__compressed_pair.74"* %164, %"class.std::__1::__compressed_pair.74"** %196, align 8
  %197 = icmp eq i64 %193, 0
  br i1 %197, label %207, label %198

198:                                              ; preds = %190
  %199 = icmp ugt i64 %193, 2305843009213693951
  br i1 %199, label %200, label %201

200:                                              ; preds = %198
  tail call void @abort() #12
  unreachable

201:                                              ; preds = %186, %198
  %202 = phi i64 [ 2305843009213693951, %186 ], [ %193, %198 ]
  %203 = phi i64 [ %188, %186 ], [ %195, %198 ]
  %204 = shl i64 %202, 3
  %205 = tail call i8* @_Znwm(i64 %204) #11
  %206 = bitcast i8* %205 to %"class.content::TransactionalLevelDBIterator"**
  br label %207

207:                                              ; preds = %190, %201
  %208 = phi i64 [ %203, %201 ], [ %195, %190 ]
  %209 = phi i64 [ %202, %201 ], [ 0, %190 ]
  %210 = phi %"class.content::TransactionalLevelDBIterator"** [ %206, %201 ], [ null, %190 ]
  store %"class.content::TransactionalLevelDBIterator"** %210, %"class.content::TransactionalLevelDBIterator"*** %166, align 8
  %211 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %210, i64 %208
  store %"class.content::TransactionalLevelDBIterator"** %211, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  store %"class.content::TransactionalLevelDBIterator"** %211, %"class.content::TransactionalLevelDBIterator"*** %167, align 8
  %212 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %210, i64 %209
  store %"class.content::TransactionalLevelDBIterator"** %212, %"class.content::TransactionalLevelDBIterator"*** %169, align 8
  call void @_ZNSt3__114__split_bufferIPN7content28TransactionalLevelDBIteratorERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.content::TransactionalLevelDBIterator"** dereferenceable(8) %2)
  %213 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %167, align 8
  %214 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %6, align 8
  %215 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %214 to i64
  %216 = sub i64 %4, %215
  %217 = ashr exact i64 %216, 3
  %218 = sub nsw i64 0, %217
  %219 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %213, i64 %218
  store %"class.content::TransactionalLevelDBIterator"** %219, %"class.content::TransactionalLevelDBIterator"*** %167, align 8
  %220 = icmp sgt i64 %216, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %207
  %222 = bitcast %"class.content::TransactionalLevelDBIterator"** %219 to i8*
  %223 = bitcast %"class.content::TransactionalLevelDBIterator"** %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 %216, i1 false) #10
  br label %224

224:                                              ; preds = %221, %207
  %225 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %7, align 8
  %226 = icmp eq %"class.content::TransactionalLevelDBIterator"** %225, %1
  br i1 %226, label %227, label %231

227:                                              ; preds = %224
  %228 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %225 to i64
  %229 = bitcast %"class.content::TransactionalLevelDBIterator"*** %168 to i64*
  %230 = load i64, i64* %229, align 8
  br label %293

231:                                              ; preds = %224
  %232 = bitcast %"class.content::TransactionalLevelDBIterator"*** %168 to i64**
  %233 = load i64*, i64** %232, align 8
  %234 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %225, i64 -1
  %235 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %255, label %241

241:                                              ; preds = %231, %241
  %242 = phi i64* [ %250, %241 ], [ %233, %231 ]
  %243 = phi %"class.content::TransactionalLevelDBIterator"** [ %247, %241 ], [ %1, %231 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %231 ]
  %245 = bitcast %"class.content::TransactionalLevelDBIterator"** %243 to i64*
  %246 = load i64, i64* %245, align 8
  store i64 %246, i64* %242, align 8
  %247 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %243, i64 1
  %248 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %249 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %248, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %249, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %250 = bitcast %"class.content::TransactionalLevelDBIterator"** %249 to i64*
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !37

253:                                              ; preds = %241
  %254 = bitcast %"class.content::TransactionalLevelDBIterator"** %249 to i64*
  br label %255

255:                                              ; preds = %231, %253
  %256 = phi %"class.content::TransactionalLevelDBIterator"** [ undef, %231 ], [ %249, %253 ]
  %257 = phi i64* [ %233, %231 ], [ %254, %253 ]
  %258 = phi %"class.content::TransactionalLevelDBIterator"** [ %1, %231 ], [ %247, %253 ]
  %259 = icmp ult i64 %236, 24
  br i1 %259, label %288, label %260

260:                                              ; preds = %255, %260
  %261 = phi i64* [ %287, %260 ], [ %257, %255 ]
  %262 = phi %"class.content::TransactionalLevelDBIterator"** [ %283, %260 ], [ %258, %255 ]
  %263 = bitcast %"class.content::TransactionalLevelDBIterator"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  store i64 %264, i64* %261, align 8
  %265 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 1
  %266 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %267 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %266, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %267, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %268 = bitcast %"class.content::TransactionalLevelDBIterator"** %267 to i64*
  %269 = bitcast %"class.content::TransactionalLevelDBIterator"** %265 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %268, align 8
  %271 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 2
  %272 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %273 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %272, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %273, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %274 = bitcast %"class.content::TransactionalLevelDBIterator"** %273 to i64*
  %275 = bitcast %"class.content::TransactionalLevelDBIterator"** %271 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %274, align 8
  %277 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 3
  %278 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %279 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %278, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %279, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %280 = bitcast %"class.content::TransactionalLevelDBIterator"** %279 to i64*
  %281 = bitcast %"class.content::TransactionalLevelDBIterator"** %277 to i64*
  %282 = load i64, i64* %281, align 8
  store i64 %282, i64* %280, align 8
  %283 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %262, i64 4
  %284 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %285 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %284, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %285, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  %286 = icmp eq %"class.content::TransactionalLevelDBIterator"** %283, %225
  %287 = bitcast %"class.content::TransactionalLevelDBIterator"** %285 to i64*
  br i1 %286, label %288, label %260

288:                                              ; preds = %260, %255
  %289 = phi %"class.content::TransactionalLevelDBIterator"** [ %256, %255 ], [ %285, %260 ]
  %290 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %289 to i64
  %291 = load i64, i64* %171, align 8
  %292 = bitcast %"class.content::TransactionalLevelDBIterator"*** %168 to i64*
  br label %293

293:                                              ; preds = %227, %288
  %294 = phi i64* [ %229, %227 ], [ %292, %288 ]
  %295 = phi i64 [ %230, %227 ], [ %290, %288 ]
  %296 = phi i64 [ %228, %227 ], [ %291, %288 ]
  %297 = load i64, i64* %172, align 8
  %298 = bitcast %"class.content::TransactionalLevelDBIterator"*** %167 to i64*
  %299 = load i64, i64* %298, align 8
  store i64 %299, i64* %172, align 8
  store i64 %297, i64* %298, align 8
  store i64 %295, i64* %171, align 8
  store i64 %296, i64* %294, align 8
  %300 = load i64, i64* %182, align 8
  %301 = bitcast %"class.content::TransactionalLevelDBIterator"*** %169 to i64*
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %182, align 8
  store i64 %300, i64* %301, align 8
  %303 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %297, i64* %303, align 8
  %304 = inttoptr i64 %297 to %"class.content::TransactionalLevelDBIterator"**
  %305 = inttoptr i64 %296 to %"class.content::TransactionalLevelDBIterator"**
  %306 = icmp eq %"class.content::TransactionalLevelDBIterator"** %305, %304
  br i1 %306, label %314, label %307

307:                                              ; preds = %293
  %308 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %305, i64 -1
  %309 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %308 to i64
  %310 = sub i64 %309, %297
  %311 = lshr i64 %310, 3
  %312 = xor i64 %311, -1
  %313 = getelementptr %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %305, i64 %312
  store %"class.content::TransactionalLevelDBIterator"** %313, %"class.content::TransactionalLevelDBIterator"*** %168, align 8
  br label %314

314:                                              ; preds = %307, %293
  %315 = icmp eq i64 %297, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %297 to i8*
  call void @_ZdlPv(i8* %317) #11
  br label %318

318:                                              ; preds = %314, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %165) #10
  br label %319

319:                                              ; preds = %18, %161, %318
  %320 = phi %"class.content::TransactionalLevelDBIterator"** [ %1, %18 ], [ %1, %161 ], [ %213, %318 ]
  ret %"class.content::TransactionalLevelDBIterator"** %320
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN7content28TransactionalLevelDBIteratorERNS_9allocatorIS3_EEE12emplace_backIJRKS3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.content::TransactionalLevelDBIterator"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %5, align 8
  %7 = icmp eq %"class.content::TransactionalLevelDBIterator"** %4, %6
  %8 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %6 to i64
  %9 = bitcast %"class.content::TransactionalLevelDBIterator"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %13, align 8
  %15 = icmp ugt %"class.content::TransactionalLevelDBIterator"** %12, %14
  %16 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %12, i64 %22
  %24 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.content::TransactionalLevelDBIterator"** %23 to i8*
  %30 = bitcast %"class.content::TransactionalLevelDBIterator"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.content::TransactionalLevelDBIterator"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %23, i64 %26
  store %"class.content::TransactionalLevelDBIterator"** %34, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %35 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %33, i64 %22
  store %"class.content::TransactionalLevelDBIterator"** %35, %"class.content::TransactionalLevelDBIterator"*** %11, align 8
  %36 = bitcast %"class.content::TransactionalLevelDBIterator"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.content::TransactionalLevelDBIterator"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"class.content::TransactionalLevelDBIterator"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, i64 %47
  %53 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %52 to i64
  %54 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %50, i64 %43
  %55 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %54 to i64
  %56 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %12 to i64
  %57 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.content::TransactionalLevelDBIterator"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.content::TransactionalLevelDBIterator"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.content::TransactionalLevelDBIterator"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %69, i64 1
  %77 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %76 to i64
  %78 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !38

81:                                               ; preds = %68
  %82 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.content::TransactionalLevelDBIterator"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.content::TransactionalLevelDBIterator"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.content::TransactionalLevelDBIterator"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.content::TransactionalLevelDBIterator"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.content::TransactionalLevelDBIterator"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 1
  %96 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 1
  %97 = bitcast %"class.content::TransactionalLevelDBIterator"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.content::TransactionalLevelDBIterator"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 2
  %101 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 2
  %102 = bitcast %"class.content::TransactionalLevelDBIterator"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.content::TransactionalLevelDBIterator"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 3
  %106 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 3
  %107 = bitcast %"class.content::TransactionalLevelDBIterator"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.content::TransactionalLevelDBIterator"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 4
  %111 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 4
  %112 = bitcast %"class.content::TransactionalLevelDBIterator"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.content::TransactionalLevelDBIterator"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 5
  %116 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 5
  %117 = bitcast %"class.content::TransactionalLevelDBIterator"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.content::TransactionalLevelDBIterator"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 6
  %121 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 6
  %122 = bitcast %"class.content::TransactionalLevelDBIterator"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.content::TransactionalLevelDBIterator"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 7
  %126 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 7
  %127 = bitcast %"class.content::TransactionalLevelDBIterator"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.content::TransactionalLevelDBIterator"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %89, i64 8
  %131 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %130 to i64
  %132 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %91, i64 8
  %133 = icmp eq %"class.content::TransactionalLevelDBIterator"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.content::TransactionalLevelDBIterator"** %60 to i64
  %136 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.content::TransactionalLevelDBIterator"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.content::TransactionalLevelDBIterator"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.content::TransactionalLevelDBIterator"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.content::TransactionalLevelDBIterator"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.content::TransactionalLevelDBIterator"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"class.content::TransactionalLevelDBIterator"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.content::TransactionalLevelDBIterator"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.content::TransactionalLevelDBIterator"**, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  %153 = getelementptr inbounds %"class.content::TransactionalLevelDBIterator"*, %"class.content::TransactionalLevelDBIterator"** %152, i64 1
  store %"class.content::TransactionalLevelDBIterator"** %153, %"class.content::TransactionalLevelDBIterator"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !9
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !9
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !9
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !9
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !9
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !9
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !9
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !9
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !9
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !9
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !9
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !9
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !9
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !9
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content17LevelDBWriteBatchD1Ev(%"class.content::LevelDBWriteBatch"*) unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7content31TransactionalLevelDBTransaction6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN7content31TransactionalLevelDBTransaction6RemoveERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base14WeakPtrFactoryIN7content31TransactionalLevelDBTransactionEE10GetWeakPtrEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base14WeakPtrFactoryIN7content31TransactionalLevelDBTransactionEE10GetWeakPtrEv"}
!9 = !{i8 0, i8 2}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeIPN7content28TransactionalLevelDBIteratorENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN7leveldb6Status2OKEv: argument 0"}
!16 = distinct !{!16, !"_ZN7leveldb6Status2OKEv"}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.isvectorized", i32 1}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !23}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !25}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !23}
!35 = distinct !{!35, !25}
!36 = distinct !{!36, !23}
!37 = distinct !{!37, !25}
!38 = distinct !{!38, !25}
