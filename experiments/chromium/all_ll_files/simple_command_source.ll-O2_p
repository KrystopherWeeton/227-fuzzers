; ModuleID = '../../chrome/browser/ui/commander/simple_command_source.cc'
source_filename = "../../chrome/browser/ui/commander/simple_command_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.commander::SimpleCommandSource" = type { %"class.commander::CommandSource", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.commander::CommandSource" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.commander::CommandItem"* }
%"struct.commander::CommandItem" = type { i32 (...)**, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.absl::variant", double, %"class.std::__1::vector.14" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.12" }
%"union.absl::variant_internal::DestructibleUnionImpl.12" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.11", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.16" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gfx::Range"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::unique_ptr"* }
%class.Browser = type opaque
%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor" = type { %"class.absl::variant"*, %"class.base::OnceCallback"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%struct.anon.27 = type { i32, %"class.std::__1::basic_string" }
%"class.commander::FuzzyFinder" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.28", %"class.std::__1::vector.28", %"class.std::__1::vector.35", %"class.std::__1::vector.41" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.std::__1::vector.35" = type { i64*, i64, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i64*, i64*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64* }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.48", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.51 }
%union.anon.51 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base5EraseIDsNSt3__111char_traitsIDsEENS1_9allocatorIDsEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS3_EENS0_17UnretainedWrapperIS4_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EEiEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE = comdat any

$_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN9commander19SimpleCommandSourceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.commander::SimpleCommandSource"*)* @_ZN9commander19SimpleCommandSourceD2Ev to i8*), i8* bitcast (void (%"class.commander::SimpleCommandSource"*)* @_ZN9commander19SimpleCommandSourceD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.commander::SimpleCommandSource"*, %"class.std::__1::basic_string"*, %class.Browser*)* @_ZNK9commander19SimpleCommandSource11GetCommandsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEP7Browser to i8*)] }, align 8
@.str.33 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN9commander19SimpleCommandSourceC1Ev = hidden unnamed_addr alias void (%"class.commander::SimpleCommandSource"*), void (%"class.commander::SimpleCommandSource"*)* @_ZN9commander19SimpleCommandSourceC2Ev
@_ZN9commander19SimpleCommandSourceD1Ev = hidden unnamed_addr alias void (%"class.commander::SimpleCommandSource"*), void (%"class.commander::SimpleCommandSource"*)* @_ZN9commander19SimpleCommandSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander19SimpleCommandSourceC2Ev(%"class.commander::SimpleCommandSource"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander19SimpleCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %6) #10
  %7 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %7, i64 0, i32 0
  %9 = ptrtoint %"class.commander::SimpleCommandSource"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %8, i64 %9) #10
  %10 = bitcast %"class.base::WeakPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10, !noalias !2
  %12 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %7, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %12) #10, !noalias !2
  %13 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !2
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %15, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %14) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10, !noalias !2
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::WeakPtr"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %16, align 8
  %19 = bitcast %"class.base::WeakPtr"* %5 to i64*
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.base::internal::WeakReference::Flag"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %21) #10
  %28 = bitcast %"class.base::internal::WeakReference::Flag"* %21 to i8*
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %23, %27
  %30 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %31, i64* %32, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander19SimpleCommandSourceD2Ev(%"class.commander::SimpleCommandSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander19SimpleCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander19SimpleCommandSourceD0Ev(%"class.commander::SimpleCommandSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9commander19SimpleCommandSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %4) #10
  %5 = bitcast %"class.commander::SimpleCommandSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9commander19SimpleCommandSource11GetCommandsERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEP7Browser(%"class.std::__1::vector"* noalias sret, %"class.commander::SimpleCommandSource"*, %"class.std::__1::basic_string"* dereferenceable(24), %class.Browser*) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", align 8
  %6 = alloca [36 x %struct.anon.27], align 16
  %7 = alloca %"class.commander::FuzzyFinder", align 8
  %8 = alloca %"class.std::__1::vector.14", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca %"class.ui::Accelerator", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = bitcast [36 x %struct.anon.27]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1152, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 1152, i1 false)
  %16 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 0, i32 0
  store i32 37000, i32* %16, align 16
  %17 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 0, i32 1
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %17, i32 6682) #10
  %18 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 1, i32 0
  store i32 35004, i32* %18, align 16
  %19 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 1, i32 1
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %19, i32 6683) #10
  %20 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 2, i32 0
  store i32 35003, i32* %20, align 16
  %21 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 2, i32 1
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %21, i32 21257) #10
  %22 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 3, i32 0
  store i32 40010, i32* %22, align 16
  %23 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 0
  %24 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 3, i32 1
  %25 = call i8* @_Znwm(i64 32) #11
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 12, i64 -9223372036854775792>, <2 x i64>* %28, align 8
  %29 = bitcast i8* %25 to <8 x i16>*
  store <8 x i16> <i16 83, i16 104, i16 111, i16 119, i16 32, i16 104, i16 105, i16 115>, <8 x i16>* %29, align 2
  %30 = getelementptr inbounds i8, i8* %25, i64 16
  %31 = bitcast i8* %30 to i16*
  store i16 116, i16* %31, align 2
  %32 = getelementptr inbounds i8, i8* %25, i64 18
  %33 = bitcast i8* %32 to i16*
  store i16 111, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %25, i64 20
  %35 = bitcast i8* %34 to i16*
  store i16 114, i16* %35, align 2
  %36 = getelementptr inbounds i8, i8* %25, i64 22
  %37 = bitcast i8* %36 to i16*
  store i16 121, i16* %37, align 2
  %38 = getelementptr inbounds i8, i8* %25, i64 24
  %39 = bitcast i8* %38 to i16*
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 4, i32 0
  store i32 33002, i32* %40, align 16
  %41 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 4, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %42, i64 0, i32 1, i32 1
  store i8 6, i8* %43, align 1
  %44 = bitcast %"class.std::__1::basic_string"* %41 to i16*
  store i16 82, i16* %44, align 8
  %45 = getelementptr inbounds i16, i16* %44, i64 1
  store i16 101, i16* %45, align 2
  %46 = getelementptr inbounds i16, i16* %44, i64 2
  store i16 108, i16* %46, align 4
  %47 = getelementptr inbounds i16, i16* %44, i64 3
  store i16 111, i16* %47, align 2
  %48 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i64* %48 to i16*
  store i16 97, i16* %49, align 8
  %50 = getelementptr inbounds i16, i16* %44, i64 5
  store i16 100, i16* %50, align 2
  %51 = getelementptr inbounds i16, i16* %44, i64 6
  store i16 0, i16* %51, align 4
  %52 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 5, i32 0
  store i32 34014, i32* %52, align 16
  %53 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 5, i32 1
  %54 = call i8* @_Znwm(i64 32) #11
  %55 = bitcast %"class.std::__1::basic_string"* %53 to i8**
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> <i64 14, i64 -9223372036854775792>, <2 x i64>* %57, align 8
  %58 = bitcast i8* %54 to <8 x i16>*
  store <8 x i16> <i16 67, i16 114, i16 101, i16 97, i16 116, i16 101, i16 32, i16 110>, <8 x i16>* %58, align 2
  %59 = getelementptr inbounds i8, i8* %54, i64 16
  %60 = bitcast i8* %59 to i16*
  store i16 101, i16* %60, align 2
  %61 = getelementptr inbounds i8, i8* %54, i64 18
  %62 = bitcast i8* %61 to i16*
  store i16 119, i16* %62, align 2
  %63 = getelementptr inbounds i8, i8* %54, i64 20
  %64 = bitcast i8* %63 to i16*
  store i16 32, i16* %64, align 2
  %65 = getelementptr inbounds i8, i8* %54, i64 22
  %66 = bitcast i8* %65 to i16*
  store i16 116, i16* %66, align 2
  %67 = getelementptr inbounds i8, i8* %54, i64 24
  %68 = bitcast i8* %67 to i16*
  store i16 97, i16* %68, align 2
  %69 = getelementptr inbounds i8, i8* %54, i64 26
  %70 = bitcast i8* %69 to i16*
  store i16 98, i16* %70, align 2
  %71 = getelementptr inbounds i8, i8* %54, i64 28
  %72 = bitcast i8* %71 to i16*
  store i16 0, i16* %72, align 2
  %73 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 6, i32 0
  store i32 34028, i32* %73, align 16
  %74 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 6, i32 1
  %75 = call i8* @_Znwm(i64 64) #11
  %76 = bitcast %"class.std::__1::basic_string"* %74 to i8**
  store i8* %75, i8** %76, align 8
  %77 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 6, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %78, align 8
  %79 = bitcast i8* %75 to <8 x i16>*
  store <8 x i16> <i16 79, i16 112, i16 101, i16 110, i16 32, i16 114, i16 101, i16 99>, <8 x i16>* %79, align 2
  %80 = getelementptr inbounds i8, i8* %75, i64 16
  %81 = bitcast i8* %80 to <8 x i16>*
  store <8 x i16> <i16 101, i16 110, i16 116, i16 108, i16 121, i16 32, i16 99, i16 108>, <8 x i16>* %81, align 2
  %82 = getelementptr inbounds i8, i8* %75, i64 32
  %83 = bitcast i8* %82 to <8 x i16>*
  store <8 x i16> <i16 111, i16 115, i16 101, i16 100, i16 32, i16 116, i16 97, i16 98>, <8 x i16>* %83, align 2
  %84 = getelementptr inbounds i8, i8* %75, i64 48
  %85 = bitcast i8* %84 to i16*
  store i16 0, i16* %85, align 2
  %86 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 7, i32 0
  store i32 34000, i32* %86, align 16
  %87 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 7, i32 1
  %88 = call i8* @_Znwm(i64 48) #11
  %89 = bitcast %"class.std::__1::basic_string"* %87 to i8**
  store i8* %88, i8** %89, align 8
  %90 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 7, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> <i64 17, i64 -9223372036854775784>, <2 x i64>* %91, align 8
  %92 = bitcast i8* %88 to <8 x i16>*
  store <8 x i16> <i16 67, i16 114, i16 101, i16 97, i16 116, i16 101, i16 32, i16 110>, <8 x i16>* %92, align 2
  %93 = getelementptr inbounds i8, i8* %88, i64 16
  %94 = bitcast i8* %93 to <8 x i16>*
  store <8 x i16> <i16 101, i16 119, i16 32, i16 119, i16 105, i16 110, i16 100, i16 111>, <8 x i16>* %94, align 2
  %95 = getelementptr inbounds i8, i8* %88, i64 32
  %96 = bitcast i8* %95 to i16*
  store i16 119, i16* %96, align 2
  %97 = getelementptr inbounds i8, i8* %88, i64 34
  %98 = bitcast i8* %97 to i16*
  store i16 0, i16* %98, align 2
  %99 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 8, i32 0
  store i32 34001, i32* %99, align 16
  %100 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 8, i32 1
  %101 = call i8* @_Znwm(i64 64) #11
  %102 = bitcast %"class.std::__1::basic_string"* %100 to i8**
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 8, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %104, align 8
  %105 = bitcast i8* %101 to <8 x i16>*
  store <8 x i16> <i16 67, i16 114, i16 101, i16 97, i16 116, i16 101, i16 32, i16 110>, <8 x i16>* %105, align 2
  %106 = getelementptr inbounds i8, i8* %101, i64 16
  %107 = bitcast i8* %106 to <8 x i16>*
  store <8 x i16> <i16 101, i16 119, i16 32, i16 105, i16 110, i16 99, i16 111, i16 103>, <8 x i16>* %107, align 2
  %108 = getelementptr inbounds i8, i8* %101, i64 32
  %109 = bitcast i8* %108 to <8 x i16>*
  store <8 x i16> <i16 110, i16 105, i16 116, i16 111, i16 32, i16 119, i16 105, i16 110>, <8 x i16>* %109, align 2
  %110 = getelementptr inbounds i8, i8* %101, i64 48
  %111 = bitcast i8* %110 to i16*
  store i16 100, i16* %111, align 2
  %112 = getelementptr inbounds i8, i8* %101, i64 50
  %113 = bitcast i8* %112 to i16*
  store i16 111, i16* %113, align 2
  %114 = getelementptr inbounds i8, i8* %101, i64 52
  %115 = bitcast i8* %114 to i16*
  store i16 119, i16* %115, align 2
  %116 = getelementptr inbounds i8, i8* %101, i64 54
  %117 = bitcast i8* %116 to i16*
  store i16 0, i16* %117, align 2
  %118 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 9, i32 0
  store i32 35000, i32* %118, align 16
  %119 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 9, i32 1
  %120 = call i8* @_Znwm(i64 48) #11
  %121 = bitcast %"class.std::__1::basic_string"* %119 to i8**
  store i8* %120, i8** %121, align 8
  %122 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 9, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast i64* %122 to <2 x i64>*
  store <2 x i64> <i64 17, i64 -9223372036854775784>, <2 x i64>* %123, align 8
  %124 = bitcast i8* %120 to <8 x i16>*
  store <8 x i16> <i16 66, i16 111, i16 111, i16 107, i16 109, i16 97, i16 114, i16 107>, <8 x i16>* %124, align 2
  %125 = getelementptr inbounds i8, i8* %120, i64 16
  %126 = bitcast i8* %125 to <8 x i16>*
  store <8 x i16> <i16 32, i16 116, i16 104, i16 105, i16 115, i16 32, i16 116, i16 97>, <8 x i16>* %126, align 2
  %127 = getelementptr inbounds i8, i8* %120, i64 32
  %128 = bitcast i8* %127 to i16*
  store i16 98, i16* %128, align 2
  %129 = getelementptr inbounds i8, i8* %120, i64 34
  %130 = bitcast i8* %129 to i16*
  store i16 0, i16* %130, align 2
  %131 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 10, i32 0
  store i32 35001, i32* %131, align 16
  %132 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 10, i32 1
  %133 = call i8* @_Znwm(i64 48) #11
  %134 = bitcast %"class.std::__1::basic_string"* %132 to i8**
  store i8* %133, i8** %134, align 8
  %135 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 10, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> <i64 17, i64 -9223372036854775784>, <2 x i64>* %136, align 8
  %137 = bitcast i8* %133 to <8 x i16>*
  store <8 x i16> <i16 66, i16 111, i16 111, i16 107, i16 109, i16 97, i16 114, i16 107>, <8 x i16>* %137, align 2
  %138 = getelementptr inbounds i8, i8* %133, i64 16
  %139 = bitcast i8* %138 to <8 x i16>*
  store <8 x i16> <i16 32, i16 97, i16 108, i16 108, i16 32, i16 116, i16 97, i16 98>, <8 x i16>* %139, align 2
  %140 = getelementptr inbounds i8, i8* %133, i64 32
  %141 = bitcast i8* %140 to i16*
  store i16 115, i16* %141, align 2
  %142 = getelementptr inbounds i8, i8* %133, i64 34
  %143 = bitcast i8* %142 to i16*
  store i16 0, i16* %143, align 2
  %144 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 11, i32 0
  store i32 33000, i32* %144, align 16
  %145 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 11, i32 1
  %146 = bitcast %"class.std::__1::basic_string"* %145 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  store i8 4, i8* %147, align 1
  %148 = bitcast %"class.std::__1::basic_string"* %145 to i16*
  store i16 66, i16* %148, align 8
  %149 = getelementptr inbounds i16, i16* %148, i64 1
  store i16 97, i16* %149, align 2
  %150 = getelementptr inbounds i16, i16* %148, i64 2
  store i16 99, i16* %150, align 4
  %151 = getelementptr inbounds i16, i16* %148, i64 3
  store i16 107, i16* %151, align 2
  %152 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 11, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = bitcast i64* %152 to i16*
  store i16 0, i16* %153, align 8
  %154 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 12, i32 0
  store i32 33001, i32* %154, align 16
  %155 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 12, i32 1
  %156 = bitcast %"class.std::__1::basic_string"* %155 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %156, i64 0, i32 1, i32 1
  store i8 7, i8* %157, align 1
  %158 = bitcast %"class.std::__1::basic_string"* %155 to <8 x i16>*
  store <8 x i16> <i16 70, i16 111, i16 114, i16 119, i16 97, i16 114, i16 100, i16 0>, <8 x i16>* %158, align 8
  %159 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 13, i32 0
  store i32 38001, i32* %159, align 16
  %160 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 13, i32 1
  %161 = bitcast %"class.std::__1::basic_string"* %160 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %161, i64 0, i32 1, i32 1
  store i8 7, i8* %162, align 1
  %163 = bitcast %"class.std::__1::basic_string"* %160 to i16*
  store i16 90, i16* %163, align 8
  %164 = getelementptr inbounds i16, i16* %163, i64 1
  store i16 111, i16* %164, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 2
  store i16 111, i16* %165, align 4
  %166 = getelementptr inbounds i16, i16* %163, i64 3
  store i16 109, i16* %166, align 2
  %167 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 13, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = bitcast i64* %167 to i16*
  store i16 32, i16* %168, align 8
  %169 = getelementptr inbounds i16, i16* %163, i64 5
  store i16 105, i16* %169, align 2
  %170 = getelementptr inbounds i16, i16* %163, i64 6
  store i16 110, i16* %170, align 4
  %171 = getelementptr inbounds i16, i16* %163, i64 7
  store i16 0, i16* %171, align 2
  %172 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 14, i32 0
  store i32 38003, i32* %172, align 16
  %173 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 14, i32 1
  %174 = bitcast %"class.std::__1::basic_string"* %173 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %174, i64 0, i32 1, i32 1
  store i8 8, i8* %175, align 1
  %176 = bitcast %"class.std::__1::basic_string"* %173 to <8 x i16>*
  store <8 x i16> <i16 90, i16 111, i16 111, i16 109, i16 32, i16 111, i16 117, i16 116>, <8 x i16>* %176, align 8
  %177 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 14, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %178 = bitcast i64* %177 to i16*
  store i16 0, i16* %178, align 8
  %179 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 15, i32 0
  store i32 38002, i32* %179, align 16
  %180 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 15, i32 1
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %181, i64 0, i32 1, i32 1
  store i8 10, i8* %182, align 1
  %183 = bitcast %"class.std::__1::basic_string"* %180 to i16*
  %184 = bitcast %"class.std::__1::basic_string"* %180 to <8 x i16>*
  store <8 x i16> <i16 82, i16 101, i16 115, i16 101, i16 116, i16 32, i16 122, i16 111>, <8 x i16>* %184, align 8
  %185 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 15, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %186 = bitcast i64* %185 to i16*
  store i16 111, i16* %186, align 8
  %187 = getelementptr inbounds i16, i16* %183, i64 9
  store i16 109, i16* %187, align 2
  %188 = getelementptr inbounds i16, i16* %183, i64 10
  store i16 0, i16* %188, align 4
  %189 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 16, i32 0
  store i32 35002, i32* %189, align 16
  %190 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 16, i32 1
  %191 = call i8* @_Znwm(i64 48) #11
  %192 = bitcast %"class.std::__1::basic_string"* %190 to i8**
  store i8* %191, i8** %192, align 8
  %193 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 16, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %194 = bitcast i64* %193 to <2 x i64>*
  store <2 x i64> <i64 16, i64 -9223372036854775784>, <2 x i64>* %194, align 8
  %195 = bitcast i8* %191 to <8 x i16>*
  store <8 x i16> <i16 86, i16 105, i16 101, i16 119, i16 32, i16 112, i16 97, i16 103>, <8 x i16>* %195, align 2
  %196 = getelementptr inbounds i8, i8* %191, i64 16
  %197 = bitcast i8* %196 to <8 x i16>*
  store <8 x i16> <i16 101, i16 32, i16 115, i16 111, i16 117, i16 114, i16 99, i16 101>, <8 x i16>* %197, align 2
  %198 = getelementptr inbounds i8, i8* %191, i64 32
  %199 = bitcast i8* %198 to i16*
  store i16 0, i16* %199, align 2
  %200 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 17, i32 0
  store i32 34031, i32* %200, align 16
  %201 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 17, i32 1
  %202 = bitcast %"class.std::__1::basic_string"* %201 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %202, i64 0, i32 1, i32 1
  store i8 4, i8* %203, align 1
  %204 = bitcast %"class.std::__1::basic_string"* %201 to i16*
  store i16 81, i16* %204, align 8
  %205 = getelementptr inbounds i16, i16* %204, i64 1
  store i16 117, i16* %205, align 2
  %206 = getelementptr inbounds i16, i16* %204, i64 2
  store i16 105, i16* %206, align 4
  %207 = getelementptr inbounds i16, i16* %204, i64 3
  store i16 116, i16* %207, align 2
  %208 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 17, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %209 = bitcast i64* %208 to i16*
  store i16 0, i16* %209, align 8
  %210 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 18, i32 0
  store i32 35006, i32* %210, align 16
  %211 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 18, i32 1
  %212 = call i8* @_Znwm(i64 48) #11
  %213 = bitcast %"class.std::__1::basic_string"* %211 to i8**
  store i8* %212, i8** %213, align 8
  %214 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 18, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = bitcast i64* %214 to <2 x i64>*
  store <2 x i64> <i64 19, i64 -9223372036854775784>, <2 x i64>* %215, align 8
  %216 = bitcast i8* %212 to <8 x i16>*
  store <8 x i16> <i16 69, i16 109, i16 97, i16 105, i16 108, i16 32, i16 112, i16 97>, <8 x i16>* %216, align 2
  %217 = getelementptr inbounds i8, i8* %212, i64 16
  %218 = bitcast i8* %217 to <8 x i16>*
  store <8 x i16> <i16 103, i16 101, i16 32, i16 108, i16 111, i16 99, i16 97, i16 116>, <8 x i16>* %218, align 2
  %219 = getelementptr inbounds i8, i8* %212, i64 32
  %220 = bitcast i8* %219 to i16*
  store i16 105, i16* %220, align 2
  %221 = getelementptr inbounds i8, i8* %212, i64 34
  %222 = bitcast i8* %221 to i16*
  store i16 111, i16* %222, align 2
  %223 = getelementptr inbounds i8, i8* %212, i64 36
  %224 = bitcast i8* %223 to i16*
  store i16 110, i16* %224, align 2
  %225 = getelementptr inbounds i8, i8* %212, i64 38
  %226 = bitcast i8* %225 to i16*
  store i16 0, i16* %226, align 2
  %227 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 19, i32 0
  store i32 39001, i32* %227, align 16
  %228 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 19, i32 1
  %229 = call i8* @_Znwm(i64 48) #11
  %230 = bitcast %"class.std::__1::basic_string"* %228 to i8**
  store i8* %229, i8** %230, align 8
  %231 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 19, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = bitcast i64* %231 to <2 x i64>*
  store <2 x i64> <i64 18, i64 -9223372036854775784>, <2 x i64>* %232, align 8
  %233 = bitcast i8* %229 to <8 x i16>*
  store <8 x i16> <i16 70, i16 111, i16 99, i16 117, i16 115, i16 32, i16 108, i16 111>, <8 x i16>* %233, align 2
  %234 = getelementptr inbounds i8, i8* %229, i64 16
  %235 = bitcast i8* %234 to <8 x i16>*
  store <8 x i16> <i16 99, i16 97, i16 116, i16 105, i16 111, i16 110, i16 32, i16 98>, <8 x i16>* %235, align 2
  %236 = getelementptr inbounds i8, i8* %229, i64 32
  %237 = bitcast i8* %236 to i16*
  store i16 97, i16* %237, align 2
  %238 = getelementptr inbounds i8, i8* %229, i64 34
  %239 = bitcast i8* %238 to i16*
  store i16 114, i16* %239, align 2
  %240 = getelementptr inbounds i8, i8* %229, i64 36
  %241 = bitcast i8* %240 to i16*
  store i16 0, i16* %241, align 2
  %242 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 20, i32 0
  store i32 39000, i32* %242, align 16
  %243 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 20, i32 1
  %244 = call i8* @_Znwm(i64 32) #11
  %245 = bitcast %"class.std::__1::basic_string"* %243 to i8**
  store i8* %244, i8** %245, align 8
  %246 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 20, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = bitcast i64* %246 to <2 x i64>*
  store <2 x i64> <i64 13, i64 -9223372036854775792>, <2 x i64>* %247, align 8
  %248 = bitcast i8* %244 to <8 x i16>*
  store <8 x i16> <i16 70, i16 111, i16 99, i16 117, i16 115, i16 32, i16 116, i16 111>, <8 x i16>* %248, align 2
  %249 = getelementptr inbounds i8, i8* %244, i64 16
  %250 = bitcast i8* %249 to i16*
  store i16 111, i16* %250, align 2
  %251 = getelementptr inbounds i8, i8* %244, i64 18
  %252 = bitcast i8* %251 to i16*
  store i16 108, i16* %252, align 2
  %253 = getelementptr inbounds i8, i8* %244, i64 20
  %254 = bitcast i8* %253 to i16*
  store i16 98, i16* %254, align 2
  %255 = getelementptr inbounds i8, i8* %244, i64 22
  %256 = bitcast i8* %255 to i16*
  store i16 97, i16* %256, align 2
  %257 = getelementptr inbounds i8, i8* %244, i64 24
  %258 = bitcast i8* %257 to i16*
  store i16 114, i16* %258, align 2
  %259 = getelementptr inbounds i8, i8* %244, i64 26
  %260 = bitcast i8* %259 to i16*
  store i16 0, i16* %260, align 2
  %261 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 21, i32 0
  store i32 40000, i32* %261, align 16
  %262 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 21, i32 1
  %263 = bitcast %"class.std::__1::basic_string"* %262 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %263, i64 0, i32 1, i32 1
  store i8 9, i8* %264, align 1
  %265 = bitcast %"class.std::__1::basic_string"* %262 to i16*
  %266 = bitcast %"class.std::__1::basic_string"* %262 to <8 x i16>*
  store <8 x i16> <i16 79, i16 112, i16 101, i16 110, i16 32, i16 102, i16 105, i16 108>, <8 x i16>* %266, align 8
  %267 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 21, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %268 = bitcast i64* %267 to i16*
  store i16 101, i16* %268, align 8
  %269 = getelementptr inbounds i16, i16* %265, i64 9
  store i16 0, i16* %269, align 2
  %270 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 22, i32 0
  store i32 40006, i32* %270, align 16
  %271 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 22, i32 1
  %272 = call i8* @_Znwm(i64 48) #11
  %273 = bitcast %"class.std::__1::basic_string"* %271 to i8**
  store i8* %272, i8** %273, align 8
  %274 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 22, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %275 = bitcast i64* %274 to <2 x i64>*
  store <2 x i64> <i64 17, i64 -9223372036854775784>, <2 x i64>* %275, align 8
  %276 = bitcast i8* %272 to <8 x i16>*
  store <8 x i16> <i16 83, i16 104, i16 111, i16 119, i16 32, i16 116, i16 97, i16 115>, <8 x i16>* %276, align 2
  %277 = getelementptr inbounds i8, i8* %272, i64 16
  %278 = bitcast i8* %277 to <8 x i16>*
  store <8 x i16> <i16 107, i16 32, i16 109, i16 97, i16 110, i16 97, i16 103, i16 101>, <8 x i16>* %278, align 2
  %279 = getelementptr inbounds i8, i8* %272, i64 32
  %280 = bitcast i8* %279 to i16*
  store i16 114, i16* %280, align 2
  %281 = getelementptr inbounds i8, i8* %272, i64 34
  %282 = bitcast i8* %281 to i16*
  store i16 0, i16* %282, align 2
  %283 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 23, i32 0
  store i32 40011, i32* %283, align 16
  %284 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 23, i32 1
  %285 = call i8* @_Znwm(i64 48) #11
  %286 = bitcast %"class.std::__1::basic_string"* %284 to i8**
  store i8* %285, i8** %286, align 8
  %287 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 23, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> <i64 21, i64 -9223372036854775784>, <2 x i64>* %288, align 8
  %289 = bitcast i8* %285 to <8 x i16>*
  store <8 x i16> <i16 83, i16 104, i16 111, i16 119, i16 32, i16 98, i16 111, i16 111>, <8 x i16>* %289, align 2
  %290 = getelementptr inbounds i8, i8* %285, i64 16
  %291 = bitcast i8* %290 to <8 x i16>*
  store <8 x i16> <i16 107, i16 109, i16 97, i16 114, i16 107, i16 32, i16 109, i16 97>, <8 x i16>* %291, align 2
  %292 = getelementptr inbounds i8, i8* %285, i64 32
  %293 = bitcast i8* %292 to i16*
  store i16 110, i16* %293, align 2
  %294 = getelementptr inbounds i8, i8* %285, i64 34
  %295 = bitcast i8* %294 to i16*
  store i16 97, i16* %295, align 2
  %296 = getelementptr inbounds i8, i8* %285, i64 36
  %297 = bitcast i8* %296 to i16*
  store i16 103, i16* %297, align 2
  %298 = getelementptr inbounds i8, i8* %285, i64 38
  %299 = bitcast i8* %298 to i16*
  store i16 101, i16* %299, align 2
  %300 = getelementptr inbounds i8, i8* %285, i64 40
  %301 = bitcast i8* %300 to i16*
  store i16 114, i16* %301, align 2
  %302 = getelementptr inbounds i8, i8* %285, i64 42
  %303 = bitcast i8* %302 to i16*
  store i16 0, i16* %303, align 2
  %304 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 24, i32 0
  store i32 40012, i32* %304, align 16
  %305 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 24, i32 1
  %306 = call i8* @_Znwm(i64 32) #11
  %307 = bitcast %"class.std::__1::basic_string"* %305 to i8**
  store i8* %306, i8** %307, align 8
  %308 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 24, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %309 = bitcast i64* %308 to <2 x i64>*
  store <2 x i64> <i64 14, i64 -9223372036854775792>, <2 x i64>* %309, align 8
  %310 = bitcast i8* %306 to <8 x i16>*
  store <8 x i16> <i16 83, i16 104, i16 111, i16 119, i16 32, i16 100, i16 111, i16 119>, <8 x i16>* %310, align 2
  %311 = getelementptr inbounds i8, i8* %306, i64 16
  %312 = bitcast i8* %311 to i16*
  store i16 110, i16* %312, align 2
  %313 = getelementptr inbounds i8, i8* %306, i64 18
  %314 = bitcast i8* %313 to i16*
  store i16 108, i16* %314, align 2
  %315 = getelementptr inbounds i8, i8* %306, i64 20
  %316 = bitcast i8* %315 to i16*
  store i16 111, i16* %316, align 2
  %317 = getelementptr inbounds i8, i8* %306, i64 22
  %318 = bitcast i8* %317 to i16*
  store i16 97, i16* %318, align 2
  %319 = getelementptr inbounds i8, i8* %306, i64 24
  %320 = bitcast i8* %319 to i16*
  store i16 100, i16* %320, align 2
  %321 = getelementptr inbounds i8, i8* %306, i64 26
  %322 = bitcast i8* %321 to i16*
  store i16 115, i16* %322, align 2
  %323 = getelementptr inbounds i8, i8* %306, i64 28
  %324 = bitcast i8* %323 to i16*
  store i16 0, i16* %324, align 2
  %325 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 25, i32 0
  store i32 40013, i32* %325, align 16
  %326 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 25, i32 1
  %327 = call i8* @_Znwm(i64 48) #11
  %328 = bitcast %"class.std::__1::basic_string"* %326 to i8**
  store i8* %327, i8** %328, align 8
  %329 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 25, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %330 = bitcast i64* %329 to <2 x i64>*
  store <2 x i64> <i64 19, i64 -9223372036854775784>, <2 x i64>* %330, align 8
  %331 = bitcast i8* %327 to <8 x i16>*
  store <8 x i16> <i16 67, i16 108, i16 101, i16 97, i16 114, i16 32, i16 98, i16 114>, <8 x i16>* %331, align 2
  %332 = getelementptr inbounds i8, i8* %327, i64 16
  %333 = bitcast i8* %332 to <8 x i16>*
  store <8 x i16> <i16 111, i16 119, i16 115, i16 105, i16 110, i16 103, i16 32, i16 100>, <8 x i16>* %333, align 2
  %334 = getelementptr inbounds i8, i8* %327, i64 32
  %335 = bitcast i8* %334 to i16*
  store i16 97, i16* %335, align 2
  %336 = getelementptr inbounds i8, i8* %327, i64 34
  %337 = bitcast i8* %336 to i16*
  store i16 116, i16* %337, align 2
  %338 = getelementptr inbounds i8, i8* %327, i64 36
  %339 = bitcast i8* %338 to i16*
  store i16 97, i16* %339, align 2
  %340 = getelementptr inbounds i8, i8* %327, i64 38
  %341 = bitcast i8* %340 to i16*
  store i16 0, i16* %341, align 2
  %342 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 26, i32 0
  store i32 40015, i32* %342, align 16
  %343 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 26, i32 1
  %344 = call i8* @_Znwm(i64 32) #11
  %345 = bitcast %"class.std::__1::basic_string"* %343 to i8**
  store i8* %344, i8** %345, align 8
  %346 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 26, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %347 = bitcast i64* %346 to <2 x i64>*
  store <2 x i64> <i64 13, i64 -9223372036854775792>, <2 x i64>* %347, align 8
  %348 = bitcast i8* %344 to <8 x i16>*
  store <8 x i16> <i16 83, i16 104, i16 111, i16 119, i16 32, i16 115, i16 101, i16 116>, <8 x i16>* %348, align 2
  %349 = getelementptr inbounds i8, i8* %344, i64 16
  %350 = bitcast i8* %349 to i16*
  store i16 116, i16* %350, align 2
  %351 = getelementptr inbounds i8, i8* %344, i64 18
  %352 = bitcast i8* %351 to i16*
  store i16 105, i16* %352, align 2
  %353 = getelementptr inbounds i8, i8* %344, i64 20
  %354 = bitcast i8* %353 to i16*
  store i16 110, i16* %354, align 2
  %355 = getelementptr inbounds i8, i8* %344, i64 22
  %356 = bitcast i8* %355 to i16*
  store i16 103, i16* %356, align 2
  %357 = getelementptr inbounds i8, i8* %344, i64 24
  %358 = bitcast i8* %357 to i16*
  store i16 115, i16* %358, align 2
  %359 = getelementptr inbounds i8, i8* %344, i64 26
  %360 = bitcast i8* %359 to i16*
  store i16 0, i16* %360, align 2
  %361 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 27, i32 0
  store i32 40134, i32* %361, align 16
  %362 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 27, i32 1
  %363 = call i8* @_Znwm(i64 32) #11
  %364 = bitcast %"class.std::__1::basic_string"* %362 to i8**
  store i8* %363, i8** %364, align 8
  %365 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 27, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %366 = bitcast i64* %365 to <2 x i64>*
  store <2 x i64> <i64 14, i64 -9223372036854775792>, <2 x i64>* %366, align 8
  %367 = bitcast i8* %363 to <8 x i16>*
  store <8 x i16> <i16 83, i16 119, i16 105, i16 116, i16 99, i16 104, i16 32, i16 112>, <8 x i16>* %367, align 2
  %368 = getelementptr inbounds i8, i8* %363, i64 16
  %369 = bitcast i8* %368 to i16*
  store i16 114, i16* %369, align 2
  %370 = getelementptr inbounds i8, i8* %363, i64 18
  %371 = bitcast i8* %370 to i16*
  store i16 111, i16* %371, align 2
  %372 = getelementptr inbounds i8, i8* %363, i64 20
  %373 = bitcast i8* %372 to i16*
  store i16 102, i16* %373, align 2
  %374 = getelementptr inbounds i8, i8* %363, i64 22
  %375 = bitcast i8* %374 to i16*
  store i16 105, i16* %375, align 2
  %376 = getelementptr inbounds i8, i8* %363, i64 24
  %377 = bitcast i8* %376 to i16*
  store i16 108, i16* %377, align 2
  %378 = getelementptr inbounds i8, i8* %363, i64 26
  %379 = bitcast i8* %378 to i16*
  store i16 101, i16* %379, align 2
  %380 = getelementptr inbounds i8, i8* %363, i64 28
  %381 = bitcast i8* %380 to i16*
  store i16 0, i16* %381, align 2
  %382 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 28, i32 0
  store i32 40237, i32* %382, align 16
  %383 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 28, i32 1
  %384 = call i8* @_Znwm(i64 48) #11
  %385 = bitcast %"class.std::__1::basic_string"* %383 to i8**
  store i8* %384, i8** %385, align 8
  %386 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 28, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %387 = bitcast i64* %386 to <2 x i64>*
  store <2 x i64> <i64 22, i64 -9223372036854775784>, <2 x i64>* %387, align 8
  %388 = bitcast i8* %384 to <8 x i16>*
  store <8 x i16> <i16 84, i16 111, i16 103, i16 103, i16 108, i16 101, i16 32, i16 100>, <8 x i16>* %388, align 2
  %389 = getelementptr inbounds i8, i8* %384, i64 16
  %390 = bitcast i8* %389 to <8 x i16>*
  store <8 x i16> <i16 101, i16 118, i16 101, i16 108, i16 111, i16 112, i16 101, i16 114>, <8 x i16>* %390, align 2
  %391 = getelementptr inbounds i8, i8* %384, i64 32
  %392 = bitcast i8* %391 to i16*
  store i16 32, i16* %392, align 2
  %393 = getelementptr inbounds i8, i8* %384, i64 34
  %394 = bitcast i8* %393 to i16*
  store i16 116, i16* %394, align 2
  %395 = getelementptr inbounds i8, i8* %384, i64 36
  %396 = bitcast i8* %395 to i16*
  store i16 111, i16* %396, align 2
  %397 = getelementptr inbounds i8, i8* %384, i64 38
  %398 = bitcast i8* %397 to i16*
  store i16 111, i16* %398, align 2
  %399 = getelementptr inbounds i8, i8* %384, i64 40
  %400 = bitcast i8* %399 to i16*
  store i16 108, i16* %400, align 2
  %401 = getelementptr inbounds i8, i8* %384, i64 42
  %402 = bitcast i8* %401 to i16*
  store i16 115, i16* %402, align 2
  %403 = getelementptr inbounds i8, i8* %384, i64 44
  %404 = bitcast i8* %403 to i16*
  store i16 0, i16* %404, align 2
  %405 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 29, i32 0
  store i32 40022, i32* %405, align 16
  %406 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 29, i32 1
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %406, i32 7512) #10
  %407 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 30, i32 0
  store i32 52500, i32* %407, align 16
  %408 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 30, i32 1
  %409 = call i8* @_Znwm(i64 32) #11
  %410 = bitcast %"class.std::__1::basic_string"* %408 to i8**
  store i8* %409, i8** %410, align 8
  %411 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 30, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %412 = bitcast i64* %411 to <2 x i64>*
  store <2 x i64> <i64 14, i64 -9223372036854775792>, <2 x i64>* %412, align 8
  %413 = bitcast i8* %409 to <8 x i16>*
  store <8 x i16> <i16 83, i16 101, i16 97, i16 114, i16 99, i16 104, i16 32, i16 116>, <8 x i16>* %413, align 2
  %414 = getelementptr inbounds i8, i8* %409, i64 16
  %415 = bitcast i8* %414 to i16*
  store i16 97, i16* %415, align 2
  %416 = getelementptr inbounds i8, i8* %409, i64 18
  %417 = bitcast i8* %416 to i16*
  store i16 98, i16* %417, align 2
  %418 = getelementptr inbounds i8, i8* %409, i64 20
  %419 = bitcast i8* %418 to i16*
  store i16 115, i16* %419, align 2
  %420 = getelementptr inbounds i8, i8* %409, i64 22
  %421 = bitcast i8* %420 to i16*
  store i16 46, i16* %421, align 2
  %422 = getelementptr inbounds i8, i8* %409, i64 24
  %423 = bitcast i8* %422 to i16*
  store i16 46, i16* %423, align 2
  %424 = getelementptr inbounds i8, i8* %409, i64 26
  %425 = bitcast i8* %424 to i16*
  store i16 46, i16* %425, align 2
  %426 = getelementptr inbounds i8, i8* %409, i64 28
  %427 = bitcast i8* %426 to i16*
  store i16 0, i16* %427, align 2
  %428 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 31, i32 0
  store i32 34016, i32* %428, align 16
  %429 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 31, i32 1
  %430 = bitcast %"class.std::__1::basic_string"* %429 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %430, i64 0, i32 1, i32 1
  store i8 8, i8* %431, align 1
  %432 = bitcast %"class.std::__1::basic_string"* %429 to <8 x i16>*
  store <8 x i16> <i16 78, i16 101, i16 120, i16 116, i16 32, i16 116, i16 97, i16 98>, <8 x i16>* %432, align 8
  %433 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 31, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %434 = bitcast i64* %433 to i16*
  store i16 0, i16* %434, align 8
  %435 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 32, i32 0
  store i32 34017, i32* %435, align 16
  %436 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 32, i32 1
  %437 = call i8* @_Znwm(i64 32) #11
  %438 = bitcast %"class.std::__1::basic_string"* %436 to i8**
  store i8* %437, i8** %438, align 8
  %439 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 32, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %440 = bitcast i64* %439 to <2 x i64>*
  store <2 x i64> <i64 12, i64 -9223372036854775792>, <2 x i64>* %440, align 8
  %441 = bitcast i8* %437 to <8 x i16>*
  store <8 x i16> <i16 80, i16 114, i16 101, i16 118, i16 105, i16 111, i16 117, i16 115>, <8 x i16>* %441, align 2
  %442 = getelementptr inbounds i8, i8* %437, i64 16
  %443 = bitcast i8* %442 to i16*
  store i16 32, i16* %443, align 2
  %444 = getelementptr inbounds i8, i8* %437, i64 18
  %445 = bitcast i8* %444 to i16*
  store i16 116, i16* %445, align 2
  %446 = getelementptr inbounds i8, i8* %437, i64 20
  %447 = bitcast i8* %446 to i16*
  store i16 97, i16* %447, align 2
  %448 = getelementptr inbounds i8, i8* %437, i64 22
  %449 = bitcast i8* %448 to i16*
  store i16 98, i16* %449, align 2
  %450 = getelementptr inbounds i8, i8* %437, i64 24
  %451 = bitcast i8* %450 to i16*
  store i16 0, i16* %451, align 2
  %452 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 33, i32 0
  store i32 34032, i32* %452, align 16
  %453 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 33, i32 1
  %454 = call i8* @_Znwm(i64 48) #11
  %455 = bitcast %"class.std::__1::basic_string"* %453 to i8**
  store i8* %454, i8** %455, align 8
  %456 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 33, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %457 = bitcast i64* %456 to <2 x i64>*
  store <2 x i64> <i64 16, i64 -9223372036854775784>, <2 x i64>* %457, align 8
  %458 = bitcast i8* %454 to <8 x i16>*
  store <8 x i16> <i16 77, i16 111, i16 118, i16 101, i16 32, i16 116, i16 97, i16 98>, <8 x i16>* %458, align 2
  %459 = getelementptr inbounds i8, i8* %454, i64 16
  %460 = bitcast i8* %459 to <8 x i16>*
  store <8 x i16> <i16 32, i16 102, i16 111, i16 114, i16 119, i16 97, i16 114, i16 100>, <8 x i16>* %460, align 2
  %461 = getelementptr inbounds i8, i8* %454, i64 32
  %462 = bitcast i8* %461 to i16*
  store i16 0, i16* %462, align 2
  %463 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 34, i32 0
  store i32 34033, i32* %463, align 16
  %464 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 34, i32 1
  %465 = call i8* @_Znwm(i64 48) #11
  %466 = bitcast %"class.std::__1::basic_string"* %464 to i8**
  store i8* %465, i8** %466, align 8
  %467 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 34, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %468 = bitcast i64* %467 to <2 x i64>*
  store <2 x i64> <i64 17, i64 -9223372036854775784>, <2 x i64>* %468, align 8
  %469 = bitcast i8* %465 to <8 x i16>*
  store <8 x i16> <i16 77, i16 111, i16 118, i16 101, i16 32, i16 116, i16 97, i16 98>, <8 x i16>* %469, align 2
  %470 = getelementptr inbounds i8, i8* %465, i64 16
  %471 = bitcast i8* %470 to <8 x i16>*
  store <8 x i16> <i16 32, i16 98, i16 97, i16 99, i16 107, i16 119, i16 97, i16 114>, <8 x i16>* %471, align 2
  %472 = getelementptr inbounds i8, i8* %465, i64 32
  %473 = bitcast i8* %472 to i16*
  store i16 100, i16* %473, align 2
  %474 = getelementptr inbounds i8, i8* %465, i64 34
  %475 = bitcast i8* %474 to i16*
  store i16 0, i16* %475, align 2
  %476 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 35, i32 0
  store i32 35021, i32* %476, align 16
  %477 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 35, i32 1
  %478 = call i8* @_Znwm(i64 32) #11
  %479 = bitcast %"class.std::__1::basic_string"* %477 to i8**
  store i8* %478, i8** %479, align 8
  %480 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 35, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %481 = bitcast i64* %480 to <2 x i64>*
  store <2 x i64> <i64 14, i64 -9223372036854775792>, <2 x i64>* %481, align 8
  %482 = bitcast i8* %478 to <8 x i16>*
  store <8 x i16> <i16 67, i16 114, i16 101, i16 97, i16 116, i16 101, i16 32, i16 81>, <8 x i16>* %482, align 2
  %483 = getelementptr inbounds i8, i8* %478, i64 16
  %484 = bitcast i8* %483 to i16*
  store i16 82, i16* %484, align 2
  %485 = getelementptr inbounds i8, i8* %478, i64 18
  %486 = bitcast i8* %485 to i16*
  store i16 32, i16* %486, align 2
  %487 = getelementptr inbounds i8, i8* %478, i64 20
  %488 = bitcast i8* %487 to i16*
  store i16 99, i16* %488, align 2
  %489 = getelementptr inbounds i8, i8* %478, i64 22
  %490 = bitcast i8* %489 to i16*
  store i16 111, i16* %490, align 2
  %491 = getelementptr inbounds i8, i8* %478, i64 24
  %492 = bitcast i8* %491 to i16*
  store i16 100, i16* %492, align 2
  %493 = getelementptr inbounds i8, i8* %478, i64 26
  %494 = bitcast i8* %493 to i16*
  store i16 101, i16* %494, align 2
  %495 = getelementptr inbounds i8, i8* %478, i64 28
  %496 = bitcast i8* %495 to i16*
  store i16 0, i16* %496, align 2
  %497 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %498 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %499 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %499, i8 0, i64 24, i1 false) #10
  %500 = bitcast %"class.commander::FuzzyFinder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %500) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %500, i8 -86, i64 120, i1 false)
  call void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"* nonnull %7, %"class.std::__1::basic_string"* dereferenceable(24) %2) #10
  %501 = bitcast %"class.std::__1::vector.14"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %501) #10
  %502 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 0
  %503 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %501, i8 0, i64 24, i1 false) #10
  %504 = getelementptr inbounds [36 x %struct.anon.27], [36 x %struct.anon.27]* %6, i64 0, i64 36
  %505 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %506 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %507 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %508 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %509 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %510 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %511 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %510, i64 0, i32 1, i32 1
  %512 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  %513 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %514 = bitcast %"class.std::__1::unique_ptr"* %11 to i8**
  %515 = bitcast %"class.ui::Accelerator"* %12 to i8*
  %516 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %517 = bitcast %"class.base::OnceCallback"* %14 to i8*
  %518 = ptrtoint %class.Browser* %3 to i64
  %519 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %1, i64 0, i32 1, i32 0, i32 0
  %520 = getelementptr inbounds %"class.commander::SimpleCommandSource", %"class.commander::SimpleCommandSource"* %1, i64 0, i32 1, i32 0, i32 1
  %521 = bitcast %"class.base::OnceCallback"* %14 to i8**
  %522 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %5 to i8*
  %523 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %5, i64 0, i32 0
  %524 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %5, i64 0, i32 1
  %525 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  %526 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  %527 = bitcast %"class.std::__1::unique_ptr"** %497 to i64*
  %528 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %537

529:                                              ; preds = %792
  %530 = load %"class.gfx::Range"*, %"class.gfx::Range"** %502, align 8
  %531 = icmp eq %"class.gfx::Range"* %530, null
  br i1 %531, label %536, label %532

532:                                              ; preds = %529
  %533 = ptrtoint %"class.gfx::Range"* %530 to i64
  %534 = bitcast %"class.gfx::Range"** %503 to i64*
  store i64 %533, i64* %534, align 8
  %535 = bitcast %"class.gfx::Range"* %530 to i8*
  call void @_ZdlPv(i8* %535) #11
  br label %536

536:                                              ; preds = %529, %532
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %501) #10
  call void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %500) #10
  br label %795

537:                                              ; preds = %4, %792
  %538 = phi %struct.anon.27* [ %23, %4 ], [ %793, %792 ]
  %539 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %538, i64 0, i32 0
  %540 = load i32, i32* %539, align 8
  %541 = call zeroext i1 @_ZN6chrome16IsCommandEnabledEP7Browseri(%class.Browser* %3, i32 %540) #10
  br i1 %541, label %542, label %792

542:                                              ; preds = %537
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %505) #10
  %543 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %538, i64 0, i32 1
  %544 = bitcast %"class.std::__1::basic_string"* %543 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %545 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %544, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %528, i8 -86, i64 24, i1 false)
  %546 = load i8, i8* %545, align 1
  %547 = icmp slt i8 %546, 0
  br i1 %547, label %550, label %548

548:                                              ; preds = %542
  %549 = bitcast %"class.std::__1::basic_string"* %543 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %505, i8* align 8 %549, i64 24, i1 false) #10
  br label %720

550:                                              ; preds = %542
  %551 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load i16*, i16** %551, align 8
  %553 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %538, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %554 = load i64, i64* %553, align 8
  %555 = icmp ult i64 %554, 11
  br i1 %555, label %556, label %558

556:                                              ; preds = %550
  %557 = trunc i64 %554 to i8
  store i8 %557, i8* %511, align 1
  br label %572

558:                                              ; preds = %550
  %559 = icmp ugt i64 %554, 9223372036854775791
  br i1 %559, label %560, label %562

560:                                              ; preds = %558
  %561 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %561) #12
  unreachable

562:                                              ; preds = %558
  %563 = add nuw nsw i64 %554, 8
  %564 = and i64 %563, -8
  %565 = icmp slt i64 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %562
  call void @abort() #12
  unreachable

567:                                              ; preds = %562
  %568 = shl i64 %564, 1
  %569 = call i8* @_Znwm(i64 %568) #11
  %570 = bitcast i8* %569 to i16*
  store i8* %569, i8** %508, align 8
  %571 = or i64 %564, -9223372036854775808
  store i64 %571, i64* %507, align 8
  store i64 %554, i64* %506, align 8
  br label %572

572:                                              ; preds = %567, %556
  %573 = phi i16* [ %509, %556 ], [ %570, %567 ]
  %574 = add nuw nsw i64 %554, 1
  %575 = add i64 %554, 1
  %576 = icmp ult i64 %575, 16
  br i1 %576, label %667, label %577

577:                                              ; preds = %572
  %578 = getelementptr i16, i16* %573, i64 1
  %579 = getelementptr i16, i16* %578, i64 %554
  %580 = getelementptr i16, i16* %552, i64 1
  %581 = getelementptr i16, i16* %580, i64 %554
  %582 = icmp ult i16* %573, %581
  %583 = icmp ult i16* %552, %579
  %584 = and i1 %582, %583
  br i1 %584, label %667, label %585

585:                                              ; preds = %577
  %586 = and i64 %575, -16
  %587 = sub i64 %574, %586
  %588 = getelementptr i16, i16* %552, i64 %586
  %589 = getelementptr i16, i16* %573, i64 %586
  %590 = add i64 %586, -16
  %591 = lshr exact i64 %590, 4
  %592 = add nuw nsw i64 %591, 1
  %593 = and i64 %592, 3
  %594 = icmp ult i64 %590, 48
  br i1 %594, label %646, label %595

595:                                              ; preds = %585
  %596 = sub nsw i64 %592, %593
  br label %597

597:                                              ; preds = %597, %595
  %598 = phi i64 [ 0, %595 ], [ %643, %597 ]
  %599 = phi i64 [ %596, %595 ], [ %644, %597 ]
  %600 = getelementptr i16, i16* %552, i64 %598
  %601 = getelementptr i16, i16* %573, i64 %598
  %602 = bitcast i16* %600 to <8 x i16>*
  %603 = load <8 x i16>, <8 x i16>* %602, align 2, !alias.scope !5
  %604 = getelementptr i16, i16* %600, i64 8
  %605 = bitcast i16* %604 to <8 x i16>*
  %606 = load <8 x i16>, <8 x i16>* %605, align 2, !alias.scope !5
  %607 = bitcast i16* %601 to <8 x i16>*
  store <8 x i16> %603, <8 x i16>* %607, align 2, !alias.scope !8, !noalias !5
  %608 = getelementptr i16, i16* %601, i64 8
  %609 = bitcast i16* %608 to <8 x i16>*
  store <8 x i16> %606, <8 x i16>* %609, align 2, !alias.scope !8, !noalias !5
  %610 = or i64 %598, 16
  %611 = getelementptr i16, i16* %552, i64 %610
  %612 = getelementptr i16, i16* %573, i64 %610
  %613 = bitcast i16* %611 to <8 x i16>*
  %614 = load <8 x i16>, <8 x i16>* %613, align 2, !alias.scope !5
  %615 = getelementptr i16, i16* %611, i64 8
  %616 = bitcast i16* %615 to <8 x i16>*
  %617 = load <8 x i16>, <8 x i16>* %616, align 2, !alias.scope !5
  %618 = bitcast i16* %612 to <8 x i16>*
  store <8 x i16> %614, <8 x i16>* %618, align 2, !alias.scope !8, !noalias !5
  %619 = getelementptr i16, i16* %612, i64 8
  %620 = bitcast i16* %619 to <8 x i16>*
  store <8 x i16> %617, <8 x i16>* %620, align 2, !alias.scope !8, !noalias !5
  %621 = or i64 %598, 32
  %622 = getelementptr i16, i16* %552, i64 %621
  %623 = getelementptr i16, i16* %573, i64 %621
  %624 = bitcast i16* %622 to <8 x i16>*
  %625 = load <8 x i16>, <8 x i16>* %624, align 2, !alias.scope !5
  %626 = getelementptr i16, i16* %622, i64 8
  %627 = bitcast i16* %626 to <8 x i16>*
  %628 = load <8 x i16>, <8 x i16>* %627, align 2, !alias.scope !5
  %629 = bitcast i16* %623 to <8 x i16>*
  store <8 x i16> %625, <8 x i16>* %629, align 2, !alias.scope !8, !noalias !5
  %630 = getelementptr i16, i16* %623, i64 8
  %631 = bitcast i16* %630 to <8 x i16>*
  store <8 x i16> %628, <8 x i16>* %631, align 2, !alias.scope !8, !noalias !5
  %632 = or i64 %598, 48
  %633 = getelementptr i16, i16* %552, i64 %632
  %634 = getelementptr i16, i16* %573, i64 %632
  %635 = bitcast i16* %633 to <8 x i16>*
  %636 = load <8 x i16>, <8 x i16>* %635, align 2, !alias.scope !5
  %637 = getelementptr i16, i16* %633, i64 8
  %638 = bitcast i16* %637 to <8 x i16>*
  %639 = load <8 x i16>, <8 x i16>* %638, align 2, !alias.scope !5
  %640 = bitcast i16* %634 to <8 x i16>*
  store <8 x i16> %636, <8 x i16>* %640, align 2, !alias.scope !8, !noalias !5
  %641 = getelementptr i16, i16* %634, i64 8
  %642 = bitcast i16* %641 to <8 x i16>*
  store <8 x i16> %639, <8 x i16>* %642, align 2, !alias.scope !8, !noalias !5
  %643 = add i64 %598, 64
  %644 = add i64 %599, -4
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %597, !llvm.loop !10

646:                                              ; preds = %597, %585
  %647 = phi i64 [ 0, %585 ], [ %643, %597 ]
  %648 = icmp eq i64 %593, 0
  br i1 %648, label %665, label %649

649:                                              ; preds = %646, %649
  %650 = phi i64 [ %662, %649 ], [ %647, %646 ]
  %651 = phi i64 [ %663, %649 ], [ %593, %646 ]
  %652 = getelementptr i16, i16* %552, i64 %650
  %653 = getelementptr i16, i16* %573, i64 %650
  %654 = bitcast i16* %652 to <8 x i16>*
  %655 = load <8 x i16>, <8 x i16>* %654, align 2, !alias.scope !5
  %656 = getelementptr i16, i16* %652, i64 8
  %657 = bitcast i16* %656 to <8 x i16>*
  %658 = load <8 x i16>, <8 x i16>* %657, align 2, !alias.scope !5
  %659 = bitcast i16* %653 to <8 x i16>*
  store <8 x i16> %655, <8 x i16>* %659, align 2, !alias.scope !8, !noalias !5
  %660 = getelementptr i16, i16* %653, i64 8
  %661 = bitcast i16* %660 to <8 x i16>*
  store <8 x i16> %658, <8 x i16>* %661, align 2, !alias.scope !8, !noalias !5
  %662 = add i64 %650, 16
  %663 = add i64 %651, -1
  %664 = icmp eq i64 %663, 0
  br i1 %664, label %665, label %649, !llvm.loop !12

665:                                              ; preds = %649, %646
  %666 = icmp eq i64 %575, %586
  br i1 %666, label %720, label %667

667:                                              ; preds = %665, %577, %572
  %668 = phi i64 [ %574, %577 ], [ %574, %572 ], [ %587, %665 ]
  %669 = phi i16* [ %552, %577 ], [ %552, %572 ], [ %588, %665 ]
  %670 = phi i16* [ %573, %577 ], [ %573, %572 ], [ %589, %665 ]
  %671 = add i64 %668, -1
  %672 = and i64 %668, 7
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %685, label %674

674:                                              ; preds = %667, %674
  %675 = phi i64 [ %680, %674 ], [ %668, %667 ]
  %676 = phi i16* [ %682, %674 ], [ %669, %667 ]
  %677 = phi i16* [ %681, %674 ], [ %670, %667 ]
  %678 = phi i64 [ %683, %674 ], [ %672, %667 ]
  %679 = load i16, i16* %676, align 2
  store i16 %679, i16* %677, align 2
  %680 = add i64 %675, -1
  %681 = getelementptr inbounds i16, i16* %677, i64 1
  %682 = getelementptr inbounds i16, i16* %676, i64 1
  %683 = add i64 %678, -1
  %684 = icmp eq i64 %683, 0
  br i1 %684, label %685, label %674, !llvm.loop !14

685:                                              ; preds = %674, %667
  %686 = phi i64 [ %668, %667 ], [ %680, %674 ]
  %687 = phi i16* [ %669, %667 ], [ %682, %674 ]
  %688 = phi i16* [ %670, %667 ], [ %681, %674 ]
  %689 = icmp ult i64 %671, 7
  br i1 %689, label %720, label %690

690:                                              ; preds = %685, %690
  %691 = phi i64 [ %716, %690 ], [ %686, %685 ]
  %692 = phi i16* [ %718, %690 ], [ %687, %685 ]
  %693 = phi i16* [ %717, %690 ], [ %688, %685 ]
  %694 = load i16, i16* %692, align 2
  store i16 %694, i16* %693, align 2
  %695 = getelementptr inbounds i16, i16* %693, i64 1
  %696 = getelementptr inbounds i16, i16* %692, i64 1
  %697 = load i16, i16* %696, align 2
  store i16 %697, i16* %695, align 2
  %698 = getelementptr inbounds i16, i16* %693, i64 2
  %699 = getelementptr inbounds i16, i16* %692, i64 2
  %700 = load i16, i16* %699, align 2
  store i16 %700, i16* %698, align 2
  %701 = getelementptr inbounds i16, i16* %693, i64 3
  %702 = getelementptr inbounds i16, i16* %692, i64 3
  %703 = load i16, i16* %702, align 2
  store i16 %703, i16* %701, align 2
  %704 = getelementptr inbounds i16, i16* %693, i64 4
  %705 = getelementptr inbounds i16, i16* %692, i64 4
  %706 = load i16, i16* %705, align 2
  store i16 %706, i16* %704, align 2
  %707 = getelementptr inbounds i16, i16* %693, i64 5
  %708 = getelementptr inbounds i16, i16* %692, i64 5
  %709 = load i16, i16* %708, align 2
  store i16 %709, i16* %707, align 2
  %710 = getelementptr inbounds i16, i16* %693, i64 6
  %711 = getelementptr inbounds i16, i16* %692, i64 6
  %712 = load i16, i16* %711, align 2
  store i16 %712, i16* %710, align 2
  %713 = getelementptr inbounds i16, i16* %693, i64 7
  %714 = getelementptr inbounds i16, i16* %692, i64 7
  %715 = load i16, i16* %714, align 2
  store i16 %715, i16* %713, align 2
  %716 = add i64 %691, -8
  %717 = getelementptr inbounds i16, i16* %693, i64 8
  %718 = getelementptr inbounds i16, i16* %692, i64 8
  %719 = icmp eq i64 %716, 0
  br i1 %719, label %720, label %690, !llvm.loop !15

720:                                              ; preds = %685, %690, %665, %548
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #10
  store i8 38, i8* %10, align 1
  %721 = call i64 @_ZN4base5EraseIDsNSt3__111char_traitsIDsEENS1_9allocatorIDsEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i8* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #10
  %722 = call double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.14"* nonnull %8) #10
  %723 = fcmp oeq double %722, 0.000000e+00
  br i1 %723, label %786, label %724

724:                                              ; preds = %720
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %512) #10
  store %"struct.commander::CommandItem"* inttoptr (i64 -6148914691236517206 to %"struct.commander::CommandItem"*), %"struct.commander::CommandItem"** %513, align 8
  %725 = call i8* @_Znwm(i64 136) #11
  %726 = bitcast i8* %725 to %"struct.commander::CommandItem"*
  call void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"* nonnull %726, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, double %722, %"class.std::__1::vector.14"* nonnull dereferenceable(24) %8) #10
  store i8* %725, i8** %514, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %515) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %515, i8 -86, i64 32, i1 false)
  call void @_ZN2ui11AcceleratorC1Ev(%"class.ui::Accelerator"* nonnull %12) #10
  %727 = call %"class.ui::AcceleratorProvider"* @_ZN6chrome29AcceleratorProviderForBrowserEP7Browser(%class.Browser* %3) #10
  %728 = load i32, i32* %539, align 8
  %729 = bitcast %"class.ui::AcceleratorProvider"* %727 to i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)***
  %730 = load i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)**, i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)*** %729, align 8
  %731 = load i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)*, i1 (%"class.ui::AcceleratorProvider"*, i32, %"class.ui::Accelerator"*)** %730, align 8
  %732 = call zeroext i1 %731(%"class.ui::AcceleratorProvider"* %727, i32 %728, %"class.ui::Accelerator"* nonnull %12) #10
  br i1 %732, label %733, label %745

733:                                              ; preds = %724
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %516) #10
  call void @_ZNK2ui11Accelerator15GetShortcutTextEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.ui::Accelerator"* nonnull %12) #10
  %734 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %513, align 8
  %735 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %734, i64 0, i32 3
  %736 = bitcast %"class.std::__1::basic_string"* %735 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %737 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %736, i64 0, i32 1, i32 1
  %738 = load i8, i8* %737, align 1
  %739 = icmp slt i8 %738, 0
  br i1 %739, label %740, label %743

740:                                              ; preds = %733
  %741 = bitcast %"class.std::__1::basic_string"* %735 to i8**
  %742 = load i8*, i8** %741, align 8
  call void @_ZdlPv(i8* %742) #11
  br label %743

743:                                              ; preds = %740, %733
  %744 = bitcast %"class.std::__1::basic_string"* %735 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %744, i8* nonnull align 8 %516, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %516) #10
  br label %745

745:                                              ; preds = %743, %724
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %517) #10
  %746 = call i8* @_Znwm(i64 80) #11, !noalias !16
  %747 = bitcast i8* %746 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %747, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS3_EENS0_17UnretainedWrapperIS4_EEiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EEiEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE) #10, !noalias !16
  %748 = getelementptr inbounds i8, i8* %746, i64 32
  %749 = bitcast i8* %748 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.commander::SimpleCommandSource"*, %class.Browser*, i32)* @_ZN9commander19SimpleCommandSource14ExecuteCommandEP7Browseri to i64), i64 0>, <2 x i64>* %749, align 8, !noalias !16
  %750 = getelementptr inbounds i8, i8* %746, i64 48
  %751 = bitcast i8* %750 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %751, %"class.base::internal::WeakReference"* dereferenceable(8) %519) #10, !noalias !16
  %752 = getelementptr inbounds i8, i8* %746, i64 56
  %753 = bitcast i8* %752 to i64*
  %754 = load i64, i64* %520, align 8, !noalias !16
  store i64 %754, i64* %753, align 8, !noalias !16
  %755 = getelementptr inbounds i8, i8* %746, i64 64
  %756 = bitcast i8* %755 to i64*
  store i64 %518, i64* %756, align 8, !noalias !16
  %757 = getelementptr inbounds i8, i8* %746, i64 72
  %758 = bitcast i8* %757 to i32*
  %759 = load i32, i32* %539, align 4, !noalias !16
  store i32 %759, i32* %758, align 4, !noalias !16
  store i8* %746, i8** %521, align 8, !alias.scope !16
  %760 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %513, align 8
  %761 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %760, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %522) #10
  store %"class.absl::variant"* %761, %"class.absl::variant"** %523, align 8
  store %"class.base::OnceCallback"* %14, %"class.base::OnceCallback"** %524, align 8
  %762 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %760, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %763 = load i64, i64* %762, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* nonnull dereferenceable(16) %5, i64 %763) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %522) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %525) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %517) #10
  %764 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %497, align 8
  %765 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %498, align 8
  %766 = icmp ult %"class.std::__1::unique_ptr"* %764, %765
  br i1 %766, label %767, label %772

767:                                              ; preds = %745
  %768 = load i64, i64* %526, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %513, align 8
  %769 = bitcast %"class.std::__1::unique_ptr"* %764 to i64*
  store i64 %768, i64* %769, align 8
  %770 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %764, i64 1
  %771 = ptrtoint %"class.std::__1::unique_ptr"* %770 to i64
  store i64 %771, i64* %527, align 8
  br label %773

772:                                              ; preds = %745
  call void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11) #10
  br label %773

773:                                              ; preds = %767, %772
  call void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %515) #10
  %774 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %513, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %513, align 8
  %775 = icmp eq %"struct.commander::CommandItem"* %774, null
  br i1 %775, label %781, label %776

776:                                              ; preds = %773
  %777 = bitcast %"struct.commander::CommandItem"* %774 to void (%"struct.commander::CommandItem"*)***
  %778 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %777, align 8
  %779 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %778, i64 1
  %780 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %779, align 8
  call void %780(%"struct.commander::CommandItem"* nonnull %774) #10
  br label %781

781:                                              ; preds = %773, %776
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %512) #10
  %782 = load i8, i8* %511, align 1
  %783 = icmp slt i8 %782, 0
  br i1 %783, label %784, label %791

784:                                              ; preds = %781
  %785 = load i8*, i8** %508, align 8
  call void @_ZdlPv(i8* %785) #11
  br label %791

786:                                              ; preds = %720
  %787 = load i8, i8* %511, align 1
  %788 = icmp slt i8 %787, 0
  br i1 %788, label %789, label %791

789:                                              ; preds = %786
  %790 = load i8*, i8** %508, align 8
  call void @_ZdlPv(i8* %790) #11
  br label %791

791:                                              ; preds = %789, %786, %784, %781
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %505) #10
  br label %792

792:                                              ; preds = %791, %537
  %793 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %538, i64 1
  %794 = icmp eq %struct.anon.27* %793, %504
  br i1 %794, label %529, label %537

795:                                              ; preds = %806, %536
  %796 = phi %struct.anon.27* [ %504, %536 ], [ %797, %806 ]
  %797 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %796, i64 -1
  %798 = getelementptr inbounds %struct.anon.27, %struct.anon.27* %796, i64 -1, i32 1
  %799 = bitcast %"class.std::__1::basic_string"* %798 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %800 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %799, i64 0, i32 1, i32 1
  %801 = load i8, i8* %800, align 1
  %802 = icmp slt i8 %801, 0
  br i1 %802, label %803, label %806

803:                                              ; preds = %795
  %804 = bitcast %"class.std::__1::basic_string"* %798 to i8**
  %805 = load i8*, i8** %804, align 8
  call void @_ZdlPv(i8* %805) #11
  br label %806

806:                                              ; preds = %795, %803
  %807 = icmp eq %struct.anon.27* %797, %23
  br i1 %807, label %808, label %795

808:                                              ; preds = %806
  call void @llvm.lifetime.end.p0i8(i64 1152, i8* nonnull %15) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

declare void @_ZN9commander11FuzzyFinderC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

declare zeroext i1 @_ZN6chrome16IsCommandEnabledEP7Browseri(%class.Browser*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base5EraseIDsNSt3__111char_traitsIDsEENS1_9allocatorIDsEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_(%"class.std::__1::basic_string"* dereferenceable(24), i8* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i16* %8, i16* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = getelementptr inbounds i16, i16* %13, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = load i8, i8* %1, align 1
  %19 = sext i8 %18 to i32
  br label %20

20:                                               ; preds = %25, %17
  %21 = phi i16* [ %13, %17 ], [ %26, %25 ]
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp eq i32 %23, %19
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds i16, i16* %21, i64 1
  %27 = icmp eq i16* %26, %15
  br i1 %27, label %28, label %20

28:                                               ; preds = %25
  %29 = ptrtoint i16* %15 to i64
  br label %92

30:                                               ; preds = %20, %2
  %31 = phi i16* [ %13, %2 ], [ %21, %20 ]
  %32 = ptrtoint i16* %31 to i64
  %33 = icmp eq i16* %31, %15
  br i1 %33, label %92, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds i16, i16* %31, i64 1
  %36 = icmp eq i16* %35, %15
  br i1 %36, label %92, label %37

37:                                               ; preds = %34
  %38 = add i64 %14, -2
  %39 = getelementptr i16, i16* %13, i64 %38
  %40 = ptrtoint i16* %39 to i64
  %41 = sub i64 %40, %32
  %42 = lshr i64 %41, 1
  %43 = add nuw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %37, %59
  %47 = phi i16* [ %61, %59 ], [ %35, %37 ]
  %48 = phi i64 [ %60, %59 ], [ %32, %37 ]
  %49 = phi i64 [ %62, %59 ], [ %44, %37 ]
  %50 = load i16, i16* %47, align 2
  %51 = zext i16 %50 to i32
  %52 = load i8, i8* %1, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = inttoptr i64 %48 to i16*
  store i16 %50, i16* %56, align 2
  %57 = getelementptr inbounds i16, i16* %56, i64 1
  %58 = ptrtoint i16* %57 to i64
  br label %59

59:                                               ; preds = %55, %46
  %60 = phi i64 [ %48, %46 ], [ %58, %55 ]
  %61 = getelementptr inbounds i16, i16* %47, i64 1
  %62 = add i64 %49, -1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %46, !llvm.loop !21

64:                                               ; preds = %59, %37
  %65 = phi i64 [ undef, %37 ], [ %60, %59 ]
  %66 = phi i16* [ %35, %37 ], [ %61, %59 ]
  %67 = phi i64 [ %32, %37 ], [ %60, %59 ]
  %68 = icmp ult i64 %41, 6
  br i1 %68, label %89, label %69

69:                                               ; preds = %64, %488
  %70 = phi i16* [ %490, %488 ], [ %66, %64 ]
  %71 = phi i64 [ %489, %488 ], [ %67, %64 ]
  %72 = load i16, i16* %70, align 2
  %73 = zext i16 %72 to i32
  %74 = load i8, i8* %1, align 1
  %75 = sext i8 %74 to i32
  %76 = icmp eq i32 %73, %75
  br i1 %76, label %81, label %77

77:                                               ; preds = %69
  %78 = inttoptr i64 %71 to i16*
  store i16 %72, i16* %78, align 2
  %79 = getelementptr inbounds i16, i16* %78, i64 1
  %80 = ptrtoint i16* %79 to i64
  br label %81

81:                                               ; preds = %77, %69
  %82 = phi i64 [ %71, %69 ], [ %80, %77 ]
  %83 = getelementptr inbounds i16, i16* %70, i64 1
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = load i8, i8* %1, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp eq i32 %85, %87
  br i1 %88, label %464, label %460

89:                                               ; preds = %488, %64
  %90 = phi i64 [ %65, %64 ], [ %489, %488 ]
  %91 = load i8, i8* %4, align 1
  br label %92

92:                                               ; preds = %89, %28, %30, %34
  %93 = phi i8 [ %5, %30 ], [ %5, %28 ], [ %5, %34 ], [ %91, %89 ]
  %94 = phi i64 [ %32, %30 ], [ %29, %28 ], [ %32, %34 ], [ %90, %89 ]
  %95 = icmp slt i8 %93, 0
  %96 = load i16*, i16** %7, align 8
  %97 = load i64, i64* %9, align 8
  %98 = getelementptr inbounds i16, i16* %96, i64 %97
  %99 = ptrtoint i16* %96 to i64
  %100 = zext i8 %93 to i64
  %101 = getelementptr inbounds i16, i16* %11, i64 %100
  %102 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %103 = select i1 %95, i16* %98, i16* %101
  %104 = select i1 %95, i64 %99, i64 %102
  %105 = select i1 %95, i64 %97, i64 %100
  %106 = ptrtoint i16* %103 to i64
  %107 = sub i64 %106, %94
  %108 = ashr exact i64 %107, 1
  %109 = ptrtoint i16* %103 to i64
  %110 = sub i64 %94, %104
  %111 = sub i64 %109, %94
  %112 = ashr exact i64 %110, 1
  %113 = ashr exact i64 %111, 1
  %114 = icmp ult i64 %105, %112
  br i1 %114, label %115, label %117

115:                                              ; preds = %92
  %116 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %116) #12
  unreachable

117:                                              ; preds = %92
  switch i64 %113, label %125 [
    i64 -1, label %118
    i64 0, label %459
  ]

118:                                              ; preds = %117
  br i1 %95, label %119, label %122

119:                                              ; preds = %118
  %120 = load i16*, i16** %7, align 8
  %121 = getelementptr inbounds i16, i16* %120, i64 %112
  store i16 0, i16* %121, align 2
  store i64 %112, i64* %9, align 8
  br label %459

122:                                              ; preds = %118
  %123 = getelementptr inbounds i16, i16* %11, i64 %112
  store i16 0, i16* %123, align 2
  %124 = trunc i64 %112 to i8
  store i8 %124, i8* %4, align 1
  br label %459

125:                                              ; preds = %117
  %126 = load i64, i64* %9, align 8
  %127 = load i16*, i16** %7, align 8
  %128 = zext i8 %93 to i64
  %129 = select i1 %95, i64 %126, i64 %128
  %130 = select i1 %95, i16* %127, i16* %11
  %131 = sub i64 %129, %112
  %132 = icmp ult i64 %131, %113
  %133 = select i1 %132, i64 %131, i64 %113
  %134 = sub i64 %131, %133
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %450, label %136

136:                                              ; preds = %125
  %137 = getelementptr inbounds i16, i16* %130, i64 %112
  %138 = getelementptr inbounds i16, i16* %137, i64 %133
  %139 = icmp sgt i64 %133, 0
  br i1 %139, label %140, label %284

140:                                              ; preds = %136
  %141 = icmp ult i64 %134, 16
  br i1 %141, label %231, label %142

142:                                              ; preds = %140
  %143 = sub i64 %129, %133
  %144 = getelementptr i16, i16* %130, i64 %143
  %145 = getelementptr i16, i16* %130, i64 %129
  %146 = icmp ult i16* %137, %145
  %147 = icmp ult i16* %138, %144
  %148 = and i1 %146, %147
  br i1 %148, label %231, label %149

149:                                              ; preds = %142
  %150 = and i64 %134, -16
  %151 = sub i64 %134, %150
  %152 = getelementptr i16, i16* %138, i64 %150
  %153 = getelementptr i16, i16* %137, i64 %150
  %154 = add i64 %150, -16
  %155 = lshr exact i64 %154, 4
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 3
  %158 = icmp ult i64 %154, 48
  br i1 %158, label %210, label %159

159:                                              ; preds = %149
  %160 = sub nsw i64 %156, %157
  br label %161

161:                                              ; preds = %161, %159
  %162 = phi i64 [ 0, %159 ], [ %207, %161 ]
  %163 = phi i64 [ %160, %159 ], [ %208, %161 ]
  %164 = getelementptr i16, i16* %138, i64 %162
  %165 = getelementptr i16, i16* %137, i64 %162
  %166 = bitcast i16* %164 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !22
  %168 = getelementptr i16, i16* %164, i64 8
  %169 = bitcast i16* %168 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !22
  %171 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %171, align 2, !alias.scope !25, !noalias !22
  %172 = getelementptr i16, i16* %165, i64 8
  %173 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %173, align 2, !alias.scope !25, !noalias !22
  %174 = or i64 %162, 16
  %175 = getelementptr i16, i16* %138, i64 %174
  %176 = getelementptr i16, i16* %137, i64 %174
  %177 = bitcast i16* %175 to <8 x i16>*
  %178 = load <8 x i16>, <8 x i16>* %177, align 2, !alias.scope !22
  %179 = getelementptr i16, i16* %175, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !22
  %182 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> %178, <8 x i16>* %182, align 2, !alias.scope !25, !noalias !22
  %183 = getelementptr i16, i16* %176, i64 8
  %184 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %184, align 2, !alias.scope !25, !noalias !22
  %185 = or i64 %162, 32
  %186 = getelementptr i16, i16* %138, i64 %185
  %187 = getelementptr i16, i16* %137, i64 %185
  %188 = bitcast i16* %186 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !22
  %190 = getelementptr i16, i16* %186, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !22
  %193 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2, !alias.scope !25, !noalias !22
  %194 = getelementptr i16, i16* %187, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %195, align 2, !alias.scope !25, !noalias !22
  %196 = or i64 %162, 48
  %197 = getelementptr i16, i16* %138, i64 %196
  %198 = getelementptr i16, i16* %137, i64 %196
  %199 = bitcast i16* %197 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !22
  %201 = getelementptr i16, i16* %197, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !22
  %204 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %204, align 2, !alias.scope !25, !noalias !22
  %205 = getelementptr i16, i16* %198, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %206, align 2, !alias.scope !25, !noalias !22
  %207 = add i64 %162, 64
  %208 = add i64 %163, -4
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %161, !llvm.loop !27

210:                                              ; preds = %161, %149
  %211 = phi i64 [ 0, %149 ], [ %207, %161 ]
  %212 = icmp eq i64 %157, 0
  br i1 %212, label %229, label %213

213:                                              ; preds = %210, %213
  %214 = phi i64 [ %226, %213 ], [ %211, %210 ]
  %215 = phi i64 [ %227, %213 ], [ %157, %210 ]
  %216 = getelementptr i16, i16* %138, i64 %214
  %217 = getelementptr i16, i16* %137, i64 %214
  %218 = bitcast i16* %216 to <8 x i16>*
  %219 = load <8 x i16>, <8 x i16>* %218, align 2, !alias.scope !22
  %220 = getelementptr i16, i16* %216, i64 8
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !22
  %223 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %219, <8 x i16>* %223, align 2, !alias.scope !25, !noalias !22
  %224 = getelementptr i16, i16* %217, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %225, align 2, !alias.scope !25, !noalias !22
  %226 = add i64 %214, 16
  %227 = add i64 %215, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %213, !llvm.loop !28

229:                                              ; preds = %213, %210
  %230 = icmp eq i64 %134, %150
  br i1 %230, label %450, label %231

231:                                              ; preds = %229, %142, %140
  %232 = phi i64 [ %134, %142 ], [ %134, %140 ], [ %151, %229 ]
  %233 = phi i16* [ %138, %142 ], [ %138, %140 ], [ %152, %229 ]
  %234 = phi i16* [ %137, %142 ], [ %137, %140 ], [ %153, %229 ]
  %235 = add i64 %232, -1
  %236 = and i64 %232, 7
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %249, label %238

238:                                              ; preds = %231, %238
  %239 = phi i64 [ %244, %238 ], [ %232, %231 ]
  %240 = phi i16* [ %246, %238 ], [ %233, %231 ]
  %241 = phi i16* [ %245, %238 ], [ %234, %231 ]
  %242 = phi i64 [ %247, %238 ], [ %236, %231 ]
  %243 = load i16, i16* %240, align 2
  store i16 %243, i16* %241, align 2
  %244 = add i64 %239, -1
  %245 = getelementptr inbounds i16, i16* %241, i64 1
  %246 = getelementptr inbounds i16, i16* %240, i64 1
  %247 = add i64 %242, -1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %238, !llvm.loop !29

249:                                              ; preds = %238, %231
  %250 = phi i64 [ %232, %231 ], [ %244, %238 ]
  %251 = phi i16* [ %233, %231 ], [ %246, %238 ]
  %252 = phi i16* [ %234, %231 ], [ %245, %238 ]
  %253 = icmp ult i64 %235, 7
  br i1 %253, label %450, label %254

254:                                              ; preds = %249, %254
  %255 = phi i64 [ %280, %254 ], [ %250, %249 ]
  %256 = phi i16* [ %282, %254 ], [ %251, %249 ]
  %257 = phi i16* [ %281, %254 ], [ %252, %249 ]
  %258 = load i16, i16* %256, align 2
  store i16 %258, i16* %257, align 2
  %259 = getelementptr inbounds i16, i16* %257, i64 1
  %260 = getelementptr inbounds i16, i16* %256, i64 1
  %261 = load i16, i16* %260, align 2
  store i16 %261, i16* %259, align 2
  %262 = getelementptr inbounds i16, i16* %257, i64 2
  %263 = getelementptr inbounds i16, i16* %256, i64 2
  %264 = load i16, i16* %263, align 2
  store i16 %264, i16* %262, align 2
  %265 = getelementptr inbounds i16, i16* %257, i64 3
  %266 = getelementptr inbounds i16, i16* %256, i64 3
  %267 = load i16, i16* %266, align 2
  store i16 %267, i16* %265, align 2
  %268 = getelementptr inbounds i16, i16* %257, i64 4
  %269 = getelementptr inbounds i16, i16* %256, i64 4
  %270 = load i16, i16* %269, align 2
  store i16 %270, i16* %268, align 2
  %271 = getelementptr inbounds i16, i16* %257, i64 5
  %272 = getelementptr inbounds i16, i16* %256, i64 5
  %273 = load i16, i16* %272, align 2
  store i16 %273, i16* %271, align 2
  %274 = getelementptr inbounds i16, i16* %257, i64 6
  %275 = getelementptr inbounds i16, i16* %256, i64 6
  %276 = load i16, i16* %275, align 2
  store i16 %276, i16* %274, align 2
  %277 = getelementptr inbounds i16, i16* %257, i64 7
  %278 = getelementptr inbounds i16, i16* %256, i64 7
  %279 = load i16, i16* %278, align 2
  store i16 %279, i16* %277, align 2
  %280 = add i64 %255, -8
  %281 = getelementptr inbounds i16, i16* %257, i64 8
  %282 = getelementptr inbounds i16, i16* %256, i64 8
  %283 = icmp eq i64 %280, 0
  br i1 %283, label %450, label %254, !llvm.loop !30

284:                                              ; preds = %136
  %285 = icmp slt i64 %133, 0
  br i1 %285, label %286, label %450

286:                                              ; preds = %284
  %287 = getelementptr inbounds i16, i16* %138, i64 %134
  %288 = getelementptr inbounds i16, i16* %137, i64 %134
  %289 = icmp ult i64 %134, 16
  br i1 %289, label %397, label %290

290:                                              ; preds = %286
  %291 = add i64 %129, -1
  %292 = sub i64 %291, %112
  %293 = sub i64 %292, %133
  %294 = sub i64 %291, %133
  %295 = getelementptr i16, i16* %130, i64 %294
  %296 = ptrtoint i16* %295 to i64
  %297 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %293, i64 2)
  %298 = extractvalue { i64, i1 } %297, 0
  %299 = extractvalue { i64, i1 } %297, 1
  %300 = icmp ugt i64 %298, %296
  %301 = or i1 %300, %299
  %302 = add i64 %129, -1
  %303 = getelementptr i16, i16* %130, i64 %302
  %304 = ptrtoint i16* %303 to i64
  %305 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %293, i64 2)
  %306 = extractvalue { i64, i1 } %305, 0
  %307 = extractvalue { i64, i1 } %305, 1
  %308 = icmp ugt i64 %306, %304
  %309 = or i1 %308, %307
  %310 = or i1 %301, %309
  br i1 %310, label %397, label %311

311:                                              ; preds = %290
  %312 = add i64 %112, %133
  %313 = getelementptr i16, i16* %130, i64 %312
  %314 = icmp ult i16* %137, %287
  %315 = icmp ult i16* %313, %288
  %316 = and i1 %314, %315
  br i1 %316, label %397, label %317

317:                                              ; preds = %311
  %318 = and i64 %134, -16
  %319 = sub i64 %134, %318
  %320 = sub i64 0, %318
  %321 = getelementptr i16, i16* %287, i64 %320
  %322 = sub i64 0, %318
  %323 = getelementptr i16, i16* %288, i64 %322
  %324 = add i64 %318, -16
  %325 = lshr exact i64 %324, 4
  %326 = add nuw nsw i64 %325, 1
  %327 = and i64 %326, 1
  %328 = icmp eq i64 %324, 0
  br i1 %328, label %375, label %329

329:                                              ; preds = %317
  %330 = sub nuw nsw i64 %326, %327
  %331 = getelementptr i16, i16* %287, i64 -1
  %332 = getelementptr i16, i16* %288, i64 -1
  %333 = getelementptr i16, i16* %287, i64 -1
  %334 = getelementptr i16, i16* %288, i64 -1
  br label %335

335:                                              ; preds = %335, %329
  %336 = phi i64 [ 0, %329 ], [ %370, %335 ]
  %337 = phi i64 [ %330, %329 ], [ %371, %335 ]
  %338 = sub i64 0, %336
  %339 = sub i64 0, %336
  %340 = getelementptr inbounds i16, i16* %332, i64 %339
  %341 = getelementptr inbounds i16, i16* %331, i64 %338
  %342 = getelementptr inbounds i16, i16* %341, i64 -7
  %343 = bitcast i16* %342 to <8 x i16>*
  %344 = load <8 x i16>, <8 x i16>* %343, align 2, !alias.scope !31
  %345 = getelementptr inbounds i16, i16* %341, i64 -8
  %346 = getelementptr inbounds i16, i16* %345, i64 -7
  %347 = bitcast i16* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !31
  %349 = getelementptr inbounds i16, i16* %340, i64 -7
  %350 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %344, <8 x i16>* %350, align 2, !alias.scope !34, !noalias !31
  %351 = getelementptr inbounds i16, i16* %340, i64 -8
  %352 = getelementptr inbounds i16, i16* %351, i64 -7
  %353 = bitcast i16* %352 to <8 x i16>*
  store <8 x i16> %348, <8 x i16>* %353, align 2, !alias.scope !34, !noalias !31
  %354 = sub nuw nsw i64 -16, %336
  %355 = sub nuw nsw i64 -16, %336
  %356 = getelementptr inbounds i16, i16* %334, i64 %355
  %357 = getelementptr inbounds i16, i16* %333, i64 %354
  %358 = getelementptr inbounds i16, i16* %357, i64 -7
  %359 = bitcast i16* %358 to <8 x i16>*
  %360 = load <8 x i16>, <8 x i16>* %359, align 2, !alias.scope !31
  %361 = getelementptr inbounds i16, i16* %357, i64 -8
  %362 = getelementptr inbounds i16, i16* %361, i64 -7
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !31
  %365 = getelementptr inbounds i16, i16* %356, i64 -7
  %366 = bitcast i16* %365 to <8 x i16>*
  store <8 x i16> %360, <8 x i16>* %366, align 2, !alias.scope !34, !noalias !31
  %367 = getelementptr inbounds i16, i16* %356, i64 -8
  %368 = getelementptr inbounds i16, i16* %367, i64 -7
  %369 = bitcast i16* %368 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %369, align 2, !alias.scope !34, !noalias !31
  %370 = add i64 %336, 32
  %371 = add i64 %337, -2
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %373, label %335, !llvm.loop !36

373:                                              ; preds = %335
  %374 = sub nuw nsw i64 -32, %336
  br label %375

375:                                              ; preds = %373, %317
  %376 = phi i64 [ 0, %317 ], [ %374, %373 ]
  %377 = icmp eq i64 %327, 0
  br i1 %377, label %395, label %378

378:                                              ; preds = %375
  %379 = getelementptr i16, i16* %287, i64 -1
  %380 = getelementptr i16, i16* %288, i64 -1
  %381 = getelementptr inbounds i16, i16* %380, i64 %376
  %382 = getelementptr inbounds i16, i16* %379, i64 %376
  %383 = getelementptr inbounds i16, i16* %382, i64 -7
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !31
  %386 = getelementptr inbounds i16, i16* %382, i64 -8
  %387 = getelementptr inbounds i16, i16* %386, i64 -7
  %388 = bitcast i16* %387 to <8 x i16>*
  %389 = load <8 x i16>, <8 x i16>* %388, align 2, !alias.scope !31
  %390 = getelementptr inbounds i16, i16* %381, i64 -7
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %391, align 2, !alias.scope !34, !noalias !31
  %392 = getelementptr inbounds i16, i16* %381, i64 -8
  %393 = getelementptr inbounds i16, i16* %392, i64 -7
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %389, <8 x i16>* %394, align 2, !alias.scope !34, !noalias !31
  br label %395

395:                                              ; preds = %375, %378
  %396 = icmp eq i64 %134, %318
  br i1 %396, label %450, label %397

397:                                              ; preds = %395, %311, %290, %286
  %398 = phi i64 [ %134, %311 ], [ %134, %290 ], [ %134, %286 ], [ %319, %395 ]
  %399 = phi i16* [ %287, %311 ], [ %287, %290 ], [ %287, %286 ], [ %321, %395 ]
  %400 = phi i16* [ %288, %311 ], [ %288, %290 ], [ %288, %286 ], [ %323, %395 ]
  %401 = add i64 %398, -1
  %402 = and i64 %398, 7
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %415, label %404

404:                                              ; preds = %397, %404
  %405 = phi i64 [ %412, %404 ], [ %398, %397 ]
  %406 = phi i16* [ %410, %404 ], [ %399, %397 ]
  %407 = phi i16* [ %409, %404 ], [ %400, %397 ]
  %408 = phi i64 [ %413, %404 ], [ %402, %397 ]
  %409 = getelementptr inbounds i16, i16* %407, i64 -1
  %410 = getelementptr inbounds i16, i16* %406, i64 -1
  %411 = load i16, i16* %410, align 2
  store i16 %411, i16* %409, align 2
  %412 = add i64 %405, -1
  %413 = add i64 %408, -1
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %404, !llvm.loop !37

415:                                              ; preds = %404, %397
  %416 = phi i64 [ %398, %397 ], [ %412, %404 ]
  %417 = phi i16* [ %399, %397 ], [ %410, %404 ]
  %418 = phi i16* [ %400, %397 ], [ %409, %404 ]
  %419 = icmp ult i64 %401, 7
  br i1 %419, label %450, label %420

420:                                              ; preds = %415, %420
  %421 = phi i64 [ %448, %420 ], [ %416, %415 ]
  %422 = phi i16* [ %446, %420 ], [ %417, %415 ]
  %423 = phi i16* [ %445, %420 ], [ %418, %415 ]
  %424 = getelementptr inbounds i16, i16* %423, i64 -1
  %425 = getelementptr inbounds i16, i16* %422, i64 -1
  %426 = load i16, i16* %425, align 2
  store i16 %426, i16* %424, align 2
  %427 = getelementptr inbounds i16, i16* %423, i64 -2
  %428 = getelementptr inbounds i16, i16* %422, i64 -2
  %429 = load i16, i16* %428, align 2
  store i16 %429, i16* %427, align 2
  %430 = getelementptr inbounds i16, i16* %423, i64 -3
  %431 = getelementptr inbounds i16, i16* %422, i64 -3
  %432 = load i16, i16* %431, align 2
  store i16 %432, i16* %430, align 2
  %433 = getelementptr inbounds i16, i16* %423, i64 -4
  %434 = getelementptr inbounds i16, i16* %422, i64 -4
  %435 = load i16, i16* %434, align 2
  store i16 %435, i16* %433, align 2
  %436 = getelementptr inbounds i16, i16* %423, i64 -5
  %437 = getelementptr inbounds i16, i16* %422, i64 -5
  %438 = load i16, i16* %437, align 2
  store i16 %438, i16* %436, align 2
  %439 = getelementptr inbounds i16, i16* %423, i64 -6
  %440 = getelementptr inbounds i16, i16* %422, i64 -6
  %441 = load i16, i16* %440, align 2
  store i16 %441, i16* %439, align 2
  %442 = getelementptr inbounds i16, i16* %423, i64 -7
  %443 = getelementptr inbounds i16, i16* %422, i64 -7
  %444 = load i16, i16* %443, align 2
  store i16 %444, i16* %442, align 2
  %445 = getelementptr inbounds i16, i16* %423, i64 -8
  %446 = getelementptr inbounds i16, i16* %422, i64 -8
  %447 = load i16, i16* %446, align 2
  store i16 %447, i16* %445, align 2
  %448 = add i64 %421, -8
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %420, !llvm.loop !38

450:                                              ; preds = %415, %420, %249, %254, %395, %229, %284, %125
  %451 = sub i64 %129, %133
  %452 = load i8, i8* %4, align 1
  %453 = icmp slt i8 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %450
  store i64 %451, i64* %9, align 8
  br label %457

455:                                              ; preds = %450
  %456 = trunc i64 %451 to i8
  store i8 %456, i8* %4, align 1
  br label %457

457:                                              ; preds = %455, %454
  %458 = getelementptr inbounds i16, i16* %130, i64 %451
  store i16 0, i16* %458, align 2
  br label %459

459:                                              ; preds = %117, %119, %122, %457
  ret i64 %108

460:                                              ; preds = %81
  %461 = inttoptr i64 %82 to i16*
  store i16 %84, i16* %461, align 2
  %462 = getelementptr inbounds i16, i16* %461, i64 1
  %463 = ptrtoint i16* %462 to i64
  br label %464

464:                                              ; preds = %460, %81
  %465 = phi i64 [ %82, %81 ], [ %463, %460 ]
  %466 = getelementptr inbounds i16, i16* %70, i64 2
  %467 = load i16, i16* %466, align 2
  %468 = zext i16 %467 to i32
  %469 = load i8, i8* %1, align 1
  %470 = sext i8 %469 to i32
  %471 = icmp eq i32 %468, %470
  br i1 %471, label %476, label %472

472:                                              ; preds = %464
  %473 = inttoptr i64 %465 to i16*
  store i16 %467, i16* %473, align 2
  %474 = getelementptr inbounds i16, i16* %473, i64 1
  %475 = ptrtoint i16* %474 to i64
  br label %476

476:                                              ; preds = %472, %464
  %477 = phi i64 [ %465, %464 ], [ %475, %472 ]
  %478 = getelementptr inbounds i16, i16* %70, i64 3
  %479 = load i16, i16* %478, align 2
  %480 = zext i16 %479 to i32
  %481 = load i8, i8* %1, align 1
  %482 = sext i8 %481 to i32
  %483 = icmp eq i32 %480, %482
  br i1 %483, label %488, label %484

484:                                              ; preds = %476
  %485 = inttoptr i64 %477 to i16*
  store i16 %479, i16* %485, align 2
  %486 = getelementptr inbounds i16, i16* %485, i64 1
  %487 = ptrtoint i16* %486 to i64
  br label %488

488:                                              ; preds = %484, %476
  %489 = phi i64 [ %477, %476 ], [ %487, %484 ]
  %490 = getelementptr inbounds i16, i16* %70, i64 4
  %491 = icmp eq i16* %490, %15
  br i1 %491, label %89, label %69
}

declare double @_ZN9commander11FuzzyFinder4FindERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"class.commander::FuzzyFinder"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.14"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2ui11AcceleratorC1Ev(%"class.ui::Accelerator"*) unnamed_addr #4

declare %"class.ui::AcceleratorProvider"* @_ZN6chrome29AcceleratorProviderForBrowserEP7Browser(%class.Browser*) local_unnamed_addr #4

declare void @_ZNK2ui11Accelerator15GetShortcutTextEv(%"class.std::__1::basic_string"* sret, %"class.ui::Accelerator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander19SimpleCommandSource14ExecuteCommandEP7Browseri(%"class.commander::SimpleCommandSource"* nocapture readnone, %class.Browser*, i32) #0 align 2 {
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %5 = tail call zeroext i1 @_ZN6chrome14ExecuteCommandEP7BrowseriN4base9TimeTicksE(%class.Browser* %1, i32 %2, i64 %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui11AcceleratorD1Ev(%"class.ui::Accelerator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9commander11FuzzyFinderD1Ev(%"class.commander::FuzzyFinder"*) unnamed_addr #2

declare zeroext i1 @_ZN6chrome14ExecuteCommandEP7BrowseriN4base9TimeTicksE(%class.Browser*, i32, i64) local_unnamed_addr #4

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

declare void @_ZN9commander11CommandItemC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEdRKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEE(%"struct.commander::CommandItem"*, %"class.std::__1::basic_string"* dereferenceable(24), double, %"class.std::__1::vector.14"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %class.Browser**
  %7 = load %class.Browser*, %class.Browser** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i32*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %11, label %12, label %48

12:                                               ; preds = %1
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.commander::SimpleCommandSource"**
  %15 = load %"class.commander::SimpleCommandSource"*, %"class.commander::SimpleCommandSource"** %14, align 8
  %16 = icmp eq %"class.commander::SimpleCommandSource"* %15, null
  br i1 %16, label %48, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i64 0, i64 0)) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %27

27:                                               ; preds = %24, %17
  %28 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  %29 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = select i1 %28, i8* %30, i8* null
  %32 = getelementptr inbounds i8, i8* %31, i64 %22
  %33 = bitcast i8* %32 to %"class.commander::SimpleCommandSource"*
  %34 = and i64 %19, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = bitcast i8* %32 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = add i64 %19, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to void (%"class.commander::SimpleCommandSource"*, %class.Browser*, i32)**
  %42 = load void (%"class.commander::SimpleCommandSource"*, %class.Browser*, i32)*, void (%"class.commander::SimpleCommandSource"*, %class.Browser*, i32)** %41, align 8
  br label %45

43:                                               ; preds = %27
  %44 = inttoptr i64 %19 to void (%"class.commander::SimpleCommandSource"*, %class.Browser*, i32)*
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi void (%"class.commander::SimpleCommandSource"*, %class.Browser*, i32)* [ %42, %36 ], [ %44, %43 ]
  %47 = load i32, i32* %9, align 4
  call void %46(%"class.commander::SimpleCommandSource"* %33, %class.Browser* %7, i32 %47) #10
  br label %48

48:                                               ; preds = %1, %12, %45
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS3_EENS0_17UnretainedWrapperIS4_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN9commander19SimpleCommandSourceEFvP7BrowseriEJNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EEiEEEEEbPKNS0_13BindStateBaseENSE_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.commander::SimpleCommandSource"**
  %9 = load %"class.commander::SimpleCommandSource"*, %"class.commander::SimpleCommandSource"** %8, align 8
  %10 = icmp ne %"class.commander::SimpleCommandSource"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16variant_internal18VisitIndicesSwitchILm2EE3RunINS0_17VariantCoreAccess23ConversionAssignVisitorINS_7variantIJN4base12OnceCallbackIFvvEEENSt3__14pairINSB_12basic_stringIDsNSB_11char_traitsIDsEENSB_9allocatorIDsEEEENS7_17RepeatingCallbackIFNSB_6vectorINSB_10unique_ptrIN9commander11CommandItemENSB_14default_deleteISN_EEEENSG_ISQ_EEEERKSI_EEEEEEEESA_EEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOS11_m(%"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* dereferenceable(16), i64) local_unnamed_addr #0 comdat align 2 {
  switch i64 %1, label %34 [
    i64 0, label %3
    i64 1, label %11
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %5 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %4, align 8
  %6 = bitcast %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0 to %"class.base::OnceCallback"**
  %7 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %6, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %8, %"class.base::internal::CallbackBase"* dereferenceable(8) %9) #10
  br label %57

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 0
  %13 = load %"class.absl::variant"*, %"class.absl::variant"** %12, align 8
  %14 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %15 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %14, align 8
  %16 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %29 [
    i64 0, label %18
    i64 1, label %20
  ]

18:                                               ; preds = %11
  %19 = bitcast %"class.absl::variant"* %13 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %19) #10
  br label %29

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #10
  %22 = bitcast %"class.absl::variant"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.absl::variant"* %13 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %11, %18, %20, %26
  store i64 -1, i64* %16, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %15 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.absl::variant"* %13 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  store i64 0, i64* %16, align 8
  br label %57

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 0
  %36 = load %"class.absl::variant"*, %"class.absl::variant"** %35, align 8
  %37 = getelementptr inbounds %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor", %"struct.absl::variant_internal::VariantCoreAccess::ConversionAssignVisitor"* %0, i64 0, i32 1
  %38 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %37, align 8
  %39 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %52 [
    i64 0, label %41
    i64 1, label %43
  ]

41:                                               ; preds = %34
  %42 = bitcast %"class.absl::variant"* %36 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %42) #10
  br label %52

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.absl::variant", %"class.absl::variant"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %44) #10
  %45 = bitcast %"class.absl::variant"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = bitcast %"class.absl::variant"* %36 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %34, %41, %43, %49
  store i64 -1, i64* %39, align 8
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %38, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.base::OnceCallback"* %38 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.absl::variant"* %36 to i64*
  store i64 %55, i64* %56, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %53, align 8
  store i64 0, i64* %39, align 8
  br label %57

57:                                               ; preds = %52, %29, %3
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN9commander11CommandItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"struct.commander::CommandItem"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !39

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"struct.commander::CommandItem"*, %"struct.commander::CommandItem"** %142, align 8
  store %"struct.commander::CommandItem"* null, %"struct.commander::CommandItem"** %142, align 8
  %144 = icmp eq %"struct.commander::CommandItem"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"struct.commander::CommandItem"* %143 to void (%"struct.commander::CommandItem"*)***
  %147 = load void (%"struct.commander::CommandItem"*)**, void (%"struct.commander::CommandItem"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %147, i64 1
  %149 = load void (%"struct.commander::CommandItem"*)*, void (%"struct.commander::CommandItem"*)** %148, align 8
  tail call void %149(%"struct.commander::CommandItem"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN9commander19SimpleCommandSourceEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN9commander19SimpleCommandSourceEE10GetWeakPtrEv"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !11}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9commander19SimpleCommandSourceEFvP7BrowseriEJRKNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EERKiEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN9commander19SimpleCommandSourceEFvP7BrowseriEJRKNS_7WeakPtrIS4_EENS0_17UnretainedWrapperIS5_EERKiEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN9commander19SimpleCommandSourceEFvP7BrowseriEJRKNS_7WeakPtrIS2_EENS_8internal17UnretainedWrapperIS3_EERKiEEENS_12OnceCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN9commander19SimpleCommandSourceEFvP7BrowseriEJRKNS_7WeakPtrIS2_EENS_8internal17UnretainedWrapperIS3_EERKiEEENS_12OnceCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!21 = distinct !{!21, !13}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !13}
!29 = distinct !{!29, !13}
!30 = distinct !{!30, !11}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !11}
!37 = distinct !{!37, !13}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !13}
